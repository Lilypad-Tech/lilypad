package resourceprovider

import (
	"encoding/hex"
	"math/big"
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_calculateHashNumber(t *testing.T) {

	tests := []struct {
		challenge string
		nonce     string
		result    string
	}{
		{
			challenge: "fee0189632650f971536773d9a1b206be28e51d05ba0cb69822a510c51fb6fd3",
			nonce:     "72370055773322622139731865630429942408293740416025352524660990004945723953319",
			result:    "443192418834346142200278491975317489603423531200023451519802250835435",
		},
		{
			challenge: "2e4ca2481a7be8a4eb273f51f6a0c2fdd087b6b8c454f8b01ef0a3363a2af5b1",
			nonce:     "43422033463993573283839119378257965444976244249615211514796594002967424872419",
			result:    "966523245404442851743534066101454470539015745906990078402535205323382",
		},
		{
			challenge: "cdcb7ff1ccb65cdd1661b2a6b5fa1ffdacf19a54a27f4952cb6644886067f17c",
			nonce:     "43422033463993573283839119378257965444976244249615211514796594002967433208574",
			result:    "1225814827806205369719164951622401381020286900751508648540622349987995",
		},
		{
			challenge: "41d8a811d0fac25ae964f2a66b72a75ef56e380193b4b9315c95e9f376b3520c",
			nonce:     "14474011154664524427946373126085988481658748083205070504932198000989144913512",
			result:    "1245769273639839946721104142883832711130622692430288604267098849208328",
		},
		{
			challenge: "c80b5f6fa9238340755ab73bc582fbfa7f2c0bac7ba0c9a6b3a5aa3deac654b7",
			nonce:     "86844066927987146567678238756515930889952488499230423029593188005934847872312",
			result:    "1238685072653949948997777229152894470424591172536960512507902649468771",
		},
		{
			challenge: "11a6a01d551d3b67ff379de86cc8925d7263699e1ef1d8d354d8cce4afbc5a8e",
			nonce:     "43422033463993573283839119378257965444976244249615211514796594002967425219662",
			result:    "307594137868831890037396147605669724284685912141686536312861196068997",
		},
		{
			challenge: "b6967add4ca8b402608442711c099f600fc28b76ab52f9ba8893227609b398a7",
			nonce:     "72370055773322622139731865630429942408293740416025352524660990004945710021932",
			result:    "943810406337730927560330742607005762315190954137845505028145584660526",
		},
	}
	for _, tt := range tests {

		challenge := [32]byte{}
		_, err := hex.Decode(challenge[:], []byte(tt.challenge))
		assert.Nil(t, err)

		nonce, ok := new(big.Int).SetString(tt.nonce, 10)
		assert.True(t, ok)
		got, err := calculateHashNumber(challenge, nonce)
		assert.Nil(t, err)
		assert.Equal(t, tt.result, got.String())
	}
}
