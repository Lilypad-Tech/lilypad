//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	kernel_keccak_hash
.const .align 8 .b8 CUDA_KECCAK_CONSTS[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};

.visible .entry kernel_keccak_hash(
	.param .u64 kernel_keccak_hash_param_0,
	.param .u32 kernel_keccak_hash_param_1,
	.param .u64 kernel_keccak_hash_param_2,
	.param .u32 kernel_keccak_hash_param_3,
	.param .u32 kernel_keccak_hash_param_4
)
{
	.local .align 8 .b8 	__local_depot0[432];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<652>;
	.reg .b64 	%rd<1818>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd482, [kernel_keccak_hash_param_0];
	ld.param.u32 	%r28, [kernel_keccak_hash_param_1];
	ld.param.u64 	%rd483, [kernel_keccak_hash_param_2];
	ld.param.u32 	%r30, [kernel_keccak_hash_param_3];
	ld.param.u32 	%r29, [kernel_keccak_hash_param_4];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %ctaid.x;
	mov.u32 	%r33, %tid.x;
	mad.lo.s32 	%r1, %r32, %r31, %r33;
	setp.ge.u32 	%p3, %r1, %r30;
	@%p3 bra 	$L__BB0_72;

	cvta.to.global.u64 	%rd2, %rd483;
	cvta.to.global.u64 	%rd3, %rd482;
	mul.lo.s32 	%r34, %r1, %r28;
	cvt.u64.u32 	%rd4, %r34;
	mul.lo.s32 	%r35, %r1, %r29;
	cvt.u64.u32 	%rd5, %r35;
	shl.b32 	%r2, %r29, 3;
	mov.u64 	%rd1653, 0;

$L__BB0_2:
	add.s64 	%rd1653, %rd1653, 1;
	add.s64 	%rd486, %rd1, %rd1653;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd486], %rs1;
	setp.lt.u64 	%p4, %rd1653, 423;
	@%p4 bra 	$L__BB0_2;

	mov.u64 	%rd1717, 0;
	st.local.u8 	[%rd1], %rs1;
	st.local.u32 	[%rd1+4], %r2;
	shl.b32 	%r36, %r29, 4;
	mov.u32 	%r37, 1600;
	sub.s32 	%r38, %r37, %r36;
	cvt.u64.u32 	%rd488, %r38;
	st.local.u64 	[%rd1+8], %rd488;
	shr.u64 	%rd489, %rd488, 3;
	st.local.u64 	[%rd1+16], %rd489;
	shr.u64 	%rd490, %rd488, 6;
	st.local.u64 	[%rd1+24], %rd490;
	st.local.u64 	[%rd1+424], %rd1717;
	cvt.u64.u32 	%rd9, %r28;
	setp.eq.s32 	%p6, %r28, 0;
	mov.pred 	%p49, -1;
	@%p6 bra 	$L__BB0_26;

	add.s64 	%rd10, %rd3, %rd4;
	mov.u64 	%rd1716, %rd1717;

$L__BB0_5:
	ld.local.u64 	%rd1688, [%rd1+16];
	sub.s64 	%rd493, %rd9, %rd1688;
	setp.gt.s64 	%p7, %rd1717, %rd493;
	setp.ne.s64 	%p8, %rd1716, 0;
	or.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_6;

$L__BB0_13:
	sub.s64 	%rd650, %rd1688, %rd1716;
	sub.s64 	%rd651, %rd9, %rd1717;
	min.s64 	%rd102, %rd650, %rd651;
	setp.eq.s64 	%p14, %rd102, 0;
	@%p14 bra 	$L__BB0_17;

	add.s64 	%rd103, %rd1717, %rd4;
	mov.u64 	%rd1687, 0;

$L__BB0_15:
	add.s64 	%rd653, %rd103, %rd1687;
	add.s64 	%rd654, %rd3, %rd653;
	ld.global.u8 	%rs3, [%rd654];
	add.s64 	%rd655, %rd1716, %rd1687;
	add.s64 	%rd656, %rd1, %rd655;
	st.local.u8 	[%rd656+232], %rs3;
	add.s64 	%rd1687, %rd1687, 1;
	setp.lt.u64 	%p15, %rd1687, %rd102;
	@%p15 bra 	$L__BB0_15;

	ld.local.u64 	%rd1688, [%rd1+16];

$L__BB0_17:
	add.s64 	%rd1717, %rd102, %rd1717;
	add.s64 	%rd1716, %rd102, %rd1716;
	setp.ne.s64 	%p16, %rd1716, %rd1688;
	@%p16 bra 	$L__BB0_24;

	ld.local.u64 	%rd657, [%rd1+24];
	setp.eq.s64 	%p17, %rd657, 0;
	@%p17 bra 	$L__BB0_21;

	mov.u64 	%rd1689, 0;
	mov.u64 	%rd1690, %rd1689;

$L__BB0_20:
	add.s64 	%rd660, %rd1, %rd1690;
	ld.local.u64 	%rd661, [%rd660+32];
	ld.local.u8 	%rd662, [%rd660+232];
	ld.local.u8 	%rd663, [%rd660+233];
	bfi.b64 	%rd664, %rd663, %rd662, 8, 8;
	ld.local.u8 	%rd665, [%rd660+234];
	ld.local.u8 	%rd666, [%rd660+235];
	bfi.b64 	%rd667, %rd666, %rd665, 8, 8;
	bfi.b64 	%rd668, %rd667, %rd664, 16, 16;
	ld.local.u8 	%rd669, [%rd660+236];
	ld.local.u8 	%rd670, [%rd660+237];
	bfi.b64 	%rd671, %rd670, %rd669, 8, 8;
	ld.local.u8 	%rd672, [%rd660+238];
	ld.local.u8 	%rd673, [%rd660+239];
	bfi.b64 	%rd674, %rd673, %rd672, 8, 8;
	bfi.b64 	%rd675, %rd674, %rd671, 16, 16;
	bfi.b64 	%rd676, %rd675, %rd668, 32, 32;
	xor.b64  	%rd677, %rd661, %rd676;
	st.local.u64 	[%rd660+32], %rd677;
	add.s64 	%rd1690, %rd1690, 8;
	ld.local.u64 	%rd678, [%rd1+24];
	add.s64 	%rd1689, %rd1689, 1;
	setp.lt.u64 	%p18, %rd1689, %rd678;
	@%p18 bra 	$L__BB0_20;

$L__BB0_21:
	ld.local.u64 	%rd1715, [%rd1+32];
	ld.local.u64 	%rd1714, [%rd1+72];
	ld.local.u64 	%rd1713, [%rd1+112];
	ld.local.u64 	%rd1712, [%rd1+152];
	ld.local.u64 	%rd1711, [%rd1+192];
	ld.local.u64 	%rd1710, [%rd1+40];
	ld.local.u64 	%rd1709, [%rd1+80];
	ld.local.u64 	%rd1708, [%rd1+120];
	ld.local.u64 	%rd1707, [%rd1+160];
	ld.local.u64 	%rd1706, [%rd1+200];
	ld.local.u64 	%rd1705, [%rd1+48];
	ld.local.u64 	%rd1704, [%rd1+88];
	ld.local.u64 	%rd1703, [%rd1+128];
	ld.local.u64 	%rd1702, [%rd1+168];
	ld.local.u64 	%rd1701, [%rd1+208];
	ld.local.u64 	%rd1700, [%rd1+56];
	ld.local.u64 	%rd1699, [%rd1+96];
	ld.local.u64 	%rd1698, [%rd1+136];
	ld.local.u64 	%rd1697, [%rd1+176];
	ld.local.u64 	%rd1696, [%rd1+216];
	ld.local.u64 	%rd1695, [%rd1+64];
	ld.local.u64 	%rd1694, [%rd1+104];
	ld.local.u64 	%rd1693, [%rd1+144];
	ld.local.u64 	%rd1692, [%rd1+184];
	ld.local.u64 	%rd1691, [%rd1+224];
	mov.u32 	%r639, 0;

$L__BB0_22:
	xor.b64  	%rd679, %rd1714, %rd1715;
	xor.b64  	%rd680, %rd679, %rd1713;
	xor.b64  	%rd681, %rd680, %rd1712;
	xor.b64  	%rd682, %rd681, %rd1711;
	xor.b64  	%rd683, %rd1709, %rd1710;
	xor.b64  	%rd684, %rd683, %rd1708;
	xor.b64  	%rd685, %rd684, %rd1707;
	xor.b64  	%rd686, %rd685, %rd1706;
	xor.b64  	%rd687, %rd1704, %rd1705;
	xor.b64  	%rd688, %rd687, %rd1703;
	xor.b64  	%rd689, %rd688, %rd1702;
	xor.b64  	%rd690, %rd689, %rd1701;
	xor.b64  	%rd691, %rd1699, %rd1700;
	xor.b64  	%rd692, %rd691, %rd1698;
	xor.b64  	%rd693, %rd692, %rd1697;
	xor.b64  	%rd694, %rd693, %rd1696;
	xor.b64  	%rd695, %rd1694, %rd1695;
	xor.b64  	%rd696, %rd695, %rd1693;
	xor.b64  	%rd697, %rd696, %rd1692;
	xor.b64  	%rd698, %rd697, %rd1691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r158,%dummy}, %rd686;
	}
	shf.l.wrap.b32 	%r159, %r158, %r157, 1;
	shf.l.wrap.b32 	%r160, %r157, %r158, 1;
	mov.b64 	%rd699, {%r160, %r159};
	xor.b64  	%rd700, %rd698, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd690;
	}
	shf.l.wrap.b32 	%r163, %r162, %r161, 1;
	shf.l.wrap.b32 	%r164, %r161, %r162, 1;
	mov.b64 	%rd701, {%r164, %r163};
	xor.b64  	%rd702, %rd701, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r166,%dummy}, %rd694;
	}
	shf.l.wrap.b32 	%r167, %r166, %r165, 1;
	shf.l.wrap.b32 	%r168, %r165, %r166, 1;
	mov.b64 	%rd703, {%r168, %r167};
	xor.b64  	%rd704, %rd703, %rd686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd698;
	}
	shf.l.wrap.b32 	%r171, %r170, %r169, 1;
	shf.l.wrap.b32 	%r172, %r169, %r170, 1;
	mov.b64 	%rd705, {%r172, %r171};
	xor.b64  	%rd706, %rd705, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r174,%dummy}, %rd682;
	}
	shf.l.wrap.b32 	%r175, %r174, %r173, 1;
	shf.l.wrap.b32 	%r176, %r173, %r174, 1;
	mov.b64 	%rd707, {%r176, %r175};
	xor.b64  	%rd708, %rd694, %rd707;
	xor.b64  	%rd709, %rd700, %rd1715;
	xor.b64  	%rd710, %rd1714, %rd700;
	xor.b64  	%rd711, %rd1713, %rd700;
	xor.b64  	%rd712, %rd1712, %rd700;
	xor.b64  	%rd713, %rd1711, %rd700;
	xor.b64  	%rd714, %rd1710, %rd702;
	xor.b64  	%rd715, %rd1709, %rd702;
	xor.b64  	%rd716, %rd1708, %rd702;
	xor.b64  	%rd717, %rd1707, %rd702;
	xor.b64  	%rd718, %rd1706, %rd702;
	xor.b64  	%rd719, %rd1705, %rd704;
	xor.b64  	%rd720, %rd1704, %rd704;
	xor.b64  	%rd721, %rd1703, %rd704;
	xor.b64  	%rd722, %rd1702, %rd704;
	xor.b64  	%rd723, %rd1701, %rd704;
	xor.b64  	%rd724, %rd1700, %rd706;
	xor.b64  	%rd725, %rd1699, %rd706;
	xor.b64  	%rd726, %rd1698, %rd706;
	xor.b64  	%rd727, %rd1697, %rd706;
	xor.b64  	%rd728, %rd1696, %rd706;
	xor.b64  	%rd729, %rd1695, %rd708;
	xor.b64  	%rd730, %rd1694, %rd708;
	xor.b64  	%rd731, %rd1693, %rd708;
	xor.b64  	%rd732, %rd1692, %rd708;
	xor.b64  	%rd733, %rd1691, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd714;
	}
	shf.l.wrap.b32 	%r179, %r178, %r177, 1;
	shf.l.wrap.b32 	%r180, %r177, %r178, 1;
	mov.b64 	%rd734, {%r180, %r179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd715;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 20;
	shf.r.wrap.b32 	%r184, %r181, %r182, 20;
	mov.b64 	%rd735, {%r184, %r183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd730;
	}
	shf.l.wrap.b32 	%r187, %r186, %r185, 20;
	shf.l.wrap.b32 	%r188, %r185, %r186, 20;
	mov.b64 	%rd736, {%r188, %r187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd723;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 3;
	shf.r.wrap.b32 	%r192, %r189, %r190, 3;
	mov.b64 	%rd737, {%r192, %r191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd731;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 25;
	shf.r.wrap.b32 	%r196, %r193, %r194, 25;
	mov.b64 	%rd738, {%r196, %r195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r198,%dummy}, %rd713;
	}
	shf.l.wrap.b32 	%r199, %r198, %r197, 18;
	shf.l.wrap.b32 	%r200, %r197, %r198, 18;
	mov.b64 	%rd739, {%r200, %r199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd719;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 2;
	shf.r.wrap.b32 	%r204, %r201, %r202, 2;
	mov.b64 	%rd740, {%r204, %r203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd721;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 21;
	shf.r.wrap.b32 	%r208, %r205, %r206, 21;
	mov.b64 	%rd741, {%r208, %r207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd726;
	}
	shf.l.wrap.b32 	%r211, %r210, %r209, 25;
	shf.l.wrap.b32 	%r212, %r209, %r210, 25;
	mov.b64 	%rd742, {%r212, %r211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r213}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r214,%dummy}, %rd732;
	}
	shf.l.wrap.b32 	%r215, %r214, %r213, 8;
	shf.l.wrap.b32 	%r216, %r213, %r214, 8;
	mov.b64 	%rd743, {%r216, %r215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd728;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 8;
	shf.r.wrap.b32 	%r220, %r217, %r218, 8;
	mov.b64 	%rd744, {%r220, %r219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd712;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 23;
	shf.r.wrap.b32 	%r224, %r221, %r222, 23;
	mov.b64 	%rd745, {%r224, %r223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd729;
	}
	shf.l.wrap.b32 	%r227, %r226, %r225, 27;
	shf.l.wrap.b32 	%r228, %r225, %r226, 27;
	mov.b64 	%rd746, {%r228, %r227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r230,%dummy}, %rd733;
	}
	shf.l.wrap.b32 	%r231, %r230, %r229, 14;
	shf.l.wrap.b32 	%r232, %r229, %r230, 14;
	mov.b64 	%rd747, {%r232, %r231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd718;
	}
	shf.l.wrap.b32 	%r235, %r234, %r233, 2;
	shf.l.wrap.b32 	%r236, %r233, %r234, 2;
	mov.b64 	%rd748, {%r236, %r235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd725;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 9;
	shf.r.wrap.b32 	%r240, %r237, %r238, 9;
	mov.b64 	%rd749, {%r240, %r239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd717;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 19;
	shf.r.wrap.b32 	%r244, %r241, %r242, 19;
	mov.b64 	%rd750, {%r244, %r243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd710;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 28;
	shf.r.wrap.b32 	%r248, %r245, %r246, 28;
	mov.b64 	%rd751, {%r248, %r247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd724;
	}
	shf.l.wrap.b32 	%r251, %r250, %r249, 28;
	shf.l.wrap.b32 	%r252, %r249, %r250, 28;
	mov.b64 	%rd752, {%r252, %r251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd727;
	}
	shf.l.wrap.b32 	%r255, %r254, %r253, 21;
	shf.l.wrap.b32 	%r256, %r253, %r254, 21;
	mov.b64 	%rd753, {%r256, %r255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd722;
	}
	shf.l.wrap.b32 	%r259, %r258, %r257, 15;
	shf.l.wrap.b32 	%r260, %r257, %r258, 15;
	mov.b64 	%rd754, {%r260, %r259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r262,%dummy}, %rd716;
	}
	shf.l.wrap.b32 	%r263, %r262, %r261, 10;
	shf.l.wrap.b32 	%r264, %r261, %r262, 10;
	mov.b64 	%rd755, {%r264, %r263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd720;
	}
	shf.l.wrap.b32 	%r267, %r266, %r265, 6;
	shf.l.wrap.b32 	%r268, %r265, %r266, 6;
	mov.b64 	%rd756, {%r268, %r267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r270,%dummy}, %rd711;
	}
	shf.l.wrap.b32 	%r271, %r270, %r269, 3;
	shf.l.wrap.b32 	%r272, %r269, %r270, 3;
	mov.b64 	%rd757, {%r272, %r271};
	not.b64 	%rd758, %rd735;
	and.b64  	%rd759, %rd741, %rd758;
	xor.b64  	%rd760, %rd759, %rd709;
	not.b64 	%rd761, %rd741;
	and.b64  	%rd762, %rd753, %rd761;
	xor.b64  	%rd1710, %rd762, %rd735;
	not.b64 	%rd763, %rd753;
	and.b64  	%rd764, %rd747, %rd763;
	xor.b64  	%rd1705, %rd741, %rd764;
	not.b64 	%rd765, %rd747;
	and.b64  	%rd766, %rd709, %rd765;
	xor.b64  	%rd1700, %rd753, %rd766;
	not.b64 	%rd767, %rd709;
	and.b64  	%rd768, %rd735, %rd767;
	xor.b64  	%rd1695, %rd747, %rd768;
	not.b64 	%rd769, %rd736;
	and.b64  	%rd770, %rd757, %rd769;
	xor.b64  	%rd1714, %rd770, %rd752;
	not.b64 	%rd771, %rd757;
	and.b64  	%rd772, %rd750, %rd771;
	xor.b64  	%rd1709, %rd772, %rd736;
	not.b64 	%rd773, %rd750;
	and.b64  	%rd774, %rd737, %rd773;
	xor.b64  	%rd1704, %rd757, %rd774;
	not.b64 	%rd775, %rd737;
	and.b64  	%rd776, %rd752, %rd775;
	xor.b64  	%rd1699, %rd750, %rd776;
	not.b64 	%rd777, %rd752;
	and.b64  	%rd778, %rd736, %rd777;
	xor.b64  	%rd1694, %rd737, %rd778;
	not.b64 	%rd779, %rd756;
	and.b64  	%rd780, %rd742, %rd779;
	xor.b64  	%rd1713, %rd780, %rd734;
	not.b64 	%rd781, %rd742;
	and.b64  	%rd782, %rd743, %rd781;
	xor.b64  	%rd1708, %rd782, %rd756;
	not.b64 	%rd783, %rd743;
	and.b64  	%rd784, %rd739, %rd783;
	xor.b64  	%rd1703, %rd742, %rd784;
	not.b64 	%rd785, %rd739;
	and.b64  	%rd786, %rd734, %rd785;
	xor.b64  	%rd1698, %rd743, %rd786;
	not.b64 	%rd787, %rd734;
	and.b64  	%rd788, %rd756, %rd787;
	xor.b64  	%rd1693, %rd739, %rd788;
	not.b64 	%rd789, %rd751;
	and.b64  	%rd790, %rd755, %rd789;
	xor.b64  	%rd1712, %rd790, %rd746;
	not.b64 	%rd791, %rd755;
	and.b64  	%rd792, %rd754, %rd791;
	xor.b64  	%rd1707, %rd792, %rd751;
	not.b64 	%rd793, %rd754;
	and.b64  	%rd794, %rd744, %rd793;
	xor.b64  	%rd1702, %rd755, %rd794;
	not.b64 	%rd795, %rd744;
	and.b64  	%rd796, %rd746, %rd795;
	xor.b64  	%rd1697, %rd754, %rd796;
	not.b64 	%rd797, %rd746;
	and.b64  	%rd798, %rd751, %rd797;
	xor.b64  	%rd1692, %rd744, %rd798;
	not.b64 	%rd799, %rd749;
	and.b64  	%rd800, %rd738, %rd799;
	xor.b64  	%rd1711, %rd800, %rd740;
	not.b64 	%rd801, %rd738;
	and.b64  	%rd802, %rd745, %rd801;
	xor.b64  	%rd1706, %rd802, %rd749;
	not.b64 	%rd803, %rd745;
	and.b64  	%rd804, %rd748, %rd803;
	xor.b64  	%rd1701, %rd738, %rd804;
	not.b64 	%rd805, %rd748;
	and.b64  	%rd806, %rd740, %rd805;
	xor.b64  	%rd1696, %rd745, %rd806;
	not.b64 	%rd807, %rd740;
	and.b64  	%rd808, %rd749, %rd807;
	xor.b64  	%rd1691, %rd748, %rd808;
	mul.wide.s32 	%rd809, %r639, 8;
	mov.u64 	%rd810, CUDA_KECCAK_CONSTS;
	add.s64 	%rd811, %rd810, %rd809;
	ld.const.u64 	%rd812, [%rd811];
	xor.b64  	%rd1715, %rd760, %rd812;
	add.s32 	%r639, %r639, 1;
	setp.ne.s32 	%p19, %r639, 24;
	@%p19 bra 	$L__BB0_22;

	mov.u64 	%rd1716, 0;
	st.local.u64 	[%rd1+32], %rd1715;
	st.local.u64 	[%rd1+72], %rd1714;
	st.local.u64 	[%rd1+112], %rd1713;
	st.local.u64 	[%rd1+152], %rd1712;
	st.local.u64 	[%rd1+192], %rd1711;
	st.local.u64 	[%rd1+40], %rd1710;
	st.local.u64 	[%rd1+80], %rd1709;
	st.local.u64 	[%rd1+120], %rd1708;
	st.local.u64 	[%rd1+160], %rd1707;
	st.local.u64 	[%rd1+200], %rd1706;
	st.local.u64 	[%rd1+48], %rd1705;
	st.local.u64 	[%rd1+88], %rd1704;
	st.local.u64 	[%rd1+128], %rd1703;
	st.local.u64 	[%rd1+168], %rd1702;
	st.local.u64 	[%rd1+208], %rd1701;
	st.local.u64 	[%rd1+56], %rd1700;
	st.local.u64 	[%rd1+96], %rd1699;
	st.local.u64 	[%rd1+136], %rd1698;
	st.local.u64 	[%rd1+176], %rd1697;
	st.local.u64 	[%rd1+216], %rd1696;
	st.local.u64 	[%rd1+64], %rd1695;
	st.local.u64 	[%rd1+104], %rd1694;
	st.local.u64 	[%rd1+144], %rd1693;
	st.local.u64 	[%rd1+184], %rd1692;
	st.local.u64 	[%rd1+224], %rd1691;
	bra.uni 	$L__BB0_24;

$L__BB0_6:
	ld.local.u64 	%rd1656, [%rd1+24];

$L__BB0_7:
	setp.eq.s64 	%p10, %rd1656, 0;
	mov.u64 	%rd1656, 0;
	@%p10 bra 	$L__BB0_10;

	add.s64 	%rd1658, %rd10, %rd1717;
	mov.u64 	%rd1660, 0;
	mov.u64 	%rd1659, %rd1;

$L__BB0_9:
	ld.local.u64 	%rd496, [%rd1659+32];
	ld.global.u8 	%rd497, [%rd1658];
	ld.global.u8 	%rd498, [%rd1658+1];
	bfi.b64 	%rd499, %rd498, %rd497, 8, 8;
	ld.global.u8 	%rd500, [%rd1658+2];
	ld.global.u8 	%rd501, [%rd1658+3];
	bfi.b64 	%rd502, %rd501, %rd500, 8, 8;
	bfi.b64 	%rd503, %rd502, %rd499, 16, 16;
	ld.global.u8 	%rd504, [%rd1658+4];
	ld.global.u8 	%rd505, [%rd1658+5];
	bfi.b64 	%rd506, %rd505, %rd504, 8, 8;
	ld.global.u8 	%rd507, [%rd1658+6];
	ld.global.u8 	%rd508, [%rd1658+7];
	bfi.b64 	%rd509, %rd508, %rd507, 8, 8;
	bfi.b64 	%rd510, %rd509, %rd506, 16, 16;
	bfi.b64 	%rd511, %rd510, %rd503, 32, 32;
	xor.b64  	%rd512, %rd496, %rd511;
	st.local.u64 	[%rd1659+32], %rd512;
	add.s64 	%rd1659, %rd1659, 8;
	add.s64 	%rd1658, %rd1658, 8;
	ld.local.u64 	%rd1656, [%rd1+24];
	add.s64 	%rd1660, %rd1660, 1;
	setp.lt.u64 	%p11, %rd1660, %rd1656;
	@%p11 bra 	$L__BB0_9;

$L__BB0_10:
	ld.local.u64 	%rd1686, [%rd1+32];
	ld.local.u64 	%rd1685, [%rd1+72];
	ld.local.u64 	%rd1684, [%rd1+112];
	ld.local.u64 	%rd1683, [%rd1+152];
	ld.local.u64 	%rd1682, [%rd1+192];
	ld.local.u64 	%rd1681, [%rd1+40];
	ld.local.u64 	%rd1680, [%rd1+80];
	ld.local.u64 	%rd1679, [%rd1+120];
	ld.local.u64 	%rd1678, [%rd1+160];
	ld.local.u64 	%rd1677, [%rd1+200];
	ld.local.u64 	%rd1676, [%rd1+48];
	ld.local.u64 	%rd1675, [%rd1+88];
	ld.local.u64 	%rd1674, [%rd1+128];
	ld.local.u64 	%rd1673, [%rd1+168];
	ld.local.u64 	%rd1672, [%rd1+208];
	ld.local.u64 	%rd1671, [%rd1+56];
	ld.local.u64 	%rd1670, [%rd1+96];
	ld.local.u64 	%rd1669, [%rd1+136];
	ld.local.u64 	%rd1668, [%rd1+176];
	ld.local.u64 	%rd1667, [%rd1+216];
	ld.local.u64 	%rd1666, [%rd1+64];
	ld.local.u64 	%rd1665, [%rd1+104];
	ld.local.u64 	%rd1664, [%rd1+144];
	ld.local.u64 	%rd1663, [%rd1+184];
	ld.local.u64 	%rd1662, [%rd1+224];
	mov.u32 	%r638, 0;

$L__BB0_11:
	xor.b64  	%rd513, %rd1685, %rd1686;
	xor.b64  	%rd514, %rd513, %rd1684;
	xor.b64  	%rd515, %rd514, %rd1683;
	xor.b64  	%rd516, %rd515, %rd1682;
	xor.b64  	%rd517, %rd1680, %rd1681;
	xor.b64  	%rd518, %rd517, %rd1679;
	xor.b64  	%rd519, %rd518, %rd1678;
	xor.b64  	%rd520, %rd519, %rd1677;
	xor.b64  	%rd521, %rd1675, %rd1676;
	xor.b64  	%rd522, %rd521, %rd1674;
	xor.b64  	%rd523, %rd522, %rd1673;
	xor.b64  	%rd524, %rd523, %rd1672;
	xor.b64  	%rd525, %rd1670, %rd1671;
	xor.b64  	%rd526, %rd525, %rd1669;
	xor.b64  	%rd527, %rd526, %rd1668;
	xor.b64  	%rd528, %rd527, %rd1667;
	xor.b64  	%rd529, %rd1665, %rd1666;
	xor.b64  	%rd530, %rd529, %rd1664;
	xor.b64  	%rd531, %rd530, %rd1663;
	xor.b64  	%rd532, %rd531, %rd1662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r41,%dummy}, %rd520;
	}
	shf.l.wrap.b32 	%r42, %r41, %r40, 1;
	shf.l.wrap.b32 	%r43, %r40, %r41, 1;
	mov.b64 	%rd533, {%r43, %r42};
	xor.b64  	%rd534, %rd532, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r44}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r45,%dummy}, %rd524;
	}
	shf.l.wrap.b32 	%r46, %r45, %r44, 1;
	shf.l.wrap.b32 	%r47, %r44, %r45, 1;
	mov.b64 	%rd535, {%r47, %r46};
	xor.b64  	%rd536, %rd535, %rd516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r48}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r49,%dummy}, %rd528;
	}
	shf.l.wrap.b32 	%r50, %r49, %r48, 1;
	shf.l.wrap.b32 	%r51, %r48, %r49, 1;
	mov.b64 	%rd537, {%r51, %r50};
	xor.b64  	%rd538, %rd537, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r52}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd532;
	}
	shf.l.wrap.b32 	%r54, %r53, %r52, 1;
	shf.l.wrap.b32 	%r55, %r52, %r53, 1;
	mov.b64 	%rd539, {%r55, %r54};
	xor.b64  	%rd540, %rd539, %rd524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd516;
	}
	shf.l.wrap.b32 	%r58, %r57, %r56, 1;
	shf.l.wrap.b32 	%r59, %r56, %r57, 1;
	mov.b64 	%rd541, {%r59, %r58};
	xor.b64  	%rd542, %rd528, %rd541;
	xor.b64  	%rd543, %rd534, %rd1686;
	xor.b64  	%rd544, %rd1685, %rd534;
	xor.b64  	%rd545, %rd1684, %rd534;
	xor.b64  	%rd546, %rd1683, %rd534;
	xor.b64  	%rd547, %rd1682, %rd534;
	xor.b64  	%rd548, %rd1681, %rd536;
	xor.b64  	%rd549, %rd1680, %rd536;
	xor.b64  	%rd550, %rd1679, %rd536;
	xor.b64  	%rd551, %rd1678, %rd536;
	xor.b64  	%rd552, %rd1677, %rd536;
	xor.b64  	%rd553, %rd1676, %rd538;
	xor.b64  	%rd554, %rd1675, %rd538;
	xor.b64  	%rd555, %rd1674, %rd538;
	xor.b64  	%rd556, %rd1673, %rd538;
	xor.b64  	%rd557, %rd1672, %rd538;
	xor.b64  	%rd558, %rd1671, %rd540;
	xor.b64  	%rd559, %rd1670, %rd540;
	xor.b64  	%rd560, %rd1669, %rd540;
	xor.b64  	%rd561, %rd1668, %rd540;
	xor.b64  	%rd562, %rd1667, %rd540;
	xor.b64  	%rd563, %rd1666, %rd542;
	xor.b64  	%rd564, %rd1665, %rd542;
	xor.b64  	%rd565, %rd1664, %rd542;
	xor.b64  	%rd566, %rd1663, %rd542;
	xor.b64  	%rd567, %rd1662, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd548;
	}
	shf.l.wrap.b32 	%r62, %r61, %r60, 1;
	shf.l.wrap.b32 	%r63, %r60, %r61, 1;
	mov.b64 	%rd568, {%r63, %r62};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd549;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 20;
	shf.r.wrap.b32 	%r67, %r64, %r65, 20;
	mov.b64 	%rd569, {%r67, %r66};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r68}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd564;
	}
	shf.l.wrap.b32 	%r70, %r69, %r68, 20;
	shf.l.wrap.b32 	%r71, %r68, %r69, 20;
	mov.b64 	%rd570, {%r71, %r70};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd557;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 3;
	shf.r.wrap.b32 	%r75, %r72, %r73, 3;
	mov.b64 	%rd571, {%r75, %r74};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd565;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 25;
	shf.r.wrap.b32 	%r79, %r76, %r77, 25;
	mov.b64 	%rd572, {%r79, %r78};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd547;
	}
	shf.l.wrap.b32 	%r82, %r81, %r80, 18;
	shf.l.wrap.b32 	%r83, %r80, %r81, 18;
	mov.b64 	%rd573, {%r83, %r82};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r84,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd553;
	}
	shf.r.wrap.b32 	%r86, %r85, %r84, 2;
	shf.r.wrap.b32 	%r87, %r84, %r85, 2;
	mov.b64 	%rd574, {%r87, %r86};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd555;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 21;
	shf.r.wrap.b32 	%r91, %r88, %r89, 21;
	mov.b64 	%rd575, {%r91, %r90};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r92}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd560;
	}
	shf.l.wrap.b32 	%r94, %r93, %r92, 25;
	shf.l.wrap.b32 	%r95, %r92, %r93, 25;
	mov.b64 	%rd576, {%r95, %r94};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd566;
	}
	shf.l.wrap.b32 	%r98, %r97, %r96, 8;
	shf.l.wrap.b32 	%r99, %r96, %r97, 8;
	mov.b64 	%rd577, {%r99, %r98};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r100,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r101}, %rd562;
	}
	shf.r.wrap.b32 	%r102, %r101, %r100, 8;
	shf.r.wrap.b32 	%r103, %r100, %r101, 8;
	mov.b64 	%rd578, {%r103, %r102};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd546;
	}
	shf.r.wrap.b32 	%r106, %r105, %r104, 23;
	shf.r.wrap.b32 	%r107, %r104, %r105, 23;
	mov.b64 	%rd579, {%r107, %r106};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r109,%dummy}, %rd563;
	}
	shf.l.wrap.b32 	%r110, %r109, %r108, 27;
	shf.l.wrap.b32 	%r111, %r108, %r109, 27;
	mov.b64 	%rd580, {%r111, %r110};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd567;
	}
	shf.l.wrap.b32 	%r114, %r113, %r112, 14;
	shf.l.wrap.b32 	%r115, %r112, %r113, 14;
	mov.b64 	%rd581, {%r115, %r114};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd552;
	}
	shf.l.wrap.b32 	%r118, %r117, %r116, 2;
	shf.l.wrap.b32 	%r119, %r116, %r117, 2;
	mov.b64 	%rd582, {%r119, %r118};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r120,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd559;
	}
	shf.r.wrap.b32 	%r122, %r121, %r120, 9;
	shf.r.wrap.b32 	%r123, %r120, %r121, 9;
	mov.b64 	%rd583, {%r123, %r122};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r124,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r125}, %rd551;
	}
	shf.r.wrap.b32 	%r126, %r125, %r124, 19;
	shf.r.wrap.b32 	%r127, %r124, %r125, 19;
	mov.b64 	%rd584, {%r127, %r126};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd544;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 28;
	shf.r.wrap.b32 	%r131, %r128, %r129, 28;
	mov.b64 	%rd585, {%r131, %r130};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd558;
	}
	shf.l.wrap.b32 	%r134, %r133, %r132, 28;
	shf.l.wrap.b32 	%r135, %r132, %r133, 28;
	mov.b64 	%rd586, {%r135, %r134};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd561;
	}
	shf.l.wrap.b32 	%r138, %r137, %r136, 21;
	shf.l.wrap.b32 	%r139, %r136, %r137, 21;
	mov.b64 	%rd587, {%r139, %r138};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd556;
	}
	shf.l.wrap.b32 	%r142, %r141, %r140, 15;
	shf.l.wrap.b32 	%r143, %r140, %r141, 15;
	mov.b64 	%rd588, {%r143, %r142};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd550;
	}
	shf.l.wrap.b32 	%r146, %r145, %r144, 10;
	shf.l.wrap.b32 	%r147, %r144, %r145, 10;
	mov.b64 	%rd589, {%r147, %r146};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd554;
	}
	shf.l.wrap.b32 	%r150, %r149, %r148, 6;
	shf.l.wrap.b32 	%r151, %r148, %r149, 6;
	mov.b64 	%rd590, {%r151, %r150};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd545;
	}
	shf.l.wrap.b32 	%r154, %r153, %r152, 3;
	shf.l.wrap.b32 	%r155, %r152, %r153, 3;
	mov.b64 	%rd591, {%r155, %r154};
	not.b64 	%rd592, %rd569;
	and.b64  	%rd593, %rd575, %rd592;
	xor.b64  	%rd594, %rd593, %rd543;
	not.b64 	%rd595, %rd575;
	and.b64  	%rd596, %rd587, %rd595;
	xor.b64  	%rd1681, %rd596, %rd569;
	not.b64 	%rd597, %rd587;
	and.b64  	%rd598, %rd581, %rd597;
	xor.b64  	%rd1676, %rd575, %rd598;
	not.b64 	%rd599, %rd581;
	and.b64  	%rd600, %rd543, %rd599;
	xor.b64  	%rd1671, %rd587, %rd600;
	not.b64 	%rd601, %rd543;
	and.b64  	%rd602, %rd569, %rd601;
	xor.b64  	%rd1666, %rd581, %rd602;
	not.b64 	%rd603, %rd570;
	and.b64  	%rd604, %rd591, %rd603;
	xor.b64  	%rd1685, %rd604, %rd586;
	not.b64 	%rd605, %rd591;
	and.b64  	%rd606, %rd584, %rd605;
	xor.b64  	%rd1680, %rd606, %rd570;
	not.b64 	%rd607, %rd584;
	and.b64  	%rd608, %rd571, %rd607;
	xor.b64  	%rd1675, %rd591, %rd608;
	not.b64 	%rd609, %rd571;
	and.b64  	%rd610, %rd586, %rd609;
	xor.b64  	%rd1670, %rd584, %rd610;
	not.b64 	%rd611, %rd586;
	and.b64  	%rd612, %rd570, %rd611;
	xor.b64  	%rd1665, %rd571, %rd612;
	not.b64 	%rd613, %rd590;
	and.b64  	%rd614, %rd576, %rd613;
	xor.b64  	%rd1684, %rd614, %rd568;
	not.b64 	%rd615, %rd576;
	and.b64  	%rd616, %rd577, %rd615;
	xor.b64  	%rd1679, %rd616, %rd590;
	not.b64 	%rd617, %rd577;
	and.b64  	%rd618, %rd573, %rd617;
	xor.b64  	%rd1674, %rd576, %rd618;
	not.b64 	%rd619, %rd573;
	and.b64  	%rd620, %rd568, %rd619;
	xor.b64  	%rd1669, %rd577, %rd620;
	not.b64 	%rd621, %rd568;
	and.b64  	%rd622, %rd590, %rd621;
	xor.b64  	%rd1664, %rd573, %rd622;
	not.b64 	%rd623, %rd585;
	and.b64  	%rd624, %rd589, %rd623;
	xor.b64  	%rd1683, %rd624, %rd580;
	not.b64 	%rd625, %rd589;
	and.b64  	%rd626, %rd588, %rd625;
	xor.b64  	%rd1678, %rd626, %rd585;
	not.b64 	%rd627, %rd588;
	and.b64  	%rd628, %rd578, %rd627;
	xor.b64  	%rd1673, %rd589, %rd628;
	not.b64 	%rd629, %rd578;
	and.b64  	%rd630, %rd580, %rd629;
	xor.b64  	%rd1668, %rd588, %rd630;
	not.b64 	%rd631, %rd580;
	and.b64  	%rd632, %rd585, %rd631;
	xor.b64  	%rd1663, %rd578, %rd632;
	not.b64 	%rd633, %rd583;
	and.b64  	%rd634, %rd572, %rd633;
	xor.b64  	%rd1682, %rd634, %rd574;
	not.b64 	%rd635, %rd572;
	and.b64  	%rd636, %rd579, %rd635;
	xor.b64  	%rd1677, %rd636, %rd583;
	not.b64 	%rd637, %rd579;
	and.b64  	%rd638, %rd582, %rd637;
	xor.b64  	%rd1672, %rd572, %rd638;
	not.b64 	%rd639, %rd582;
	and.b64  	%rd640, %rd574, %rd639;
	xor.b64  	%rd1667, %rd579, %rd640;
	not.b64 	%rd641, %rd574;
	and.b64  	%rd642, %rd583, %rd641;
	xor.b64  	%rd1662, %rd582, %rd642;
	mul.wide.s32 	%rd643, %r638, 8;
	mov.u64 	%rd644, CUDA_KECCAK_CONSTS;
	add.s64 	%rd645, %rd644, %rd643;
	ld.const.u64 	%rd646, [%rd645];
	xor.b64  	%rd1686, %rd594, %rd646;
	add.s32 	%r638, %r638, 1;
	setp.ne.s32 	%p12, %r638, 24;
	@%p12 bra 	$L__BB0_11;

	mov.u64 	%rd1716, 0;
	st.local.u64 	[%rd1+32], %rd1686;
	st.local.u64 	[%rd1+72], %rd1685;
	st.local.u64 	[%rd1+112], %rd1684;
	st.local.u64 	[%rd1+152], %rd1683;
	st.local.u64 	[%rd1+192], %rd1682;
	st.local.u64 	[%rd1+40], %rd1681;
	st.local.u64 	[%rd1+80], %rd1680;
	st.local.u64 	[%rd1+120], %rd1679;
	st.local.u64 	[%rd1+160], %rd1678;
	st.local.u64 	[%rd1+200], %rd1677;
	st.local.u64 	[%rd1+48], %rd1676;
	st.local.u64 	[%rd1+88], %rd1675;
	st.local.u64 	[%rd1+128], %rd1674;
	st.local.u64 	[%rd1+168], %rd1673;
	st.local.u64 	[%rd1+208], %rd1672;
	st.local.u64 	[%rd1+56], %rd1671;
	st.local.u64 	[%rd1+96], %rd1670;
	st.local.u64 	[%rd1+136], %rd1669;
	st.local.u64 	[%rd1+176], %rd1668;
	st.local.u64 	[%rd1+216], %rd1667;
	st.local.u64 	[%rd1+64], %rd1666;
	st.local.u64 	[%rd1+104], %rd1665;
	st.local.u64 	[%rd1+144], %rd1664;
	st.local.u64 	[%rd1+184], %rd1663;
	st.local.u64 	[%rd1+224], %rd1662;
	ld.local.u64 	%rd648, [%rd1+16];
	add.s64 	%rd1717, %rd648, %rd1717;
	sub.s64 	%rd649, %rd9, %rd648;
	setp.gt.s64 	%p13, %rd1717, %rd649;
	@%p13 bra 	$L__BB0_24;
	bra.uni 	$L__BB0_7;

$L__BB0_24:
	setp.lt.u64 	%p20, %rd1717, %rd9;
	@%p20 bra 	$L__BB0_5;

	ld.local.u8 	%rs4, [%rd1];
	setp.eq.s16 	%p49, %rs4, 0;
	mov.u64 	%rd1717, %rd1716;

$L__BB0_26:
	shl.b64 	%rd1719, %rd1717, 3;
	st.local.u64 	[%rd1+424], %rd1719;
	@%p49 bra 	$L__BB0_28;

	and.b64  	%rd814, %rd1717, 2305843009213693951;
	add.s64 	%rd815, %rd1, %rd814;
	mov.u16 	%rs5, 2;
	st.local.u8 	[%rd815+232], %rs5;
	ld.local.u64 	%rd816, [%rd1+424];
	add.s64 	%rd1719, %rd816, 2;
	st.local.u64 	[%rd1+424], %rd1719;

$L__BB0_28:
	cvt.u32.u64 	%r273, %rd1719;
	and.b32  	%r274, %r273, 7;
	shr.u64 	%rd817, %rd1719, 3;
	add.s64 	%rd818, %rd1, %rd817;
	mov.u16 	%rs6, 1;
	shl.b16 	%rs7, %rs6, %r274;
	ld.local.u8 	%rs8, [%rd818+232];
	or.b16  	%rs9, %rs8, %rs7;
	st.local.u8 	[%rd818+232], %rs9;
	ld.local.u64 	%rd819, [%rd1+424];
	add.s64 	%rd1748, %rd819, 1;
	st.local.u64 	[%rd1+424], %rd1748;
	ld.local.u64 	%rd820, [%rd1+8];
	setp.ne.s64 	%p21, %rd1748, %rd820;
	@%p21 bra 	$L__BB0_35;

	ld.local.u64 	%rd821, [%rd1+24];
	setp.eq.s64 	%p22, %rd821, 0;
	@%p22 bra 	$L__BB0_32;

	mov.u64 	%rd1720, 0;
	mov.u64 	%rd1721, %rd1720;

$L__BB0_31:
	add.s64 	%rd824, %rd1, %rd1721;
	ld.local.u64 	%rd825, [%rd824+32];
	ld.local.u8 	%rd826, [%rd824+232];
	ld.local.u8 	%rd827, [%rd824+233];
	bfi.b64 	%rd828, %rd827, %rd826, 8, 8;
	ld.local.u8 	%rd829, [%rd824+234];
	ld.local.u8 	%rd830, [%rd824+235];
	bfi.b64 	%rd831, %rd830, %rd829, 8, 8;
	bfi.b64 	%rd832, %rd831, %rd828, 16, 16;
	ld.local.u8 	%rd833, [%rd824+236];
	ld.local.u8 	%rd834, [%rd824+237];
	bfi.b64 	%rd835, %rd834, %rd833, 8, 8;
	ld.local.u8 	%rd836, [%rd824+238];
	ld.local.u8 	%rd837, [%rd824+239];
	bfi.b64 	%rd838, %rd837, %rd836, 8, 8;
	bfi.b64 	%rd839, %rd838, %rd835, 16, 16;
	bfi.b64 	%rd840, %rd839, %rd832, 32, 32;
	xor.b64  	%rd841, %rd825, %rd840;
	st.local.u64 	[%rd824+32], %rd841;
	add.s64 	%rd1721, %rd1721, 8;
	ld.local.u64 	%rd842, [%rd1+24];
	add.s64 	%rd1720, %rd1720, 1;
	setp.lt.u64 	%p23, %rd1720, %rd842;
	@%p23 bra 	$L__BB0_31;

$L__BB0_32:
	ld.local.u64 	%rd1747, [%rd1+32];
	ld.local.u64 	%rd1746, [%rd1+72];
	ld.local.u64 	%rd1745, [%rd1+112];
	ld.local.u64 	%rd1744, [%rd1+152];
	ld.local.u64 	%rd1743, [%rd1+192];
	ld.local.u64 	%rd1742, [%rd1+40];
	ld.local.u64 	%rd1741, [%rd1+80];
	ld.local.u64 	%rd1740, [%rd1+120];
	ld.local.u64 	%rd1739, [%rd1+160];
	ld.local.u64 	%rd1738, [%rd1+200];
	ld.local.u64 	%rd1737, [%rd1+48];
	ld.local.u64 	%rd1736, [%rd1+88];
	ld.local.u64 	%rd1735, [%rd1+128];
	ld.local.u64 	%rd1734, [%rd1+168];
	ld.local.u64 	%rd1733, [%rd1+208];
	ld.local.u64 	%rd1732, [%rd1+56];
	ld.local.u64 	%rd1731, [%rd1+96];
	ld.local.u64 	%rd1730, [%rd1+136];
	ld.local.u64 	%rd1729, [%rd1+176];
	ld.local.u64 	%rd1728, [%rd1+216];
	ld.local.u64 	%rd1727, [%rd1+64];
	ld.local.u64 	%rd1726, [%rd1+104];
	ld.local.u64 	%rd1725, [%rd1+144];
	ld.local.u64 	%rd1724, [%rd1+184];
	ld.local.u64 	%rd1723, [%rd1+224];
	mov.u32 	%r640, 0;
	mov.u64 	%rd1722, CUDA_KECCAK_CONSTS;

$L__BB0_33:
	xor.b64  	%rd844, %rd1746, %rd1747;
	xor.b64  	%rd845, %rd844, %rd1745;
	xor.b64  	%rd846, %rd845, %rd1744;
	xor.b64  	%rd847, %rd846, %rd1743;
	xor.b64  	%rd848, %rd1741, %rd1742;
	xor.b64  	%rd849, %rd848, %rd1740;
	xor.b64  	%rd850, %rd849, %rd1739;
	xor.b64  	%rd851, %rd850, %rd1738;
	xor.b64  	%rd852, %rd1736, %rd1737;
	xor.b64  	%rd853, %rd852, %rd1735;
	xor.b64  	%rd854, %rd853, %rd1734;
	xor.b64  	%rd855, %rd854, %rd1733;
	xor.b64  	%rd856, %rd1731, %rd1732;
	xor.b64  	%rd857, %rd856, %rd1730;
	xor.b64  	%rd858, %rd857, %rd1729;
	xor.b64  	%rd859, %rd858, %rd1728;
	xor.b64  	%rd860, %rd1726, %rd1727;
	xor.b64  	%rd861, %rd860, %rd1725;
	xor.b64  	%rd862, %rd861, %rd1724;
	xor.b64  	%rd863, %rd862, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd851;
	}
	shf.l.wrap.b32 	%r278, %r277, %r276, 1;
	shf.l.wrap.b32 	%r279, %r276, %r277, 1;
	mov.b64 	%rd864, {%r279, %r278};
	xor.b64  	%rd865, %rd863, %rd864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd855;
	}
	shf.l.wrap.b32 	%r282, %r281, %r280, 1;
	shf.l.wrap.b32 	%r283, %r280, %r281, 1;
	mov.b64 	%rd866, {%r283, %r282};
	xor.b64  	%rd867, %rd866, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd859;
	}
	shf.l.wrap.b32 	%r286, %r285, %r284, 1;
	shf.l.wrap.b32 	%r287, %r284, %r285, 1;
	mov.b64 	%rd868, {%r287, %r286};
	xor.b64  	%rd869, %rd868, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd863;
	}
	shf.l.wrap.b32 	%r290, %r289, %r288, 1;
	shf.l.wrap.b32 	%r291, %r288, %r289, 1;
	mov.b64 	%rd870, {%r291, %r290};
	xor.b64  	%rd871, %rd870, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd847;
	}
	shf.l.wrap.b32 	%r294, %r293, %r292, 1;
	shf.l.wrap.b32 	%r295, %r292, %r293, 1;
	mov.b64 	%rd872, {%r295, %r294};
	xor.b64  	%rd873, %rd859, %rd872;
	xor.b64  	%rd874, %rd865, %rd1747;
	xor.b64  	%rd875, %rd1746, %rd865;
	xor.b64  	%rd876, %rd1745, %rd865;
	xor.b64  	%rd877, %rd1744, %rd865;
	xor.b64  	%rd878, %rd1743, %rd865;
	xor.b64  	%rd879, %rd1742, %rd867;
	xor.b64  	%rd880, %rd1741, %rd867;
	xor.b64  	%rd881, %rd1740, %rd867;
	xor.b64  	%rd882, %rd1739, %rd867;
	xor.b64  	%rd883, %rd1738, %rd867;
	xor.b64  	%rd884, %rd1737, %rd869;
	xor.b64  	%rd885, %rd1736, %rd869;
	xor.b64  	%rd886, %rd1735, %rd869;
	xor.b64  	%rd887, %rd1734, %rd869;
	xor.b64  	%rd888, %rd1733, %rd869;
	xor.b64  	%rd889, %rd1732, %rd871;
	xor.b64  	%rd890, %rd1731, %rd871;
	xor.b64  	%rd891, %rd1730, %rd871;
	xor.b64  	%rd892, %rd1729, %rd871;
	xor.b64  	%rd893, %rd1728, %rd871;
	xor.b64  	%rd894, %rd1727, %rd873;
	xor.b64  	%rd895, %rd1726, %rd873;
	xor.b64  	%rd896, %rd1725, %rd873;
	xor.b64  	%rd897, %rd1724, %rd873;
	xor.b64  	%rd898, %rd1723, %rd873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd879;
	}
	shf.l.wrap.b32 	%r298, %r297, %r296, 1;
	shf.l.wrap.b32 	%r299, %r296, %r297, 1;
	mov.b64 	%rd899, {%r299, %r298};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd880;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 20;
	shf.r.wrap.b32 	%r303, %r300, %r301, 20;
	mov.b64 	%rd900, {%r303, %r302};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd895;
	}
	shf.l.wrap.b32 	%r306, %r305, %r304, 20;
	shf.l.wrap.b32 	%r307, %r304, %r305, 20;
	mov.b64 	%rd901, {%r307, %r306};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd888;
	}
	shf.r.wrap.b32 	%r310, %r309, %r308, 3;
	shf.r.wrap.b32 	%r311, %r308, %r309, 3;
	mov.b64 	%rd902, {%r311, %r310};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd896;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 25;
	shf.r.wrap.b32 	%r315, %r312, %r313, 25;
	mov.b64 	%rd903, {%r315, %r314};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd878;
	}
	shf.l.wrap.b32 	%r318, %r317, %r316, 18;
	shf.l.wrap.b32 	%r319, %r316, %r317, 18;
	mov.b64 	%rd904, {%r319, %r318};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd884;
	}
	shf.r.wrap.b32 	%r322, %r321, %r320, 2;
	shf.r.wrap.b32 	%r323, %r320, %r321, 2;
	mov.b64 	%rd905, {%r323, %r322};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd886;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 21;
	shf.r.wrap.b32 	%r327, %r324, %r325, 21;
	mov.b64 	%rd906, {%r327, %r326};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r328}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd891;
	}
	shf.l.wrap.b32 	%r330, %r329, %r328, 25;
	shf.l.wrap.b32 	%r331, %r328, %r329, 25;
	mov.b64 	%rd907, {%r331, %r330};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd897;
	}
	shf.l.wrap.b32 	%r334, %r333, %r332, 8;
	shf.l.wrap.b32 	%r335, %r332, %r333, 8;
	mov.b64 	%rd908, {%r335, %r334};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd893;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 8;
	shf.r.wrap.b32 	%r339, %r336, %r337, 8;
	mov.b64 	%rd909, {%r339, %r338};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd877;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 23;
	shf.r.wrap.b32 	%r343, %r340, %r341, 23;
	mov.b64 	%rd910, {%r343, %r342};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd894;
	}
	shf.l.wrap.b32 	%r346, %r345, %r344, 27;
	shf.l.wrap.b32 	%r347, %r344, %r345, 27;
	mov.b64 	%rd911, {%r347, %r346};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd898;
	}
	shf.l.wrap.b32 	%r350, %r349, %r348, 14;
	shf.l.wrap.b32 	%r351, %r348, %r349, 14;
	mov.b64 	%rd912, {%r351, %r350};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd883;
	}
	shf.l.wrap.b32 	%r354, %r353, %r352, 2;
	shf.l.wrap.b32 	%r355, %r352, %r353, 2;
	mov.b64 	%rd913, {%r355, %r354};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r356,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r357}, %rd890;
	}
	shf.r.wrap.b32 	%r358, %r357, %r356, 9;
	shf.r.wrap.b32 	%r359, %r356, %r357, 9;
	mov.b64 	%rd914, {%r359, %r358};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd882;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 19;
	shf.r.wrap.b32 	%r363, %r360, %r361, 19;
	mov.b64 	%rd915, {%r363, %r362};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd875;
	}
	shf.r.wrap.b32 	%r366, %r365, %r364, 28;
	shf.r.wrap.b32 	%r367, %r364, %r365, 28;
	mov.b64 	%rd916, {%r367, %r366};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd889;
	}
	shf.l.wrap.b32 	%r370, %r369, %r368, 28;
	shf.l.wrap.b32 	%r371, %r368, %r369, 28;
	mov.b64 	%rd917, {%r371, %r370};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd892;
	}
	shf.l.wrap.b32 	%r374, %r373, %r372, 21;
	shf.l.wrap.b32 	%r375, %r372, %r373, 21;
	mov.b64 	%rd918, {%r375, %r374};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd887;
	}
	shf.l.wrap.b32 	%r378, %r377, %r376, 15;
	shf.l.wrap.b32 	%r379, %r376, %r377, 15;
	mov.b64 	%rd919, {%r379, %r378};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd881;
	}
	shf.l.wrap.b32 	%r382, %r381, %r380, 10;
	shf.l.wrap.b32 	%r383, %r380, %r381, 10;
	mov.b64 	%rd920, {%r383, %r382};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd885;
	}
	shf.l.wrap.b32 	%r386, %r385, %r384, 6;
	shf.l.wrap.b32 	%r387, %r384, %r385, 6;
	mov.b64 	%rd921, {%r387, %r386};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd876;
	}
	shf.l.wrap.b32 	%r390, %r389, %r388, 3;
	shf.l.wrap.b32 	%r391, %r388, %r389, 3;
	mov.b64 	%rd922, {%r391, %r390};
	not.b64 	%rd923, %rd900;
	and.b64  	%rd924, %rd906, %rd923;
	xor.b64  	%rd925, %rd924, %rd874;
	not.b64 	%rd926, %rd906;
	and.b64  	%rd927, %rd918, %rd926;
	xor.b64  	%rd1742, %rd927, %rd900;
	not.b64 	%rd928, %rd918;
	and.b64  	%rd929, %rd912, %rd928;
	xor.b64  	%rd1737, %rd906, %rd929;
	not.b64 	%rd930, %rd912;
	and.b64  	%rd931, %rd874, %rd930;
	xor.b64  	%rd1732, %rd918, %rd931;
	not.b64 	%rd932, %rd874;
	and.b64  	%rd933, %rd900, %rd932;
	xor.b64  	%rd1727, %rd912, %rd933;
	not.b64 	%rd934, %rd901;
	and.b64  	%rd935, %rd922, %rd934;
	xor.b64  	%rd1746, %rd935, %rd917;
	not.b64 	%rd936, %rd922;
	and.b64  	%rd937, %rd915, %rd936;
	xor.b64  	%rd1741, %rd937, %rd901;
	not.b64 	%rd938, %rd915;
	and.b64  	%rd939, %rd902, %rd938;
	xor.b64  	%rd1736, %rd922, %rd939;
	not.b64 	%rd940, %rd902;
	and.b64  	%rd941, %rd917, %rd940;
	xor.b64  	%rd1731, %rd915, %rd941;
	not.b64 	%rd942, %rd917;
	and.b64  	%rd943, %rd901, %rd942;
	xor.b64  	%rd1726, %rd902, %rd943;
	not.b64 	%rd944, %rd921;
	and.b64  	%rd945, %rd907, %rd944;
	xor.b64  	%rd1745, %rd945, %rd899;
	not.b64 	%rd946, %rd907;
	and.b64  	%rd947, %rd908, %rd946;
	xor.b64  	%rd1740, %rd947, %rd921;
	not.b64 	%rd948, %rd908;
	and.b64  	%rd949, %rd904, %rd948;
	xor.b64  	%rd1735, %rd907, %rd949;
	not.b64 	%rd950, %rd904;
	and.b64  	%rd951, %rd899, %rd950;
	xor.b64  	%rd1730, %rd908, %rd951;
	not.b64 	%rd952, %rd899;
	and.b64  	%rd953, %rd921, %rd952;
	xor.b64  	%rd1725, %rd904, %rd953;
	not.b64 	%rd954, %rd916;
	and.b64  	%rd955, %rd920, %rd954;
	xor.b64  	%rd1744, %rd955, %rd911;
	not.b64 	%rd956, %rd920;
	and.b64  	%rd957, %rd919, %rd956;
	xor.b64  	%rd1739, %rd957, %rd916;
	not.b64 	%rd958, %rd919;
	and.b64  	%rd959, %rd909, %rd958;
	xor.b64  	%rd1734, %rd920, %rd959;
	not.b64 	%rd960, %rd909;
	and.b64  	%rd961, %rd911, %rd960;
	xor.b64  	%rd1729, %rd919, %rd961;
	not.b64 	%rd962, %rd911;
	and.b64  	%rd963, %rd916, %rd962;
	xor.b64  	%rd1724, %rd909, %rd963;
	not.b64 	%rd964, %rd914;
	and.b64  	%rd965, %rd903, %rd964;
	xor.b64  	%rd1743, %rd965, %rd905;
	not.b64 	%rd966, %rd903;
	and.b64  	%rd967, %rd910, %rd966;
	xor.b64  	%rd1738, %rd967, %rd914;
	not.b64 	%rd968, %rd910;
	and.b64  	%rd969, %rd913, %rd968;
	xor.b64  	%rd1733, %rd903, %rd969;
	not.b64 	%rd970, %rd913;
	and.b64  	%rd971, %rd905, %rd970;
	xor.b64  	%rd1728, %rd910, %rd971;
	not.b64 	%rd972, %rd905;
	and.b64  	%rd973, %rd914, %rd972;
	xor.b64  	%rd1723, %rd913, %rd973;
	ld.const.u64 	%rd974, [%rd1722];
	xor.b64  	%rd1747, %rd925, %rd974;
	add.s64 	%rd1722, %rd1722, 8;
	add.s32 	%r640, %r640, 1;
	setp.ne.s32 	%p24, %r640, 24;
	@%p24 bra 	$L__BB0_33;

	mov.u64 	%rd1748, 0;
	st.local.u64 	[%rd1+32], %rd1747;
	st.local.u64 	[%rd1+72], %rd1746;
	st.local.u64 	[%rd1+112], %rd1745;
	st.local.u64 	[%rd1+152], %rd1744;
	st.local.u64 	[%rd1+192], %rd1743;
	st.local.u64 	[%rd1+40], %rd1742;
	st.local.u64 	[%rd1+80], %rd1741;
	st.local.u64 	[%rd1+120], %rd1740;
	st.local.u64 	[%rd1+160], %rd1739;
	st.local.u64 	[%rd1+200], %rd1738;
	st.local.u64 	[%rd1+48], %rd1737;
	st.local.u64 	[%rd1+88], %rd1736;
	st.local.u64 	[%rd1+128], %rd1735;
	st.local.u64 	[%rd1+168], %rd1734;
	st.local.u64 	[%rd1+208], %rd1733;
	st.local.u64 	[%rd1+56], %rd1732;
	st.local.u64 	[%rd1+96], %rd1731;
	st.local.u64 	[%rd1+136], %rd1730;
	st.local.u64 	[%rd1+176], %rd1729;
	st.local.u64 	[%rd1+216], %rd1728;
	st.local.u64 	[%rd1+64], %rd1727;
	st.local.u64 	[%rd1+104], %rd1726;
	st.local.u64 	[%rd1+144], %rd1725;
	st.local.u64 	[%rd1+184], %rd1724;
	st.local.u64 	[%rd1+224], %rd1723;
	st.local.u64 	[%rd1+424], %rd1748;

$L__BB0_35:
	and.b64  	%rd278, %rd1748, 63;
	shr.u64 	%rd279, %rd1748, 6;
	setp.eq.s64 	%p25, %rd279, 0;
	mov.u64 	%rd1756, 0;
	@%p25 bra 	$L__BB0_42;

	add.s64 	%rd979, %rd279, -1;
	and.b64  	%rd280, %rd279, 3;
	setp.lt.u64 	%p26, %rd979, 3;
	mov.u64 	%rd1756, 0;
	mov.u32 	%r642, 0;
	@%p26 bra 	$L__BB0_39;

	sub.s64 	%rd1750, %rd279, %rd280;

$L__BB0_38:
	add.s64 	%rd981, %rd1, %rd1756;
	ld.local.u64 	%rd982, [%rd981+32];
	ld.local.u8 	%rd983, [%rd981+232];
	ld.local.u8 	%rd984, [%rd981+233];
	bfi.b64 	%rd985, %rd984, %rd983, 8, 8;
	ld.local.u8 	%rd986, [%rd981+234];
	ld.local.u8 	%rd987, [%rd981+235];
	bfi.b64 	%rd988, %rd987, %rd986, 8, 8;
	bfi.b64 	%rd989, %rd988, %rd985, 16, 16;
	ld.local.u8 	%rd990, [%rd981+236];
	ld.local.u8 	%rd991, [%rd981+237];
	bfi.b64 	%rd992, %rd991, %rd990, 8, 8;
	ld.local.u8 	%rd993, [%rd981+238];
	ld.local.u8 	%rd994, [%rd981+239];
	bfi.b64 	%rd995, %rd994, %rd993, 8, 8;
	bfi.b64 	%rd996, %rd995, %rd992, 16, 16;
	bfi.b64 	%rd997, %rd996, %rd989, 32, 32;
	xor.b64  	%rd998, %rd982, %rd997;
	st.local.u64 	[%rd981+32], %rd998;
	ld.local.u64 	%rd999, [%rd981+40];
	ld.local.u8 	%rd1000, [%rd981+240];
	ld.local.u8 	%rd1001, [%rd981+241];
	bfi.b64 	%rd1002, %rd1001, %rd1000, 8, 8;
	ld.local.u8 	%rd1003, [%rd981+242];
	ld.local.u8 	%rd1004, [%rd981+243];
	bfi.b64 	%rd1005, %rd1004, %rd1003, 8, 8;
	bfi.b64 	%rd1006, %rd1005, %rd1002, 16, 16;
	ld.local.u8 	%rd1007, [%rd981+244];
	ld.local.u8 	%rd1008, [%rd981+245];
	bfi.b64 	%rd1009, %rd1008, %rd1007, 8, 8;
	ld.local.u8 	%rd1010, [%rd981+246];
	ld.local.u8 	%rd1011, [%rd981+247];
	bfi.b64 	%rd1012, %rd1011, %rd1010, 8, 8;
	bfi.b64 	%rd1013, %rd1012, %rd1009, 16, 16;
	bfi.b64 	%rd1014, %rd1013, %rd1006, 32, 32;
	xor.b64  	%rd1015, %rd999, %rd1014;
	st.local.u64 	[%rd981+40], %rd1015;
	ld.local.u64 	%rd1016, [%rd981+48];
	ld.local.u8 	%rd1017, [%rd981+248];
	ld.local.u8 	%rd1018, [%rd981+249];
	bfi.b64 	%rd1019, %rd1018, %rd1017, 8, 8;
	ld.local.u8 	%rd1020, [%rd981+250];
	ld.local.u8 	%rd1021, [%rd981+251];
	bfi.b64 	%rd1022, %rd1021, %rd1020, 8, 8;
	bfi.b64 	%rd1023, %rd1022, %rd1019, 16, 16;
	ld.local.u8 	%rd1024, [%rd981+252];
	ld.local.u8 	%rd1025, [%rd981+253];
	bfi.b64 	%rd1026, %rd1025, %rd1024, 8, 8;
	ld.local.u8 	%rd1027, [%rd981+254];
	ld.local.u8 	%rd1028, [%rd981+255];
	bfi.b64 	%rd1029, %rd1028, %rd1027, 8, 8;
	bfi.b64 	%rd1030, %rd1029, %rd1026, 16, 16;
	bfi.b64 	%rd1031, %rd1030, %rd1023, 32, 32;
	xor.b64  	%rd1032, %rd1016, %rd1031;
	st.local.u64 	[%rd981+48], %rd1032;
	ld.local.u64 	%rd1033, [%rd981+56];
	ld.local.u8 	%rd1034, [%rd981+256];
	ld.local.u8 	%rd1035, [%rd981+257];
	bfi.b64 	%rd1036, %rd1035, %rd1034, 8, 8;
	ld.local.u8 	%rd1037, [%rd981+258];
	ld.local.u8 	%rd1038, [%rd981+259];
	bfi.b64 	%rd1039, %rd1038, %rd1037, 8, 8;
	bfi.b64 	%rd1040, %rd1039, %rd1036, 16, 16;
	ld.local.u8 	%rd1041, [%rd981+260];
	ld.local.u8 	%rd1042, [%rd981+261];
	bfi.b64 	%rd1043, %rd1042, %rd1041, 8, 8;
	ld.local.u8 	%rd1044, [%rd981+262];
	ld.local.u8 	%rd1045, [%rd981+263];
	bfi.b64 	%rd1046, %rd1045, %rd1044, 8, 8;
	bfi.b64 	%rd1047, %rd1046, %rd1043, 16, 16;
	bfi.b64 	%rd1048, %rd1047, %rd1040, 32, 32;
	xor.b64  	%rd1049, %rd1033, %rd1048;
	st.local.u64 	[%rd981+56], %rd1049;
	add.s64 	%rd1756, %rd1756, 32;
	add.s32 	%r642, %r642, 4;
	add.s64 	%rd1750, %rd1750, -4;
	setp.ne.s64 	%p27, %rd1750, 0;
	@%p27 bra 	$L__BB0_38;

$L__BB0_39:
	setp.eq.s64 	%p28, %rd280, 0;
	@%p28 bra 	$L__BB0_42;

	mul.wide.s32 	%rd1050, %r642, 8;
	add.s64 	%rd1051, %rd1, %rd1050;
	add.s64 	%rd1754, %rd1051, 32;
	add.s64 	%rd289, %rd1, 232;
	neg.s64 	%rd1753, %rd280;

$L__BB0_41:
	.pragma "nounroll";
	add.s64 	%rd1052, %rd289, %rd1756;
	ld.local.u64 	%rd1053, [%rd1754];
	ld.local.u8 	%rd1054, [%rd1052];
	ld.local.u8 	%rd1055, [%rd1052+1];
	bfi.b64 	%rd1056, %rd1055, %rd1054, 8, 8;
	ld.local.u8 	%rd1057, [%rd1052+2];
	ld.local.u8 	%rd1058, [%rd1052+3];
	bfi.b64 	%rd1059, %rd1058, %rd1057, 8, 8;
	bfi.b64 	%rd1060, %rd1059, %rd1056, 16, 16;
	ld.local.u8 	%rd1061, [%rd1052+4];
	ld.local.u8 	%rd1062, [%rd1052+5];
	bfi.b64 	%rd1063, %rd1062, %rd1061, 8, 8;
	ld.local.u8 	%rd1064, [%rd1052+6];
	ld.local.u8 	%rd1065, [%rd1052+7];
	bfi.b64 	%rd1066, %rd1065, %rd1064, 8, 8;
	bfi.b64 	%rd1067, %rd1066, %rd1063, 16, 16;
	bfi.b64 	%rd1068, %rd1067, %rd1060, 32, 32;
	xor.b64  	%rd1069, %rd1053, %rd1068;
	st.local.u64 	[%rd1754], %rd1069;
	add.s64 	%rd1756, %rd1756, 8;
	add.s64 	%rd1754, %rd1754, 8;
	add.s64 	%rd1753, %rd1753, 1;
	setp.ne.s64 	%p29, %rd1753, 0;
	@%p29 bra 	$L__BB0_41;

$L__BB0_42:
	setp.eq.s64 	%p30, %rd278, 0;
	@%p30 bra 	$L__BB0_44;

	cvt.u32.u64 	%r394, %rd278;
	mov.u32 	%r395, -1;
	shl.b32 	%r396, %r395, %r394;
	not.b32 	%r397, %r396;
	cvt.s64.s32 	%rd1070, %r397;
	add.s64 	%rd1071, %rd1, %rd1756;
	ld.local.u8 	%rd1072, [%rd1071+232];
	ld.local.u8 	%rd1073, [%rd1071+233];
	bfi.b64 	%rd1074, %rd1073, %rd1072, 8, 8;
	ld.local.u8 	%rd1075, [%rd1071+234];
	ld.local.u8 	%rd1076, [%rd1071+235];
	bfi.b64 	%rd1077, %rd1076, %rd1075, 8, 8;
	bfi.b64 	%rd1078, %rd1077, %rd1074, 16, 16;
	ld.local.u8 	%rd1079, [%rd1071+236];
	ld.local.u8 	%rd1080, [%rd1071+237];
	bfi.b64 	%rd1081, %rd1080, %rd1079, 8, 8;
	ld.local.u8 	%rd1082, [%rd1071+238];
	ld.local.u8 	%rd1083, [%rd1071+239];
	bfi.b64 	%rd1084, %rd1083, %rd1082, 8, 8;
	bfi.b64 	%rd1085, %rd1084, %rd1081, 16, 16;
	bfi.b64 	%rd1086, %rd1085, %rd1078, 32, 32;
	and.b64  	%rd1087, %rd1086, %rd1070;
	shl.b64 	%rd1088, %rd279, 3;
	add.s64 	%rd1089, %rd1, %rd1088;
	ld.local.u64 	%rd1090, [%rd1089+32];
	xor.b64  	%rd1091, %rd1090, %rd1087;
	st.local.u64 	[%rd1089+32], %rd1091;

$L__BB0_44:
	ld.local.u64 	%rd1816, [%rd1+8];
	add.s64 	%rd1092, %rd1816, -1;
	shr.u64 	%rd1093, %rd1092, 3;
	and.b64  	%rd1094, %rd1093, 2305843009213693944;
	add.s64 	%rd1095, %rd1, %rd1094;
	ld.local.u64 	%rd1096, [%rd1095+32];
	xor.b64  	%rd1097, %rd1096, -9223372036854775808;
	st.local.u64 	[%rd1095+32], %rd1097;
	ld.local.u64 	%rd1781, [%rd1+32];
	ld.local.u64 	%rd1780, [%rd1+72];
	ld.local.u64 	%rd1779, [%rd1+112];
	ld.local.u64 	%rd1778, [%rd1+152];
	ld.local.u64 	%rd1777, [%rd1+192];
	ld.local.u64 	%rd1776, [%rd1+40];
	ld.local.u64 	%rd1775, [%rd1+80];
	ld.local.u64 	%rd1774, [%rd1+120];
	ld.local.u64 	%rd1773, [%rd1+160];
	ld.local.u64 	%rd1772, [%rd1+200];
	ld.local.u64 	%rd1771, [%rd1+48];
	ld.local.u64 	%rd1770, [%rd1+88];
	ld.local.u64 	%rd1769, [%rd1+128];
	ld.local.u64 	%rd1768, [%rd1+168];
	ld.local.u64 	%rd1767, [%rd1+208];
	ld.local.u64 	%rd1766, [%rd1+56];
	ld.local.u64 	%rd1765, [%rd1+96];
	ld.local.u64 	%rd1764, [%rd1+136];
	ld.local.u64 	%rd1763, [%rd1+176];
	ld.local.u64 	%rd1762, [%rd1+216];
	ld.local.u64 	%rd1761, [%rd1+64];
	ld.local.u64 	%rd1760, [%rd1+104];
	ld.local.u64 	%rd1759, [%rd1+144];
	ld.local.u64 	%rd1758, [%rd1+184];
	ld.local.u64 	%rd1757, [%rd1+224];
	mov.u32 	%r643, 0;

$L__BB0_45:
	xor.b64  	%rd1098, %rd1780, %rd1781;
	xor.b64  	%rd1099, %rd1098, %rd1779;
	xor.b64  	%rd1100, %rd1099, %rd1778;
	xor.b64  	%rd1101, %rd1100, %rd1777;
	xor.b64  	%rd1102, %rd1775, %rd1776;
	xor.b64  	%rd1103, %rd1102, %rd1774;
	xor.b64  	%rd1104, %rd1103, %rd1773;
	xor.b64  	%rd1105, %rd1104, %rd1772;
	xor.b64  	%rd1106, %rd1770, %rd1771;
	xor.b64  	%rd1107, %rd1106, %rd1769;
	xor.b64  	%rd1108, %rd1107, %rd1768;
	xor.b64  	%rd1109, %rd1108, %rd1767;
	xor.b64  	%rd1110, %rd1765, %rd1766;
	xor.b64  	%rd1111, %rd1110, %rd1764;
	xor.b64  	%rd1112, %rd1111, %rd1763;
	xor.b64  	%rd1113, %rd1112, %rd1762;
	xor.b64  	%rd1114, %rd1760, %rd1761;
	xor.b64  	%rd1115, %rd1114, %rd1759;
	xor.b64  	%rd1116, %rd1115, %rd1758;
	xor.b64  	%rd1117, %rd1116, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r399}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd1105;
	}
	shf.l.wrap.b32 	%r401, %r400, %r399, 1;
	shf.l.wrap.b32 	%r402, %r399, %r400, 1;
	mov.b64 	%rd1118, {%r402, %r401};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd1109;
	}
	shf.l.wrap.b32 	%r405, %r404, %r403, 1;
	shf.l.wrap.b32 	%r406, %r403, %r404, 1;
	mov.b64 	%rd1120, {%r406, %r405};
	xor.b64  	%rd1121, %rd1120, %rd1101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r407}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd1113;
	}
	shf.l.wrap.b32 	%r409, %r408, %r407, 1;
	shf.l.wrap.b32 	%r410, %r407, %r408, 1;
	mov.b64 	%rd1122, {%r410, %r409};
	xor.b64  	%rd1123, %rd1122, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r412,%dummy}, %rd1117;
	}
	shf.l.wrap.b32 	%r413, %r412, %r411, 1;
	shf.l.wrap.b32 	%r414, %r411, %r412, 1;
	mov.b64 	%rd1124, {%r414, %r413};
	xor.b64  	%rd1125, %rd1124, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd1101;
	}
	shf.l.wrap.b32 	%r417, %r416, %r415, 1;
	shf.l.wrap.b32 	%r418, %r415, %r416, 1;
	mov.b64 	%rd1126, {%r418, %r417};
	xor.b64  	%rd1127, %rd1113, %rd1126;
	xor.b64  	%rd1128, %rd1119, %rd1781;
	xor.b64  	%rd1129, %rd1780, %rd1119;
	xor.b64  	%rd1130, %rd1779, %rd1119;
	xor.b64  	%rd1131, %rd1778, %rd1119;
	xor.b64  	%rd1132, %rd1777, %rd1119;
	xor.b64  	%rd1133, %rd1776, %rd1121;
	xor.b64  	%rd1134, %rd1775, %rd1121;
	xor.b64  	%rd1135, %rd1774, %rd1121;
	xor.b64  	%rd1136, %rd1773, %rd1121;
	xor.b64  	%rd1137, %rd1772, %rd1121;
	xor.b64  	%rd1138, %rd1771, %rd1123;
	xor.b64  	%rd1139, %rd1770, %rd1123;
	xor.b64  	%rd1140, %rd1769, %rd1123;
	xor.b64  	%rd1141, %rd1768, %rd1123;
	xor.b64  	%rd1142, %rd1767, %rd1123;
	xor.b64  	%rd1143, %rd1766, %rd1125;
	xor.b64  	%rd1144, %rd1765, %rd1125;
	xor.b64  	%rd1145, %rd1764, %rd1125;
	xor.b64  	%rd1146, %rd1763, %rd1125;
	xor.b64  	%rd1147, %rd1762, %rd1125;
	xor.b64  	%rd1148, %rd1761, %rd1127;
	xor.b64  	%rd1149, %rd1760, %rd1127;
	xor.b64  	%rd1150, %rd1759, %rd1127;
	xor.b64  	%rd1151, %rd1758, %rd1127;
	xor.b64  	%rd1152, %rd1757, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r419}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd1133;
	}
	shf.l.wrap.b32 	%r421, %r420, %r419, 1;
	shf.l.wrap.b32 	%r422, %r419, %r420, 1;
	mov.b64 	%rd1153, {%r422, %r421};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd1134;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 20;
	shf.r.wrap.b32 	%r426, %r423, %r424, 20;
	mov.b64 	%rd1154, {%r426, %r425};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd1149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd1149;
	}
	shf.l.wrap.b32 	%r429, %r428, %r427, 20;
	shf.l.wrap.b32 	%r430, %r427, %r428, 20;
	mov.b64 	%rd1155, {%r430, %r429};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd1142;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 3;
	shf.r.wrap.b32 	%r434, %r431, %r432, 3;
	mov.b64 	%rd1156, {%r434, %r433};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd1150;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 25;
	shf.r.wrap.b32 	%r438, %r435, %r436, 25;
	mov.b64 	%rd1157, {%r438, %r437};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd1132;
	}
	shf.l.wrap.b32 	%r441, %r440, %r439, 18;
	shf.l.wrap.b32 	%r442, %r439, %r440, 18;
	mov.b64 	%rd1158, {%r442, %r441};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd1138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd1138;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 2;
	shf.r.wrap.b32 	%r446, %r443, %r444, 2;
	mov.b64 	%rd1159, {%r446, %r445};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd1140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd1140;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 21;
	shf.r.wrap.b32 	%r450, %r447, %r448, 21;
	mov.b64 	%rd1160, {%r450, %r449};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd1145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd1145;
	}
	shf.l.wrap.b32 	%r453, %r452, %r451, 25;
	shf.l.wrap.b32 	%r454, %r451, %r452, 25;
	mov.b64 	%rd1161, {%r454, %r453};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r455}, %rd1151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd1151;
	}
	shf.l.wrap.b32 	%r457, %r456, %r455, 8;
	shf.l.wrap.b32 	%r458, %r455, %r456, 8;
	mov.b64 	%rd1162, {%r458, %r457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd1147;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 8;
	shf.r.wrap.b32 	%r462, %r459, %r460, 8;
	mov.b64 	%rd1163, {%r462, %r461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd1131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd1131;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 23;
	shf.r.wrap.b32 	%r466, %r463, %r464, 23;
	mov.b64 	%rd1164, {%r466, %r465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r467}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd1148;
	}
	shf.l.wrap.b32 	%r469, %r468, %r467, 27;
	shf.l.wrap.b32 	%r470, %r467, %r468, 27;
	mov.b64 	%rd1165, {%r470, %r469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r471}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd1152;
	}
	shf.l.wrap.b32 	%r473, %r472, %r471, 14;
	shf.l.wrap.b32 	%r474, %r471, %r472, 14;
	mov.b64 	%rd1166, {%r474, %r473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r476,%dummy}, %rd1137;
	}
	shf.l.wrap.b32 	%r477, %r476, %r475, 2;
	shf.l.wrap.b32 	%r478, %r475, %r476, 2;
	mov.b64 	%rd1167, {%r478, %r477};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd1144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd1144;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 9;
	shf.r.wrap.b32 	%r482, %r479, %r480, 9;
	mov.b64 	%rd1168, {%r482, %r481};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd1136;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 19;
	shf.r.wrap.b32 	%r486, %r483, %r484, 19;
	mov.b64 	%rd1169, {%r486, %r485};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd1129;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 28;
	shf.r.wrap.b32 	%r490, %r487, %r488, 28;
	mov.b64 	%rd1170, {%r490, %r489};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd1143;
	}
	shf.l.wrap.b32 	%r493, %r492, %r491, 28;
	shf.l.wrap.b32 	%r494, %r491, %r492, 28;
	mov.b64 	%rd1171, {%r494, %r493};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r495}, %rd1146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd1146;
	}
	shf.l.wrap.b32 	%r497, %r496, %r495, 21;
	shf.l.wrap.b32 	%r498, %r495, %r496, 21;
	mov.b64 	%rd1172, {%r498, %r497};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd1141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd1141;
	}
	shf.l.wrap.b32 	%r501, %r500, %r499, 15;
	shf.l.wrap.b32 	%r502, %r499, %r500, 15;
	mov.b64 	%rd1173, {%r502, %r501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r503}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd1135;
	}
	shf.l.wrap.b32 	%r505, %r504, %r503, 10;
	shf.l.wrap.b32 	%r506, %r503, %r504, 10;
	mov.b64 	%rd1174, {%r506, %r505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd1139;
	}
	shf.l.wrap.b32 	%r509, %r508, %r507, 6;
	shf.l.wrap.b32 	%r510, %r507, %r508, 6;
	mov.b64 	%rd1175, {%r510, %r509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r511}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd1130;
	}
	shf.l.wrap.b32 	%r513, %r512, %r511, 3;
	shf.l.wrap.b32 	%r514, %r511, %r512, 3;
	mov.b64 	%rd1176, {%r514, %r513};
	not.b64 	%rd1177, %rd1154;
	and.b64  	%rd1178, %rd1160, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1128;
	not.b64 	%rd1180, %rd1160;
	and.b64  	%rd1181, %rd1172, %rd1180;
	xor.b64  	%rd1776, %rd1181, %rd1154;
	not.b64 	%rd1182, %rd1172;
	and.b64  	%rd1183, %rd1166, %rd1182;
	xor.b64  	%rd1771, %rd1160, %rd1183;
	not.b64 	%rd1184, %rd1166;
	and.b64  	%rd1185, %rd1128, %rd1184;
	xor.b64  	%rd1766, %rd1172, %rd1185;
	not.b64 	%rd1186, %rd1128;
	and.b64  	%rd1187, %rd1154, %rd1186;
	xor.b64  	%rd1761, %rd1166, %rd1187;
	not.b64 	%rd1188, %rd1155;
	and.b64  	%rd1189, %rd1176, %rd1188;
	xor.b64  	%rd1780, %rd1189, %rd1171;
	not.b64 	%rd1190, %rd1176;
	and.b64  	%rd1191, %rd1169, %rd1190;
	xor.b64  	%rd1775, %rd1191, %rd1155;
	not.b64 	%rd1192, %rd1169;
	and.b64  	%rd1193, %rd1156, %rd1192;
	xor.b64  	%rd1770, %rd1176, %rd1193;
	not.b64 	%rd1194, %rd1156;
	and.b64  	%rd1195, %rd1171, %rd1194;
	xor.b64  	%rd1765, %rd1169, %rd1195;
	not.b64 	%rd1196, %rd1171;
	and.b64  	%rd1197, %rd1155, %rd1196;
	xor.b64  	%rd1760, %rd1156, %rd1197;
	not.b64 	%rd1198, %rd1175;
	and.b64  	%rd1199, %rd1161, %rd1198;
	xor.b64  	%rd1779, %rd1199, %rd1153;
	not.b64 	%rd1200, %rd1161;
	and.b64  	%rd1201, %rd1162, %rd1200;
	xor.b64  	%rd1774, %rd1201, %rd1175;
	not.b64 	%rd1202, %rd1162;
	and.b64  	%rd1203, %rd1158, %rd1202;
	xor.b64  	%rd1769, %rd1161, %rd1203;
	not.b64 	%rd1204, %rd1158;
	and.b64  	%rd1205, %rd1153, %rd1204;
	xor.b64  	%rd1764, %rd1162, %rd1205;
	not.b64 	%rd1206, %rd1153;
	and.b64  	%rd1207, %rd1175, %rd1206;
	xor.b64  	%rd1759, %rd1158, %rd1207;
	not.b64 	%rd1208, %rd1170;
	and.b64  	%rd1209, %rd1174, %rd1208;
	xor.b64  	%rd1778, %rd1209, %rd1165;
	not.b64 	%rd1210, %rd1174;
	and.b64  	%rd1211, %rd1173, %rd1210;
	xor.b64  	%rd1773, %rd1211, %rd1170;
	not.b64 	%rd1212, %rd1173;
	and.b64  	%rd1213, %rd1163, %rd1212;
	xor.b64  	%rd1768, %rd1174, %rd1213;
	not.b64 	%rd1214, %rd1163;
	and.b64  	%rd1215, %rd1165, %rd1214;
	xor.b64  	%rd1763, %rd1173, %rd1215;
	not.b64 	%rd1216, %rd1165;
	and.b64  	%rd1217, %rd1170, %rd1216;
	xor.b64  	%rd1758, %rd1163, %rd1217;
	not.b64 	%rd1218, %rd1168;
	and.b64  	%rd1219, %rd1157, %rd1218;
	xor.b64  	%rd1777, %rd1219, %rd1159;
	not.b64 	%rd1220, %rd1157;
	and.b64  	%rd1221, %rd1164, %rd1220;
	xor.b64  	%rd1772, %rd1221, %rd1168;
	not.b64 	%rd1222, %rd1164;
	and.b64  	%rd1223, %rd1167, %rd1222;
	xor.b64  	%rd1767, %rd1157, %rd1223;
	not.b64 	%rd1224, %rd1167;
	and.b64  	%rd1225, %rd1159, %rd1224;
	xor.b64  	%rd1762, %rd1164, %rd1225;
	not.b64 	%rd1226, %rd1159;
	and.b64  	%rd1227, %rd1168, %rd1226;
	xor.b64  	%rd1757, %rd1167, %rd1227;
	mul.wide.s32 	%rd1228, %r643, 8;
	mov.u64 	%rd1229, CUDA_KECCAK_CONSTS;
	add.s64 	%rd1230, %rd1229, %rd1228;
	ld.const.u64 	%rd1231, [%rd1230];
	xor.b64  	%rd1781, %rd1179, %rd1231;
	add.s32 	%r643, %r643, 1;
	setp.ne.s32 	%p31, %r643, 24;
	@%p31 bra 	$L__BB0_45;

	st.local.u64 	[%rd1+32], %rd1781;
	st.local.u64 	[%rd1+72], %rd1780;
	st.local.u64 	[%rd1+112], %rd1779;
	st.local.u64 	[%rd1+152], %rd1778;
	st.local.u64 	[%rd1+192], %rd1777;
	st.local.u64 	[%rd1+40], %rd1776;
	st.local.u64 	[%rd1+80], %rd1775;
	st.local.u64 	[%rd1+120], %rd1774;
	st.local.u64 	[%rd1+160], %rd1773;
	st.local.u64 	[%rd1+200], %rd1772;
	st.local.u64 	[%rd1+48], %rd1771;
	st.local.u64 	[%rd1+88], %rd1770;
	st.local.u64 	[%rd1+128], %rd1769;
	st.local.u64 	[%rd1+168], %rd1768;
	st.local.u64 	[%rd1+208], %rd1767;
	st.local.u64 	[%rd1+56], %rd1766;
	st.local.u64 	[%rd1+96], %rd1765;
	st.local.u64 	[%rd1+136], %rd1764;
	st.local.u64 	[%rd1+176], %rd1763;
	st.local.u64 	[%rd1+216], %rd1762;
	st.local.u64 	[%rd1+64], %rd1761;
	st.local.u64 	[%rd1+104], %rd1760;
	st.local.u64 	[%rd1+144], %rd1759;
	st.local.u64 	[%rd1+184], %rd1758;
	st.local.u64 	[%rd1+224], %rd1757;
	shr.u64 	%rd374, %rd1816, 6;
	setp.eq.s64 	%p32, %rd374, 0;
	@%p32 bra 	$L__BB0_54;

	add.s64 	%rd1232, %rd374, -1;
	and.b64  	%rd1783, %rd374, 3;
	setp.lt.u64 	%p33, %rd1232, 3;
	mov.u32 	%r645, 0;
	@%p33 bra 	$L__BB0_50;

	sub.s64 	%rd1782, %rd374, %rd1783;

$L__BB0_49:
	mul.wide.s32 	%rd1233, %r645, 8;
	add.s64 	%rd1234, %rd1, %rd1233;
	ld.local.u8 	%rd1235, [%rd1234+32];
	ld.local.u8 	%rd1236, [%rd1234+33];
	bfi.b64 	%rd1237, %rd1236, %rd1235, 8, 8;
	ld.local.u8 	%rd1238, [%rd1234+34];
	ld.local.u8 	%rd1239, [%rd1234+35];
	bfi.b64 	%rd1240, %rd1239, %rd1238, 8, 8;
	bfi.b64 	%rd1241, %rd1240, %rd1237, 16, 16;
	ld.local.u8 	%rd1242, [%rd1234+36];
	ld.local.u8 	%rd1243, [%rd1234+37];
	bfi.b64 	%rd1244, %rd1243, %rd1242, 8, 8;
	ld.local.u8 	%rd1245, [%rd1234+38];
	ld.local.u8 	%rd1246, [%rd1234+39];
	bfi.b64 	%rd1247, %rd1246, %rd1245, 8, 8;
	bfi.b64 	%rd1248, %rd1247, %rd1244, 16, 16;
	bfi.b64 	%rd1249, %rd1248, %rd1241, 32, 32;
	st.local.u8 	[%rd1234+232], %rd1237;
	shr.u64 	%rd1250, %rd1237, 8;
	st.local.u8 	[%rd1234+233], %rd1250;
	shr.u64 	%rd1251, %rd1241, 24;
	st.local.u8 	[%rd1234+235], %rd1251;
	shr.u64 	%rd1252, %rd1241, 16;
	st.local.u8 	[%rd1234+234], %rd1252;
	shr.u64 	%rd1253, %rd1249, 56;
	st.local.u8 	[%rd1234+239], %rd1253;
	shr.u64 	%rd1254, %rd1249, 48;
	st.local.u8 	[%rd1234+238], %rd1254;
	shr.u64 	%rd1255, %rd1249, 40;
	st.local.u8 	[%rd1234+237], %rd1255;
	shr.u64 	%rd1256, %rd1249, 32;
	st.local.u8 	[%rd1234+236], %rd1256;
	ld.local.u8 	%rd1257, [%rd1234+40];
	ld.local.u8 	%rd1258, [%rd1234+41];
	bfi.b64 	%rd1259, %rd1258, %rd1257, 8, 8;
	ld.local.u8 	%rd1260, [%rd1234+42];
	ld.local.u8 	%rd1261, [%rd1234+43];
	bfi.b64 	%rd1262, %rd1261, %rd1260, 8, 8;
	bfi.b64 	%rd1263, %rd1262, %rd1259, 16, 16;
	ld.local.u8 	%rd1264, [%rd1234+44];
	ld.local.u8 	%rd1265, [%rd1234+45];
	bfi.b64 	%rd1266, %rd1265, %rd1264, 8, 8;
	ld.local.u8 	%rd1267, [%rd1234+46];
	ld.local.u8 	%rd1268, [%rd1234+47];
	bfi.b64 	%rd1269, %rd1268, %rd1267, 8, 8;
	bfi.b64 	%rd1270, %rd1269, %rd1266, 16, 16;
	bfi.b64 	%rd1271, %rd1270, %rd1263, 32, 32;
	st.local.u8 	[%rd1234+240], %rd1259;
	shr.u64 	%rd1272, %rd1259, 8;
	st.local.u8 	[%rd1234+241], %rd1272;
	shr.u64 	%rd1273, %rd1263, 24;
	st.local.u8 	[%rd1234+243], %rd1273;
	shr.u64 	%rd1274, %rd1263, 16;
	st.local.u8 	[%rd1234+242], %rd1274;
	shr.u64 	%rd1275, %rd1271, 56;
	st.local.u8 	[%rd1234+247], %rd1275;
	shr.u64 	%rd1276, %rd1271, 48;
	st.local.u8 	[%rd1234+246], %rd1276;
	shr.u64 	%rd1277, %rd1271, 40;
	st.local.u8 	[%rd1234+245], %rd1277;
	shr.u64 	%rd1278, %rd1271, 32;
	st.local.u8 	[%rd1234+244], %rd1278;
	ld.local.u8 	%rd1279, [%rd1234+48];
	ld.local.u8 	%rd1280, [%rd1234+49];
	bfi.b64 	%rd1281, %rd1280, %rd1279, 8, 8;
	ld.local.u8 	%rd1282, [%rd1234+50];
	ld.local.u8 	%rd1283, [%rd1234+51];
	bfi.b64 	%rd1284, %rd1283, %rd1282, 8, 8;
	bfi.b64 	%rd1285, %rd1284, %rd1281, 16, 16;
	ld.local.u8 	%rd1286, [%rd1234+52];
	ld.local.u8 	%rd1287, [%rd1234+53];
	bfi.b64 	%rd1288, %rd1287, %rd1286, 8, 8;
	ld.local.u8 	%rd1289, [%rd1234+54];
	ld.local.u8 	%rd1290, [%rd1234+55];
	bfi.b64 	%rd1291, %rd1290, %rd1289, 8, 8;
	bfi.b64 	%rd1292, %rd1291, %rd1288, 16, 16;
	bfi.b64 	%rd1293, %rd1292, %rd1285, 32, 32;
	st.local.u8 	[%rd1234+248], %rd1281;
	shr.u64 	%rd1294, %rd1281, 8;
	st.local.u8 	[%rd1234+249], %rd1294;
	shr.u64 	%rd1295, %rd1285, 24;
	st.local.u8 	[%rd1234+251], %rd1295;
	shr.u64 	%rd1296, %rd1285, 16;
	st.local.u8 	[%rd1234+250], %rd1296;
	shr.u64 	%rd1297, %rd1293, 56;
	st.local.u8 	[%rd1234+255], %rd1297;
	shr.u64 	%rd1298, %rd1293, 48;
	st.local.u8 	[%rd1234+254], %rd1298;
	shr.u64 	%rd1299, %rd1293, 40;
	st.local.u8 	[%rd1234+253], %rd1299;
	shr.u64 	%rd1300, %rd1293, 32;
	st.local.u8 	[%rd1234+252], %rd1300;
	ld.local.u8 	%rd1301, [%rd1234+56];
	ld.local.u8 	%rd1302, [%rd1234+57];
	bfi.b64 	%rd1303, %rd1302, %rd1301, 8, 8;
	ld.local.u8 	%rd1304, [%rd1234+58];
	ld.local.u8 	%rd1305, [%rd1234+59];
	bfi.b64 	%rd1306, %rd1305, %rd1304, 8, 8;
	bfi.b64 	%rd1307, %rd1306, %rd1303, 16, 16;
	ld.local.u8 	%rd1308, [%rd1234+60];
	ld.local.u8 	%rd1309, [%rd1234+61];
	bfi.b64 	%rd1310, %rd1309, %rd1308, 8, 8;
	ld.local.u8 	%rd1311, [%rd1234+62];
	ld.local.u8 	%rd1312, [%rd1234+63];
	bfi.b64 	%rd1313, %rd1312, %rd1311, 8, 8;
	bfi.b64 	%rd1314, %rd1313, %rd1310, 16, 16;
	bfi.b64 	%rd1315, %rd1314, %rd1307, 32, 32;
	st.local.u8 	[%rd1234+256], %rd1303;
	shr.u64 	%rd1316, %rd1303, 8;
	st.local.u8 	[%rd1234+257], %rd1316;
	shr.u64 	%rd1317, %rd1307, 24;
	st.local.u8 	[%rd1234+259], %rd1317;
	shr.u64 	%rd1318, %rd1307, 16;
	st.local.u8 	[%rd1234+258], %rd1318;
	shr.u64 	%rd1319, %rd1315, 56;
	st.local.u8 	[%rd1234+263], %rd1319;
	shr.u64 	%rd1320, %rd1315, 48;
	st.local.u8 	[%rd1234+262], %rd1320;
	shr.u64 	%rd1321, %rd1315, 40;
	st.local.u8 	[%rd1234+261], %rd1321;
	shr.u64 	%rd1322, %rd1315, 32;
	st.local.u8 	[%rd1234+260], %rd1322;
	add.s32 	%r645, %r645, 4;
	add.s64 	%rd1782, %rd1782, -4;
	setp.ne.s64 	%p34, %rd1782, 0;
	@%p34 bra 	$L__BB0_49;

$L__BB0_50:
	setp.eq.s64 	%p35, %rd1783, 0;
	@%p35 bra 	$L__BB0_54;

$L__BB0_52:
	.pragma "nounroll";
	mul.wide.s32 	%rd1323, %r645, 8;
	add.s64 	%rd1324, %rd1, %rd1323;
	ld.local.u8 	%rd1325, [%rd1324+32];
	ld.local.u8 	%rd1326, [%rd1324+33];
	bfi.b64 	%rd1327, %rd1326, %rd1325, 8, 8;
	ld.local.u8 	%rd1328, [%rd1324+34];
	ld.local.u8 	%rd1329, [%rd1324+35];
	bfi.b64 	%rd1330, %rd1329, %rd1328, 8, 8;
	bfi.b64 	%rd1331, %rd1330, %rd1327, 16, 16;
	ld.local.u8 	%rd1332, [%rd1324+36];
	ld.local.u8 	%rd1333, [%rd1324+37];
	bfi.b64 	%rd1334, %rd1333, %rd1332, 8, 8;
	ld.local.u8 	%rd1335, [%rd1324+38];
	ld.local.u8 	%rd1336, [%rd1324+39];
	bfi.b64 	%rd1337, %rd1336, %rd1335, 8, 8;
	bfi.b64 	%rd1338, %rd1337, %rd1334, 16, 16;
	bfi.b64 	%rd1339, %rd1338, %rd1331, 32, 32;
	shl.b32 	%r517, %r645, 3;
	cvt.s64.s32 	%rd1340, %r517;
	add.s64 	%rd1341, %rd1, %rd1340;
	st.local.u8 	[%rd1341+232], %rd1327;
	shr.u64 	%rd1342, %rd1327, 8;
	st.local.u8 	[%rd1341+233], %rd1342;
	shr.u64 	%rd1343, %rd1331, 24;
	st.local.u8 	[%rd1341+235], %rd1343;
	shr.u64 	%rd1344, %rd1331, 16;
	st.local.u8 	[%rd1341+234], %rd1344;
	shr.u64 	%rd1345, %rd1339, 56;
	st.local.u8 	[%rd1341+239], %rd1345;
	shr.u64 	%rd1346, %rd1339, 48;
	st.local.u8 	[%rd1341+238], %rd1346;
	shr.u64 	%rd1347, %rd1339, 40;
	st.local.u8 	[%rd1341+237], %rd1347;
	shr.u64 	%rd1348, %rd1339, 32;
	st.local.u8 	[%rd1341+236], %rd1348;
	add.s32 	%r645, %r645, 1;
	add.s64 	%rd1783, %rd1783, -1;
	setp.ne.s64 	%p36, %rd1783, 0;
	@%p36 bra 	$L__BB0_52;

	ld.local.u64 	%rd1816, [%rd1+8];

$L__BB0_54:
	st.local.u64 	[%rd1+424], %rd1816;
	ld.local.u32 	%r651, [%rd1+4];
	setp.eq.s32 	%p37, %r651, 0;
	@%p37 bra 	$L__BB0_72;

	mov.u64 	%rd1787, 0;
	mov.u64 	%rd1815, %rd1816;

$L__BB0_56:
	setp.ne.s64 	%p38, %rd1815, 0;
	@%p38 bra 	$L__BB0_68;

	mov.u64 	%rd1788, CUDA_KECCAK_CONSTS;
	ld.local.u64 	%rd1813, [%rd1+32];
	ld.local.u64 	%rd1812, [%rd1+72];
	ld.local.u64 	%rd1811, [%rd1+112];
	ld.local.u64 	%rd1810, [%rd1+152];
	ld.local.u64 	%rd1809, [%rd1+192];
	ld.local.u64 	%rd1808, [%rd1+40];
	ld.local.u64 	%rd1807, [%rd1+80];
	ld.local.u64 	%rd1806, [%rd1+120];
	ld.local.u64 	%rd1805, [%rd1+160];
	ld.local.u64 	%rd1804, [%rd1+200];
	ld.local.u64 	%rd1803, [%rd1+48];
	ld.local.u64 	%rd1802, [%rd1+88];
	ld.local.u64 	%rd1801, [%rd1+128];
	ld.local.u64 	%rd1800, [%rd1+168];
	ld.local.u64 	%rd1799, [%rd1+208];
	ld.local.u64 	%rd1798, [%rd1+56];
	ld.local.u64 	%rd1797, [%rd1+96];
	ld.local.u64 	%rd1796, [%rd1+136];
	ld.local.u64 	%rd1795, [%rd1+176];
	ld.local.u64 	%rd1794, [%rd1+216];
	ld.local.u64 	%rd1793, [%rd1+64];
	ld.local.u64 	%rd1792, [%rd1+104];
	ld.local.u64 	%rd1791, [%rd1+144];
	ld.local.u64 	%rd1790, [%rd1+184];
	ld.local.u64 	%rd1789, [%rd1+224];
	mov.u32 	%r648, 0;

$L__BB0_58:
	xor.b64  	%rd1351, %rd1812, %rd1813;
	xor.b64  	%rd1352, %rd1351, %rd1811;
	xor.b64  	%rd1353, %rd1352, %rd1810;
	xor.b64  	%rd1354, %rd1353, %rd1809;
	xor.b64  	%rd1355, %rd1807, %rd1808;
	xor.b64  	%rd1356, %rd1355, %rd1806;
	xor.b64  	%rd1357, %rd1356, %rd1805;
	xor.b64  	%rd1358, %rd1357, %rd1804;
	xor.b64  	%rd1359, %rd1802, %rd1803;
	xor.b64  	%rd1360, %rd1359, %rd1801;
	xor.b64  	%rd1361, %rd1360, %rd1800;
	xor.b64  	%rd1362, %rd1361, %rd1799;
	xor.b64  	%rd1363, %rd1797, %rd1798;
	xor.b64  	%rd1364, %rd1363, %rd1796;
	xor.b64  	%rd1365, %rd1364, %rd1795;
	xor.b64  	%rd1366, %rd1365, %rd1794;
	xor.b64  	%rd1367, %rd1792, %rd1793;
	xor.b64  	%rd1368, %rd1367, %rd1791;
	xor.b64  	%rd1369, %rd1368, %rd1790;
	xor.b64  	%rd1370, %rd1369, %rd1789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r519}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd1358;
	}
	shf.l.wrap.b32 	%r521, %r520, %r519, 1;
	shf.l.wrap.b32 	%r522, %r519, %r520, 1;
	mov.b64 	%rd1371, {%r522, %r521};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd1362;
	}
	shf.l.wrap.b32 	%r525, %r524, %r523, 1;
	shf.l.wrap.b32 	%r526, %r523, %r524, 1;
	mov.b64 	%rd1373, {%r526, %r525};
	xor.b64  	%rd1374, %rd1373, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r527}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd1366;
	}
	shf.l.wrap.b32 	%r529, %r528, %r527, 1;
	shf.l.wrap.b32 	%r530, %r527, %r528, 1;
	mov.b64 	%rd1375, {%r530, %r529};
	xor.b64  	%rd1376, %rd1375, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd1370;
	}
	shf.l.wrap.b32 	%r533, %r532, %r531, 1;
	shf.l.wrap.b32 	%r534, %r531, %r532, 1;
	mov.b64 	%rd1377, {%r534, %r533};
	xor.b64  	%rd1378, %rd1377, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd1354;
	}
	shf.l.wrap.b32 	%r537, %r536, %r535, 1;
	shf.l.wrap.b32 	%r538, %r535, %r536, 1;
	mov.b64 	%rd1379, {%r538, %r537};
	xor.b64  	%rd1380, %rd1366, %rd1379;
	xor.b64  	%rd1381, %rd1372, %rd1813;
	xor.b64  	%rd1382, %rd1812, %rd1372;
	xor.b64  	%rd1383, %rd1811, %rd1372;
	xor.b64  	%rd1384, %rd1810, %rd1372;
	xor.b64  	%rd1385, %rd1809, %rd1372;
	xor.b64  	%rd1386, %rd1808, %rd1374;
	xor.b64  	%rd1387, %rd1807, %rd1374;
	xor.b64  	%rd1388, %rd1806, %rd1374;
	xor.b64  	%rd1389, %rd1805, %rd1374;
	xor.b64  	%rd1390, %rd1804, %rd1374;
	xor.b64  	%rd1391, %rd1803, %rd1376;
	xor.b64  	%rd1392, %rd1802, %rd1376;
	xor.b64  	%rd1393, %rd1801, %rd1376;
	xor.b64  	%rd1394, %rd1800, %rd1376;
	xor.b64  	%rd1395, %rd1799, %rd1376;
	xor.b64  	%rd1396, %rd1798, %rd1378;
	xor.b64  	%rd1397, %rd1797, %rd1378;
	xor.b64  	%rd1398, %rd1796, %rd1378;
	xor.b64  	%rd1399, %rd1795, %rd1378;
	xor.b64  	%rd1400, %rd1794, %rd1378;
	xor.b64  	%rd1401, %rd1793, %rd1380;
	xor.b64  	%rd1402, %rd1792, %rd1380;
	xor.b64  	%rd1403, %rd1791, %rd1380;
	xor.b64  	%rd1404, %rd1790, %rd1380;
	xor.b64  	%rd1405, %rd1789, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd1386;
	}
	shf.l.wrap.b32 	%r541, %r540, %r539, 1;
	shf.l.wrap.b32 	%r542, %r539, %r540, 1;
	mov.b64 	%rd1406, {%r542, %r541};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd1387;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 20;
	shf.r.wrap.b32 	%r546, %r543, %r544, 20;
	mov.b64 	%rd1407, {%r546, %r545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd1402;
	}
	shf.l.wrap.b32 	%r549, %r548, %r547, 20;
	shf.l.wrap.b32 	%r550, %r547, %r548, 20;
	mov.b64 	%rd1408, {%r550, %r549};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd1395;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 3;
	shf.r.wrap.b32 	%r554, %r551, %r552, 3;
	mov.b64 	%rd1409, {%r554, %r553};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd1403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd1403;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 25;
	shf.r.wrap.b32 	%r558, %r555, %r556, 25;
	mov.b64 	%rd1410, {%r558, %r557};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r559}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd1385;
	}
	shf.l.wrap.b32 	%r561, %r560, %r559, 18;
	shf.l.wrap.b32 	%r562, %r559, %r560, 18;
	mov.b64 	%rd1411, {%r562, %r561};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd1391;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 2;
	shf.r.wrap.b32 	%r566, %r563, %r564, 2;
	mov.b64 	%rd1412, {%r566, %r565};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd1393;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 21;
	shf.r.wrap.b32 	%r570, %r567, %r568, 21;
	mov.b64 	%rd1413, {%r570, %r569};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd1398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd1398;
	}
	shf.l.wrap.b32 	%r573, %r572, %r571, 25;
	shf.l.wrap.b32 	%r574, %r571, %r572, 25;
	mov.b64 	%rd1414, {%r574, %r573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r575}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd1404;
	}
	shf.l.wrap.b32 	%r577, %r576, %r575, 8;
	shf.l.wrap.b32 	%r578, %r575, %r576, 8;
	mov.b64 	%rd1415, {%r578, %r577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd1400;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 8;
	shf.r.wrap.b32 	%r582, %r579, %r580, 8;
	mov.b64 	%rd1416, {%r582, %r581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd1384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd1384;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 23;
	shf.r.wrap.b32 	%r586, %r583, %r584, 23;
	mov.b64 	%rd1417, {%r586, %r585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd1401;
	}
	shf.l.wrap.b32 	%r589, %r588, %r587, 27;
	shf.l.wrap.b32 	%r590, %r587, %r588, 27;
	mov.b64 	%rd1418, {%r590, %r589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd1405;
	}
	shf.l.wrap.b32 	%r593, %r592, %r591, 14;
	shf.l.wrap.b32 	%r594, %r591, %r592, 14;
	mov.b64 	%rd1419, {%r594, %r593};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd1390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd1390;
	}
	shf.l.wrap.b32 	%r597, %r596, %r595, 2;
	shf.l.wrap.b32 	%r598, %r595, %r596, 2;
	mov.b64 	%rd1420, {%r598, %r597};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd1397;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 9;
	shf.r.wrap.b32 	%r602, %r599, %r600, 9;
	mov.b64 	%rd1421, {%r602, %r601};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd1389;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 19;
	shf.r.wrap.b32 	%r606, %r603, %r604, 19;
	mov.b64 	%rd1422, {%r606, %r605};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd1382;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 28;
	shf.r.wrap.b32 	%r610, %r607, %r608, 28;
	mov.b64 	%rd1423, {%r610, %r609};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd1396;
	}
	shf.l.wrap.b32 	%r613, %r612, %r611, 28;
	shf.l.wrap.b32 	%r614, %r611, %r612, 28;
	mov.b64 	%rd1424, {%r614, %r613};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r615}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd1399;
	}
	shf.l.wrap.b32 	%r617, %r616, %r615, 21;
	shf.l.wrap.b32 	%r618, %r615, %r616, 21;
	mov.b64 	%rd1425, {%r618, %r617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd1394;
	}
	shf.l.wrap.b32 	%r621, %r620, %r619, 15;
	shf.l.wrap.b32 	%r622, %r619, %r620, 15;
	mov.b64 	%rd1426, {%r622, %r621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r623}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd1388;
	}
	shf.l.wrap.b32 	%r625, %r624, %r623, 10;
	shf.l.wrap.b32 	%r626, %r623, %r624, 10;
	mov.b64 	%rd1427, {%r626, %r625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd1392;
	}
	shf.l.wrap.b32 	%r629, %r628, %r627, 6;
	shf.l.wrap.b32 	%r630, %r627, %r628, 6;
	mov.b64 	%rd1428, {%r630, %r629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r631}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd1383;
	}
	shf.l.wrap.b32 	%r633, %r632, %r631, 3;
	shf.l.wrap.b32 	%r634, %r631, %r632, 3;
	mov.b64 	%rd1429, {%r634, %r633};
	not.b64 	%rd1430, %rd1407;
	and.b64  	%rd1431, %rd1413, %rd1430;
	xor.b64  	%rd1432, %rd1431, %rd1381;
	not.b64 	%rd1433, %rd1413;
	and.b64  	%rd1434, %rd1425, %rd1433;
	xor.b64  	%rd1808, %rd1434, %rd1407;
	not.b64 	%rd1435, %rd1425;
	and.b64  	%rd1436, %rd1419, %rd1435;
	xor.b64  	%rd1803, %rd1413, %rd1436;
	not.b64 	%rd1437, %rd1419;
	and.b64  	%rd1438, %rd1381, %rd1437;
	xor.b64  	%rd1798, %rd1425, %rd1438;
	not.b64 	%rd1439, %rd1381;
	and.b64  	%rd1440, %rd1407, %rd1439;
	xor.b64  	%rd1793, %rd1419, %rd1440;
	not.b64 	%rd1441, %rd1408;
	and.b64  	%rd1442, %rd1429, %rd1441;
	xor.b64  	%rd1812, %rd1442, %rd1424;
	not.b64 	%rd1443, %rd1429;
	and.b64  	%rd1444, %rd1422, %rd1443;
	xor.b64  	%rd1807, %rd1444, %rd1408;
	not.b64 	%rd1445, %rd1422;
	and.b64  	%rd1446, %rd1409, %rd1445;
	xor.b64  	%rd1802, %rd1429, %rd1446;
	not.b64 	%rd1447, %rd1409;
	and.b64  	%rd1448, %rd1424, %rd1447;
	xor.b64  	%rd1797, %rd1422, %rd1448;
	not.b64 	%rd1449, %rd1424;
	and.b64  	%rd1450, %rd1408, %rd1449;
	xor.b64  	%rd1792, %rd1409, %rd1450;
	not.b64 	%rd1451, %rd1428;
	and.b64  	%rd1452, %rd1414, %rd1451;
	xor.b64  	%rd1811, %rd1452, %rd1406;
	not.b64 	%rd1453, %rd1414;
	and.b64  	%rd1454, %rd1415, %rd1453;
	xor.b64  	%rd1806, %rd1454, %rd1428;
	not.b64 	%rd1455, %rd1415;
	and.b64  	%rd1456, %rd1411, %rd1455;
	xor.b64  	%rd1801, %rd1414, %rd1456;
	not.b64 	%rd1457, %rd1411;
	and.b64  	%rd1458, %rd1406, %rd1457;
	xor.b64  	%rd1796, %rd1415, %rd1458;
	not.b64 	%rd1459, %rd1406;
	and.b64  	%rd1460, %rd1428, %rd1459;
	xor.b64  	%rd1791, %rd1411, %rd1460;
	not.b64 	%rd1461, %rd1423;
	and.b64  	%rd1462, %rd1427, %rd1461;
	xor.b64  	%rd1810, %rd1462, %rd1418;
	not.b64 	%rd1463, %rd1427;
	and.b64  	%rd1464, %rd1426, %rd1463;
	xor.b64  	%rd1805, %rd1464, %rd1423;
	not.b64 	%rd1465, %rd1426;
	and.b64  	%rd1466, %rd1416, %rd1465;
	xor.b64  	%rd1800, %rd1427, %rd1466;
	not.b64 	%rd1467, %rd1416;
	and.b64  	%rd1468, %rd1418, %rd1467;
	xor.b64  	%rd1795, %rd1426, %rd1468;
	not.b64 	%rd1469, %rd1418;
	and.b64  	%rd1470, %rd1423, %rd1469;
	xor.b64  	%rd1790, %rd1416, %rd1470;
	not.b64 	%rd1471, %rd1421;
	and.b64  	%rd1472, %rd1410, %rd1471;
	xor.b64  	%rd1809, %rd1472, %rd1412;
	not.b64 	%rd1473, %rd1410;
	and.b64  	%rd1474, %rd1417, %rd1473;
	xor.b64  	%rd1804, %rd1474, %rd1421;
	not.b64 	%rd1475, %rd1417;
	and.b64  	%rd1476, %rd1420, %rd1475;
	xor.b64  	%rd1799, %rd1410, %rd1476;
	not.b64 	%rd1477, %rd1420;
	and.b64  	%rd1478, %rd1412, %rd1477;
	xor.b64  	%rd1794, %rd1417, %rd1478;
	not.b64 	%rd1479, %rd1412;
	and.b64  	%rd1480, %rd1421, %rd1479;
	xor.b64  	%rd1789, %rd1420, %rd1480;
	ld.const.u64 	%rd1481, [%rd1788];
	xor.b64  	%rd1813, %rd1432, %rd1481;
	add.s64 	%rd1788, %rd1788, 8;
	add.s32 	%r648, %r648, 1;
	setp.ne.s32 	%p39, %r648, 24;
	@%p39 bra 	$L__BB0_58;

	st.local.u64 	[%rd1+32], %rd1813;
	st.local.u64 	[%rd1+72], %rd1812;
	st.local.u64 	[%rd1+112], %rd1811;
	st.local.u64 	[%rd1+152], %rd1810;
	st.local.u64 	[%rd1+192], %rd1809;
	st.local.u64 	[%rd1+40], %rd1808;
	st.local.u64 	[%rd1+80], %rd1807;
	st.local.u64 	[%rd1+120], %rd1806;
	st.local.u64 	[%rd1+160], %rd1805;
	st.local.u64 	[%rd1+200], %rd1804;
	st.local.u64 	[%rd1+48], %rd1803;
	st.local.u64 	[%rd1+88], %rd1802;
	st.local.u64 	[%rd1+128], %rd1801;
	st.local.u64 	[%rd1+168], %rd1800;
	st.local.u64 	[%rd1+208], %rd1799;
	st.local.u64 	[%rd1+56], %rd1798;
	st.local.u64 	[%rd1+96], %rd1797;
	st.local.u64 	[%rd1+136], %rd1796;
	st.local.u64 	[%rd1+176], %rd1795;
	st.local.u64 	[%rd1+216], %rd1794;
	st.local.u64 	[%rd1+64], %rd1793;
	st.local.u64 	[%rd1+104], %rd1792;
	st.local.u64 	[%rd1+144], %rd1791;
	st.local.u64 	[%rd1+184], %rd1790;
	st.local.u64 	[%rd1+224], %rd1789;
	shr.u64 	%rd463, %rd1816, 6;
	setp.eq.s64 	%p40, %rd463, 0;
	@%p40 bra 	$L__BB0_67;

	add.s64 	%rd1482, %rd463, -1;
	and.b64  	%rd464, %rd463, 3;
	setp.lt.u64 	%p41, %rd1482, 3;
	mov.u32 	%r650, 0;
	@%p41 bra 	$L__BB0_63;

	sub.s64 	%rd1814, %rd463, %rd464;

$L__BB0_62:
	mul.wide.s32 	%rd1483, %r650, 8;
	add.s64 	%rd1484, %rd1, %rd1483;
	ld.local.u8 	%rd1485, [%rd1484+32];
	ld.local.u8 	%rd1486, [%rd1484+33];
	bfi.b64 	%rd1487, %rd1486, %rd1485, 8, 8;
	ld.local.u8 	%rd1488, [%rd1484+34];
	ld.local.u8 	%rd1489, [%rd1484+35];
	bfi.b64 	%rd1490, %rd1489, %rd1488, 8, 8;
	bfi.b64 	%rd1491, %rd1490, %rd1487, 16, 16;
	ld.local.u8 	%rd1492, [%rd1484+36];
	ld.local.u8 	%rd1493, [%rd1484+37];
	bfi.b64 	%rd1494, %rd1493, %rd1492, 8, 8;
	ld.local.u8 	%rd1495, [%rd1484+38];
	ld.local.u8 	%rd1496, [%rd1484+39];
	bfi.b64 	%rd1497, %rd1496, %rd1495, 8, 8;
	bfi.b64 	%rd1498, %rd1497, %rd1494, 16, 16;
	bfi.b64 	%rd1499, %rd1498, %rd1491, 32, 32;
	st.local.u8 	[%rd1484+232], %rd1487;
	shr.u64 	%rd1500, %rd1487, 8;
	st.local.u8 	[%rd1484+233], %rd1500;
	shr.u64 	%rd1501, %rd1491, 24;
	st.local.u8 	[%rd1484+235], %rd1501;
	shr.u64 	%rd1502, %rd1491, 16;
	st.local.u8 	[%rd1484+234], %rd1502;
	shr.u64 	%rd1503, %rd1499, 56;
	st.local.u8 	[%rd1484+239], %rd1503;
	shr.u64 	%rd1504, %rd1499, 48;
	st.local.u8 	[%rd1484+238], %rd1504;
	shr.u64 	%rd1505, %rd1499, 40;
	st.local.u8 	[%rd1484+237], %rd1505;
	shr.u64 	%rd1506, %rd1499, 32;
	st.local.u8 	[%rd1484+236], %rd1506;
	ld.local.u8 	%rd1507, [%rd1484+40];
	ld.local.u8 	%rd1508, [%rd1484+41];
	bfi.b64 	%rd1509, %rd1508, %rd1507, 8, 8;
	ld.local.u8 	%rd1510, [%rd1484+42];
	ld.local.u8 	%rd1511, [%rd1484+43];
	bfi.b64 	%rd1512, %rd1511, %rd1510, 8, 8;
	bfi.b64 	%rd1513, %rd1512, %rd1509, 16, 16;
	ld.local.u8 	%rd1514, [%rd1484+44];
	ld.local.u8 	%rd1515, [%rd1484+45];
	bfi.b64 	%rd1516, %rd1515, %rd1514, 8, 8;
	ld.local.u8 	%rd1517, [%rd1484+46];
	ld.local.u8 	%rd1518, [%rd1484+47];
	bfi.b64 	%rd1519, %rd1518, %rd1517, 8, 8;
	bfi.b64 	%rd1520, %rd1519, %rd1516, 16, 16;
	bfi.b64 	%rd1521, %rd1520, %rd1513, 32, 32;
	st.local.u8 	[%rd1484+240], %rd1509;
	shr.u64 	%rd1522, %rd1509, 8;
	st.local.u8 	[%rd1484+241], %rd1522;
	shr.u64 	%rd1523, %rd1513, 24;
	st.local.u8 	[%rd1484+243], %rd1523;
	shr.u64 	%rd1524, %rd1513, 16;
	st.local.u8 	[%rd1484+242], %rd1524;
	shr.u64 	%rd1525, %rd1521, 56;
	st.local.u8 	[%rd1484+247], %rd1525;
	shr.u64 	%rd1526, %rd1521, 48;
	st.local.u8 	[%rd1484+246], %rd1526;
	shr.u64 	%rd1527, %rd1521, 40;
	st.local.u8 	[%rd1484+245], %rd1527;
	shr.u64 	%rd1528, %rd1521, 32;
	st.local.u8 	[%rd1484+244], %rd1528;
	ld.local.u8 	%rd1529, [%rd1484+48];
	ld.local.u8 	%rd1530, [%rd1484+49];
	bfi.b64 	%rd1531, %rd1530, %rd1529, 8, 8;
	ld.local.u8 	%rd1532, [%rd1484+50];
	ld.local.u8 	%rd1533, [%rd1484+51];
	bfi.b64 	%rd1534, %rd1533, %rd1532, 8, 8;
	bfi.b64 	%rd1535, %rd1534, %rd1531, 16, 16;
	ld.local.u8 	%rd1536, [%rd1484+52];
	ld.local.u8 	%rd1537, [%rd1484+53];
	bfi.b64 	%rd1538, %rd1537, %rd1536, 8, 8;
	ld.local.u8 	%rd1539, [%rd1484+54];
	ld.local.u8 	%rd1540, [%rd1484+55];
	bfi.b64 	%rd1541, %rd1540, %rd1539, 8, 8;
	bfi.b64 	%rd1542, %rd1541, %rd1538, 16, 16;
	bfi.b64 	%rd1543, %rd1542, %rd1535, 32, 32;
	st.local.u8 	[%rd1484+248], %rd1531;
	shr.u64 	%rd1544, %rd1531, 8;
	st.local.u8 	[%rd1484+249], %rd1544;
	shr.u64 	%rd1545, %rd1535, 24;
	st.local.u8 	[%rd1484+251], %rd1545;
	shr.u64 	%rd1546, %rd1535, 16;
	st.local.u8 	[%rd1484+250], %rd1546;
	shr.u64 	%rd1547, %rd1543, 56;
	st.local.u8 	[%rd1484+255], %rd1547;
	shr.u64 	%rd1548, %rd1543, 48;
	st.local.u8 	[%rd1484+254], %rd1548;
	shr.u64 	%rd1549, %rd1543, 40;
	st.local.u8 	[%rd1484+253], %rd1549;
	shr.u64 	%rd1550, %rd1543, 32;
	st.local.u8 	[%rd1484+252], %rd1550;
	ld.local.u8 	%rd1551, [%rd1484+56];
	ld.local.u8 	%rd1552, [%rd1484+57];
	bfi.b64 	%rd1553, %rd1552, %rd1551, 8, 8;
	ld.local.u8 	%rd1554, [%rd1484+58];
	ld.local.u8 	%rd1555, [%rd1484+59];
	bfi.b64 	%rd1556, %rd1555, %rd1554, 8, 8;
	bfi.b64 	%rd1557, %rd1556, %rd1553, 16, 16;
	ld.local.u8 	%rd1558, [%rd1484+60];
	ld.local.u8 	%rd1559, [%rd1484+61];
	bfi.b64 	%rd1560, %rd1559, %rd1558, 8, 8;
	ld.local.u8 	%rd1561, [%rd1484+62];
	ld.local.u8 	%rd1562, [%rd1484+63];
	bfi.b64 	%rd1563, %rd1562, %rd1561, 8, 8;
	bfi.b64 	%rd1564, %rd1563, %rd1560, 16, 16;
	bfi.b64 	%rd1565, %rd1564, %rd1557, 32, 32;
	st.local.u8 	[%rd1484+256], %rd1553;
	shr.u64 	%rd1566, %rd1553, 8;
	st.local.u8 	[%rd1484+257], %rd1566;
	shr.u64 	%rd1567, %rd1557, 24;
	st.local.u8 	[%rd1484+259], %rd1567;
	shr.u64 	%rd1568, %rd1557, 16;
	st.local.u8 	[%rd1484+258], %rd1568;
	shr.u64 	%rd1569, %rd1565, 56;
	st.local.u8 	[%rd1484+263], %rd1569;
	shr.u64 	%rd1570, %rd1565, 48;
	st.local.u8 	[%rd1484+262], %rd1570;
	shr.u64 	%rd1571, %rd1565, 40;
	st.local.u8 	[%rd1484+261], %rd1571;
	shr.u64 	%rd1572, %rd1565, 32;
	st.local.u8 	[%rd1484+260], %rd1572;
	add.s32 	%r650, %r650, 4;
	add.s64 	%rd1814, %rd1814, -4;
	setp.ne.s64 	%p42, %rd1814, 0;
	@%p42 bra 	$L__BB0_62;

$L__BB0_63:
	setp.eq.s64 	%p43, %rd464, 0;
	@%p43 bra 	$L__BB0_67;

	mul.wide.s32 	%rd1573, %r650, 8;
	add.s64 	%rd1574, %rd1, %rd1573;
	add.s64 	%rd468, %rd1574, 32;
	ld.local.u8 	%rd1575, [%rd1574+32];
	ld.local.u8 	%rd1576, [%rd1574+33];
	bfi.b64 	%rd1577, %rd1576, %rd1575, 8, 8;
	ld.local.u8 	%rd1578, [%rd1574+34];
	ld.local.u8 	%rd1579, [%rd1574+35];
	bfi.b64 	%rd1580, %rd1579, %rd1578, 8, 8;
	bfi.b64 	%rd1581, %rd1580, %rd1577, 16, 16;
	ld.local.u8 	%rd1582, [%rd1574+36];
	ld.local.u8 	%rd1583, [%rd1574+37];
	bfi.b64 	%rd1584, %rd1583, %rd1582, 8, 8;
	ld.local.u8 	%rd1585, [%rd1574+38];
	ld.local.u8 	%rd1586, [%rd1574+39];
	bfi.b64 	%rd1587, %rd1586, %rd1585, 8, 8;
	bfi.b64 	%rd1588, %rd1587, %rd1584, 16, 16;
	bfi.b64 	%rd1589, %rd1588, %rd1581, 32, 32;
	shl.b32 	%r637, %r650, 3;
	cvt.s64.s32 	%rd1590, %r637;
	add.s64 	%rd1591, %rd1, %rd1590;
	add.s64 	%rd469, %rd1591, 232;
	st.local.u8 	[%rd1591+232], %rd1577;
	shr.u64 	%rd1592, %rd1577, 8;
	st.local.u8 	[%rd1591+233], %rd1592;
	shr.u64 	%rd1593, %rd1581, 24;
	st.local.u8 	[%rd1591+235], %rd1593;
	shr.u64 	%rd1594, %rd1581, 16;
	st.local.u8 	[%rd1591+234], %rd1594;
	shr.u64 	%rd1595, %rd1589, 56;
	st.local.u8 	[%rd1591+239], %rd1595;
	shr.u64 	%rd1596, %rd1589, 48;
	st.local.u8 	[%rd1591+238], %rd1596;
	shr.u64 	%rd1597, %rd1589, 40;
	st.local.u8 	[%rd1591+237], %rd1597;
	shr.u64 	%rd1598, %rd1589, 32;
	st.local.u8 	[%rd1591+236], %rd1598;
	setp.eq.s64 	%p44, %rd464, 1;
	@%p44 bra 	$L__BB0_67;

	ld.local.u8 	%rd1599, [%rd468+8];
	ld.local.u8 	%rd1600, [%rd468+9];
	bfi.b64 	%rd1601, %rd1600, %rd1599, 8, 8;
	ld.local.u8 	%rd1602, [%rd468+10];
	ld.local.u8 	%rd1603, [%rd468+11];
	bfi.b64 	%rd1604, %rd1603, %rd1602, 8, 8;
	bfi.b64 	%rd1605, %rd1604, %rd1601, 16, 16;
	ld.local.u8 	%rd1606, [%rd468+12];
	ld.local.u8 	%rd1607, [%rd468+13];
	bfi.b64 	%rd1608, %rd1607, %rd1606, 8, 8;
	ld.local.u8 	%rd1609, [%rd468+14];
	ld.local.u8 	%rd1610, [%rd468+15];
	bfi.b64 	%rd1611, %rd1610, %rd1609, 8, 8;
	bfi.b64 	%rd1612, %rd1611, %rd1608, 16, 16;
	bfi.b64 	%rd1613, %rd1612, %rd1605, 32, 32;
	st.local.u8 	[%rd469+8], %rd1601;
	shr.u64 	%rd1614, %rd1601, 8;
	st.local.u8 	[%rd469+9], %rd1614;
	shr.u64 	%rd1615, %rd1605, 24;
	st.local.u8 	[%rd469+11], %rd1615;
	shr.u64 	%rd1616, %rd1605, 16;
	st.local.u8 	[%rd469+10], %rd1616;
	shr.u64 	%rd1617, %rd1613, 56;
	st.local.u8 	[%rd469+15], %rd1617;
	shr.u64 	%rd1618, %rd1613, 48;
	st.local.u8 	[%rd469+14], %rd1618;
	shr.u64 	%rd1619, %rd1613, 40;
	st.local.u8 	[%rd469+13], %rd1619;
	shr.u64 	%rd1620, %rd1613, 32;
	st.local.u8 	[%rd469+12], %rd1620;
	setp.eq.s64 	%p45, %rd464, 2;
	@%p45 bra 	$L__BB0_67;

	ld.local.u8 	%rd1621, [%rd468+16];
	ld.local.u8 	%rd1622, [%rd468+17];
	bfi.b64 	%rd1623, %rd1622, %rd1621, 8, 8;
	ld.local.u8 	%rd1624, [%rd468+18];
	ld.local.u8 	%rd1625, [%rd468+19];
	bfi.b64 	%rd1626, %rd1625, %rd1624, 8, 8;
	bfi.b64 	%rd1627, %rd1626, %rd1623, 16, 16;
	ld.local.u8 	%rd1628, [%rd468+20];
	ld.local.u8 	%rd1629, [%rd468+21];
	bfi.b64 	%rd1630, %rd1629, %rd1628, 8, 8;
	ld.local.u8 	%rd1631, [%rd468+22];
	ld.local.u8 	%rd1632, [%rd468+23];
	bfi.b64 	%rd1633, %rd1632, %rd1631, 8, 8;
	bfi.b64 	%rd1634, %rd1633, %rd1630, 16, 16;
	bfi.b64 	%rd1635, %rd1634, %rd1627, 32, 32;
	st.local.u8 	[%rd469+16], %rd1623;
	shr.u64 	%rd1636, %rd1623, 8;
	st.local.u8 	[%rd469+17], %rd1636;
	shr.u64 	%rd1637, %rd1627, 24;
	st.local.u8 	[%rd469+19], %rd1637;
	shr.u64 	%rd1638, %rd1627, 16;
	st.local.u8 	[%rd469+18], %rd1638;
	shr.u64 	%rd1639, %rd1635, 56;
	st.local.u8 	[%rd469+23], %rd1639;
	shr.u64 	%rd1640, %rd1635, 48;
	st.local.u8 	[%rd469+22], %rd1640;
	shr.u64 	%rd1641, %rd1635, 40;
	st.local.u8 	[%rd469+21], %rd1641;
	shr.u64 	%rd1642, %rd1635, 32;
	st.local.u8 	[%rd469+20], %rd1642;

$L__BB0_67:
	ld.local.u64 	%rd1815, [%rd1+8];
	st.local.u64 	[%rd1+424], %rd1815;
	ld.local.u32 	%r651, [%rd1+4];
	mov.u64 	%rd1816, %rd1815;

$L__BB0_68:
	cvt.u64.u32 	%rd473, %r651;
	sub.s64 	%rd1643, %rd473, %rd1787;
	min.u64 	%rd474, %rd1815, %rd1643;
	shr.u64 	%rd475, %rd474, 3;
	setp.eq.s64 	%p46, %rd475, 0;
	@%p46 bra 	$L__BB0_71;

	ld.local.u64 	%rd1645, [%rd1+16];
	mov.u64 	%rd1817, 0;
	shr.u64 	%rd1646, %rd1815, 3;
	sub.s64 	%rd476, %rd1645, %rd1646;
	shr.u64 	%rd1647, %rd1787, 3;
	add.s64 	%rd477, %rd1647, %rd5;

$L__BB0_70:
	add.s64 	%rd1648, %rd476, %rd1817;
	add.s64 	%rd1649, %rd1, %rd1648;
	ld.local.u8 	%rs10, [%rd1649+232];
	add.s64 	%rd1650, %rd477, %rd1817;
	add.s64 	%rd1651, %rd2, %rd1650;
	st.global.u8 	[%rd1651], %rs10;
	add.s64 	%rd1817, %rd1817, 1;
	setp.lt.u64 	%p47, %rd1817, %rd475;
	@%p47 bra 	$L__BB0_70;

$L__BB0_71:
	sub.s64 	%rd1815, %rd1815, %rd474;
	st.local.u64 	[%rd1+424], %rd1815;
	add.s64 	%rd1787, %rd474, %rd1787;
	setp.lt.u64 	%p48, %rd1787, %rd473;
	@%p48 bra 	$L__BB0_56;

$L__BB0_72:
	ret;

}

