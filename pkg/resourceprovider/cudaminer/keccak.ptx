//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.const .align 8 .b8 CUDA_KECCAK_CONSTS[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};
.const .align 8 .u64 digestbitlen = 256;
.const .align 8 .u64 rate_bits = 1088;
.const .align 8 .u64 rate_BYTEs = 136;
.const .align 8 .u64 absorb_round = 17;

.func  (.param .b32 func_retval0) _ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1_(
	.param .b64 _ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1__param_0,
	.param .b64 _ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1__param_1
)
{
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd9, [_ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1__param_0];
	ld.param.u64 	%rd10, [_ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1__param_1];
	cvta.to.global.u64 	%rd2, %rd10;
	cvta.to.local.u64 	%rd1, %rd9;
	ld.global.u64 	%rd3, [%rd2+24];
	ld.local.u64 	%rd4, [%rd1+24];
	setp.gt.u64 	%p1, %rd4, %rd3;
	mov.u16 	%rs3, 0;
	mov.u16 	%rs9, %rs3;
	@%p1 bra 	$L__BB0_7;

	setp.lt.u64 	%p2, %rd4, %rd3;
	mov.u16 	%rs4, 1;
	mov.u16 	%rs9, %rs4;
	@%p2 bra 	$L__BB0_7;

	ld.global.u64 	%rd5, [%rd2+16];
	ld.local.u64 	%rd6, [%rd1+16];
	setp.gt.u64 	%p3, %rd6, %rd5;
	mov.u16 	%rs9, %rs3;
	@%p3 bra 	$L__BB0_7;

	setp.lt.u64 	%p4, %rd6, %rd5;
	mov.u16 	%rs9, %rs4;
	@%p4 bra 	$L__BB0_7;

	ld.global.u64 	%rd7, [%rd2+8];
	ld.local.u64 	%rd8, [%rd1+8];
	setp.gt.u64 	%p5, %rd8, %rd7;
	mov.u16 	%rs9, %rs3;
	@%p5 bra 	$L__BB0_7;

	setp.lt.u64 	%p6, %rd8, %rd7;
	mov.u16 	%rs9, %rs4;
	@%p6 bra 	$L__BB0_7;

	ld.local.u64 	%rd11, [%rd1];
	ld.global.u64 	%rd12, [%rd2];
	setp.le.u64 	%p7, %rd11, %rd12;
	selp.u16 	%rs9, 1, 0, %p7;

$L__BB0_7:
	cvt.u32.u16 	%r1, %rs9;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	kernel_lilypad_pow
.visible .entry kernel_lilypad_pow(
	.param .u64 kernel_lilypad_pow_param_0,
	.param .u64 kernel_lilypad_pow_param_1,
	.param .u64 kernel_lilypad_pow_param_2,
	.param .u64 kernel_lilypad_pow_param_3,
	.param .u64 kernel_lilypad_pow_param_4
)
.maxntid 1024, 1, 1
{
	.local .align 16 .b8 	__local_depot1[496];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<60>;
	.reg .b16 	%rs<56>;
	.reg .b32 	%r<14043>;
	.reg .b64 	%rd<19868>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd159, [kernel_lilypad_pow_param_0];
	ld.param.u64 	%rd160, [kernel_lilypad_pow_param_1];
	ld.param.u64 	%rd163, [kernel_lilypad_pow_param_3];
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd2, %SPL, 96;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r22, %r20, %r19, %r21;
	cvt.u64.u32 	%rd3, %r22;
	setp.ge.u64 	%p1, %rd3, %rd163;
	@%p1 bra 	$L__BB1_76;

	cvta.to.global.u64 	%rd4, %rd160;
	cvta.to.global.u64 	%rd5, %rd159;
	mov.u64 	%rd19826, 0;
	mov.u32 	%r14032, 0;

$L__BB1_2:
	add.s64 	%rd167, %rd5, %rd19826;
	ld.global.u8 	%rs25, [%rd167];
	add.s64 	%rd168, %rd1, %rd19826;
	st.local.u8 	[%rd168], %rs25;
	add.s64 	%rd19826, %rd19826, 1;
	add.s32 	%r14032, %r14032, 1;
	setp.lt.u32 	%p2, %r14032, 32;
	@%p2 bra 	$L__BB1_2;

	mov.u64 	%rd170, 32;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd170;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd8, [retval0+0];
	} // callseq 0
	ld.global.u64 	%rd171, [%rd4];
	mov.u64 	%rd19828, 0;
	add.s64 	%rd9, %rd171, %rd3;
	st.u64 	[%rd8], %rd9;
	ld.global.u64 	%rd172, [%rd4];
	setp.lt.u64 	%p3, %rd9, %rd172;
	selp.u64 	%rd173, 1, 0, %p3;
	ld.global.u64 	%rd174, [%rd4+8];
	add.s64 	%rd175, %rd174, %rd173;
	st.u64 	[%rd8+8], %rd175;
	ld.global.u64 	%rd176, [%rd4+8];
	setp.lt.u64 	%p4, %rd175, %rd176;
	selp.u64 	%rd177, 1, 0, %p4;
	ld.global.u64 	%rd178, [%rd4+16];
	add.s64 	%rd179, %rd178, %rd177;
	st.u64 	[%rd8+16], %rd179;
	ld.global.u64 	%rd180, [%rd4+16];
	setp.lt.u64 	%p5, %rd179, %rd180;
	selp.u64 	%rd181, 1, 0, %p5;
	ld.global.u64 	%rd182, [%rd4+24];
	add.s64 	%rd183, %rd182, %rd181;
	st.u64 	[%rd8+24], %rd183;
	shr.u64 	%rd184, %rd183, 56;
	cvt.u16.u64 	%rs1, %rd184;
	shr.u64 	%rd185, %rd183, 48;
	cvt.u16.u64 	%rs2, %rd185;
	shr.u64 	%rd186, %rd183, 40;
	cvt.u32.u64 	%r24, %rd186;
	cvt.u16.u64 	%rs3, %rd186;
	shr.u64 	%rd187, %rd183, 32;
	cvt.u16.u64 	%rs4, %rd187;
	shr.u64 	%rd188, %rd183, 24;
	cvt.u32.u64 	%r25, %rd188;
	cvt.u16.u64 	%rs5, %rd188;
	shr.u64 	%rd189, %rd183, 16;
	cvt.u16.u64 	%rs6, %rd189;
	shr.u64 	%rd190, %rd183, 8;
	cvt.u32.u64 	%r26, %rd190;
	cvt.u16.u64 	%rs7, %rd190;
	cvt.u16.u64 	%rs8, %rd183;
	shr.u64 	%rd191, %rd179, 56;
	cvt.u16.u64 	%rs9, %rd191;
	shr.u64 	%rd192, %rd179, 48;
	cvt.u16.u64 	%rs10, %rd192;
	shr.u64 	%rd193, %rd179, 40;
	cvt.u32.u64 	%r27, %rd193;
	cvt.u16.u64 	%rs11, %rd193;
	shr.u64 	%rd194, %rd179, 32;
	cvt.u16.u64 	%rs12, %rd194;
	shr.u64 	%rd195, %rd179, 24;
	cvt.u32.u64 	%r28, %rd195;
	cvt.u16.u64 	%rs13, %rd195;
	shr.u64 	%rd196, %rd179, 16;
	cvt.u16.u64 	%rs14, %rd196;
	shr.u64 	%rd197, %rd179, 8;
	cvt.u32.u64 	%r29, %rd197;
	cvt.u16.u64 	%rs15, %rd197;
	cvt.u16.u64 	%rs16, %rd179;
	shr.u64 	%rd198, %rd175, 56;
	cvt.u16.u64 	%rs17, %rd198;
	shr.u64 	%rd199, %rd175, 48;
	cvt.u16.u64 	%rs18, %rd199;
	shr.u64 	%rd200, %rd175, 40;
	cvt.u32.u64 	%r30, %rd200;
	cvt.u16.u64 	%rs19, %rd200;
	shr.u64 	%rd201, %rd175, 32;
	cvt.u16.u64 	%rs20, %rd201;
	shr.u64 	%rd202, %rd175, 24;
	cvt.u32.u64 	%r31, %rd202;
	cvt.u16.u64 	%rs21, %rd202;
	shr.u64 	%rd203, %rd175, 16;
	cvt.u16.u64 	%rs22, %rd203;
	shr.u64 	%rd204, %rd175, 8;
	cvt.u32.u64 	%r32, %rd204;
	cvt.u16.u64 	%rs23, %rd204;
	cvt.u16.u64 	%rs24, %rd175;
	shr.u64 	%rd205, %rd9, 56;
	shr.u64 	%rd206, %rd9, 48;
	shr.u64 	%rd207, %rd9, 40;
	cvt.u32.u64 	%r33, %rd207;
	shr.u64 	%rd208, %rd9, 32;
	cvt.u32.u64 	%r34, %rd9;
	shr.u64 	%rd209, %rd9, 16;
	shl.b16 	%rs26, %rs2, 8;
	or.b16  	%rs27, %rs1, %rs26;
	cvt.u32.u64 	%r35, %rd187;
	and.b32  	%r36, %r24, 255;
	prmt.b32 	%r37, %r35, %r36, 30212;
	cvt.u16.u32 	%rs28, %r37;
	cvt.u32.u64 	%r38, %rd189;
	and.b32  	%r39, %r25, 255;
	prmt.b32 	%r40, %r38, %r39, 30212;
	cvt.u32.u64 	%r41, %rd183;
	and.b32  	%r42, %r26, 255;
	prmt.b32 	%r43, %r41, %r42, 30212;
	shl.b16 	%rs29, %rs10, 8;
	or.b16  	%rs30, %rs9, %rs29;
	cvt.u32.u64 	%r44, %rd194;
	and.b32  	%r45, %r27, 255;
	prmt.b32 	%r46, %r44, %r45, 30212;
	cvt.u16.u32 	%rs31, %r46;
	cvt.u32.u64 	%r47, %rd196;
	and.b32  	%r48, %r28, 255;
	prmt.b32 	%r49, %r47, %r48, 30212;
	cvt.u32.u64 	%r50, %rd179;
	and.b32  	%r51, %r29, 255;
	prmt.b32 	%r52, %r50, %r51, 30212;
	prmt.b32 	%r53, %r52, %r49, 4180;
	mov.b32 	%r54, {%rs30, %rs31};
	prmt.b32 	%r55, %r43, %r40, 4180;
	mov.b32 	%r56, {%rs27, %rs28};
	st.local.v4.u32 	[%rd1+32], {%r56, %r55, %r54, %r53};
	shl.b16 	%rs32, %rs18, 8;
	or.b16  	%rs33, %rs17, %rs32;
	cvt.u32.u64 	%r57, %rd201;
	and.b32  	%r58, %r30, 255;
	prmt.b32 	%r59, %r57, %r58, 30212;
	cvt.u16.u32 	%rs34, %r59;
	cvt.u32.u64 	%r60, %rd203;
	and.b32  	%r61, %r31, 255;
	prmt.b32 	%r62, %r60, %r61, 30212;
	cvt.u32.u64 	%r63, %rd175;
	and.b32  	%r64, %r32, 255;
	prmt.b32 	%r65, %r63, %r64, 30212;
	cvt.u16.u64 	%rs35, %rd205;
	cvt.u16.u64 	%rs36, %rd206;
	shl.b16 	%rs37, %rs36, 8;
	or.b16  	%rs38, %rs35, %rs37;
	cvt.u32.u64 	%r66, %rd208;
	and.b32  	%r67, %r33, 255;
	prmt.b32 	%r68, %r66, %r67, 30212;
	cvt.u16.u32 	%rs39, %r68;
	cvt.u16.u64 	%rs40, %rd9;
	shl.b16 	%rs41, %rs40, 8;
	shr.u16 	%rs42, %rs40, 8;
	or.b16  	%rs43, %rs42, %rs41;
	shr.u32 	%r69, %r34, 24;
	cvt.u32.u64 	%r70, %rd209;
	prmt.b32 	%r71, %r70, %r69, 30212;
	cvt.u16.u32 	%rs44, %r71;
	mov.b32 	%r72, {%rs44, %rs43};
	mov.b32 	%r73, {%rs38, %rs39};
	prmt.b32 	%r74, %r65, %r62, 4180;
	mov.b32 	%r75, {%rs33, %rs34};
	st.local.v4.u32 	[%rd1+48], {%r75, %r74, %r73, %r72};
	mov.u64 	%rd19827, %rd2;

$L__BB1_4:
	mov.u32 	%r76, 0;
	st.local.v2.u32 	[%rd19827], {%r76, %r76};
	add.s64 	%rd19827, %rd19827, 8;
	add.s64 	%rd19828, %rd19828, 1;
	setp.lt.u64 	%p6, %rd19828, 49;
	@%p6 bra 	$L__BB1_4;

	mov.u64 	%rd19844, 0;
	st.local.u64 	[%rd2+392], %rd19844;
	ld.const.u64 	%rd14, [rate_BYTEs];
	ld.const.u64 	%rd15, [absorb_round];
	ld.const.u64 	%rd16, [CUDA_KECCAK_CONSTS];
	ld.const.u64 	%rd17, [CUDA_KECCAK_CONSTS+8];
	ld.const.u64 	%rd18, [CUDA_KECCAK_CONSTS+16];
	ld.const.u64 	%rd19, [CUDA_KECCAK_CONSTS+24];
	ld.const.u64 	%rd20, [CUDA_KECCAK_CONSTS+32];
	ld.const.u64 	%rd21, [CUDA_KECCAK_CONSTS+40];
	ld.const.u64 	%rd22, [CUDA_KECCAK_CONSTS+48];
	ld.const.u64 	%rd23, [CUDA_KECCAK_CONSTS+56];
	ld.const.u64 	%rd24, [CUDA_KECCAK_CONSTS+64];
	ld.const.u64 	%rd25, [CUDA_KECCAK_CONSTS+72];
	ld.const.u64 	%rd26, [CUDA_KECCAK_CONSTS+80];
	ld.const.u64 	%rd27, [CUDA_KECCAK_CONSTS+88];
	ld.const.u64 	%rd28, [CUDA_KECCAK_CONSTS+96];
	ld.const.u64 	%rd29, [CUDA_KECCAK_CONSTS+104];
	ld.const.u64 	%rd30, [CUDA_KECCAK_CONSTS+112];
	ld.const.u64 	%rd31, [CUDA_KECCAK_CONSTS+120];
	ld.const.u64 	%rd32, [CUDA_KECCAK_CONSTS+128];
	ld.const.u64 	%rd33, [CUDA_KECCAK_CONSTS+136];
	ld.const.u64 	%rd34, [CUDA_KECCAK_CONSTS+144];
	ld.const.u64 	%rd35, [CUDA_KECCAK_CONSTS+152];
	ld.const.u64 	%rd36, [CUDA_KECCAK_CONSTS+160];
	ld.const.u64 	%rd37, [CUDA_KECCAK_CONSTS+168];
	ld.const.u64 	%rd38, [CUDA_KECCAK_CONSTS+176];
	ld.const.u64 	%rd39, [CUDA_KECCAK_CONSTS+184];
	mov.u64 	%rd19843, %rd19844;

$L__BB1_6:
	mov.u64 	%rd212, 64;
	sub.s64 	%rd213, %rd212, %rd14;
	setp.gt.s64 	%p7, %rd19844, %rd213;
	setp.ne.s64 	%p8, %rd19843, 0;
	or.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB1_16;
	bra.uni 	$L__BB1_7;

$L__BB1_16:
	sub.s64 	%rd4101, %rd14, %rd19843;
	sub.s64 	%rd4103, %rd212, %rd19844;
	min.s64 	%rd56, %rd4101, %rd4103;
	setp.eq.s64 	%p17, %rd56, 0;
	@%p17 bra 	$L__BB1_19;

	mov.u64 	%rd19837, 0;

$L__BB1_18:
	add.s64 	%rd4105, %rd19844, %rd19837;
	add.s64 	%rd4106, %rd1, %rd4105;
	ld.local.u8 	%rs45, [%rd4106];
	add.s64 	%rd4107, %rd19843, %rd19837;
	add.s64 	%rd4108, %rd2, %rd4107;
	st.local.u8 	[%rd4108+200], %rs45;
	add.s64 	%rd19837, %rd19837, 1;
	setp.lt.u64 	%p18, %rd19837, %rd56;
	@%p18 bra 	$L__BB1_18;

$L__BB1_19:
	add.s64 	%rd19843, %rd56, %rd19843;
	add.s64 	%rd19844, %rd56, %rd19844;
	setp.ne.s64 	%p19, %rd19843, %rd14;
	@%p19 bra 	$L__BB1_29;

	setp.eq.s64 	%p20, %rd15, 0;
	@%p20 bra 	$L__BB1_28;

	max.u64 	%rd4111, %rd15, 1;
	add.s64 	%rd4112, %rd4111, -1;
	setp.lt.u64 	%p21, %rd4112, 3;
	mov.u64 	%rd19841, 0;
	mov.u64 	%rd19842, %rd19841;
	@%p21 bra 	$L__BB1_24;

	and.b64  	%rd4116, %rd4111, 3;
	sub.s64 	%rd19840, %rd4111, %rd4116;

$L__BB1_23:
	add.s64 	%rd4117, %rd2, %rd19842;
	ld.local.u64 	%rd4118, [%rd4117];
	ld.local.u8 	%rd4119, [%rd4117+200];
	ld.local.u8 	%rd4120, [%rd4117+201];
	bfi.b64 	%rd4121, %rd4120, %rd4119, 8, 8;
	ld.local.u8 	%rd4122, [%rd4117+202];
	ld.local.u8 	%rd4123, [%rd4117+203];
	bfi.b64 	%rd4124, %rd4123, %rd4122, 8, 8;
	bfi.b64 	%rd4125, %rd4124, %rd4121, 16, 16;
	ld.local.u8 	%rd4126, [%rd4117+204];
	ld.local.u8 	%rd4127, [%rd4117+205];
	bfi.b64 	%rd4128, %rd4127, %rd4126, 8, 8;
	ld.local.u8 	%rd4129, [%rd4117+206];
	ld.local.u8 	%rd4130, [%rd4117+207];
	bfi.b64 	%rd4131, %rd4130, %rd4129, 8, 8;
	bfi.b64 	%rd4132, %rd4131, %rd4128, 16, 16;
	bfi.b64 	%rd4133, %rd4132, %rd4125, 32, 32;
	xor.b64  	%rd4134, %rd4118, %rd4133;
	st.local.u64 	[%rd4117], %rd4134;
	ld.local.u64 	%rd4135, [%rd4117+8];
	ld.local.u8 	%rd4136, [%rd4117+208];
	ld.local.u8 	%rd4137, [%rd4117+209];
	bfi.b64 	%rd4138, %rd4137, %rd4136, 8, 8;
	ld.local.u8 	%rd4139, [%rd4117+210];
	ld.local.u8 	%rd4140, [%rd4117+211];
	bfi.b64 	%rd4141, %rd4140, %rd4139, 8, 8;
	bfi.b64 	%rd4142, %rd4141, %rd4138, 16, 16;
	ld.local.u8 	%rd4143, [%rd4117+212];
	ld.local.u8 	%rd4144, [%rd4117+213];
	bfi.b64 	%rd4145, %rd4144, %rd4143, 8, 8;
	ld.local.u8 	%rd4146, [%rd4117+214];
	ld.local.u8 	%rd4147, [%rd4117+215];
	bfi.b64 	%rd4148, %rd4147, %rd4146, 8, 8;
	bfi.b64 	%rd4149, %rd4148, %rd4145, 16, 16;
	bfi.b64 	%rd4150, %rd4149, %rd4142, 32, 32;
	xor.b64  	%rd4151, %rd4135, %rd4150;
	st.local.u64 	[%rd4117+8], %rd4151;
	ld.local.u64 	%rd4152, [%rd4117+16];
	ld.local.u8 	%rd4153, [%rd4117+216];
	ld.local.u8 	%rd4154, [%rd4117+217];
	bfi.b64 	%rd4155, %rd4154, %rd4153, 8, 8;
	ld.local.u8 	%rd4156, [%rd4117+218];
	ld.local.u8 	%rd4157, [%rd4117+219];
	bfi.b64 	%rd4158, %rd4157, %rd4156, 8, 8;
	bfi.b64 	%rd4159, %rd4158, %rd4155, 16, 16;
	ld.local.u8 	%rd4160, [%rd4117+220];
	ld.local.u8 	%rd4161, [%rd4117+221];
	bfi.b64 	%rd4162, %rd4161, %rd4160, 8, 8;
	ld.local.u8 	%rd4163, [%rd4117+222];
	ld.local.u8 	%rd4164, [%rd4117+223];
	bfi.b64 	%rd4165, %rd4164, %rd4163, 8, 8;
	bfi.b64 	%rd4166, %rd4165, %rd4162, 16, 16;
	bfi.b64 	%rd4167, %rd4166, %rd4159, 32, 32;
	xor.b64  	%rd4168, %rd4152, %rd4167;
	st.local.u64 	[%rd4117+16], %rd4168;
	ld.local.u64 	%rd4169, [%rd4117+24];
	ld.local.u8 	%rd4170, [%rd4117+224];
	ld.local.u8 	%rd4171, [%rd4117+225];
	bfi.b64 	%rd4172, %rd4171, %rd4170, 8, 8;
	ld.local.u8 	%rd4173, [%rd4117+226];
	ld.local.u8 	%rd4174, [%rd4117+227];
	bfi.b64 	%rd4175, %rd4174, %rd4173, 8, 8;
	bfi.b64 	%rd4176, %rd4175, %rd4172, 16, 16;
	ld.local.u8 	%rd4177, [%rd4117+228];
	ld.local.u8 	%rd4178, [%rd4117+229];
	bfi.b64 	%rd4179, %rd4178, %rd4177, 8, 8;
	ld.local.u8 	%rd4180, [%rd4117+230];
	ld.local.u8 	%rd4181, [%rd4117+231];
	bfi.b64 	%rd4182, %rd4181, %rd4180, 8, 8;
	bfi.b64 	%rd4183, %rd4182, %rd4179, 16, 16;
	bfi.b64 	%rd4184, %rd4183, %rd4176, 32, 32;
	xor.b64  	%rd4185, %rd4169, %rd4184;
	st.local.u64 	[%rd4117+24], %rd4185;
	add.s64 	%rd19842, %rd19842, 32;
	add.s64 	%rd19841, %rd19841, 4;
	add.s64 	%rd19840, %rd19840, -4;
	setp.ne.s64 	%p22, %rd19840, 0;
	@%p22 bra 	$L__BB1_23;

$L__BB1_24:
	and.b64  	%rd4187, %rd4111, 3;
	setp.eq.s64 	%p23, %rd4187, 0;
	@%p23 bra 	$L__BB1_28;

	setp.eq.s64 	%p24, %rd4187, 1;
	add.s64 	%rd4190, %rd2, %rd19842;
	add.s64 	%rd70, %rd4190, 200;
	shl.b64 	%rd4191, %rd19841, 3;
	add.s64 	%rd71, %rd2, %rd4191;
	ld.local.u64 	%rd4192, [%rd71];
	ld.local.u8 	%rd4193, [%rd4190+200];
	ld.local.u8 	%rd4194, [%rd4190+201];
	bfi.b64 	%rd4195, %rd4194, %rd4193, 8, 8;
	ld.local.u8 	%rd4196, [%rd4190+202];
	ld.local.u8 	%rd4197, [%rd4190+203];
	bfi.b64 	%rd4198, %rd4197, %rd4196, 8, 8;
	bfi.b64 	%rd4199, %rd4198, %rd4195, 16, 16;
	ld.local.u8 	%rd4200, [%rd4190+204];
	ld.local.u8 	%rd4201, [%rd4190+205];
	bfi.b64 	%rd4202, %rd4201, %rd4200, 8, 8;
	ld.local.u8 	%rd4203, [%rd4190+206];
	ld.local.u8 	%rd4204, [%rd4190+207];
	bfi.b64 	%rd4205, %rd4204, %rd4203, 8, 8;
	bfi.b64 	%rd4206, %rd4205, %rd4202, 16, 16;
	bfi.b64 	%rd4207, %rd4206, %rd4199, 32, 32;
	xor.b64  	%rd4208, %rd4192, %rd4207;
	st.local.u64 	[%rd71], %rd4208;
	@%p24 bra 	$L__BB1_28;

	setp.eq.s64 	%p25, %rd4187, 2;
	ld.local.u64 	%rd4211, [%rd71+8];
	ld.local.u8 	%rd4212, [%rd70+8];
	ld.local.u8 	%rd4213, [%rd70+9];
	bfi.b64 	%rd4214, %rd4213, %rd4212, 8, 8;
	ld.local.u8 	%rd4215, [%rd70+10];
	ld.local.u8 	%rd4216, [%rd70+11];
	bfi.b64 	%rd4217, %rd4216, %rd4215, 8, 8;
	bfi.b64 	%rd4218, %rd4217, %rd4214, 16, 16;
	ld.local.u8 	%rd4219, [%rd70+12];
	ld.local.u8 	%rd4220, [%rd70+13];
	bfi.b64 	%rd4221, %rd4220, %rd4219, 8, 8;
	ld.local.u8 	%rd4222, [%rd70+14];
	ld.local.u8 	%rd4223, [%rd70+15];
	bfi.b64 	%rd4224, %rd4223, %rd4222, 8, 8;
	bfi.b64 	%rd4225, %rd4224, %rd4221, 16, 16;
	bfi.b64 	%rd4226, %rd4225, %rd4218, 32, 32;
	xor.b64  	%rd4227, %rd4211, %rd4226;
	st.local.u64 	[%rd71+8], %rd4227;
	@%p25 bra 	$L__BB1_28;

	ld.local.u64 	%rd4228, [%rd71+16];
	ld.local.u8 	%rd4229, [%rd70+16];
	ld.local.u8 	%rd4230, [%rd70+17];
	bfi.b64 	%rd4231, %rd4230, %rd4229, 8, 8;
	ld.local.u8 	%rd4232, [%rd70+18];
	ld.local.u8 	%rd4233, [%rd70+19];
	bfi.b64 	%rd4234, %rd4233, %rd4232, 8, 8;
	bfi.b64 	%rd4235, %rd4234, %rd4231, 16, 16;
	ld.local.u8 	%rd4236, [%rd70+20];
	ld.local.u8 	%rd4237, [%rd70+21];
	bfi.b64 	%rd4238, %rd4237, %rd4236, 8, 8;
	ld.local.u8 	%rd4239, [%rd70+22];
	ld.local.u8 	%rd4240, [%rd70+23];
	bfi.b64 	%rd4241, %rd4240, %rd4239, 8, 8;
	bfi.b64 	%rd4242, %rd4241, %rd4238, 16, 16;
	bfi.b64 	%rd4243, %rd4242, %rd4235, 32, 32;
	xor.b64  	%rd4244, %rd4228, %rd4243;
	st.local.u64 	[%rd71+16], %rd4244;

$L__BB1_28:
	ld.local.u64 	%rd4246, [%rd2+40];
	mov.u64 	%rd19843, 0;
	ld.local.u64 	%rd4247, [%rd2];
	xor.b64  	%rd4248, %rd4246, %rd4247;
	ld.local.u64 	%rd4249, [%rd2+80];
	xor.b64  	%rd4250, %rd4248, %rd4249;
	ld.local.u64 	%rd4251, [%rd2+120];
	xor.b64  	%rd4252, %rd4250, %rd4251;
	ld.local.u64 	%rd4253, [%rd2+160];
	xor.b64  	%rd4254, %rd4252, %rd4253;
	ld.local.u64 	%rd4255, [%rd2+48];
	ld.local.u64 	%rd4256, [%rd2+8];
	xor.b64  	%rd4257, %rd4255, %rd4256;
	ld.local.u64 	%rd4258, [%rd2+88];
	xor.b64  	%rd4259, %rd4257, %rd4258;
	ld.local.u64 	%rd4260, [%rd2+128];
	xor.b64  	%rd4261, %rd4259, %rd4260;
	ld.local.u64 	%rd4262, [%rd2+168];
	xor.b64  	%rd4263, %rd4261, %rd4262;
	ld.local.u64 	%rd4264, [%rd2+56];
	ld.local.u64 	%rd4265, [%rd2+16];
	xor.b64  	%rd4266, %rd4264, %rd4265;
	ld.local.u64 	%rd4267, [%rd2+96];
	xor.b64  	%rd4268, %rd4266, %rd4267;
	ld.local.u64 	%rd4269, [%rd2+136];
	xor.b64  	%rd4270, %rd4268, %rd4269;
	ld.local.u64 	%rd4271, [%rd2+176];
	xor.b64  	%rd4272, %rd4270, %rd4271;
	ld.local.u64 	%rd4273, [%rd2+64];
	ld.local.u64 	%rd4274, [%rd2+24];
	xor.b64  	%rd4275, %rd4273, %rd4274;
	ld.local.u64 	%rd4276, [%rd2+104];
	xor.b64  	%rd4277, %rd4275, %rd4276;
	ld.local.u64 	%rd4278, [%rd2+144];
	xor.b64  	%rd4279, %rd4277, %rd4278;
	ld.local.u64 	%rd4280, [%rd2+184];
	xor.b64  	%rd4281, %rd4279, %rd4280;
	ld.local.u64 	%rd4282, [%rd2+72];
	ld.local.u64 	%rd4283, [%rd2+32];
	xor.b64  	%rd4284, %rd4282, %rd4283;
	ld.local.u64 	%rd4285, [%rd2+112];
	xor.b64  	%rd4286, %rd4284, %rd4285;
	ld.local.u64 	%rd4287, [%rd2+152];
	xor.b64  	%rd4288, %rd4286, %rd4287;
	ld.local.u64 	%rd4289, [%rd2+192];
	xor.b64  	%rd4290, %rd4288, %rd4289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2861}, %rd4263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2862,%dummy}, %rd4263;
	}
	shf.l.wrap.b32 	%r2863, %r2862, %r2861, 1;
	shf.l.wrap.b32 	%r2864, %r2861, %r2862, 1;
	mov.b64 	%rd4291, {%r2864, %r2863};
	xor.b64  	%rd4292, %rd4290, %rd4291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2865}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4272;
	}
	shf.l.wrap.b32 	%r2867, %r2866, %r2865, 1;
	shf.l.wrap.b32 	%r2868, %r2865, %r2866, 1;
	mov.b64 	%rd4293, {%r2868, %r2867};
	xor.b64  	%rd4294, %rd4293, %rd4254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2869}, %rd4281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2870,%dummy}, %rd4281;
	}
	shf.l.wrap.b32 	%r2871, %r2870, %r2869, 1;
	shf.l.wrap.b32 	%r2872, %r2869, %r2870, 1;
	mov.b64 	%rd4295, {%r2872, %r2871};
	xor.b64  	%rd4296, %rd4295, %rd4263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2873}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd4290;
	}
	shf.l.wrap.b32 	%r2875, %r2874, %r2873, 1;
	shf.l.wrap.b32 	%r2876, %r2873, %r2874, 1;
	mov.b64 	%rd4297, {%r2876, %r2875};
	xor.b64  	%rd4298, %rd4297, %rd4272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2877}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2878,%dummy}, %rd4254;
	}
	shf.l.wrap.b32 	%r2879, %r2878, %r2877, 1;
	shf.l.wrap.b32 	%r2880, %r2877, %r2878, 1;
	mov.b64 	%rd4299, {%r2880, %r2879};
	xor.b64  	%rd4300, %rd4281, %rd4299;
	xor.b64  	%rd4301, %rd4292, %rd4247;
	xor.b64  	%rd4302, %rd4294, %rd4256;
	xor.b64  	%rd4303, %rd4296, %rd4265;
	xor.b64  	%rd4304, %rd4298, %rd4274;
	xor.b64  	%rd4305, %rd4300, %rd4283;
	xor.b64  	%rd4306, %rd4292, %rd4246;
	xor.b64  	%rd4307, %rd4294, %rd4255;
	xor.b64  	%rd4308, %rd4296, %rd4264;
	xor.b64  	%rd4309, %rd4298, %rd4273;
	xor.b64  	%rd4310, %rd4300, %rd4282;
	xor.b64  	%rd4311, %rd4292, %rd4249;
	xor.b64  	%rd4312, %rd4294, %rd4258;
	xor.b64  	%rd4313, %rd4296, %rd4267;
	xor.b64  	%rd4314, %rd4298, %rd4276;
	xor.b64  	%rd4315, %rd4300, %rd4285;
	xor.b64  	%rd4316, %rd4292, %rd4251;
	xor.b64  	%rd4317, %rd4294, %rd4260;
	xor.b64  	%rd4318, %rd4296, %rd4269;
	xor.b64  	%rd4319, %rd4298, %rd4278;
	xor.b64  	%rd4320, %rd4300, %rd4287;
	xor.b64  	%rd4321, %rd4292, %rd4253;
	xor.b64  	%rd4322, %rd4294, %rd4262;
	xor.b64  	%rd4323, %rd4296, %rd4271;
	xor.b64  	%rd4324, %rd4298, %rd4280;
	xor.b64  	%rd4325, %rd4300, %rd4289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2881,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2882}, %rd4307;
	}
	shf.r.wrap.b32 	%r2883, %r2882, %r2881, 20;
	shf.r.wrap.b32 	%r2884, %r2881, %r2882, 20;
	mov.b64 	%rd4326, {%r2884, %r2883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2885,%dummy}, %rd4313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2886}, %rd4313;
	}
	shf.r.wrap.b32 	%r2887, %r2886, %r2885, 21;
	shf.r.wrap.b32 	%r2888, %r2885, %r2886, 21;
	mov.b64 	%rd4327, {%r2888, %r2887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2889}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd4319;
	}
	shf.l.wrap.b32 	%r2891, %r2890, %r2889, 21;
	shf.l.wrap.b32 	%r2892, %r2889, %r2890, 21;
	mov.b64 	%rd4328, {%r2892, %r2891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2893}, %rd4325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2894,%dummy}, %rd4325;
	}
	shf.l.wrap.b32 	%r2895, %r2894, %r2893, 14;
	shf.l.wrap.b32 	%r2896, %r2893, %r2894, 14;
	mov.b64 	%rd4329, {%r2896, %r2895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2897}, %rd4304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd4304;
	}
	shf.l.wrap.b32 	%r2899, %r2898, %r2897, 28;
	shf.l.wrap.b32 	%r2900, %r2897, %r2898, 28;
	mov.b64 	%rd4330, {%r2900, %r2899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2901}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2902,%dummy}, %rd4310;
	}
	shf.l.wrap.b32 	%r2903, %r2902, %r2901, 20;
	shf.l.wrap.b32 	%r2904, %r2901, %r2902, 20;
	mov.b64 	%rd4331, {%r2904, %r2903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2905}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd4311;
	}
	shf.l.wrap.b32 	%r2907, %r2906, %r2905, 3;
	shf.l.wrap.b32 	%r2908, %r2905, %r2906, 3;
	mov.b64 	%rd4332, {%r2908, %r2907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2909,%dummy}, %rd4317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2910}, %rd4317;
	}
	shf.r.wrap.b32 	%r2911, %r2910, %r2909, 19;
	shf.r.wrap.b32 	%r2912, %r2909, %r2910, 19;
	mov.b64 	%rd4333, {%r2912, %r2911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2913,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd4323;
	}
	shf.r.wrap.b32 	%r2915, %r2914, %r2913, 3;
	shf.r.wrap.b32 	%r2916, %r2913, %r2914, 3;
	mov.b64 	%rd4334, {%r2916, %r2915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2917}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2918,%dummy}, %rd4302;
	}
	shf.l.wrap.b32 	%r2919, %r2918, %r2917, 1;
	shf.l.wrap.b32 	%r2920, %r2917, %r2918, 1;
	mov.b64 	%rd4335, {%r2920, %r2919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2921}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd4308;
	}
	shf.l.wrap.b32 	%r2923, %r2922, %r2921, 6;
	shf.l.wrap.b32 	%r2924, %r2921, %r2922, 6;
	mov.b64 	%rd4336, {%r2924, %r2923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2925}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2926,%dummy}, %rd4314;
	}
	shf.l.wrap.b32 	%r2927, %r2926, %r2925, 25;
	shf.l.wrap.b32 	%r2928, %r2925, %r2926, 25;
	mov.b64 	%rd4337, {%r2928, %r2927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd4320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd4320;
	}
	shf.l.wrap.b32 	%r2931, %r2930, %r2929, 8;
	shf.l.wrap.b32 	%r2932, %r2929, %r2930, 8;
	mov.b64 	%rd4338, {%r2932, %r2931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2933}, %rd4321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2934,%dummy}, %rd4321;
	}
	shf.l.wrap.b32 	%r2935, %r2934, %r2933, 18;
	shf.l.wrap.b32 	%r2936, %r2933, %r2934, 18;
	mov.b64 	%rd4339, {%r2936, %r2935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd4305;
	}
	shf.l.wrap.b32 	%r2939, %r2938, %r2937, 27;
	shf.l.wrap.b32 	%r2940, %r2937, %r2938, 27;
	mov.b64 	%rd4340, {%r2940, %r2939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2941,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2942}, %rd4306;
	}
	shf.r.wrap.b32 	%r2943, %r2942, %r2941, 28;
	shf.r.wrap.b32 	%r2944, %r2941, %r2942, 28;
	mov.b64 	%rd4341, {%r2944, %r2943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd4312;
	}
	shf.l.wrap.b32 	%r2947, %r2946, %r2945, 10;
	shf.l.wrap.b32 	%r2948, %r2945, %r2946, 10;
	mov.b64 	%rd4342, {%r2948, %r2947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2949}, %rd4318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2950,%dummy}, %rd4318;
	}
	shf.l.wrap.b32 	%r2951, %r2950, %r2949, 15;
	shf.l.wrap.b32 	%r2952, %r2949, %r2950, 15;
	mov.b64 	%rd4343, {%r2952, %r2951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2953,%dummy}, %rd4324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2954}, %rd4324;
	}
	shf.r.wrap.b32 	%r2955, %r2954, %r2953, 8;
	shf.r.wrap.b32 	%r2956, %r2953, %r2954, 8;
	mov.b64 	%rd4344, {%r2956, %r2955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2957,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2958}, %rd4303;
	}
	shf.r.wrap.b32 	%r2959, %r2958, %r2957, 2;
	shf.r.wrap.b32 	%r2960, %r2957, %r2958, 2;
	mov.b64 	%rd4345, {%r2960, %r2959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2961,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2962}, %rd4309;
	}
	shf.r.wrap.b32 	%r2963, %r2962, %r2961, 9;
	shf.r.wrap.b32 	%r2964, %r2961, %r2962, 9;
	mov.b64 	%rd4346, {%r2964, %r2963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2965,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2966}, %rd4315;
	}
	shf.r.wrap.b32 	%r2967, %r2966, %r2965, 25;
	shf.r.wrap.b32 	%r2968, %r2965, %r2966, 25;
	mov.b64 	%rd4347, {%r2968, %r2967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2969,%dummy}, %rd4316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2970}, %rd4316;
	}
	shf.r.wrap.b32 	%r2971, %r2970, %r2969, 23;
	shf.r.wrap.b32 	%r2972, %r2969, %r2970, 23;
	mov.b64 	%rd4348, {%r2972, %r2971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2973}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2974,%dummy}, %rd4322;
	}
	shf.l.wrap.b32 	%r2975, %r2974, %r2973, 2;
	shf.l.wrap.b32 	%r2976, %r2973, %r2974, 2;
	mov.b64 	%rd4349, {%r2976, %r2975};
	not.b64 	%rd4350, %rd4326;
	and.b64  	%rd4351, %rd4327, %rd4350;
	xor.b64  	%rd4352, %rd4351, %rd4301;
	not.b64 	%rd4353, %rd4327;
	and.b64  	%rd4354, %rd4328, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd4326;
	not.b64 	%rd4356, %rd4328;
	and.b64  	%rd4357, %rd4329, %rd4356;
	xor.b64  	%rd4358, %rd4357, %rd4327;
	not.b64 	%rd4359, %rd4329;
	and.b64  	%rd4360, %rd4301, %rd4359;
	xor.b64  	%rd4361, %rd4360, %rd4328;
	not.b64 	%rd4362, %rd4301;
	and.b64  	%rd4363, %rd4326, %rd4362;
	xor.b64  	%rd4364, %rd4363, %rd4329;
	not.b64 	%rd4365, %rd4331;
	and.b64  	%rd4366, %rd4332, %rd4365;
	xor.b64  	%rd4367, %rd4366, %rd4330;
	not.b64 	%rd4368, %rd4332;
	and.b64  	%rd4369, %rd4333, %rd4368;
	xor.b64  	%rd4370, %rd4369, %rd4331;
	not.b64 	%rd4371, %rd4333;
	and.b64  	%rd4372, %rd4334, %rd4371;
	xor.b64  	%rd4373, %rd4372, %rd4332;
	not.b64 	%rd4374, %rd4334;
	and.b64  	%rd4375, %rd4330, %rd4374;
	xor.b64  	%rd4376, %rd4375, %rd4333;
	not.b64 	%rd4377, %rd4330;
	and.b64  	%rd4378, %rd4331, %rd4377;
	xor.b64  	%rd4379, %rd4378, %rd4334;
	not.b64 	%rd4380, %rd4336;
	and.b64  	%rd4381, %rd4337, %rd4380;
	xor.b64  	%rd4382, %rd4381, %rd4335;
	not.b64 	%rd4383, %rd4337;
	and.b64  	%rd4384, %rd4338, %rd4383;
	xor.b64  	%rd4385, %rd4384, %rd4336;
	not.b64 	%rd4386, %rd4338;
	and.b64  	%rd4387, %rd4339, %rd4386;
	xor.b64  	%rd4388, %rd4387, %rd4337;
	not.b64 	%rd4389, %rd4339;
	and.b64  	%rd4390, %rd4335, %rd4389;
	xor.b64  	%rd4391, %rd4390, %rd4338;
	not.b64 	%rd4392, %rd4335;
	and.b64  	%rd4393, %rd4336, %rd4392;
	xor.b64  	%rd4394, %rd4393, %rd4339;
	not.b64 	%rd4395, %rd4341;
	and.b64  	%rd4396, %rd4342, %rd4395;
	xor.b64  	%rd4397, %rd4396, %rd4340;
	not.b64 	%rd4398, %rd4342;
	and.b64  	%rd4399, %rd4343, %rd4398;
	xor.b64  	%rd4400, %rd4399, %rd4341;
	not.b64 	%rd4401, %rd4343;
	and.b64  	%rd4402, %rd4344, %rd4401;
	xor.b64  	%rd4403, %rd4402, %rd4342;
	not.b64 	%rd4404, %rd4344;
	and.b64  	%rd4405, %rd4340, %rd4404;
	xor.b64  	%rd4406, %rd4405, %rd4343;
	not.b64 	%rd4407, %rd4340;
	and.b64  	%rd4408, %rd4341, %rd4407;
	xor.b64  	%rd4409, %rd4408, %rd4344;
	not.b64 	%rd4410, %rd4346;
	and.b64  	%rd4411, %rd4347, %rd4410;
	xor.b64  	%rd4412, %rd4411, %rd4345;
	not.b64 	%rd4413, %rd4347;
	and.b64  	%rd4414, %rd4348, %rd4413;
	xor.b64  	%rd4415, %rd4414, %rd4346;
	not.b64 	%rd4416, %rd4348;
	and.b64  	%rd4417, %rd4349, %rd4416;
	xor.b64  	%rd4418, %rd4417, %rd4347;
	not.b64 	%rd4419, %rd4349;
	and.b64  	%rd4420, %rd4345, %rd4419;
	xor.b64  	%rd4421, %rd4420, %rd4348;
	not.b64 	%rd4422, %rd4345;
	and.b64  	%rd4423, %rd4346, %rd4422;
	xor.b64  	%rd4424, %rd4423, %rd4349;
	xor.b64  	%rd4425, %rd4352, %rd16;
	xor.b64  	%rd4426, %rd4367, %rd4425;
	xor.b64  	%rd4427, %rd4426, %rd4382;
	xor.b64  	%rd4428, %rd4427, %rd4397;
	xor.b64  	%rd4429, %rd4428, %rd4412;
	xor.b64  	%rd4430, %rd4370, %rd4355;
	xor.b64  	%rd4431, %rd4430, %rd4385;
	xor.b64  	%rd4432, %rd4431, %rd4400;
	xor.b64  	%rd4433, %rd4432, %rd4415;
	xor.b64  	%rd4434, %rd4373, %rd4358;
	xor.b64  	%rd4435, %rd4434, %rd4388;
	xor.b64  	%rd4436, %rd4435, %rd4403;
	xor.b64  	%rd4437, %rd4436, %rd4418;
	xor.b64  	%rd4438, %rd4376, %rd4361;
	xor.b64  	%rd4439, %rd4438, %rd4391;
	xor.b64  	%rd4440, %rd4439, %rd4406;
	xor.b64  	%rd4441, %rd4440, %rd4421;
	xor.b64  	%rd4442, %rd4379, %rd4364;
	xor.b64  	%rd4443, %rd4442, %rd4394;
	xor.b64  	%rd4444, %rd4443, %rd4409;
	xor.b64  	%rd4445, %rd4444, %rd4424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2977}, %rd4433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd4433;
	}
	shf.l.wrap.b32 	%r2979, %r2978, %r2977, 1;
	shf.l.wrap.b32 	%r2980, %r2977, %r2978, 1;
	mov.b64 	%rd4446, {%r2980, %r2979};
	xor.b64  	%rd4447, %rd4445, %rd4446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd4437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2982,%dummy}, %rd4437;
	}
	shf.l.wrap.b32 	%r2983, %r2982, %r2981, 1;
	shf.l.wrap.b32 	%r2984, %r2981, %r2982, 1;
	mov.b64 	%rd4448, {%r2984, %r2983};
	xor.b64  	%rd4449, %rd4448, %rd4429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2985}, %rd4441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd4441;
	}
	shf.l.wrap.b32 	%r2987, %r2986, %r2985, 1;
	shf.l.wrap.b32 	%r2988, %r2985, %r2986, 1;
	mov.b64 	%rd4450, {%r2988, %r2987};
	xor.b64  	%rd4451, %rd4450, %rd4433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2989}, %rd4445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd4445;
	}
	shf.l.wrap.b32 	%r2991, %r2990, %r2989, 1;
	shf.l.wrap.b32 	%r2992, %r2989, %r2990, 1;
	mov.b64 	%rd4452, {%r2992, %r2991};
	xor.b64  	%rd4453, %rd4452, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2993}, %rd4429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd4429;
	}
	shf.l.wrap.b32 	%r2995, %r2994, %r2993, 1;
	shf.l.wrap.b32 	%r2996, %r2993, %r2994, 1;
	mov.b64 	%rd4454, {%r2996, %r2995};
	xor.b64  	%rd4455, %rd4441, %rd4454;
	xor.b64  	%rd4456, %rd4447, %rd4425;
	xor.b64  	%rd4457, %rd4449, %rd4355;
	xor.b64  	%rd4458, %rd4451, %rd4358;
	xor.b64  	%rd4459, %rd4453, %rd4361;
	xor.b64  	%rd4460, %rd4455, %rd4364;
	xor.b64  	%rd4461, %rd4447, %rd4367;
	xor.b64  	%rd4462, %rd4449, %rd4370;
	xor.b64  	%rd4463, %rd4451, %rd4373;
	xor.b64  	%rd4464, %rd4453, %rd4376;
	xor.b64  	%rd4465, %rd4455, %rd4379;
	xor.b64  	%rd4466, %rd4447, %rd4382;
	xor.b64  	%rd4467, %rd4449, %rd4385;
	xor.b64  	%rd4468, %rd4451, %rd4388;
	xor.b64  	%rd4469, %rd4453, %rd4391;
	xor.b64  	%rd4470, %rd4455, %rd4394;
	xor.b64  	%rd4471, %rd4447, %rd4397;
	xor.b64  	%rd4472, %rd4449, %rd4400;
	xor.b64  	%rd4473, %rd4451, %rd4403;
	xor.b64  	%rd4474, %rd4453, %rd4406;
	xor.b64  	%rd4475, %rd4455, %rd4409;
	xor.b64  	%rd4476, %rd4447, %rd4412;
	xor.b64  	%rd4477, %rd4449, %rd4415;
	xor.b64  	%rd4478, %rd4451, %rd4418;
	xor.b64  	%rd4479, %rd4453, %rd4421;
	xor.b64  	%rd4480, %rd4455, %rd4424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2997,%dummy}, %rd4462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2998}, %rd4462;
	}
	shf.r.wrap.b32 	%r2999, %r2998, %r2997, 20;
	shf.r.wrap.b32 	%r3000, %r2997, %r2998, 20;
	mov.b64 	%rd4481, {%r3000, %r2999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3001,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3002}, %rd4468;
	}
	shf.r.wrap.b32 	%r3003, %r3002, %r3001, 21;
	shf.r.wrap.b32 	%r3004, %r3001, %r3002, 21;
	mov.b64 	%rd4482, {%r3004, %r3003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3005}, %rd4474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd4474;
	}
	shf.l.wrap.b32 	%r3007, %r3006, %r3005, 21;
	shf.l.wrap.b32 	%r3008, %r3005, %r3006, 21;
	mov.b64 	%rd4483, {%r3008, %r3007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3009}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd4480;
	}
	shf.l.wrap.b32 	%r3011, %r3010, %r3009, 14;
	shf.l.wrap.b32 	%r3012, %r3009, %r3010, 14;
	mov.b64 	%rd4484, {%r3012, %r3011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3013}, %rd4459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd4459;
	}
	shf.l.wrap.b32 	%r3015, %r3014, %r3013, 28;
	shf.l.wrap.b32 	%r3016, %r3013, %r3014, 28;
	mov.b64 	%rd4485, {%r3016, %r3015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3017}, %rd4465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd4465;
	}
	shf.l.wrap.b32 	%r3019, %r3018, %r3017, 20;
	shf.l.wrap.b32 	%r3020, %r3017, %r3018, 20;
	mov.b64 	%rd4486, {%r3020, %r3019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3021}, %rd4466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3022,%dummy}, %rd4466;
	}
	shf.l.wrap.b32 	%r3023, %r3022, %r3021, 3;
	shf.l.wrap.b32 	%r3024, %r3021, %r3022, 3;
	mov.b64 	%rd4487, {%r3024, %r3023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3025,%dummy}, %rd4472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3026}, %rd4472;
	}
	shf.r.wrap.b32 	%r3027, %r3026, %r3025, 19;
	shf.r.wrap.b32 	%r3028, %r3025, %r3026, 19;
	mov.b64 	%rd4488, {%r3028, %r3027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3029,%dummy}, %rd4478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3030}, %rd4478;
	}
	shf.r.wrap.b32 	%r3031, %r3030, %r3029, 3;
	shf.r.wrap.b32 	%r3032, %r3029, %r3030, 3;
	mov.b64 	%rd4489, {%r3032, %r3031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3033}, %rd4457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3034,%dummy}, %rd4457;
	}
	shf.l.wrap.b32 	%r3035, %r3034, %r3033, 1;
	shf.l.wrap.b32 	%r3036, %r3033, %r3034, 1;
	mov.b64 	%rd4490, {%r3036, %r3035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3037}, %rd4463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3038,%dummy}, %rd4463;
	}
	shf.l.wrap.b32 	%r3039, %r3038, %r3037, 6;
	shf.l.wrap.b32 	%r3040, %r3037, %r3038, 6;
	mov.b64 	%rd4491, {%r3040, %r3039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd4469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd4469;
	}
	shf.l.wrap.b32 	%r3043, %r3042, %r3041, 25;
	shf.l.wrap.b32 	%r3044, %r3041, %r3042, 25;
	mov.b64 	%rd4492, {%r3044, %r3043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3045}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3046,%dummy}, %rd4475;
	}
	shf.l.wrap.b32 	%r3047, %r3046, %r3045, 8;
	shf.l.wrap.b32 	%r3048, %r3045, %r3046, 8;
	mov.b64 	%rd4493, {%r3048, %r3047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd4476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4476;
	}
	shf.l.wrap.b32 	%r3051, %r3050, %r3049, 18;
	shf.l.wrap.b32 	%r3052, %r3049, %r3050, 18;
	mov.b64 	%rd4494, {%r3052, %r3051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3053}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3054,%dummy}, %rd4460;
	}
	shf.l.wrap.b32 	%r3055, %r3054, %r3053, 27;
	shf.l.wrap.b32 	%r3056, %r3053, %r3054, 27;
	mov.b64 	%rd4495, {%r3056, %r3055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3057,%dummy}, %rd4461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3058}, %rd4461;
	}
	shf.r.wrap.b32 	%r3059, %r3058, %r3057, 28;
	shf.r.wrap.b32 	%r3060, %r3057, %r3058, 28;
	mov.b64 	%rd4496, {%r3060, %r3059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3061}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3062,%dummy}, %rd4467;
	}
	shf.l.wrap.b32 	%r3063, %r3062, %r3061, 10;
	shf.l.wrap.b32 	%r3064, %r3061, %r3062, 10;
	mov.b64 	%rd4497, {%r3064, %r3063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3065}, %rd4473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd4473;
	}
	shf.l.wrap.b32 	%r3067, %r3066, %r3065, 15;
	shf.l.wrap.b32 	%r3068, %r3065, %r3066, 15;
	mov.b64 	%rd4498, {%r3068, %r3067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3069,%dummy}, %rd4479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3070}, %rd4479;
	}
	shf.r.wrap.b32 	%r3071, %r3070, %r3069, 8;
	shf.r.wrap.b32 	%r3072, %r3069, %r3070, 8;
	mov.b64 	%rd4499, {%r3072, %r3071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3073,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3074}, %rd4458;
	}
	shf.r.wrap.b32 	%r3075, %r3074, %r3073, 2;
	shf.r.wrap.b32 	%r3076, %r3073, %r3074, 2;
	mov.b64 	%rd4500, {%r3076, %r3075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd4464;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 9;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 9;
	mov.b64 	%rd4501, {%r3080, %r3079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3081,%dummy}, %rd4470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3082}, %rd4470;
	}
	shf.r.wrap.b32 	%r3083, %r3082, %r3081, 25;
	shf.r.wrap.b32 	%r3084, %r3081, %r3082, 25;
	mov.b64 	%rd4502, {%r3084, %r3083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3085,%dummy}, %rd4471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3086}, %rd4471;
	}
	shf.r.wrap.b32 	%r3087, %r3086, %r3085, 23;
	shf.r.wrap.b32 	%r3088, %r3085, %r3086, 23;
	mov.b64 	%rd4503, {%r3088, %r3087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3089}, %rd4477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd4477;
	}
	shf.l.wrap.b32 	%r3091, %r3090, %r3089, 2;
	shf.l.wrap.b32 	%r3092, %r3089, %r3090, 2;
	mov.b64 	%rd4504, {%r3092, %r3091};
	not.b64 	%rd4505, %rd4481;
	and.b64  	%rd4506, %rd4482, %rd4505;
	xor.b64  	%rd4507, %rd4506, %rd4456;
	not.b64 	%rd4508, %rd4482;
	and.b64  	%rd4509, %rd4483, %rd4508;
	xor.b64  	%rd4510, %rd4509, %rd4481;
	not.b64 	%rd4511, %rd4483;
	and.b64  	%rd4512, %rd4484, %rd4511;
	xor.b64  	%rd4513, %rd4512, %rd4482;
	not.b64 	%rd4514, %rd4484;
	and.b64  	%rd4515, %rd4456, %rd4514;
	xor.b64  	%rd4516, %rd4515, %rd4483;
	not.b64 	%rd4517, %rd4456;
	and.b64  	%rd4518, %rd4481, %rd4517;
	xor.b64  	%rd4519, %rd4518, %rd4484;
	not.b64 	%rd4520, %rd4486;
	and.b64  	%rd4521, %rd4487, %rd4520;
	xor.b64  	%rd4522, %rd4521, %rd4485;
	not.b64 	%rd4523, %rd4487;
	and.b64  	%rd4524, %rd4488, %rd4523;
	xor.b64  	%rd4525, %rd4524, %rd4486;
	not.b64 	%rd4526, %rd4488;
	and.b64  	%rd4527, %rd4489, %rd4526;
	xor.b64  	%rd4528, %rd4527, %rd4487;
	not.b64 	%rd4529, %rd4489;
	and.b64  	%rd4530, %rd4485, %rd4529;
	xor.b64  	%rd4531, %rd4530, %rd4488;
	not.b64 	%rd4532, %rd4485;
	and.b64  	%rd4533, %rd4486, %rd4532;
	xor.b64  	%rd4534, %rd4533, %rd4489;
	not.b64 	%rd4535, %rd4491;
	and.b64  	%rd4536, %rd4492, %rd4535;
	xor.b64  	%rd4537, %rd4536, %rd4490;
	not.b64 	%rd4538, %rd4492;
	and.b64  	%rd4539, %rd4493, %rd4538;
	xor.b64  	%rd4540, %rd4539, %rd4491;
	not.b64 	%rd4541, %rd4493;
	and.b64  	%rd4542, %rd4494, %rd4541;
	xor.b64  	%rd4543, %rd4542, %rd4492;
	not.b64 	%rd4544, %rd4494;
	and.b64  	%rd4545, %rd4490, %rd4544;
	xor.b64  	%rd4546, %rd4545, %rd4493;
	not.b64 	%rd4547, %rd4490;
	and.b64  	%rd4548, %rd4491, %rd4547;
	xor.b64  	%rd4549, %rd4548, %rd4494;
	not.b64 	%rd4550, %rd4496;
	and.b64  	%rd4551, %rd4497, %rd4550;
	xor.b64  	%rd4552, %rd4551, %rd4495;
	not.b64 	%rd4553, %rd4497;
	and.b64  	%rd4554, %rd4498, %rd4553;
	xor.b64  	%rd4555, %rd4554, %rd4496;
	not.b64 	%rd4556, %rd4498;
	and.b64  	%rd4557, %rd4499, %rd4556;
	xor.b64  	%rd4558, %rd4557, %rd4497;
	not.b64 	%rd4559, %rd4499;
	and.b64  	%rd4560, %rd4495, %rd4559;
	xor.b64  	%rd4561, %rd4560, %rd4498;
	not.b64 	%rd4562, %rd4495;
	and.b64  	%rd4563, %rd4496, %rd4562;
	xor.b64  	%rd4564, %rd4563, %rd4499;
	not.b64 	%rd4565, %rd4501;
	and.b64  	%rd4566, %rd4502, %rd4565;
	xor.b64  	%rd4567, %rd4566, %rd4500;
	not.b64 	%rd4568, %rd4502;
	and.b64  	%rd4569, %rd4503, %rd4568;
	xor.b64  	%rd4570, %rd4569, %rd4501;
	not.b64 	%rd4571, %rd4503;
	and.b64  	%rd4572, %rd4504, %rd4571;
	xor.b64  	%rd4573, %rd4572, %rd4502;
	not.b64 	%rd4574, %rd4504;
	and.b64  	%rd4575, %rd4500, %rd4574;
	xor.b64  	%rd4576, %rd4575, %rd4503;
	not.b64 	%rd4577, %rd4500;
	and.b64  	%rd4578, %rd4501, %rd4577;
	xor.b64  	%rd4579, %rd4578, %rd4504;
	xor.b64  	%rd4580, %rd4507, %rd17;
	xor.b64  	%rd4581, %rd4522, %rd4580;
	xor.b64  	%rd4582, %rd4581, %rd4537;
	xor.b64  	%rd4583, %rd4582, %rd4552;
	xor.b64  	%rd4584, %rd4583, %rd4567;
	xor.b64  	%rd4585, %rd4525, %rd4510;
	xor.b64  	%rd4586, %rd4585, %rd4540;
	xor.b64  	%rd4587, %rd4586, %rd4555;
	xor.b64  	%rd4588, %rd4587, %rd4570;
	xor.b64  	%rd4589, %rd4528, %rd4513;
	xor.b64  	%rd4590, %rd4589, %rd4543;
	xor.b64  	%rd4591, %rd4590, %rd4558;
	xor.b64  	%rd4592, %rd4591, %rd4573;
	xor.b64  	%rd4593, %rd4531, %rd4516;
	xor.b64  	%rd4594, %rd4593, %rd4546;
	xor.b64  	%rd4595, %rd4594, %rd4561;
	xor.b64  	%rd4596, %rd4595, %rd4576;
	xor.b64  	%rd4597, %rd4534, %rd4519;
	xor.b64  	%rd4598, %rd4597, %rd4549;
	xor.b64  	%rd4599, %rd4598, %rd4564;
	xor.b64  	%rd4600, %rd4599, %rd4579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3093}, %rd4588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3094,%dummy}, %rd4588;
	}
	shf.l.wrap.b32 	%r3095, %r3094, %r3093, 1;
	shf.l.wrap.b32 	%r3096, %r3093, %r3094, 1;
	mov.b64 	%rd4601, {%r3096, %r3095};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3097}, %rd4592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd4592;
	}
	shf.l.wrap.b32 	%r3099, %r3098, %r3097, 1;
	shf.l.wrap.b32 	%r3100, %r3097, %r3098, 1;
	mov.b64 	%rd4603, {%r3100, %r3099};
	xor.b64  	%rd4604, %rd4603, %rd4584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd4596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3102,%dummy}, %rd4596;
	}
	shf.l.wrap.b32 	%r3103, %r3102, %r3101, 1;
	shf.l.wrap.b32 	%r3104, %r3101, %r3102, 1;
	mov.b64 	%rd4605, {%r3104, %r3103};
	xor.b64  	%rd4606, %rd4605, %rd4588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3105}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd4600;
	}
	shf.l.wrap.b32 	%r3107, %r3106, %r3105, 1;
	shf.l.wrap.b32 	%r3108, %r3105, %r3106, 1;
	mov.b64 	%rd4607, {%r3108, %r3107};
	xor.b64  	%rd4608, %rd4607, %rd4592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3109}, %rd4584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd4584;
	}
	shf.l.wrap.b32 	%r3111, %r3110, %r3109, 1;
	shf.l.wrap.b32 	%r3112, %r3109, %r3110, 1;
	mov.b64 	%rd4609, {%r3112, %r3111};
	xor.b64  	%rd4610, %rd4596, %rd4609;
	xor.b64  	%rd4611, %rd4602, %rd4580;
	xor.b64  	%rd4612, %rd4604, %rd4510;
	xor.b64  	%rd4613, %rd4606, %rd4513;
	xor.b64  	%rd4614, %rd4608, %rd4516;
	xor.b64  	%rd4615, %rd4610, %rd4519;
	xor.b64  	%rd4616, %rd4602, %rd4522;
	xor.b64  	%rd4617, %rd4604, %rd4525;
	xor.b64  	%rd4618, %rd4606, %rd4528;
	xor.b64  	%rd4619, %rd4608, %rd4531;
	xor.b64  	%rd4620, %rd4610, %rd4534;
	xor.b64  	%rd4621, %rd4602, %rd4537;
	xor.b64  	%rd4622, %rd4604, %rd4540;
	xor.b64  	%rd4623, %rd4606, %rd4543;
	xor.b64  	%rd4624, %rd4608, %rd4546;
	xor.b64  	%rd4625, %rd4610, %rd4549;
	xor.b64  	%rd4626, %rd4602, %rd4552;
	xor.b64  	%rd4627, %rd4604, %rd4555;
	xor.b64  	%rd4628, %rd4606, %rd4558;
	xor.b64  	%rd4629, %rd4608, %rd4561;
	xor.b64  	%rd4630, %rd4610, %rd4564;
	xor.b64  	%rd4631, %rd4602, %rd4567;
	xor.b64  	%rd4632, %rd4604, %rd4570;
	xor.b64  	%rd4633, %rd4606, %rd4573;
	xor.b64  	%rd4634, %rd4608, %rd4576;
	xor.b64  	%rd4635, %rd4610, %rd4579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3113,%dummy}, %rd4617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3114}, %rd4617;
	}
	shf.r.wrap.b32 	%r3115, %r3114, %r3113, 20;
	shf.r.wrap.b32 	%r3116, %r3113, %r3114, 20;
	mov.b64 	%rd4636, {%r3116, %r3115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3117,%dummy}, %rd4623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3118}, %rd4623;
	}
	shf.r.wrap.b32 	%r3119, %r3118, %r3117, 21;
	shf.r.wrap.b32 	%r3120, %r3117, %r3118, 21;
	mov.b64 	%rd4637, {%r3120, %r3119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd4629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3122,%dummy}, %rd4629;
	}
	shf.l.wrap.b32 	%r3123, %r3122, %r3121, 21;
	shf.l.wrap.b32 	%r3124, %r3121, %r3122, 21;
	mov.b64 	%rd4638, {%r3124, %r3123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3125}, %rd4635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd4635;
	}
	shf.l.wrap.b32 	%r3127, %r3126, %r3125, 14;
	shf.l.wrap.b32 	%r3128, %r3125, %r3126, 14;
	mov.b64 	%rd4639, {%r3128, %r3127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3129}, %rd4614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3130,%dummy}, %rd4614;
	}
	shf.l.wrap.b32 	%r3131, %r3130, %r3129, 28;
	shf.l.wrap.b32 	%r3132, %r3129, %r3130, 28;
	mov.b64 	%rd4640, {%r3132, %r3131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3133}, %rd4620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3134,%dummy}, %rd4620;
	}
	shf.l.wrap.b32 	%r3135, %r3134, %r3133, 20;
	shf.l.wrap.b32 	%r3136, %r3133, %r3134, 20;
	mov.b64 	%rd4641, {%r3136, %r3135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd4621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd4621;
	}
	shf.l.wrap.b32 	%r3139, %r3138, %r3137, 3;
	shf.l.wrap.b32 	%r3140, %r3137, %r3138, 3;
	mov.b64 	%rd4642, {%r3140, %r3139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3141,%dummy}, %rd4627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3142}, %rd4627;
	}
	shf.r.wrap.b32 	%r3143, %r3142, %r3141, 19;
	shf.r.wrap.b32 	%r3144, %r3141, %r3142, 19;
	mov.b64 	%rd4643, {%r3144, %r3143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3145,%dummy}, %rd4633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3146}, %rd4633;
	}
	shf.r.wrap.b32 	%r3147, %r3146, %r3145, 3;
	shf.r.wrap.b32 	%r3148, %r3145, %r3146, 3;
	mov.b64 	%rd4644, {%r3148, %r3147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3149}, %rd4612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3150,%dummy}, %rd4612;
	}
	shf.l.wrap.b32 	%r3151, %r3150, %r3149, 1;
	shf.l.wrap.b32 	%r3152, %r3149, %r3150, 1;
	mov.b64 	%rd4645, {%r3152, %r3151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd4618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3154,%dummy}, %rd4618;
	}
	shf.l.wrap.b32 	%r3155, %r3154, %r3153, 6;
	shf.l.wrap.b32 	%r3156, %r3153, %r3154, 6;
	mov.b64 	%rd4646, {%r3156, %r3155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3157}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd4624;
	}
	shf.l.wrap.b32 	%r3159, %r3158, %r3157, 25;
	shf.l.wrap.b32 	%r3160, %r3157, %r3158, 25;
	mov.b64 	%rd4647, {%r3160, %r3159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3161}, %rd4630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd4630;
	}
	shf.l.wrap.b32 	%r3163, %r3162, %r3161, 8;
	shf.l.wrap.b32 	%r3164, %r3161, %r3162, 8;
	mov.b64 	%rd4648, {%r3164, %r3163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3165}, %rd4631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3166,%dummy}, %rd4631;
	}
	shf.l.wrap.b32 	%r3167, %r3166, %r3165, 18;
	shf.l.wrap.b32 	%r3168, %r3165, %r3166, 18;
	mov.b64 	%rd4649, {%r3168, %r3167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd4615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd4615;
	}
	shf.l.wrap.b32 	%r3171, %r3170, %r3169, 27;
	shf.l.wrap.b32 	%r3172, %r3169, %r3170, 27;
	mov.b64 	%rd4650, {%r3172, %r3171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3173,%dummy}, %rd4616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3174}, %rd4616;
	}
	shf.r.wrap.b32 	%r3175, %r3174, %r3173, 28;
	shf.r.wrap.b32 	%r3176, %r3173, %r3174, 28;
	mov.b64 	%rd4651, {%r3176, %r3175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3177}, %rd4622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd4622;
	}
	shf.l.wrap.b32 	%r3179, %r3178, %r3177, 10;
	shf.l.wrap.b32 	%r3180, %r3177, %r3178, 10;
	mov.b64 	%rd4652, {%r3180, %r3179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd4628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3182,%dummy}, %rd4628;
	}
	shf.l.wrap.b32 	%r3183, %r3182, %r3181, 15;
	shf.l.wrap.b32 	%r3184, %r3181, %r3182, 15;
	mov.b64 	%rd4653, {%r3184, %r3183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3185,%dummy}, %rd4634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3186}, %rd4634;
	}
	shf.r.wrap.b32 	%r3187, %r3186, %r3185, 8;
	shf.r.wrap.b32 	%r3188, %r3185, %r3186, 8;
	mov.b64 	%rd4654, {%r3188, %r3187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3189,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3190}, %rd4613;
	}
	shf.r.wrap.b32 	%r3191, %r3190, %r3189, 2;
	shf.r.wrap.b32 	%r3192, %r3189, %r3190, 2;
	mov.b64 	%rd4655, {%r3192, %r3191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3193,%dummy}, %rd4619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3194}, %rd4619;
	}
	shf.r.wrap.b32 	%r3195, %r3194, %r3193, 9;
	shf.r.wrap.b32 	%r3196, %r3193, %r3194, 9;
	mov.b64 	%rd4656, {%r3196, %r3195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3197,%dummy}, %rd4625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3198}, %rd4625;
	}
	shf.r.wrap.b32 	%r3199, %r3198, %r3197, 25;
	shf.r.wrap.b32 	%r3200, %r3197, %r3198, 25;
	mov.b64 	%rd4657, {%r3200, %r3199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3201,%dummy}, %rd4626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3202}, %rd4626;
	}
	shf.r.wrap.b32 	%r3203, %r3202, %r3201, 23;
	shf.r.wrap.b32 	%r3204, %r3201, %r3202, 23;
	mov.b64 	%rd4658, {%r3204, %r3203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd4632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3206,%dummy}, %rd4632;
	}
	shf.l.wrap.b32 	%r3207, %r3206, %r3205, 2;
	shf.l.wrap.b32 	%r3208, %r3205, %r3206, 2;
	mov.b64 	%rd4659, {%r3208, %r3207};
	not.b64 	%rd4660, %rd4636;
	and.b64  	%rd4661, %rd4637, %rd4660;
	xor.b64  	%rd4662, %rd4661, %rd4611;
	not.b64 	%rd4663, %rd4637;
	and.b64  	%rd4664, %rd4638, %rd4663;
	xor.b64  	%rd4665, %rd4664, %rd4636;
	not.b64 	%rd4666, %rd4638;
	and.b64  	%rd4667, %rd4639, %rd4666;
	xor.b64  	%rd4668, %rd4667, %rd4637;
	not.b64 	%rd4669, %rd4639;
	and.b64  	%rd4670, %rd4611, %rd4669;
	xor.b64  	%rd4671, %rd4670, %rd4638;
	not.b64 	%rd4672, %rd4611;
	and.b64  	%rd4673, %rd4636, %rd4672;
	xor.b64  	%rd4674, %rd4673, %rd4639;
	not.b64 	%rd4675, %rd4641;
	and.b64  	%rd4676, %rd4642, %rd4675;
	xor.b64  	%rd4677, %rd4676, %rd4640;
	not.b64 	%rd4678, %rd4642;
	and.b64  	%rd4679, %rd4643, %rd4678;
	xor.b64  	%rd4680, %rd4679, %rd4641;
	not.b64 	%rd4681, %rd4643;
	and.b64  	%rd4682, %rd4644, %rd4681;
	xor.b64  	%rd4683, %rd4682, %rd4642;
	not.b64 	%rd4684, %rd4644;
	and.b64  	%rd4685, %rd4640, %rd4684;
	xor.b64  	%rd4686, %rd4685, %rd4643;
	not.b64 	%rd4687, %rd4640;
	and.b64  	%rd4688, %rd4641, %rd4687;
	xor.b64  	%rd4689, %rd4688, %rd4644;
	not.b64 	%rd4690, %rd4646;
	and.b64  	%rd4691, %rd4647, %rd4690;
	xor.b64  	%rd4692, %rd4691, %rd4645;
	not.b64 	%rd4693, %rd4647;
	and.b64  	%rd4694, %rd4648, %rd4693;
	xor.b64  	%rd4695, %rd4694, %rd4646;
	not.b64 	%rd4696, %rd4648;
	and.b64  	%rd4697, %rd4649, %rd4696;
	xor.b64  	%rd4698, %rd4697, %rd4647;
	not.b64 	%rd4699, %rd4649;
	and.b64  	%rd4700, %rd4645, %rd4699;
	xor.b64  	%rd4701, %rd4700, %rd4648;
	not.b64 	%rd4702, %rd4645;
	and.b64  	%rd4703, %rd4646, %rd4702;
	xor.b64  	%rd4704, %rd4703, %rd4649;
	not.b64 	%rd4705, %rd4651;
	and.b64  	%rd4706, %rd4652, %rd4705;
	xor.b64  	%rd4707, %rd4706, %rd4650;
	not.b64 	%rd4708, %rd4652;
	and.b64  	%rd4709, %rd4653, %rd4708;
	xor.b64  	%rd4710, %rd4709, %rd4651;
	not.b64 	%rd4711, %rd4653;
	and.b64  	%rd4712, %rd4654, %rd4711;
	xor.b64  	%rd4713, %rd4712, %rd4652;
	not.b64 	%rd4714, %rd4654;
	and.b64  	%rd4715, %rd4650, %rd4714;
	xor.b64  	%rd4716, %rd4715, %rd4653;
	not.b64 	%rd4717, %rd4650;
	and.b64  	%rd4718, %rd4651, %rd4717;
	xor.b64  	%rd4719, %rd4718, %rd4654;
	not.b64 	%rd4720, %rd4656;
	and.b64  	%rd4721, %rd4657, %rd4720;
	xor.b64  	%rd4722, %rd4721, %rd4655;
	not.b64 	%rd4723, %rd4657;
	and.b64  	%rd4724, %rd4658, %rd4723;
	xor.b64  	%rd4725, %rd4724, %rd4656;
	not.b64 	%rd4726, %rd4658;
	and.b64  	%rd4727, %rd4659, %rd4726;
	xor.b64  	%rd4728, %rd4727, %rd4657;
	not.b64 	%rd4729, %rd4659;
	and.b64  	%rd4730, %rd4655, %rd4729;
	xor.b64  	%rd4731, %rd4730, %rd4658;
	not.b64 	%rd4732, %rd4655;
	and.b64  	%rd4733, %rd4656, %rd4732;
	xor.b64  	%rd4734, %rd4733, %rd4659;
	xor.b64  	%rd4735, %rd4662, %rd18;
	xor.b64  	%rd4736, %rd4677, %rd4735;
	xor.b64  	%rd4737, %rd4736, %rd4692;
	xor.b64  	%rd4738, %rd4737, %rd4707;
	xor.b64  	%rd4739, %rd4738, %rd4722;
	xor.b64  	%rd4740, %rd4680, %rd4665;
	xor.b64  	%rd4741, %rd4740, %rd4695;
	xor.b64  	%rd4742, %rd4741, %rd4710;
	xor.b64  	%rd4743, %rd4742, %rd4725;
	xor.b64  	%rd4744, %rd4683, %rd4668;
	xor.b64  	%rd4745, %rd4744, %rd4698;
	xor.b64  	%rd4746, %rd4745, %rd4713;
	xor.b64  	%rd4747, %rd4746, %rd4728;
	xor.b64  	%rd4748, %rd4686, %rd4671;
	xor.b64  	%rd4749, %rd4748, %rd4701;
	xor.b64  	%rd4750, %rd4749, %rd4716;
	xor.b64  	%rd4751, %rd4750, %rd4731;
	xor.b64  	%rd4752, %rd4689, %rd4674;
	xor.b64  	%rd4753, %rd4752, %rd4704;
	xor.b64  	%rd4754, %rd4753, %rd4719;
	xor.b64  	%rd4755, %rd4754, %rd4734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3209}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd4743;
	}
	shf.l.wrap.b32 	%r3211, %r3210, %r3209, 1;
	shf.l.wrap.b32 	%r3212, %r3209, %r3210, 1;
	mov.b64 	%rd4756, {%r3212, %r3211};
	xor.b64  	%rd4757, %rd4755, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3213}, %rd4747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3214,%dummy}, %rd4747;
	}
	shf.l.wrap.b32 	%r3215, %r3214, %r3213, 1;
	shf.l.wrap.b32 	%r3216, %r3213, %r3214, 1;
	mov.b64 	%rd4758, {%r3216, %r3215};
	xor.b64  	%rd4759, %rd4758, %rd4739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3217}, %rd4751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd4751;
	}
	shf.l.wrap.b32 	%r3219, %r3218, %r3217, 1;
	shf.l.wrap.b32 	%r3220, %r3217, %r3218, 1;
	mov.b64 	%rd4760, {%r3220, %r3219};
	xor.b64  	%rd4761, %rd4760, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3221}, %rd4755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd4755;
	}
	shf.l.wrap.b32 	%r3223, %r3222, %r3221, 1;
	shf.l.wrap.b32 	%r3224, %r3221, %r3222, 1;
	mov.b64 	%rd4762, {%r3224, %r3223};
	xor.b64  	%rd4763, %rd4762, %rd4747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3225}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3226,%dummy}, %rd4739;
	}
	shf.l.wrap.b32 	%r3227, %r3226, %r3225, 1;
	shf.l.wrap.b32 	%r3228, %r3225, %r3226, 1;
	mov.b64 	%rd4764, {%r3228, %r3227};
	xor.b64  	%rd4765, %rd4751, %rd4764;
	xor.b64  	%rd4766, %rd4757, %rd4735;
	xor.b64  	%rd4767, %rd4759, %rd4665;
	xor.b64  	%rd4768, %rd4761, %rd4668;
	xor.b64  	%rd4769, %rd4763, %rd4671;
	xor.b64  	%rd4770, %rd4765, %rd4674;
	xor.b64  	%rd4771, %rd4757, %rd4677;
	xor.b64  	%rd4772, %rd4759, %rd4680;
	xor.b64  	%rd4773, %rd4761, %rd4683;
	xor.b64  	%rd4774, %rd4763, %rd4686;
	xor.b64  	%rd4775, %rd4765, %rd4689;
	xor.b64  	%rd4776, %rd4757, %rd4692;
	xor.b64  	%rd4777, %rd4759, %rd4695;
	xor.b64  	%rd4778, %rd4761, %rd4698;
	xor.b64  	%rd4779, %rd4763, %rd4701;
	xor.b64  	%rd4780, %rd4765, %rd4704;
	xor.b64  	%rd4781, %rd4757, %rd4707;
	xor.b64  	%rd4782, %rd4759, %rd4710;
	xor.b64  	%rd4783, %rd4761, %rd4713;
	xor.b64  	%rd4784, %rd4763, %rd4716;
	xor.b64  	%rd4785, %rd4765, %rd4719;
	xor.b64  	%rd4786, %rd4757, %rd4722;
	xor.b64  	%rd4787, %rd4759, %rd4725;
	xor.b64  	%rd4788, %rd4761, %rd4728;
	xor.b64  	%rd4789, %rd4763, %rd4731;
	xor.b64  	%rd4790, %rd4765, %rd4734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3229,%dummy}, %rd4772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3230}, %rd4772;
	}
	shf.r.wrap.b32 	%r3231, %r3230, %r3229, 20;
	shf.r.wrap.b32 	%r3232, %r3229, %r3230, 20;
	mov.b64 	%rd4791, {%r3232, %r3231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd4778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd4778;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 21;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 21;
	mov.b64 	%rd4792, {%r3236, %r3235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd4784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3238,%dummy}, %rd4784;
	}
	shf.l.wrap.b32 	%r3239, %r3238, %r3237, 21;
	shf.l.wrap.b32 	%r3240, %r3237, %r3238, 21;
	mov.b64 	%rd4793, {%r3240, %r3239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd4790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd4790;
	}
	shf.l.wrap.b32 	%r3243, %r3242, %r3241, 14;
	shf.l.wrap.b32 	%r3244, %r3241, %r3242, 14;
	mov.b64 	%rd4794, {%r3244, %r3243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3245}, %rd4769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3246,%dummy}, %rd4769;
	}
	shf.l.wrap.b32 	%r3247, %r3246, %r3245, 28;
	shf.l.wrap.b32 	%r3248, %r3245, %r3246, 28;
	mov.b64 	%rd4795, {%r3248, %r3247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd4775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd4775;
	}
	shf.l.wrap.b32 	%r3251, %r3250, %r3249, 20;
	shf.l.wrap.b32 	%r3252, %r3249, %r3250, 20;
	mov.b64 	%rd4796, {%r3252, %r3251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3253}, %rd4776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3254,%dummy}, %rd4776;
	}
	shf.l.wrap.b32 	%r3255, %r3254, %r3253, 3;
	shf.l.wrap.b32 	%r3256, %r3253, %r3254, 3;
	mov.b64 	%rd4797, {%r3256, %r3255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3257,%dummy}, %rd4782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3258}, %rd4782;
	}
	shf.r.wrap.b32 	%r3259, %r3258, %r3257, 19;
	shf.r.wrap.b32 	%r3260, %r3257, %r3258, 19;
	mov.b64 	%rd4798, {%r3260, %r3259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3261,%dummy}, %rd4788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3262}, %rd4788;
	}
	shf.r.wrap.b32 	%r3263, %r3262, %r3261, 3;
	shf.r.wrap.b32 	%r3264, %r3261, %r3262, 3;
	mov.b64 	%rd4799, {%r3264, %r3263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd4767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd4767;
	}
	shf.l.wrap.b32 	%r3267, %r3266, %r3265, 1;
	shf.l.wrap.b32 	%r3268, %r3265, %r3266, 1;
	mov.b64 	%rd4800, {%r3268, %r3267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3269}, %rd4773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3270,%dummy}, %rd4773;
	}
	shf.l.wrap.b32 	%r3271, %r3270, %r3269, 6;
	shf.l.wrap.b32 	%r3272, %r3269, %r3270, 6;
	mov.b64 	%rd4801, {%r3272, %r3271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3273}, %rd4779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd4779;
	}
	shf.l.wrap.b32 	%r3275, %r3274, %r3273, 25;
	shf.l.wrap.b32 	%r3276, %r3273, %r3274, 25;
	mov.b64 	%rd4802, {%r3276, %r3275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3277}, %rd4785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd4785;
	}
	shf.l.wrap.b32 	%r3279, %r3278, %r3277, 8;
	shf.l.wrap.b32 	%r3280, %r3277, %r3278, 8;
	mov.b64 	%rd4803, {%r3280, %r3279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3281}, %rd4786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4786;
	}
	shf.l.wrap.b32 	%r3283, %r3282, %r3281, 18;
	shf.l.wrap.b32 	%r3284, %r3281, %r3282, 18;
	mov.b64 	%rd4804, {%r3284, %r3283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3285}, %rd4770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3286,%dummy}, %rd4770;
	}
	shf.l.wrap.b32 	%r3287, %r3286, %r3285, 27;
	shf.l.wrap.b32 	%r3288, %r3285, %r3286, 27;
	mov.b64 	%rd4805, {%r3288, %r3287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3289,%dummy}, %rd4771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3290}, %rd4771;
	}
	shf.r.wrap.b32 	%r3291, %r3290, %r3289, 28;
	shf.r.wrap.b32 	%r3292, %r3289, %r3290, 28;
	mov.b64 	%rd4806, {%r3292, %r3291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3293}, %rd4777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3294,%dummy}, %rd4777;
	}
	shf.l.wrap.b32 	%r3295, %r3294, %r3293, 10;
	shf.l.wrap.b32 	%r3296, %r3293, %r3294, 10;
	mov.b64 	%rd4807, {%r3296, %r3295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3297}, %rd4783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd4783;
	}
	shf.l.wrap.b32 	%r3299, %r3298, %r3297, 15;
	shf.l.wrap.b32 	%r3300, %r3297, %r3298, 15;
	mov.b64 	%rd4808, {%r3300, %r3299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3301,%dummy}, %rd4789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3302}, %rd4789;
	}
	shf.r.wrap.b32 	%r3303, %r3302, %r3301, 8;
	shf.r.wrap.b32 	%r3304, %r3301, %r3302, 8;
	mov.b64 	%rd4809, {%r3304, %r3303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3305,%dummy}, %rd4768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3306}, %rd4768;
	}
	shf.r.wrap.b32 	%r3307, %r3306, %r3305, 2;
	shf.r.wrap.b32 	%r3308, %r3305, %r3306, 2;
	mov.b64 	%rd4810, {%r3308, %r3307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3309,%dummy}, %rd4774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3310}, %rd4774;
	}
	shf.r.wrap.b32 	%r3311, %r3310, %r3309, 9;
	shf.r.wrap.b32 	%r3312, %r3309, %r3310, 9;
	mov.b64 	%rd4811, {%r3312, %r3311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3313,%dummy}, %rd4780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3314}, %rd4780;
	}
	shf.r.wrap.b32 	%r3315, %r3314, %r3313, 25;
	shf.r.wrap.b32 	%r3316, %r3313, %r3314, 25;
	mov.b64 	%rd4812, {%r3316, %r3315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3317,%dummy}, %rd4781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3318}, %rd4781;
	}
	shf.r.wrap.b32 	%r3319, %r3318, %r3317, 23;
	shf.r.wrap.b32 	%r3320, %r3317, %r3318, 23;
	mov.b64 	%rd4813, {%r3320, %r3319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3321}, %rd4787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd4787;
	}
	shf.l.wrap.b32 	%r3323, %r3322, %r3321, 2;
	shf.l.wrap.b32 	%r3324, %r3321, %r3322, 2;
	mov.b64 	%rd4814, {%r3324, %r3323};
	not.b64 	%rd4815, %rd4791;
	and.b64  	%rd4816, %rd4792, %rd4815;
	xor.b64  	%rd4817, %rd4816, %rd4766;
	not.b64 	%rd4818, %rd4792;
	and.b64  	%rd4819, %rd4793, %rd4818;
	xor.b64  	%rd4820, %rd4819, %rd4791;
	not.b64 	%rd4821, %rd4793;
	and.b64  	%rd4822, %rd4794, %rd4821;
	xor.b64  	%rd4823, %rd4822, %rd4792;
	not.b64 	%rd4824, %rd4794;
	and.b64  	%rd4825, %rd4766, %rd4824;
	xor.b64  	%rd4826, %rd4825, %rd4793;
	not.b64 	%rd4827, %rd4766;
	and.b64  	%rd4828, %rd4791, %rd4827;
	xor.b64  	%rd4829, %rd4828, %rd4794;
	not.b64 	%rd4830, %rd4796;
	and.b64  	%rd4831, %rd4797, %rd4830;
	xor.b64  	%rd4832, %rd4831, %rd4795;
	not.b64 	%rd4833, %rd4797;
	and.b64  	%rd4834, %rd4798, %rd4833;
	xor.b64  	%rd4835, %rd4834, %rd4796;
	not.b64 	%rd4836, %rd4798;
	and.b64  	%rd4837, %rd4799, %rd4836;
	xor.b64  	%rd4838, %rd4837, %rd4797;
	not.b64 	%rd4839, %rd4799;
	and.b64  	%rd4840, %rd4795, %rd4839;
	xor.b64  	%rd4841, %rd4840, %rd4798;
	not.b64 	%rd4842, %rd4795;
	and.b64  	%rd4843, %rd4796, %rd4842;
	xor.b64  	%rd4844, %rd4843, %rd4799;
	not.b64 	%rd4845, %rd4801;
	and.b64  	%rd4846, %rd4802, %rd4845;
	xor.b64  	%rd4847, %rd4846, %rd4800;
	not.b64 	%rd4848, %rd4802;
	and.b64  	%rd4849, %rd4803, %rd4848;
	xor.b64  	%rd4850, %rd4849, %rd4801;
	not.b64 	%rd4851, %rd4803;
	and.b64  	%rd4852, %rd4804, %rd4851;
	xor.b64  	%rd4853, %rd4852, %rd4802;
	not.b64 	%rd4854, %rd4804;
	and.b64  	%rd4855, %rd4800, %rd4854;
	xor.b64  	%rd4856, %rd4855, %rd4803;
	not.b64 	%rd4857, %rd4800;
	and.b64  	%rd4858, %rd4801, %rd4857;
	xor.b64  	%rd4859, %rd4858, %rd4804;
	not.b64 	%rd4860, %rd4806;
	and.b64  	%rd4861, %rd4807, %rd4860;
	xor.b64  	%rd4862, %rd4861, %rd4805;
	not.b64 	%rd4863, %rd4807;
	and.b64  	%rd4864, %rd4808, %rd4863;
	xor.b64  	%rd4865, %rd4864, %rd4806;
	not.b64 	%rd4866, %rd4808;
	and.b64  	%rd4867, %rd4809, %rd4866;
	xor.b64  	%rd4868, %rd4867, %rd4807;
	not.b64 	%rd4869, %rd4809;
	and.b64  	%rd4870, %rd4805, %rd4869;
	xor.b64  	%rd4871, %rd4870, %rd4808;
	not.b64 	%rd4872, %rd4805;
	and.b64  	%rd4873, %rd4806, %rd4872;
	xor.b64  	%rd4874, %rd4873, %rd4809;
	not.b64 	%rd4875, %rd4811;
	and.b64  	%rd4876, %rd4812, %rd4875;
	xor.b64  	%rd4877, %rd4876, %rd4810;
	not.b64 	%rd4878, %rd4812;
	and.b64  	%rd4879, %rd4813, %rd4878;
	xor.b64  	%rd4880, %rd4879, %rd4811;
	not.b64 	%rd4881, %rd4813;
	and.b64  	%rd4882, %rd4814, %rd4881;
	xor.b64  	%rd4883, %rd4882, %rd4812;
	not.b64 	%rd4884, %rd4814;
	and.b64  	%rd4885, %rd4810, %rd4884;
	xor.b64  	%rd4886, %rd4885, %rd4813;
	not.b64 	%rd4887, %rd4810;
	and.b64  	%rd4888, %rd4811, %rd4887;
	xor.b64  	%rd4889, %rd4888, %rd4814;
	xor.b64  	%rd4890, %rd4817, %rd19;
	xor.b64  	%rd4891, %rd4832, %rd4890;
	xor.b64  	%rd4892, %rd4891, %rd4847;
	xor.b64  	%rd4893, %rd4892, %rd4862;
	xor.b64  	%rd4894, %rd4893, %rd4877;
	xor.b64  	%rd4895, %rd4835, %rd4820;
	xor.b64  	%rd4896, %rd4895, %rd4850;
	xor.b64  	%rd4897, %rd4896, %rd4865;
	xor.b64  	%rd4898, %rd4897, %rd4880;
	xor.b64  	%rd4899, %rd4838, %rd4823;
	xor.b64  	%rd4900, %rd4899, %rd4853;
	xor.b64  	%rd4901, %rd4900, %rd4868;
	xor.b64  	%rd4902, %rd4901, %rd4883;
	xor.b64  	%rd4903, %rd4841, %rd4826;
	xor.b64  	%rd4904, %rd4903, %rd4856;
	xor.b64  	%rd4905, %rd4904, %rd4871;
	xor.b64  	%rd4906, %rd4905, %rd4886;
	xor.b64  	%rd4907, %rd4844, %rd4829;
	xor.b64  	%rd4908, %rd4907, %rd4859;
	xor.b64  	%rd4909, %rd4908, %rd4874;
	xor.b64  	%rd4910, %rd4909, %rd4889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3325}, %rd4898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3326,%dummy}, %rd4898;
	}
	shf.l.wrap.b32 	%r3327, %r3326, %r3325, 1;
	shf.l.wrap.b32 	%r3328, %r3325, %r3326, 1;
	mov.b64 	%rd4911, {%r3328, %r3327};
	xor.b64  	%rd4912, %rd4910, %rd4911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3329}, %rd4902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd4902;
	}
	shf.l.wrap.b32 	%r3331, %r3330, %r3329, 1;
	shf.l.wrap.b32 	%r3332, %r3329, %r3330, 1;
	mov.b64 	%rd4913, {%r3332, %r3331};
	xor.b64  	%rd4914, %rd4913, %rd4894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3333}, %rd4906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3334,%dummy}, %rd4906;
	}
	shf.l.wrap.b32 	%r3335, %r3334, %r3333, 1;
	shf.l.wrap.b32 	%r3336, %r3333, %r3334, 1;
	mov.b64 	%rd4915, {%r3336, %r3335};
	xor.b64  	%rd4916, %rd4915, %rd4898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3337}, %rd4910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd4910;
	}
	shf.l.wrap.b32 	%r3339, %r3338, %r3337, 1;
	shf.l.wrap.b32 	%r3340, %r3337, %r3338, 1;
	mov.b64 	%rd4917, {%r3340, %r3339};
	xor.b64  	%rd4918, %rd4917, %rd4902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3341}, %rd4894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3342,%dummy}, %rd4894;
	}
	shf.l.wrap.b32 	%r3343, %r3342, %r3341, 1;
	shf.l.wrap.b32 	%r3344, %r3341, %r3342, 1;
	mov.b64 	%rd4919, {%r3344, %r3343};
	xor.b64  	%rd4920, %rd4906, %rd4919;
	xor.b64  	%rd4921, %rd4912, %rd4890;
	xor.b64  	%rd4922, %rd4914, %rd4820;
	xor.b64  	%rd4923, %rd4916, %rd4823;
	xor.b64  	%rd4924, %rd4918, %rd4826;
	xor.b64  	%rd4925, %rd4920, %rd4829;
	xor.b64  	%rd4926, %rd4912, %rd4832;
	xor.b64  	%rd4927, %rd4914, %rd4835;
	xor.b64  	%rd4928, %rd4916, %rd4838;
	xor.b64  	%rd4929, %rd4918, %rd4841;
	xor.b64  	%rd4930, %rd4920, %rd4844;
	xor.b64  	%rd4931, %rd4912, %rd4847;
	xor.b64  	%rd4932, %rd4914, %rd4850;
	xor.b64  	%rd4933, %rd4916, %rd4853;
	xor.b64  	%rd4934, %rd4918, %rd4856;
	xor.b64  	%rd4935, %rd4920, %rd4859;
	xor.b64  	%rd4936, %rd4912, %rd4862;
	xor.b64  	%rd4937, %rd4914, %rd4865;
	xor.b64  	%rd4938, %rd4916, %rd4868;
	xor.b64  	%rd4939, %rd4918, %rd4871;
	xor.b64  	%rd4940, %rd4920, %rd4874;
	xor.b64  	%rd4941, %rd4912, %rd4877;
	xor.b64  	%rd4942, %rd4914, %rd4880;
	xor.b64  	%rd4943, %rd4916, %rd4883;
	xor.b64  	%rd4944, %rd4918, %rd4886;
	xor.b64  	%rd4945, %rd4920, %rd4889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3345,%dummy}, %rd4927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3346}, %rd4927;
	}
	shf.r.wrap.b32 	%r3347, %r3346, %r3345, 20;
	shf.r.wrap.b32 	%r3348, %r3345, %r3346, 20;
	mov.b64 	%rd4946, {%r3348, %r3347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3349,%dummy}, %rd4933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3350}, %rd4933;
	}
	shf.r.wrap.b32 	%r3351, %r3350, %r3349, 21;
	shf.r.wrap.b32 	%r3352, %r3349, %r3350, 21;
	mov.b64 	%rd4947, {%r3352, %r3351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3353}, %rd4939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3354,%dummy}, %rd4939;
	}
	shf.l.wrap.b32 	%r3355, %r3354, %r3353, 21;
	shf.l.wrap.b32 	%r3356, %r3353, %r3354, 21;
	mov.b64 	%rd4948, {%r3356, %r3355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd4945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3358,%dummy}, %rd4945;
	}
	shf.l.wrap.b32 	%r3359, %r3358, %r3357, 14;
	shf.l.wrap.b32 	%r3360, %r3357, %r3358, 14;
	mov.b64 	%rd4949, {%r3360, %r3359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3361}, %rd4924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd4924;
	}
	shf.l.wrap.b32 	%r3363, %r3362, %r3361, 28;
	shf.l.wrap.b32 	%r3364, %r3361, %r3362, 28;
	mov.b64 	%rd4950, {%r3364, %r3363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3365}, %rd4930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3366,%dummy}, %rd4930;
	}
	shf.l.wrap.b32 	%r3367, %r3366, %r3365, 20;
	shf.l.wrap.b32 	%r3368, %r3365, %r3366, 20;
	mov.b64 	%rd4951, {%r3368, %r3367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3369}, %rd4931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd4931;
	}
	shf.l.wrap.b32 	%r3371, %r3370, %r3369, 3;
	shf.l.wrap.b32 	%r3372, %r3369, %r3370, 3;
	mov.b64 	%rd4952, {%r3372, %r3371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3373,%dummy}, %rd4937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3374}, %rd4937;
	}
	shf.r.wrap.b32 	%r3375, %r3374, %r3373, 19;
	shf.r.wrap.b32 	%r3376, %r3373, %r3374, 19;
	mov.b64 	%rd4953, {%r3376, %r3375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3377,%dummy}, %rd4943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3378}, %rd4943;
	}
	shf.r.wrap.b32 	%r3379, %r3378, %r3377, 3;
	shf.r.wrap.b32 	%r3380, %r3377, %r3378, 3;
	mov.b64 	%rd4954, {%r3380, %r3379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3381}, %rd4922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3382,%dummy}, %rd4922;
	}
	shf.l.wrap.b32 	%r3383, %r3382, %r3381, 1;
	shf.l.wrap.b32 	%r3384, %r3381, %r3382, 1;
	mov.b64 	%rd4955, {%r3384, %r3383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3385}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4928;
	}
	shf.l.wrap.b32 	%r3387, %r3386, %r3385, 6;
	shf.l.wrap.b32 	%r3388, %r3385, %r3386, 6;
	mov.b64 	%rd4956, {%r3388, %r3387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3389}, %rd4934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3390,%dummy}, %rd4934;
	}
	shf.l.wrap.b32 	%r3391, %r3390, %r3389, 25;
	shf.l.wrap.b32 	%r3392, %r3389, %r3390, 25;
	mov.b64 	%rd4957, {%r3392, %r3391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3393}, %rd4940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd4940;
	}
	shf.l.wrap.b32 	%r3395, %r3394, %r3393, 8;
	shf.l.wrap.b32 	%r3396, %r3393, %r3394, 8;
	mov.b64 	%rd4958, {%r3396, %r3395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd4941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3398,%dummy}, %rd4941;
	}
	shf.l.wrap.b32 	%r3399, %r3398, %r3397, 18;
	shf.l.wrap.b32 	%r3400, %r3397, %r3398, 18;
	mov.b64 	%rd4959, {%r3400, %r3399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3401}, %rd4925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3402,%dummy}, %rd4925;
	}
	shf.l.wrap.b32 	%r3403, %r3402, %r3401, 27;
	shf.l.wrap.b32 	%r3404, %r3401, %r3402, 27;
	mov.b64 	%rd4960, {%r3404, %r3403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3405,%dummy}, %rd4926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3406}, %rd4926;
	}
	shf.r.wrap.b32 	%r3407, %r3406, %r3405, 28;
	shf.r.wrap.b32 	%r3408, %r3405, %r3406, 28;
	mov.b64 	%rd4961, {%r3408, %r3407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3409}, %rd4932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3410,%dummy}, %rd4932;
	}
	shf.l.wrap.b32 	%r3411, %r3410, %r3409, 10;
	shf.l.wrap.b32 	%r3412, %r3409, %r3410, 10;
	mov.b64 	%rd4962, {%r3412, %r3411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3413}, %rd4938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3414,%dummy}, %rd4938;
	}
	shf.l.wrap.b32 	%r3415, %r3414, %r3413, 15;
	shf.l.wrap.b32 	%r3416, %r3413, %r3414, 15;
	mov.b64 	%rd4963, {%r3416, %r3415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3417,%dummy}, %rd4944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3418}, %rd4944;
	}
	shf.r.wrap.b32 	%r3419, %r3418, %r3417, 8;
	shf.r.wrap.b32 	%r3420, %r3417, %r3418, 8;
	mov.b64 	%rd4964, {%r3420, %r3419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3421,%dummy}, %rd4923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3422}, %rd4923;
	}
	shf.r.wrap.b32 	%r3423, %r3422, %r3421, 2;
	shf.r.wrap.b32 	%r3424, %r3421, %r3422, 2;
	mov.b64 	%rd4965, {%r3424, %r3423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3425,%dummy}, %rd4929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3426}, %rd4929;
	}
	shf.r.wrap.b32 	%r3427, %r3426, %r3425, 9;
	shf.r.wrap.b32 	%r3428, %r3425, %r3426, 9;
	mov.b64 	%rd4966, {%r3428, %r3427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3429,%dummy}, %rd4935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3430}, %rd4935;
	}
	shf.r.wrap.b32 	%r3431, %r3430, %r3429, 25;
	shf.r.wrap.b32 	%r3432, %r3429, %r3430, 25;
	mov.b64 	%rd4967, {%r3432, %r3431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3433,%dummy}, %rd4936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3434}, %rd4936;
	}
	shf.r.wrap.b32 	%r3435, %r3434, %r3433, 23;
	shf.r.wrap.b32 	%r3436, %r3433, %r3434, 23;
	mov.b64 	%rd4968, {%r3436, %r3435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3437}, %rd4942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3438,%dummy}, %rd4942;
	}
	shf.l.wrap.b32 	%r3439, %r3438, %r3437, 2;
	shf.l.wrap.b32 	%r3440, %r3437, %r3438, 2;
	mov.b64 	%rd4969, {%r3440, %r3439};
	not.b64 	%rd4970, %rd4946;
	and.b64  	%rd4971, %rd4947, %rd4970;
	xor.b64  	%rd4972, %rd4971, %rd4921;
	not.b64 	%rd4973, %rd4947;
	and.b64  	%rd4974, %rd4948, %rd4973;
	xor.b64  	%rd4975, %rd4974, %rd4946;
	not.b64 	%rd4976, %rd4948;
	and.b64  	%rd4977, %rd4949, %rd4976;
	xor.b64  	%rd4978, %rd4977, %rd4947;
	not.b64 	%rd4979, %rd4949;
	and.b64  	%rd4980, %rd4921, %rd4979;
	xor.b64  	%rd4981, %rd4980, %rd4948;
	not.b64 	%rd4982, %rd4921;
	and.b64  	%rd4983, %rd4946, %rd4982;
	xor.b64  	%rd4984, %rd4983, %rd4949;
	not.b64 	%rd4985, %rd4951;
	and.b64  	%rd4986, %rd4952, %rd4985;
	xor.b64  	%rd4987, %rd4986, %rd4950;
	not.b64 	%rd4988, %rd4952;
	and.b64  	%rd4989, %rd4953, %rd4988;
	xor.b64  	%rd4990, %rd4989, %rd4951;
	not.b64 	%rd4991, %rd4953;
	and.b64  	%rd4992, %rd4954, %rd4991;
	xor.b64  	%rd4993, %rd4992, %rd4952;
	not.b64 	%rd4994, %rd4954;
	and.b64  	%rd4995, %rd4950, %rd4994;
	xor.b64  	%rd4996, %rd4995, %rd4953;
	not.b64 	%rd4997, %rd4950;
	and.b64  	%rd4998, %rd4951, %rd4997;
	xor.b64  	%rd4999, %rd4998, %rd4954;
	not.b64 	%rd5000, %rd4956;
	and.b64  	%rd5001, %rd4957, %rd5000;
	xor.b64  	%rd5002, %rd5001, %rd4955;
	not.b64 	%rd5003, %rd4957;
	and.b64  	%rd5004, %rd4958, %rd5003;
	xor.b64  	%rd5005, %rd5004, %rd4956;
	not.b64 	%rd5006, %rd4958;
	and.b64  	%rd5007, %rd4959, %rd5006;
	xor.b64  	%rd5008, %rd5007, %rd4957;
	not.b64 	%rd5009, %rd4959;
	and.b64  	%rd5010, %rd4955, %rd5009;
	xor.b64  	%rd5011, %rd5010, %rd4958;
	not.b64 	%rd5012, %rd4955;
	and.b64  	%rd5013, %rd4956, %rd5012;
	xor.b64  	%rd5014, %rd5013, %rd4959;
	not.b64 	%rd5015, %rd4961;
	and.b64  	%rd5016, %rd4962, %rd5015;
	xor.b64  	%rd5017, %rd5016, %rd4960;
	not.b64 	%rd5018, %rd4962;
	and.b64  	%rd5019, %rd4963, %rd5018;
	xor.b64  	%rd5020, %rd5019, %rd4961;
	not.b64 	%rd5021, %rd4963;
	and.b64  	%rd5022, %rd4964, %rd5021;
	xor.b64  	%rd5023, %rd5022, %rd4962;
	not.b64 	%rd5024, %rd4964;
	and.b64  	%rd5025, %rd4960, %rd5024;
	xor.b64  	%rd5026, %rd5025, %rd4963;
	not.b64 	%rd5027, %rd4960;
	and.b64  	%rd5028, %rd4961, %rd5027;
	xor.b64  	%rd5029, %rd5028, %rd4964;
	not.b64 	%rd5030, %rd4966;
	and.b64  	%rd5031, %rd4967, %rd5030;
	xor.b64  	%rd5032, %rd5031, %rd4965;
	not.b64 	%rd5033, %rd4967;
	and.b64  	%rd5034, %rd4968, %rd5033;
	xor.b64  	%rd5035, %rd5034, %rd4966;
	not.b64 	%rd5036, %rd4968;
	and.b64  	%rd5037, %rd4969, %rd5036;
	xor.b64  	%rd5038, %rd5037, %rd4967;
	not.b64 	%rd5039, %rd4969;
	and.b64  	%rd5040, %rd4965, %rd5039;
	xor.b64  	%rd5041, %rd5040, %rd4968;
	not.b64 	%rd5042, %rd4965;
	and.b64  	%rd5043, %rd4966, %rd5042;
	xor.b64  	%rd5044, %rd5043, %rd4969;
	xor.b64  	%rd5045, %rd4972, %rd20;
	xor.b64  	%rd5046, %rd4987, %rd5045;
	xor.b64  	%rd5047, %rd5046, %rd5002;
	xor.b64  	%rd5048, %rd5047, %rd5017;
	xor.b64  	%rd5049, %rd5048, %rd5032;
	xor.b64  	%rd5050, %rd4990, %rd4975;
	xor.b64  	%rd5051, %rd5050, %rd5005;
	xor.b64  	%rd5052, %rd5051, %rd5020;
	xor.b64  	%rd5053, %rd5052, %rd5035;
	xor.b64  	%rd5054, %rd4993, %rd4978;
	xor.b64  	%rd5055, %rd5054, %rd5008;
	xor.b64  	%rd5056, %rd5055, %rd5023;
	xor.b64  	%rd5057, %rd5056, %rd5038;
	xor.b64  	%rd5058, %rd4996, %rd4981;
	xor.b64  	%rd5059, %rd5058, %rd5011;
	xor.b64  	%rd5060, %rd5059, %rd5026;
	xor.b64  	%rd5061, %rd5060, %rd5041;
	xor.b64  	%rd5062, %rd4999, %rd4984;
	xor.b64  	%rd5063, %rd5062, %rd5014;
	xor.b64  	%rd5064, %rd5063, %rd5029;
	xor.b64  	%rd5065, %rd5064, %rd5044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3441}, %rd5053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3442,%dummy}, %rd5053;
	}
	shf.l.wrap.b32 	%r3443, %r3442, %r3441, 1;
	shf.l.wrap.b32 	%r3444, %r3441, %r3442, 1;
	mov.b64 	%rd5066, {%r3444, %r3443};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3445}, %rd5057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3446,%dummy}, %rd5057;
	}
	shf.l.wrap.b32 	%r3447, %r3446, %r3445, 1;
	shf.l.wrap.b32 	%r3448, %r3445, %r3446, 1;
	mov.b64 	%rd5068, {%r3448, %r3447};
	xor.b64  	%rd5069, %rd5068, %rd5049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3449}, %rd5061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3450,%dummy}, %rd5061;
	}
	shf.l.wrap.b32 	%r3451, %r3450, %r3449, 1;
	shf.l.wrap.b32 	%r3452, %r3449, %r3450, 1;
	mov.b64 	%rd5070, {%r3452, %r3451};
	xor.b64  	%rd5071, %rd5070, %rd5053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3453}, %rd5065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3454,%dummy}, %rd5065;
	}
	shf.l.wrap.b32 	%r3455, %r3454, %r3453, 1;
	shf.l.wrap.b32 	%r3456, %r3453, %r3454, 1;
	mov.b64 	%rd5072, {%r3456, %r3455};
	xor.b64  	%rd5073, %rd5072, %rd5057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd5049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3458,%dummy}, %rd5049;
	}
	shf.l.wrap.b32 	%r3459, %r3458, %r3457, 1;
	shf.l.wrap.b32 	%r3460, %r3457, %r3458, 1;
	mov.b64 	%rd5074, {%r3460, %r3459};
	xor.b64  	%rd5075, %rd5061, %rd5074;
	xor.b64  	%rd5076, %rd5067, %rd5045;
	xor.b64  	%rd5077, %rd5069, %rd4975;
	xor.b64  	%rd5078, %rd5071, %rd4978;
	xor.b64  	%rd5079, %rd5073, %rd4981;
	xor.b64  	%rd5080, %rd5075, %rd4984;
	xor.b64  	%rd5081, %rd5067, %rd4987;
	xor.b64  	%rd5082, %rd5069, %rd4990;
	xor.b64  	%rd5083, %rd5071, %rd4993;
	xor.b64  	%rd5084, %rd5073, %rd4996;
	xor.b64  	%rd5085, %rd5075, %rd4999;
	xor.b64  	%rd5086, %rd5067, %rd5002;
	xor.b64  	%rd5087, %rd5069, %rd5005;
	xor.b64  	%rd5088, %rd5071, %rd5008;
	xor.b64  	%rd5089, %rd5073, %rd5011;
	xor.b64  	%rd5090, %rd5075, %rd5014;
	xor.b64  	%rd5091, %rd5067, %rd5017;
	xor.b64  	%rd5092, %rd5069, %rd5020;
	xor.b64  	%rd5093, %rd5071, %rd5023;
	xor.b64  	%rd5094, %rd5073, %rd5026;
	xor.b64  	%rd5095, %rd5075, %rd5029;
	xor.b64  	%rd5096, %rd5067, %rd5032;
	xor.b64  	%rd5097, %rd5069, %rd5035;
	xor.b64  	%rd5098, %rd5071, %rd5038;
	xor.b64  	%rd5099, %rd5073, %rd5041;
	xor.b64  	%rd5100, %rd5075, %rd5044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3461,%dummy}, %rd5082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3462}, %rd5082;
	}
	shf.r.wrap.b32 	%r3463, %r3462, %r3461, 20;
	shf.r.wrap.b32 	%r3464, %r3461, %r3462, 20;
	mov.b64 	%rd5101, {%r3464, %r3463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3465,%dummy}, %rd5088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3466}, %rd5088;
	}
	shf.r.wrap.b32 	%r3467, %r3466, %r3465, 21;
	shf.r.wrap.b32 	%r3468, %r3465, %r3466, 21;
	mov.b64 	%rd5102, {%r3468, %r3467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3469}, %rd5094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3470,%dummy}, %rd5094;
	}
	shf.l.wrap.b32 	%r3471, %r3470, %r3469, 21;
	shf.l.wrap.b32 	%r3472, %r3469, %r3470, 21;
	mov.b64 	%rd5103, {%r3472, %r3471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd5100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3474,%dummy}, %rd5100;
	}
	shf.l.wrap.b32 	%r3475, %r3474, %r3473, 14;
	shf.l.wrap.b32 	%r3476, %r3473, %r3474, 14;
	mov.b64 	%rd5104, {%r3476, %r3475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3477}, %rd5079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3478,%dummy}, %rd5079;
	}
	shf.l.wrap.b32 	%r3479, %r3478, %r3477, 28;
	shf.l.wrap.b32 	%r3480, %r3477, %r3478, 28;
	mov.b64 	%rd5105, {%r3480, %r3479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3481}, %rd5085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3482,%dummy}, %rd5085;
	}
	shf.l.wrap.b32 	%r3483, %r3482, %r3481, 20;
	shf.l.wrap.b32 	%r3484, %r3481, %r3482, 20;
	mov.b64 	%rd5106, {%r3484, %r3483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3485}, %rd5086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3486,%dummy}, %rd5086;
	}
	shf.l.wrap.b32 	%r3487, %r3486, %r3485, 3;
	shf.l.wrap.b32 	%r3488, %r3485, %r3486, 3;
	mov.b64 	%rd5107, {%r3488, %r3487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3489,%dummy}, %rd5092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3490}, %rd5092;
	}
	shf.r.wrap.b32 	%r3491, %r3490, %r3489, 19;
	shf.r.wrap.b32 	%r3492, %r3489, %r3490, 19;
	mov.b64 	%rd5108, {%r3492, %r3491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3493,%dummy}, %rd5098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3494}, %rd5098;
	}
	shf.r.wrap.b32 	%r3495, %r3494, %r3493, 3;
	shf.r.wrap.b32 	%r3496, %r3493, %r3494, 3;
	mov.b64 	%rd5109, {%r3496, %r3495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd5077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3498,%dummy}, %rd5077;
	}
	shf.l.wrap.b32 	%r3499, %r3498, %r3497, 1;
	shf.l.wrap.b32 	%r3500, %r3497, %r3498, 1;
	mov.b64 	%rd5110, {%r3500, %r3499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3501}, %rd5083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3502,%dummy}, %rd5083;
	}
	shf.l.wrap.b32 	%r3503, %r3502, %r3501, 6;
	shf.l.wrap.b32 	%r3504, %r3501, %r3502, 6;
	mov.b64 	%rd5111, {%r3504, %r3503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd5089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3506,%dummy}, %rd5089;
	}
	shf.l.wrap.b32 	%r3507, %r3506, %r3505, 25;
	shf.l.wrap.b32 	%r3508, %r3505, %r3506, 25;
	mov.b64 	%rd5112, {%r3508, %r3507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3509}, %rd5095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3510,%dummy}, %rd5095;
	}
	shf.l.wrap.b32 	%r3511, %r3510, %r3509, 8;
	shf.l.wrap.b32 	%r3512, %r3509, %r3510, 8;
	mov.b64 	%rd5113, {%r3512, %r3511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3514,%dummy}, %rd5096;
	}
	shf.l.wrap.b32 	%r3515, %r3514, %r3513, 18;
	shf.l.wrap.b32 	%r3516, %r3513, %r3514, 18;
	mov.b64 	%rd5114, {%r3516, %r3515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd5080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3518,%dummy}, %rd5080;
	}
	shf.l.wrap.b32 	%r3519, %r3518, %r3517, 27;
	shf.l.wrap.b32 	%r3520, %r3517, %r3518, 27;
	mov.b64 	%rd5115, {%r3520, %r3519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3521,%dummy}, %rd5081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3522}, %rd5081;
	}
	shf.r.wrap.b32 	%r3523, %r3522, %r3521, 28;
	shf.r.wrap.b32 	%r3524, %r3521, %r3522, 28;
	mov.b64 	%rd5116, {%r3524, %r3523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3525}, %rd5087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3526,%dummy}, %rd5087;
	}
	shf.l.wrap.b32 	%r3527, %r3526, %r3525, 10;
	shf.l.wrap.b32 	%r3528, %r3525, %r3526, 10;
	mov.b64 	%rd5117, {%r3528, %r3527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3529}, %rd5093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3530,%dummy}, %rd5093;
	}
	shf.l.wrap.b32 	%r3531, %r3530, %r3529, 15;
	shf.l.wrap.b32 	%r3532, %r3529, %r3530, 15;
	mov.b64 	%rd5118, {%r3532, %r3531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3533,%dummy}, %rd5099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3534}, %rd5099;
	}
	shf.r.wrap.b32 	%r3535, %r3534, %r3533, 8;
	shf.r.wrap.b32 	%r3536, %r3533, %r3534, 8;
	mov.b64 	%rd5119, {%r3536, %r3535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd5078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd5078;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 2;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 2;
	mov.b64 	%rd5120, {%r3540, %r3539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3541,%dummy}, %rd5084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3542}, %rd5084;
	}
	shf.r.wrap.b32 	%r3543, %r3542, %r3541, 9;
	shf.r.wrap.b32 	%r3544, %r3541, %r3542, 9;
	mov.b64 	%rd5121, {%r3544, %r3543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3545,%dummy}, %rd5090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3546}, %rd5090;
	}
	shf.r.wrap.b32 	%r3547, %r3546, %r3545, 25;
	shf.r.wrap.b32 	%r3548, %r3545, %r3546, 25;
	mov.b64 	%rd5122, {%r3548, %r3547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3549,%dummy}, %rd5091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3550}, %rd5091;
	}
	shf.r.wrap.b32 	%r3551, %r3550, %r3549, 23;
	shf.r.wrap.b32 	%r3552, %r3549, %r3550, 23;
	mov.b64 	%rd5123, {%r3552, %r3551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd5097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3554,%dummy}, %rd5097;
	}
	shf.l.wrap.b32 	%r3555, %r3554, %r3553, 2;
	shf.l.wrap.b32 	%r3556, %r3553, %r3554, 2;
	mov.b64 	%rd5124, {%r3556, %r3555};
	not.b64 	%rd5125, %rd5101;
	and.b64  	%rd5126, %rd5102, %rd5125;
	xor.b64  	%rd5127, %rd5126, %rd5076;
	not.b64 	%rd5128, %rd5102;
	and.b64  	%rd5129, %rd5103, %rd5128;
	xor.b64  	%rd5130, %rd5129, %rd5101;
	not.b64 	%rd5131, %rd5103;
	and.b64  	%rd5132, %rd5104, %rd5131;
	xor.b64  	%rd5133, %rd5132, %rd5102;
	not.b64 	%rd5134, %rd5104;
	and.b64  	%rd5135, %rd5076, %rd5134;
	xor.b64  	%rd5136, %rd5135, %rd5103;
	not.b64 	%rd5137, %rd5076;
	and.b64  	%rd5138, %rd5101, %rd5137;
	xor.b64  	%rd5139, %rd5138, %rd5104;
	not.b64 	%rd5140, %rd5106;
	and.b64  	%rd5141, %rd5107, %rd5140;
	xor.b64  	%rd5142, %rd5141, %rd5105;
	not.b64 	%rd5143, %rd5107;
	and.b64  	%rd5144, %rd5108, %rd5143;
	xor.b64  	%rd5145, %rd5144, %rd5106;
	not.b64 	%rd5146, %rd5108;
	and.b64  	%rd5147, %rd5109, %rd5146;
	xor.b64  	%rd5148, %rd5147, %rd5107;
	not.b64 	%rd5149, %rd5109;
	and.b64  	%rd5150, %rd5105, %rd5149;
	xor.b64  	%rd5151, %rd5150, %rd5108;
	not.b64 	%rd5152, %rd5105;
	and.b64  	%rd5153, %rd5106, %rd5152;
	xor.b64  	%rd5154, %rd5153, %rd5109;
	not.b64 	%rd5155, %rd5111;
	and.b64  	%rd5156, %rd5112, %rd5155;
	xor.b64  	%rd5157, %rd5156, %rd5110;
	not.b64 	%rd5158, %rd5112;
	and.b64  	%rd5159, %rd5113, %rd5158;
	xor.b64  	%rd5160, %rd5159, %rd5111;
	not.b64 	%rd5161, %rd5113;
	and.b64  	%rd5162, %rd5114, %rd5161;
	xor.b64  	%rd5163, %rd5162, %rd5112;
	not.b64 	%rd5164, %rd5114;
	and.b64  	%rd5165, %rd5110, %rd5164;
	xor.b64  	%rd5166, %rd5165, %rd5113;
	not.b64 	%rd5167, %rd5110;
	and.b64  	%rd5168, %rd5111, %rd5167;
	xor.b64  	%rd5169, %rd5168, %rd5114;
	not.b64 	%rd5170, %rd5116;
	and.b64  	%rd5171, %rd5117, %rd5170;
	xor.b64  	%rd5172, %rd5171, %rd5115;
	not.b64 	%rd5173, %rd5117;
	and.b64  	%rd5174, %rd5118, %rd5173;
	xor.b64  	%rd5175, %rd5174, %rd5116;
	not.b64 	%rd5176, %rd5118;
	and.b64  	%rd5177, %rd5119, %rd5176;
	xor.b64  	%rd5178, %rd5177, %rd5117;
	not.b64 	%rd5179, %rd5119;
	and.b64  	%rd5180, %rd5115, %rd5179;
	xor.b64  	%rd5181, %rd5180, %rd5118;
	not.b64 	%rd5182, %rd5115;
	and.b64  	%rd5183, %rd5116, %rd5182;
	xor.b64  	%rd5184, %rd5183, %rd5119;
	not.b64 	%rd5185, %rd5121;
	and.b64  	%rd5186, %rd5122, %rd5185;
	xor.b64  	%rd5187, %rd5186, %rd5120;
	not.b64 	%rd5188, %rd5122;
	and.b64  	%rd5189, %rd5123, %rd5188;
	xor.b64  	%rd5190, %rd5189, %rd5121;
	not.b64 	%rd5191, %rd5123;
	and.b64  	%rd5192, %rd5124, %rd5191;
	xor.b64  	%rd5193, %rd5192, %rd5122;
	not.b64 	%rd5194, %rd5124;
	and.b64  	%rd5195, %rd5120, %rd5194;
	xor.b64  	%rd5196, %rd5195, %rd5123;
	not.b64 	%rd5197, %rd5120;
	and.b64  	%rd5198, %rd5121, %rd5197;
	xor.b64  	%rd5199, %rd5198, %rd5124;
	xor.b64  	%rd5200, %rd5127, %rd21;
	xor.b64  	%rd5201, %rd5142, %rd5200;
	xor.b64  	%rd5202, %rd5201, %rd5157;
	xor.b64  	%rd5203, %rd5202, %rd5172;
	xor.b64  	%rd5204, %rd5203, %rd5187;
	xor.b64  	%rd5205, %rd5145, %rd5130;
	xor.b64  	%rd5206, %rd5205, %rd5160;
	xor.b64  	%rd5207, %rd5206, %rd5175;
	xor.b64  	%rd5208, %rd5207, %rd5190;
	xor.b64  	%rd5209, %rd5148, %rd5133;
	xor.b64  	%rd5210, %rd5209, %rd5163;
	xor.b64  	%rd5211, %rd5210, %rd5178;
	xor.b64  	%rd5212, %rd5211, %rd5193;
	xor.b64  	%rd5213, %rd5151, %rd5136;
	xor.b64  	%rd5214, %rd5213, %rd5166;
	xor.b64  	%rd5215, %rd5214, %rd5181;
	xor.b64  	%rd5216, %rd5215, %rd5196;
	xor.b64  	%rd5217, %rd5154, %rd5139;
	xor.b64  	%rd5218, %rd5217, %rd5169;
	xor.b64  	%rd5219, %rd5218, %rd5184;
	xor.b64  	%rd5220, %rd5219, %rd5199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3557}, %rd5208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3558,%dummy}, %rd5208;
	}
	shf.l.wrap.b32 	%r3559, %r3558, %r3557, 1;
	shf.l.wrap.b32 	%r3560, %r3557, %r3558, 1;
	mov.b64 	%rd5221, {%r3560, %r3559};
	xor.b64  	%rd5222, %rd5220, %rd5221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd5212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3562,%dummy}, %rd5212;
	}
	shf.l.wrap.b32 	%r3563, %r3562, %r3561, 1;
	shf.l.wrap.b32 	%r3564, %r3561, %r3562, 1;
	mov.b64 	%rd5223, {%r3564, %r3563};
	xor.b64  	%rd5224, %rd5223, %rd5204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3565}, %rd5216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3566,%dummy}, %rd5216;
	}
	shf.l.wrap.b32 	%r3567, %r3566, %r3565, 1;
	shf.l.wrap.b32 	%r3568, %r3565, %r3566, 1;
	mov.b64 	%rd5225, {%r3568, %r3567};
	xor.b64  	%rd5226, %rd5225, %rd5208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3570,%dummy}, %rd5220;
	}
	shf.l.wrap.b32 	%r3571, %r3570, %r3569, 1;
	shf.l.wrap.b32 	%r3572, %r3569, %r3570, 1;
	mov.b64 	%rd5227, {%r3572, %r3571};
	xor.b64  	%rd5228, %rd5227, %rd5212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3573}, %rd5204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3574,%dummy}, %rd5204;
	}
	shf.l.wrap.b32 	%r3575, %r3574, %r3573, 1;
	shf.l.wrap.b32 	%r3576, %r3573, %r3574, 1;
	mov.b64 	%rd5229, {%r3576, %r3575};
	xor.b64  	%rd5230, %rd5216, %rd5229;
	xor.b64  	%rd5231, %rd5222, %rd5200;
	xor.b64  	%rd5232, %rd5224, %rd5130;
	xor.b64  	%rd5233, %rd5226, %rd5133;
	xor.b64  	%rd5234, %rd5228, %rd5136;
	xor.b64  	%rd5235, %rd5230, %rd5139;
	xor.b64  	%rd5236, %rd5222, %rd5142;
	xor.b64  	%rd5237, %rd5224, %rd5145;
	xor.b64  	%rd5238, %rd5226, %rd5148;
	xor.b64  	%rd5239, %rd5228, %rd5151;
	xor.b64  	%rd5240, %rd5230, %rd5154;
	xor.b64  	%rd5241, %rd5222, %rd5157;
	xor.b64  	%rd5242, %rd5224, %rd5160;
	xor.b64  	%rd5243, %rd5226, %rd5163;
	xor.b64  	%rd5244, %rd5228, %rd5166;
	xor.b64  	%rd5245, %rd5230, %rd5169;
	xor.b64  	%rd5246, %rd5222, %rd5172;
	xor.b64  	%rd5247, %rd5224, %rd5175;
	xor.b64  	%rd5248, %rd5226, %rd5178;
	xor.b64  	%rd5249, %rd5228, %rd5181;
	xor.b64  	%rd5250, %rd5230, %rd5184;
	xor.b64  	%rd5251, %rd5222, %rd5187;
	xor.b64  	%rd5252, %rd5224, %rd5190;
	xor.b64  	%rd5253, %rd5226, %rd5193;
	xor.b64  	%rd5254, %rd5228, %rd5196;
	xor.b64  	%rd5255, %rd5230, %rd5199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3577,%dummy}, %rd5237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3578}, %rd5237;
	}
	shf.r.wrap.b32 	%r3579, %r3578, %r3577, 20;
	shf.r.wrap.b32 	%r3580, %r3577, %r3578, 20;
	mov.b64 	%rd5256, {%r3580, %r3579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3581,%dummy}, %rd5243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3582}, %rd5243;
	}
	shf.r.wrap.b32 	%r3583, %r3582, %r3581, 21;
	shf.r.wrap.b32 	%r3584, %r3581, %r3582, 21;
	mov.b64 	%rd5257, {%r3584, %r3583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3585}, %rd5249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd5249;
	}
	shf.l.wrap.b32 	%r3587, %r3586, %r3585, 21;
	shf.l.wrap.b32 	%r3588, %r3585, %r3586, 21;
	mov.b64 	%rd5258, {%r3588, %r3587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3589}, %rd5255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3590,%dummy}, %rd5255;
	}
	shf.l.wrap.b32 	%r3591, %r3590, %r3589, 14;
	shf.l.wrap.b32 	%r3592, %r3589, %r3590, 14;
	mov.b64 	%rd5259, {%r3592, %r3591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3593}, %rd5234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd5234;
	}
	shf.l.wrap.b32 	%r3595, %r3594, %r3593, 28;
	shf.l.wrap.b32 	%r3596, %r3593, %r3594, 28;
	mov.b64 	%rd5260, {%r3596, %r3595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3597}, %rd5240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3598,%dummy}, %rd5240;
	}
	shf.l.wrap.b32 	%r3599, %r3598, %r3597, 20;
	shf.l.wrap.b32 	%r3600, %r3597, %r3598, 20;
	mov.b64 	%rd5261, {%r3600, %r3599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3601}, %rd5241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd5241;
	}
	shf.l.wrap.b32 	%r3603, %r3602, %r3601, 3;
	shf.l.wrap.b32 	%r3604, %r3601, %r3602, 3;
	mov.b64 	%rd5262, {%r3604, %r3603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3605,%dummy}, %rd5247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3606}, %rd5247;
	}
	shf.r.wrap.b32 	%r3607, %r3606, %r3605, 19;
	shf.r.wrap.b32 	%r3608, %r3605, %r3606, 19;
	mov.b64 	%rd5263, {%r3608, %r3607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3609,%dummy}, %rd5253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3610}, %rd5253;
	}
	shf.r.wrap.b32 	%r3611, %r3610, %r3609, 3;
	shf.r.wrap.b32 	%r3612, %r3609, %r3610, 3;
	mov.b64 	%rd5264, {%r3612, %r3611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3613}, %rd5232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3614,%dummy}, %rd5232;
	}
	shf.l.wrap.b32 	%r3615, %r3614, %r3613, 1;
	shf.l.wrap.b32 	%r3616, %r3613, %r3614, 1;
	mov.b64 	%rd5265, {%r3616, %r3615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3617}, %rd5238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3618,%dummy}, %rd5238;
	}
	shf.l.wrap.b32 	%r3619, %r3618, %r3617, 6;
	shf.l.wrap.b32 	%r3620, %r3617, %r3618, 6;
	mov.b64 	%rd5266, {%r3620, %r3619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3621}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3622,%dummy}, %rd5244;
	}
	shf.l.wrap.b32 	%r3623, %r3622, %r3621, 25;
	shf.l.wrap.b32 	%r3624, %r3621, %r3622, 25;
	mov.b64 	%rd5267, {%r3624, %r3623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3625}, %rd5250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd5250;
	}
	shf.l.wrap.b32 	%r3627, %r3626, %r3625, 8;
	shf.l.wrap.b32 	%r3628, %r3625, %r3626, 8;
	mov.b64 	%rd5268, {%r3628, %r3627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3629}, %rd5251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3630,%dummy}, %rd5251;
	}
	shf.l.wrap.b32 	%r3631, %r3630, %r3629, 18;
	shf.l.wrap.b32 	%r3632, %r3629, %r3630, 18;
	mov.b64 	%rd5269, {%r3632, %r3631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3633}, %rd5235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd5235;
	}
	shf.l.wrap.b32 	%r3635, %r3634, %r3633, 27;
	shf.l.wrap.b32 	%r3636, %r3633, %r3634, 27;
	mov.b64 	%rd5270, {%r3636, %r3635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3637,%dummy}, %rd5236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3638}, %rd5236;
	}
	shf.r.wrap.b32 	%r3639, %r3638, %r3637, 28;
	shf.r.wrap.b32 	%r3640, %r3637, %r3638, 28;
	mov.b64 	%rd5271, {%r3640, %r3639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3641}, %rd5242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd5242;
	}
	shf.l.wrap.b32 	%r3643, %r3642, %r3641, 10;
	shf.l.wrap.b32 	%r3644, %r3641, %r3642, 10;
	mov.b64 	%rd5272, {%r3644, %r3643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3645}, %rd5248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3646,%dummy}, %rd5248;
	}
	shf.l.wrap.b32 	%r3647, %r3646, %r3645, 15;
	shf.l.wrap.b32 	%r3648, %r3645, %r3646, 15;
	mov.b64 	%rd5273, {%r3648, %r3647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3649,%dummy}, %rd5254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3650}, %rd5254;
	}
	shf.r.wrap.b32 	%r3651, %r3650, %r3649, 8;
	shf.r.wrap.b32 	%r3652, %r3649, %r3650, 8;
	mov.b64 	%rd5274, {%r3652, %r3651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3653,%dummy}, %rd5233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3654}, %rd5233;
	}
	shf.r.wrap.b32 	%r3655, %r3654, %r3653, 2;
	shf.r.wrap.b32 	%r3656, %r3653, %r3654, 2;
	mov.b64 	%rd5275, {%r3656, %r3655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3657,%dummy}, %rd5239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3658}, %rd5239;
	}
	shf.r.wrap.b32 	%r3659, %r3658, %r3657, 9;
	shf.r.wrap.b32 	%r3660, %r3657, %r3658, 9;
	mov.b64 	%rd5276, {%r3660, %r3659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3661,%dummy}, %rd5245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3662}, %rd5245;
	}
	shf.r.wrap.b32 	%r3663, %r3662, %r3661, 25;
	shf.r.wrap.b32 	%r3664, %r3661, %r3662, 25;
	mov.b64 	%rd5277, {%r3664, %r3663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3665,%dummy}, %rd5246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3666}, %rd5246;
	}
	shf.r.wrap.b32 	%r3667, %r3666, %r3665, 23;
	shf.r.wrap.b32 	%r3668, %r3665, %r3666, 23;
	mov.b64 	%rd5278, {%r3668, %r3667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3669}, %rd5252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3670,%dummy}, %rd5252;
	}
	shf.l.wrap.b32 	%r3671, %r3670, %r3669, 2;
	shf.l.wrap.b32 	%r3672, %r3669, %r3670, 2;
	mov.b64 	%rd5279, {%r3672, %r3671};
	not.b64 	%rd5280, %rd5256;
	and.b64  	%rd5281, %rd5257, %rd5280;
	xor.b64  	%rd5282, %rd5281, %rd5231;
	not.b64 	%rd5283, %rd5257;
	and.b64  	%rd5284, %rd5258, %rd5283;
	xor.b64  	%rd5285, %rd5284, %rd5256;
	not.b64 	%rd5286, %rd5258;
	and.b64  	%rd5287, %rd5259, %rd5286;
	xor.b64  	%rd5288, %rd5287, %rd5257;
	not.b64 	%rd5289, %rd5259;
	and.b64  	%rd5290, %rd5231, %rd5289;
	xor.b64  	%rd5291, %rd5290, %rd5258;
	not.b64 	%rd5292, %rd5231;
	and.b64  	%rd5293, %rd5256, %rd5292;
	xor.b64  	%rd5294, %rd5293, %rd5259;
	not.b64 	%rd5295, %rd5261;
	and.b64  	%rd5296, %rd5262, %rd5295;
	xor.b64  	%rd5297, %rd5296, %rd5260;
	not.b64 	%rd5298, %rd5262;
	and.b64  	%rd5299, %rd5263, %rd5298;
	xor.b64  	%rd5300, %rd5299, %rd5261;
	not.b64 	%rd5301, %rd5263;
	and.b64  	%rd5302, %rd5264, %rd5301;
	xor.b64  	%rd5303, %rd5302, %rd5262;
	not.b64 	%rd5304, %rd5264;
	and.b64  	%rd5305, %rd5260, %rd5304;
	xor.b64  	%rd5306, %rd5305, %rd5263;
	not.b64 	%rd5307, %rd5260;
	and.b64  	%rd5308, %rd5261, %rd5307;
	xor.b64  	%rd5309, %rd5308, %rd5264;
	not.b64 	%rd5310, %rd5266;
	and.b64  	%rd5311, %rd5267, %rd5310;
	xor.b64  	%rd5312, %rd5311, %rd5265;
	not.b64 	%rd5313, %rd5267;
	and.b64  	%rd5314, %rd5268, %rd5313;
	xor.b64  	%rd5315, %rd5314, %rd5266;
	not.b64 	%rd5316, %rd5268;
	and.b64  	%rd5317, %rd5269, %rd5316;
	xor.b64  	%rd5318, %rd5317, %rd5267;
	not.b64 	%rd5319, %rd5269;
	and.b64  	%rd5320, %rd5265, %rd5319;
	xor.b64  	%rd5321, %rd5320, %rd5268;
	not.b64 	%rd5322, %rd5265;
	and.b64  	%rd5323, %rd5266, %rd5322;
	xor.b64  	%rd5324, %rd5323, %rd5269;
	not.b64 	%rd5325, %rd5271;
	and.b64  	%rd5326, %rd5272, %rd5325;
	xor.b64  	%rd5327, %rd5326, %rd5270;
	not.b64 	%rd5328, %rd5272;
	and.b64  	%rd5329, %rd5273, %rd5328;
	xor.b64  	%rd5330, %rd5329, %rd5271;
	not.b64 	%rd5331, %rd5273;
	and.b64  	%rd5332, %rd5274, %rd5331;
	xor.b64  	%rd5333, %rd5332, %rd5272;
	not.b64 	%rd5334, %rd5274;
	and.b64  	%rd5335, %rd5270, %rd5334;
	xor.b64  	%rd5336, %rd5335, %rd5273;
	not.b64 	%rd5337, %rd5270;
	and.b64  	%rd5338, %rd5271, %rd5337;
	xor.b64  	%rd5339, %rd5338, %rd5274;
	not.b64 	%rd5340, %rd5276;
	and.b64  	%rd5341, %rd5277, %rd5340;
	xor.b64  	%rd5342, %rd5341, %rd5275;
	not.b64 	%rd5343, %rd5277;
	and.b64  	%rd5344, %rd5278, %rd5343;
	xor.b64  	%rd5345, %rd5344, %rd5276;
	not.b64 	%rd5346, %rd5278;
	and.b64  	%rd5347, %rd5279, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd5277;
	not.b64 	%rd5349, %rd5279;
	and.b64  	%rd5350, %rd5275, %rd5349;
	xor.b64  	%rd5351, %rd5350, %rd5278;
	not.b64 	%rd5352, %rd5275;
	and.b64  	%rd5353, %rd5276, %rd5352;
	xor.b64  	%rd5354, %rd5353, %rd5279;
	xor.b64  	%rd5355, %rd5282, %rd22;
	xor.b64  	%rd5356, %rd5297, %rd5355;
	xor.b64  	%rd5357, %rd5356, %rd5312;
	xor.b64  	%rd5358, %rd5357, %rd5327;
	xor.b64  	%rd5359, %rd5358, %rd5342;
	xor.b64  	%rd5360, %rd5300, %rd5285;
	xor.b64  	%rd5361, %rd5360, %rd5315;
	xor.b64  	%rd5362, %rd5361, %rd5330;
	xor.b64  	%rd5363, %rd5362, %rd5345;
	xor.b64  	%rd5364, %rd5303, %rd5288;
	xor.b64  	%rd5365, %rd5364, %rd5318;
	xor.b64  	%rd5366, %rd5365, %rd5333;
	xor.b64  	%rd5367, %rd5366, %rd5348;
	xor.b64  	%rd5368, %rd5306, %rd5291;
	xor.b64  	%rd5369, %rd5368, %rd5321;
	xor.b64  	%rd5370, %rd5369, %rd5336;
	xor.b64  	%rd5371, %rd5370, %rd5351;
	xor.b64  	%rd5372, %rd5309, %rd5294;
	xor.b64  	%rd5373, %rd5372, %rd5324;
	xor.b64  	%rd5374, %rd5373, %rd5339;
	xor.b64  	%rd5375, %rd5374, %rd5354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd5363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3674,%dummy}, %rd5363;
	}
	shf.l.wrap.b32 	%r3675, %r3674, %r3673, 1;
	shf.l.wrap.b32 	%r3676, %r3673, %r3674, 1;
	mov.b64 	%rd5376, {%r3676, %r3675};
	xor.b64  	%rd5377, %rd5375, %rd5376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3677}, %rd5367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3678,%dummy}, %rd5367;
	}
	shf.l.wrap.b32 	%r3679, %r3678, %r3677, 1;
	shf.l.wrap.b32 	%r3680, %r3677, %r3678, 1;
	mov.b64 	%rd5378, {%r3680, %r3679};
	xor.b64  	%rd5379, %rd5378, %rd5359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3681}, %rd5371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd5371;
	}
	shf.l.wrap.b32 	%r3683, %r3682, %r3681, 1;
	shf.l.wrap.b32 	%r3684, %r3681, %r3682, 1;
	mov.b64 	%rd5380, {%r3684, %r3683};
	xor.b64  	%rd5381, %rd5380, %rd5363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3685}, %rd5375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3686,%dummy}, %rd5375;
	}
	shf.l.wrap.b32 	%r3687, %r3686, %r3685, 1;
	shf.l.wrap.b32 	%r3688, %r3685, %r3686, 1;
	mov.b64 	%rd5382, {%r3688, %r3687};
	xor.b64  	%rd5383, %rd5382, %rd5367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3689}, %rd5359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd5359;
	}
	shf.l.wrap.b32 	%r3691, %r3690, %r3689, 1;
	shf.l.wrap.b32 	%r3692, %r3689, %r3690, 1;
	mov.b64 	%rd5384, {%r3692, %r3691};
	xor.b64  	%rd5385, %rd5371, %rd5384;
	xor.b64  	%rd5386, %rd5377, %rd5355;
	xor.b64  	%rd5387, %rd5379, %rd5285;
	xor.b64  	%rd5388, %rd5381, %rd5288;
	xor.b64  	%rd5389, %rd5383, %rd5291;
	xor.b64  	%rd5390, %rd5385, %rd5294;
	xor.b64  	%rd5391, %rd5377, %rd5297;
	xor.b64  	%rd5392, %rd5379, %rd5300;
	xor.b64  	%rd5393, %rd5381, %rd5303;
	xor.b64  	%rd5394, %rd5383, %rd5306;
	xor.b64  	%rd5395, %rd5385, %rd5309;
	xor.b64  	%rd5396, %rd5377, %rd5312;
	xor.b64  	%rd5397, %rd5379, %rd5315;
	xor.b64  	%rd5398, %rd5381, %rd5318;
	xor.b64  	%rd5399, %rd5383, %rd5321;
	xor.b64  	%rd5400, %rd5385, %rd5324;
	xor.b64  	%rd5401, %rd5377, %rd5327;
	xor.b64  	%rd5402, %rd5379, %rd5330;
	xor.b64  	%rd5403, %rd5381, %rd5333;
	xor.b64  	%rd5404, %rd5383, %rd5336;
	xor.b64  	%rd5405, %rd5385, %rd5339;
	xor.b64  	%rd5406, %rd5377, %rd5342;
	xor.b64  	%rd5407, %rd5379, %rd5345;
	xor.b64  	%rd5408, %rd5381, %rd5348;
	xor.b64  	%rd5409, %rd5383, %rd5351;
	xor.b64  	%rd5410, %rd5385, %rd5354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3693,%dummy}, %rd5392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3694}, %rd5392;
	}
	shf.r.wrap.b32 	%r3695, %r3694, %r3693, 20;
	shf.r.wrap.b32 	%r3696, %r3693, %r3694, 20;
	mov.b64 	%rd5411, {%r3696, %r3695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3697,%dummy}, %rd5398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3698}, %rd5398;
	}
	shf.r.wrap.b32 	%r3699, %r3698, %r3697, 21;
	shf.r.wrap.b32 	%r3700, %r3697, %r3698, 21;
	mov.b64 	%rd5412, {%r3700, %r3699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3701}, %rd5404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3702,%dummy}, %rd5404;
	}
	shf.l.wrap.b32 	%r3703, %r3702, %r3701, 21;
	shf.l.wrap.b32 	%r3704, %r3701, %r3702, 21;
	mov.b64 	%rd5413, {%r3704, %r3703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3705}, %rd5410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd5410;
	}
	shf.l.wrap.b32 	%r3707, %r3706, %r3705, 14;
	shf.l.wrap.b32 	%r3708, %r3705, %r3706, 14;
	mov.b64 	%rd5414, {%r3708, %r3707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3709}, %rd5389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3710,%dummy}, %rd5389;
	}
	shf.l.wrap.b32 	%r3711, %r3710, %r3709, 28;
	shf.l.wrap.b32 	%r3712, %r3709, %r3710, 28;
	mov.b64 	%rd5415, {%r3712, %r3711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3713}, %rd5395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3714,%dummy}, %rd5395;
	}
	shf.l.wrap.b32 	%r3715, %r3714, %r3713, 20;
	shf.l.wrap.b32 	%r3716, %r3713, %r3714, 20;
	mov.b64 	%rd5416, {%r3716, %r3715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3717}, %rd5396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3718,%dummy}, %rd5396;
	}
	shf.l.wrap.b32 	%r3719, %r3718, %r3717, 3;
	shf.l.wrap.b32 	%r3720, %r3717, %r3718, 3;
	mov.b64 	%rd5417, {%r3720, %r3719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3721,%dummy}, %rd5402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3722}, %rd5402;
	}
	shf.r.wrap.b32 	%r3723, %r3722, %r3721, 19;
	shf.r.wrap.b32 	%r3724, %r3721, %r3722, 19;
	mov.b64 	%rd5418, {%r3724, %r3723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3725,%dummy}, %rd5408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3726}, %rd5408;
	}
	shf.r.wrap.b32 	%r3727, %r3726, %r3725, 3;
	shf.r.wrap.b32 	%r3728, %r3725, %r3726, 3;
	mov.b64 	%rd5419, {%r3728, %r3727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3729}, %rd5387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd5387;
	}
	shf.l.wrap.b32 	%r3731, %r3730, %r3729, 1;
	shf.l.wrap.b32 	%r3732, %r3729, %r3730, 1;
	mov.b64 	%rd5420, {%r3732, %r3731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3733}, %rd5393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3734,%dummy}, %rd5393;
	}
	shf.l.wrap.b32 	%r3735, %r3734, %r3733, 6;
	shf.l.wrap.b32 	%r3736, %r3733, %r3734, 6;
	mov.b64 	%rd5421, {%r3736, %r3735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3737}, %rd5399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3738,%dummy}, %rd5399;
	}
	shf.l.wrap.b32 	%r3739, %r3738, %r3737, 25;
	shf.l.wrap.b32 	%r3740, %r3737, %r3738, 25;
	mov.b64 	%rd5422, {%r3740, %r3739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3741}, %rd5405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3742,%dummy}, %rd5405;
	}
	shf.l.wrap.b32 	%r3743, %r3742, %r3741, 8;
	shf.l.wrap.b32 	%r3744, %r3741, %r3742, 8;
	mov.b64 	%rd5423, {%r3744, %r3743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3745}, %rd5406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3746,%dummy}, %rd5406;
	}
	shf.l.wrap.b32 	%r3747, %r3746, %r3745, 18;
	shf.l.wrap.b32 	%r3748, %r3745, %r3746, 18;
	mov.b64 	%rd5424, {%r3748, %r3747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3749}, %rd5390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3750,%dummy}, %rd5390;
	}
	shf.l.wrap.b32 	%r3751, %r3750, %r3749, 27;
	shf.l.wrap.b32 	%r3752, %r3749, %r3750, 27;
	mov.b64 	%rd5425, {%r3752, %r3751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3753,%dummy}, %rd5391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3754}, %rd5391;
	}
	shf.r.wrap.b32 	%r3755, %r3754, %r3753, 28;
	shf.r.wrap.b32 	%r3756, %r3753, %r3754, 28;
	mov.b64 	%rd5426, {%r3756, %r3755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3757}, %rd5397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3758,%dummy}, %rd5397;
	}
	shf.l.wrap.b32 	%r3759, %r3758, %r3757, 10;
	shf.l.wrap.b32 	%r3760, %r3757, %r3758, 10;
	mov.b64 	%rd5427, {%r3760, %r3759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3761}, %rd5403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3762,%dummy}, %rd5403;
	}
	shf.l.wrap.b32 	%r3763, %r3762, %r3761, 15;
	shf.l.wrap.b32 	%r3764, %r3761, %r3762, 15;
	mov.b64 	%rd5428, {%r3764, %r3763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3765,%dummy}, %rd5409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3766}, %rd5409;
	}
	shf.r.wrap.b32 	%r3767, %r3766, %r3765, 8;
	shf.r.wrap.b32 	%r3768, %r3765, %r3766, 8;
	mov.b64 	%rd5429, {%r3768, %r3767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3769,%dummy}, %rd5388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3770}, %rd5388;
	}
	shf.r.wrap.b32 	%r3771, %r3770, %r3769, 2;
	shf.r.wrap.b32 	%r3772, %r3769, %r3770, 2;
	mov.b64 	%rd5430, {%r3772, %r3771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3773,%dummy}, %rd5394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3774}, %rd5394;
	}
	shf.r.wrap.b32 	%r3775, %r3774, %r3773, 9;
	shf.r.wrap.b32 	%r3776, %r3773, %r3774, 9;
	mov.b64 	%rd5431, {%r3776, %r3775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3777,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3778}, %rd5400;
	}
	shf.r.wrap.b32 	%r3779, %r3778, %r3777, 25;
	shf.r.wrap.b32 	%r3780, %r3777, %r3778, 25;
	mov.b64 	%rd5432, {%r3780, %r3779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3781,%dummy}, %rd5401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3782}, %rd5401;
	}
	shf.r.wrap.b32 	%r3783, %r3782, %r3781, 23;
	shf.r.wrap.b32 	%r3784, %r3781, %r3782, 23;
	mov.b64 	%rd5433, {%r3784, %r3783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3785}, %rd5407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd5407;
	}
	shf.l.wrap.b32 	%r3787, %r3786, %r3785, 2;
	shf.l.wrap.b32 	%r3788, %r3785, %r3786, 2;
	mov.b64 	%rd5434, {%r3788, %r3787};
	not.b64 	%rd5435, %rd5411;
	and.b64  	%rd5436, %rd5412, %rd5435;
	xor.b64  	%rd5437, %rd5436, %rd5386;
	not.b64 	%rd5438, %rd5412;
	and.b64  	%rd5439, %rd5413, %rd5438;
	xor.b64  	%rd5440, %rd5439, %rd5411;
	not.b64 	%rd5441, %rd5413;
	and.b64  	%rd5442, %rd5414, %rd5441;
	xor.b64  	%rd5443, %rd5442, %rd5412;
	not.b64 	%rd5444, %rd5414;
	and.b64  	%rd5445, %rd5386, %rd5444;
	xor.b64  	%rd5446, %rd5445, %rd5413;
	not.b64 	%rd5447, %rd5386;
	and.b64  	%rd5448, %rd5411, %rd5447;
	xor.b64  	%rd5449, %rd5448, %rd5414;
	not.b64 	%rd5450, %rd5416;
	and.b64  	%rd5451, %rd5417, %rd5450;
	xor.b64  	%rd5452, %rd5451, %rd5415;
	not.b64 	%rd5453, %rd5417;
	and.b64  	%rd5454, %rd5418, %rd5453;
	xor.b64  	%rd5455, %rd5454, %rd5416;
	not.b64 	%rd5456, %rd5418;
	and.b64  	%rd5457, %rd5419, %rd5456;
	xor.b64  	%rd5458, %rd5457, %rd5417;
	not.b64 	%rd5459, %rd5419;
	and.b64  	%rd5460, %rd5415, %rd5459;
	xor.b64  	%rd5461, %rd5460, %rd5418;
	not.b64 	%rd5462, %rd5415;
	and.b64  	%rd5463, %rd5416, %rd5462;
	xor.b64  	%rd5464, %rd5463, %rd5419;
	not.b64 	%rd5465, %rd5421;
	and.b64  	%rd5466, %rd5422, %rd5465;
	xor.b64  	%rd5467, %rd5466, %rd5420;
	not.b64 	%rd5468, %rd5422;
	and.b64  	%rd5469, %rd5423, %rd5468;
	xor.b64  	%rd5470, %rd5469, %rd5421;
	not.b64 	%rd5471, %rd5423;
	and.b64  	%rd5472, %rd5424, %rd5471;
	xor.b64  	%rd5473, %rd5472, %rd5422;
	not.b64 	%rd5474, %rd5424;
	and.b64  	%rd5475, %rd5420, %rd5474;
	xor.b64  	%rd5476, %rd5475, %rd5423;
	not.b64 	%rd5477, %rd5420;
	and.b64  	%rd5478, %rd5421, %rd5477;
	xor.b64  	%rd5479, %rd5478, %rd5424;
	not.b64 	%rd5480, %rd5426;
	and.b64  	%rd5481, %rd5427, %rd5480;
	xor.b64  	%rd5482, %rd5481, %rd5425;
	not.b64 	%rd5483, %rd5427;
	and.b64  	%rd5484, %rd5428, %rd5483;
	xor.b64  	%rd5485, %rd5484, %rd5426;
	not.b64 	%rd5486, %rd5428;
	and.b64  	%rd5487, %rd5429, %rd5486;
	xor.b64  	%rd5488, %rd5487, %rd5427;
	not.b64 	%rd5489, %rd5429;
	and.b64  	%rd5490, %rd5425, %rd5489;
	xor.b64  	%rd5491, %rd5490, %rd5428;
	not.b64 	%rd5492, %rd5425;
	and.b64  	%rd5493, %rd5426, %rd5492;
	xor.b64  	%rd5494, %rd5493, %rd5429;
	not.b64 	%rd5495, %rd5431;
	and.b64  	%rd5496, %rd5432, %rd5495;
	xor.b64  	%rd5497, %rd5496, %rd5430;
	not.b64 	%rd5498, %rd5432;
	and.b64  	%rd5499, %rd5433, %rd5498;
	xor.b64  	%rd5500, %rd5499, %rd5431;
	not.b64 	%rd5501, %rd5433;
	and.b64  	%rd5502, %rd5434, %rd5501;
	xor.b64  	%rd5503, %rd5502, %rd5432;
	not.b64 	%rd5504, %rd5434;
	and.b64  	%rd5505, %rd5430, %rd5504;
	xor.b64  	%rd5506, %rd5505, %rd5433;
	not.b64 	%rd5507, %rd5430;
	and.b64  	%rd5508, %rd5431, %rd5507;
	xor.b64  	%rd5509, %rd5508, %rd5434;
	xor.b64  	%rd5510, %rd5437, %rd23;
	xor.b64  	%rd5511, %rd5452, %rd5510;
	xor.b64  	%rd5512, %rd5511, %rd5467;
	xor.b64  	%rd5513, %rd5512, %rd5482;
	xor.b64  	%rd5514, %rd5513, %rd5497;
	xor.b64  	%rd5515, %rd5455, %rd5440;
	xor.b64  	%rd5516, %rd5515, %rd5470;
	xor.b64  	%rd5517, %rd5516, %rd5485;
	xor.b64  	%rd5518, %rd5517, %rd5500;
	xor.b64  	%rd5519, %rd5458, %rd5443;
	xor.b64  	%rd5520, %rd5519, %rd5473;
	xor.b64  	%rd5521, %rd5520, %rd5488;
	xor.b64  	%rd5522, %rd5521, %rd5503;
	xor.b64  	%rd5523, %rd5461, %rd5446;
	xor.b64  	%rd5524, %rd5523, %rd5476;
	xor.b64  	%rd5525, %rd5524, %rd5491;
	xor.b64  	%rd5526, %rd5525, %rd5506;
	xor.b64  	%rd5527, %rd5464, %rd5449;
	xor.b64  	%rd5528, %rd5527, %rd5479;
	xor.b64  	%rd5529, %rd5528, %rd5494;
	xor.b64  	%rd5530, %rd5529, %rd5509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3789}, %rd5518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3790,%dummy}, %rd5518;
	}
	shf.l.wrap.b32 	%r3791, %r3790, %r3789, 1;
	shf.l.wrap.b32 	%r3792, %r3789, %r3790, 1;
	mov.b64 	%rd5531, {%r3792, %r3791};
	xor.b64  	%rd5532, %rd5530, %rd5531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3793}, %rd5522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd5522;
	}
	shf.l.wrap.b32 	%r3795, %r3794, %r3793, 1;
	shf.l.wrap.b32 	%r3796, %r3793, %r3794, 1;
	mov.b64 	%rd5533, {%r3796, %r3795};
	xor.b64  	%rd5534, %rd5533, %rd5514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3797}, %rd5526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3798,%dummy}, %rd5526;
	}
	shf.l.wrap.b32 	%r3799, %r3798, %r3797, 1;
	shf.l.wrap.b32 	%r3800, %r3797, %r3798, 1;
	mov.b64 	%rd5535, {%r3800, %r3799};
	xor.b64  	%rd5536, %rd5535, %rd5518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3801}, %rd5530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd5530;
	}
	shf.l.wrap.b32 	%r3803, %r3802, %r3801, 1;
	shf.l.wrap.b32 	%r3804, %r3801, %r3802, 1;
	mov.b64 	%rd5537, {%r3804, %r3803};
	xor.b64  	%rd5538, %rd5537, %rd5522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3805}, %rd5514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3806,%dummy}, %rd5514;
	}
	shf.l.wrap.b32 	%r3807, %r3806, %r3805, 1;
	shf.l.wrap.b32 	%r3808, %r3805, %r3806, 1;
	mov.b64 	%rd5539, {%r3808, %r3807};
	xor.b64  	%rd5540, %rd5526, %rd5539;
	xor.b64  	%rd5541, %rd5532, %rd5510;
	xor.b64  	%rd5542, %rd5534, %rd5440;
	xor.b64  	%rd5543, %rd5536, %rd5443;
	xor.b64  	%rd5544, %rd5538, %rd5446;
	xor.b64  	%rd5545, %rd5540, %rd5449;
	xor.b64  	%rd5546, %rd5532, %rd5452;
	xor.b64  	%rd5547, %rd5534, %rd5455;
	xor.b64  	%rd5548, %rd5536, %rd5458;
	xor.b64  	%rd5549, %rd5538, %rd5461;
	xor.b64  	%rd5550, %rd5540, %rd5464;
	xor.b64  	%rd5551, %rd5532, %rd5467;
	xor.b64  	%rd5552, %rd5534, %rd5470;
	xor.b64  	%rd5553, %rd5536, %rd5473;
	xor.b64  	%rd5554, %rd5538, %rd5476;
	xor.b64  	%rd5555, %rd5540, %rd5479;
	xor.b64  	%rd5556, %rd5532, %rd5482;
	xor.b64  	%rd5557, %rd5534, %rd5485;
	xor.b64  	%rd5558, %rd5536, %rd5488;
	xor.b64  	%rd5559, %rd5538, %rd5491;
	xor.b64  	%rd5560, %rd5540, %rd5494;
	xor.b64  	%rd5561, %rd5532, %rd5497;
	xor.b64  	%rd5562, %rd5534, %rd5500;
	xor.b64  	%rd5563, %rd5536, %rd5503;
	xor.b64  	%rd5564, %rd5538, %rd5506;
	xor.b64  	%rd5565, %rd5540, %rd5509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3809,%dummy}, %rd5547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3810}, %rd5547;
	}
	shf.r.wrap.b32 	%r3811, %r3810, %r3809, 20;
	shf.r.wrap.b32 	%r3812, %r3809, %r3810, 20;
	mov.b64 	%rd5566, {%r3812, %r3811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd5553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd5553;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 21;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 21;
	mov.b64 	%rd5567, {%r3816, %r3815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3817}, %rd5559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3818,%dummy}, %rd5559;
	}
	shf.l.wrap.b32 	%r3819, %r3818, %r3817, 21;
	shf.l.wrap.b32 	%r3820, %r3817, %r3818, 21;
	mov.b64 	%rd5568, {%r3820, %r3819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd5565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3822,%dummy}, %rd5565;
	}
	shf.l.wrap.b32 	%r3823, %r3822, %r3821, 14;
	shf.l.wrap.b32 	%r3824, %r3821, %r3822, 14;
	mov.b64 	%rd5569, {%r3824, %r3823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3825}, %rd5544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3826,%dummy}, %rd5544;
	}
	shf.l.wrap.b32 	%r3827, %r3826, %r3825, 28;
	shf.l.wrap.b32 	%r3828, %r3825, %r3826, 28;
	mov.b64 	%rd5570, {%r3828, %r3827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3829}, %rd5550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3830,%dummy}, %rd5550;
	}
	shf.l.wrap.b32 	%r3831, %r3830, %r3829, 20;
	shf.l.wrap.b32 	%r3832, %r3829, %r3830, 20;
	mov.b64 	%rd5571, {%r3832, %r3831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3833}, %rd5551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3834,%dummy}, %rd5551;
	}
	shf.l.wrap.b32 	%r3835, %r3834, %r3833, 3;
	shf.l.wrap.b32 	%r3836, %r3833, %r3834, 3;
	mov.b64 	%rd5572, {%r3836, %r3835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3837,%dummy}, %rd5557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3838}, %rd5557;
	}
	shf.r.wrap.b32 	%r3839, %r3838, %r3837, 19;
	shf.r.wrap.b32 	%r3840, %r3837, %r3838, 19;
	mov.b64 	%rd5573, {%r3840, %r3839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3841,%dummy}, %rd5563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3842}, %rd5563;
	}
	shf.r.wrap.b32 	%r3843, %r3842, %r3841, 3;
	shf.r.wrap.b32 	%r3844, %r3841, %r3842, 3;
	mov.b64 	%rd5574, {%r3844, %r3843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3845}, %rd5542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3846,%dummy}, %rd5542;
	}
	shf.l.wrap.b32 	%r3847, %r3846, %r3845, 1;
	shf.l.wrap.b32 	%r3848, %r3845, %r3846, 1;
	mov.b64 	%rd5575, {%r3848, %r3847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3849}, %rd5548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3850,%dummy}, %rd5548;
	}
	shf.l.wrap.b32 	%r3851, %r3850, %r3849, 6;
	shf.l.wrap.b32 	%r3852, %r3849, %r3850, 6;
	mov.b64 	%rd5576, {%r3852, %r3851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3853}, %rd5554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3854,%dummy}, %rd5554;
	}
	shf.l.wrap.b32 	%r3855, %r3854, %r3853, 25;
	shf.l.wrap.b32 	%r3856, %r3853, %r3854, 25;
	mov.b64 	%rd5577, {%r3856, %r3855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3857}, %rd5560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3858,%dummy}, %rd5560;
	}
	shf.l.wrap.b32 	%r3859, %r3858, %r3857, 8;
	shf.l.wrap.b32 	%r3860, %r3857, %r3858, 8;
	mov.b64 	%rd5578, {%r3860, %r3859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3861}, %rd5561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3862,%dummy}, %rd5561;
	}
	shf.l.wrap.b32 	%r3863, %r3862, %r3861, 18;
	shf.l.wrap.b32 	%r3864, %r3861, %r3862, 18;
	mov.b64 	%rd5579, {%r3864, %r3863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd5545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3866,%dummy}, %rd5545;
	}
	shf.l.wrap.b32 	%r3867, %r3866, %r3865, 27;
	shf.l.wrap.b32 	%r3868, %r3865, %r3866, 27;
	mov.b64 	%rd5580, {%r3868, %r3867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3869,%dummy}, %rd5546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3870}, %rd5546;
	}
	shf.r.wrap.b32 	%r3871, %r3870, %r3869, 28;
	shf.r.wrap.b32 	%r3872, %r3869, %r3870, 28;
	mov.b64 	%rd5581, {%r3872, %r3871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3873}, %rd5552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3874,%dummy}, %rd5552;
	}
	shf.l.wrap.b32 	%r3875, %r3874, %r3873, 10;
	shf.l.wrap.b32 	%r3876, %r3873, %r3874, 10;
	mov.b64 	%rd5582, {%r3876, %r3875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3877}, %rd5558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3878,%dummy}, %rd5558;
	}
	shf.l.wrap.b32 	%r3879, %r3878, %r3877, 15;
	shf.l.wrap.b32 	%r3880, %r3877, %r3878, 15;
	mov.b64 	%rd5583, {%r3880, %r3879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3881,%dummy}, %rd5564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3882}, %rd5564;
	}
	shf.r.wrap.b32 	%r3883, %r3882, %r3881, 8;
	shf.r.wrap.b32 	%r3884, %r3881, %r3882, 8;
	mov.b64 	%rd5584, {%r3884, %r3883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3885,%dummy}, %rd5543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3886}, %rd5543;
	}
	shf.r.wrap.b32 	%r3887, %r3886, %r3885, 2;
	shf.r.wrap.b32 	%r3888, %r3885, %r3886, 2;
	mov.b64 	%rd5585, {%r3888, %r3887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3889,%dummy}, %rd5549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3890}, %rd5549;
	}
	shf.r.wrap.b32 	%r3891, %r3890, %r3889, 9;
	shf.r.wrap.b32 	%r3892, %r3889, %r3890, 9;
	mov.b64 	%rd5586, {%r3892, %r3891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3893,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3894}, %rd5555;
	}
	shf.r.wrap.b32 	%r3895, %r3894, %r3893, 25;
	shf.r.wrap.b32 	%r3896, %r3893, %r3894, 25;
	mov.b64 	%rd5587, {%r3896, %r3895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3897,%dummy}, %rd5556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3898}, %rd5556;
	}
	shf.r.wrap.b32 	%r3899, %r3898, %r3897, 23;
	shf.r.wrap.b32 	%r3900, %r3897, %r3898, 23;
	mov.b64 	%rd5588, {%r3900, %r3899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3901}, %rd5562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3902,%dummy}, %rd5562;
	}
	shf.l.wrap.b32 	%r3903, %r3902, %r3901, 2;
	shf.l.wrap.b32 	%r3904, %r3901, %r3902, 2;
	mov.b64 	%rd5589, {%r3904, %r3903};
	not.b64 	%rd5590, %rd5566;
	and.b64  	%rd5591, %rd5567, %rd5590;
	xor.b64  	%rd5592, %rd5591, %rd5541;
	not.b64 	%rd5593, %rd5567;
	and.b64  	%rd5594, %rd5568, %rd5593;
	xor.b64  	%rd5595, %rd5594, %rd5566;
	not.b64 	%rd5596, %rd5568;
	and.b64  	%rd5597, %rd5569, %rd5596;
	xor.b64  	%rd5598, %rd5597, %rd5567;
	not.b64 	%rd5599, %rd5569;
	and.b64  	%rd5600, %rd5541, %rd5599;
	xor.b64  	%rd5601, %rd5600, %rd5568;
	not.b64 	%rd5602, %rd5541;
	and.b64  	%rd5603, %rd5566, %rd5602;
	xor.b64  	%rd5604, %rd5603, %rd5569;
	not.b64 	%rd5605, %rd5571;
	and.b64  	%rd5606, %rd5572, %rd5605;
	xor.b64  	%rd5607, %rd5606, %rd5570;
	not.b64 	%rd5608, %rd5572;
	and.b64  	%rd5609, %rd5573, %rd5608;
	xor.b64  	%rd5610, %rd5609, %rd5571;
	not.b64 	%rd5611, %rd5573;
	and.b64  	%rd5612, %rd5574, %rd5611;
	xor.b64  	%rd5613, %rd5612, %rd5572;
	not.b64 	%rd5614, %rd5574;
	and.b64  	%rd5615, %rd5570, %rd5614;
	xor.b64  	%rd5616, %rd5615, %rd5573;
	not.b64 	%rd5617, %rd5570;
	and.b64  	%rd5618, %rd5571, %rd5617;
	xor.b64  	%rd5619, %rd5618, %rd5574;
	not.b64 	%rd5620, %rd5576;
	and.b64  	%rd5621, %rd5577, %rd5620;
	xor.b64  	%rd5622, %rd5621, %rd5575;
	not.b64 	%rd5623, %rd5577;
	and.b64  	%rd5624, %rd5578, %rd5623;
	xor.b64  	%rd5625, %rd5624, %rd5576;
	not.b64 	%rd5626, %rd5578;
	and.b64  	%rd5627, %rd5579, %rd5626;
	xor.b64  	%rd5628, %rd5627, %rd5577;
	not.b64 	%rd5629, %rd5579;
	and.b64  	%rd5630, %rd5575, %rd5629;
	xor.b64  	%rd5631, %rd5630, %rd5578;
	not.b64 	%rd5632, %rd5575;
	and.b64  	%rd5633, %rd5576, %rd5632;
	xor.b64  	%rd5634, %rd5633, %rd5579;
	not.b64 	%rd5635, %rd5581;
	and.b64  	%rd5636, %rd5582, %rd5635;
	xor.b64  	%rd5637, %rd5636, %rd5580;
	not.b64 	%rd5638, %rd5582;
	and.b64  	%rd5639, %rd5583, %rd5638;
	xor.b64  	%rd5640, %rd5639, %rd5581;
	not.b64 	%rd5641, %rd5583;
	and.b64  	%rd5642, %rd5584, %rd5641;
	xor.b64  	%rd5643, %rd5642, %rd5582;
	not.b64 	%rd5644, %rd5584;
	and.b64  	%rd5645, %rd5580, %rd5644;
	xor.b64  	%rd5646, %rd5645, %rd5583;
	not.b64 	%rd5647, %rd5580;
	and.b64  	%rd5648, %rd5581, %rd5647;
	xor.b64  	%rd5649, %rd5648, %rd5584;
	not.b64 	%rd5650, %rd5586;
	and.b64  	%rd5651, %rd5587, %rd5650;
	xor.b64  	%rd5652, %rd5651, %rd5585;
	not.b64 	%rd5653, %rd5587;
	and.b64  	%rd5654, %rd5588, %rd5653;
	xor.b64  	%rd5655, %rd5654, %rd5586;
	not.b64 	%rd5656, %rd5588;
	and.b64  	%rd5657, %rd5589, %rd5656;
	xor.b64  	%rd5658, %rd5657, %rd5587;
	not.b64 	%rd5659, %rd5589;
	and.b64  	%rd5660, %rd5585, %rd5659;
	xor.b64  	%rd5661, %rd5660, %rd5588;
	not.b64 	%rd5662, %rd5585;
	and.b64  	%rd5663, %rd5586, %rd5662;
	xor.b64  	%rd5664, %rd5663, %rd5589;
	xor.b64  	%rd5665, %rd5592, %rd24;
	xor.b64  	%rd5666, %rd5607, %rd5665;
	xor.b64  	%rd5667, %rd5666, %rd5622;
	xor.b64  	%rd5668, %rd5667, %rd5637;
	xor.b64  	%rd5669, %rd5668, %rd5652;
	xor.b64  	%rd5670, %rd5610, %rd5595;
	xor.b64  	%rd5671, %rd5670, %rd5625;
	xor.b64  	%rd5672, %rd5671, %rd5640;
	xor.b64  	%rd5673, %rd5672, %rd5655;
	xor.b64  	%rd5674, %rd5613, %rd5598;
	xor.b64  	%rd5675, %rd5674, %rd5628;
	xor.b64  	%rd5676, %rd5675, %rd5643;
	xor.b64  	%rd5677, %rd5676, %rd5658;
	xor.b64  	%rd5678, %rd5616, %rd5601;
	xor.b64  	%rd5679, %rd5678, %rd5631;
	xor.b64  	%rd5680, %rd5679, %rd5646;
	xor.b64  	%rd5681, %rd5680, %rd5661;
	xor.b64  	%rd5682, %rd5619, %rd5604;
	xor.b64  	%rd5683, %rd5682, %rd5634;
	xor.b64  	%rd5684, %rd5683, %rd5649;
	xor.b64  	%rd5685, %rd5684, %rd5664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3905}, %rd5673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3906,%dummy}, %rd5673;
	}
	shf.l.wrap.b32 	%r3907, %r3906, %r3905, 1;
	shf.l.wrap.b32 	%r3908, %r3905, %r3906, 1;
	mov.b64 	%rd5686, {%r3908, %r3907};
	xor.b64  	%rd5687, %rd5685, %rd5686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3909}, %rd5677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3910,%dummy}, %rd5677;
	}
	shf.l.wrap.b32 	%r3911, %r3910, %r3909, 1;
	shf.l.wrap.b32 	%r3912, %r3909, %r3910, 1;
	mov.b64 	%rd5688, {%r3912, %r3911};
	xor.b64  	%rd5689, %rd5688, %rd5669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3913}, %rd5681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3914,%dummy}, %rd5681;
	}
	shf.l.wrap.b32 	%r3915, %r3914, %r3913, 1;
	shf.l.wrap.b32 	%r3916, %r3913, %r3914, 1;
	mov.b64 	%rd5690, {%r3916, %r3915};
	xor.b64  	%rd5691, %rd5690, %rd5673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3917}, %rd5685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3918,%dummy}, %rd5685;
	}
	shf.l.wrap.b32 	%r3919, %r3918, %r3917, 1;
	shf.l.wrap.b32 	%r3920, %r3917, %r3918, 1;
	mov.b64 	%rd5692, {%r3920, %r3919};
	xor.b64  	%rd5693, %rd5692, %rd5677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3921}, %rd5669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3922,%dummy}, %rd5669;
	}
	shf.l.wrap.b32 	%r3923, %r3922, %r3921, 1;
	shf.l.wrap.b32 	%r3924, %r3921, %r3922, 1;
	mov.b64 	%rd5694, {%r3924, %r3923};
	xor.b64  	%rd5695, %rd5681, %rd5694;
	xor.b64  	%rd5696, %rd5687, %rd5665;
	xor.b64  	%rd5697, %rd5689, %rd5595;
	xor.b64  	%rd5698, %rd5691, %rd5598;
	xor.b64  	%rd5699, %rd5693, %rd5601;
	xor.b64  	%rd5700, %rd5695, %rd5604;
	xor.b64  	%rd5701, %rd5687, %rd5607;
	xor.b64  	%rd5702, %rd5689, %rd5610;
	xor.b64  	%rd5703, %rd5691, %rd5613;
	xor.b64  	%rd5704, %rd5693, %rd5616;
	xor.b64  	%rd5705, %rd5695, %rd5619;
	xor.b64  	%rd5706, %rd5687, %rd5622;
	xor.b64  	%rd5707, %rd5689, %rd5625;
	xor.b64  	%rd5708, %rd5691, %rd5628;
	xor.b64  	%rd5709, %rd5693, %rd5631;
	xor.b64  	%rd5710, %rd5695, %rd5634;
	xor.b64  	%rd5711, %rd5687, %rd5637;
	xor.b64  	%rd5712, %rd5689, %rd5640;
	xor.b64  	%rd5713, %rd5691, %rd5643;
	xor.b64  	%rd5714, %rd5693, %rd5646;
	xor.b64  	%rd5715, %rd5695, %rd5649;
	xor.b64  	%rd5716, %rd5687, %rd5652;
	xor.b64  	%rd5717, %rd5689, %rd5655;
	xor.b64  	%rd5718, %rd5691, %rd5658;
	xor.b64  	%rd5719, %rd5693, %rd5661;
	xor.b64  	%rd5720, %rd5695, %rd5664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd5702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd5702;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 20;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 20;
	mov.b64 	%rd5721, {%r3928, %r3927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3929,%dummy}, %rd5708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3930}, %rd5708;
	}
	shf.r.wrap.b32 	%r3931, %r3930, %r3929, 21;
	shf.r.wrap.b32 	%r3932, %r3929, %r3930, 21;
	mov.b64 	%rd5722, {%r3932, %r3931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3933}, %rd5714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3934,%dummy}, %rd5714;
	}
	shf.l.wrap.b32 	%r3935, %r3934, %r3933, 21;
	shf.l.wrap.b32 	%r3936, %r3933, %r3934, 21;
	mov.b64 	%rd5723, {%r3936, %r3935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3937}, %rd5720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3938,%dummy}, %rd5720;
	}
	shf.l.wrap.b32 	%r3939, %r3938, %r3937, 14;
	shf.l.wrap.b32 	%r3940, %r3937, %r3938, 14;
	mov.b64 	%rd5724, {%r3940, %r3939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3941}, %rd5699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3942,%dummy}, %rd5699;
	}
	shf.l.wrap.b32 	%r3943, %r3942, %r3941, 28;
	shf.l.wrap.b32 	%r3944, %r3941, %r3942, 28;
	mov.b64 	%rd5725, {%r3944, %r3943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3945}, %rd5705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3946,%dummy}, %rd5705;
	}
	shf.l.wrap.b32 	%r3947, %r3946, %r3945, 20;
	shf.l.wrap.b32 	%r3948, %r3945, %r3946, 20;
	mov.b64 	%rd5726, {%r3948, %r3947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3949}, %rd5706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3950,%dummy}, %rd5706;
	}
	shf.l.wrap.b32 	%r3951, %r3950, %r3949, 3;
	shf.l.wrap.b32 	%r3952, %r3949, %r3950, 3;
	mov.b64 	%rd5727, {%r3952, %r3951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3953,%dummy}, %rd5712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3954}, %rd5712;
	}
	shf.r.wrap.b32 	%r3955, %r3954, %r3953, 19;
	shf.r.wrap.b32 	%r3956, %r3953, %r3954, 19;
	mov.b64 	%rd5728, {%r3956, %r3955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3957,%dummy}, %rd5718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3958}, %rd5718;
	}
	shf.r.wrap.b32 	%r3959, %r3958, %r3957, 3;
	shf.r.wrap.b32 	%r3960, %r3957, %r3958, 3;
	mov.b64 	%rd5729, {%r3960, %r3959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3961}, %rd5697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3962,%dummy}, %rd5697;
	}
	shf.l.wrap.b32 	%r3963, %r3962, %r3961, 1;
	shf.l.wrap.b32 	%r3964, %r3961, %r3962, 1;
	mov.b64 	%rd5730, {%r3964, %r3963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3965}, %rd5703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3966,%dummy}, %rd5703;
	}
	shf.l.wrap.b32 	%r3967, %r3966, %r3965, 6;
	shf.l.wrap.b32 	%r3968, %r3965, %r3966, 6;
	mov.b64 	%rd5731, {%r3968, %r3967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd5709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3970,%dummy}, %rd5709;
	}
	shf.l.wrap.b32 	%r3971, %r3970, %r3969, 25;
	shf.l.wrap.b32 	%r3972, %r3969, %r3970, 25;
	mov.b64 	%rd5732, {%r3972, %r3971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3973}, %rd5715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3974,%dummy}, %rd5715;
	}
	shf.l.wrap.b32 	%r3975, %r3974, %r3973, 8;
	shf.l.wrap.b32 	%r3976, %r3973, %r3974, 8;
	mov.b64 	%rd5733, {%r3976, %r3975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd5716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3978,%dummy}, %rd5716;
	}
	shf.l.wrap.b32 	%r3979, %r3978, %r3977, 18;
	shf.l.wrap.b32 	%r3980, %r3977, %r3978, 18;
	mov.b64 	%rd5734, {%r3980, %r3979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3981}, %rd5700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3982,%dummy}, %rd5700;
	}
	shf.l.wrap.b32 	%r3983, %r3982, %r3981, 27;
	shf.l.wrap.b32 	%r3984, %r3981, %r3982, 27;
	mov.b64 	%rd5735, {%r3984, %r3983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3985,%dummy}, %rd5701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3986}, %rd5701;
	}
	shf.r.wrap.b32 	%r3987, %r3986, %r3985, 28;
	shf.r.wrap.b32 	%r3988, %r3985, %r3986, 28;
	mov.b64 	%rd5736, {%r3988, %r3987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3989}, %rd5707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3990,%dummy}, %rd5707;
	}
	shf.l.wrap.b32 	%r3991, %r3990, %r3989, 10;
	shf.l.wrap.b32 	%r3992, %r3989, %r3990, 10;
	mov.b64 	%rd5737, {%r3992, %r3991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3993}, %rd5713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3994,%dummy}, %rd5713;
	}
	shf.l.wrap.b32 	%r3995, %r3994, %r3993, 15;
	shf.l.wrap.b32 	%r3996, %r3993, %r3994, 15;
	mov.b64 	%rd5738, {%r3996, %r3995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3997,%dummy}, %rd5719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3998}, %rd5719;
	}
	shf.r.wrap.b32 	%r3999, %r3998, %r3997, 8;
	shf.r.wrap.b32 	%r4000, %r3997, %r3998, 8;
	mov.b64 	%rd5739, {%r4000, %r3999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4001,%dummy}, %rd5698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4002}, %rd5698;
	}
	shf.r.wrap.b32 	%r4003, %r4002, %r4001, 2;
	shf.r.wrap.b32 	%r4004, %r4001, %r4002, 2;
	mov.b64 	%rd5740, {%r4004, %r4003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd5704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd5704;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 9;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 9;
	mov.b64 	%rd5741, {%r4008, %r4007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4009,%dummy}, %rd5710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4010}, %rd5710;
	}
	shf.r.wrap.b32 	%r4011, %r4010, %r4009, 25;
	shf.r.wrap.b32 	%r4012, %r4009, %r4010, 25;
	mov.b64 	%rd5742, {%r4012, %r4011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd5711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd5711;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 23;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 23;
	mov.b64 	%rd5743, {%r4016, %r4015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4017}, %rd5717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4018,%dummy}, %rd5717;
	}
	shf.l.wrap.b32 	%r4019, %r4018, %r4017, 2;
	shf.l.wrap.b32 	%r4020, %r4017, %r4018, 2;
	mov.b64 	%rd5744, {%r4020, %r4019};
	not.b64 	%rd5745, %rd5721;
	and.b64  	%rd5746, %rd5722, %rd5745;
	xor.b64  	%rd5747, %rd5746, %rd5696;
	not.b64 	%rd5748, %rd5722;
	and.b64  	%rd5749, %rd5723, %rd5748;
	xor.b64  	%rd5750, %rd5749, %rd5721;
	not.b64 	%rd5751, %rd5723;
	and.b64  	%rd5752, %rd5724, %rd5751;
	xor.b64  	%rd5753, %rd5752, %rd5722;
	not.b64 	%rd5754, %rd5724;
	and.b64  	%rd5755, %rd5696, %rd5754;
	xor.b64  	%rd5756, %rd5755, %rd5723;
	not.b64 	%rd5757, %rd5696;
	and.b64  	%rd5758, %rd5721, %rd5757;
	xor.b64  	%rd5759, %rd5758, %rd5724;
	not.b64 	%rd5760, %rd5726;
	and.b64  	%rd5761, %rd5727, %rd5760;
	xor.b64  	%rd5762, %rd5761, %rd5725;
	not.b64 	%rd5763, %rd5727;
	and.b64  	%rd5764, %rd5728, %rd5763;
	xor.b64  	%rd5765, %rd5764, %rd5726;
	not.b64 	%rd5766, %rd5728;
	and.b64  	%rd5767, %rd5729, %rd5766;
	xor.b64  	%rd5768, %rd5767, %rd5727;
	not.b64 	%rd5769, %rd5729;
	and.b64  	%rd5770, %rd5725, %rd5769;
	xor.b64  	%rd5771, %rd5770, %rd5728;
	not.b64 	%rd5772, %rd5725;
	and.b64  	%rd5773, %rd5726, %rd5772;
	xor.b64  	%rd5774, %rd5773, %rd5729;
	not.b64 	%rd5775, %rd5731;
	and.b64  	%rd5776, %rd5732, %rd5775;
	xor.b64  	%rd5777, %rd5776, %rd5730;
	not.b64 	%rd5778, %rd5732;
	and.b64  	%rd5779, %rd5733, %rd5778;
	xor.b64  	%rd5780, %rd5779, %rd5731;
	not.b64 	%rd5781, %rd5733;
	and.b64  	%rd5782, %rd5734, %rd5781;
	xor.b64  	%rd5783, %rd5782, %rd5732;
	not.b64 	%rd5784, %rd5734;
	and.b64  	%rd5785, %rd5730, %rd5784;
	xor.b64  	%rd5786, %rd5785, %rd5733;
	not.b64 	%rd5787, %rd5730;
	and.b64  	%rd5788, %rd5731, %rd5787;
	xor.b64  	%rd5789, %rd5788, %rd5734;
	not.b64 	%rd5790, %rd5736;
	and.b64  	%rd5791, %rd5737, %rd5790;
	xor.b64  	%rd5792, %rd5791, %rd5735;
	not.b64 	%rd5793, %rd5737;
	and.b64  	%rd5794, %rd5738, %rd5793;
	xor.b64  	%rd5795, %rd5794, %rd5736;
	not.b64 	%rd5796, %rd5738;
	and.b64  	%rd5797, %rd5739, %rd5796;
	xor.b64  	%rd5798, %rd5797, %rd5737;
	not.b64 	%rd5799, %rd5739;
	and.b64  	%rd5800, %rd5735, %rd5799;
	xor.b64  	%rd5801, %rd5800, %rd5738;
	not.b64 	%rd5802, %rd5735;
	and.b64  	%rd5803, %rd5736, %rd5802;
	xor.b64  	%rd5804, %rd5803, %rd5739;
	not.b64 	%rd5805, %rd5741;
	and.b64  	%rd5806, %rd5742, %rd5805;
	xor.b64  	%rd5807, %rd5806, %rd5740;
	not.b64 	%rd5808, %rd5742;
	and.b64  	%rd5809, %rd5743, %rd5808;
	xor.b64  	%rd5810, %rd5809, %rd5741;
	not.b64 	%rd5811, %rd5743;
	and.b64  	%rd5812, %rd5744, %rd5811;
	xor.b64  	%rd5813, %rd5812, %rd5742;
	not.b64 	%rd5814, %rd5744;
	and.b64  	%rd5815, %rd5740, %rd5814;
	xor.b64  	%rd5816, %rd5815, %rd5743;
	not.b64 	%rd5817, %rd5740;
	and.b64  	%rd5818, %rd5741, %rd5817;
	xor.b64  	%rd5819, %rd5818, %rd5744;
	xor.b64  	%rd5820, %rd5747, %rd25;
	xor.b64  	%rd5821, %rd5762, %rd5820;
	xor.b64  	%rd5822, %rd5821, %rd5777;
	xor.b64  	%rd5823, %rd5822, %rd5792;
	xor.b64  	%rd5824, %rd5823, %rd5807;
	xor.b64  	%rd5825, %rd5765, %rd5750;
	xor.b64  	%rd5826, %rd5825, %rd5780;
	xor.b64  	%rd5827, %rd5826, %rd5795;
	xor.b64  	%rd5828, %rd5827, %rd5810;
	xor.b64  	%rd5829, %rd5768, %rd5753;
	xor.b64  	%rd5830, %rd5829, %rd5783;
	xor.b64  	%rd5831, %rd5830, %rd5798;
	xor.b64  	%rd5832, %rd5831, %rd5813;
	xor.b64  	%rd5833, %rd5771, %rd5756;
	xor.b64  	%rd5834, %rd5833, %rd5786;
	xor.b64  	%rd5835, %rd5834, %rd5801;
	xor.b64  	%rd5836, %rd5835, %rd5816;
	xor.b64  	%rd5837, %rd5774, %rd5759;
	xor.b64  	%rd5838, %rd5837, %rd5789;
	xor.b64  	%rd5839, %rd5838, %rd5804;
	xor.b64  	%rd5840, %rd5839, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4021}, %rd5828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4022,%dummy}, %rd5828;
	}
	shf.l.wrap.b32 	%r4023, %r4022, %r4021, 1;
	shf.l.wrap.b32 	%r4024, %r4021, %r4022, 1;
	mov.b64 	%rd5841, {%r4024, %r4023};
	xor.b64  	%rd5842, %rd5840, %rd5841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4025}, %rd5832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4026,%dummy}, %rd5832;
	}
	shf.l.wrap.b32 	%r4027, %r4026, %r4025, 1;
	shf.l.wrap.b32 	%r4028, %r4025, %r4026, 1;
	mov.b64 	%rd5843, {%r4028, %r4027};
	xor.b64  	%rd5844, %rd5843, %rd5824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4029}, %rd5836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4030,%dummy}, %rd5836;
	}
	shf.l.wrap.b32 	%r4031, %r4030, %r4029, 1;
	shf.l.wrap.b32 	%r4032, %r4029, %r4030, 1;
	mov.b64 	%rd5845, {%r4032, %r4031};
	xor.b64  	%rd5846, %rd5845, %rd5828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4033}, %rd5840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4034,%dummy}, %rd5840;
	}
	shf.l.wrap.b32 	%r4035, %r4034, %r4033, 1;
	shf.l.wrap.b32 	%r4036, %r4033, %r4034, 1;
	mov.b64 	%rd5847, {%r4036, %r4035};
	xor.b64  	%rd5848, %rd5847, %rd5832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4037}, %rd5824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4038,%dummy}, %rd5824;
	}
	shf.l.wrap.b32 	%r4039, %r4038, %r4037, 1;
	shf.l.wrap.b32 	%r4040, %r4037, %r4038, 1;
	mov.b64 	%rd5849, {%r4040, %r4039};
	xor.b64  	%rd5850, %rd5836, %rd5849;
	xor.b64  	%rd5851, %rd5842, %rd5820;
	xor.b64  	%rd5852, %rd5844, %rd5750;
	xor.b64  	%rd5853, %rd5846, %rd5753;
	xor.b64  	%rd5854, %rd5848, %rd5756;
	xor.b64  	%rd5855, %rd5850, %rd5759;
	xor.b64  	%rd5856, %rd5842, %rd5762;
	xor.b64  	%rd5857, %rd5844, %rd5765;
	xor.b64  	%rd5858, %rd5846, %rd5768;
	xor.b64  	%rd5859, %rd5848, %rd5771;
	xor.b64  	%rd5860, %rd5850, %rd5774;
	xor.b64  	%rd5861, %rd5842, %rd5777;
	xor.b64  	%rd5862, %rd5844, %rd5780;
	xor.b64  	%rd5863, %rd5846, %rd5783;
	xor.b64  	%rd5864, %rd5848, %rd5786;
	xor.b64  	%rd5865, %rd5850, %rd5789;
	xor.b64  	%rd5866, %rd5842, %rd5792;
	xor.b64  	%rd5867, %rd5844, %rd5795;
	xor.b64  	%rd5868, %rd5846, %rd5798;
	xor.b64  	%rd5869, %rd5848, %rd5801;
	xor.b64  	%rd5870, %rd5850, %rd5804;
	xor.b64  	%rd5871, %rd5842, %rd5807;
	xor.b64  	%rd5872, %rd5844, %rd5810;
	xor.b64  	%rd5873, %rd5846, %rd5813;
	xor.b64  	%rd5874, %rd5848, %rd5816;
	xor.b64  	%rd5875, %rd5850, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4041,%dummy}, %rd5857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4042}, %rd5857;
	}
	shf.r.wrap.b32 	%r4043, %r4042, %r4041, 20;
	shf.r.wrap.b32 	%r4044, %r4041, %r4042, 20;
	mov.b64 	%rd5876, {%r4044, %r4043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4045,%dummy}, %rd5863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4046}, %rd5863;
	}
	shf.r.wrap.b32 	%r4047, %r4046, %r4045, 21;
	shf.r.wrap.b32 	%r4048, %r4045, %r4046, 21;
	mov.b64 	%rd5877, {%r4048, %r4047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4049}, %rd5869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4050,%dummy}, %rd5869;
	}
	shf.l.wrap.b32 	%r4051, %r4050, %r4049, 21;
	shf.l.wrap.b32 	%r4052, %r4049, %r4050, 21;
	mov.b64 	%rd5878, {%r4052, %r4051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4053}, %rd5875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4054,%dummy}, %rd5875;
	}
	shf.l.wrap.b32 	%r4055, %r4054, %r4053, 14;
	shf.l.wrap.b32 	%r4056, %r4053, %r4054, 14;
	mov.b64 	%rd5879, {%r4056, %r4055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4057}, %rd5854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4058,%dummy}, %rd5854;
	}
	shf.l.wrap.b32 	%r4059, %r4058, %r4057, 28;
	shf.l.wrap.b32 	%r4060, %r4057, %r4058, 28;
	mov.b64 	%rd5880, {%r4060, %r4059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4061}, %rd5860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4062,%dummy}, %rd5860;
	}
	shf.l.wrap.b32 	%r4063, %r4062, %r4061, 20;
	shf.l.wrap.b32 	%r4064, %r4061, %r4062, 20;
	mov.b64 	%rd5881, {%r4064, %r4063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4065}, %rd5861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4066,%dummy}, %rd5861;
	}
	shf.l.wrap.b32 	%r4067, %r4066, %r4065, 3;
	shf.l.wrap.b32 	%r4068, %r4065, %r4066, 3;
	mov.b64 	%rd5882, {%r4068, %r4067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4069,%dummy}, %rd5867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4070}, %rd5867;
	}
	shf.r.wrap.b32 	%r4071, %r4070, %r4069, 19;
	shf.r.wrap.b32 	%r4072, %r4069, %r4070, 19;
	mov.b64 	%rd5883, {%r4072, %r4071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd5873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd5873;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 3;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 3;
	mov.b64 	%rd5884, {%r4076, %r4075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4077}, %rd5852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4078,%dummy}, %rd5852;
	}
	shf.l.wrap.b32 	%r4079, %r4078, %r4077, 1;
	shf.l.wrap.b32 	%r4080, %r4077, %r4078, 1;
	mov.b64 	%rd5885, {%r4080, %r4079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4081}, %rd5858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4082,%dummy}, %rd5858;
	}
	shf.l.wrap.b32 	%r4083, %r4082, %r4081, 6;
	shf.l.wrap.b32 	%r4084, %r4081, %r4082, 6;
	mov.b64 	%rd5886, {%r4084, %r4083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4085}, %rd5864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4086,%dummy}, %rd5864;
	}
	shf.l.wrap.b32 	%r4087, %r4086, %r4085, 25;
	shf.l.wrap.b32 	%r4088, %r4085, %r4086, 25;
	mov.b64 	%rd5887, {%r4088, %r4087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4089}, %rd5870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4090,%dummy}, %rd5870;
	}
	shf.l.wrap.b32 	%r4091, %r4090, %r4089, 8;
	shf.l.wrap.b32 	%r4092, %r4089, %r4090, 8;
	mov.b64 	%rd5888, {%r4092, %r4091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4093}, %rd5871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4094,%dummy}, %rd5871;
	}
	shf.l.wrap.b32 	%r4095, %r4094, %r4093, 18;
	shf.l.wrap.b32 	%r4096, %r4093, %r4094, 18;
	mov.b64 	%rd5889, {%r4096, %r4095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4097}, %rd5855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd5855;
	}
	shf.l.wrap.b32 	%r4099, %r4098, %r4097, 27;
	shf.l.wrap.b32 	%r4100, %r4097, %r4098, 27;
	mov.b64 	%rd5890, {%r4100, %r4099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4101,%dummy}, %rd5856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4102}, %rd5856;
	}
	shf.r.wrap.b32 	%r4103, %r4102, %r4101, 28;
	shf.r.wrap.b32 	%r4104, %r4101, %r4102, 28;
	mov.b64 	%rd5891, {%r4104, %r4103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4105}, %rd5862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4106,%dummy}, %rd5862;
	}
	shf.l.wrap.b32 	%r4107, %r4106, %r4105, 10;
	shf.l.wrap.b32 	%r4108, %r4105, %r4106, 10;
	mov.b64 	%rd5892, {%r4108, %r4107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4109}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4110,%dummy}, %rd5868;
	}
	shf.l.wrap.b32 	%r4111, %r4110, %r4109, 15;
	shf.l.wrap.b32 	%r4112, %r4109, %r4110, 15;
	mov.b64 	%rd5893, {%r4112, %r4111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4113,%dummy}, %rd5874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4114}, %rd5874;
	}
	shf.r.wrap.b32 	%r4115, %r4114, %r4113, 8;
	shf.r.wrap.b32 	%r4116, %r4113, %r4114, 8;
	mov.b64 	%rd5894, {%r4116, %r4115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4117,%dummy}, %rd5853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4118}, %rd5853;
	}
	shf.r.wrap.b32 	%r4119, %r4118, %r4117, 2;
	shf.r.wrap.b32 	%r4120, %r4117, %r4118, 2;
	mov.b64 	%rd5895, {%r4120, %r4119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4121,%dummy}, %rd5859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4122}, %rd5859;
	}
	shf.r.wrap.b32 	%r4123, %r4122, %r4121, 9;
	shf.r.wrap.b32 	%r4124, %r4121, %r4122, 9;
	mov.b64 	%rd5896, {%r4124, %r4123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd5865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd5865;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 25;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 25;
	mov.b64 	%rd5897, {%r4128, %r4127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4129,%dummy}, %rd5866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4130}, %rd5866;
	}
	shf.r.wrap.b32 	%r4131, %r4130, %r4129, 23;
	shf.r.wrap.b32 	%r4132, %r4129, %r4130, 23;
	mov.b64 	%rd5898, {%r4132, %r4131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4133}, %rd5872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4134,%dummy}, %rd5872;
	}
	shf.l.wrap.b32 	%r4135, %r4134, %r4133, 2;
	shf.l.wrap.b32 	%r4136, %r4133, %r4134, 2;
	mov.b64 	%rd5899, {%r4136, %r4135};
	not.b64 	%rd5900, %rd5876;
	and.b64  	%rd5901, %rd5877, %rd5900;
	xor.b64  	%rd5902, %rd5901, %rd5851;
	not.b64 	%rd5903, %rd5877;
	and.b64  	%rd5904, %rd5878, %rd5903;
	xor.b64  	%rd5905, %rd5904, %rd5876;
	not.b64 	%rd5906, %rd5878;
	and.b64  	%rd5907, %rd5879, %rd5906;
	xor.b64  	%rd5908, %rd5907, %rd5877;
	not.b64 	%rd5909, %rd5879;
	and.b64  	%rd5910, %rd5851, %rd5909;
	xor.b64  	%rd5911, %rd5910, %rd5878;
	not.b64 	%rd5912, %rd5851;
	and.b64  	%rd5913, %rd5876, %rd5912;
	xor.b64  	%rd5914, %rd5913, %rd5879;
	not.b64 	%rd5915, %rd5881;
	and.b64  	%rd5916, %rd5882, %rd5915;
	xor.b64  	%rd5917, %rd5916, %rd5880;
	not.b64 	%rd5918, %rd5882;
	and.b64  	%rd5919, %rd5883, %rd5918;
	xor.b64  	%rd5920, %rd5919, %rd5881;
	not.b64 	%rd5921, %rd5883;
	and.b64  	%rd5922, %rd5884, %rd5921;
	xor.b64  	%rd5923, %rd5922, %rd5882;
	not.b64 	%rd5924, %rd5884;
	and.b64  	%rd5925, %rd5880, %rd5924;
	xor.b64  	%rd5926, %rd5925, %rd5883;
	not.b64 	%rd5927, %rd5880;
	and.b64  	%rd5928, %rd5881, %rd5927;
	xor.b64  	%rd5929, %rd5928, %rd5884;
	not.b64 	%rd5930, %rd5886;
	and.b64  	%rd5931, %rd5887, %rd5930;
	xor.b64  	%rd5932, %rd5931, %rd5885;
	not.b64 	%rd5933, %rd5887;
	and.b64  	%rd5934, %rd5888, %rd5933;
	xor.b64  	%rd5935, %rd5934, %rd5886;
	not.b64 	%rd5936, %rd5888;
	and.b64  	%rd5937, %rd5889, %rd5936;
	xor.b64  	%rd5938, %rd5937, %rd5887;
	not.b64 	%rd5939, %rd5889;
	and.b64  	%rd5940, %rd5885, %rd5939;
	xor.b64  	%rd5941, %rd5940, %rd5888;
	not.b64 	%rd5942, %rd5885;
	and.b64  	%rd5943, %rd5886, %rd5942;
	xor.b64  	%rd5944, %rd5943, %rd5889;
	not.b64 	%rd5945, %rd5891;
	and.b64  	%rd5946, %rd5892, %rd5945;
	xor.b64  	%rd5947, %rd5946, %rd5890;
	not.b64 	%rd5948, %rd5892;
	and.b64  	%rd5949, %rd5893, %rd5948;
	xor.b64  	%rd5950, %rd5949, %rd5891;
	not.b64 	%rd5951, %rd5893;
	and.b64  	%rd5952, %rd5894, %rd5951;
	xor.b64  	%rd5953, %rd5952, %rd5892;
	not.b64 	%rd5954, %rd5894;
	and.b64  	%rd5955, %rd5890, %rd5954;
	xor.b64  	%rd5956, %rd5955, %rd5893;
	not.b64 	%rd5957, %rd5890;
	and.b64  	%rd5958, %rd5891, %rd5957;
	xor.b64  	%rd5959, %rd5958, %rd5894;
	not.b64 	%rd5960, %rd5896;
	and.b64  	%rd5961, %rd5897, %rd5960;
	xor.b64  	%rd5962, %rd5961, %rd5895;
	not.b64 	%rd5963, %rd5897;
	and.b64  	%rd5964, %rd5898, %rd5963;
	xor.b64  	%rd5965, %rd5964, %rd5896;
	not.b64 	%rd5966, %rd5898;
	and.b64  	%rd5967, %rd5899, %rd5966;
	xor.b64  	%rd5968, %rd5967, %rd5897;
	not.b64 	%rd5969, %rd5899;
	and.b64  	%rd5970, %rd5895, %rd5969;
	xor.b64  	%rd5971, %rd5970, %rd5898;
	not.b64 	%rd5972, %rd5895;
	and.b64  	%rd5973, %rd5896, %rd5972;
	xor.b64  	%rd5974, %rd5973, %rd5899;
	xor.b64  	%rd5975, %rd5902, %rd26;
	xor.b64  	%rd5976, %rd5917, %rd5975;
	xor.b64  	%rd5977, %rd5976, %rd5932;
	xor.b64  	%rd5978, %rd5977, %rd5947;
	xor.b64  	%rd5979, %rd5978, %rd5962;
	xor.b64  	%rd5980, %rd5920, %rd5905;
	xor.b64  	%rd5981, %rd5980, %rd5935;
	xor.b64  	%rd5982, %rd5981, %rd5950;
	xor.b64  	%rd5983, %rd5982, %rd5965;
	xor.b64  	%rd5984, %rd5923, %rd5908;
	xor.b64  	%rd5985, %rd5984, %rd5938;
	xor.b64  	%rd5986, %rd5985, %rd5953;
	xor.b64  	%rd5987, %rd5986, %rd5968;
	xor.b64  	%rd5988, %rd5926, %rd5911;
	xor.b64  	%rd5989, %rd5988, %rd5941;
	xor.b64  	%rd5990, %rd5989, %rd5956;
	xor.b64  	%rd5991, %rd5990, %rd5971;
	xor.b64  	%rd5992, %rd5929, %rd5914;
	xor.b64  	%rd5993, %rd5992, %rd5944;
	xor.b64  	%rd5994, %rd5993, %rd5959;
	xor.b64  	%rd5995, %rd5994, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4137}, %rd5983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4138,%dummy}, %rd5983;
	}
	shf.l.wrap.b32 	%r4139, %r4138, %r4137, 1;
	shf.l.wrap.b32 	%r4140, %r4137, %r4138, 1;
	mov.b64 	%rd5996, {%r4140, %r4139};
	xor.b64  	%rd5997, %rd5995, %rd5996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4141}, %rd5987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4142,%dummy}, %rd5987;
	}
	shf.l.wrap.b32 	%r4143, %r4142, %r4141, 1;
	shf.l.wrap.b32 	%r4144, %r4141, %r4142, 1;
	mov.b64 	%rd5998, {%r4144, %r4143};
	xor.b64  	%rd5999, %rd5998, %rd5979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4145}, %rd5991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4146,%dummy}, %rd5991;
	}
	shf.l.wrap.b32 	%r4147, %r4146, %r4145, 1;
	shf.l.wrap.b32 	%r4148, %r4145, %r4146, 1;
	mov.b64 	%rd6000, {%r4148, %r4147};
	xor.b64  	%rd6001, %rd6000, %rd5983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4149}, %rd5995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4150,%dummy}, %rd5995;
	}
	shf.l.wrap.b32 	%r4151, %r4150, %r4149, 1;
	shf.l.wrap.b32 	%r4152, %r4149, %r4150, 1;
	mov.b64 	%rd6002, {%r4152, %r4151};
	xor.b64  	%rd6003, %rd6002, %rd5987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4153}, %rd5979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4154,%dummy}, %rd5979;
	}
	shf.l.wrap.b32 	%r4155, %r4154, %r4153, 1;
	shf.l.wrap.b32 	%r4156, %r4153, %r4154, 1;
	mov.b64 	%rd6004, {%r4156, %r4155};
	xor.b64  	%rd6005, %rd5991, %rd6004;
	xor.b64  	%rd6006, %rd5997, %rd5975;
	xor.b64  	%rd6007, %rd5999, %rd5905;
	xor.b64  	%rd6008, %rd6001, %rd5908;
	xor.b64  	%rd6009, %rd6003, %rd5911;
	xor.b64  	%rd6010, %rd6005, %rd5914;
	xor.b64  	%rd6011, %rd5997, %rd5917;
	xor.b64  	%rd6012, %rd5999, %rd5920;
	xor.b64  	%rd6013, %rd6001, %rd5923;
	xor.b64  	%rd6014, %rd6003, %rd5926;
	xor.b64  	%rd6015, %rd6005, %rd5929;
	xor.b64  	%rd6016, %rd5997, %rd5932;
	xor.b64  	%rd6017, %rd5999, %rd5935;
	xor.b64  	%rd6018, %rd6001, %rd5938;
	xor.b64  	%rd6019, %rd6003, %rd5941;
	xor.b64  	%rd6020, %rd6005, %rd5944;
	xor.b64  	%rd6021, %rd5997, %rd5947;
	xor.b64  	%rd6022, %rd5999, %rd5950;
	xor.b64  	%rd6023, %rd6001, %rd5953;
	xor.b64  	%rd6024, %rd6003, %rd5956;
	xor.b64  	%rd6025, %rd6005, %rd5959;
	xor.b64  	%rd6026, %rd5997, %rd5962;
	xor.b64  	%rd6027, %rd5999, %rd5965;
	xor.b64  	%rd6028, %rd6001, %rd5968;
	xor.b64  	%rd6029, %rd6003, %rd5971;
	xor.b64  	%rd6030, %rd6005, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4157,%dummy}, %rd6012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4158}, %rd6012;
	}
	shf.r.wrap.b32 	%r4159, %r4158, %r4157, 20;
	shf.r.wrap.b32 	%r4160, %r4157, %r4158, 20;
	mov.b64 	%rd6031, {%r4160, %r4159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4161,%dummy}, %rd6018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4162}, %rd6018;
	}
	shf.r.wrap.b32 	%r4163, %r4162, %r4161, 21;
	shf.r.wrap.b32 	%r4164, %r4161, %r4162, 21;
	mov.b64 	%rd6032, {%r4164, %r4163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4165}, %rd6024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4166,%dummy}, %rd6024;
	}
	shf.l.wrap.b32 	%r4167, %r4166, %r4165, 21;
	shf.l.wrap.b32 	%r4168, %r4165, %r4166, 21;
	mov.b64 	%rd6033, {%r4168, %r4167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4169}, %rd6030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4170,%dummy}, %rd6030;
	}
	shf.l.wrap.b32 	%r4171, %r4170, %r4169, 14;
	shf.l.wrap.b32 	%r4172, %r4169, %r4170, 14;
	mov.b64 	%rd6034, {%r4172, %r4171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4173}, %rd6009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4174,%dummy}, %rd6009;
	}
	shf.l.wrap.b32 	%r4175, %r4174, %r4173, 28;
	shf.l.wrap.b32 	%r4176, %r4173, %r4174, 28;
	mov.b64 	%rd6035, {%r4176, %r4175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4177}, %rd6015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4178,%dummy}, %rd6015;
	}
	shf.l.wrap.b32 	%r4179, %r4178, %r4177, 20;
	shf.l.wrap.b32 	%r4180, %r4177, %r4178, 20;
	mov.b64 	%rd6036, {%r4180, %r4179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4181}, %rd6016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4182,%dummy}, %rd6016;
	}
	shf.l.wrap.b32 	%r4183, %r4182, %r4181, 3;
	shf.l.wrap.b32 	%r4184, %r4181, %r4182, 3;
	mov.b64 	%rd6037, {%r4184, %r4183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4185,%dummy}, %rd6022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4186}, %rd6022;
	}
	shf.r.wrap.b32 	%r4187, %r4186, %r4185, 19;
	shf.r.wrap.b32 	%r4188, %r4185, %r4186, 19;
	mov.b64 	%rd6038, {%r4188, %r4187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4189,%dummy}, %rd6028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4190}, %rd6028;
	}
	shf.r.wrap.b32 	%r4191, %r4190, %r4189, 3;
	shf.r.wrap.b32 	%r4192, %r4189, %r4190, 3;
	mov.b64 	%rd6039, {%r4192, %r4191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4193}, %rd6007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4194,%dummy}, %rd6007;
	}
	shf.l.wrap.b32 	%r4195, %r4194, %r4193, 1;
	shf.l.wrap.b32 	%r4196, %r4193, %r4194, 1;
	mov.b64 	%rd6040, {%r4196, %r4195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4197}, %rd6013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4198,%dummy}, %rd6013;
	}
	shf.l.wrap.b32 	%r4199, %r4198, %r4197, 6;
	shf.l.wrap.b32 	%r4200, %r4197, %r4198, 6;
	mov.b64 	%rd6041, {%r4200, %r4199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4201}, %rd6019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4202,%dummy}, %rd6019;
	}
	shf.l.wrap.b32 	%r4203, %r4202, %r4201, 25;
	shf.l.wrap.b32 	%r4204, %r4201, %r4202, 25;
	mov.b64 	%rd6042, {%r4204, %r4203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4205}, %rd6025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4206,%dummy}, %rd6025;
	}
	shf.l.wrap.b32 	%r4207, %r4206, %r4205, 8;
	shf.l.wrap.b32 	%r4208, %r4205, %r4206, 8;
	mov.b64 	%rd6043, {%r4208, %r4207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4209}, %rd6026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4210,%dummy}, %rd6026;
	}
	shf.l.wrap.b32 	%r4211, %r4210, %r4209, 18;
	shf.l.wrap.b32 	%r4212, %r4209, %r4210, 18;
	mov.b64 	%rd6044, {%r4212, %r4211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4213}, %rd6010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4214,%dummy}, %rd6010;
	}
	shf.l.wrap.b32 	%r4215, %r4214, %r4213, 27;
	shf.l.wrap.b32 	%r4216, %r4213, %r4214, 27;
	mov.b64 	%rd6045, {%r4216, %r4215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4217,%dummy}, %rd6011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4218}, %rd6011;
	}
	shf.r.wrap.b32 	%r4219, %r4218, %r4217, 28;
	shf.r.wrap.b32 	%r4220, %r4217, %r4218, 28;
	mov.b64 	%rd6046, {%r4220, %r4219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4221}, %rd6017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4222,%dummy}, %rd6017;
	}
	shf.l.wrap.b32 	%r4223, %r4222, %r4221, 10;
	shf.l.wrap.b32 	%r4224, %r4221, %r4222, 10;
	mov.b64 	%rd6047, {%r4224, %r4223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4225}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4226,%dummy}, %rd6023;
	}
	shf.l.wrap.b32 	%r4227, %r4226, %r4225, 15;
	shf.l.wrap.b32 	%r4228, %r4225, %r4226, 15;
	mov.b64 	%rd6048, {%r4228, %r4227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd6029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd6029;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 8;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 8;
	mov.b64 	%rd6049, {%r4232, %r4231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4233,%dummy}, %rd6008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4234}, %rd6008;
	}
	shf.r.wrap.b32 	%r4235, %r4234, %r4233, 2;
	shf.r.wrap.b32 	%r4236, %r4233, %r4234, 2;
	mov.b64 	%rd6050, {%r4236, %r4235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4237,%dummy}, %rd6014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4238}, %rd6014;
	}
	shf.r.wrap.b32 	%r4239, %r4238, %r4237, 9;
	shf.r.wrap.b32 	%r4240, %r4237, %r4238, 9;
	mov.b64 	%rd6051, {%r4240, %r4239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4241,%dummy}, %rd6020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4242}, %rd6020;
	}
	shf.r.wrap.b32 	%r4243, %r4242, %r4241, 25;
	shf.r.wrap.b32 	%r4244, %r4241, %r4242, 25;
	mov.b64 	%rd6052, {%r4244, %r4243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4245,%dummy}, %rd6021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4246}, %rd6021;
	}
	shf.r.wrap.b32 	%r4247, %r4246, %r4245, 23;
	shf.r.wrap.b32 	%r4248, %r4245, %r4246, 23;
	mov.b64 	%rd6053, {%r4248, %r4247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4249}, %rd6027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4250,%dummy}, %rd6027;
	}
	shf.l.wrap.b32 	%r4251, %r4250, %r4249, 2;
	shf.l.wrap.b32 	%r4252, %r4249, %r4250, 2;
	mov.b64 	%rd6054, {%r4252, %r4251};
	not.b64 	%rd6055, %rd6031;
	and.b64  	%rd6056, %rd6032, %rd6055;
	xor.b64  	%rd6057, %rd6056, %rd6006;
	not.b64 	%rd6058, %rd6032;
	and.b64  	%rd6059, %rd6033, %rd6058;
	xor.b64  	%rd6060, %rd6059, %rd6031;
	not.b64 	%rd6061, %rd6033;
	and.b64  	%rd6062, %rd6034, %rd6061;
	xor.b64  	%rd6063, %rd6062, %rd6032;
	not.b64 	%rd6064, %rd6034;
	and.b64  	%rd6065, %rd6006, %rd6064;
	xor.b64  	%rd6066, %rd6065, %rd6033;
	not.b64 	%rd6067, %rd6006;
	and.b64  	%rd6068, %rd6031, %rd6067;
	xor.b64  	%rd6069, %rd6068, %rd6034;
	not.b64 	%rd6070, %rd6036;
	and.b64  	%rd6071, %rd6037, %rd6070;
	xor.b64  	%rd6072, %rd6071, %rd6035;
	not.b64 	%rd6073, %rd6037;
	and.b64  	%rd6074, %rd6038, %rd6073;
	xor.b64  	%rd6075, %rd6074, %rd6036;
	not.b64 	%rd6076, %rd6038;
	and.b64  	%rd6077, %rd6039, %rd6076;
	xor.b64  	%rd6078, %rd6077, %rd6037;
	not.b64 	%rd6079, %rd6039;
	and.b64  	%rd6080, %rd6035, %rd6079;
	xor.b64  	%rd6081, %rd6080, %rd6038;
	not.b64 	%rd6082, %rd6035;
	and.b64  	%rd6083, %rd6036, %rd6082;
	xor.b64  	%rd6084, %rd6083, %rd6039;
	not.b64 	%rd6085, %rd6041;
	and.b64  	%rd6086, %rd6042, %rd6085;
	xor.b64  	%rd6087, %rd6086, %rd6040;
	not.b64 	%rd6088, %rd6042;
	and.b64  	%rd6089, %rd6043, %rd6088;
	xor.b64  	%rd6090, %rd6089, %rd6041;
	not.b64 	%rd6091, %rd6043;
	and.b64  	%rd6092, %rd6044, %rd6091;
	xor.b64  	%rd6093, %rd6092, %rd6042;
	not.b64 	%rd6094, %rd6044;
	and.b64  	%rd6095, %rd6040, %rd6094;
	xor.b64  	%rd6096, %rd6095, %rd6043;
	not.b64 	%rd6097, %rd6040;
	and.b64  	%rd6098, %rd6041, %rd6097;
	xor.b64  	%rd6099, %rd6098, %rd6044;
	not.b64 	%rd6100, %rd6046;
	and.b64  	%rd6101, %rd6047, %rd6100;
	xor.b64  	%rd6102, %rd6101, %rd6045;
	not.b64 	%rd6103, %rd6047;
	and.b64  	%rd6104, %rd6048, %rd6103;
	xor.b64  	%rd6105, %rd6104, %rd6046;
	not.b64 	%rd6106, %rd6048;
	and.b64  	%rd6107, %rd6049, %rd6106;
	xor.b64  	%rd6108, %rd6107, %rd6047;
	not.b64 	%rd6109, %rd6049;
	and.b64  	%rd6110, %rd6045, %rd6109;
	xor.b64  	%rd6111, %rd6110, %rd6048;
	not.b64 	%rd6112, %rd6045;
	and.b64  	%rd6113, %rd6046, %rd6112;
	xor.b64  	%rd6114, %rd6113, %rd6049;
	not.b64 	%rd6115, %rd6051;
	and.b64  	%rd6116, %rd6052, %rd6115;
	xor.b64  	%rd6117, %rd6116, %rd6050;
	not.b64 	%rd6118, %rd6052;
	and.b64  	%rd6119, %rd6053, %rd6118;
	xor.b64  	%rd6120, %rd6119, %rd6051;
	not.b64 	%rd6121, %rd6053;
	and.b64  	%rd6122, %rd6054, %rd6121;
	xor.b64  	%rd6123, %rd6122, %rd6052;
	not.b64 	%rd6124, %rd6054;
	and.b64  	%rd6125, %rd6050, %rd6124;
	xor.b64  	%rd6126, %rd6125, %rd6053;
	not.b64 	%rd6127, %rd6050;
	and.b64  	%rd6128, %rd6051, %rd6127;
	xor.b64  	%rd6129, %rd6128, %rd6054;
	xor.b64  	%rd6130, %rd6057, %rd27;
	xor.b64  	%rd6131, %rd6072, %rd6130;
	xor.b64  	%rd6132, %rd6131, %rd6087;
	xor.b64  	%rd6133, %rd6132, %rd6102;
	xor.b64  	%rd6134, %rd6133, %rd6117;
	xor.b64  	%rd6135, %rd6075, %rd6060;
	xor.b64  	%rd6136, %rd6135, %rd6090;
	xor.b64  	%rd6137, %rd6136, %rd6105;
	xor.b64  	%rd6138, %rd6137, %rd6120;
	xor.b64  	%rd6139, %rd6078, %rd6063;
	xor.b64  	%rd6140, %rd6139, %rd6093;
	xor.b64  	%rd6141, %rd6140, %rd6108;
	xor.b64  	%rd6142, %rd6141, %rd6123;
	xor.b64  	%rd6143, %rd6081, %rd6066;
	xor.b64  	%rd6144, %rd6143, %rd6096;
	xor.b64  	%rd6145, %rd6144, %rd6111;
	xor.b64  	%rd6146, %rd6145, %rd6126;
	xor.b64  	%rd6147, %rd6084, %rd6069;
	xor.b64  	%rd6148, %rd6147, %rd6099;
	xor.b64  	%rd6149, %rd6148, %rd6114;
	xor.b64  	%rd6150, %rd6149, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4253}, %rd6138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4254,%dummy}, %rd6138;
	}
	shf.l.wrap.b32 	%r4255, %r4254, %r4253, 1;
	shf.l.wrap.b32 	%r4256, %r4253, %r4254, 1;
	mov.b64 	%rd6151, {%r4256, %r4255};
	xor.b64  	%rd6152, %rd6150, %rd6151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4257}, %rd6142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd6142;
	}
	shf.l.wrap.b32 	%r4259, %r4258, %r4257, 1;
	shf.l.wrap.b32 	%r4260, %r4257, %r4258, 1;
	mov.b64 	%rd6153, {%r4260, %r4259};
	xor.b64  	%rd6154, %rd6153, %rd6134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4261}, %rd6146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4262,%dummy}, %rd6146;
	}
	shf.l.wrap.b32 	%r4263, %r4262, %r4261, 1;
	shf.l.wrap.b32 	%r4264, %r4261, %r4262, 1;
	mov.b64 	%rd6155, {%r4264, %r4263};
	xor.b64  	%rd6156, %rd6155, %rd6138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4265}, %rd6150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd6150;
	}
	shf.l.wrap.b32 	%r4267, %r4266, %r4265, 1;
	shf.l.wrap.b32 	%r4268, %r4265, %r4266, 1;
	mov.b64 	%rd6157, {%r4268, %r4267};
	xor.b64  	%rd6158, %rd6157, %rd6142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4269}, %rd6134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4270,%dummy}, %rd6134;
	}
	shf.l.wrap.b32 	%r4271, %r4270, %r4269, 1;
	shf.l.wrap.b32 	%r4272, %r4269, %r4270, 1;
	mov.b64 	%rd6159, {%r4272, %r4271};
	xor.b64  	%rd6160, %rd6146, %rd6159;
	xor.b64  	%rd6161, %rd6152, %rd6130;
	xor.b64  	%rd6162, %rd6154, %rd6060;
	xor.b64  	%rd6163, %rd6156, %rd6063;
	xor.b64  	%rd6164, %rd6158, %rd6066;
	xor.b64  	%rd6165, %rd6160, %rd6069;
	xor.b64  	%rd6166, %rd6152, %rd6072;
	xor.b64  	%rd6167, %rd6154, %rd6075;
	xor.b64  	%rd6168, %rd6156, %rd6078;
	xor.b64  	%rd6169, %rd6158, %rd6081;
	xor.b64  	%rd6170, %rd6160, %rd6084;
	xor.b64  	%rd6171, %rd6152, %rd6087;
	xor.b64  	%rd6172, %rd6154, %rd6090;
	xor.b64  	%rd6173, %rd6156, %rd6093;
	xor.b64  	%rd6174, %rd6158, %rd6096;
	xor.b64  	%rd6175, %rd6160, %rd6099;
	xor.b64  	%rd6176, %rd6152, %rd6102;
	xor.b64  	%rd6177, %rd6154, %rd6105;
	xor.b64  	%rd6178, %rd6156, %rd6108;
	xor.b64  	%rd6179, %rd6158, %rd6111;
	xor.b64  	%rd6180, %rd6160, %rd6114;
	xor.b64  	%rd6181, %rd6152, %rd6117;
	xor.b64  	%rd6182, %rd6154, %rd6120;
	xor.b64  	%rd6183, %rd6156, %rd6123;
	xor.b64  	%rd6184, %rd6158, %rd6126;
	xor.b64  	%rd6185, %rd6160, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4273,%dummy}, %rd6167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4274}, %rd6167;
	}
	shf.r.wrap.b32 	%r4275, %r4274, %r4273, 20;
	shf.r.wrap.b32 	%r4276, %r4273, %r4274, 20;
	mov.b64 	%rd6186, {%r4276, %r4275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4277,%dummy}, %rd6173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4278}, %rd6173;
	}
	shf.r.wrap.b32 	%r4279, %r4278, %r4277, 21;
	shf.r.wrap.b32 	%r4280, %r4277, %r4278, 21;
	mov.b64 	%rd6187, {%r4280, %r4279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4281}, %rd6179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4282,%dummy}, %rd6179;
	}
	shf.l.wrap.b32 	%r4283, %r4282, %r4281, 21;
	shf.l.wrap.b32 	%r4284, %r4281, %r4282, 21;
	mov.b64 	%rd6188, {%r4284, %r4283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4285}, %rd6185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4286,%dummy}, %rd6185;
	}
	shf.l.wrap.b32 	%r4287, %r4286, %r4285, 14;
	shf.l.wrap.b32 	%r4288, %r4285, %r4286, 14;
	mov.b64 	%rd6189, {%r4288, %r4287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4289}, %rd6164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4290,%dummy}, %rd6164;
	}
	shf.l.wrap.b32 	%r4291, %r4290, %r4289, 28;
	shf.l.wrap.b32 	%r4292, %r4289, %r4290, 28;
	mov.b64 	%rd6190, {%r4292, %r4291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4293}, %rd6170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4294,%dummy}, %rd6170;
	}
	shf.l.wrap.b32 	%r4295, %r4294, %r4293, 20;
	shf.l.wrap.b32 	%r4296, %r4293, %r4294, 20;
	mov.b64 	%rd6191, {%r4296, %r4295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4297}, %rd6171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4298,%dummy}, %rd6171;
	}
	shf.l.wrap.b32 	%r4299, %r4298, %r4297, 3;
	shf.l.wrap.b32 	%r4300, %r4297, %r4298, 3;
	mov.b64 	%rd6192, {%r4300, %r4299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4301,%dummy}, %rd6177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4302}, %rd6177;
	}
	shf.r.wrap.b32 	%r4303, %r4302, %r4301, 19;
	shf.r.wrap.b32 	%r4304, %r4301, %r4302, 19;
	mov.b64 	%rd6193, {%r4304, %r4303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4305,%dummy}, %rd6183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4306}, %rd6183;
	}
	shf.r.wrap.b32 	%r4307, %r4306, %r4305, 3;
	shf.r.wrap.b32 	%r4308, %r4305, %r4306, 3;
	mov.b64 	%rd6194, {%r4308, %r4307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4309}, %rd6162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4310,%dummy}, %rd6162;
	}
	shf.l.wrap.b32 	%r4311, %r4310, %r4309, 1;
	shf.l.wrap.b32 	%r4312, %r4309, %r4310, 1;
	mov.b64 	%rd6195, {%r4312, %r4311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4313}, %rd6168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4314,%dummy}, %rd6168;
	}
	shf.l.wrap.b32 	%r4315, %r4314, %r4313, 6;
	shf.l.wrap.b32 	%r4316, %r4313, %r4314, 6;
	mov.b64 	%rd6196, {%r4316, %r4315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4317}, %rd6174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4318,%dummy}, %rd6174;
	}
	shf.l.wrap.b32 	%r4319, %r4318, %r4317, 25;
	shf.l.wrap.b32 	%r4320, %r4317, %r4318, 25;
	mov.b64 	%rd6197, {%r4320, %r4319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4321}, %rd6180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4322,%dummy}, %rd6180;
	}
	shf.l.wrap.b32 	%r4323, %r4322, %r4321, 8;
	shf.l.wrap.b32 	%r4324, %r4321, %r4322, 8;
	mov.b64 	%rd6198, {%r4324, %r4323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4325}, %rd6181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4326,%dummy}, %rd6181;
	}
	shf.l.wrap.b32 	%r4327, %r4326, %r4325, 18;
	shf.l.wrap.b32 	%r4328, %r4325, %r4326, 18;
	mov.b64 	%rd6199, {%r4328, %r4327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4329}, %rd6165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4330,%dummy}, %rd6165;
	}
	shf.l.wrap.b32 	%r4331, %r4330, %r4329, 27;
	shf.l.wrap.b32 	%r4332, %r4329, %r4330, 27;
	mov.b64 	%rd6200, {%r4332, %r4331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4333,%dummy}, %rd6166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4334}, %rd6166;
	}
	shf.r.wrap.b32 	%r4335, %r4334, %r4333, 28;
	shf.r.wrap.b32 	%r4336, %r4333, %r4334, 28;
	mov.b64 	%rd6201, {%r4336, %r4335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd6172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4338,%dummy}, %rd6172;
	}
	shf.l.wrap.b32 	%r4339, %r4338, %r4337, 10;
	shf.l.wrap.b32 	%r4340, %r4337, %r4338, 10;
	mov.b64 	%rd6202, {%r4340, %r4339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4341}, %rd6178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4342,%dummy}, %rd6178;
	}
	shf.l.wrap.b32 	%r4343, %r4342, %r4341, 15;
	shf.l.wrap.b32 	%r4344, %r4341, %r4342, 15;
	mov.b64 	%rd6203, {%r4344, %r4343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4345,%dummy}, %rd6184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4346}, %rd6184;
	}
	shf.r.wrap.b32 	%r4347, %r4346, %r4345, 8;
	shf.r.wrap.b32 	%r4348, %r4345, %r4346, 8;
	mov.b64 	%rd6204, {%r4348, %r4347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4349,%dummy}, %rd6163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4350}, %rd6163;
	}
	shf.r.wrap.b32 	%r4351, %r4350, %r4349, 2;
	shf.r.wrap.b32 	%r4352, %r4349, %r4350, 2;
	mov.b64 	%rd6205, {%r4352, %r4351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4353,%dummy}, %rd6169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4354}, %rd6169;
	}
	shf.r.wrap.b32 	%r4355, %r4354, %r4353, 9;
	shf.r.wrap.b32 	%r4356, %r4353, %r4354, 9;
	mov.b64 	%rd6206, {%r4356, %r4355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4357,%dummy}, %rd6175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4358}, %rd6175;
	}
	shf.r.wrap.b32 	%r4359, %r4358, %r4357, 25;
	shf.r.wrap.b32 	%r4360, %r4357, %r4358, 25;
	mov.b64 	%rd6207, {%r4360, %r4359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4361,%dummy}, %rd6176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4362}, %rd6176;
	}
	shf.r.wrap.b32 	%r4363, %r4362, %r4361, 23;
	shf.r.wrap.b32 	%r4364, %r4361, %r4362, 23;
	mov.b64 	%rd6208, {%r4364, %r4363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4365}, %rd6182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4366,%dummy}, %rd6182;
	}
	shf.l.wrap.b32 	%r4367, %r4366, %r4365, 2;
	shf.l.wrap.b32 	%r4368, %r4365, %r4366, 2;
	mov.b64 	%rd6209, {%r4368, %r4367};
	not.b64 	%rd6210, %rd6186;
	and.b64  	%rd6211, %rd6187, %rd6210;
	xor.b64  	%rd6212, %rd6211, %rd6161;
	not.b64 	%rd6213, %rd6187;
	and.b64  	%rd6214, %rd6188, %rd6213;
	xor.b64  	%rd6215, %rd6214, %rd6186;
	not.b64 	%rd6216, %rd6188;
	and.b64  	%rd6217, %rd6189, %rd6216;
	xor.b64  	%rd6218, %rd6217, %rd6187;
	not.b64 	%rd6219, %rd6189;
	and.b64  	%rd6220, %rd6161, %rd6219;
	xor.b64  	%rd6221, %rd6220, %rd6188;
	not.b64 	%rd6222, %rd6161;
	and.b64  	%rd6223, %rd6186, %rd6222;
	xor.b64  	%rd6224, %rd6223, %rd6189;
	not.b64 	%rd6225, %rd6191;
	and.b64  	%rd6226, %rd6192, %rd6225;
	xor.b64  	%rd6227, %rd6226, %rd6190;
	not.b64 	%rd6228, %rd6192;
	and.b64  	%rd6229, %rd6193, %rd6228;
	xor.b64  	%rd6230, %rd6229, %rd6191;
	not.b64 	%rd6231, %rd6193;
	and.b64  	%rd6232, %rd6194, %rd6231;
	xor.b64  	%rd6233, %rd6232, %rd6192;
	not.b64 	%rd6234, %rd6194;
	and.b64  	%rd6235, %rd6190, %rd6234;
	xor.b64  	%rd6236, %rd6235, %rd6193;
	not.b64 	%rd6237, %rd6190;
	and.b64  	%rd6238, %rd6191, %rd6237;
	xor.b64  	%rd6239, %rd6238, %rd6194;
	not.b64 	%rd6240, %rd6196;
	and.b64  	%rd6241, %rd6197, %rd6240;
	xor.b64  	%rd6242, %rd6241, %rd6195;
	not.b64 	%rd6243, %rd6197;
	and.b64  	%rd6244, %rd6198, %rd6243;
	xor.b64  	%rd6245, %rd6244, %rd6196;
	not.b64 	%rd6246, %rd6198;
	and.b64  	%rd6247, %rd6199, %rd6246;
	xor.b64  	%rd6248, %rd6247, %rd6197;
	not.b64 	%rd6249, %rd6199;
	and.b64  	%rd6250, %rd6195, %rd6249;
	xor.b64  	%rd6251, %rd6250, %rd6198;
	not.b64 	%rd6252, %rd6195;
	and.b64  	%rd6253, %rd6196, %rd6252;
	xor.b64  	%rd6254, %rd6253, %rd6199;
	not.b64 	%rd6255, %rd6201;
	and.b64  	%rd6256, %rd6202, %rd6255;
	xor.b64  	%rd6257, %rd6256, %rd6200;
	not.b64 	%rd6258, %rd6202;
	and.b64  	%rd6259, %rd6203, %rd6258;
	xor.b64  	%rd6260, %rd6259, %rd6201;
	not.b64 	%rd6261, %rd6203;
	and.b64  	%rd6262, %rd6204, %rd6261;
	xor.b64  	%rd6263, %rd6262, %rd6202;
	not.b64 	%rd6264, %rd6204;
	and.b64  	%rd6265, %rd6200, %rd6264;
	xor.b64  	%rd6266, %rd6265, %rd6203;
	not.b64 	%rd6267, %rd6200;
	and.b64  	%rd6268, %rd6201, %rd6267;
	xor.b64  	%rd6269, %rd6268, %rd6204;
	not.b64 	%rd6270, %rd6206;
	and.b64  	%rd6271, %rd6207, %rd6270;
	xor.b64  	%rd6272, %rd6271, %rd6205;
	not.b64 	%rd6273, %rd6207;
	and.b64  	%rd6274, %rd6208, %rd6273;
	xor.b64  	%rd6275, %rd6274, %rd6206;
	not.b64 	%rd6276, %rd6208;
	and.b64  	%rd6277, %rd6209, %rd6276;
	xor.b64  	%rd6278, %rd6277, %rd6207;
	not.b64 	%rd6279, %rd6209;
	and.b64  	%rd6280, %rd6205, %rd6279;
	xor.b64  	%rd6281, %rd6280, %rd6208;
	not.b64 	%rd6282, %rd6205;
	and.b64  	%rd6283, %rd6206, %rd6282;
	xor.b64  	%rd6284, %rd6283, %rd6209;
	xor.b64  	%rd6285, %rd6212, %rd28;
	xor.b64  	%rd6286, %rd6227, %rd6285;
	xor.b64  	%rd6287, %rd6286, %rd6242;
	xor.b64  	%rd6288, %rd6287, %rd6257;
	xor.b64  	%rd6289, %rd6288, %rd6272;
	xor.b64  	%rd6290, %rd6230, %rd6215;
	xor.b64  	%rd6291, %rd6290, %rd6245;
	xor.b64  	%rd6292, %rd6291, %rd6260;
	xor.b64  	%rd6293, %rd6292, %rd6275;
	xor.b64  	%rd6294, %rd6233, %rd6218;
	xor.b64  	%rd6295, %rd6294, %rd6248;
	xor.b64  	%rd6296, %rd6295, %rd6263;
	xor.b64  	%rd6297, %rd6296, %rd6278;
	xor.b64  	%rd6298, %rd6236, %rd6221;
	xor.b64  	%rd6299, %rd6298, %rd6251;
	xor.b64  	%rd6300, %rd6299, %rd6266;
	xor.b64  	%rd6301, %rd6300, %rd6281;
	xor.b64  	%rd6302, %rd6239, %rd6224;
	xor.b64  	%rd6303, %rd6302, %rd6254;
	xor.b64  	%rd6304, %rd6303, %rd6269;
	xor.b64  	%rd6305, %rd6304, %rd6284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4369}, %rd6293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4370,%dummy}, %rd6293;
	}
	shf.l.wrap.b32 	%r4371, %r4370, %r4369, 1;
	shf.l.wrap.b32 	%r4372, %r4369, %r4370, 1;
	mov.b64 	%rd6306, {%r4372, %r4371};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4373}, %rd6297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4374,%dummy}, %rd6297;
	}
	shf.l.wrap.b32 	%r4375, %r4374, %r4373, 1;
	shf.l.wrap.b32 	%r4376, %r4373, %r4374, 1;
	mov.b64 	%rd6308, {%r4376, %r4375};
	xor.b64  	%rd6309, %rd6308, %rd6289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4377}, %rd6301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4378,%dummy}, %rd6301;
	}
	shf.l.wrap.b32 	%r4379, %r4378, %r4377, 1;
	shf.l.wrap.b32 	%r4380, %r4377, %r4378, 1;
	mov.b64 	%rd6310, {%r4380, %r4379};
	xor.b64  	%rd6311, %rd6310, %rd6293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4381}, %rd6305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4382,%dummy}, %rd6305;
	}
	shf.l.wrap.b32 	%r4383, %r4382, %r4381, 1;
	shf.l.wrap.b32 	%r4384, %r4381, %r4382, 1;
	mov.b64 	%rd6312, {%r4384, %r4383};
	xor.b64  	%rd6313, %rd6312, %rd6297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4385}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4386,%dummy}, %rd6289;
	}
	shf.l.wrap.b32 	%r4387, %r4386, %r4385, 1;
	shf.l.wrap.b32 	%r4388, %r4385, %r4386, 1;
	mov.b64 	%rd6314, {%r4388, %r4387};
	xor.b64  	%rd6315, %rd6301, %rd6314;
	xor.b64  	%rd6316, %rd6307, %rd6285;
	xor.b64  	%rd6317, %rd6309, %rd6215;
	xor.b64  	%rd6318, %rd6311, %rd6218;
	xor.b64  	%rd6319, %rd6313, %rd6221;
	xor.b64  	%rd6320, %rd6315, %rd6224;
	xor.b64  	%rd6321, %rd6307, %rd6227;
	xor.b64  	%rd6322, %rd6309, %rd6230;
	xor.b64  	%rd6323, %rd6311, %rd6233;
	xor.b64  	%rd6324, %rd6313, %rd6236;
	xor.b64  	%rd6325, %rd6315, %rd6239;
	xor.b64  	%rd6326, %rd6307, %rd6242;
	xor.b64  	%rd6327, %rd6309, %rd6245;
	xor.b64  	%rd6328, %rd6311, %rd6248;
	xor.b64  	%rd6329, %rd6313, %rd6251;
	xor.b64  	%rd6330, %rd6315, %rd6254;
	xor.b64  	%rd6331, %rd6307, %rd6257;
	xor.b64  	%rd6332, %rd6309, %rd6260;
	xor.b64  	%rd6333, %rd6311, %rd6263;
	xor.b64  	%rd6334, %rd6313, %rd6266;
	xor.b64  	%rd6335, %rd6315, %rd6269;
	xor.b64  	%rd6336, %rd6307, %rd6272;
	xor.b64  	%rd6337, %rd6309, %rd6275;
	xor.b64  	%rd6338, %rd6311, %rd6278;
	xor.b64  	%rd6339, %rd6313, %rd6281;
	xor.b64  	%rd6340, %rd6315, %rd6284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4389,%dummy}, %rd6322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4390}, %rd6322;
	}
	shf.r.wrap.b32 	%r4391, %r4390, %r4389, 20;
	shf.r.wrap.b32 	%r4392, %r4389, %r4390, 20;
	mov.b64 	%rd6341, {%r4392, %r4391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4393,%dummy}, %rd6328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4394}, %rd6328;
	}
	shf.r.wrap.b32 	%r4395, %r4394, %r4393, 21;
	shf.r.wrap.b32 	%r4396, %r4393, %r4394, 21;
	mov.b64 	%rd6342, {%r4396, %r4395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4397}, %rd6334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4398,%dummy}, %rd6334;
	}
	shf.l.wrap.b32 	%r4399, %r4398, %r4397, 21;
	shf.l.wrap.b32 	%r4400, %r4397, %r4398, 21;
	mov.b64 	%rd6343, {%r4400, %r4399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4401}, %rd6340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4402,%dummy}, %rd6340;
	}
	shf.l.wrap.b32 	%r4403, %r4402, %r4401, 14;
	shf.l.wrap.b32 	%r4404, %r4401, %r4402, 14;
	mov.b64 	%rd6344, {%r4404, %r4403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4405}, %rd6319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6319;
	}
	shf.l.wrap.b32 	%r4407, %r4406, %r4405, 28;
	shf.l.wrap.b32 	%r4408, %r4405, %r4406, 28;
	mov.b64 	%rd6345, {%r4408, %r4407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4409}, %rd6325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4410,%dummy}, %rd6325;
	}
	shf.l.wrap.b32 	%r4411, %r4410, %r4409, 20;
	shf.l.wrap.b32 	%r4412, %r4409, %r4410, 20;
	mov.b64 	%rd6346, {%r4412, %r4411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4413}, %rd6326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd6326;
	}
	shf.l.wrap.b32 	%r4415, %r4414, %r4413, 3;
	shf.l.wrap.b32 	%r4416, %r4413, %r4414, 3;
	mov.b64 	%rd6347, {%r4416, %r4415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4417,%dummy}, %rd6332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4418}, %rd6332;
	}
	shf.r.wrap.b32 	%r4419, %r4418, %r4417, 19;
	shf.r.wrap.b32 	%r4420, %r4417, %r4418, 19;
	mov.b64 	%rd6348, {%r4420, %r4419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4421,%dummy}, %rd6338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4422}, %rd6338;
	}
	shf.r.wrap.b32 	%r4423, %r4422, %r4421, 3;
	shf.r.wrap.b32 	%r4424, %r4421, %r4422, 3;
	mov.b64 	%rd6349, {%r4424, %r4423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4425}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4426,%dummy}, %rd6317;
	}
	shf.l.wrap.b32 	%r4427, %r4426, %r4425, 1;
	shf.l.wrap.b32 	%r4428, %r4425, %r4426, 1;
	mov.b64 	%rd6350, {%r4428, %r4427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4429}, %rd6323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4430,%dummy}, %rd6323;
	}
	shf.l.wrap.b32 	%r4431, %r4430, %r4429, 6;
	shf.l.wrap.b32 	%r4432, %r4429, %r4430, 6;
	mov.b64 	%rd6351, {%r4432, %r4431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4433}, %rd6329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4434,%dummy}, %rd6329;
	}
	shf.l.wrap.b32 	%r4435, %r4434, %r4433, 25;
	shf.l.wrap.b32 	%r4436, %r4433, %r4434, 25;
	mov.b64 	%rd6352, {%r4436, %r4435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4437}, %rd6335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4438,%dummy}, %rd6335;
	}
	shf.l.wrap.b32 	%r4439, %r4438, %r4437, 8;
	shf.l.wrap.b32 	%r4440, %r4437, %r4438, 8;
	mov.b64 	%rd6353, {%r4440, %r4439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4441}, %rd6336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4442,%dummy}, %rd6336;
	}
	shf.l.wrap.b32 	%r4443, %r4442, %r4441, 18;
	shf.l.wrap.b32 	%r4444, %r4441, %r4442, 18;
	mov.b64 	%rd6354, {%r4444, %r4443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4445}, %rd6320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4446,%dummy}, %rd6320;
	}
	shf.l.wrap.b32 	%r4447, %r4446, %r4445, 27;
	shf.l.wrap.b32 	%r4448, %r4445, %r4446, 27;
	mov.b64 	%rd6355, {%r4448, %r4447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4449,%dummy}, %rd6321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4450}, %rd6321;
	}
	shf.r.wrap.b32 	%r4451, %r4450, %r4449, 28;
	shf.r.wrap.b32 	%r4452, %r4449, %r4450, 28;
	mov.b64 	%rd6356, {%r4452, %r4451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4453}, %rd6327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd6327;
	}
	shf.l.wrap.b32 	%r4455, %r4454, %r4453, 10;
	shf.l.wrap.b32 	%r4456, %r4453, %r4454, 10;
	mov.b64 	%rd6357, {%r4456, %r4455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4457}, %rd6333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4458,%dummy}, %rd6333;
	}
	shf.l.wrap.b32 	%r4459, %r4458, %r4457, 15;
	shf.l.wrap.b32 	%r4460, %r4457, %r4458, 15;
	mov.b64 	%rd6358, {%r4460, %r4459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4461,%dummy}, %rd6339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4462}, %rd6339;
	}
	shf.r.wrap.b32 	%r4463, %r4462, %r4461, 8;
	shf.r.wrap.b32 	%r4464, %r4461, %r4462, 8;
	mov.b64 	%rd6359, {%r4464, %r4463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4465,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4466}, %rd6318;
	}
	shf.r.wrap.b32 	%r4467, %r4466, %r4465, 2;
	shf.r.wrap.b32 	%r4468, %r4465, %r4466, 2;
	mov.b64 	%rd6360, {%r4468, %r4467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4469,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4470}, %rd6324;
	}
	shf.r.wrap.b32 	%r4471, %r4470, %r4469, 9;
	shf.r.wrap.b32 	%r4472, %r4469, %r4470, 9;
	mov.b64 	%rd6361, {%r4472, %r4471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4473,%dummy}, %rd6330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4474}, %rd6330;
	}
	shf.r.wrap.b32 	%r4475, %r4474, %r4473, 25;
	shf.r.wrap.b32 	%r4476, %r4473, %r4474, 25;
	mov.b64 	%rd6362, {%r4476, %r4475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4477,%dummy}, %rd6331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4478}, %rd6331;
	}
	shf.r.wrap.b32 	%r4479, %r4478, %r4477, 23;
	shf.r.wrap.b32 	%r4480, %r4477, %r4478, 23;
	mov.b64 	%rd6363, {%r4480, %r4479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4481}, %rd6337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4482,%dummy}, %rd6337;
	}
	shf.l.wrap.b32 	%r4483, %r4482, %r4481, 2;
	shf.l.wrap.b32 	%r4484, %r4481, %r4482, 2;
	mov.b64 	%rd6364, {%r4484, %r4483};
	not.b64 	%rd6365, %rd6341;
	and.b64  	%rd6366, %rd6342, %rd6365;
	xor.b64  	%rd6367, %rd6366, %rd6316;
	not.b64 	%rd6368, %rd6342;
	and.b64  	%rd6369, %rd6343, %rd6368;
	xor.b64  	%rd6370, %rd6369, %rd6341;
	not.b64 	%rd6371, %rd6343;
	and.b64  	%rd6372, %rd6344, %rd6371;
	xor.b64  	%rd6373, %rd6372, %rd6342;
	not.b64 	%rd6374, %rd6344;
	and.b64  	%rd6375, %rd6316, %rd6374;
	xor.b64  	%rd6376, %rd6375, %rd6343;
	not.b64 	%rd6377, %rd6316;
	and.b64  	%rd6378, %rd6341, %rd6377;
	xor.b64  	%rd6379, %rd6378, %rd6344;
	not.b64 	%rd6380, %rd6346;
	and.b64  	%rd6381, %rd6347, %rd6380;
	xor.b64  	%rd6382, %rd6381, %rd6345;
	not.b64 	%rd6383, %rd6347;
	and.b64  	%rd6384, %rd6348, %rd6383;
	xor.b64  	%rd6385, %rd6384, %rd6346;
	not.b64 	%rd6386, %rd6348;
	and.b64  	%rd6387, %rd6349, %rd6386;
	xor.b64  	%rd6388, %rd6387, %rd6347;
	not.b64 	%rd6389, %rd6349;
	and.b64  	%rd6390, %rd6345, %rd6389;
	xor.b64  	%rd6391, %rd6390, %rd6348;
	not.b64 	%rd6392, %rd6345;
	and.b64  	%rd6393, %rd6346, %rd6392;
	xor.b64  	%rd6394, %rd6393, %rd6349;
	not.b64 	%rd6395, %rd6351;
	and.b64  	%rd6396, %rd6352, %rd6395;
	xor.b64  	%rd6397, %rd6396, %rd6350;
	not.b64 	%rd6398, %rd6352;
	and.b64  	%rd6399, %rd6353, %rd6398;
	xor.b64  	%rd6400, %rd6399, %rd6351;
	not.b64 	%rd6401, %rd6353;
	and.b64  	%rd6402, %rd6354, %rd6401;
	xor.b64  	%rd6403, %rd6402, %rd6352;
	not.b64 	%rd6404, %rd6354;
	and.b64  	%rd6405, %rd6350, %rd6404;
	xor.b64  	%rd6406, %rd6405, %rd6353;
	not.b64 	%rd6407, %rd6350;
	and.b64  	%rd6408, %rd6351, %rd6407;
	xor.b64  	%rd6409, %rd6408, %rd6354;
	not.b64 	%rd6410, %rd6356;
	and.b64  	%rd6411, %rd6357, %rd6410;
	xor.b64  	%rd6412, %rd6411, %rd6355;
	not.b64 	%rd6413, %rd6357;
	and.b64  	%rd6414, %rd6358, %rd6413;
	xor.b64  	%rd6415, %rd6414, %rd6356;
	not.b64 	%rd6416, %rd6358;
	and.b64  	%rd6417, %rd6359, %rd6416;
	xor.b64  	%rd6418, %rd6417, %rd6357;
	not.b64 	%rd6419, %rd6359;
	and.b64  	%rd6420, %rd6355, %rd6419;
	xor.b64  	%rd6421, %rd6420, %rd6358;
	not.b64 	%rd6422, %rd6355;
	and.b64  	%rd6423, %rd6356, %rd6422;
	xor.b64  	%rd6424, %rd6423, %rd6359;
	not.b64 	%rd6425, %rd6361;
	and.b64  	%rd6426, %rd6362, %rd6425;
	xor.b64  	%rd6427, %rd6426, %rd6360;
	not.b64 	%rd6428, %rd6362;
	and.b64  	%rd6429, %rd6363, %rd6428;
	xor.b64  	%rd6430, %rd6429, %rd6361;
	not.b64 	%rd6431, %rd6363;
	and.b64  	%rd6432, %rd6364, %rd6431;
	xor.b64  	%rd6433, %rd6432, %rd6362;
	not.b64 	%rd6434, %rd6364;
	and.b64  	%rd6435, %rd6360, %rd6434;
	xor.b64  	%rd6436, %rd6435, %rd6363;
	not.b64 	%rd6437, %rd6360;
	and.b64  	%rd6438, %rd6361, %rd6437;
	xor.b64  	%rd6439, %rd6438, %rd6364;
	xor.b64  	%rd6440, %rd6367, %rd29;
	xor.b64  	%rd6441, %rd6382, %rd6440;
	xor.b64  	%rd6442, %rd6441, %rd6397;
	xor.b64  	%rd6443, %rd6442, %rd6412;
	xor.b64  	%rd6444, %rd6443, %rd6427;
	xor.b64  	%rd6445, %rd6385, %rd6370;
	xor.b64  	%rd6446, %rd6445, %rd6400;
	xor.b64  	%rd6447, %rd6446, %rd6415;
	xor.b64  	%rd6448, %rd6447, %rd6430;
	xor.b64  	%rd6449, %rd6388, %rd6373;
	xor.b64  	%rd6450, %rd6449, %rd6403;
	xor.b64  	%rd6451, %rd6450, %rd6418;
	xor.b64  	%rd6452, %rd6451, %rd6433;
	xor.b64  	%rd6453, %rd6391, %rd6376;
	xor.b64  	%rd6454, %rd6453, %rd6406;
	xor.b64  	%rd6455, %rd6454, %rd6421;
	xor.b64  	%rd6456, %rd6455, %rd6436;
	xor.b64  	%rd6457, %rd6394, %rd6379;
	xor.b64  	%rd6458, %rd6457, %rd6409;
	xor.b64  	%rd6459, %rd6458, %rd6424;
	xor.b64  	%rd6460, %rd6459, %rd6439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4485}, %rd6448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4486,%dummy}, %rd6448;
	}
	shf.l.wrap.b32 	%r4487, %r4486, %r4485, 1;
	shf.l.wrap.b32 	%r4488, %r4485, %r4486, 1;
	mov.b64 	%rd6461, {%r4488, %r4487};
	xor.b64  	%rd6462, %rd6460, %rd6461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4489}, %rd6452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4490,%dummy}, %rd6452;
	}
	shf.l.wrap.b32 	%r4491, %r4490, %r4489, 1;
	shf.l.wrap.b32 	%r4492, %r4489, %r4490, 1;
	mov.b64 	%rd6463, {%r4492, %r4491};
	xor.b64  	%rd6464, %rd6463, %rd6444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4493}, %rd6456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd6456;
	}
	shf.l.wrap.b32 	%r4495, %r4494, %r4493, 1;
	shf.l.wrap.b32 	%r4496, %r4493, %r4494, 1;
	mov.b64 	%rd6465, {%r4496, %r4495};
	xor.b64  	%rd6466, %rd6465, %rd6448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4497}, %rd6460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4498,%dummy}, %rd6460;
	}
	shf.l.wrap.b32 	%r4499, %r4498, %r4497, 1;
	shf.l.wrap.b32 	%r4500, %r4497, %r4498, 1;
	mov.b64 	%rd6467, {%r4500, %r4499};
	xor.b64  	%rd6468, %rd6467, %rd6452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4501}, %rd6444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4502,%dummy}, %rd6444;
	}
	shf.l.wrap.b32 	%r4503, %r4502, %r4501, 1;
	shf.l.wrap.b32 	%r4504, %r4501, %r4502, 1;
	mov.b64 	%rd6469, {%r4504, %r4503};
	xor.b64  	%rd6470, %rd6456, %rd6469;
	xor.b64  	%rd6471, %rd6462, %rd6440;
	xor.b64  	%rd6472, %rd6464, %rd6370;
	xor.b64  	%rd6473, %rd6466, %rd6373;
	xor.b64  	%rd6474, %rd6468, %rd6376;
	xor.b64  	%rd6475, %rd6470, %rd6379;
	xor.b64  	%rd6476, %rd6462, %rd6382;
	xor.b64  	%rd6477, %rd6464, %rd6385;
	xor.b64  	%rd6478, %rd6466, %rd6388;
	xor.b64  	%rd6479, %rd6468, %rd6391;
	xor.b64  	%rd6480, %rd6470, %rd6394;
	xor.b64  	%rd6481, %rd6462, %rd6397;
	xor.b64  	%rd6482, %rd6464, %rd6400;
	xor.b64  	%rd6483, %rd6466, %rd6403;
	xor.b64  	%rd6484, %rd6468, %rd6406;
	xor.b64  	%rd6485, %rd6470, %rd6409;
	xor.b64  	%rd6486, %rd6462, %rd6412;
	xor.b64  	%rd6487, %rd6464, %rd6415;
	xor.b64  	%rd6488, %rd6466, %rd6418;
	xor.b64  	%rd6489, %rd6468, %rd6421;
	xor.b64  	%rd6490, %rd6470, %rd6424;
	xor.b64  	%rd6491, %rd6462, %rd6427;
	xor.b64  	%rd6492, %rd6464, %rd6430;
	xor.b64  	%rd6493, %rd6466, %rd6433;
	xor.b64  	%rd6494, %rd6468, %rd6436;
	xor.b64  	%rd6495, %rd6470, %rd6439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4505,%dummy}, %rd6477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4506}, %rd6477;
	}
	shf.r.wrap.b32 	%r4507, %r4506, %r4505, 20;
	shf.r.wrap.b32 	%r4508, %r4505, %r4506, 20;
	mov.b64 	%rd6496, {%r4508, %r4507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4509,%dummy}, %rd6483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4510}, %rd6483;
	}
	shf.r.wrap.b32 	%r4511, %r4510, %r4509, 21;
	shf.r.wrap.b32 	%r4512, %r4509, %r4510, 21;
	mov.b64 	%rd6497, {%r4512, %r4511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4513}, %rd6489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4514,%dummy}, %rd6489;
	}
	shf.l.wrap.b32 	%r4515, %r4514, %r4513, 21;
	shf.l.wrap.b32 	%r4516, %r4513, %r4514, 21;
	mov.b64 	%rd6498, {%r4516, %r4515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4517}, %rd6495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4518,%dummy}, %rd6495;
	}
	shf.l.wrap.b32 	%r4519, %r4518, %r4517, 14;
	shf.l.wrap.b32 	%r4520, %r4517, %r4518, 14;
	mov.b64 	%rd6499, {%r4520, %r4519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4521}, %rd6474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4522,%dummy}, %rd6474;
	}
	shf.l.wrap.b32 	%r4523, %r4522, %r4521, 28;
	shf.l.wrap.b32 	%r4524, %r4521, %r4522, 28;
	mov.b64 	%rd6500, {%r4524, %r4523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4525}, %rd6480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4526,%dummy}, %rd6480;
	}
	shf.l.wrap.b32 	%r4527, %r4526, %r4525, 20;
	shf.l.wrap.b32 	%r4528, %r4525, %r4526, 20;
	mov.b64 	%rd6501, {%r4528, %r4527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4529}, %rd6481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4530,%dummy}, %rd6481;
	}
	shf.l.wrap.b32 	%r4531, %r4530, %r4529, 3;
	shf.l.wrap.b32 	%r4532, %r4529, %r4530, 3;
	mov.b64 	%rd6502, {%r4532, %r4531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4533,%dummy}, %rd6487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4534}, %rd6487;
	}
	shf.r.wrap.b32 	%r4535, %r4534, %r4533, 19;
	shf.r.wrap.b32 	%r4536, %r4533, %r4534, 19;
	mov.b64 	%rd6503, {%r4536, %r4535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4537,%dummy}, %rd6493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4538}, %rd6493;
	}
	shf.r.wrap.b32 	%r4539, %r4538, %r4537, 3;
	shf.r.wrap.b32 	%r4540, %r4537, %r4538, 3;
	mov.b64 	%rd6504, {%r4540, %r4539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4541}, %rd6472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4542,%dummy}, %rd6472;
	}
	shf.l.wrap.b32 	%r4543, %r4542, %r4541, 1;
	shf.l.wrap.b32 	%r4544, %r4541, %r4542, 1;
	mov.b64 	%rd6505, {%r4544, %r4543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4545}, %rd6478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4546,%dummy}, %rd6478;
	}
	shf.l.wrap.b32 	%r4547, %r4546, %r4545, 6;
	shf.l.wrap.b32 	%r4548, %r4545, %r4546, 6;
	mov.b64 	%rd6506, {%r4548, %r4547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4549}, %rd6484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4550,%dummy}, %rd6484;
	}
	shf.l.wrap.b32 	%r4551, %r4550, %r4549, 25;
	shf.l.wrap.b32 	%r4552, %r4549, %r4550, 25;
	mov.b64 	%rd6507, {%r4552, %r4551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4553}, %rd6490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4554,%dummy}, %rd6490;
	}
	shf.l.wrap.b32 	%r4555, %r4554, %r4553, 8;
	shf.l.wrap.b32 	%r4556, %r4553, %r4554, 8;
	mov.b64 	%rd6508, {%r4556, %r4555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4557}, %rd6491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4558,%dummy}, %rd6491;
	}
	shf.l.wrap.b32 	%r4559, %r4558, %r4557, 18;
	shf.l.wrap.b32 	%r4560, %r4557, %r4558, 18;
	mov.b64 	%rd6509, {%r4560, %r4559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4561}, %rd6475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4562,%dummy}, %rd6475;
	}
	shf.l.wrap.b32 	%r4563, %r4562, %r4561, 27;
	shf.l.wrap.b32 	%r4564, %r4561, %r4562, 27;
	mov.b64 	%rd6510, {%r4564, %r4563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4565,%dummy}, %rd6476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4566}, %rd6476;
	}
	shf.r.wrap.b32 	%r4567, %r4566, %r4565, 28;
	shf.r.wrap.b32 	%r4568, %r4565, %r4566, 28;
	mov.b64 	%rd6511, {%r4568, %r4567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4569}, %rd6482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4570,%dummy}, %rd6482;
	}
	shf.l.wrap.b32 	%r4571, %r4570, %r4569, 10;
	shf.l.wrap.b32 	%r4572, %r4569, %r4570, 10;
	mov.b64 	%rd6512, {%r4572, %r4571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4573}, %rd6488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4574,%dummy}, %rd6488;
	}
	shf.l.wrap.b32 	%r4575, %r4574, %r4573, 15;
	shf.l.wrap.b32 	%r4576, %r4573, %r4574, 15;
	mov.b64 	%rd6513, {%r4576, %r4575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4577,%dummy}, %rd6494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4578}, %rd6494;
	}
	shf.r.wrap.b32 	%r4579, %r4578, %r4577, 8;
	shf.r.wrap.b32 	%r4580, %r4577, %r4578, 8;
	mov.b64 	%rd6514, {%r4580, %r4579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4581,%dummy}, %rd6473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4582}, %rd6473;
	}
	shf.r.wrap.b32 	%r4583, %r4582, %r4581, 2;
	shf.r.wrap.b32 	%r4584, %r4581, %r4582, 2;
	mov.b64 	%rd6515, {%r4584, %r4583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4585,%dummy}, %rd6479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4586}, %rd6479;
	}
	shf.r.wrap.b32 	%r4587, %r4586, %r4585, 9;
	shf.r.wrap.b32 	%r4588, %r4585, %r4586, 9;
	mov.b64 	%rd6516, {%r4588, %r4587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4589,%dummy}, %rd6485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4590}, %rd6485;
	}
	shf.r.wrap.b32 	%r4591, %r4590, %r4589, 25;
	shf.r.wrap.b32 	%r4592, %r4589, %r4590, 25;
	mov.b64 	%rd6517, {%r4592, %r4591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4593,%dummy}, %rd6486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4594}, %rd6486;
	}
	shf.r.wrap.b32 	%r4595, %r4594, %r4593, 23;
	shf.r.wrap.b32 	%r4596, %r4593, %r4594, 23;
	mov.b64 	%rd6518, {%r4596, %r4595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4597}, %rd6492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd6492;
	}
	shf.l.wrap.b32 	%r4599, %r4598, %r4597, 2;
	shf.l.wrap.b32 	%r4600, %r4597, %r4598, 2;
	mov.b64 	%rd6519, {%r4600, %r4599};
	not.b64 	%rd6520, %rd6496;
	and.b64  	%rd6521, %rd6497, %rd6520;
	xor.b64  	%rd6522, %rd6521, %rd6471;
	not.b64 	%rd6523, %rd6497;
	and.b64  	%rd6524, %rd6498, %rd6523;
	xor.b64  	%rd6525, %rd6524, %rd6496;
	not.b64 	%rd6526, %rd6498;
	and.b64  	%rd6527, %rd6499, %rd6526;
	xor.b64  	%rd6528, %rd6527, %rd6497;
	not.b64 	%rd6529, %rd6499;
	and.b64  	%rd6530, %rd6471, %rd6529;
	xor.b64  	%rd6531, %rd6530, %rd6498;
	not.b64 	%rd6532, %rd6471;
	and.b64  	%rd6533, %rd6496, %rd6532;
	xor.b64  	%rd6534, %rd6533, %rd6499;
	not.b64 	%rd6535, %rd6501;
	and.b64  	%rd6536, %rd6502, %rd6535;
	xor.b64  	%rd6537, %rd6536, %rd6500;
	not.b64 	%rd6538, %rd6502;
	and.b64  	%rd6539, %rd6503, %rd6538;
	xor.b64  	%rd6540, %rd6539, %rd6501;
	not.b64 	%rd6541, %rd6503;
	and.b64  	%rd6542, %rd6504, %rd6541;
	xor.b64  	%rd6543, %rd6542, %rd6502;
	not.b64 	%rd6544, %rd6504;
	and.b64  	%rd6545, %rd6500, %rd6544;
	xor.b64  	%rd6546, %rd6545, %rd6503;
	not.b64 	%rd6547, %rd6500;
	and.b64  	%rd6548, %rd6501, %rd6547;
	xor.b64  	%rd6549, %rd6548, %rd6504;
	not.b64 	%rd6550, %rd6506;
	and.b64  	%rd6551, %rd6507, %rd6550;
	xor.b64  	%rd6552, %rd6551, %rd6505;
	not.b64 	%rd6553, %rd6507;
	and.b64  	%rd6554, %rd6508, %rd6553;
	xor.b64  	%rd6555, %rd6554, %rd6506;
	not.b64 	%rd6556, %rd6508;
	and.b64  	%rd6557, %rd6509, %rd6556;
	xor.b64  	%rd6558, %rd6557, %rd6507;
	not.b64 	%rd6559, %rd6509;
	and.b64  	%rd6560, %rd6505, %rd6559;
	xor.b64  	%rd6561, %rd6560, %rd6508;
	not.b64 	%rd6562, %rd6505;
	and.b64  	%rd6563, %rd6506, %rd6562;
	xor.b64  	%rd6564, %rd6563, %rd6509;
	not.b64 	%rd6565, %rd6511;
	and.b64  	%rd6566, %rd6512, %rd6565;
	xor.b64  	%rd6567, %rd6566, %rd6510;
	not.b64 	%rd6568, %rd6512;
	and.b64  	%rd6569, %rd6513, %rd6568;
	xor.b64  	%rd6570, %rd6569, %rd6511;
	not.b64 	%rd6571, %rd6513;
	and.b64  	%rd6572, %rd6514, %rd6571;
	xor.b64  	%rd6573, %rd6572, %rd6512;
	not.b64 	%rd6574, %rd6514;
	and.b64  	%rd6575, %rd6510, %rd6574;
	xor.b64  	%rd6576, %rd6575, %rd6513;
	not.b64 	%rd6577, %rd6510;
	and.b64  	%rd6578, %rd6511, %rd6577;
	xor.b64  	%rd6579, %rd6578, %rd6514;
	not.b64 	%rd6580, %rd6516;
	and.b64  	%rd6581, %rd6517, %rd6580;
	xor.b64  	%rd6582, %rd6581, %rd6515;
	not.b64 	%rd6583, %rd6517;
	and.b64  	%rd6584, %rd6518, %rd6583;
	xor.b64  	%rd6585, %rd6584, %rd6516;
	not.b64 	%rd6586, %rd6518;
	and.b64  	%rd6587, %rd6519, %rd6586;
	xor.b64  	%rd6588, %rd6587, %rd6517;
	not.b64 	%rd6589, %rd6519;
	and.b64  	%rd6590, %rd6515, %rd6589;
	xor.b64  	%rd6591, %rd6590, %rd6518;
	not.b64 	%rd6592, %rd6515;
	and.b64  	%rd6593, %rd6516, %rd6592;
	xor.b64  	%rd6594, %rd6593, %rd6519;
	xor.b64  	%rd6595, %rd6522, %rd30;
	xor.b64  	%rd6596, %rd6537, %rd6595;
	xor.b64  	%rd6597, %rd6596, %rd6552;
	xor.b64  	%rd6598, %rd6597, %rd6567;
	xor.b64  	%rd6599, %rd6598, %rd6582;
	xor.b64  	%rd6600, %rd6540, %rd6525;
	xor.b64  	%rd6601, %rd6600, %rd6555;
	xor.b64  	%rd6602, %rd6601, %rd6570;
	xor.b64  	%rd6603, %rd6602, %rd6585;
	xor.b64  	%rd6604, %rd6543, %rd6528;
	xor.b64  	%rd6605, %rd6604, %rd6558;
	xor.b64  	%rd6606, %rd6605, %rd6573;
	xor.b64  	%rd6607, %rd6606, %rd6588;
	xor.b64  	%rd6608, %rd6546, %rd6531;
	xor.b64  	%rd6609, %rd6608, %rd6561;
	xor.b64  	%rd6610, %rd6609, %rd6576;
	xor.b64  	%rd6611, %rd6610, %rd6591;
	xor.b64  	%rd6612, %rd6549, %rd6534;
	xor.b64  	%rd6613, %rd6612, %rd6564;
	xor.b64  	%rd6614, %rd6613, %rd6579;
	xor.b64  	%rd6615, %rd6614, %rd6594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4601}, %rd6603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4602,%dummy}, %rd6603;
	}
	shf.l.wrap.b32 	%r4603, %r4602, %r4601, 1;
	shf.l.wrap.b32 	%r4604, %r4601, %r4602, 1;
	mov.b64 	%rd6616, {%r4604, %r4603};
	xor.b64  	%rd6617, %rd6615, %rd6616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4605}, %rd6607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd6607;
	}
	shf.l.wrap.b32 	%r4607, %r4606, %r4605, 1;
	shf.l.wrap.b32 	%r4608, %r4605, %r4606, 1;
	mov.b64 	%rd6618, {%r4608, %r4607};
	xor.b64  	%rd6619, %rd6618, %rd6599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4609}, %rd6611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4610,%dummy}, %rd6611;
	}
	shf.l.wrap.b32 	%r4611, %r4610, %r4609, 1;
	shf.l.wrap.b32 	%r4612, %r4609, %r4610, 1;
	mov.b64 	%rd6620, {%r4612, %r4611};
	xor.b64  	%rd6621, %rd6620, %rd6603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4613}, %rd6615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4614,%dummy}, %rd6615;
	}
	shf.l.wrap.b32 	%r4615, %r4614, %r4613, 1;
	shf.l.wrap.b32 	%r4616, %r4613, %r4614, 1;
	mov.b64 	%rd6622, {%r4616, %r4615};
	xor.b64  	%rd6623, %rd6622, %rd6607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4617}, %rd6599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4618,%dummy}, %rd6599;
	}
	shf.l.wrap.b32 	%r4619, %r4618, %r4617, 1;
	shf.l.wrap.b32 	%r4620, %r4617, %r4618, 1;
	mov.b64 	%rd6624, {%r4620, %r4619};
	xor.b64  	%rd6625, %rd6611, %rd6624;
	xor.b64  	%rd6626, %rd6617, %rd6595;
	xor.b64  	%rd6627, %rd6619, %rd6525;
	xor.b64  	%rd6628, %rd6621, %rd6528;
	xor.b64  	%rd6629, %rd6623, %rd6531;
	xor.b64  	%rd6630, %rd6625, %rd6534;
	xor.b64  	%rd6631, %rd6617, %rd6537;
	xor.b64  	%rd6632, %rd6619, %rd6540;
	xor.b64  	%rd6633, %rd6621, %rd6543;
	xor.b64  	%rd6634, %rd6623, %rd6546;
	xor.b64  	%rd6635, %rd6625, %rd6549;
	xor.b64  	%rd6636, %rd6617, %rd6552;
	xor.b64  	%rd6637, %rd6619, %rd6555;
	xor.b64  	%rd6638, %rd6621, %rd6558;
	xor.b64  	%rd6639, %rd6623, %rd6561;
	xor.b64  	%rd6640, %rd6625, %rd6564;
	xor.b64  	%rd6641, %rd6617, %rd6567;
	xor.b64  	%rd6642, %rd6619, %rd6570;
	xor.b64  	%rd6643, %rd6621, %rd6573;
	xor.b64  	%rd6644, %rd6623, %rd6576;
	xor.b64  	%rd6645, %rd6625, %rd6579;
	xor.b64  	%rd6646, %rd6617, %rd6582;
	xor.b64  	%rd6647, %rd6619, %rd6585;
	xor.b64  	%rd6648, %rd6621, %rd6588;
	xor.b64  	%rd6649, %rd6623, %rd6591;
	xor.b64  	%rd6650, %rd6625, %rd6594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4621,%dummy}, %rd6632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4622}, %rd6632;
	}
	shf.r.wrap.b32 	%r4623, %r4622, %r4621, 20;
	shf.r.wrap.b32 	%r4624, %r4621, %r4622, 20;
	mov.b64 	%rd6651, {%r4624, %r4623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4625,%dummy}, %rd6638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4626}, %rd6638;
	}
	shf.r.wrap.b32 	%r4627, %r4626, %r4625, 21;
	shf.r.wrap.b32 	%r4628, %r4625, %r4626, 21;
	mov.b64 	%rd6652, {%r4628, %r4627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4629}, %rd6644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4630,%dummy}, %rd6644;
	}
	shf.l.wrap.b32 	%r4631, %r4630, %r4629, 21;
	shf.l.wrap.b32 	%r4632, %r4629, %r4630, 21;
	mov.b64 	%rd6653, {%r4632, %r4631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4633}, %rd6650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4634,%dummy}, %rd6650;
	}
	shf.l.wrap.b32 	%r4635, %r4634, %r4633, 14;
	shf.l.wrap.b32 	%r4636, %r4633, %r4634, 14;
	mov.b64 	%rd6654, {%r4636, %r4635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4637}, %rd6629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4638,%dummy}, %rd6629;
	}
	shf.l.wrap.b32 	%r4639, %r4638, %r4637, 28;
	shf.l.wrap.b32 	%r4640, %r4637, %r4638, 28;
	mov.b64 	%rd6655, {%r4640, %r4639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4641}, %rd6635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4642,%dummy}, %rd6635;
	}
	shf.l.wrap.b32 	%r4643, %r4642, %r4641, 20;
	shf.l.wrap.b32 	%r4644, %r4641, %r4642, 20;
	mov.b64 	%rd6656, {%r4644, %r4643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4645}, %rd6636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4646,%dummy}, %rd6636;
	}
	shf.l.wrap.b32 	%r4647, %r4646, %r4645, 3;
	shf.l.wrap.b32 	%r4648, %r4645, %r4646, 3;
	mov.b64 	%rd6657, {%r4648, %r4647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4649,%dummy}, %rd6642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4650}, %rd6642;
	}
	shf.r.wrap.b32 	%r4651, %r4650, %r4649, 19;
	shf.r.wrap.b32 	%r4652, %r4649, %r4650, 19;
	mov.b64 	%rd6658, {%r4652, %r4651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4653,%dummy}, %rd6648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4654}, %rd6648;
	}
	shf.r.wrap.b32 	%r4655, %r4654, %r4653, 3;
	shf.r.wrap.b32 	%r4656, %r4653, %r4654, 3;
	mov.b64 	%rd6659, {%r4656, %r4655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4657}, %rd6627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4658,%dummy}, %rd6627;
	}
	shf.l.wrap.b32 	%r4659, %r4658, %r4657, 1;
	shf.l.wrap.b32 	%r4660, %r4657, %r4658, 1;
	mov.b64 	%rd6660, {%r4660, %r4659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4661}, %rd6633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4662,%dummy}, %rd6633;
	}
	shf.l.wrap.b32 	%r4663, %r4662, %r4661, 6;
	shf.l.wrap.b32 	%r4664, %r4661, %r4662, 6;
	mov.b64 	%rd6661, {%r4664, %r4663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4665}, %rd6639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4666,%dummy}, %rd6639;
	}
	shf.l.wrap.b32 	%r4667, %r4666, %r4665, 25;
	shf.l.wrap.b32 	%r4668, %r4665, %r4666, 25;
	mov.b64 	%rd6662, {%r4668, %r4667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd6645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4670,%dummy}, %rd6645;
	}
	shf.l.wrap.b32 	%r4671, %r4670, %r4669, 8;
	shf.l.wrap.b32 	%r4672, %r4669, %r4670, 8;
	mov.b64 	%rd6663, {%r4672, %r4671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4673}, %rd6646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4674,%dummy}, %rd6646;
	}
	shf.l.wrap.b32 	%r4675, %r4674, %r4673, 18;
	shf.l.wrap.b32 	%r4676, %r4673, %r4674, 18;
	mov.b64 	%rd6664, {%r4676, %r4675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4677}, %rd6630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4678,%dummy}, %rd6630;
	}
	shf.l.wrap.b32 	%r4679, %r4678, %r4677, 27;
	shf.l.wrap.b32 	%r4680, %r4677, %r4678, 27;
	mov.b64 	%rd6665, {%r4680, %r4679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4681,%dummy}, %rd6631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4682}, %rd6631;
	}
	shf.r.wrap.b32 	%r4683, %r4682, %r4681, 28;
	shf.r.wrap.b32 	%r4684, %r4681, %r4682, 28;
	mov.b64 	%rd6666, {%r4684, %r4683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4685}, %rd6637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4686,%dummy}, %rd6637;
	}
	shf.l.wrap.b32 	%r4687, %r4686, %r4685, 10;
	shf.l.wrap.b32 	%r4688, %r4685, %r4686, 10;
	mov.b64 	%rd6667, {%r4688, %r4687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4689}, %rd6643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4690,%dummy}, %rd6643;
	}
	shf.l.wrap.b32 	%r4691, %r4690, %r4689, 15;
	shf.l.wrap.b32 	%r4692, %r4689, %r4690, 15;
	mov.b64 	%rd6668, {%r4692, %r4691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4693,%dummy}, %rd6649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4694}, %rd6649;
	}
	shf.r.wrap.b32 	%r4695, %r4694, %r4693, 8;
	shf.r.wrap.b32 	%r4696, %r4693, %r4694, 8;
	mov.b64 	%rd6669, {%r4696, %r4695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4697,%dummy}, %rd6628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4698}, %rd6628;
	}
	shf.r.wrap.b32 	%r4699, %r4698, %r4697, 2;
	shf.r.wrap.b32 	%r4700, %r4697, %r4698, 2;
	mov.b64 	%rd6670, {%r4700, %r4699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4701,%dummy}, %rd6634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4702}, %rd6634;
	}
	shf.r.wrap.b32 	%r4703, %r4702, %r4701, 9;
	shf.r.wrap.b32 	%r4704, %r4701, %r4702, 9;
	mov.b64 	%rd6671, {%r4704, %r4703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4705,%dummy}, %rd6640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4706}, %rd6640;
	}
	shf.r.wrap.b32 	%r4707, %r4706, %r4705, 25;
	shf.r.wrap.b32 	%r4708, %r4705, %r4706, 25;
	mov.b64 	%rd6672, {%r4708, %r4707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4709,%dummy}, %rd6641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4710}, %rd6641;
	}
	shf.r.wrap.b32 	%r4711, %r4710, %r4709, 23;
	shf.r.wrap.b32 	%r4712, %r4709, %r4710, 23;
	mov.b64 	%rd6673, {%r4712, %r4711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4713}, %rd6647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4714,%dummy}, %rd6647;
	}
	shf.l.wrap.b32 	%r4715, %r4714, %r4713, 2;
	shf.l.wrap.b32 	%r4716, %r4713, %r4714, 2;
	mov.b64 	%rd6674, {%r4716, %r4715};
	not.b64 	%rd6675, %rd6651;
	and.b64  	%rd6676, %rd6652, %rd6675;
	xor.b64  	%rd6677, %rd6676, %rd6626;
	not.b64 	%rd6678, %rd6652;
	and.b64  	%rd6679, %rd6653, %rd6678;
	xor.b64  	%rd6680, %rd6679, %rd6651;
	not.b64 	%rd6681, %rd6653;
	and.b64  	%rd6682, %rd6654, %rd6681;
	xor.b64  	%rd6683, %rd6682, %rd6652;
	not.b64 	%rd6684, %rd6654;
	and.b64  	%rd6685, %rd6626, %rd6684;
	xor.b64  	%rd6686, %rd6685, %rd6653;
	not.b64 	%rd6687, %rd6626;
	and.b64  	%rd6688, %rd6651, %rd6687;
	xor.b64  	%rd6689, %rd6688, %rd6654;
	not.b64 	%rd6690, %rd6656;
	and.b64  	%rd6691, %rd6657, %rd6690;
	xor.b64  	%rd6692, %rd6691, %rd6655;
	not.b64 	%rd6693, %rd6657;
	and.b64  	%rd6694, %rd6658, %rd6693;
	xor.b64  	%rd6695, %rd6694, %rd6656;
	not.b64 	%rd6696, %rd6658;
	and.b64  	%rd6697, %rd6659, %rd6696;
	xor.b64  	%rd6698, %rd6697, %rd6657;
	not.b64 	%rd6699, %rd6659;
	and.b64  	%rd6700, %rd6655, %rd6699;
	xor.b64  	%rd6701, %rd6700, %rd6658;
	not.b64 	%rd6702, %rd6655;
	and.b64  	%rd6703, %rd6656, %rd6702;
	xor.b64  	%rd6704, %rd6703, %rd6659;
	not.b64 	%rd6705, %rd6661;
	and.b64  	%rd6706, %rd6662, %rd6705;
	xor.b64  	%rd6707, %rd6706, %rd6660;
	not.b64 	%rd6708, %rd6662;
	and.b64  	%rd6709, %rd6663, %rd6708;
	xor.b64  	%rd6710, %rd6709, %rd6661;
	not.b64 	%rd6711, %rd6663;
	and.b64  	%rd6712, %rd6664, %rd6711;
	xor.b64  	%rd6713, %rd6712, %rd6662;
	not.b64 	%rd6714, %rd6664;
	and.b64  	%rd6715, %rd6660, %rd6714;
	xor.b64  	%rd6716, %rd6715, %rd6663;
	not.b64 	%rd6717, %rd6660;
	and.b64  	%rd6718, %rd6661, %rd6717;
	xor.b64  	%rd6719, %rd6718, %rd6664;
	not.b64 	%rd6720, %rd6666;
	and.b64  	%rd6721, %rd6667, %rd6720;
	xor.b64  	%rd6722, %rd6721, %rd6665;
	not.b64 	%rd6723, %rd6667;
	and.b64  	%rd6724, %rd6668, %rd6723;
	xor.b64  	%rd6725, %rd6724, %rd6666;
	not.b64 	%rd6726, %rd6668;
	and.b64  	%rd6727, %rd6669, %rd6726;
	xor.b64  	%rd6728, %rd6727, %rd6667;
	not.b64 	%rd6729, %rd6669;
	and.b64  	%rd6730, %rd6665, %rd6729;
	xor.b64  	%rd6731, %rd6730, %rd6668;
	not.b64 	%rd6732, %rd6665;
	and.b64  	%rd6733, %rd6666, %rd6732;
	xor.b64  	%rd6734, %rd6733, %rd6669;
	not.b64 	%rd6735, %rd6671;
	and.b64  	%rd6736, %rd6672, %rd6735;
	xor.b64  	%rd6737, %rd6736, %rd6670;
	not.b64 	%rd6738, %rd6672;
	and.b64  	%rd6739, %rd6673, %rd6738;
	xor.b64  	%rd6740, %rd6739, %rd6671;
	not.b64 	%rd6741, %rd6673;
	and.b64  	%rd6742, %rd6674, %rd6741;
	xor.b64  	%rd6743, %rd6742, %rd6672;
	not.b64 	%rd6744, %rd6674;
	and.b64  	%rd6745, %rd6670, %rd6744;
	xor.b64  	%rd6746, %rd6745, %rd6673;
	not.b64 	%rd6747, %rd6670;
	and.b64  	%rd6748, %rd6671, %rd6747;
	xor.b64  	%rd6749, %rd6748, %rd6674;
	xor.b64  	%rd6750, %rd6677, %rd31;
	xor.b64  	%rd6751, %rd6692, %rd6750;
	xor.b64  	%rd6752, %rd6751, %rd6707;
	xor.b64  	%rd6753, %rd6752, %rd6722;
	xor.b64  	%rd6754, %rd6753, %rd6737;
	xor.b64  	%rd6755, %rd6695, %rd6680;
	xor.b64  	%rd6756, %rd6755, %rd6710;
	xor.b64  	%rd6757, %rd6756, %rd6725;
	xor.b64  	%rd6758, %rd6757, %rd6740;
	xor.b64  	%rd6759, %rd6698, %rd6683;
	xor.b64  	%rd6760, %rd6759, %rd6713;
	xor.b64  	%rd6761, %rd6760, %rd6728;
	xor.b64  	%rd6762, %rd6761, %rd6743;
	xor.b64  	%rd6763, %rd6701, %rd6686;
	xor.b64  	%rd6764, %rd6763, %rd6716;
	xor.b64  	%rd6765, %rd6764, %rd6731;
	xor.b64  	%rd6766, %rd6765, %rd6746;
	xor.b64  	%rd6767, %rd6704, %rd6689;
	xor.b64  	%rd6768, %rd6767, %rd6719;
	xor.b64  	%rd6769, %rd6768, %rd6734;
	xor.b64  	%rd6770, %rd6769, %rd6749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4717}, %rd6758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4718,%dummy}, %rd6758;
	}
	shf.l.wrap.b32 	%r4719, %r4718, %r4717, 1;
	shf.l.wrap.b32 	%r4720, %r4717, %r4718, 1;
	mov.b64 	%rd6771, {%r4720, %r4719};
	xor.b64  	%rd6772, %rd6770, %rd6771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4721}, %rd6762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4722,%dummy}, %rd6762;
	}
	shf.l.wrap.b32 	%r4723, %r4722, %r4721, 1;
	shf.l.wrap.b32 	%r4724, %r4721, %r4722, 1;
	mov.b64 	%rd6773, {%r4724, %r4723};
	xor.b64  	%rd6774, %rd6773, %rd6754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd6766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4726,%dummy}, %rd6766;
	}
	shf.l.wrap.b32 	%r4727, %r4726, %r4725, 1;
	shf.l.wrap.b32 	%r4728, %r4725, %r4726, 1;
	mov.b64 	%rd6775, {%r4728, %r4727};
	xor.b64  	%rd6776, %rd6775, %rd6758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4729}, %rd6770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4730,%dummy}, %rd6770;
	}
	shf.l.wrap.b32 	%r4731, %r4730, %r4729, 1;
	shf.l.wrap.b32 	%r4732, %r4729, %r4730, 1;
	mov.b64 	%rd6777, {%r4732, %r4731};
	xor.b64  	%rd6778, %rd6777, %rd6762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4733}, %rd6754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4734,%dummy}, %rd6754;
	}
	shf.l.wrap.b32 	%r4735, %r4734, %r4733, 1;
	shf.l.wrap.b32 	%r4736, %r4733, %r4734, 1;
	mov.b64 	%rd6779, {%r4736, %r4735};
	xor.b64  	%rd6780, %rd6766, %rd6779;
	xor.b64  	%rd6781, %rd6772, %rd6750;
	xor.b64  	%rd6782, %rd6774, %rd6680;
	xor.b64  	%rd6783, %rd6776, %rd6683;
	xor.b64  	%rd6784, %rd6778, %rd6686;
	xor.b64  	%rd6785, %rd6780, %rd6689;
	xor.b64  	%rd6786, %rd6772, %rd6692;
	xor.b64  	%rd6787, %rd6774, %rd6695;
	xor.b64  	%rd6788, %rd6776, %rd6698;
	xor.b64  	%rd6789, %rd6778, %rd6701;
	xor.b64  	%rd6790, %rd6780, %rd6704;
	xor.b64  	%rd6791, %rd6772, %rd6707;
	xor.b64  	%rd6792, %rd6774, %rd6710;
	xor.b64  	%rd6793, %rd6776, %rd6713;
	xor.b64  	%rd6794, %rd6778, %rd6716;
	xor.b64  	%rd6795, %rd6780, %rd6719;
	xor.b64  	%rd6796, %rd6772, %rd6722;
	xor.b64  	%rd6797, %rd6774, %rd6725;
	xor.b64  	%rd6798, %rd6776, %rd6728;
	xor.b64  	%rd6799, %rd6778, %rd6731;
	xor.b64  	%rd6800, %rd6780, %rd6734;
	xor.b64  	%rd6801, %rd6772, %rd6737;
	xor.b64  	%rd6802, %rd6774, %rd6740;
	xor.b64  	%rd6803, %rd6776, %rd6743;
	xor.b64  	%rd6804, %rd6778, %rd6746;
	xor.b64  	%rd6805, %rd6780, %rd6749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4737,%dummy}, %rd6787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4738}, %rd6787;
	}
	shf.r.wrap.b32 	%r4739, %r4738, %r4737, 20;
	shf.r.wrap.b32 	%r4740, %r4737, %r4738, 20;
	mov.b64 	%rd6806, {%r4740, %r4739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4741,%dummy}, %rd6793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4742}, %rd6793;
	}
	shf.r.wrap.b32 	%r4743, %r4742, %r4741, 21;
	shf.r.wrap.b32 	%r4744, %r4741, %r4742, 21;
	mov.b64 	%rd6807, {%r4744, %r4743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4745}, %rd6799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4746,%dummy}, %rd6799;
	}
	shf.l.wrap.b32 	%r4747, %r4746, %r4745, 21;
	shf.l.wrap.b32 	%r4748, %r4745, %r4746, 21;
	mov.b64 	%rd6808, {%r4748, %r4747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4749}, %rd6805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4750,%dummy}, %rd6805;
	}
	shf.l.wrap.b32 	%r4751, %r4750, %r4749, 14;
	shf.l.wrap.b32 	%r4752, %r4749, %r4750, 14;
	mov.b64 	%rd6809, {%r4752, %r4751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4753}, %rd6784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4754,%dummy}, %rd6784;
	}
	shf.l.wrap.b32 	%r4755, %r4754, %r4753, 28;
	shf.l.wrap.b32 	%r4756, %r4753, %r4754, 28;
	mov.b64 	%rd6810, {%r4756, %r4755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4757}, %rd6790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4758,%dummy}, %rd6790;
	}
	shf.l.wrap.b32 	%r4759, %r4758, %r4757, 20;
	shf.l.wrap.b32 	%r4760, %r4757, %r4758, 20;
	mov.b64 	%rd6811, {%r4760, %r4759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4761}, %rd6791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4762,%dummy}, %rd6791;
	}
	shf.l.wrap.b32 	%r4763, %r4762, %r4761, 3;
	shf.l.wrap.b32 	%r4764, %r4761, %r4762, 3;
	mov.b64 	%rd6812, {%r4764, %r4763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4765,%dummy}, %rd6797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4766}, %rd6797;
	}
	shf.r.wrap.b32 	%r4767, %r4766, %r4765, 19;
	shf.r.wrap.b32 	%r4768, %r4765, %r4766, 19;
	mov.b64 	%rd6813, {%r4768, %r4767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4769,%dummy}, %rd6803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4770}, %rd6803;
	}
	shf.r.wrap.b32 	%r4771, %r4770, %r4769, 3;
	shf.r.wrap.b32 	%r4772, %r4769, %r4770, 3;
	mov.b64 	%rd6814, {%r4772, %r4771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4773}, %rd6782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4774,%dummy}, %rd6782;
	}
	shf.l.wrap.b32 	%r4775, %r4774, %r4773, 1;
	shf.l.wrap.b32 	%r4776, %r4773, %r4774, 1;
	mov.b64 	%rd6815, {%r4776, %r4775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4777}, %rd6788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4778,%dummy}, %rd6788;
	}
	shf.l.wrap.b32 	%r4779, %r4778, %r4777, 6;
	shf.l.wrap.b32 	%r4780, %r4777, %r4778, 6;
	mov.b64 	%rd6816, {%r4780, %r4779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4781}, %rd6794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4782,%dummy}, %rd6794;
	}
	shf.l.wrap.b32 	%r4783, %r4782, %r4781, 25;
	shf.l.wrap.b32 	%r4784, %r4781, %r4782, 25;
	mov.b64 	%rd6817, {%r4784, %r4783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd6800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4786,%dummy}, %rd6800;
	}
	shf.l.wrap.b32 	%r4787, %r4786, %r4785, 8;
	shf.l.wrap.b32 	%r4788, %r4785, %r4786, 8;
	mov.b64 	%rd6818, {%r4788, %r4787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4789}, %rd6801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4790,%dummy}, %rd6801;
	}
	shf.l.wrap.b32 	%r4791, %r4790, %r4789, 18;
	shf.l.wrap.b32 	%r4792, %r4789, %r4790, 18;
	mov.b64 	%rd6819, {%r4792, %r4791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4793}, %rd6785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4794,%dummy}, %rd6785;
	}
	shf.l.wrap.b32 	%r4795, %r4794, %r4793, 27;
	shf.l.wrap.b32 	%r4796, %r4793, %r4794, 27;
	mov.b64 	%rd6820, {%r4796, %r4795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4797,%dummy}, %rd6786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4798}, %rd6786;
	}
	shf.r.wrap.b32 	%r4799, %r4798, %r4797, 28;
	shf.r.wrap.b32 	%r4800, %r4797, %r4798, 28;
	mov.b64 	%rd6821, {%r4800, %r4799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4801}, %rd6792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4802,%dummy}, %rd6792;
	}
	shf.l.wrap.b32 	%r4803, %r4802, %r4801, 10;
	shf.l.wrap.b32 	%r4804, %r4801, %r4802, 10;
	mov.b64 	%rd6822, {%r4804, %r4803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4805}, %rd6798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4806,%dummy}, %rd6798;
	}
	shf.l.wrap.b32 	%r4807, %r4806, %r4805, 15;
	shf.l.wrap.b32 	%r4808, %r4805, %r4806, 15;
	mov.b64 	%rd6823, {%r4808, %r4807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4809,%dummy}, %rd6804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4810}, %rd6804;
	}
	shf.r.wrap.b32 	%r4811, %r4810, %r4809, 8;
	shf.r.wrap.b32 	%r4812, %r4809, %r4810, 8;
	mov.b64 	%rd6824, {%r4812, %r4811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4813,%dummy}, %rd6783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4814}, %rd6783;
	}
	shf.r.wrap.b32 	%r4815, %r4814, %r4813, 2;
	shf.r.wrap.b32 	%r4816, %r4813, %r4814, 2;
	mov.b64 	%rd6825, {%r4816, %r4815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4817,%dummy}, %rd6789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4818}, %rd6789;
	}
	shf.r.wrap.b32 	%r4819, %r4818, %r4817, 9;
	shf.r.wrap.b32 	%r4820, %r4817, %r4818, 9;
	mov.b64 	%rd6826, {%r4820, %r4819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4821,%dummy}, %rd6795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4822}, %rd6795;
	}
	shf.r.wrap.b32 	%r4823, %r4822, %r4821, 25;
	shf.r.wrap.b32 	%r4824, %r4821, %r4822, 25;
	mov.b64 	%rd6827, {%r4824, %r4823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4825,%dummy}, %rd6796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4826}, %rd6796;
	}
	shf.r.wrap.b32 	%r4827, %r4826, %r4825, 23;
	shf.r.wrap.b32 	%r4828, %r4825, %r4826, 23;
	mov.b64 	%rd6828, {%r4828, %r4827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4829}, %rd6802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4830,%dummy}, %rd6802;
	}
	shf.l.wrap.b32 	%r4831, %r4830, %r4829, 2;
	shf.l.wrap.b32 	%r4832, %r4829, %r4830, 2;
	mov.b64 	%rd6829, {%r4832, %r4831};
	not.b64 	%rd6830, %rd6806;
	and.b64  	%rd6831, %rd6807, %rd6830;
	xor.b64  	%rd6832, %rd6831, %rd6781;
	not.b64 	%rd6833, %rd6807;
	and.b64  	%rd6834, %rd6808, %rd6833;
	xor.b64  	%rd6835, %rd6834, %rd6806;
	not.b64 	%rd6836, %rd6808;
	and.b64  	%rd6837, %rd6809, %rd6836;
	xor.b64  	%rd6838, %rd6837, %rd6807;
	not.b64 	%rd6839, %rd6809;
	and.b64  	%rd6840, %rd6781, %rd6839;
	xor.b64  	%rd6841, %rd6840, %rd6808;
	not.b64 	%rd6842, %rd6781;
	and.b64  	%rd6843, %rd6806, %rd6842;
	xor.b64  	%rd6844, %rd6843, %rd6809;
	not.b64 	%rd6845, %rd6811;
	and.b64  	%rd6846, %rd6812, %rd6845;
	xor.b64  	%rd6847, %rd6846, %rd6810;
	not.b64 	%rd6848, %rd6812;
	and.b64  	%rd6849, %rd6813, %rd6848;
	xor.b64  	%rd6850, %rd6849, %rd6811;
	not.b64 	%rd6851, %rd6813;
	and.b64  	%rd6852, %rd6814, %rd6851;
	xor.b64  	%rd6853, %rd6852, %rd6812;
	not.b64 	%rd6854, %rd6814;
	and.b64  	%rd6855, %rd6810, %rd6854;
	xor.b64  	%rd6856, %rd6855, %rd6813;
	not.b64 	%rd6857, %rd6810;
	and.b64  	%rd6858, %rd6811, %rd6857;
	xor.b64  	%rd6859, %rd6858, %rd6814;
	not.b64 	%rd6860, %rd6816;
	and.b64  	%rd6861, %rd6817, %rd6860;
	xor.b64  	%rd6862, %rd6861, %rd6815;
	not.b64 	%rd6863, %rd6817;
	and.b64  	%rd6864, %rd6818, %rd6863;
	xor.b64  	%rd6865, %rd6864, %rd6816;
	not.b64 	%rd6866, %rd6818;
	and.b64  	%rd6867, %rd6819, %rd6866;
	xor.b64  	%rd6868, %rd6867, %rd6817;
	not.b64 	%rd6869, %rd6819;
	and.b64  	%rd6870, %rd6815, %rd6869;
	xor.b64  	%rd6871, %rd6870, %rd6818;
	not.b64 	%rd6872, %rd6815;
	and.b64  	%rd6873, %rd6816, %rd6872;
	xor.b64  	%rd6874, %rd6873, %rd6819;
	not.b64 	%rd6875, %rd6821;
	and.b64  	%rd6876, %rd6822, %rd6875;
	xor.b64  	%rd6877, %rd6876, %rd6820;
	not.b64 	%rd6878, %rd6822;
	and.b64  	%rd6879, %rd6823, %rd6878;
	xor.b64  	%rd6880, %rd6879, %rd6821;
	not.b64 	%rd6881, %rd6823;
	and.b64  	%rd6882, %rd6824, %rd6881;
	xor.b64  	%rd6883, %rd6882, %rd6822;
	not.b64 	%rd6884, %rd6824;
	and.b64  	%rd6885, %rd6820, %rd6884;
	xor.b64  	%rd6886, %rd6885, %rd6823;
	not.b64 	%rd6887, %rd6820;
	and.b64  	%rd6888, %rd6821, %rd6887;
	xor.b64  	%rd6889, %rd6888, %rd6824;
	not.b64 	%rd6890, %rd6826;
	and.b64  	%rd6891, %rd6827, %rd6890;
	xor.b64  	%rd6892, %rd6891, %rd6825;
	not.b64 	%rd6893, %rd6827;
	and.b64  	%rd6894, %rd6828, %rd6893;
	xor.b64  	%rd6895, %rd6894, %rd6826;
	not.b64 	%rd6896, %rd6828;
	and.b64  	%rd6897, %rd6829, %rd6896;
	xor.b64  	%rd6898, %rd6897, %rd6827;
	not.b64 	%rd6899, %rd6829;
	and.b64  	%rd6900, %rd6825, %rd6899;
	xor.b64  	%rd6901, %rd6900, %rd6828;
	not.b64 	%rd6902, %rd6825;
	and.b64  	%rd6903, %rd6826, %rd6902;
	xor.b64  	%rd6904, %rd6903, %rd6829;
	xor.b64  	%rd6905, %rd6832, %rd32;
	xor.b64  	%rd6906, %rd6847, %rd6905;
	xor.b64  	%rd6907, %rd6906, %rd6862;
	xor.b64  	%rd6908, %rd6907, %rd6877;
	xor.b64  	%rd6909, %rd6908, %rd6892;
	xor.b64  	%rd6910, %rd6850, %rd6835;
	xor.b64  	%rd6911, %rd6910, %rd6865;
	xor.b64  	%rd6912, %rd6911, %rd6880;
	xor.b64  	%rd6913, %rd6912, %rd6895;
	xor.b64  	%rd6914, %rd6853, %rd6838;
	xor.b64  	%rd6915, %rd6914, %rd6868;
	xor.b64  	%rd6916, %rd6915, %rd6883;
	xor.b64  	%rd6917, %rd6916, %rd6898;
	xor.b64  	%rd6918, %rd6856, %rd6841;
	xor.b64  	%rd6919, %rd6918, %rd6871;
	xor.b64  	%rd6920, %rd6919, %rd6886;
	xor.b64  	%rd6921, %rd6920, %rd6901;
	xor.b64  	%rd6922, %rd6859, %rd6844;
	xor.b64  	%rd6923, %rd6922, %rd6874;
	xor.b64  	%rd6924, %rd6923, %rd6889;
	xor.b64  	%rd6925, %rd6924, %rd6904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4833}, %rd6913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4834,%dummy}, %rd6913;
	}
	shf.l.wrap.b32 	%r4835, %r4834, %r4833, 1;
	shf.l.wrap.b32 	%r4836, %r4833, %r4834, 1;
	mov.b64 	%rd6926, {%r4836, %r4835};
	xor.b64  	%rd6927, %rd6925, %rd6926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4837}, %rd6917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4838,%dummy}, %rd6917;
	}
	shf.l.wrap.b32 	%r4839, %r4838, %r4837, 1;
	shf.l.wrap.b32 	%r4840, %r4837, %r4838, 1;
	mov.b64 	%rd6928, {%r4840, %r4839};
	xor.b64  	%rd6929, %rd6928, %rd6909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4841}, %rd6921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4842,%dummy}, %rd6921;
	}
	shf.l.wrap.b32 	%r4843, %r4842, %r4841, 1;
	shf.l.wrap.b32 	%r4844, %r4841, %r4842, 1;
	mov.b64 	%rd6930, {%r4844, %r4843};
	xor.b64  	%rd6931, %rd6930, %rd6913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4845}, %rd6925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4846,%dummy}, %rd6925;
	}
	shf.l.wrap.b32 	%r4847, %r4846, %r4845, 1;
	shf.l.wrap.b32 	%r4848, %r4845, %r4846, 1;
	mov.b64 	%rd6932, {%r4848, %r4847};
	xor.b64  	%rd6933, %rd6932, %rd6917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4849}, %rd6909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4850,%dummy}, %rd6909;
	}
	shf.l.wrap.b32 	%r4851, %r4850, %r4849, 1;
	shf.l.wrap.b32 	%r4852, %r4849, %r4850, 1;
	mov.b64 	%rd6934, {%r4852, %r4851};
	xor.b64  	%rd6935, %rd6921, %rd6934;
	xor.b64  	%rd6936, %rd6927, %rd6905;
	xor.b64  	%rd6937, %rd6929, %rd6835;
	xor.b64  	%rd6938, %rd6931, %rd6838;
	xor.b64  	%rd6939, %rd6933, %rd6841;
	xor.b64  	%rd6940, %rd6935, %rd6844;
	xor.b64  	%rd6941, %rd6927, %rd6847;
	xor.b64  	%rd6942, %rd6929, %rd6850;
	xor.b64  	%rd6943, %rd6931, %rd6853;
	xor.b64  	%rd6944, %rd6933, %rd6856;
	xor.b64  	%rd6945, %rd6935, %rd6859;
	xor.b64  	%rd6946, %rd6927, %rd6862;
	xor.b64  	%rd6947, %rd6929, %rd6865;
	xor.b64  	%rd6948, %rd6931, %rd6868;
	xor.b64  	%rd6949, %rd6933, %rd6871;
	xor.b64  	%rd6950, %rd6935, %rd6874;
	xor.b64  	%rd6951, %rd6927, %rd6877;
	xor.b64  	%rd6952, %rd6929, %rd6880;
	xor.b64  	%rd6953, %rd6931, %rd6883;
	xor.b64  	%rd6954, %rd6933, %rd6886;
	xor.b64  	%rd6955, %rd6935, %rd6889;
	xor.b64  	%rd6956, %rd6927, %rd6892;
	xor.b64  	%rd6957, %rd6929, %rd6895;
	xor.b64  	%rd6958, %rd6931, %rd6898;
	xor.b64  	%rd6959, %rd6933, %rd6901;
	xor.b64  	%rd6960, %rd6935, %rd6904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4853,%dummy}, %rd6942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4854}, %rd6942;
	}
	shf.r.wrap.b32 	%r4855, %r4854, %r4853, 20;
	shf.r.wrap.b32 	%r4856, %r4853, %r4854, 20;
	mov.b64 	%rd6961, {%r4856, %r4855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4857,%dummy}, %rd6948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4858}, %rd6948;
	}
	shf.r.wrap.b32 	%r4859, %r4858, %r4857, 21;
	shf.r.wrap.b32 	%r4860, %r4857, %r4858, 21;
	mov.b64 	%rd6962, {%r4860, %r4859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4861}, %rd6954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4862,%dummy}, %rd6954;
	}
	shf.l.wrap.b32 	%r4863, %r4862, %r4861, 21;
	shf.l.wrap.b32 	%r4864, %r4861, %r4862, 21;
	mov.b64 	%rd6963, {%r4864, %r4863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4865}, %rd6960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4866,%dummy}, %rd6960;
	}
	shf.l.wrap.b32 	%r4867, %r4866, %r4865, 14;
	shf.l.wrap.b32 	%r4868, %r4865, %r4866, 14;
	mov.b64 	%rd6964, {%r4868, %r4867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4869}, %rd6939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4870,%dummy}, %rd6939;
	}
	shf.l.wrap.b32 	%r4871, %r4870, %r4869, 28;
	shf.l.wrap.b32 	%r4872, %r4869, %r4870, 28;
	mov.b64 	%rd6965, {%r4872, %r4871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd6945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4874,%dummy}, %rd6945;
	}
	shf.l.wrap.b32 	%r4875, %r4874, %r4873, 20;
	shf.l.wrap.b32 	%r4876, %r4873, %r4874, 20;
	mov.b64 	%rd6966, {%r4876, %r4875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4877}, %rd6946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4878,%dummy}, %rd6946;
	}
	shf.l.wrap.b32 	%r4879, %r4878, %r4877, 3;
	shf.l.wrap.b32 	%r4880, %r4877, %r4878, 3;
	mov.b64 	%rd6967, {%r4880, %r4879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4881,%dummy}, %rd6952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4882}, %rd6952;
	}
	shf.r.wrap.b32 	%r4883, %r4882, %r4881, 19;
	shf.r.wrap.b32 	%r4884, %r4881, %r4882, 19;
	mov.b64 	%rd6968, {%r4884, %r4883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4885,%dummy}, %rd6958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4886}, %rd6958;
	}
	shf.r.wrap.b32 	%r4887, %r4886, %r4885, 3;
	shf.r.wrap.b32 	%r4888, %r4885, %r4886, 3;
	mov.b64 	%rd6969, {%r4888, %r4887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4889}, %rd6937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4890,%dummy}, %rd6937;
	}
	shf.l.wrap.b32 	%r4891, %r4890, %r4889, 1;
	shf.l.wrap.b32 	%r4892, %r4889, %r4890, 1;
	mov.b64 	%rd6970, {%r4892, %r4891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4893}, %rd6943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4894,%dummy}, %rd6943;
	}
	shf.l.wrap.b32 	%r4895, %r4894, %r4893, 6;
	shf.l.wrap.b32 	%r4896, %r4893, %r4894, 6;
	mov.b64 	%rd6971, {%r4896, %r4895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd6949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4898,%dummy}, %rd6949;
	}
	shf.l.wrap.b32 	%r4899, %r4898, %r4897, 25;
	shf.l.wrap.b32 	%r4900, %r4897, %r4898, 25;
	mov.b64 	%rd6972, {%r4900, %r4899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4901}, %rd6955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4902,%dummy}, %rd6955;
	}
	shf.l.wrap.b32 	%r4903, %r4902, %r4901, 8;
	shf.l.wrap.b32 	%r4904, %r4901, %r4902, 8;
	mov.b64 	%rd6973, {%r4904, %r4903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4905}, %rd6956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4906,%dummy}, %rd6956;
	}
	shf.l.wrap.b32 	%r4907, %r4906, %r4905, 18;
	shf.l.wrap.b32 	%r4908, %r4905, %r4906, 18;
	mov.b64 	%rd6974, {%r4908, %r4907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4909}, %rd6940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4910,%dummy}, %rd6940;
	}
	shf.l.wrap.b32 	%r4911, %r4910, %r4909, 27;
	shf.l.wrap.b32 	%r4912, %r4909, %r4910, 27;
	mov.b64 	%rd6975, {%r4912, %r4911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4913,%dummy}, %rd6941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4914}, %rd6941;
	}
	shf.r.wrap.b32 	%r4915, %r4914, %r4913, 28;
	shf.r.wrap.b32 	%r4916, %r4913, %r4914, 28;
	mov.b64 	%rd6976, {%r4916, %r4915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4917}, %rd6947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4918,%dummy}, %rd6947;
	}
	shf.l.wrap.b32 	%r4919, %r4918, %r4917, 10;
	shf.l.wrap.b32 	%r4920, %r4917, %r4918, 10;
	mov.b64 	%rd6977, {%r4920, %r4919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4922,%dummy}, %rd6953;
	}
	shf.l.wrap.b32 	%r4923, %r4922, %r4921, 15;
	shf.l.wrap.b32 	%r4924, %r4921, %r4922, 15;
	mov.b64 	%rd6978, {%r4924, %r4923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4925,%dummy}, %rd6959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4926}, %rd6959;
	}
	shf.r.wrap.b32 	%r4927, %r4926, %r4925, 8;
	shf.r.wrap.b32 	%r4928, %r4925, %r4926, 8;
	mov.b64 	%rd6979, {%r4928, %r4927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4929,%dummy}, %rd6938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4930}, %rd6938;
	}
	shf.r.wrap.b32 	%r4931, %r4930, %r4929, 2;
	shf.r.wrap.b32 	%r4932, %r4929, %r4930, 2;
	mov.b64 	%rd6980, {%r4932, %r4931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4933,%dummy}, %rd6944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4934}, %rd6944;
	}
	shf.r.wrap.b32 	%r4935, %r4934, %r4933, 9;
	shf.r.wrap.b32 	%r4936, %r4933, %r4934, 9;
	mov.b64 	%rd6981, {%r4936, %r4935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4937,%dummy}, %rd6950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4938}, %rd6950;
	}
	shf.r.wrap.b32 	%r4939, %r4938, %r4937, 25;
	shf.r.wrap.b32 	%r4940, %r4937, %r4938, 25;
	mov.b64 	%rd6982, {%r4940, %r4939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4941,%dummy}, %rd6951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4942}, %rd6951;
	}
	shf.r.wrap.b32 	%r4943, %r4942, %r4941, 23;
	shf.r.wrap.b32 	%r4944, %r4941, %r4942, 23;
	mov.b64 	%rd6983, {%r4944, %r4943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4945}, %rd6957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4946,%dummy}, %rd6957;
	}
	shf.l.wrap.b32 	%r4947, %r4946, %r4945, 2;
	shf.l.wrap.b32 	%r4948, %r4945, %r4946, 2;
	mov.b64 	%rd6984, {%r4948, %r4947};
	not.b64 	%rd6985, %rd6961;
	and.b64  	%rd6986, %rd6962, %rd6985;
	xor.b64  	%rd6987, %rd6986, %rd6936;
	not.b64 	%rd6988, %rd6962;
	and.b64  	%rd6989, %rd6963, %rd6988;
	xor.b64  	%rd6990, %rd6989, %rd6961;
	not.b64 	%rd6991, %rd6963;
	and.b64  	%rd6992, %rd6964, %rd6991;
	xor.b64  	%rd6993, %rd6992, %rd6962;
	not.b64 	%rd6994, %rd6964;
	and.b64  	%rd6995, %rd6936, %rd6994;
	xor.b64  	%rd6996, %rd6995, %rd6963;
	not.b64 	%rd6997, %rd6936;
	and.b64  	%rd6998, %rd6961, %rd6997;
	xor.b64  	%rd6999, %rd6998, %rd6964;
	not.b64 	%rd7000, %rd6966;
	and.b64  	%rd7001, %rd6967, %rd7000;
	xor.b64  	%rd7002, %rd7001, %rd6965;
	not.b64 	%rd7003, %rd6967;
	and.b64  	%rd7004, %rd6968, %rd7003;
	xor.b64  	%rd7005, %rd7004, %rd6966;
	not.b64 	%rd7006, %rd6968;
	and.b64  	%rd7007, %rd6969, %rd7006;
	xor.b64  	%rd7008, %rd7007, %rd6967;
	not.b64 	%rd7009, %rd6969;
	and.b64  	%rd7010, %rd6965, %rd7009;
	xor.b64  	%rd7011, %rd7010, %rd6968;
	not.b64 	%rd7012, %rd6965;
	and.b64  	%rd7013, %rd6966, %rd7012;
	xor.b64  	%rd7014, %rd7013, %rd6969;
	not.b64 	%rd7015, %rd6971;
	and.b64  	%rd7016, %rd6972, %rd7015;
	xor.b64  	%rd7017, %rd7016, %rd6970;
	not.b64 	%rd7018, %rd6972;
	and.b64  	%rd7019, %rd6973, %rd7018;
	xor.b64  	%rd7020, %rd7019, %rd6971;
	not.b64 	%rd7021, %rd6973;
	and.b64  	%rd7022, %rd6974, %rd7021;
	xor.b64  	%rd7023, %rd7022, %rd6972;
	not.b64 	%rd7024, %rd6974;
	and.b64  	%rd7025, %rd6970, %rd7024;
	xor.b64  	%rd7026, %rd7025, %rd6973;
	not.b64 	%rd7027, %rd6970;
	and.b64  	%rd7028, %rd6971, %rd7027;
	xor.b64  	%rd7029, %rd7028, %rd6974;
	not.b64 	%rd7030, %rd6976;
	and.b64  	%rd7031, %rd6977, %rd7030;
	xor.b64  	%rd7032, %rd7031, %rd6975;
	not.b64 	%rd7033, %rd6977;
	and.b64  	%rd7034, %rd6978, %rd7033;
	xor.b64  	%rd7035, %rd7034, %rd6976;
	not.b64 	%rd7036, %rd6978;
	and.b64  	%rd7037, %rd6979, %rd7036;
	xor.b64  	%rd7038, %rd7037, %rd6977;
	not.b64 	%rd7039, %rd6979;
	and.b64  	%rd7040, %rd6975, %rd7039;
	xor.b64  	%rd7041, %rd7040, %rd6978;
	not.b64 	%rd7042, %rd6975;
	and.b64  	%rd7043, %rd6976, %rd7042;
	xor.b64  	%rd7044, %rd7043, %rd6979;
	not.b64 	%rd7045, %rd6981;
	and.b64  	%rd7046, %rd6982, %rd7045;
	xor.b64  	%rd7047, %rd7046, %rd6980;
	not.b64 	%rd7048, %rd6982;
	and.b64  	%rd7049, %rd6983, %rd7048;
	xor.b64  	%rd7050, %rd7049, %rd6981;
	not.b64 	%rd7051, %rd6983;
	and.b64  	%rd7052, %rd6984, %rd7051;
	xor.b64  	%rd7053, %rd7052, %rd6982;
	not.b64 	%rd7054, %rd6984;
	and.b64  	%rd7055, %rd6980, %rd7054;
	xor.b64  	%rd7056, %rd7055, %rd6983;
	not.b64 	%rd7057, %rd6980;
	and.b64  	%rd7058, %rd6981, %rd7057;
	xor.b64  	%rd7059, %rd7058, %rd6984;
	xor.b64  	%rd7060, %rd6987, %rd33;
	xor.b64  	%rd7061, %rd7002, %rd7060;
	xor.b64  	%rd7062, %rd7061, %rd7017;
	xor.b64  	%rd7063, %rd7062, %rd7032;
	xor.b64  	%rd7064, %rd7063, %rd7047;
	xor.b64  	%rd7065, %rd7005, %rd6990;
	xor.b64  	%rd7066, %rd7065, %rd7020;
	xor.b64  	%rd7067, %rd7066, %rd7035;
	xor.b64  	%rd7068, %rd7067, %rd7050;
	xor.b64  	%rd7069, %rd7008, %rd6993;
	xor.b64  	%rd7070, %rd7069, %rd7023;
	xor.b64  	%rd7071, %rd7070, %rd7038;
	xor.b64  	%rd7072, %rd7071, %rd7053;
	xor.b64  	%rd7073, %rd7011, %rd6996;
	xor.b64  	%rd7074, %rd7073, %rd7026;
	xor.b64  	%rd7075, %rd7074, %rd7041;
	xor.b64  	%rd7076, %rd7075, %rd7056;
	xor.b64  	%rd7077, %rd7014, %rd6999;
	xor.b64  	%rd7078, %rd7077, %rd7029;
	xor.b64  	%rd7079, %rd7078, %rd7044;
	xor.b64  	%rd7080, %rd7079, %rd7059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4949}, %rd7068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4950,%dummy}, %rd7068;
	}
	shf.l.wrap.b32 	%r4951, %r4950, %r4949, 1;
	shf.l.wrap.b32 	%r4952, %r4949, %r4950, 1;
	mov.b64 	%rd7081, {%r4952, %r4951};
	xor.b64  	%rd7082, %rd7080, %rd7081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4953}, %rd7072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4954,%dummy}, %rd7072;
	}
	shf.l.wrap.b32 	%r4955, %r4954, %r4953, 1;
	shf.l.wrap.b32 	%r4956, %r4953, %r4954, 1;
	mov.b64 	%rd7083, {%r4956, %r4955};
	xor.b64  	%rd7084, %rd7083, %rd7064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4957}, %rd7076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4958,%dummy}, %rd7076;
	}
	shf.l.wrap.b32 	%r4959, %r4958, %r4957, 1;
	shf.l.wrap.b32 	%r4960, %r4957, %r4958, 1;
	mov.b64 	%rd7085, {%r4960, %r4959};
	xor.b64  	%rd7086, %rd7085, %rd7068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4961}, %rd7080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4962,%dummy}, %rd7080;
	}
	shf.l.wrap.b32 	%r4963, %r4962, %r4961, 1;
	shf.l.wrap.b32 	%r4964, %r4961, %r4962, 1;
	mov.b64 	%rd7087, {%r4964, %r4963};
	xor.b64  	%rd7088, %rd7087, %rd7072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4965}, %rd7064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4966,%dummy}, %rd7064;
	}
	shf.l.wrap.b32 	%r4967, %r4966, %r4965, 1;
	shf.l.wrap.b32 	%r4968, %r4965, %r4966, 1;
	mov.b64 	%rd7089, {%r4968, %r4967};
	xor.b64  	%rd7090, %rd7076, %rd7089;
	xor.b64  	%rd7091, %rd7082, %rd7060;
	xor.b64  	%rd7092, %rd7084, %rd6990;
	xor.b64  	%rd7093, %rd7086, %rd6993;
	xor.b64  	%rd7094, %rd7088, %rd6996;
	xor.b64  	%rd7095, %rd7090, %rd6999;
	xor.b64  	%rd7096, %rd7082, %rd7002;
	xor.b64  	%rd7097, %rd7084, %rd7005;
	xor.b64  	%rd7098, %rd7086, %rd7008;
	xor.b64  	%rd7099, %rd7088, %rd7011;
	xor.b64  	%rd7100, %rd7090, %rd7014;
	xor.b64  	%rd7101, %rd7082, %rd7017;
	xor.b64  	%rd7102, %rd7084, %rd7020;
	xor.b64  	%rd7103, %rd7086, %rd7023;
	xor.b64  	%rd7104, %rd7088, %rd7026;
	xor.b64  	%rd7105, %rd7090, %rd7029;
	xor.b64  	%rd7106, %rd7082, %rd7032;
	xor.b64  	%rd7107, %rd7084, %rd7035;
	xor.b64  	%rd7108, %rd7086, %rd7038;
	xor.b64  	%rd7109, %rd7088, %rd7041;
	xor.b64  	%rd7110, %rd7090, %rd7044;
	xor.b64  	%rd7111, %rd7082, %rd7047;
	xor.b64  	%rd7112, %rd7084, %rd7050;
	xor.b64  	%rd7113, %rd7086, %rd7053;
	xor.b64  	%rd7114, %rd7088, %rd7056;
	xor.b64  	%rd7115, %rd7090, %rd7059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4969,%dummy}, %rd7097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4970}, %rd7097;
	}
	shf.r.wrap.b32 	%r4971, %r4970, %r4969, 20;
	shf.r.wrap.b32 	%r4972, %r4969, %r4970, 20;
	mov.b64 	%rd7116, {%r4972, %r4971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4973,%dummy}, %rd7103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4974}, %rd7103;
	}
	shf.r.wrap.b32 	%r4975, %r4974, %r4973, 21;
	shf.r.wrap.b32 	%r4976, %r4973, %r4974, 21;
	mov.b64 	%rd7117, {%r4976, %r4975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4977}, %rd7109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4978,%dummy}, %rd7109;
	}
	shf.l.wrap.b32 	%r4979, %r4978, %r4977, 21;
	shf.l.wrap.b32 	%r4980, %r4977, %r4978, 21;
	mov.b64 	%rd7118, {%r4980, %r4979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4981}, %rd7115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4982,%dummy}, %rd7115;
	}
	shf.l.wrap.b32 	%r4983, %r4982, %r4981, 14;
	shf.l.wrap.b32 	%r4984, %r4981, %r4982, 14;
	mov.b64 	%rd7119, {%r4984, %r4983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4985}, %rd7094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4986,%dummy}, %rd7094;
	}
	shf.l.wrap.b32 	%r4987, %r4986, %r4985, 28;
	shf.l.wrap.b32 	%r4988, %r4985, %r4986, 28;
	mov.b64 	%rd7120, {%r4988, %r4987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4989}, %rd7100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4990,%dummy}, %rd7100;
	}
	shf.l.wrap.b32 	%r4991, %r4990, %r4989, 20;
	shf.l.wrap.b32 	%r4992, %r4989, %r4990, 20;
	mov.b64 	%rd7121, {%r4992, %r4991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4993}, %rd7101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4994,%dummy}, %rd7101;
	}
	shf.l.wrap.b32 	%r4995, %r4994, %r4993, 3;
	shf.l.wrap.b32 	%r4996, %r4993, %r4994, 3;
	mov.b64 	%rd7122, {%r4996, %r4995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4997,%dummy}, %rd7107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4998}, %rd7107;
	}
	shf.r.wrap.b32 	%r4999, %r4998, %r4997, 19;
	shf.r.wrap.b32 	%r5000, %r4997, %r4998, 19;
	mov.b64 	%rd7123, {%r5000, %r4999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5001,%dummy}, %rd7113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5002}, %rd7113;
	}
	shf.r.wrap.b32 	%r5003, %r5002, %r5001, 3;
	shf.r.wrap.b32 	%r5004, %r5001, %r5002, 3;
	mov.b64 	%rd7124, {%r5004, %r5003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5005}, %rd7092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5006,%dummy}, %rd7092;
	}
	shf.l.wrap.b32 	%r5007, %r5006, %r5005, 1;
	shf.l.wrap.b32 	%r5008, %r5005, %r5006, 1;
	mov.b64 	%rd7125, {%r5008, %r5007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5009}, %rd7098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5010,%dummy}, %rd7098;
	}
	shf.l.wrap.b32 	%r5011, %r5010, %r5009, 6;
	shf.l.wrap.b32 	%r5012, %r5009, %r5010, 6;
	mov.b64 	%rd7126, {%r5012, %r5011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5013}, %rd7104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5014,%dummy}, %rd7104;
	}
	shf.l.wrap.b32 	%r5015, %r5014, %r5013, 25;
	shf.l.wrap.b32 	%r5016, %r5013, %r5014, 25;
	mov.b64 	%rd7127, {%r5016, %r5015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5017}, %rd7110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5018,%dummy}, %rd7110;
	}
	shf.l.wrap.b32 	%r5019, %r5018, %r5017, 8;
	shf.l.wrap.b32 	%r5020, %r5017, %r5018, 8;
	mov.b64 	%rd7128, {%r5020, %r5019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5021}, %rd7111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5022,%dummy}, %rd7111;
	}
	shf.l.wrap.b32 	%r5023, %r5022, %r5021, 18;
	shf.l.wrap.b32 	%r5024, %r5021, %r5022, 18;
	mov.b64 	%rd7129, {%r5024, %r5023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5025}, %rd7095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5026,%dummy}, %rd7095;
	}
	shf.l.wrap.b32 	%r5027, %r5026, %r5025, 27;
	shf.l.wrap.b32 	%r5028, %r5025, %r5026, 27;
	mov.b64 	%rd7130, {%r5028, %r5027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5029,%dummy}, %rd7096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5030}, %rd7096;
	}
	shf.r.wrap.b32 	%r5031, %r5030, %r5029, 28;
	shf.r.wrap.b32 	%r5032, %r5029, %r5030, 28;
	mov.b64 	%rd7131, {%r5032, %r5031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd7102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5034,%dummy}, %rd7102;
	}
	shf.l.wrap.b32 	%r5035, %r5034, %r5033, 10;
	shf.l.wrap.b32 	%r5036, %r5033, %r5034, 10;
	mov.b64 	%rd7132, {%r5036, %r5035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5037}, %rd7108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5038,%dummy}, %rd7108;
	}
	shf.l.wrap.b32 	%r5039, %r5038, %r5037, 15;
	shf.l.wrap.b32 	%r5040, %r5037, %r5038, 15;
	mov.b64 	%rd7133, {%r5040, %r5039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5041,%dummy}, %rd7114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5042}, %rd7114;
	}
	shf.r.wrap.b32 	%r5043, %r5042, %r5041, 8;
	shf.r.wrap.b32 	%r5044, %r5041, %r5042, 8;
	mov.b64 	%rd7134, {%r5044, %r5043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5045,%dummy}, %rd7093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5046}, %rd7093;
	}
	shf.r.wrap.b32 	%r5047, %r5046, %r5045, 2;
	shf.r.wrap.b32 	%r5048, %r5045, %r5046, 2;
	mov.b64 	%rd7135, {%r5048, %r5047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5049,%dummy}, %rd7099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5050}, %rd7099;
	}
	shf.r.wrap.b32 	%r5051, %r5050, %r5049, 9;
	shf.r.wrap.b32 	%r5052, %r5049, %r5050, 9;
	mov.b64 	%rd7136, {%r5052, %r5051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5053,%dummy}, %rd7105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5054}, %rd7105;
	}
	shf.r.wrap.b32 	%r5055, %r5054, %r5053, 25;
	shf.r.wrap.b32 	%r5056, %r5053, %r5054, 25;
	mov.b64 	%rd7137, {%r5056, %r5055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5057,%dummy}, %rd7106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5058}, %rd7106;
	}
	shf.r.wrap.b32 	%r5059, %r5058, %r5057, 23;
	shf.r.wrap.b32 	%r5060, %r5057, %r5058, 23;
	mov.b64 	%rd7138, {%r5060, %r5059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5061}, %rd7112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5062,%dummy}, %rd7112;
	}
	shf.l.wrap.b32 	%r5063, %r5062, %r5061, 2;
	shf.l.wrap.b32 	%r5064, %r5061, %r5062, 2;
	mov.b64 	%rd7139, {%r5064, %r5063};
	not.b64 	%rd7140, %rd7116;
	and.b64  	%rd7141, %rd7117, %rd7140;
	xor.b64  	%rd7142, %rd7141, %rd7091;
	not.b64 	%rd7143, %rd7117;
	and.b64  	%rd7144, %rd7118, %rd7143;
	xor.b64  	%rd7145, %rd7144, %rd7116;
	not.b64 	%rd7146, %rd7118;
	and.b64  	%rd7147, %rd7119, %rd7146;
	xor.b64  	%rd7148, %rd7147, %rd7117;
	not.b64 	%rd7149, %rd7119;
	and.b64  	%rd7150, %rd7091, %rd7149;
	xor.b64  	%rd7151, %rd7150, %rd7118;
	not.b64 	%rd7152, %rd7091;
	and.b64  	%rd7153, %rd7116, %rd7152;
	xor.b64  	%rd7154, %rd7153, %rd7119;
	not.b64 	%rd7155, %rd7121;
	and.b64  	%rd7156, %rd7122, %rd7155;
	xor.b64  	%rd7157, %rd7156, %rd7120;
	not.b64 	%rd7158, %rd7122;
	and.b64  	%rd7159, %rd7123, %rd7158;
	xor.b64  	%rd7160, %rd7159, %rd7121;
	not.b64 	%rd7161, %rd7123;
	and.b64  	%rd7162, %rd7124, %rd7161;
	xor.b64  	%rd7163, %rd7162, %rd7122;
	not.b64 	%rd7164, %rd7124;
	and.b64  	%rd7165, %rd7120, %rd7164;
	xor.b64  	%rd7166, %rd7165, %rd7123;
	not.b64 	%rd7167, %rd7120;
	and.b64  	%rd7168, %rd7121, %rd7167;
	xor.b64  	%rd7169, %rd7168, %rd7124;
	not.b64 	%rd7170, %rd7126;
	and.b64  	%rd7171, %rd7127, %rd7170;
	xor.b64  	%rd7172, %rd7171, %rd7125;
	not.b64 	%rd7173, %rd7127;
	and.b64  	%rd7174, %rd7128, %rd7173;
	xor.b64  	%rd7175, %rd7174, %rd7126;
	not.b64 	%rd7176, %rd7128;
	and.b64  	%rd7177, %rd7129, %rd7176;
	xor.b64  	%rd7178, %rd7177, %rd7127;
	not.b64 	%rd7179, %rd7129;
	and.b64  	%rd7180, %rd7125, %rd7179;
	xor.b64  	%rd7181, %rd7180, %rd7128;
	not.b64 	%rd7182, %rd7125;
	and.b64  	%rd7183, %rd7126, %rd7182;
	xor.b64  	%rd7184, %rd7183, %rd7129;
	not.b64 	%rd7185, %rd7131;
	and.b64  	%rd7186, %rd7132, %rd7185;
	xor.b64  	%rd7187, %rd7186, %rd7130;
	not.b64 	%rd7188, %rd7132;
	and.b64  	%rd7189, %rd7133, %rd7188;
	xor.b64  	%rd7190, %rd7189, %rd7131;
	not.b64 	%rd7191, %rd7133;
	and.b64  	%rd7192, %rd7134, %rd7191;
	xor.b64  	%rd7193, %rd7192, %rd7132;
	not.b64 	%rd7194, %rd7134;
	and.b64  	%rd7195, %rd7130, %rd7194;
	xor.b64  	%rd7196, %rd7195, %rd7133;
	not.b64 	%rd7197, %rd7130;
	and.b64  	%rd7198, %rd7131, %rd7197;
	xor.b64  	%rd7199, %rd7198, %rd7134;
	not.b64 	%rd7200, %rd7136;
	and.b64  	%rd7201, %rd7137, %rd7200;
	xor.b64  	%rd7202, %rd7201, %rd7135;
	not.b64 	%rd7203, %rd7137;
	and.b64  	%rd7204, %rd7138, %rd7203;
	xor.b64  	%rd7205, %rd7204, %rd7136;
	not.b64 	%rd7206, %rd7138;
	and.b64  	%rd7207, %rd7139, %rd7206;
	xor.b64  	%rd7208, %rd7207, %rd7137;
	not.b64 	%rd7209, %rd7139;
	and.b64  	%rd7210, %rd7135, %rd7209;
	xor.b64  	%rd7211, %rd7210, %rd7138;
	not.b64 	%rd7212, %rd7135;
	and.b64  	%rd7213, %rd7136, %rd7212;
	xor.b64  	%rd7214, %rd7213, %rd7139;
	xor.b64  	%rd7215, %rd7142, %rd34;
	xor.b64  	%rd7216, %rd7157, %rd7215;
	xor.b64  	%rd7217, %rd7216, %rd7172;
	xor.b64  	%rd7218, %rd7217, %rd7187;
	xor.b64  	%rd7219, %rd7218, %rd7202;
	xor.b64  	%rd7220, %rd7160, %rd7145;
	xor.b64  	%rd7221, %rd7220, %rd7175;
	xor.b64  	%rd7222, %rd7221, %rd7190;
	xor.b64  	%rd7223, %rd7222, %rd7205;
	xor.b64  	%rd7224, %rd7163, %rd7148;
	xor.b64  	%rd7225, %rd7224, %rd7178;
	xor.b64  	%rd7226, %rd7225, %rd7193;
	xor.b64  	%rd7227, %rd7226, %rd7208;
	xor.b64  	%rd7228, %rd7166, %rd7151;
	xor.b64  	%rd7229, %rd7228, %rd7181;
	xor.b64  	%rd7230, %rd7229, %rd7196;
	xor.b64  	%rd7231, %rd7230, %rd7211;
	xor.b64  	%rd7232, %rd7169, %rd7154;
	xor.b64  	%rd7233, %rd7232, %rd7184;
	xor.b64  	%rd7234, %rd7233, %rd7199;
	xor.b64  	%rd7235, %rd7234, %rd7214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5065}, %rd7223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5066,%dummy}, %rd7223;
	}
	shf.l.wrap.b32 	%r5067, %r5066, %r5065, 1;
	shf.l.wrap.b32 	%r5068, %r5065, %r5066, 1;
	mov.b64 	%rd7236, {%r5068, %r5067};
	xor.b64  	%rd7237, %rd7235, %rd7236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5069}, %rd7227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5070,%dummy}, %rd7227;
	}
	shf.l.wrap.b32 	%r5071, %r5070, %r5069, 1;
	shf.l.wrap.b32 	%r5072, %r5069, %r5070, 1;
	mov.b64 	%rd7238, {%r5072, %r5071};
	xor.b64  	%rd7239, %rd7238, %rd7219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5073}, %rd7231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5074,%dummy}, %rd7231;
	}
	shf.l.wrap.b32 	%r5075, %r5074, %r5073, 1;
	shf.l.wrap.b32 	%r5076, %r5073, %r5074, 1;
	mov.b64 	%rd7240, {%r5076, %r5075};
	xor.b64  	%rd7241, %rd7240, %rd7223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5077}, %rd7235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5078,%dummy}, %rd7235;
	}
	shf.l.wrap.b32 	%r5079, %r5078, %r5077, 1;
	shf.l.wrap.b32 	%r5080, %r5077, %r5078, 1;
	mov.b64 	%rd7242, {%r5080, %r5079};
	xor.b64  	%rd7243, %rd7242, %rd7227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5081}, %rd7219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5082,%dummy}, %rd7219;
	}
	shf.l.wrap.b32 	%r5083, %r5082, %r5081, 1;
	shf.l.wrap.b32 	%r5084, %r5081, %r5082, 1;
	mov.b64 	%rd7244, {%r5084, %r5083};
	xor.b64  	%rd7245, %rd7231, %rd7244;
	xor.b64  	%rd7246, %rd7237, %rd7215;
	xor.b64  	%rd7247, %rd7239, %rd7145;
	xor.b64  	%rd7248, %rd7241, %rd7148;
	xor.b64  	%rd7249, %rd7243, %rd7151;
	xor.b64  	%rd7250, %rd7245, %rd7154;
	xor.b64  	%rd7251, %rd7237, %rd7157;
	xor.b64  	%rd7252, %rd7239, %rd7160;
	xor.b64  	%rd7253, %rd7241, %rd7163;
	xor.b64  	%rd7254, %rd7243, %rd7166;
	xor.b64  	%rd7255, %rd7245, %rd7169;
	xor.b64  	%rd7256, %rd7237, %rd7172;
	xor.b64  	%rd7257, %rd7239, %rd7175;
	xor.b64  	%rd7258, %rd7241, %rd7178;
	xor.b64  	%rd7259, %rd7243, %rd7181;
	xor.b64  	%rd7260, %rd7245, %rd7184;
	xor.b64  	%rd7261, %rd7237, %rd7187;
	xor.b64  	%rd7262, %rd7239, %rd7190;
	xor.b64  	%rd7263, %rd7241, %rd7193;
	xor.b64  	%rd7264, %rd7243, %rd7196;
	xor.b64  	%rd7265, %rd7245, %rd7199;
	xor.b64  	%rd7266, %rd7237, %rd7202;
	xor.b64  	%rd7267, %rd7239, %rd7205;
	xor.b64  	%rd7268, %rd7241, %rd7208;
	xor.b64  	%rd7269, %rd7243, %rd7211;
	xor.b64  	%rd7270, %rd7245, %rd7214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5085,%dummy}, %rd7252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5086}, %rd7252;
	}
	shf.r.wrap.b32 	%r5087, %r5086, %r5085, 20;
	shf.r.wrap.b32 	%r5088, %r5085, %r5086, 20;
	mov.b64 	%rd7271, {%r5088, %r5087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5089,%dummy}, %rd7258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5090}, %rd7258;
	}
	shf.r.wrap.b32 	%r5091, %r5090, %r5089, 21;
	shf.r.wrap.b32 	%r5092, %r5089, %r5090, 21;
	mov.b64 	%rd7272, {%r5092, %r5091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5093}, %rd7264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5094,%dummy}, %rd7264;
	}
	shf.l.wrap.b32 	%r5095, %r5094, %r5093, 21;
	shf.l.wrap.b32 	%r5096, %r5093, %r5094, 21;
	mov.b64 	%rd7273, {%r5096, %r5095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5097}, %rd7270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5098,%dummy}, %rd7270;
	}
	shf.l.wrap.b32 	%r5099, %r5098, %r5097, 14;
	shf.l.wrap.b32 	%r5100, %r5097, %r5098, 14;
	mov.b64 	%rd7274, {%r5100, %r5099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5101}, %rd7249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5102,%dummy}, %rd7249;
	}
	shf.l.wrap.b32 	%r5103, %r5102, %r5101, 28;
	shf.l.wrap.b32 	%r5104, %r5101, %r5102, 28;
	mov.b64 	%rd7275, {%r5104, %r5103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5105}, %rd7255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5106,%dummy}, %rd7255;
	}
	shf.l.wrap.b32 	%r5107, %r5106, %r5105, 20;
	shf.l.wrap.b32 	%r5108, %r5105, %r5106, 20;
	mov.b64 	%rd7276, {%r5108, %r5107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5109}, %rd7256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5110,%dummy}, %rd7256;
	}
	shf.l.wrap.b32 	%r5111, %r5110, %r5109, 3;
	shf.l.wrap.b32 	%r5112, %r5109, %r5110, 3;
	mov.b64 	%rd7277, {%r5112, %r5111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5113,%dummy}, %rd7262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5114}, %rd7262;
	}
	shf.r.wrap.b32 	%r5115, %r5114, %r5113, 19;
	shf.r.wrap.b32 	%r5116, %r5113, %r5114, 19;
	mov.b64 	%rd7278, {%r5116, %r5115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5117,%dummy}, %rd7268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5118}, %rd7268;
	}
	shf.r.wrap.b32 	%r5119, %r5118, %r5117, 3;
	shf.r.wrap.b32 	%r5120, %r5117, %r5118, 3;
	mov.b64 	%rd7279, {%r5120, %r5119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5121}, %rd7247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5122,%dummy}, %rd7247;
	}
	shf.l.wrap.b32 	%r5123, %r5122, %r5121, 1;
	shf.l.wrap.b32 	%r5124, %r5121, %r5122, 1;
	mov.b64 	%rd7280, {%r5124, %r5123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5125}, %rd7253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5126,%dummy}, %rd7253;
	}
	shf.l.wrap.b32 	%r5127, %r5126, %r5125, 6;
	shf.l.wrap.b32 	%r5128, %r5125, %r5126, 6;
	mov.b64 	%rd7281, {%r5128, %r5127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5129}, %rd7259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5130,%dummy}, %rd7259;
	}
	shf.l.wrap.b32 	%r5131, %r5130, %r5129, 25;
	shf.l.wrap.b32 	%r5132, %r5129, %r5130, 25;
	mov.b64 	%rd7282, {%r5132, %r5131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5133}, %rd7265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5134,%dummy}, %rd7265;
	}
	shf.l.wrap.b32 	%r5135, %r5134, %r5133, 8;
	shf.l.wrap.b32 	%r5136, %r5133, %r5134, 8;
	mov.b64 	%rd7283, {%r5136, %r5135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5137}, %rd7266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5138,%dummy}, %rd7266;
	}
	shf.l.wrap.b32 	%r5139, %r5138, %r5137, 18;
	shf.l.wrap.b32 	%r5140, %r5137, %r5138, 18;
	mov.b64 	%rd7284, {%r5140, %r5139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5141}, %rd7250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5142,%dummy}, %rd7250;
	}
	shf.l.wrap.b32 	%r5143, %r5142, %r5141, 27;
	shf.l.wrap.b32 	%r5144, %r5141, %r5142, 27;
	mov.b64 	%rd7285, {%r5144, %r5143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5145,%dummy}, %rd7251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5146}, %rd7251;
	}
	shf.r.wrap.b32 	%r5147, %r5146, %r5145, 28;
	shf.r.wrap.b32 	%r5148, %r5145, %r5146, 28;
	mov.b64 	%rd7286, {%r5148, %r5147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5149}, %rd7257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5150,%dummy}, %rd7257;
	}
	shf.l.wrap.b32 	%r5151, %r5150, %r5149, 10;
	shf.l.wrap.b32 	%r5152, %r5149, %r5150, 10;
	mov.b64 	%rd7287, {%r5152, %r5151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5153}, %rd7263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5154,%dummy}, %rd7263;
	}
	shf.l.wrap.b32 	%r5155, %r5154, %r5153, 15;
	shf.l.wrap.b32 	%r5156, %r5153, %r5154, 15;
	mov.b64 	%rd7288, {%r5156, %r5155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5157,%dummy}, %rd7269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5158}, %rd7269;
	}
	shf.r.wrap.b32 	%r5159, %r5158, %r5157, 8;
	shf.r.wrap.b32 	%r5160, %r5157, %r5158, 8;
	mov.b64 	%rd7289, {%r5160, %r5159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5161,%dummy}, %rd7248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5162}, %rd7248;
	}
	shf.r.wrap.b32 	%r5163, %r5162, %r5161, 2;
	shf.r.wrap.b32 	%r5164, %r5161, %r5162, 2;
	mov.b64 	%rd7290, {%r5164, %r5163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5165,%dummy}, %rd7254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5166}, %rd7254;
	}
	shf.r.wrap.b32 	%r5167, %r5166, %r5165, 9;
	shf.r.wrap.b32 	%r5168, %r5165, %r5166, 9;
	mov.b64 	%rd7291, {%r5168, %r5167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5169,%dummy}, %rd7260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5170}, %rd7260;
	}
	shf.r.wrap.b32 	%r5171, %r5170, %r5169, 25;
	shf.r.wrap.b32 	%r5172, %r5169, %r5170, 25;
	mov.b64 	%rd7292, {%r5172, %r5171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5173,%dummy}, %rd7261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5174}, %rd7261;
	}
	shf.r.wrap.b32 	%r5175, %r5174, %r5173, 23;
	shf.r.wrap.b32 	%r5176, %r5173, %r5174, 23;
	mov.b64 	%rd7293, {%r5176, %r5175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5177}, %rd7267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5178,%dummy}, %rd7267;
	}
	shf.l.wrap.b32 	%r5179, %r5178, %r5177, 2;
	shf.l.wrap.b32 	%r5180, %r5177, %r5178, 2;
	mov.b64 	%rd7294, {%r5180, %r5179};
	not.b64 	%rd7295, %rd7271;
	and.b64  	%rd7296, %rd7272, %rd7295;
	xor.b64  	%rd7297, %rd7296, %rd7246;
	not.b64 	%rd7298, %rd7272;
	and.b64  	%rd7299, %rd7273, %rd7298;
	xor.b64  	%rd7300, %rd7299, %rd7271;
	not.b64 	%rd7301, %rd7273;
	and.b64  	%rd7302, %rd7274, %rd7301;
	xor.b64  	%rd7303, %rd7302, %rd7272;
	not.b64 	%rd7304, %rd7274;
	and.b64  	%rd7305, %rd7246, %rd7304;
	xor.b64  	%rd7306, %rd7305, %rd7273;
	not.b64 	%rd7307, %rd7246;
	and.b64  	%rd7308, %rd7271, %rd7307;
	xor.b64  	%rd7309, %rd7308, %rd7274;
	not.b64 	%rd7310, %rd7276;
	and.b64  	%rd7311, %rd7277, %rd7310;
	xor.b64  	%rd7312, %rd7311, %rd7275;
	not.b64 	%rd7313, %rd7277;
	and.b64  	%rd7314, %rd7278, %rd7313;
	xor.b64  	%rd7315, %rd7314, %rd7276;
	not.b64 	%rd7316, %rd7278;
	and.b64  	%rd7317, %rd7279, %rd7316;
	xor.b64  	%rd7318, %rd7317, %rd7277;
	not.b64 	%rd7319, %rd7279;
	and.b64  	%rd7320, %rd7275, %rd7319;
	xor.b64  	%rd7321, %rd7320, %rd7278;
	not.b64 	%rd7322, %rd7275;
	and.b64  	%rd7323, %rd7276, %rd7322;
	xor.b64  	%rd7324, %rd7323, %rd7279;
	not.b64 	%rd7325, %rd7281;
	and.b64  	%rd7326, %rd7282, %rd7325;
	xor.b64  	%rd7327, %rd7326, %rd7280;
	not.b64 	%rd7328, %rd7282;
	and.b64  	%rd7329, %rd7283, %rd7328;
	xor.b64  	%rd7330, %rd7329, %rd7281;
	not.b64 	%rd7331, %rd7283;
	and.b64  	%rd7332, %rd7284, %rd7331;
	xor.b64  	%rd7333, %rd7332, %rd7282;
	not.b64 	%rd7334, %rd7284;
	and.b64  	%rd7335, %rd7280, %rd7334;
	xor.b64  	%rd7336, %rd7335, %rd7283;
	not.b64 	%rd7337, %rd7280;
	and.b64  	%rd7338, %rd7281, %rd7337;
	xor.b64  	%rd7339, %rd7338, %rd7284;
	not.b64 	%rd7340, %rd7286;
	and.b64  	%rd7341, %rd7287, %rd7340;
	xor.b64  	%rd7342, %rd7341, %rd7285;
	not.b64 	%rd7343, %rd7287;
	and.b64  	%rd7344, %rd7288, %rd7343;
	xor.b64  	%rd7345, %rd7344, %rd7286;
	not.b64 	%rd7346, %rd7288;
	and.b64  	%rd7347, %rd7289, %rd7346;
	xor.b64  	%rd7348, %rd7347, %rd7287;
	not.b64 	%rd7349, %rd7289;
	and.b64  	%rd7350, %rd7285, %rd7349;
	xor.b64  	%rd7351, %rd7350, %rd7288;
	not.b64 	%rd7352, %rd7285;
	and.b64  	%rd7353, %rd7286, %rd7352;
	xor.b64  	%rd7354, %rd7353, %rd7289;
	not.b64 	%rd7355, %rd7291;
	and.b64  	%rd7356, %rd7292, %rd7355;
	xor.b64  	%rd7357, %rd7356, %rd7290;
	not.b64 	%rd7358, %rd7292;
	and.b64  	%rd7359, %rd7293, %rd7358;
	xor.b64  	%rd7360, %rd7359, %rd7291;
	not.b64 	%rd7361, %rd7293;
	and.b64  	%rd7362, %rd7294, %rd7361;
	xor.b64  	%rd7363, %rd7362, %rd7292;
	not.b64 	%rd7364, %rd7294;
	and.b64  	%rd7365, %rd7290, %rd7364;
	xor.b64  	%rd7366, %rd7365, %rd7293;
	not.b64 	%rd7367, %rd7290;
	and.b64  	%rd7368, %rd7291, %rd7367;
	xor.b64  	%rd7369, %rd7368, %rd7294;
	xor.b64  	%rd7370, %rd7297, %rd35;
	xor.b64  	%rd7371, %rd7312, %rd7370;
	xor.b64  	%rd7372, %rd7371, %rd7327;
	xor.b64  	%rd7373, %rd7372, %rd7342;
	xor.b64  	%rd7374, %rd7373, %rd7357;
	xor.b64  	%rd7375, %rd7315, %rd7300;
	xor.b64  	%rd7376, %rd7375, %rd7330;
	xor.b64  	%rd7377, %rd7376, %rd7345;
	xor.b64  	%rd7378, %rd7377, %rd7360;
	xor.b64  	%rd7379, %rd7318, %rd7303;
	xor.b64  	%rd7380, %rd7379, %rd7333;
	xor.b64  	%rd7381, %rd7380, %rd7348;
	xor.b64  	%rd7382, %rd7381, %rd7363;
	xor.b64  	%rd7383, %rd7321, %rd7306;
	xor.b64  	%rd7384, %rd7383, %rd7336;
	xor.b64  	%rd7385, %rd7384, %rd7351;
	xor.b64  	%rd7386, %rd7385, %rd7366;
	xor.b64  	%rd7387, %rd7324, %rd7309;
	xor.b64  	%rd7388, %rd7387, %rd7339;
	xor.b64  	%rd7389, %rd7388, %rd7354;
	xor.b64  	%rd7390, %rd7389, %rd7369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd7378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5182,%dummy}, %rd7378;
	}
	shf.l.wrap.b32 	%r5183, %r5182, %r5181, 1;
	shf.l.wrap.b32 	%r5184, %r5181, %r5182, 1;
	mov.b64 	%rd7391, {%r5184, %r5183};
	xor.b64  	%rd7392, %rd7390, %rd7391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5185}, %rd7382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5186,%dummy}, %rd7382;
	}
	shf.l.wrap.b32 	%r5187, %r5186, %r5185, 1;
	shf.l.wrap.b32 	%r5188, %r5185, %r5186, 1;
	mov.b64 	%rd7393, {%r5188, %r5187};
	xor.b64  	%rd7394, %rd7393, %rd7374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd7386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5190,%dummy}, %rd7386;
	}
	shf.l.wrap.b32 	%r5191, %r5190, %r5189, 1;
	shf.l.wrap.b32 	%r5192, %r5189, %r5190, 1;
	mov.b64 	%rd7395, {%r5192, %r5191};
	xor.b64  	%rd7396, %rd7395, %rd7378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5193}, %rd7390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5194,%dummy}, %rd7390;
	}
	shf.l.wrap.b32 	%r5195, %r5194, %r5193, 1;
	shf.l.wrap.b32 	%r5196, %r5193, %r5194, 1;
	mov.b64 	%rd7397, {%r5196, %r5195};
	xor.b64  	%rd7398, %rd7397, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5197}, %rd7374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5198,%dummy}, %rd7374;
	}
	shf.l.wrap.b32 	%r5199, %r5198, %r5197, 1;
	shf.l.wrap.b32 	%r5200, %r5197, %r5198, 1;
	mov.b64 	%rd7399, {%r5200, %r5199};
	xor.b64  	%rd7400, %rd7386, %rd7399;
	xor.b64  	%rd7401, %rd7392, %rd7370;
	xor.b64  	%rd7402, %rd7394, %rd7300;
	xor.b64  	%rd7403, %rd7396, %rd7303;
	xor.b64  	%rd7404, %rd7398, %rd7306;
	xor.b64  	%rd7405, %rd7400, %rd7309;
	xor.b64  	%rd7406, %rd7392, %rd7312;
	xor.b64  	%rd7407, %rd7394, %rd7315;
	xor.b64  	%rd7408, %rd7396, %rd7318;
	xor.b64  	%rd7409, %rd7398, %rd7321;
	xor.b64  	%rd7410, %rd7400, %rd7324;
	xor.b64  	%rd7411, %rd7392, %rd7327;
	xor.b64  	%rd7412, %rd7394, %rd7330;
	xor.b64  	%rd7413, %rd7396, %rd7333;
	xor.b64  	%rd7414, %rd7398, %rd7336;
	xor.b64  	%rd7415, %rd7400, %rd7339;
	xor.b64  	%rd7416, %rd7392, %rd7342;
	xor.b64  	%rd7417, %rd7394, %rd7345;
	xor.b64  	%rd7418, %rd7396, %rd7348;
	xor.b64  	%rd7419, %rd7398, %rd7351;
	xor.b64  	%rd7420, %rd7400, %rd7354;
	xor.b64  	%rd7421, %rd7392, %rd7357;
	xor.b64  	%rd7422, %rd7394, %rd7360;
	xor.b64  	%rd7423, %rd7396, %rd7363;
	xor.b64  	%rd7424, %rd7398, %rd7366;
	xor.b64  	%rd7425, %rd7400, %rd7369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5201,%dummy}, %rd7407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5202}, %rd7407;
	}
	shf.r.wrap.b32 	%r5203, %r5202, %r5201, 20;
	shf.r.wrap.b32 	%r5204, %r5201, %r5202, 20;
	mov.b64 	%rd7426, {%r5204, %r5203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5205,%dummy}, %rd7413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5206}, %rd7413;
	}
	shf.r.wrap.b32 	%r5207, %r5206, %r5205, 21;
	shf.r.wrap.b32 	%r5208, %r5205, %r5206, 21;
	mov.b64 	%rd7427, {%r5208, %r5207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5209}, %rd7419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5210,%dummy}, %rd7419;
	}
	shf.l.wrap.b32 	%r5211, %r5210, %r5209, 21;
	shf.l.wrap.b32 	%r5212, %r5209, %r5210, 21;
	mov.b64 	%rd7428, {%r5212, %r5211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5213}, %rd7425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd7425;
	}
	shf.l.wrap.b32 	%r5215, %r5214, %r5213, 14;
	shf.l.wrap.b32 	%r5216, %r5213, %r5214, 14;
	mov.b64 	%rd7429, {%r5216, %r5215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5217}, %rd7404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5218,%dummy}, %rd7404;
	}
	shf.l.wrap.b32 	%r5219, %r5218, %r5217, 28;
	shf.l.wrap.b32 	%r5220, %r5217, %r5218, 28;
	mov.b64 	%rd7430, {%r5220, %r5219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5221}, %rd7410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5222,%dummy}, %rd7410;
	}
	shf.l.wrap.b32 	%r5223, %r5222, %r5221, 20;
	shf.l.wrap.b32 	%r5224, %r5221, %r5222, 20;
	mov.b64 	%rd7431, {%r5224, %r5223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5225}, %rd7411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5226,%dummy}, %rd7411;
	}
	shf.l.wrap.b32 	%r5227, %r5226, %r5225, 3;
	shf.l.wrap.b32 	%r5228, %r5225, %r5226, 3;
	mov.b64 	%rd7432, {%r5228, %r5227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5229,%dummy}, %rd7417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5230}, %rd7417;
	}
	shf.r.wrap.b32 	%r5231, %r5230, %r5229, 19;
	shf.r.wrap.b32 	%r5232, %r5229, %r5230, 19;
	mov.b64 	%rd7433, {%r5232, %r5231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5233,%dummy}, %rd7423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5234}, %rd7423;
	}
	shf.r.wrap.b32 	%r5235, %r5234, %r5233, 3;
	shf.r.wrap.b32 	%r5236, %r5233, %r5234, 3;
	mov.b64 	%rd7434, {%r5236, %r5235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5237}, %rd7402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5238,%dummy}, %rd7402;
	}
	shf.l.wrap.b32 	%r5239, %r5238, %r5237, 1;
	shf.l.wrap.b32 	%r5240, %r5237, %r5238, 1;
	mov.b64 	%rd7435, {%r5240, %r5239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd7408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5242,%dummy}, %rd7408;
	}
	shf.l.wrap.b32 	%r5243, %r5242, %r5241, 6;
	shf.l.wrap.b32 	%r5244, %r5241, %r5242, 6;
	mov.b64 	%rd7436, {%r5244, %r5243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5245}, %rd7414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5246,%dummy}, %rd7414;
	}
	shf.l.wrap.b32 	%r5247, %r5246, %r5245, 25;
	shf.l.wrap.b32 	%r5248, %r5245, %r5246, 25;
	mov.b64 	%rd7437, {%r5248, %r5247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd7420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5250,%dummy}, %rd7420;
	}
	shf.l.wrap.b32 	%r5251, %r5250, %r5249, 8;
	shf.l.wrap.b32 	%r5252, %r5249, %r5250, 8;
	mov.b64 	%rd7438, {%r5252, %r5251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5253}, %rd7421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5254,%dummy}, %rd7421;
	}
	shf.l.wrap.b32 	%r5255, %r5254, %r5253, 18;
	shf.l.wrap.b32 	%r5256, %r5253, %r5254, 18;
	mov.b64 	%rd7439, {%r5256, %r5255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5257}, %rd7405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5258,%dummy}, %rd7405;
	}
	shf.l.wrap.b32 	%r5259, %r5258, %r5257, 27;
	shf.l.wrap.b32 	%r5260, %r5257, %r5258, 27;
	mov.b64 	%rd7440, {%r5260, %r5259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5261,%dummy}, %rd7406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5262}, %rd7406;
	}
	shf.r.wrap.b32 	%r5263, %r5262, %r5261, 28;
	shf.r.wrap.b32 	%r5264, %r5261, %r5262, 28;
	mov.b64 	%rd7441, {%r5264, %r5263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5265}, %rd7412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5266,%dummy}, %rd7412;
	}
	shf.l.wrap.b32 	%r5267, %r5266, %r5265, 10;
	shf.l.wrap.b32 	%r5268, %r5265, %r5266, 10;
	mov.b64 	%rd7442, {%r5268, %r5267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5269}, %rd7418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5270,%dummy}, %rd7418;
	}
	shf.l.wrap.b32 	%r5271, %r5270, %r5269, 15;
	shf.l.wrap.b32 	%r5272, %r5269, %r5270, 15;
	mov.b64 	%rd7443, {%r5272, %r5271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5273,%dummy}, %rd7424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5274}, %rd7424;
	}
	shf.r.wrap.b32 	%r5275, %r5274, %r5273, 8;
	shf.r.wrap.b32 	%r5276, %r5273, %r5274, 8;
	mov.b64 	%rd7444, {%r5276, %r5275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5277,%dummy}, %rd7403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5278}, %rd7403;
	}
	shf.r.wrap.b32 	%r5279, %r5278, %r5277, 2;
	shf.r.wrap.b32 	%r5280, %r5277, %r5278, 2;
	mov.b64 	%rd7445, {%r5280, %r5279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5281,%dummy}, %rd7409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5282}, %rd7409;
	}
	shf.r.wrap.b32 	%r5283, %r5282, %r5281, 9;
	shf.r.wrap.b32 	%r5284, %r5281, %r5282, 9;
	mov.b64 	%rd7446, {%r5284, %r5283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5285,%dummy}, %rd7415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5286}, %rd7415;
	}
	shf.r.wrap.b32 	%r5287, %r5286, %r5285, 25;
	shf.r.wrap.b32 	%r5288, %r5285, %r5286, 25;
	mov.b64 	%rd7447, {%r5288, %r5287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5289,%dummy}, %rd7416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5290}, %rd7416;
	}
	shf.r.wrap.b32 	%r5291, %r5290, %r5289, 23;
	shf.r.wrap.b32 	%r5292, %r5289, %r5290, 23;
	mov.b64 	%rd7448, {%r5292, %r5291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5293}, %rd7422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5294,%dummy}, %rd7422;
	}
	shf.l.wrap.b32 	%r5295, %r5294, %r5293, 2;
	shf.l.wrap.b32 	%r5296, %r5293, %r5294, 2;
	mov.b64 	%rd7449, {%r5296, %r5295};
	not.b64 	%rd7450, %rd7426;
	and.b64  	%rd7451, %rd7427, %rd7450;
	xor.b64  	%rd7452, %rd7451, %rd7401;
	not.b64 	%rd7453, %rd7427;
	and.b64  	%rd7454, %rd7428, %rd7453;
	xor.b64  	%rd7455, %rd7454, %rd7426;
	not.b64 	%rd7456, %rd7428;
	and.b64  	%rd7457, %rd7429, %rd7456;
	xor.b64  	%rd7458, %rd7457, %rd7427;
	not.b64 	%rd7459, %rd7429;
	and.b64  	%rd7460, %rd7401, %rd7459;
	xor.b64  	%rd7461, %rd7460, %rd7428;
	not.b64 	%rd7462, %rd7401;
	and.b64  	%rd7463, %rd7426, %rd7462;
	xor.b64  	%rd7464, %rd7463, %rd7429;
	not.b64 	%rd7465, %rd7431;
	and.b64  	%rd7466, %rd7432, %rd7465;
	xor.b64  	%rd7467, %rd7466, %rd7430;
	not.b64 	%rd7468, %rd7432;
	and.b64  	%rd7469, %rd7433, %rd7468;
	xor.b64  	%rd7470, %rd7469, %rd7431;
	not.b64 	%rd7471, %rd7433;
	and.b64  	%rd7472, %rd7434, %rd7471;
	xor.b64  	%rd7473, %rd7472, %rd7432;
	not.b64 	%rd7474, %rd7434;
	and.b64  	%rd7475, %rd7430, %rd7474;
	xor.b64  	%rd7476, %rd7475, %rd7433;
	not.b64 	%rd7477, %rd7430;
	and.b64  	%rd7478, %rd7431, %rd7477;
	xor.b64  	%rd7479, %rd7478, %rd7434;
	not.b64 	%rd7480, %rd7436;
	and.b64  	%rd7481, %rd7437, %rd7480;
	xor.b64  	%rd7482, %rd7481, %rd7435;
	not.b64 	%rd7483, %rd7437;
	and.b64  	%rd7484, %rd7438, %rd7483;
	xor.b64  	%rd7485, %rd7484, %rd7436;
	not.b64 	%rd7486, %rd7438;
	and.b64  	%rd7487, %rd7439, %rd7486;
	xor.b64  	%rd7488, %rd7487, %rd7437;
	not.b64 	%rd7489, %rd7439;
	and.b64  	%rd7490, %rd7435, %rd7489;
	xor.b64  	%rd7491, %rd7490, %rd7438;
	not.b64 	%rd7492, %rd7435;
	and.b64  	%rd7493, %rd7436, %rd7492;
	xor.b64  	%rd7494, %rd7493, %rd7439;
	not.b64 	%rd7495, %rd7441;
	and.b64  	%rd7496, %rd7442, %rd7495;
	xor.b64  	%rd7497, %rd7496, %rd7440;
	not.b64 	%rd7498, %rd7442;
	and.b64  	%rd7499, %rd7443, %rd7498;
	xor.b64  	%rd7500, %rd7499, %rd7441;
	not.b64 	%rd7501, %rd7443;
	and.b64  	%rd7502, %rd7444, %rd7501;
	xor.b64  	%rd7503, %rd7502, %rd7442;
	not.b64 	%rd7504, %rd7444;
	and.b64  	%rd7505, %rd7440, %rd7504;
	xor.b64  	%rd7506, %rd7505, %rd7443;
	not.b64 	%rd7507, %rd7440;
	and.b64  	%rd7508, %rd7441, %rd7507;
	xor.b64  	%rd7509, %rd7508, %rd7444;
	not.b64 	%rd7510, %rd7446;
	and.b64  	%rd7511, %rd7447, %rd7510;
	xor.b64  	%rd7512, %rd7511, %rd7445;
	not.b64 	%rd7513, %rd7447;
	and.b64  	%rd7514, %rd7448, %rd7513;
	xor.b64  	%rd7515, %rd7514, %rd7446;
	not.b64 	%rd7516, %rd7448;
	and.b64  	%rd7517, %rd7449, %rd7516;
	xor.b64  	%rd7518, %rd7517, %rd7447;
	not.b64 	%rd7519, %rd7449;
	and.b64  	%rd7520, %rd7445, %rd7519;
	xor.b64  	%rd7521, %rd7520, %rd7448;
	not.b64 	%rd7522, %rd7445;
	and.b64  	%rd7523, %rd7446, %rd7522;
	xor.b64  	%rd7524, %rd7523, %rd7449;
	xor.b64  	%rd7525, %rd7452, %rd36;
	xor.b64  	%rd7526, %rd7467, %rd7525;
	xor.b64  	%rd7527, %rd7526, %rd7482;
	xor.b64  	%rd7528, %rd7527, %rd7497;
	xor.b64  	%rd7529, %rd7528, %rd7512;
	xor.b64  	%rd7530, %rd7470, %rd7455;
	xor.b64  	%rd7531, %rd7530, %rd7485;
	xor.b64  	%rd7532, %rd7531, %rd7500;
	xor.b64  	%rd7533, %rd7532, %rd7515;
	xor.b64  	%rd7534, %rd7473, %rd7458;
	xor.b64  	%rd7535, %rd7534, %rd7488;
	xor.b64  	%rd7536, %rd7535, %rd7503;
	xor.b64  	%rd7537, %rd7536, %rd7518;
	xor.b64  	%rd7538, %rd7476, %rd7461;
	xor.b64  	%rd7539, %rd7538, %rd7491;
	xor.b64  	%rd7540, %rd7539, %rd7506;
	xor.b64  	%rd7541, %rd7540, %rd7521;
	xor.b64  	%rd7542, %rd7479, %rd7464;
	xor.b64  	%rd7543, %rd7542, %rd7494;
	xor.b64  	%rd7544, %rd7543, %rd7509;
	xor.b64  	%rd7545, %rd7544, %rd7524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5297}, %rd7533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5298,%dummy}, %rd7533;
	}
	shf.l.wrap.b32 	%r5299, %r5298, %r5297, 1;
	shf.l.wrap.b32 	%r5300, %r5297, %r5298, 1;
	mov.b64 	%rd7546, {%r5300, %r5299};
	xor.b64  	%rd7547, %rd7545, %rd7546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5301}, %rd7537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5302,%dummy}, %rd7537;
	}
	shf.l.wrap.b32 	%r5303, %r5302, %r5301, 1;
	shf.l.wrap.b32 	%r5304, %r5301, %r5302, 1;
	mov.b64 	%rd7548, {%r5304, %r5303};
	xor.b64  	%rd7549, %rd7548, %rd7529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5305}, %rd7541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5306,%dummy}, %rd7541;
	}
	shf.l.wrap.b32 	%r5307, %r5306, %r5305, 1;
	shf.l.wrap.b32 	%r5308, %r5305, %r5306, 1;
	mov.b64 	%rd7550, {%r5308, %r5307};
	xor.b64  	%rd7551, %rd7550, %rd7533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5309}, %rd7545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd7545;
	}
	shf.l.wrap.b32 	%r5311, %r5310, %r5309, 1;
	shf.l.wrap.b32 	%r5312, %r5309, %r5310, 1;
	mov.b64 	%rd7552, {%r5312, %r5311};
	xor.b64  	%rd7553, %rd7552, %rd7537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5313}, %rd7529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5314,%dummy}, %rd7529;
	}
	shf.l.wrap.b32 	%r5315, %r5314, %r5313, 1;
	shf.l.wrap.b32 	%r5316, %r5313, %r5314, 1;
	mov.b64 	%rd7554, {%r5316, %r5315};
	xor.b64  	%rd7555, %rd7541, %rd7554;
	xor.b64  	%rd7556, %rd7547, %rd7525;
	xor.b64  	%rd7557, %rd7549, %rd7455;
	xor.b64  	%rd7558, %rd7551, %rd7458;
	xor.b64  	%rd7559, %rd7553, %rd7461;
	xor.b64  	%rd7560, %rd7555, %rd7464;
	xor.b64  	%rd7561, %rd7547, %rd7467;
	xor.b64  	%rd7562, %rd7549, %rd7470;
	xor.b64  	%rd7563, %rd7551, %rd7473;
	xor.b64  	%rd7564, %rd7553, %rd7476;
	xor.b64  	%rd7565, %rd7555, %rd7479;
	xor.b64  	%rd7566, %rd7547, %rd7482;
	xor.b64  	%rd7567, %rd7549, %rd7485;
	xor.b64  	%rd7568, %rd7551, %rd7488;
	xor.b64  	%rd7569, %rd7553, %rd7491;
	xor.b64  	%rd7570, %rd7555, %rd7494;
	xor.b64  	%rd7571, %rd7547, %rd7497;
	xor.b64  	%rd7572, %rd7549, %rd7500;
	xor.b64  	%rd7573, %rd7551, %rd7503;
	xor.b64  	%rd7574, %rd7553, %rd7506;
	xor.b64  	%rd7575, %rd7555, %rd7509;
	xor.b64  	%rd7576, %rd7547, %rd7512;
	xor.b64  	%rd7577, %rd7549, %rd7515;
	xor.b64  	%rd7578, %rd7551, %rd7518;
	xor.b64  	%rd7579, %rd7553, %rd7521;
	xor.b64  	%rd7580, %rd7555, %rd7524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5317,%dummy}, %rd7562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5318}, %rd7562;
	}
	shf.r.wrap.b32 	%r5319, %r5318, %r5317, 20;
	shf.r.wrap.b32 	%r5320, %r5317, %r5318, 20;
	mov.b64 	%rd7581, {%r5320, %r5319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5321,%dummy}, %rd7568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5322}, %rd7568;
	}
	shf.r.wrap.b32 	%r5323, %r5322, %r5321, 21;
	shf.r.wrap.b32 	%r5324, %r5321, %r5322, 21;
	mov.b64 	%rd7582, {%r5324, %r5323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5325}, %rd7574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd7574;
	}
	shf.l.wrap.b32 	%r5327, %r5326, %r5325, 21;
	shf.l.wrap.b32 	%r5328, %r5325, %r5326, 21;
	mov.b64 	%rd7583, {%r5328, %r5327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5329}, %rd7580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5330,%dummy}, %rd7580;
	}
	shf.l.wrap.b32 	%r5331, %r5330, %r5329, 14;
	shf.l.wrap.b32 	%r5332, %r5329, %r5330, 14;
	mov.b64 	%rd7584, {%r5332, %r5331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5333}, %rd7559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5334,%dummy}, %rd7559;
	}
	shf.l.wrap.b32 	%r5335, %r5334, %r5333, 28;
	shf.l.wrap.b32 	%r5336, %r5333, %r5334, 28;
	mov.b64 	%rd7585, {%r5336, %r5335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5337}, %rd7565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5338,%dummy}, %rd7565;
	}
	shf.l.wrap.b32 	%r5339, %r5338, %r5337, 20;
	shf.l.wrap.b32 	%r5340, %r5337, %r5338, 20;
	mov.b64 	%rd7586, {%r5340, %r5339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5341}, %rd7566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5342,%dummy}, %rd7566;
	}
	shf.l.wrap.b32 	%r5343, %r5342, %r5341, 3;
	shf.l.wrap.b32 	%r5344, %r5341, %r5342, 3;
	mov.b64 	%rd7587, {%r5344, %r5343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5345,%dummy}, %rd7572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5346}, %rd7572;
	}
	shf.r.wrap.b32 	%r5347, %r5346, %r5345, 19;
	shf.r.wrap.b32 	%r5348, %r5345, %r5346, 19;
	mov.b64 	%rd7588, {%r5348, %r5347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5349,%dummy}, %rd7578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5350}, %rd7578;
	}
	shf.r.wrap.b32 	%r5351, %r5350, %r5349, 3;
	shf.r.wrap.b32 	%r5352, %r5349, %r5350, 3;
	mov.b64 	%rd7589, {%r5352, %r5351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5354,%dummy}, %rd7557;
	}
	shf.l.wrap.b32 	%r5355, %r5354, %r5353, 1;
	shf.l.wrap.b32 	%r5356, %r5353, %r5354, 1;
	mov.b64 	%rd7590, {%r5356, %r5355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5357}, %rd7563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5358,%dummy}, %rd7563;
	}
	shf.l.wrap.b32 	%r5359, %r5358, %r5357, 6;
	shf.l.wrap.b32 	%r5360, %r5357, %r5358, 6;
	mov.b64 	%rd7591, {%r5360, %r5359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5361}, %rd7569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5362,%dummy}, %rd7569;
	}
	shf.l.wrap.b32 	%r5363, %r5362, %r5361, 25;
	shf.l.wrap.b32 	%r5364, %r5361, %r5362, 25;
	mov.b64 	%rd7592, {%r5364, %r5363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5365}, %rd7575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5366,%dummy}, %rd7575;
	}
	shf.l.wrap.b32 	%r5367, %r5366, %r5365, 8;
	shf.l.wrap.b32 	%r5368, %r5365, %r5366, 8;
	mov.b64 	%rd7593, {%r5368, %r5367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5369}, %rd7576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5370,%dummy}, %rd7576;
	}
	shf.l.wrap.b32 	%r5371, %r5370, %r5369, 18;
	shf.l.wrap.b32 	%r5372, %r5369, %r5370, 18;
	mov.b64 	%rd7594, {%r5372, %r5371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5373}, %rd7560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5374,%dummy}, %rd7560;
	}
	shf.l.wrap.b32 	%r5375, %r5374, %r5373, 27;
	shf.l.wrap.b32 	%r5376, %r5373, %r5374, 27;
	mov.b64 	%rd7595, {%r5376, %r5375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5377,%dummy}, %rd7561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5378}, %rd7561;
	}
	shf.r.wrap.b32 	%r5379, %r5378, %r5377, 28;
	shf.r.wrap.b32 	%r5380, %r5377, %r5378, 28;
	mov.b64 	%rd7596, {%r5380, %r5379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5381}, %rd7567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5382,%dummy}, %rd7567;
	}
	shf.l.wrap.b32 	%r5383, %r5382, %r5381, 10;
	shf.l.wrap.b32 	%r5384, %r5381, %r5382, 10;
	mov.b64 	%rd7597, {%r5384, %r5383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5385}, %rd7573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5386,%dummy}, %rd7573;
	}
	shf.l.wrap.b32 	%r5387, %r5386, %r5385, 15;
	shf.l.wrap.b32 	%r5388, %r5385, %r5386, 15;
	mov.b64 	%rd7598, {%r5388, %r5387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5389,%dummy}, %rd7579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5390}, %rd7579;
	}
	shf.r.wrap.b32 	%r5391, %r5390, %r5389, 8;
	shf.r.wrap.b32 	%r5392, %r5389, %r5390, 8;
	mov.b64 	%rd7599, {%r5392, %r5391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5393,%dummy}, %rd7558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5394}, %rd7558;
	}
	shf.r.wrap.b32 	%r5395, %r5394, %r5393, 2;
	shf.r.wrap.b32 	%r5396, %r5393, %r5394, 2;
	mov.b64 	%rd7600, {%r5396, %r5395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5397,%dummy}, %rd7564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5398}, %rd7564;
	}
	shf.r.wrap.b32 	%r5399, %r5398, %r5397, 9;
	shf.r.wrap.b32 	%r5400, %r5397, %r5398, 9;
	mov.b64 	%rd7601, {%r5400, %r5399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5401,%dummy}, %rd7570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5402}, %rd7570;
	}
	shf.r.wrap.b32 	%r5403, %r5402, %r5401, 25;
	shf.r.wrap.b32 	%r5404, %r5401, %r5402, 25;
	mov.b64 	%rd7602, {%r5404, %r5403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5405,%dummy}, %rd7571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5406}, %rd7571;
	}
	shf.r.wrap.b32 	%r5407, %r5406, %r5405, 23;
	shf.r.wrap.b32 	%r5408, %r5405, %r5406, 23;
	mov.b64 	%rd7603, {%r5408, %r5407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5409}, %rd7577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5410,%dummy}, %rd7577;
	}
	shf.l.wrap.b32 	%r5411, %r5410, %r5409, 2;
	shf.l.wrap.b32 	%r5412, %r5409, %r5410, 2;
	mov.b64 	%rd7604, {%r5412, %r5411};
	not.b64 	%rd7605, %rd7581;
	and.b64  	%rd7606, %rd7582, %rd7605;
	xor.b64  	%rd7607, %rd7606, %rd7556;
	not.b64 	%rd7608, %rd7582;
	and.b64  	%rd7609, %rd7583, %rd7608;
	xor.b64  	%rd7610, %rd7609, %rd7581;
	not.b64 	%rd7611, %rd7583;
	and.b64  	%rd7612, %rd7584, %rd7611;
	xor.b64  	%rd7613, %rd7612, %rd7582;
	not.b64 	%rd7614, %rd7584;
	and.b64  	%rd7615, %rd7556, %rd7614;
	xor.b64  	%rd7616, %rd7615, %rd7583;
	not.b64 	%rd7617, %rd7556;
	and.b64  	%rd7618, %rd7581, %rd7617;
	xor.b64  	%rd7619, %rd7618, %rd7584;
	not.b64 	%rd7620, %rd7586;
	and.b64  	%rd7621, %rd7587, %rd7620;
	xor.b64  	%rd7622, %rd7621, %rd7585;
	not.b64 	%rd7623, %rd7587;
	and.b64  	%rd7624, %rd7588, %rd7623;
	xor.b64  	%rd7625, %rd7624, %rd7586;
	not.b64 	%rd7626, %rd7588;
	and.b64  	%rd7627, %rd7589, %rd7626;
	xor.b64  	%rd7628, %rd7627, %rd7587;
	not.b64 	%rd7629, %rd7589;
	and.b64  	%rd7630, %rd7585, %rd7629;
	xor.b64  	%rd7631, %rd7630, %rd7588;
	not.b64 	%rd7632, %rd7585;
	and.b64  	%rd7633, %rd7586, %rd7632;
	xor.b64  	%rd7634, %rd7633, %rd7589;
	not.b64 	%rd7635, %rd7591;
	and.b64  	%rd7636, %rd7592, %rd7635;
	xor.b64  	%rd7637, %rd7636, %rd7590;
	not.b64 	%rd7638, %rd7592;
	and.b64  	%rd7639, %rd7593, %rd7638;
	xor.b64  	%rd7640, %rd7639, %rd7591;
	not.b64 	%rd7641, %rd7593;
	and.b64  	%rd7642, %rd7594, %rd7641;
	xor.b64  	%rd7643, %rd7642, %rd7592;
	not.b64 	%rd7644, %rd7594;
	and.b64  	%rd7645, %rd7590, %rd7644;
	xor.b64  	%rd7646, %rd7645, %rd7593;
	not.b64 	%rd7647, %rd7590;
	and.b64  	%rd7648, %rd7591, %rd7647;
	xor.b64  	%rd7649, %rd7648, %rd7594;
	not.b64 	%rd7650, %rd7596;
	and.b64  	%rd7651, %rd7597, %rd7650;
	xor.b64  	%rd7652, %rd7651, %rd7595;
	not.b64 	%rd7653, %rd7597;
	and.b64  	%rd7654, %rd7598, %rd7653;
	xor.b64  	%rd7655, %rd7654, %rd7596;
	not.b64 	%rd7656, %rd7598;
	and.b64  	%rd7657, %rd7599, %rd7656;
	xor.b64  	%rd7658, %rd7657, %rd7597;
	not.b64 	%rd7659, %rd7599;
	and.b64  	%rd7660, %rd7595, %rd7659;
	xor.b64  	%rd7661, %rd7660, %rd7598;
	not.b64 	%rd7662, %rd7595;
	and.b64  	%rd7663, %rd7596, %rd7662;
	xor.b64  	%rd7664, %rd7663, %rd7599;
	not.b64 	%rd7665, %rd7601;
	and.b64  	%rd7666, %rd7602, %rd7665;
	xor.b64  	%rd7667, %rd7666, %rd7600;
	not.b64 	%rd7668, %rd7602;
	and.b64  	%rd7669, %rd7603, %rd7668;
	xor.b64  	%rd7670, %rd7669, %rd7601;
	not.b64 	%rd7671, %rd7603;
	and.b64  	%rd7672, %rd7604, %rd7671;
	xor.b64  	%rd7673, %rd7672, %rd7602;
	not.b64 	%rd7674, %rd7604;
	and.b64  	%rd7675, %rd7600, %rd7674;
	xor.b64  	%rd7676, %rd7675, %rd7603;
	not.b64 	%rd7677, %rd7600;
	and.b64  	%rd7678, %rd7601, %rd7677;
	xor.b64  	%rd7679, %rd7678, %rd7604;
	xor.b64  	%rd7680, %rd7607, %rd37;
	xor.b64  	%rd7681, %rd7622, %rd7680;
	xor.b64  	%rd7682, %rd7681, %rd7637;
	xor.b64  	%rd7683, %rd7682, %rd7652;
	xor.b64  	%rd7684, %rd7683, %rd7667;
	xor.b64  	%rd7685, %rd7625, %rd7610;
	xor.b64  	%rd7686, %rd7685, %rd7640;
	xor.b64  	%rd7687, %rd7686, %rd7655;
	xor.b64  	%rd7688, %rd7687, %rd7670;
	xor.b64  	%rd7689, %rd7628, %rd7613;
	xor.b64  	%rd7690, %rd7689, %rd7643;
	xor.b64  	%rd7691, %rd7690, %rd7658;
	xor.b64  	%rd7692, %rd7691, %rd7673;
	xor.b64  	%rd7693, %rd7631, %rd7616;
	xor.b64  	%rd7694, %rd7693, %rd7646;
	xor.b64  	%rd7695, %rd7694, %rd7661;
	xor.b64  	%rd7696, %rd7695, %rd7676;
	xor.b64  	%rd7697, %rd7634, %rd7619;
	xor.b64  	%rd7698, %rd7697, %rd7649;
	xor.b64  	%rd7699, %rd7698, %rd7664;
	xor.b64  	%rd7700, %rd7699, %rd7679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5413}, %rd7688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5414,%dummy}, %rd7688;
	}
	shf.l.wrap.b32 	%r5415, %r5414, %r5413, 1;
	shf.l.wrap.b32 	%r5416, %r5413, %r5414, 1;
	mov.b64 	%rd7701, {%r5416, %r5415};
	xor.b64  	%rd7702, %rd7700, %rd7701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5417}, %rd7692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5418,%dummy}, %rd7692;
	}
	shf.l.wrap.b32 	%r5419, %r5418, %r5417, 1;
	shf.l.wrap.b32 	%r5420, %r5417, %r5418, 1;
	mov.b64 	%rd7703, {%r5420, %r5419};
	xor.b64  	%rd7704, %rd7703, %rd7684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5421}, %rd7696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd7696;
	}
	shf.l.wrap.b32 	%r5423, %r5422, %r5421, 1;
	shf.l.wrap.b32 	%r5424, %r5421, %r5422, 1;
	mov.b64 	%rd7705, {%r5424, %r5423};
	xor.b64  	%rd7706, %rd7705, %rd7688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5425}, %rd7700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5426,%dummy}, %rd7700;
	}
	shf.l.wrap.b32 	%r5427, %r5426, %r5425, 1;
	shf.l.wrap.b32 	%r5428, %r5425, %r5426, 1;
	mov.b64 	%rd7707, {%r5428, %r5427};
	xor.b64  	%rd7708, %rd7707, %rd7692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5429}, %rd7684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5430,%dummy}, %rd7684;
	}
	shf.l.wrap.b32 	%r5431, %r5430, %r5429, 1;
	shf.l.wrap.b32 	%r5432, %r5429, %r5430, 1;
	mov.b64 	%rd7709, {%r5432, %r5431};
	xor.b64  	%rd7710, %rd7696, %rd7709;
	xor.b64  	%rd7711, %rd7702, %rd7680;
	xor.b64  	%rd7712, %rd7704, %rd7610;
	xor.b64  	%rd7713, %rd7706, %rd7613;
	xor.b64  	%rd7714, %rd7708, %rd7616;
	xor.b64  	%rd7715, %rd7710, %rd7619;
	xor.b64  	%rd7716, %rd7702, %rd7622;
	xor.b64  	%rd7717, %rd7704, %rd7625;
	xor.b64  	%rd7718, %rd7706, %rd7628;
	xor.b64  	%rd7719, %rd7708, %rd7631;
	xor.b64  	%rd7720, %rd7710, %rd7634;
	xor.b64  	%rd7721, %rd7702, %rd7637;
	xor.b64  	%rd7722, %rd7704, %rd7640;
	xor.b64  	%rd7723, %rd7706, %rd7643;
	xor.b64  	%rd7724, %rd7708, %rd7646;
	xor.b64  	%rd7725, %rd7710, %rd7649;
	xor.b64  	%rd7726, %rd7702, %rd7652;
	xor.b64  	%rd7727, %rd7704, %rd7655;
	xor.b64  	%rd7728, %rd7706, %rd7658;
	xor.b64  	%rd7729, %rd7708, %rd7661;
	xor.b64  	%rd7730, %rd7710, %rd7664;
	xor.b64  	%rd7731, %rd7702, %rd7667;
	xor.b64  	%rd7732, %rd7704, %rd7670;
	xor.b64  	%rd7733, %rd7706, %rd7673;
	xor.b64  	%rd7734, %rd7708, %rd7676;
	xor.b64  	%rd7735, %rd7710, %rd7679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5433,%dummy}, %rd7717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5434}, %rd7717;
	}
	shf.r.wrap.b32 	%r5435, %r5434, %r5433, 20;
	shf.r.wrap.b32 	%r5436, %r5433, %r5434, 20;
	mov.b64 	%rd7736, {%r5436, %r5435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5437,%dummy}, %rd7723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5438}, %rd7723;
	}
	shf.r.wrap.b32 	%r5439, %r5438, %r5437, 21;
	shf.r.wrap.b32 	%r5440, %r5437, %r5438, 21;
	mov.b64 	%rd7737, {%r5440, %r5439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd7729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5442,%dummy}, %rd7729;
	}
	shf.l.wrap.b32 	%r5443, %r5442, %r5441, 21;
	shf.l.wrap.b32 	%r5444, %r5441, %r5442, 21;
	mov.b64 	%rd7738, {%r5444, %r5443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5445}, %rd7735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5446,%dummy}, %rd7735;
	}
	shf.l.wrap.b32 	%r5447, %r5446, %r5445, 14;
	shf.l.wrap.b32 	%r5448, %r5445, %r5446, 14;
	mov.b64 	%rd7739, {%r5448, %r5447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd7714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5450,%dummy}, %rd7714;
	}
	shf.l.wrap.b32 	%r5451, %r5450, %r5449, 28;
	shf.l.wrap.b32 	%r5452, %r5449, %r5450, 28;
	mov.b64 	%rd7740, {%r5452, %r5451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5453}, %rd7720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5454,%dummy}, %rd7720;
	}
	shf.l.wrap.b32 	%r5455, %r5454, %r5453, 20;
	shf.l.wrap.b32 	%r5456, %r5453, %r5454, 20;
	mov.b64 	%rd7741, {%r5456, %r5455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd7721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5458,%dummy}, %rd7721;
	}
	shf.l.wrap.b32 	%r5459, %r5458, %r5457, 3;
	shf.l.wrap.b32 	%r5460, %r5457, %r5458, 3;
	mov.b64 	%rd7742, {%r5460, %r5459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5461,%dummy}, %rd7727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5462}, %rd7727;
	}
	shf.r.wrap.b32 	%r5463, %r5462, %r5461, 19;
	shf.r.wrap.b32 	%r5464, %r5461, %r5462, 19;
	mov.b64 	%rd7743, {%r5464, %r5463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5465,%dummy}, %rd7733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5466}, %rd7733;
	}
	shf.r.wrap.b32 	%r5467, %r5466, %r5465, 3;
	shf.r.wrap.b32 	%r5468, %r5465, %r5466, 3;
	mov.b64 	%rd7744, {%r5468, %r5467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5469}, %rd7712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5470,%dummy}, %rd7712;
	}
	shf.l.wrap.b32 	%r5471, %r5470, %r5469, 1;
	shf.l.wrap.b32 	%r5472, %r5469, %r5470, 1;
	mov.b64 	%rd7745, {%r5472, %r5471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5473}, %rd7718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd7718;
	}
	shf.l.wrap.b32 	%r5475, %r5474, %r5473, 6;
	shf.l.wrap.b32 	%r5476, %r5473, %r5474, 6;
	mov.b64 	%rd7746, {%r5476, %r5475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5477}, %rd7724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5478,%dummy}, %rd7724;
	}
	shf.l.wrap.b32 	%r5479, %r5478, %r5477, 25;
	shf.l.wrap.b32 	%r5480, %r5477, %r5478, 25;
	mov.b64 	%rd7747, {%r5480, %r5479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5481}, %rd7730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd7730;
	}
	shf.l.wrap.b32 	%r5483, %r5482, %r5481, 8;
	shf.l.wrap.b32 	%r5484, %r5481, %r5482, 8;
	mov.b64 	%rd7748, {%r5484, %r5483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5485}, %rd7731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5486,%dummy}, %rd7731;
	}
	shf.l.wrap.b32 	%r5487, %r5486, %r5485, 18;
	shf.l.wrap.b32 	%r5488, %r5485, %r5486, 18;
	mov.b64 	%rd7749, {%r5488, %r5487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd7715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5490,%dummy}, %rd7715;
	}
	shf.l.wrap.b32 	%r5491, %r5490, %r5489, 27;
	shf.l.wrap.b32 	%r5492, %r5489, %r5490, 27;
	mov.b64 	%rd7750, {%r5492, %r5491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd7716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd7716;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 28;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 28;
	mov.b64 	%rd7751, {%r5496, %r5495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd7722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5498,%dummy}, %rd7722;
	}
	shf.l.wrap.b32 	%r5499, %r5498, %r5497, 10;
	shf.l.wrap.b32 	%r5500, %r5497, %r5498, 10;
	mov.b64 	%rd7752, {%r5500, %r5499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd7728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5502,%dummy}, %rd7728;
	}
	shf.l.wrap.b32 	%r5503, %r5502, %r5501, 15;
	shf.l.wrap.b32 	%r5504, %r5501, %r5502, 15;
	mov.b64 	%rd7753, {%r5504, %r5503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5505,%dummy}, %rd7734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5506}, %rd7734;
	}
	shf.r.wrap.b32 	%r5507, %r5506, %r5505, 8;
	shf.r.wrap.b32 	%r5508, %r5505, %r5506, 8;
	mov.b64 	%rd7754, {%r5508, %r5507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd7713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd7713;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 2;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 2;
	mov.b64 	%rd7755, {%r5512, %r5511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5513,%dummy}, %rd7719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5514}, %rd7719;
	}
	shf.r.wrap.b32 	%r5515, %r5514, %r5513, 9;
	shf.r.wrap.b32 	%r5516, %r5513, %r5514, 9;
	mov.b64 	%rd7756, {%r5516, %r5515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd7725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd7725;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 25;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 25;
	mov.b64 	%rd7757, {%r5520, %r5519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5521,%dummy}, %rd7726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5522}, %rd7726;
	}
	shf.r.wrap.b32 	%r5523, %r5522, %r5521, 23;
	shf.r.wrap.b32 	%r5524, %r5521, %r5522, 23;
	mov.b64 	%rd7758, {%r5524, %r5523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5525}, %rd7732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd7732;
	}
	shf.l.wrap.b32 	%r5527, %r5526, %r5525, 2;
	shf.l.wrap.b32 	%r5528, %r5525, %r5526, 2;
	mov.b64 	%rd7759, {%r5528, %r5527};
	not.b64 	%rd7760, %rd7736;
	and.b64  	%rd7761, %rd7737, %rd7760;
	xor.b64  	%rd7762, %rd7761, %rd7711;
	not.b64 	%rd7763, %rd7737;
	and.b64  	%rd7764, %rd7738, %rd7763;
	xor.b64  	%rd7765, %rd7764, %rd7736;
	not.b64 	%rd7766, %rd7738;
	and.b64  	%rd7767, %rd7739, %rd7766;
	xor.b64  	%rd7768, %rd7767, %rd7737;
	not.b64 	%rd7769, %rd7739;
	and.b64  	%rd7770, %rd7711, %rd7769;
	xor.b64  	%rd7771, %rd7770, %rd7738;
	not.b64 	%rd7772, %rd7711;
	and.b64  	%rd7773, %rd7736, %rd7772;
	xor.b64  	%rd7774, %rd7773, %rd7739;
	not.b64 	%rd7775, %rd7741;
	and.b64  	%rd7776, %rd7742, %rd7775;
	xor.b64  	%rd7777, %rd7776, %rd7740;
	not.b64 	%rd7778, %rd7742;
	and.b64  	%rd7779, %rd7743, %rd7778;
	xor.b64  	%rd7780, %rd7779, %rd7741;
	not.b64 	%rd7781, %rd7743;
	and.b64  	%rd7782, %rd7744, %rd7781;
	xor.b64  	%rd7783, %rd7782, %rd7742;
	not.b64 	%rd7784, %rd7744;
	and.b64  	%rd7785, %rd7740, %rd7784;
	xor.b64  	%rd7786, %rd7785, %rd7743;
	not.b64 	%rd7787, %rd7740;
	and.b64  	%rd7788, %rd7741, %rd7787;
	xor.b64  	%rd7789, %rd7788, %rd7744;
	not.b64 	%rd7790, %rd7746;
	and.b64  	%rd7791, %rd7747, %rd7790;
	xor.b64  	%rd7792, %rd7791, %rd7745;
	not.b64 	%rd7793, %rd7747;
	and.b64  	%rd7794, %rd7748, %rd7793;
	xor.b64  	%rd7795, %rd7794, %rd7746;
	not.b64 	%rd7796, %rd7748;
	and.b64  	%rd7797, %rd7749, %rd7796;
	xor.b64  	%rd7798, %rd7797, %rd7747;
	not.b64 	%rd7799, %rd7749;
	and.b64  	%rd7800, %rd7745, %rd7799;
	xor.b64  	%rd7801, %rd7800, %rd7748;
	not.b64 	%rd7802, %rd7745;
	and.b64  	%rd7803, %rd7746, %rd7802;
	xor.b64  	%rd7804, %rd7803, %rd7749;
	not.b64 	%rd7805, %rd7751;
	and.b64  	%rd7806, %rd7752, %rd7805;
	xor.b64  	%rd7807, %rd7806, %rd7750;
	not.b64 	%rd7808, %rd7752;
	and.b64  	%rd7809, %rd7753, %rd7808;
	xor.b64  	%rd7810, %rd7809, %rd7751;
	not.b64 	%rd7811, %rd7753;
	and.b64  	%rd7812, %rd7754, %rd7811;
	xor.b64  	%rd7813, %rd7812, %rd7752;
	not.b64 	%rd7814, %rd7754;
	and.b64  	%rd7815, %rd7750, %rd7814;
	xor.b64  	%rd7816, %rd7815, %rd7753;
	not.b64 	%rd7817, %rd7750;
	and.b64  	%rd7818, %rd7751, %rd7817;
	xor.b64  	%rd7819, %rd7818, %rd7754;
	not.b64 	%rd7820, %rd7756;
	and.b64  	%rd7821, %rd7757, %rd7820;
	xor.b64  	%rd7822, %rd7821, %rd7755;
	not.b64 	%rd7823, %rd7757;
	and.b64  	%rd7824, %rd7758, %rd7823;
	xor.b64  	%rd7825, %rd7824, %rd7756;
	not.b64 	%rd7826, %rd7758;
	and.b64  	%rd7827, %rd7759, %rd7826;
	xor.b64  	%rd7828, %rd7827, %rd7757;
	not.b64 	%rd7829, %rd7759;
	and.b64  	%rd7830, %rd7755, %rd7829;
	xor.b64  	%rd7831, %rd7830, %rd7758;
	not.b64 	%rd7832, %rd7755;
	and.b64  	%rd7833, %rd7756, %rd7832;
	xor.b64  	%rd7834, %rd7833, %rd7759;
	xor.b64  	%rd7835, %rd7762, %rd38;
	xor.b64  	%rd7836, %rd7777, %rd7835;
	xor.b64  	%rd7837, %rd7836, %rd7792;
	xor.b64  	%rd7838, %rd7837, %rd7807;
	xor.b64  	%rd7839, %rd7838, %rd7822;
	xor.b64  	%rd7840, %rd7780, %rd7765;
	xor.b64  	%rd7841, %rd7840, %rd7795;
	xor.b64  	%rd7842, %rd7841, %rd7810;
	xor.b64  	%rd7843, %rd7842, %rd7825;
	xor.b64  	%rd7844, %rd7783, %rd7768;
	xor.b64  	%rd7845, %rd7844, %rd7798;
	xor.b64  	%rd7846, %rd7845, %rd7813;
	xor.b64  	%rd7847, %rd7846, %rd7828;
	xor.b64  	%rd7848, %rd7786, %rd7771;
	xor.b64  	%rd7849, %rd7848, %rd7801;
	xor.b64  	%rd7850, %rd7849, %rd7816;
	xor.b64  	%rd7851, %rd7850, %rd7831;
	xor.b64  	%rd7852, %rd7789, %rd7774;
	xor.b64  	%rd7853, %rd7852, %rd7804;
	xor.b64  	%rd7854, %rd7853, %rd7819;
	xor.b64  	%rd7855, %rd7854, %rd7834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd7843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5530,%dummy}, %rd7843;
	}
	shf.l.wrap.b32 	%r5531, %r5530, %r5529, 1;
	shf.l.wrap.b32 	%r5532, %r5529, %r5530, 1;
	mov.b64 	%rd7856, {%r5532, %r5531};
	xor.b64  	%rd7857, %rd7855, %rd7856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5533}, %rd7847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd7847;
	}
	shf.l.wrap.b32 	%r5535, %r5534, %r5533, 1;
	shf.l.wrap.b32 	%r5536, %r5533, %r5534, 1;
	mov.b64 	%rd7858, {%r5536, %r5535};
	xor.b64  	%rd7859, %rd7858, %rd7839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd7851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5538,%dummy}, %rd7851;
	}
	shf.l.wrap.b32 	%r5539, %r5538, %r5537, 1;
	shf.l.wrap.b32 	%r5540, %r5537, %r5538, 1;
	mov.b64 	%rd7860, {%r5540, %r5539};
	xor.b64  	%rd7861, %rd7860, %rd7843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5541}, %rd7855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5542,%dummy}, %rd7855;
	}
	shf.l.wrap.b32 	%r5543, %r5542, %r5541, 1;
	shf.l.wrap.b32 	%r5544, %r5541, %r5542, 1;
	mov.b64 	%rd7862, {%r5544, %r5543};
	xor.b64  	%rd7863, %rd7862, %rd7847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd7839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5546,%dummy}, %rd7839;
	}
	shf.l.wrap.b32 	%r5547, %r5546, %r5545, 1;
	shf.l.wrap.b32 	%r5548, %r5545, %r5546, 1;
	mov.b64 	%rd7864, {%r5548, %r5547};
	xor.b64  	%rd7865, %rd7851, %rd7864;
	xor.b64  	%rd7866, %rd7857, %rd7835;
	xor.b64  	%rd7867, %rd7859, %rd7765;
	xor.b64  	%rd7868, %rd7861, %rd7768;
	xor.b64  	%rd7869, %rd7863, %rd7771;
	xor.b64  	%rd7870, %rd7865, %rd7774;
	xor.b64  	%rd7871, %rd7857, %rd7777;
	xor.b64  	%rd7872, %rd7859, %rd7780;
	xor.b64  	%rd7873, %rd7861, %rd7783;
	xor.b64  	%rd7874, %rd7863, %rd7786;
	xor.b64  	%rd7875, %rd7865, %rd7789;
	xor.b64  	%rd7876, %rd7857, %rd7792;
	xor.b64  	%rd7877, %rd7859, %rd7795;
	xor.b64  	%rd7878, %rd7861, %rd7798;
	xor.b64  	%rd7879, %rd7863, %rd7801;
	xor.b64  	%rd7880, %rd7865, %rd7804;
	xor.b64  	%rd7881, %rd7857, %rd7807;
	xor.b64  	%rd7882, %rd7859, %rd7810;
	xor.b64  	%rd7883, %rd7861, %rd7813;
	xor.b64  	%rd7884, %rd7863, %rd7816;
	xor.b64  	%rd7885, %rd7865, %rd7819;
	xor.b64  	%rd7886, %rd7857, %rd7822;
	xor.b64  	%rd7887, %rd7859, %rd7825;
	xor.b64  	%rd7888, %rd7861, %rd7828;
	xor.b64  	%rd7889, %rd7863, %rd7831;
	xor.b64  	%rd7890, %rd7865, %rd7834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5549,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5550}, %rd7872;
	}
	shf.r.wrap.b32 	%r5551, %r5550, %r5549, 20;
	shf.r.wrap.b32 	%r5552, %r5549, %r5550, 20;
	mov.b64 	%rd7891, {%r5552, %r5551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5553,%dummy}, %rd7878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5554}, %rd7878;
	}
	shf.r.wrap.b32 	%r5555, %r5554, %r5553, 21;
	shf.r.wrap.b32 	%r5556, %r5553, %r5554, 21;
	mov.b64 	%rd7892, {%r5556, %r5555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5557}, %rd7884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5558,%dummy}, %rd7884;
	}
	shf.l.wrap.b32 	%r5559, %r5558, %r5557, 21;
	shf.l.wrap.b32 	%r5560, %r5557, %r5558, 21;
	mov.b64 	%rd7893, {%r5560, %r5559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd7890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5562,%dummy}, %rd7890;
	}
	shf.l.wrap.b32 	%r5563, %r5562, %r5561, 14;
	shf.l.wrap.b32 	%r5564, %r5561, %r5562, 14;
	mov.b64 	%rd7894, {%r5564, %r5563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5565}, %rd7869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5566,%dummy}, %rd7869;
	}
	shf.l.wrap.b32 	%r5567, %r5566, %r5565, 28;
	shf.l.wrap.b32 	%r5568, %r5565, %r5566, 28;
	mov.b64 	%rd7895, {%r5568, %r5567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd7875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5570,%dummy}, %rd7875;
	}
	shf.l.wrap.b32 	%r5571, %r5570, %r5569, 20;
	shf.l.wrap.b32 	%r5572, %r5569, %r5570, 20;
	mov.b64 	%rd7896, {%r5572, %r5571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5573}, %rd7876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5574,%dummy}, %rd7876;
	}
	shf.l.wrap.b32 	%r5575, %r5574, %r5573, 3;
	shf.l.wrap.b32 	%r5576, %r5573, %r5574, 3;
	mov.b64 	%rd7897, {%r5576, %r5575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5577,%dummy}, %rd7882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5578}, %rd7882;
	}
	shf.r.wrap.b32 	%r5579, %r5578, %r5577, 19;
	shf.r.wrap.b32 	%r5580, %r5577, %r5578, 19;
	mov.b64 	%rd7898, {%r5580, %r5579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5581,%dummy}, %rd7888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5582}, %rd7888;
	}
	shf.r.wrap.b32 	%r5583, %r5582, %r5581, 3;
	shf.r.wrap.b32 	%r5584, %r5581, %r5582, 3;
	mov.b64 	%rd7899, {%r5584, %r5583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd7867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd7867;
	}
	shf.l.wrap.b32 	%r5587, %r5586, %r5585, 1;
	shf.l.wrap.b32 	%r5588, %r5585, %r5586, 1;
	mov.b64 	%rd7900, {%r5588, %r5587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5589}, %rd7873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5590,%dummy}, %rd7873;
	}
	shf.l.wrap.b32 	%r5591, %r5590, %r5589, 6;
	shf.l.wrap.b32 	%r5592, %r5589, %r5590, 6;
	mov.b64 	%rd7901, {%r5592, %r5591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5593}, %rd7879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5594,%dummy}, %rd7879;
	}
	shf.l.wrap.b32 	%r5595, %r5594, %r5593, 25;
	shf.l.wrap.b32 	%r5596, %r5593, %r5594, 25;
	mov.b64 	%rd7902, {%r5596, %r5595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd7885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5598,%dummy}, %rd7885;
	}
	shf.l.wrap.b32 	%r5599, %r5598, %r5597, 8;
	shf.l.wrap.b32 	%r5600, %r5597, %r5598, 8;
	mov.b64 	%rd7903, {%r5600, %r5599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5601}, %rd7886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5602,%dummy}, %rd7886;
	}
	shf.l.wrap.b32 	%r5603, %r5602, %r5601, 18;
	shf.l.wrap.b32 	%r5604, %r5601, %r5602, 18;
	mov.b64 	%rd7904, {%r5604, %r5603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd7870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5606,%dummy}, %rd7870;
	}
	shf.l.wrap.b32 	%r5607, %r5606, %r5605, 27;
	shf.l.wrap.b32 	%r5608, %r5605, %r5606, 27;
	mov.b64 	%rd7905, {%r5608, %r5607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5609,%dummy}, %rd7871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5610}, %rd7871;
	}
	shf.r.wrap.b32 	%r5611, %r5610, %r5609, 28;
	shf.r.wrap.b32 	%r5612, %r5609, %r5610, 28;
	mov.b64 	%rd7906, {%r5612, %r5611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd7877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5614,%dummy}, %rd7877;
	}
	shf.l.wrap.b32 	%r5615, %r5614, %r5613, 10;
	shf.l.wrap.b32 	%r5616, %r5613, %r5614, 10;
	mov.b64 	%rd7907, {%r5616, %r5615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd7883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5618,%dummy}, %rd7883;
	}
	shf.l.wrap.b32 	%r5619, %r5618, %r5617, 15;
	shf.l.wrap.b32 	%r5620, %r5617, %r5618, 15;
	mov.b64 	%rd7908, {%r5620, %r5619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd7889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd7889;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 8;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 8;
	mov.b64 	%rd7909, {%r5624, %r5623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5625,%dummy}, %rd7868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5626}, %rd7868;
	}
	shf.r.wrap.b32 	%r5627, %r5626, %r5625, 2;
	shf.r.wrap.b32 	%r5628, %r5625, %r5626, 2;
	mov.b64 	%rd7910, {%r5628, %r5627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd7874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd7874;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 9;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 9;
	mov.b64 	%rd7911, {%r5632, %r5631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5633,%dummy}, %rd7880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5634}, %rd7880;
	}
	shf.r.wrap.b32 	%r5635, %r5634, %r5633, 25;
	shf.r.wrap.b32 	%r5636, %r5633, %r5634, 25;
	mov.b64 	%rd7912, {%r5636, %r5635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5637,%dummy}, %rd7881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5638}, %rd7881;
	}
	shf.r.wrap.b32 	%r5639, %r5638, %r5637, 23;
	shf.r.wrap.b32 	%r5640, %r5637, %r5638, 23;
	mov.b64 	%rd7913, {%r5640, %r5639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd7887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5642,%dummy}, %rd7887;
	}
	shf.l.wrap.b32 	%r5643, %r5642, %r5641, 2;
	shf.l.wrap.b32 	%r5644, %r5641, %r5642, 2;
	mov.b64 	%rd7914, {%r5644, %r5643};
	not.b64 	%rd7915, %rd7891;
	and.b64  	%rd7916, %rd7892, %rd7915;
	xor.b64  	%rd7917, %rd7916, %rd7866;
	not.b64 	%rd7918, %rd7892;
	and.b64  	%rd7919, %rd7893, %rd7918;
	xor.b64  	%rd7920, %rd7919, %rd7891;
	st.local.u64 	[%rd2+8], %rd7920;
	not.b64 	%rd7921, %rd7893;
	and.b64  	%rd7922, %rd7894, %rd7921;
	xor.b64  	%rd7923, %rd7922, %rd7892;
	st.local.u64 	[%rd2+16], %rd7923;
	not.b64 	%rd7924, %rd7894;
	and.b64  	%rd7925, %rd7866, %rd7924;
	xor.b64  	%rd7926, %rd7925, %rd7893;
	st.local.u64 	[%rd2+24], %rd7926;
	not.b64 	%rd7927, %rd7866;
	and.b64  	%rd7928, %rd7891, %rd7927;
	xor.b64  	%rd7929, %rd7928, %rd7894;
	st.local.u64 	[%rd2+32], %rd7929;
	not.b64 	%rd7930, %rd7896;
	and.b64  	%rd7931, %rd7897, %rd7930;
	xor.b64  	%rd7932, %rd7931, %rd7895;
	st.local.u64 	[%rd2+40], %rd7932;
	not.b64 	%rd7933, %rd7897;
	and.b64  	%rd7934, %rd7898, %rd7933;
	xor.b64  	%rd7935, %rd7934, %rd7896;
	st.local.u64 	[%rd2+48], %rd7935;
	not.b64 	%rd7936, %rd7898;
	and.b64  	%rd7937, %rd7899, %rd7936;
	xor.b64  	%rd7938, %rd7937, %rd7897;
	st.local.u64 	[%rd2+56], %rd7938;
	not.b64 	%rd7939, %rd7899;
	and.b64  	%rd7940, %rd7895, %rd7939;
	xor.b64  	%rd7941, %rd7940, %rd7898;
	st.local.u64 	[%rd2+64], %rd7941;
	not.b64 	%rd7942, %rd7895;
	and.b64  	%rd7943, %rd7896, %rd7942;
	xor.b64  	%rd7944, %rd7943, %rd7899;
	st.local.u64 	[%rd2+72], %rd7944;
	not.b64 	%rd7945, %rd7901;
	and.b64  	%rd7946, %rd7902, %rd7945;
	xor.b64  	%rd7947, %rd7946, %rd7900;
	st.local.u64 	[%rd2+80], %rd7947;
	not.b64 	%rd7948, %rd7902;
	and.b64  	%rd7949, %rd7903, %rd7948;
	xor.b64  	%rd7950, %rd7949, %rd7901;
	st.local.u64 	[%rd2+88], %rd7950;
	not.b64 	%rd7951, %rd7903;
	and.b64  	%rd7952, %rd7904, %rd7951;
	xor.b64  	%rd7953, %rd7952, %rd7902;
	st.local.u64 	[%rd2+96], %rd7953;
	not.b64 	%rd7954, %rd7904;
	and.b64  	%rd7955, %rd7900, %rd7954;
	xor.b64  	%rd7956, %rd7955, %rd7903;
	st.local.u64 	[%rd2+104], %rd7956;
	not.b64 	%rd7957, %rd7900;
	and.b64  	%rd7958, %rd7901, %rd7957;
	xor.b64  	%rd7959, %rd7958, %rd7904;
	st.local.u64 	[%rd2+112], %rd7959;
	not.b64 	%rd7960, %rd7906;
	and.b64  	%rd7961, %rd7907, %rd7960;
	xor.b64  	%rd7962, %rd7961, %rd7905;
	st.local.u64 	[%rd2+120], %rd7962;
	not.b64 	%rd7963, %rd7907;
	and.b64  	%rd7964, %rd7908, %rd7963;
	xor.b64  	%rd7965, %rd7964, %rd7906;
	st.local.u64 	[%rd2+128], %rd7965;
	not.b64 	%rd7966, %rd7908;
	and.b64  	%rd7967, %rd7909, %rd7966;
	xor.b64  	%rd7968, %rd7967, %rd7907;
	st.local.u64 	[%rd2+136], %rd7968;
	not.b64 	%rd7969, %rd7909;
	and.b64  	%rd7970, %rd7905, %rd7969;
	xor.b64  	%rd7971, %rd7970, %rd7908;
	st.local.u64 	[%rd2+144], %rd7971;
	not.b64 	%rd7972, %rd7905;
	and.b64  	%rd7973, %rd7906, %rd7972;
	xor.b64  	%rd7974, %rd7973, %rd7909;
	st.local.u64 	[%rd2+152], %rd7974;
	not.b64 	%rd7975, %rd7911;
	and.b64  	%rd7976, %rd7912, %rd7975;
	xor.b64  	%rd7977, %rd7976, %rd7910;
	st.local.u64 	[%rd2+160], %rd7977;
	not.b64 	%rd7978, %rd7912;
	and.b64  	%rd7979, %rd7913, %rd7978;
	xor.b64  	%rd7980, %rd7979, %rd7911;
	st.local.u64 	[%rd2+168], %rd7980;
	not.b64 	%rd7981, %rd7913;
	and.b64  	%rd7982, %rd7914, %rd7981;
	xor.b64  	%rd7983, %rd7982, %rd7912;
	st.local.u64 	[%rd2+176], %rd7983;
	not.b64 	%rd7984, %rd7914;
	and.b64  	%rd7985, %rd7910, %rd7984;
	xor.b64  	%rd7986, %rd7985, %rd7913;
	st.local.u64 	[%rd2+184], %rd7986;
	not.b64 	%rd7987, %rd7910;
	and.b64  	%rd7988, %rd7911, %rd7987;
	xor.b64  	%rd7989, %rd7988, %rd7914;
	st.local.u64 	[%rd2+192], %rd7989;
	xor.b64  	%rd7990, %rd7917, %rd39;
	st.local.u64 	[%rd2], %rd7990;
	bra.uni 	$L__BB1_29;

$L__BB1_7:
	setp.eq.s64 	%p10, %rd15, 0;
	@%p10 bra 	$L__BB1_15;

	max.u64 	%rd216, %rd15, 1;
	add.s64 	%rd217, %rd216, -1;
	setp.lt.u64 	%p11, %rd217, 3;
	mov.u64 	%rd19835, 0;
	mov.u64 	%rd19836, %rd19835;
	@%p11 bra 	$L__BB1_11;

	and.b64  	%rd221, %rd216, 3;
	sub.s64 	%rd19834, %rd216, %rd221;

$L__BB1_10:
	add.s64 	%rd222, %rd19836, %rd19844;
	add.s64 	%rd223, %rd1, %rd222;
	shl.b64 	%rd224, %rd19835, 3;
	add.s64 	%rd225, %rd2, %rd224;
	ld.local.u64 	%rd226, [%rd225];
	ld.local.u8 	%rd227, [%rd223];
	ld.local.u8 	%rd228, [%rd223+1];
	bfi.b64 	%rd229, %rd228, %rd227, 8, 8;
	ld.local.u8 	%rd230, [%rd223+2];
	ld.local.u8 	%rd231, [%rd223+3];
	bfi.b64 	%rd232, %rd231, %rd230, 8, 8;
	bfi.b64 	%rd233, %rd232, %rd229, 16, 16;
	ld.local.u8 	%rd234, [%rd223+4];
	ld.local.u8 	%rd235, [%rd223+5];
	bfi.b64 	%rd236, %rd235, %rd234, 8, 8;
	ld.local.u8 	%rd237, [%rd223+6];
	ld.local.u8 	%rd238, [%rd223+7];
	bfi.b64 	%rd239, %rd238, %rd237, 8, 8;
	bfi.b64 	%rd240, %rd239, %rd236, 16, 16;
	bfi.b64 	%rd241, %rd240, %rd233, 32, 32;
	xor.b64  	%rd242, %rd226, %rd241;
	st.local.u64 	[%rd225], %rd242;
	ld.local.u64 	%rd243, [%rd225+8];
	ld.local.u8 	%rd244, [%rd223+8];
	ld.local.u8 	%rd245, [%rd223+9];
	bfi.b64 	%rd246, %rd245, %rd244, 8, 8;
	ld.local.u8 	%rd247, [%rd223+10];
	ld.local.u8 	%rd248, [%rd223+11];
	bfi.b64 	%rd249, %rd248, %rd247, 8, 8;
	bfi.b64 	%rd250, %rd249, %rd246, 16, 16;
	ld.local.u8 	%rd251, [%rd223+12];
	ld.local.u8 	%rd252, [%rd223+13];
	bfi.b64 	%rd253, %rd252, %rd251, 8, 8;
	ld.local.u8 	%rd254, [%rd223+14];
	ld.local.u8 	%rd255, [%rd223+15];
	bfi.b64 	%rd256, %rd255, %rd254, 8, 8;
	bfi.b64 	%rd257, %rd256, %rd253, 16, 16;
	bfi.b64 	%rd258, %rd257, %rd250, 32, 32;
	xor.b64  	%rd259, %rd243, %rd258;
	st.local.u64 	[%rd225+8], %rd259;
	ld.local.u64 	%rd260, [%rd225+16];
	ld.local.u8 	%rd261, [%rd223+16];
	ld.local.u8 	%rd262, [%rd223+17];
	bfi.b64 	%rd263, %rd262, %rd261, 8, 8;
	ld.local.u8 	%rd264, [%rd223+18];
	ld.local.u8 	%rd265, [%rd223+19];
	bfi.b64 	%rd266, %rd265, %rd264, 8, 8;
	bfi.b64 	%rd267, %rd266, %rd263, 16, 16;
	ld.local.u8 	%rd268, [%rd223+20];
	ld.local.u8 	%rd269, [%rd223+21];
	bfi.b64 	%rd270, %rd269, %rd268, 8, 8;
	ld.local.u8 	%rd271, [%rd223+22];
	ld.local.u8 	%rd272, [%rd223+23];
	bfi.b64 	%rd273, %rd272, %rd271, 8, 8;
	bfi.b64 	%rd274, %rd273, %rd270, 16, 16;
	bfi.b64 	%rd275, %rd274, %rd267, 32, 32;
	xor.b64  	%rd276, %rd260, %rd275;
	st.local.u64 	[%rd225+16], %rd276;
	ld.local.u64 	%rd277, [%rd225+24];
	ld.local.u8 	%rd278, [%rd223+24];
	ld.local.u8 	%rd279, [%rd223+25];
	bfi.b64 	%rd280, %rd279, %rd278, 8, 8;
	ld.local.u8 	%rd281, [%rd223+26];
	ld.local.u8 	%rd282, [%rd223+27];
	bfi.b64 	%rd283, %rd282, %rd281, 8, 8;
	bfi.b64 	%rd284, %rd283, %rd280, 16, 16;
	ld.local.u8 	%rd285, [%rd223+28];
	ld.local.u8 	%rd286, [%rd223+29];
	bfi.b64 	%rd287, %rd286, %rd285, 8, 8;
	ld.local.u8 	%rd288, [%rd223+30];
	ld.local.u8 	%rd289, [%rd223+31];
	bfi.b64 	%rd290, %rd289, %rd288, 8, 8;
	bfi.b64 	%rd291, %rd290, %rd287, 16, 16;
	bfi.b64 	%rd292, %rd291, %rd284, 32, 32;
	xor.b64  	%rd293, %rd277, %rd292;
	st.local.u64 	[%rd225+24], %rd293;
	add.s64 	%rd19836, %rd19836, 32;
	add.s64 	%rd19835, %rd19835, 4;
	add.s64 	%rd19834, %rd19834, -4;
	setp.ne.s64 	%p12, %rd19834, 0;
	@%p12 bra 	$L__BB1_10;

$L__BB1_11:
	and.b64  	%rd295, %rd216, 3;
	setp.eq.s64 	%p13, %rd295, 0;
	@%p13 bra 	$L__BB1_15;

	setp.eq.s64 	%p14, %rd295, 1;
	add.s64 	%rd298, %rd19836, %rd19844;
	add.s64 	%rd52, %rd1, %rd298;
	shl.b64 	%rd299, %rd19835, 3;
	add.s64 	%rd53, %rd2, %rd299;
	ld.local.u64 	%rd300, [%rd53];
	ld.local.u8 	%rd301, [%rd52];
	ld.local.u8 	%rd302, [%rd52+1];
	bfi.b64 	%rd303, %rd302, %rd301, 8, 8;
	ld.local.u8 	%rd304, [%rd52+2];
	ld.local.u8 	%rd305, [%rd52+3];
	bfi.b64 	%rd306, %rd305, %rd304, 8, 8;
	bfi.b64 	%rd307, %rd306, %rd303, 16, 16;
	ld.local.u8 	%rd308, [%rd52+4];
	ld.local.u8 	%rd309, [%rd52+5];
	bfi.b64 	%rd310, %rd309, %rd308, 8, 8;
	ld.local.u8 	%rd311, [%rd52+6];
	ld.local.u8 	%rd312, [%rd52+7];
	bfi.b64 	%rd313, %rd312, %rd311, 8, 8;
	bfi.b64 	%rd314, %rd313, %rd310, 16, 16;
	bfi.b64 	%rd315, %rd314, %rd307, 32, 32;
	xor.b64  	%rd316, %rd300, %rd315;
	st.local.u64 	[%rd53], %rd316;
	@%p14 bra 	$L__BB1_15;

	setp.eq.s64 	%p15, %rd295, 2;
	ld.local.u64 	%rd319, [%rd53+8];
	ld.local.u8 	%rd320, [%rd52+8];
	ld.local.u8 	%rd321, [%rd52+9];
	bfi.b64 	%rd322, %rd321, %rd320, 8, 8;
	ld.local.u8 	%rd323, [%rd52+10];
	ld.local.u8 	%rd324, [%rd52+11];
	bfi.b64 	%rd325, %rd324, %rd323, 8, 8;
	bfi.b64 	%rd326, %rd325, %rd322, 16, 16;
	ld.local.u8 	%rd327, [%rd52+12];
	ld.local.u8 	%rd328, [%rd52+13];
	bfi.b64 	%rd329, %rd328, %rd327, 8, 8;
	ld.local.u8 	%rd330, [%rd52+14];
	ld.local.u8 	%rd331, [%rd52+15];
	bfi.b64 	%rd332, %rd331, %rd330, 8, 8;
	bfi.b64 	%rd333, %rd332, %rd329, 16, 16;
	bfi.b64 	%rd334, %rd333, %rd326, 32, 32;
	xor.b64  	%rd335, %rd319, %rd334;
	st.local.u64 	[%rd53+8], %rd335;
	@%p15 bra 	$L__BB1_15;

	ld.local.u64 	%rd336, [%rd53+16];
	ld.local.u8 	%rd337, [%rd52+16];
	ld.local.u8 	%rd338, [%rd52+17];
	bfi.b64 	%rd339, %rd338, %rd337, 8, 8;
	ld.local.u8 	%rd340, [%rd52+18];
	ld.local.u8 	%rd341, [%rd52+19];
	bfi.b64 	%rd342, %rd341, %rd340, 8, 8;
	bfi.b64 	%rd343, %rd342, %rd339, 16, 16;
	ld.local.u8 	%rd344, [%rd52+20];
	ld.local.u8 	%rd345, [%rd52+21];
	bfi.b64 	%rd346, %rd345, %rd344, 8, 8;
	ld.local.u8 	%rd347, [%rd52+22];
	ld.local.u8 	%rd348, [%rd52+23];
	bfi.b64 	%rd349, %rd348, %rd347, 8, 8;
	bfi.b64 	%rd350, %rd349, %rd346, 16, 16;
	bfi.b64 	%rd351, %rd350, %rd343, 32, 32;
	xor.b64  	%rd352, %rd336, %rd351;
	st.local.u64 	[%rd53+16], %rd352;

$L__BB1_15:
	ld.local.u64 	%rd354, [%rd2+40];
	mov.u64 	%rd19843, 0;
	ld.local.u64 	%rd355, [%rd2];
	xor.b64  	%rd356, %rd354, %rd355;
	ld.local.u64 	%rd357, [%rd2+80];
	xor.b64  	%rd358, %rd356, %rd357;
	ld.local.u64 	%rd359, [%rd2+120];
	xor.b64  	%rd360, %rd358, %rd359;
	ld.local.u64 	%rd361, [%rd2+160];
	xor.b64  	%rd362, %rd360, %rd361;
	ld.local.u64 	%rd363, [%rd2+48];
	ld.local.u64 	%rd364, [%rd2+8];
	xor.b64  	%rd365, %rd363, %rd364;
	ld.local.u64 	%rd366, [%rd2+88];
	xor.b64  	%rd367, %rd365, %rd366;
	ld.local.u64 	%rd368, [%rd2+128];
	xor.b64  	%rd369, %rd367, %rd368;
	ld.local.u64 	%rd370, [%rd2+168];
	xor.b64  	%rd371, %rd369, %rd370;
	ld.local.u64 	%rd372, [%rd2+56];
	ld.local.u64 	%rd373, [%rd2+16];
	xor.b64  	%rd374, %rd372, %rd373;
	ld.local.u64 	%rd375, [%rd2+96];
	xor.b64  	%rd376, %rd374, %rd375;
	ld.local.u64 	%rd377, [%rd2+136];
	xor.b64  	%rd378, %rd376, %rd377;
	ld.local.u64 	%rd379, [%rd2+176];
	xor.b64  	%rd380, %rd378, %rd379;
	mov.u64 	%rd381, 64;
	ld.local.u64 	%rd382, [%rd2+64];
	ld.local.u64 	%rd383, [%rd2+24];
	xor.b64  	%rd384, %rd382, %rd383;
	ld.local.u64 	%rd385, [%rd2+104];
	xor.b64  	%rd386, %rd384, %rd385;
	ld.local.u64 	%rd387, [%rd2+144];
	xor.b64  	%rd388, %rd386, %rd387;
	ld.local.u64 	%rd389, [%rd2+184];
	xor.b64  	%rd390, %rd388, %rd389;
	ld.local.u64 	%rd391, [%rd2+72];
	ld.local.u64 	%rd392, [%rd2+32];
	xor.b64  	%rd393, %rd391, %rd392;
	ld.local.u64 	%rd394, [%rd2+112];
	xor.b64  	%rd395, %rd393, %rd394;
	ld.local.u64 	%rd396, [%rd2+152];
	xor.b64  	%rd397, %rd395, %rd396;
	ld.local.u64 	%rd398, [%rd2+192];
	xor.b64  	%rd399, %rd397, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r78,%dummy}, %rd371;
	}
	shf.l.wrap.b32 	%r79, %r78, %r77, 1;
	shf.l.wrap.b32 	%r80, %r77, %r78, 1;
	mov.b64 	%rd400, {%r80, %r79};
	xor.b64  	%rd401, %rd399, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r82,%dummy}, %rd380;
	}
	shf.l.wrap.b32 	%r83, %r82, %r81, 1;
	shf.l.wrap.b32 	%r84, %r81, %r82, 1;
	mov.b64 	%rd402, {%r84, %r83};
	xor.b64  	%rd403, %rd402, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd390;
	}
	shf.l.wrap.b32 	%r87, %r86, %r85, 1;
	shf.l.wrap.b32 	%r88, %r85, %r86, 1;
	mov.b64 	%rd404, {%r88, %r87};
	xor.b64  	%rd405, %rd404, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r90,%dummy}, %rd399;
	}
	shf.l.wrap.b32 	%r91, %r90, %r89, 1;
	shf.l.wrap.b32 	%r92, %r89, %r90, 1;
	mov.b64 	%rd406, {%r92, %r91};
	xor.b64  	%rd407, %rd406, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r94,%dummy}, %rd362;
	}
	shf.l.wrap.b32 	%r95, %r94, %r93, 1;
	shf.l.wrap.b32 	%r96, %r93, %r94, 1;
	mov.b64 	%rd408, {%r96, %r95};
	xor.b64  	%rd409, %rd390, %rd408;
	xor.b64  	%rd410, %rd401, %rd355;
	xor.b64  	%rd411, %rd403, %rd364;
	xor.b64  	%rd412, %rd405, %rd373;
	xor.b64  	%rd413, %rd407, %rd383;
	xor.b64  	%rd414, %rd409, %rd392;
	xor.b64  	%rd415, %rd401, %rd354;
	xor.b64  	%rd416, %rd403, %rd363;
	xor.b64  	%rd417, %rd405, %rd372;
	xor.b64  	%rd418, %rd407, %rd382;
	xor.b64  	%rd419, %rd409, %rd391;
	xor.b64  	%rd420, %rd401, %rd357;
	xor.b64  	%rd421, %rd403, %rd366;
	xor.b64  	%rd422, %rd405, %rd375;
	xor.b64  	%rd423, %rd407, %rd385;
	xor.b64  	%rd424, %rd409, %rd394;
	xor.b64  	%rd425, %rd401, %rd359;
	xor.b64  	%rd426, %rd403, %rd368;
	xor.b64  	%rd427, %rd405, %rd377;
	xor.b64  	%rd428, %rd407, %rd387;
	xor.b64  	%rd429, %rd409, %rd396;
	xor.b64  	%rd430, %rd401, %rd361;
	xor.b64  	%rd431, %rd403, %rd370;
	xor.b64  	%rd432, %rd405, %rd379;
	xor.b64  	%rd433, %rd407, %rd389;
	xor.b64  	%rd434, %rd409, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd416;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 20;
	shf.r.wrap.b32 	%r100, %r97, %r98, 20;
	mov.b64 	%rd435, {%r100, %r99};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd422;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 21;
	shf.r.wrap.b32 	%r104, %r101, %r102, 21;
	mov.b64 	%rd436, {%r104, %r103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r106,%dummy}, %rd428;
	}
	shf.l.wrap.b32 	%r107, %r106, %r105, 21;
	shf.l.wrap.b32 	%r108, %r105, %r106, 21;
	mov.b64 	%rd437, {%r108, %r107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r110,%dummy}, %rd434;
	}
	shf.l.wrap.b32 	%r111, %r110, %r109, 14;
	shf.l.wrap.b32 	%r112, %r109, %r110, 14;
	mov.b64 	%rd438, {%r112, %r111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r114,%dummy}, %rd413;
	}
	shf.l.wrap.b32 	%r115, %r114, %r113, 28;
	shf.l.wrap.b32 	%r116, %r113, %r114, 28;
	mov.b64 	%rd439, {%r116, %r115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r118,%dummy}, %rd419;
	}
	shf.l.wrap.b32 	%r119, %r118, %r117, 20;
	shf.l.wrap.b32 	%r120, %r117, %r118, 20;
	mov.b64 	%rd440, {%r120, %r119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd420;
	}
	shf.l.wrap.b32 	%r123, %r122, %r121, 3;
	shf.l.wrap.b32 	%r124, %r121, %r122, 3;
	mov.b64 	%rd441, {%r124, %r123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd426;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 19;
	shf.r.wrap.b32 	%r128, %r125, %r126, 19;
	mov.b64 	%rd442, {%r128, %r127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd432;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 3;
	shf.r.wrap.b32 	%r132, %r129, %r130, 3;
	mov.b64 	%rd443, {%r132, %r131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r134,%dummy}, %rd411;
	}
	shf.l.wrap.b32 	%r135, %r134, %r133, 1;
	shf.l.wrap.b32 	%r136, %r133, %r134, 1;
	mov.b64 	%rd444, {%r136, %r135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd417;
	}
	shf.l.wrap.b32 	%r139, %r138, %r137, 6;
	shf.l.wrap.b32 	%r140, %r137, %r138, 6;
	mov.b64 	%rd445, {%r140, %r139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r142,%dummy}, %rd423;
	}
	shf.l.wrap.b32 	%r143, %r142, %r141, 25;
	shf.l.wrap.b32 	%r144, %r141, %r142, 25;
	mov.b64 	%rd446, {%r144, %r143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r146,%dummy}, %rd429;
	}
	shf.l.wrap.b32 	%r147, %r146, %r145, 8;
	shf.l.wrap.b32 	%r148, %r145, %r146, 8;
	mov.b64 	%rd447, {%r148, %r147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r150,%dummy}, %rd430;
	}
	shf.l.wrap.b32 	%r151, %r150, %r149, 18;
	shf.l.wrap.b32 	%r152, %r149, %r150, 18;
	mov.b64 	%rd448, {%r152, %r151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd414;
	}
	shf.l.wrap.b32 	%r155, %r154, %r153, 27;
	shf.l.wrap.b32 	%r156, %r153, %r154, 27;
	mov.b64 	%rd449, {%r156, %r155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd415;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 28;
	shf.r.wrap.b32 	%r160, %r157, %r158, 28;
	mov.b64 	%rd450, {%r160, %r159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd421;
	}
	shf.l.wrap.b32 	%r163, %r162, %r161, 10;
	shf.l.wrap.b32 	%r164, %r161, %r162, 10;
	mov.b64 	%rd451, {%r164, %r163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r166,%dummy}, %rd427;
	}
	shf.l.wrap.b32 	%r167, %r166, %r165, 15;
	shf.l.wrap.b32 	%r168, %r165, %r166, 15;
	mov.b64 	%rd452, {%r168, %r167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd433;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 8;
	shf.r.wrap.b32 	%r172, %r169, %r170, 8;
	mov.b64 	%rd453, {%r172, %r171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd412;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 2;
	shf.r.wrap.b32 	%r176, %r173, %r174, 2;
	mov.b64 	%rd454, {%r176, %r175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd418;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 9;
	shf.r.wrap.b32 	%r180, %r177, %r178, 9;
	mov.b64 	%rd455, {%r180, %r179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd424;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 25;
	shf.r.wrap.b32 	%r184, %r181, %r182, 25;
	mov.b64 	%rd456, {%r184, %r183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd425;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 23;
	shf.r.wrap.b32 	%r188, %r185, %r186, 23;
	mov.b64 	%rd457, {%r188, %r187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r190,%dummy}, %rd431;
	}
	shf.l.wrap.b32 	%r191, %r190, %r189, 2;
	shf.l.wrap.b32 	%r192, %r189, %r190, 2;
	mov.b64 	%rd458, {%r192, %r191};
	not.b64 	%rd459, %rd435;
	and.b64  	%rd460, %rd436, %rd459;
	xor.b64  	%rd461, %rd460, %rd410;
	not.b64 	%rd462, %rd436;
	and.b64  	%rd463, %rd437, %rd462;
	xor.b64  	%rd464, %rd463, %rd435;
	not.b64 	%rd465, %rd437;
	and.b64  	%rd466, %rd438, %rd465;
	xor.b64  	%rd467, %rd466, %rd436;
	not.b64 	%rd468, %rd438;
	and.b64  	%rd469, %rd410, %rd468;
	xor.b64  	%rd470, %rd469, %rd437;
	not.b64 	%rd471, %rd410;
	and.b64  	%rd472, %rd435, %rd471;
	xor.b64  	%rd473, %rd472, %rd438;
	not.b64 	%rd474, %rd440;
	and.b64  	%rd475, %rd441, %rd474;
	xor.b64  	%rd476, %rd475, %rd439;
	not.b64 	%rd477, %rd441;
	and.b64  	%rd478, %rd442, %rd477;
	xor.b64  	%rd479, %rd478, %rd440;
	not.b64 	%rd480, %rd442;
	and.b64  	%rd481, %rd443, %rd480;
	xor.b64  	%rd482, %rd481, %rd441;
	not.b64 	%rd483, %rd443;
	and.b64  	%rd484, %rd439, %rd483;
	xor.b64  	%rd485, %rd484, %rd442;
	not.b64 	%rd486, %rd439;
	and.b64  	%rd487, %rd440, %rd486;
	xor.b64  	%rd488, %rd487, %rd443;
	not.b64 	%rd489, %rd445;
	and.b64  	%rd490, %rd446, %rd489;
	xor.b64  	%rd491, %rd490, %rd444;
	not.b64 	%rd492, %rd446;
	and.b64  	%rd493, %rd447, %rd492;
	xor.b64  	%rd494, %rd493, %rd445;
	not.b64 	%rd495, %rd447;
	and.b64  	%rd496, %rd448, %rd495;
	xor.b64  	%rd497, %rd496, %rd446;
	not.b64 	%rd498, %rd448;
	and.b64  	%rd499, %rd444, %rd498;
	xor.b64  	%rd500, %rd499, %rd447;
	not.b64 	%rd501, %rd444;
	and.b64  	%rd502, %rd445, %rd501;
	xor.b64  	%rd503, %rd502, %rd448;
	not.b64 	%rd504, %rd450;
	and.b64  	%rd505, %rd451, %rd504;
	xor.b64  	%rd506, %rd505, %rd449;
	not.b64 	%rd507, %rd451;
	and.b64  	%rd508, %rd452, %rd507;
	xor.b64  	%rd509, %rd508, %rd450;
	not.b64 	%rd510, %rd452;
	and.b64  	%rd511, %rd453, %rd510;
	xor.b64  	%rd512, %rd511, %rd451;
	not.b64 	%rd513, %rd453;
	and.b64  	%rd514, %rd449, %rd513;
	xor.b64  	%rd515, %rd514, %rd452;
	not.b64 	%rd516, %rd449;
	and.b64  	%rd517, %rd450, %rd516;
	xor.b64  	%rd518, %rd517, %rd453;
	not.b64 	%rd519, %rd455;
	and.b64  	%rd520, %rd456, %rd519;
	xor.b64  	%rd521, %rd520, %rd454;
	not.b64 	%rd522, %rd456;
	and.b64  	%rd523, %rd457, %rd522;
	xor.b64  	%rd524, %rd523, %rd455;
	not.b64 	%rd525, %rd457;
	and.b64  	%rd526, %rd458, %rd525;
	xor.b64  	%rd527, %rd526, %rd456;
	not.b64 	%rd528, %rd458;
	and.b64  	%rd529, %rd454, %rd528;
	xor.b64  	%rd530, %rd529, %rd457;
	not.b64 	%rd531, %rd454;
	and.b64  	%rd532, %rd455, %rd531;
	xor.b64  	%rd533, %rd532, %rd458;
	xor.b64  	%rd534, %rd461, %rd16;
	xor.b64  	%rd535, %rd476, %rd534;
	xor.b64  	%rd536, %rd535, %rd491;
	xor.b64  	%rd537, %rd536, %rd506;
	xor.b64  	%rd538, %rd537, %rd521;
	xor.b64  	%rd539, %rd479, %rd464;
	xor.b64  	%rd540, %rd539, %rd494;
	xor.b64  	%rd541, %rd540, %rd509;
	xor.b64  	%rd542, %rd541, %rd524;
	xor.b64  	%rd543, %rd482, %rd467;
	xor.b64  	%rd544, %rd543, %rd497;
	xor.b64  	%rd545, %rd544, %rd512;
	xor.b64  	%rd546, %rd545, %rd527;
	xor.b64  	%rd547, %rd485, %rd470;
	xor.b64  	%rd548, %rd547, %rd500;
	xor.b64  	%rd549, %rd548, %rd515;
	xor.b64  	%rd550, %rd549, %rd530;
	xor.b64  	%rd551, %rd488, %rd473;
	xor.b64  	%rd552, %rd551, %rd503;
	xor.b64  	%rd553, %rd552, %rd518;
	xor.b64  	%rd554, %rd553, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd542;
	}
	shf.l.wrap.b32 	%r195, %r194, %r193, 1;
	shf.l.wrap.b32 	%r196, %r193, %r194, 1;
	mov.b64 	%rd555, {%r196, %r195};
	xor.b64  	%rd556, %rd554, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r198,%dummy}, %rd546;
	}
	shf.l.wrap.b32 	%r199, %r198, %r197, 1;
	shf.l.wrap.b32 	%r200, %r197, %r198, 1;
	mov.b64 	%rd557, {%r200, %r199};
	xor.b64  	%rd558, %rd557, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd550;
	}
	shf.l.wrap.b32 	%r203, %r202, %r201, 1;
	shf.l.wrap.b32 	%r204, %r201, %r202, 1;
	mov.b64 	%rd559, {%r204, %r203};
	xor.b64  	%rd560, %rd559, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd554;
	}
	shf.l.wrap.b32 	%r207, %r206, %r205, 1;
	shf.l.wrap.b32 	%r208, %r205, %r206, 1;
	mov.b64 	%rd561, {%r208, %r207};
	xor.b64  	%rd562, %rd561, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd538;
	}
	shf.l.wrap.b32 	%r211, %r210, %r209, 1;
	shf.l.wrap.b32 	%r212, %r209, %r210, 1;
	mov.b64 	%rd563, {%r212, %r211};
	xor.b64  	%rd564, %rd550, %rd563;
	xor.b64  	%rd565, %rd556, %rd534;
	xor.b64  	%rd566, %rd558, %rd464;
	xor.b64  	%rd567, %rd560, %rd467;
	xor.b64  	%rd568, %rd562, %rd470;
	xor.b64  	%rd569, %rd564, %rd473;
	xor.b64  	%rd570, %rd556, %rd476;
	xor.b64  	%rd571, %rd558, %rd479;
	xor.b64  	%rd572, %rd560, %rd482;
	xor.b64  	%rd573, %rd562, %rd485;
	xor.b64  	%rd574, %rd564, %rd488;
	xor.b64  	%rd575, %rd556, %rd491;
	xor.b64  	%rd576, %rd558, %rd494;
	xor.b64  	%rd577, %rd560, %rd497;
	xor.b64  	%rd578, %rd562, %rd500;
	xor.b64  	%rd579, %rd564, %rd503;
	xor.b64  	%rd580, %rd556, %rd506;
	xor.b64  	%rd581, %rd558, %rd509;
	xor.b64  	%rd582, %rd560, %rd512;
	xor.b64  	%rd583, %rd562, %rd515;
	xor.b64  	%rd584, %rd564, %rd518;
	xor.b64  	%rd585, %rd556, %rd521;
	xor.b64  	%rd586, %rd558, %rd524;
	xor.b64  	%rd587, %rd560, %rd527;
	xor.b64  	%rd588, %rd562, %rd530;
	xor.b64  	%rd589, %rd564, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd571;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 20;
	shf.r.wrap.b32 	%r216, %r213, %r214, 20;
	mov.b64 	%rd590, {%r216, %r215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd577;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 21;
	shf.r.wrap.b32 	%r220, %r217, %r218, 21;
	mov.b64 	%rd591, {%r220, %r219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r222,%dummy}, %rd583;
	}
	shf.l.wrap.b32 	%r223, %r222, %r221, 21;
	shf.l.wrap.b32 	%r224, %r221, %r222, 21;
	mov.b64 	%rd592, {%r224, %r223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd589;
	}
	shf.l.wrap.b32 	%r227, %r226, %r225, 14;
	shf.l.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd593, {%r228, %r227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r230,%dummy}, %rd568;
	}
	shf.l.wrap.b32 	%r231, %r230, %r229, 28;
	shf.l.wrap.b32 	%r232, %r229, %r230, 28;
	mov.b64 	%rd594, {%r232, %r231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd574;
	}
	shf.l.wrap.b32 	%r235, %r234, %r233, 20;
	shf.l.wrap.b32 	%r236, %r233, %r234, 20;
	mov.b64 	%rd595, {%r236, %r235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r238,%dummy}, %rd575;
	}
	shf.l.wrap.b32 	%r239, %r238, %r237, 3;
	shf.l.wrap.b32 	%r240, %r237, %r238, 3;
	mov.b64 	%rd596, {%r240, %r239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd581;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 19;
	shf.r.wrap.b32 	%r244, %r241, %r242, 19;
	mov.b64 	%rd597, {%r244, %r243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd587;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 3;
	shf.r.wrap.b32 	%r248, %r245, %r246, 3;
	mov.b64 	%rd598, {%r248, %r247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd566;
	}
	shf.l.wrap.b32 	%r251, %r250, %r249, 1;
	shf.l.wrap.b32 	%r252, %r249, %r250, 1;
	mov.b64 	%rd599, {%r252, %r251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd572;
	}
	shf.l.wrap.b32 	%r255, %r254, %r253, 6;
	shf.l.wrap.b32 	%r256, %r253, %r254, 6;
	mov.b64 	%rd600, {%r256, %r255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd578;
	}
	shf.l.wrap.b32 	%r259, %r258, %r257, 25;
	shf.l.wrap.b32 	%r260, %r257, %r258, 25;
	mov.b64 	%rd601, {%r260, %r259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r262,%dummy}, %rd584;
	}
	shf.l.wrap.b32 	%r263, %r262, %r261, 8;
	shf.l.wrap.b32 	%r264, %r261, %r262, 8;
	mov.b64 	%rd602, {%r264, %r263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd585;
	}
	shf.l.wrap.b32 	%r267, %r266, %r265, 18;
	shf.l.wrap.b32 	%r268, %r265, %r266, 18;
	mov.b64 	%rd603, {%r268, %r267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r270,%dummy}, %rd569;
	}
	shf.l.wrap.b32 	%r271, %r270, %r269, 27;
	shf.l.wrap.b32 	%r272, %r269, %r270, 27;
	mov.b64 	%rd604, {%r272, %r271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd570;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 28;
	shf.r.wrap.b32 	%r276, %r273, %r274, 28;
	mov.b64 	%rd605, {%r276, %r275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r278,%dummy}, %rd576;
	}
	shf.l.wrap.b32 	%r279, %r278, %r277, 10;
	shf.l.wrap.b32 	%r280, %r277, %r278, 10;
	mov.b64 	%rd606, {%r280, %r279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd582;
	}
	shf.l.wrap.b32 	%r283, %r282, %r281, 15;
	shf.l.wrap.b32 	%r284, %r281, %r282, 15;
	mov.b64 	%rd607, {%r284, %r283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd588;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 8;
	shf.r.wrap.b32 	%r288, %r285, %r286, 8;
	mov.b64 	%rd608, {%r288, %r287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd567;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 2;
	shf.r.wrap.b32 	%r292, %r289, %r290, 2;
	mov.b64 	%rd609, {%r292, %r291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd573;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 9;
	shf.r.wrap.b32 	%r296, %r293, %r294, 9;
	mov.b64 	%rd610, {%r296, %r295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r298}, %rd579;
	}
	shf.r.wrap.b32 	%r299, %r298, %r297, 25;
	shf.r.wrap.b32 	%r300, %r297, %r298, 25;
	mov.b64 	%rd611, {%r300, %r299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd580;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 23;
	shf.r.wrap.b32 	%r304, %r301, %r302, 23;
	mov.b64 	%rd612, {%r304, %r303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r305}, %rd586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd586;
	}
	shf.l.wrap.b32 	%r307, %r306, %r305, 2;
	shf.l.wrap.b32 	%r308, %r305, %r306, 2;
	mov.b64 	%rd613, {%r308, %r307};
	not.b64 	%rd614, %rd590;
	and.b64  	%rd615, %rd591, %rd614;
	xor.b64  	%rd616, %rd615, %rd565;
	not.b64 	%rd617, %rd591;
	and.b64  	%rd618, %rd592, %rd617;
	xor.b64  	%rd619, %rd618, %rd590;
	not.b64 	%rd620, %rd592;
	and.b64  	%rd621, %rd593, %rd620;
	xor.b64  	%rd622, %rd621, %rd591;
	not.b64 	%rd623, %rd593;
	and.b64  	%rd624, %rd565, %rd623;
	xor.b64  	%rd625, %rd624, %rd592;
	not.b64 	%rd626, %rd565;
	and.b64  	%rd627, %rd590, %rd626;
	xor.b64  	%rd628, %rd627, %rd593;
	not.b64 	%rd629, %rd595;
	and.b64  	%rd630, %rd596, %rd629;
	xor.b64  	%rd631, %rd630, %rd594;
	not.b64 	%rd632, %rd596;
	and.b64  	%rd633, %rd597, %rd632;
	xor.b64  	%rd634, %rd633, %rd595;
	not.b64 	%rd635, %rd597;
	and.b64  	%rd636, %rd598, %rd635;
	xor.b64  	%rd637, %rd636, %rd596;
	not.b64 	%rd638, %rd598;
	and.b64  	%rd639, %rd594, %rd638;
	xor.b64  	%rd640, %rd639, %rd597;
	not.b64 	%rd641, %rd594;
	and.b64  	%rd642, %rd595, %rd641;
	xor.b64  	%rd643, %rd642, %rd598;
	not.b64 	%rd644, %rd600;
	and.b64  	%rd645, %rd601, %rd644;
	xor.b64  	%rd646, %rd645, %rd599;
	not.b64 	%rd647, %rd601;
	and.b64  	%rd648, %rd602, %rd647;
	xor.b64  	%rd649, %rd648, %rd600;
	not.b64 	%rd650, %rd602;
	and.b64  	%rd651, %rd603, %rd650;
	xor.b64  	%rd652, %rd651, %rd601;
	not.b64 	%rd653, %rd603;
	and.b64  	%rd654, %rd599, %rd653;
	xor.b64  	%rd655, %rd654, %rd602;
	not.b64 	%rd656, %rd599;
	and.b64  	%rd657, %rd600, %rd656;
	xor.b64  	%rd658, %rd657, %rd603;
	not.b64 	%rd659, %rd605;
	and.b64  	%rd660, %rd606, %rd659;
	xor.b64  	%rd661, %rd660, %rd604;
	not.b64 	%rd662, %rd606;
	and.b64  	%rd663, %rd607, %rd662;
	xor.b64  	%rd664, %rd663, %rd605;
	not.b64 	%rd665, %rd607;
	and.b64  	%rd666, %rd608, %rd665;
	xor.b64  	%rd667, %rd666, %rd606;
	not.b64 	%rd668, %rd608;
	and.b64  	%rd669, %rd604, %rd668;
	xor.b64  	%rd670, %rd669, %rd607;
	not.b64 	%rd671, %rd604;
	and.b64  	%rd672, %rd605, %rd671;
	xor.b64  	%rd673, %rd672, %rd608;
	not.b64 	%rd674, %rd610;
	and.b64  	%rd675, %rd611, %rd674;
	xor.b64  	%rd676, %rd675, %rd609;
	not.b64 	%rd677, %rd611;
	and.b64  	%rd678, %rd612, %rd677;
	xor.b64  	%rd679, %rd678, %rd610;
	not.b64 	%rd680, %rd612;
	and.b64  	%rd681, %rd613, %rd680;
	xor.b64  	%rd682, %rd681, %rd611;
	not.b64 	%rd683, %rd613;
	and.b64  	%rd684, %rd609, %rd683;
	xor.b64  	%rd685, %rd684, %rd612;
	not.b64 	%rd686, %rd609;
	and.b64  	%rd687, %rd610, %rd686;
	xor.b64  	%rd688, %rd687, %rd613;
	xor.b64  	%rd689, %rd616, %rd17;
	xor.b64  	%rd690, %rd631, %rd689;
	xor.b64  	%rd691, %rd690, %rd646;
	xor.b64  	%rd692, %rd691, %rd661;
	xor.b64  	%rd693, %rd692, %rd676;
	xor.b64  	%rd694, %rd634, %rd619;
	xor.b64  	%rd695, %rd694, %rd649;
	xor.b64  	%rd696, %rd695, %rd664;
	xor.b64  	%rd697, %rd696, %rd679;
	xor.b64  	%rd698, %rd637, %rd622;
	xor.b64  	%rd699, %rd698, %rd652;
	xor.b64  	%rd700, %rd699, %rd667;
	xor.b64  	%rd701, %rd700, %rd682;
	xor.b64  	%rd702, %rd640, %rd625;
	xor.b64  	%rd703, %rd702, %rd655;
	xor.b64  	%rd704, %rd703, %rd670;
	xor.b64  	%rd705, %rd704, %rd685;
	xor.b64  	%rd706, %rd643, %rd628;
	xor.b64  	%rd707, %rd706, %rd658;
	xor.b64  	%rd708, %rd707, %rd673;
	xor.b64  	%rd709, %rd708, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r310,%dummy}, %rd697;
	}
	shf.l.wrap.b32 	%r311, %r310, %r309, 1;
	shf.l.wrap.b32 	%r312, %r309, %r310, 1;
	mov.b64 	%rd710, {%r312, %r311};
	xor.b64  	%rd711, %rd709, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd701;
	}
	shf.l.wrap.b32 	%r315, %r314, %r313, 1;
	shf.l.wrap.b32 	%r316, %r313, %r314, 1;
	mov.b64 	%rd712, {%r316, %r315};
	xor.b64  	%rd713, %rd712, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd705;
	}
	shf.l.wrap.b32 	%r319, %r318, %r317, 1;
	shf.l.wrap.b32 	%r320, %r317, %r318, 1;
	mov.b64 	%rd714, {%r320, %r319};
	xor.b64  	%rd715, %rd714, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd709;
	}
	shf.l.wrap.b32 	%r323, %r322, %r321, 1;
	shf.l.wrap.b32 	%r324, %r321, %r322, 1;
	mov.b64 	%rd716, {%r324, %r323};
	xor.b64  	%rd717, %rd716, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r326,%dummy}, %rd693;
	}
	shf.l.wrap.b32 	%r327, %r326, %r325, 1;
	shf.l.wrap.b32 	%r328, %r325, %r326, 1;
	mov.b64 	%rd718, {%r328, %r327};
	xor.b64  	%rd719, %rd705, %rd718;
	xor.b64  	%rd720, %rd711, %rd689;
	xor.b64  	%rd721, %rd713, %rd619;
	xor.b64  	%rd722, %rd715, %rd622;
	xor.b64  	%rd723, %rd717, %rd625;
	xor.b64  	%rd724, %rd719, %rd628;
	xor.b64  	%rd725, %rd711, %rd631;
	xor.b64  	%rd726, %rd713, %rd634;
	xor.b64  	%rd727, %rd715, %rd637;
	xor.b64  	%rd728, %rd717, %rd640;
	xor.b64  	%rd729, %rd719, %rd643;
	xor.b64  	%rd730, %rd711, %rd646;
	xor.b64  	%rd731, %rd713, %rd649;
	xor.b64  	%rd732, %rd715, %rd652;
	xor.b64  	%rd733, %rd717, %rd655;
	xor.b64  	%rd734, %rd719, %rd658;
	xor.b64  	%rd735, %rd711, %rd661;
	xor.b64  	%rd736, %rd713, %rd664;
	xor.b64  	%rd737, %rd715, %rd667;
	xor.b64  	%rd738, %rd717, %rd670;
	xor.b64  	%rd739, %rd719, %rd673;
	xor.b64  	%rd740, %rd711, %rd676;
	xor.b64  	%rd741, %rd713, %rd679;
	xor.b64  	%rd742, %rd715, %rd682;
	xor.b64  	%rd743, %rd717, %rd685;
	xor.b64  	%rd744, %rd719, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd726;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 20;
	shf.r.wrap.b32 	%r332, %r329, %r330, 20;
	mov.b64 	%rd745, {%r332, %r331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd732;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 21;
	shf.r.wrap.b32 	%r336, %r333, %r334, 21;
	mov.b64 	%rd746, {%r336, %r335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd738;
	}
	shf.l.wrap.b32 	%r339, %r338, %r337, 21;
	shf.l.wrap.b32 	%r340, %r337, %r338, 21;
	mov.b64 	%rd747, {%r340, %r339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd744;
	}
	shf.l.wrap.b32 	%r343, %r342, %r341, 14;
	shf.l.wrap.b32 	%r344, %r341, %r342, 14;
	mov.b64 	%rd748, {%r344, %r343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd723;
	}
	shf.l.wrap.b32 	%r347, %r346, %r345, 28;
	shf.l.wrap.b32 	%r348, %r345, %r346, 28;
	mov.b64 	%rd749, {%r348, %r347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r350,%dummy}, %rd729;
	}
	shf.l.wrap.b32 	%r351, %r350, %r349, 20;
	shf.l.wrap.b32 	%r352, %r349, %r350, 20;
	mov.b64 	%rd750, {%r352, %r351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd730;
	}
	shf.l.wrap.b32 	%r355, %r354, %r353, 3;
	shf.l.wrap.b32 	%r356, %r353, %r354, 3;
	mov.b64 	%rd751, {%r356, %r355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd736;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 19;
	shf.r.wrap.b32 	%r360, %r357, %r358, 19;
	mov.b64 	%rd752, {%r360, %r359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd742;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 3;
	shf.r.wrap.b32 	%r364, %r361, %r362, 3;
	mov.b64 	%rd753, {%r364, %r363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd721;
	}
	shf.l.wrap.b32 	%r367, %r366, %r365, 1;
	shf.l.wrap.b32 	%r368, %r365, %r366, 1;
	mov.b64 	%rd754, {%r368, %r367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd727;
	}
	shf.l.wrap.b32 	%r371, %r370, %r369, 6;
	shf.l.wrap.b32 	%r372, %r369, %r370, 6;
	mov.b64 	%rd755, {%r372, %r371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd733;
	}
	shf.l.wrap.b32 	%r375, %r374, %r373, 25;
	shf.l.wrap.b32 	%r376, %r373, %r374, 25;
	mov.b64 	%rd756, {%r376, %r375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd739;
	}
	shf.l.wrap.b32 	%r379, %r378, %r377, 8;
	shf.l.wrap.b32 	%r380, %r377, %r378, 8;
	mov.b64 	%rd757, {%r380, %r379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd740;
	}
	shf.l.wrap.b32 	%r383, %r382, %r381, 18;
	shf.l.wrap.b32 	%r384, %r381, %r382, 18;
	mov.b64 	%rd758, {%r384, %r383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd724;
	}
	shf.l.wrap.b32 	%r387, %r386, %r385, 27;
	shf.l.wrap.b32 	%r388, %r385, %r386, 27;
	mov.b64 	%rd759, {%r388, %r387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd725;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 28;
	shf.r.wrap.b32 	%r392, %r389, %r390, 28;
	mov.b64 	%rd760, {%r392, %r391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd731;
	}
	shf.l.wrap.b32 	%r395, %r394, %r393, 10;
	shf.l.wrap.b32 	%r396, %r393, %r394, 10;
	mov.b64 	%rd761, {%r396, %r395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd737;
	}
	shf.l.wrap.b32 	%r399, %r398, %r397, 15;
	shf.l.wrap.b32 	%r400, %r397, %r398, 15;
	mov.b64 	%rd762, {%r400, %r399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd743;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 8;
	shf.r.wrap.b32 	%r404, %r401, %r402, 8;
	mov.b64 	%rd763, {%r404, %r403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r406}, %rd722;
	}
	shf.r.wrap.b32 	%r407, %r406, %r405, 2;
	shf.r.wrap.b32 	%r408, %r405, %r406, 2;
	mov.b64 	%rd764, {%r408, %r407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd728;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 9;
	shf.r.wrap.b32 	%r412, %r409, %r410, 9;
	mov.b64 	%rd765, {%r412, %r411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd734;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 25;
	shf.r.wrap.b32 	%r416, %r413, %r414, 25;
	mov.b64 	%rd766, {%r416, %r415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd735;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 23;
	shf.r.wrap.b32 	%r420, %r417, %r418, 23;
	mov.b64 	%rd767, {%r420, %r419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd741;
	}
	shf.l.wrap.b32 	%r423, %r422, %r421, 2;
	shf.l.wrap.b32 	%r424, %r421, %r422, 2;
	mov.b64 	%rd768, {%r424, %r423};
	not.b64 	%rd769, %rd745;
	and.b64  	%rd770, %rd746, %rd769;
	xor.b64  	%rd771, %rd770, %rd720;
	not.b64 	%rd772, %rd746;
	and.b64  	%rd773, %rd747, %rd772;
	xor.b64  	%rd774, %rd773, %rd745;
	not.b64 	%rd775, %rd747;
	and.b64  	%rd776, %rd748, %rd775;
	xor.b64  	%rd777, %rd776, %rd746;
	not.b64 	%rd778, %rd748;
	and.b64  	%rd779, %rd720, %rd778;
	xor.b64  	%rd780, %rd779, %rd747;
	not.b64 	%rd781, %rd720;
	and.b64  	%rd782, %rd745, %rd781;
	xor.b64  	%rd783, %rd782, %rd748;
	not.b64 	%rd784, %rd750;
	and.b64  	%rd785, %rd751, %rd784;
	xor.b64  	%rd786, %rd785, %rd749;
	not.b64 	%rd787, %rd751;
	and.b64  	%rd788, %rd752, %rd787;
	xor.b64  	%rd789, %rd788, %rd750;
	not.b64 	%rd790, %rd752;
	and.b64  	%rd791, %rd753, %rd790;
	xor.b64  	%rd792, %rd791, %rd751;
	not.b64 	%rd793, %rd753;
	and.b64  	%rd794, %rd749, %rd793;
	xor.b64  	%rd795, %rd794, %rd752;
	not.b64 	%rd796, %rd749;
	and.b64  	%rd797, %rd750, %rd796;
	xor.b64  	%rd798, %rd797, %rd753;
	not.b64 	%rd799, %rd755;
	and.b64  	%rd800, %rd756, %rd799;
	xor.b64  	%rd801, %rd800, %rd754;
	not.b64 	%rd802, %rd756;
	and.b64  	%rd803, %rd757, %rd802;
	xor.b64  	%rd804, %rd803, %rd755;
	not.b64 	%rd805, %rd757;
	and.b64  	%rd806, %rd758, %rd805;
	xor.b64  	%rd807, %rd806, %rd756;
	not.b64 	%rd808, %rd758;
	and.b64  	%rd809, %rd754, %rd808;
	xor.b64  	%rd810, %rd809, %rd757;
	not.b64 	%rd811, %rd754;
	and.b64  	%rd812, %rd755, %rd811;
	xor.b64  	%rd813, %rd812, %rd758;
	not.b64 	%rd814, %rd760;
	and.b64  	%rd815, %rd761, %rd814;
	xor.b64  	%rd816, %rd815, %rd759;
	not.b64 	%rd817, %rd761;
	and.b64  	%rd818, %rd762, %rd817;
	xor.b64  	%rd819, %rd818, %rd760;
	not.b64 	%rd820, %rd762;
	and.b64  	%rd821, %rd763, %rd820;
	xor.b64  	%rd822, %rd821, %rd761;
	not.b64 	%rd823, %rd763;
	and.b64  	%rd824, %rd759, %rd823;
	xor.b64  	%rd825, %rd824, %rd762;
	not.b64 	%rd826, %rd759;
	and.b64  	%rd827, %rd760, %rd826;
	xor.b64  	%rd828, %rd827, %rd763;
	not.b64 	%rd829, %rd765;
	and.b64  	%rd830, %rd766, %rd829;
	xor.b64  	%rd831, %rd830, %rd764;
	not.b64 	%rd832, %rd766;
	and.b64  	%rd833, %rd767, %rd832;
	xor.b64  	%rd834, %rd833, %rd765;
	not.b64 	%rd835, %rd767;
	and.b64  	%rd836, %rd768, %rd835;
	xor.b64  	%rd837, %rd836, %rd766;
	not.b64 	%rd838, %rd768;
	and.b64  	%rd839, %rd764, %rd838;
	xor.b64  	%rd840, %rd839, %rd767;
	not.b64 	%rd841, %rd764;
	and.b64  	%rd842, %rd765, %rd841;
	xor.b64  	%rd843, %rd842, %rd768;
	xor.b64  	%rd844, %rd771, %rd18;
	xor.b64  	%rd845, %rd786, %rd844;
	xor.b64  	%rd846, %rd845, %rd801;
	xor.b64  	%rd847, %rd846, %rd816;
	xor.b64  	%rd848, %rd847, %rd831;
	xor.b64  	%rd849, %rd789, %rd774;
	xor.b64  	%rd850, %rd849, %rd804;
	xor.b64  	%rd851, %rd850, %rd819;
	xor.b64  	%rd852, %rd851, %rd834;
	xor.b64  	%rd853, %rd792, %rd777;
	xor.b64  	%rd854, %rd853, %rd807;
	xor.b64  	%rd855, %rd854, %rd822;
	xor.b64  	%rd856, %rd855, %rd837;
	xor.b64  	%rd857, %rd795, %rd780;
	xor.b64  	%rd858, %rd857, %rd810;
	xor.b64  	%rd859, %rd858, %rd825;
	xor.b64  	%rd860, %rd859, %rd840;
	xor.b64  	%rd861, %rd798, %rd783;
	xor.b64  	%rd862, %rd861, %rd813;
	xor.b64  	%rd863, %rd862, %rd828;
	xor.b64  	%rd864, %rd863, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd852;
	}
	shf.l.wrap.b32 	%r427, %r426, %r425, 1;
	shf.l.wrap.b32 	%r428, %r425, %r426, 1;
	mov.b64 	%rd865, {%r428, %r427};
	xor.b64  	%rd866, %rd864, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd856;
	}
	shf.l.wrap.b32 	%r431, %r430, %r429, 1;
	shf.l.wrap.b32 	%r432, %r429, %r430, 1;
	mov.b64 	%rd867, {%r432, %r431};
	xor.b64  	%rd868, %rd867, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd860;
	}
	shf.l.wrap.b32 	%r435, %r434, %r433, 1;
	shf.l.wrap.b32 	%r436, %r433, %r434, 1;
	mov.b64 	%rd869, {%r436, %r435};
	xor.b64  	%rd870, %rd869, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd864;
	}
	shf.l.wrap.b32 	%r439, %r438, %r437, 1;
	shf.l.wrap.b32 	%r440, %r437, %r438, 1;
	mov.b64 	%rd871, {%r440, %r439};
	xor.b64  	%rd872, %rd871, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd848;
	}
	shf.l.wrap.b32 	%r443, %r442, %r441, 1;
	shf.l.wrap.b32 	%r444, %r441, %r442, 1;
	mov.b64 	%rd873, {%r444, %r443};
	xor.b64  	%rd874, %rd860, %rd873;
	xor.b64  	%rd875, %rd866, %rd844;
	xor.b64  	%rd876, %rd868, %rd774;
	xor.b64  	%rd877, %rd870, %rd777;
	xor.b64  	%rd878, %rd872, %rd780;
	xor.b64  	%rd879, %rd874, %rd783;
	xor.b64  	%rd880, %rd866, %rd786;
	xor.b64  	%rd881, %rd868, %rd789;
	xor.b64  	%rd882, %rd870, %rd792;
	xor.b64  	%rd883, %rd872, %rd795;
	xor.b64  	%rd884, %rd874, %rd798;
	xor.b64  	%rd885, %rd866, %rd801;
	xor.b64  	%rd886, %rd868, %rd804;
	xor.b64  	%rd887, %rd870, %rd807;
	xor.b64  	%rd888, %rd872, %rd810;
	xor.b64  	%rd889, %rd874, %rd813;
	xor.b64  	%rd890, %rd866, %rd816;
	xor.b64  	%rd891, %rd868, %rd819;
	xor.b64  	%rd892, %rd870, %rd822;
	xor.b64  	%rd893, %rd872, %rd825;
	xor.b64  	%rd894, %rd874, %rd828;
	xor.b64  	%rd895, %rd866, %rd831;
	xor.b64  	%rd896, %rd868, %rd834;
	xor.b64  	%rd897, %rd870, %rd837;
	xor.b64  	%rd898, %rd872, %rd840;
	xor.b64  	%rd899, %rd874, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd881;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 20;
	shf.r.wrap.b32 	%r448, %r445, %r446, 20;
	mov.b64 	%rd900, {%r448, %r447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd887;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 21;
	shf.r.wrap.b32 	%r452, %r449, %r450, 21;
	mov.b64 	%rd901, {%r452, %r451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r454,%dummy}, %rd893;
	}
	shf.l.wrap.b32 	%r455, %r454, %r453, 21;
	shf.l.wrap.b32 	%r456, %r453, %r454, 21;
	mov.b64 	%rd902, {%r456, %r455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd899;
	}
	shf.l.wrap.b32 	%r459, %r458, %r457, 14;
	shf.l.wrap.b32 	%r460, %r457, %r458, 14;
	mov.b64 	%rd903, {%r460, %r459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r462,%dummy}, %rd878;
	}
	shf.l.wrap.b32 	%r463, %r462, %r461, 28;
	shf.l.wrap.b32 	%r464, %r461, %r462, 28;
	mov.b64 	%rd904, {%r464, %r463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd884;
	}
	shf.l.wrap.b32 	%r467, %r466, %r465, 20;
	shf.l.wrap.b32 	%r468, %r465, %r466, 20;
	mov.b64 	%rd905, {%r468, %r467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r470,%dummy}, %rd885;
	}
	shf.l.wrap.b32 	%r471, %r470, %r469, 3;
	shf.l.wrap.b32 	%r472, %r469, %r470, 3;
	mov.b64 	%rd906, {%r472, %r471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd891;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 19;
	shf.r.wrap.b32 	%r476, %r473, %r474, 19;
	mov.b64 	%rd907, {%r476, %r475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd897;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 3;
	shf.r.wrap.b32 	%r480, %r477, %r478, 3;
	mov.b64 	%rd908, {%r480, %r479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd876;
	}
	shf.l.wrap.b32 	%r483, %r482, %r481, 1;
	shf.l.wrap.b32 	%r484, %r481, %r482, 1;
	mov.b64 	%rd909, {%r484, %r483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r486,%dummy}, %rd882;
	}
	shf.l.wrap.b32 	%r487, %r486, %r485, 6;
	shf.l.wrap.b32 	%r488, %r485, %r486, 6;
	mov.b64 	%rd910, {%r488, %r487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd888;
	}
	shf.l.wrap.b32 	%r491, %r490, %r489, 25;
	shf.l.wrap.b32 	%r492, %r489, %r490, 25;
	mov.b64 	%rd911, {%r492, %r491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd894;
	}
	shf.l.wrap.b32 	%r495, %r494, %r493, 8;
	shf.l.wrap.b32 	%r496, %r493, %r494, 8;
	mov.b64 	%rd912, {%r496, %r495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd895;
	}
	shf.l.wrap.b32 	%r499, %r498, %r497, 18;
	shf.l.wrap.b32 	%r500, %r497, %r498, 18;
	mov.b64 	%rd913, {%r500, %r499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r502,%dummy}, %rd879;
	}
	shf.l.wrap.b32 	%r503, %r502, %r501, 27;
	shf.l.wrap.b32 	%r504, %r501, %r502, 27;
	mov.b64 	%rd914, {%r504, %r503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd880;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 28;
	shf.r.wrap.b32 	%r508, %r505, %r506, 28;
	mov.b64 	%rd915, {%r508, %r507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r510,%dummy}, %rd886;
	}
	shf.l.wrap.b32 	%r511, %r510, %r509, 10;
	shf.l.wrap.b32 	%r512, %r509, %r510, 10;
	mov.b64 	%rd916, {%r512, %r511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd892;
	}
	shf.l.wrap.b32 	%r515, %r514, %r513, 15;
	shf.l.wrap.b32 	%r516, %r513, %r514, 15;
	mov.b64 	%rd917, {%r516, %r515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd898;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 8;
	shf.r.wrap.b32 	%r520, %r517, %r518, 8;
	mov.b64 	%rd918, {%r520, %r519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd877;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 2;
	shf.r.wrap.b32 	%r524, %r521, %r522, 2;
	mov.b64 	%rd919, {%r524, %r523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd883;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 9;
	shf.r.wrap.b32 	%r528, %r525, %r526, 9;
	mov.b64 	%rd920, {%r528, %r527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd889;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 25;
	shf.r.wrap.b32 	%r532, %r529, %r530, 25;
	mov.b64 	%rd921, {%r532, %r531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd890;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 23;
	shf.r.wrap.b32 	%r536, %r533, %r534, 23;
	mov.b64 	%rd922, {%r536, %r535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd896;
	}
	shf.l.wrap.b32 	%r539, %r538, %r537, 2;
	shf.l.wrap.b32 	%r540, %r537, %r538, 2;
	mov.b64 	%rd923, {%r540, %r539};
	not.b64 	%rd924, %rd900;
	and.b64  	%rd925, %rd901, %rd924;
	xor.b64  	%rd926, %rd925, %rd875;
	not.b64 	%rd927, %rd901;
	and.b64  	%rd928, %rd902, %rd927;
	xor.b64  	%rd929, %rd928, %rd900;
	not.b64 	%rd930, %rd902;
	and.b64  	%rd931, %rd903, %rd930;
	xor.b64  	%rd932, %rd931, %rd901;
	not.b64 	%rd933, %rd903;
	and.b64  	%rd934, %rd875, %rd933;
	xor.b64  	%rd935, %rd934, %rd902;
	not.b64 	%rd936, %rd875;
	and.b64  	%rd937, %rd900, %rd936;
	xor.b64  	%rd938, %rd937, %rd903;
	not.b64 	%rd939, %rd905;
	and.b64  	%rd940, %rd906, %rd939;
	xor.b64  	%rd941, %rd940, %rd904;
	not.b64 	%rd942, %rd906;
	and.b64  	%rd943, %rd907, %rd942;
	xor.b64  	%rd944, %rd943, %rd905;
	not.b64 	%rd945, %rd907;
	and.b64  	%rd946, %rd908, %rd945;
	xor.b64  	%rd947, %rd946, %rd906;
	not.b64 	%rd948, %rd908;
	and.b64  	%rd949, %rd904, %rd948;
	xor.b64  	%rd950, %rd949, %rd907;
	not.b64 	%rd951, %rd904;
	and.b64  	%rd952, %rd905, %rd951;
	xor.b64  	%rd953, %rd952, %rd908;
	not.b64 	%rd954, %rd910;
	and.b64  	%rd955, %rd911, %rd954;
	xor.b64  	%rd956, %rd955, %rd909;
	not.b64 	%rd957, %rd911;
	and.b64  	%rd958, %rd912, %rd957;
	xor.b64  	%rd959, %rd958, %rd910;
	not.b64 	%rd960, %rd912;
	and.b64  	%rd961, %rd913, %rd960;
	xor.b64  	%rd962, %rd961, %rd911;
	not.b64 	%rd963, %rd913;
	and.b64  	%rd964, %rd909, %rd963;
	xor.b64  	%rd965, %rd964, %rd912;
	not.b64 	%rd966, %rd909;
	and.b64  	%rd967, %rd910, %rd966;
	xor.b64  	%rd968, %rd967, %rd913;
	not.b64 	%rd969, %rd915;
	and.b64  	%rd970, %rd916, %rd969;
	xor.b64  	%rd971, %rd970, %rd914;
	not.b64 	%rd972, %rd916;
	and.b64  	%rd973, %rd917, %rd972;
	xor.b64  	%rd974, %rd973, %rd915;
	not.b64 	%rd975, %rd917;
	and.b64  	%rd976, %rd918, %rd975;
	xor.b64  	%rd977, %rd976, %rd916;
	not.b64 	%rd978, %rd918;
	and.b64  	%rd979, %rd914, %rd978;
	xor.b64  	%rd980, %rd979, %rd917;
	not.b64 	%rd981, %rd914;
	and.b64  	%rd982, %rd915, %rd981;
	xor.b64  	%rd983, %rd982, %rd918;
	not.b64 	%rd984, %rd920;
	and.b64  	%rd985, %rd921, %rd984;
	xor.b64  	%rd986, %rd985, %rd919;
	not.b64 	%rd987, %rd921;
	and.b64  	%rd988, %rd922, %rd987;
	xor.b64  	%rd989, %rd988, %rd920;
	not.b64 	%rd990, %rd922;
	and.b64  	%rd991, %rd923, %rd990;
	xor.b64  	%rd992, %rd991, %rd921;
	not.b64 	%rd993, %rd923;
	and.b64  	%rd994, %rd919, %rd993;
	xor.b64  	%rd995, %rd994, %rd922;
	not.b64 	%rd996, %rd919;
	and.b64  	%rd997, %rd920, %rd996;
	xor.b64  	%rd998, %rd997, %rd923;
	xor.b64  	%rd999, %rd926, %rd19;
	xor.b64  	%rd1000, %rd941, %rd999;
	xor.b64  	%rd1001, %rd1000, %rd956;
	xor.b64  	%rd1002, %rd1001, %rd971;
	xor.b64  	%rd1003, %rd1002, %rd986;
	xor.b64  	%rd1004, %rd944, %rd929;
	xor.b64  	%rd1005, %rd1004, %rd959;
	xor.b64  	%rd1006, %rd1005, %rd974;
	xor.b64  	%rd1007, %rd1006, %rd989;
	xor.b64  	%rd1008, %rd947, %rd932;
	xor.b64  	%rd1009, %rd1008, %rd962;
	xor.b64  	%rd1010, %rd1009, %rd977;
	xor.b64  	%rd1011, %rd1010, %rd992;
	xor.b64  	%rd1012, %rd950, %rd935;
	xor.b64  	%rd1013, %rd1012, %rd965;
	xor.b64  	%rd1014, %rd1013, %rd980;
	xor.b64  	%rd1015, %rd1014, %rd995;
	xor.b64  	%rd1016, %rd953, %rd938;
	xor.b64  	%rd1017, %rd1016, %rd968;
	xor.b64  	%rd1018, %rd1017, %rd983;
	xor.b64  	%rd1019, %rd1018, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd1007;
	}
	shf.l.wrap.b32 	%r543, %r542, %r541, 1;
	shf.l.wrap.b32 	%r544, %r541, %r542, 1;
	mov.b64 	%rd1020, {%r544, %r543};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd1011;
	}
	shf.l.wrap.b32 	%r547, %r546, %r545, 1;
	shf.l.wrap.b32 	%r548, %r545, %r546, 1;
	mov.b64 	%rd1022, {%r548, %r547};
	xor.b64  	%rd1023, %rd1022, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd1015;
	}
	shf.l.wrap.b32 	%r551, %r550, %r549, 1;
	shf.l.wrap.b32 	%r552, %r549, %r550, 1;
	mov.b64 	%rd1024, {%r552, %r551};
	xor.b64  	%rd1025, %rd1024, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd1019;
	}
	shf.l.wrap.b32 	%r555, %r554, %r553, 1;
	shf.l.wrap.b32 	%r556, %r553, %r554, 1;
	mov.b64 	%rd1026, {%r556, %r555};
	xor.b64  	%rd1027, %rd1026, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r558,%dummy}, %rd1003;
	}
	shf.l.wrap.b32 	%r559, %r558, %r557, 1;
	shf.l.wrap.b32 	%r560, %r557, %r558, 1;
	mov.b64 	%rd1028, {%r560, %r559};
	xor.b64  	%rd1029, %rd1015, %rd1028;
	xor.b64  	%rd1030, %rd1021, %rd999;
	xor.b64  	%rd1031, %rd1023, %rd929;
	xor.b64  	%rd1032, %rd1025, %rd932;
	xor.b64  	%rd1033, %rd1027, %rd935;
	xor.b64  	%rd1034, %rd1029, %rd938;
	xor.b64  	%rd1035, %rd1021, %rd941;
	xor.b64  	%rd1036, %rd1023, %rd944;
	xor.b64  	%rd1037, %rd1025, %rd947;
	xor.b64  	%rd1038, %rd1027, %rd950;
	xor.b64  	%rd1039, %rd1029, %rd953;
	xor.b64  	%rd1040, %rd1021, %rd956;
	xor.b64  	%rd1041, %rd1023, %rd959;
	xor.b64  	%rd1042, %rd1025, %rd962;
	xor.b64  	%rd1043, %rd1027, %rd965;
	xor.b64  	%rd1044, %rd1029, %rd968;
	xor.b64  	%rd1045, %rd1021, %rd971;
	xor.b64  	%rd1046, %rd1023, %rd974;
	xor.b64  	%rd1047, %rd1025, %rd977;
	xor.b64  	%rd1048, %rd1027, %rd980;
	xor.b64  	%rd1049, %rd1029, %rd983;
	xor.b64  	%rd1050, %rd1021, %rd986;
	xor.b64  	%rd1051, %rd1023, %rd989;
	xor.b64  	%rd1052, %rd1025, %rd992;
	xor.b64  	%rd1053, %rd1027, %rd995;
	xor.b64  	%rd1054, %rd1029, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd1036;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 20;
	shf.r.wrap.b32 	%r564, %r561, %r562, 20;
	mov.b64 	%rd1055, {%r564, %r563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd1042;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 21;
	shf.r.wrap.b32 	%r568, %r565, %r566, 21;
	mov.b64 	%rd1056, {%r568, %r567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd1048;
	}
	shf.l.wrap.b32 	%r571, %r570, %r569, 21;
	shf.l.wrap.b32 	%r572, %r569, %r570, 21;
	mov.b64 	%rd1057, {%r572, %r571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r574,%dummy}, %rd1054;
	}
	shf.l.wrap.b32 	%r575, %r574, %r573, 14;
	shf.l.wrap.b32 	%r576, %r573, %r574, 14;
	mov.b64 	%rd1058, {%r576, %r575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd1033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd1033;
	}
	shf.l.wrap.b32 	%r579, %r578, %r577, 28;
	shf.l.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd1059, {%r580, %r579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r582,%dummy}, %rd1039;
	}
	shf.l.wrap.b32 	%r583, %r582, %r581, 20;
	shf.l.wrap.b32 	%r584, %r581, %r582, 20;
	mov.b64 	%rd1060, {%r584, %r583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd1040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd1040;
	}
	shf.l.wrap.b32 	%r587, %r586, %r585, 3;
	shf.l.wrap.b32 	%r588, %r585, %r586, 3;
	mov.b64 	%rd1061, {%r588, %r587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd1046;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 19;
	shf.r.wrap.b32 	%r592, %r589, %r590, 19;
	mov.b64 	%rd1062, {%r592, %r591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd1052;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 3;
	shf.r.wrap.b32 	%r596, %r593, %r594, 3;
	mov.b64 	%rd1063, {%r596, %r595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r598,%dummy}, %rd1031;
	}
	shf.l.wrap.b32 	%r599, %r598, %r597, 1;
	shf.l.wrap.b32 	%r600, %r597, %r598, 1;
	mov.b64 	%rd1064, {%r600, %r599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd1037;
	}
	shf.l.wrap.b32 	%r603, %r602, %r601, 6;
	shf.l.wrap.b32 	%r604, %r601, %r602, 6;
	mov.b64 	%rd1065, {%r604, %r603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r606,%dummy}, %rd1043;
	}
	shf.l.wrap.b32 	%r607, %r606, %r605, 25;
	shf.l.wrap.b32 	%r608, %r605, %r606, 25;
	mov.b64 	%rd1066, {%r608, %r607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd1049;
	}
	shf.l.wrap.b32 	%r611, %r610, %r609, 8;
	shf.l.wrap.b32 	%r612, %r609, %r610, 8;
	mov.b64 	%rd1067, {%r612, %r611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r614,%dummy}, %rd1050;
	}
	shf.l.wrap.b32 	%r615, %r614, %r613, 18;
	shf.l.wrap.b32 	%r616, %r613, %r614, 18;
	mov.b64 	%rd1068, {%r616, %r615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd1034;
	}
	shf.l.wrap.b32 	%r619, %r618, %r617, 27;
	shf.l.wrap.b32 	%r620, %r617, %r618, 27;
	mov.b64 	%rd1069, {%r620, %r619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd1035;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 28;
	shf.r.wrap.b32 	%r624, %r621, %r622, 28;
	mov.b64 	%rd1070, {%r624, %r623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd1041;
	}
	shf.l.wrap.b32 	%r627, %r626, %r625, 10;
	shf.l.wrap.b32 	%r628, %r625, %r626, 10;
	mov.b64 	%rd1071, {%r628, %r627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r630,%dummy}, %rd1047;
	}
	shf.l.wrap.b32 	%r631, %r630, %r629, 15;
	shf.l.wrap.b32 	%r632, %r629, %r630, 15;
	mov.b64 	%rd1072, {%r632, %r631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd1053;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 8;
	shf.r.wrap.b32 	%r636, %r633, %r634, 8;
	mov.b64 	%rd1073, {%r636, %r635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd1032;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 2;
	shf.r.wrap.b32 	%r640, %r637, %r638, 2;
	mov.b64 	%rd1074, {%r640, %r639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd1038;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 9;
	shf.r.wrap.b32 	%r644, %r641, %r642, 9;
	mov.b64 	%rd1075, {%r644, %r643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1044;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 25;
	shf.r.wrap.b32 	%r648, %r645, %r646, 25;
	mov.b64 	%rd1076, {%r648, %r647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd1045;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 23;
	shf.r.wrap.b32 	%r652, %r649, %r650, 23;
	mov.b64 	%rd1077, {%r652, %r651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd1051;
	}
	shf.l.wrap.b32 	%r655, %r654, %r653, 2;
	shf.l.wrap.b32 	%r656, %r653, %r654, 2;
	mov.b64 	%rd1078, {%r656, %r655};
	not.b64 	%rd1079, %rd1055;
	and.b64  	%rd1080, %rd1056, %rd1079;
	xor.b64  	%rd1081, %rd1080, %rd1030;
	not.b64 	%rd1082, %rd1056;
	and.b64  	%rd1083, %rd1057, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1055;
	not.b64 	%rd1085, %rd1057;
	and.b64  	%rd1086, %rd1058, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1056;
	not.b64 	%rd1088, %rd1058;
	and.b64  	%rd1089, %rd1030, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1057;
	not.b64 	%rd1091, %rd1030;
	and.b64  	%rd1092, %rd1055, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1058;
	not.b64 	%rd1094, %rd1060;
	and.b64  	%rd1095, %rd1061, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1059;
	not.b64 	%rd1097, %rd1061;
	and.b64  	%rd1098, %rd1062, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1060;
	not.b64 	%rd1100, %rd1062;
	and.b64  	%rd1101, %rd1063, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1061;
	not.b64 	%rd1103, %rd1063;
	and.b64  	%rd1104, %rd1059, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1062;
	not.b64 	%rd1106, %rd1059;
	and.b64  	%rd1107, %rd1060, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1063;
	not.b64 	%rd1109, %rd1065;
	and.b64  	%rd1110, %rd1066, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1064;
	not.b64 	%rd1112, %rd1066;
	and.b64  	%rd1113, %rd1067, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1065;
	not.b64 	%rd1115, %rd1067;
	and.b64  	%rd1116, %rd1068, %rd1115;
	xor.b64  	%rd1117, %rd1116, %rd1066;
	not.b64 	%rd1118, %rd1068;
	and.b64  	%rd1119, %rd1064, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1067;
	not.b64 	%rd1121, %rd1064;
	and.b64  	%rd1122, %rd1065, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1068;
	not.b64 	%rd1124, %rd1070;
	and.b64  	%rd1125, %rd1071, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1069;
	not.b64 	%rd1127, %rd1071;
	and.b64  	%rd1128, %rd1072, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1070;
	not.b64 	%rd1130, %rd1072;
	and.b64  	%rd1131, %rd1073, %rd1130;
	xor.b64  	%rd1132, %rd1131, %rd1071;
	not.b64 	%rd1133, %rd1073;
	and.b64  	%rd1134, %rd1069, %rd1133;
	xor.b64  	%rd1135, %rd1134, %rd1072;
	not.b64 	%rd1136, %rd1069;
	and.b64  	%rd1137, %rd1070, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1073;
	not.b64 	%rd1139, %rd1075;
	and.b64  	%rd1140, %rd1076, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1074;
	not.b64 	%rd1142, %rd1076;
	and.b64  	%rd1143, %rd1077, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1075;
	not.b64 	%rd1145, %rd1077;
	and.b64  	%rd1146, %rd1078, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1076;
	not.b64 	%rd1148, %rd1078;
	and.b64  	%rd1149, %rd1074, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1077;
	not.b64 	%rd1151, %rd1074;
	and.b64  	%rd1152, %rd1075, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1078;
	xor.b64  	%rd1154, %rd1081, %rd20;
	xor.b64  	%rd1155, %rd1096, %rd1154;
	xor.b64  	%rd1156, %rd1155, %rd1111;
	xor.b64  	%rd1157, %rd1156, %rd1126;
	xor.b64  	%rd1158, %rd1157, %rd1141;
	xor.b64  	%rd1159, %rd1099, %rd1084;
	xor.b64  	%rd1160, %rd1159, %rd1114;
	xor.b64  	%rd1161, %rd1160, %rd1129;
	xor.b64  	%rd1162, %rd1161, %rd1144;
	xor.b64  	%rd1163, %rd1102, %rd1087;
	xor.b64  	%rd1164, %rd1163, %rd1117;
	xor.b64  	%rd1165, %rd1164, %rd1132;
	xor.b64  	%rd1166, %rd1165, %rd1147;
	xor.b64  	%rd1167, %rd1105, %rd1090;
	xor.b64  	%rd1168, %rd1167, %rd1120;
	xor.b64  	%rd1169, %rd1168, %rd1135;
	xor.b64  	%rd1170, %rd1169, %rd1150;
	xor.b64  	%rd1171, %rd1108, %rd1093;
	xor.b64  	%rd1172, %rd1171, %rd1123;
	xor.b64  	%rd1173, %rd1172, %rd1138;
	xor.b64  	%rd1174, %rd1173, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd1162;
	}
	shf.l.wrap.b32 	%r659, %r658, %r657, 1;
	shf.l.wrap.b32 	%r660, %r657, %r658, 1;
	mov.b64 	%rd1175, {%r660, %r659};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd1166;
	}
	shf.l.wrap.b32 	%r663, %r662, %r661, 1;
	shf.l.wrap.b32 	%r664, %r661, %r662, 1;
	mov.b64 	%rd1177, {%r664, %r663};
	xor.b64  	%rd1178, %rd1177, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd1170;
	}
	shf.l.wrap.b32 	%r667, %r666, %r665, 1;
	shf.l.wrap.b32 	%r668, %r665, %r666, 1;
	mov.b64 	%rd1179, {%r668, %r667};
	xor.b64  	%rd1180, %rd1179, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd1174;
	}
	shf.l.wrap.b32 	%r671, %r670, %r669, 1;
	shf.l.wrap.b32 	%r672, %r669, %r670, 1;
	mov.b64 	%rd1181, {%r672, %r671};
	xor.b64  	%rd1182, %rd1181, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd1158;
	}
	shf.l.wrap.b32 	%r675, %r674, %r673, 1;
	shf.l.wrap.b32 	%r676, %r673, %r674, 1;
	mov.b64 	%rd1183, {%r676, %r675};
	xor.b64  	%rd1184, %rd1170, %rd1183;
	xor.b64  	%rd1185, %rd1176, %rd1154;
	xor.b64  	%rd1186, %rd1178, %rd1084;
	xor.b64  	%rd1187, %rd1180, %rd1087;
	xor.b64  	%rd1188, %rd1182, %rd1090;
	xor.b64  	%rd1189, %rd1184, %rd1093;
	xor.b64  	%rd1190, %rd1176, %rd1096;
	xor.b64  	%rd1191, %rd1178, %rd1099;
	xor.b64  	%rd1192, %rd1180, %rd1102;
	xor.b64  	%rd1193, %rd1182, %rd1105;
	xor.b64  	%rd1194, %rd1184, %rd1108;
	xor.b64  	%rd1195, %rd1176, %rd1111;
	xor.b64  	%rd1196, %rd1178, %rd1114;
	xor.b64  	%rd1197, %rd1180, %rd1117;
	xor.b64  	%rd1198, %rd1182, %rd1120;
	xor.b64  	%rd1199, %rd1184, %rd1123;
	xor.b64  	%rd1200, %rd1176, %rd1126;
	xor.b64  	%rd1201, %rd1178, %rd1129;
	xor.b64  	%rd1202, %rd1180, %rd1132;
	xor.b64  	%rd1203, %rd1182, %rd1135;
	xor.b64  	%rd1204, %rd1184, %rd1138;
	xor.b64  	%rd1205, %rd1176, %rd1141;
	xor.b64  	%rd1206, %rd1178, %rd1144;
	xor.b64  	%rd1207, %rd1180, %rd1147;
	xor.b64  	%rd1208, %rd1182, %rd1150;
	xor.b64  	%rd1209, %rd1184, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1191;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 20;
	shf.r.wrap.b32 	%r680, %r677, %r678, 20;
	mov.b64 	%rd1210, {%r680, %r679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1197;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 21;
	shf.r.wrap.b32 	%r684, %r681, %r682, 21;
	mov.b64 	%rd1211, {%r684, %r683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r686,%dummy}, %rd1203;
	}
	shf.l.wrap.b32 	%r687, %r686, %r685, 21;
	shf.l.wrap.b32 	%r688, %r685, %r686, 21;
	mov.b64 	%rd1212, {%r688, %r687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd1209;
	}
	shf.l.wrap.b32 	%r691, %r690, %r689, 14;
	shf.l.wrap.b32 	%r692, %r689, %r690, 14;
	mov.b64 	%rd1213, {%r692, %r691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd1188;
	}
	shf.l.wrap.b32 	%r695, %r694, %r693, 28;
	shf.l.wrap.b32 	%r696, %r693, %r694, 28;
	mov.b64 	%rd1214, {%r696, %r695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1194;
	}
	shf.l.wrap.b32 	%r699, %r698, %r697, 20;
	shf.l.wrap.b32 	%r700, %r697, %r698, 20;
	mov.b64 	%rd1215, {%r700, %r699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd1195;
	}
	shf.l.wrap.b32 	%r703, %r702, %r701, 3;
	shf.l.wrap.b32 	%r704, %r701, %r702, 3;
	mov.b64 	%rd1216, {%r704, %r703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1201;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 19;
	shf.r.wrap.b32 	%r708, %r705, %r706, 19;
	mov.b64 	%rd1217, {%r708, %r707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1207;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 3;
	shf.r.wrap.b32 	%r712, %r709, %r710, 3;
	mov.b64 	%rd1218, {%r712, %r711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd1186;
	}
	shf.l.wrap.b32 	%r715, %r714, %r713, 1;
	shf.l.wrap.b32 	%r716, %r713, %r714, 1;
	mov.b64 	%rd1219, {%r716, %r715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1192;
	}
	shf.l.wrap.b32 	%r719, %r718, %r717, 6;
	shf.l.wrap.b32 	%r720, %r717, %r718, 6;
	mov.b64 	%rd1220, {%r720, %r719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd1198;
	}
	shf.l.wrap.b32 	%r723, %r722, %r721, 25;
	shf.l.wrap.b32 	%r724, %r721, %r722, 25;
	mov.b64 	%rd1221, {%r724, %r723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd1204;
	}
	shf.l.wrap.b32 	%r727, %r726, %r725, 8;
	shf.l.wrap.b32 	%r728, %r725, %r726, 8;
	mov.b64 	%rd1222, {%r728, %r727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r729}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1205;
	}
	shf.l.wrap.b32 	%r731, %r730, %r729, 18;
	shf.l.wrap.b32 	%r732, %r729, %r730, 18;
	mov.b64 	%rd1223, {%r732, %r731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd1189;
	}
	shf.l.wrap.b32 	%r735, %r734, %r733, 27;
	shf.l.wrap.b32 	%r736, %r733, %r734, 27;
	mov.b64 	%rd1224, {%r736, %r735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1190;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 28;
	shf.r.wrap.b32 	%r740, %r737, %r738, 28;
	mov.b64 	%rd1225, {%r740, %r739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd1196;
	}
	shf.l.wrap.b32 	%r743, %r742, %r741, 10;
	shf.l.wrap.b32 	%r744, %r741, %r742, 10;
	mov.b64 	%rd1226, {%r744, %r743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd1202;
	}
	shf.l.wrap.b32 	%r747, %r746, %r745, 15;
	shf.l.wrap.b32 	%r748, %r745, %r746, 15;
	mov.b64 	%rd1227, {%r748, %r747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1208;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 8;
	shf.r.wrap.b32 	%r752, %r749, %r750, 8;
	mov.b64 	%rd1228, {%r752, %r751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r754}, %rd1187;
	}
	shf.r.wrap.b32 	%r755, %r754, %r753, 2;
	shf.r.wrap.b32 	%r756, %r753, %r754, 2;
	mov.b64 	%rd1229, {%r756, %r755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1193;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 9;
	shf.r.wrap.b32 	%r760, %r757, %r758, 9;
	mov.b64 	%rd1230, {%r760, %r759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd1199;
	}
	shf.r.wrap.b32 	%r763, %r762, %r761, 25;
	shf.r.wrap.b32 	%r764, %r761, %r762, 25;
	mov.b64 	%rd1231, {%r764, %r763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1200;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 23;
	shf.r.wrap.b32 	%r768, %r765, %r766, 23;
	mov.b64 	%rd1232, {%r768, %r767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd1206;
	}
	shf.l.wrap.b32 	%r771, %r770, %r769, 2;
	shf.l.wrap.b32 	%r772, %r769, %r770, 2;
	mov.b64 	%rd1233, {%r772, %r771};
	not.b64 	%rd1234, %rd1210;
	and.b64  	%rd1235, %rd1211, %rd1234;
	xor.b64  	%rd1236, %rd1235, %rd1185;
	not.b64 	%rd1237, %rd1211;
	and.b64  	%rd1238, %rd1212, %rd1237;
	xor.b64  	%rd1239, %rd1238, %rd1210;
	not.b64 	%rd1240, %rd1212;
	and.b64  	%rd1241, %rd1213, %rd1240;
	xor.b64  	%rd1242, %rd1241, %rd1211;
	not.b64 	%rd1243, %rd1213;
	and.b64  	%rd1244, %rd1185, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1212;
	not.b64 	%rd1246, %rd1185;
	and.b64  	%rd1247, %rd1210, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1213;
	not.b64 	%rd1249, %rd1215;
	and.b64  	%rd1250, %rd1216, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1214;
	not.b64 	%rd1252, %rd1216;
	and.b64  	%rd1253, %rd1217, %rd1252;
	xor.b64  	%rd1254, %rd1253, %rd1215;
	not.b64 	%rd1255, %rd1217;
	and.b64  	%rd1256, %rd1218, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd1216;
	not.b64 	%rd1258, %rd1218;
	and.b64  	%rd1259, %rd1214, %rd1258;
	xor.b64  	%rd1260, %rd1259, %rd1217;
	not.b64 	%rd1261, %rd1214;
	and.b64  	%rd1262, %rd1215, %rd1261;
	xor.b64  	%rd1263, %rd1262, %rd1218;
	not.b64 	%rd1264, %rd1220;
	and.b64  	%rd1265, %rd1221, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1219;
	not.b64 	%rd1267, %rd1221;
	and.b64  	%rd1268, %rd1222, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd1220;
	not.b64 	%rd1270, %rd1222;
	and.b64  	%rd1271, %rd1223, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1221;
	not.b64 	%rd1273, %rd1223;
	and.b64  	%rd1274, %rd1219, %rd1273;
	xor.b64  	%rd1275, %rd1274, %rd1222;
	not.b64 	%rd1276, %rd1219;
	and.b64  	%rd1277, %rd1220, %rd1276;
	xor.b64  	%rd1278, %rd1277, %rd1223;
	not.b64 	%rd1279, %rd1225;
	and.b64  	%rd1280, %rd1226, %rd1279;
	xor.b64  	%rd1281, %rd1280, %rd1224;
	not.b64 	%rd1282, %rd1226;
	and.b64  	%rd1283, %rd1227, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1225;
	not.b64 	%rd1285, %rd1227;
	and.b64  	%rd1286, %rd1228, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1226;
	not.b64 	%rd1288, %rd1228;
	and.b64  	%rd1289, %rd1224, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1227;
	not.b64 	%rd1291, %rd1224;
	and.b64  	%rd1292, %rd1225, %rd1291;
	xor.b64  	%rd1293, %rd1292, %rd1228;
	not.b64 	%rd1294, %rd1230;
	and.b64  	%rd1295, %rd1231, %rd1294;
	xor.b64  	%rd1296, %rd1295, %rd1229;
	not.b64 	%rd1297, %rd1231;
	and.b64  	%rd1298, %rd1232, %rd1297;
	xor.b64  	%rd1299, %rd1298, %rd1230;
	not.b64 	%rd1300, %rd1232;
	and.b64  	%rd1301, %rd1233, %rd1300;
	xor.b64  	%rd1302, %rd1301, %rd1231;
	not.b64 	%rd1303, %rd1233;
	and.b64  	%rd1304, %rd1229, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1232;
	not.b64 	%rd1306, %rd1229;
	and.b64  	%rd1307, %rd1230, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1233;
	xor.b64  	%rd1309, %rd1236, %rd21;
	xor.b64  	%rd1310, %rd1251, %rd1309;
	xor.b64  	%rd1311, %rd1310, %rd1266;
	xor.b64  	%rd1312, %rd1311, %rd1281;
	xor.b64  	%rd1313, %rd1312, %rd1296;
	xor.b64  	%rd1314, %rd1254, %rd1239;
	xor.b64  	%rd1315, %rd1314, %rd1269;
	xor.b64  	%rd1316, %rd1315, %rd1284;
	xor.b64  	%rd1317, %rd1316, %rd1299;
	xor.b64  	%rd1318, %rd1257, %rd1242;
	xor.b64  	%rd1319, %rd1318, %rd1272;
	xor.b64  	%rd1320, %rd1319, %rd1287;
	xor.b64  	%rd1321, %rd1320, %rd1302;
	xor.b64  	%rd1322, %rd1260, %rd1245;
	xor.b64  	%rd1323, %rd1322, %rd1275;
	xor.b64  	%rd1324, %rd1323, %rd1290;
	xor.b64  	%rd1325, %rd1324, %rd1305;
	xor.b64  	%rd1326, %rd1263, %rd1248;
	xor.b64  	%rd1327, %rd1326, %rd1278;
	xor.b64  	%rd1328, %rd1327, %rd1293;
	xor.b64  	%rd1329, %rd1328, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd1317;
	}
	shf.l.wrap.b32 	%r775, %r774, %r773, 1;
	shf.l.wrap.b32 	%r776, %r773, %r774, 1;
	mov.b64 	%rd1330, {%r776, %r775};
	xor.b64  	%rd1331, %rd1329, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd1321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1321;
	}
	shf.l.wrap.b32 	%r779, %r778, %r777, 1;
	shf.l.wrap.b32 	%r780, %r777, %r778, 1;
	mov.b64 	%rd1332, {%r780, %r779};
	xor.b64  	%rd1333, %rd1332, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1325;
	}
	shf.l.wrap.b32 	%r783, %r782, %r781, 1;
	shf.l.wrap.b32 	%r784, %r781, %r782, 1;
	mov.b64 	%rd1334, {%r784, %r783};
	xor.b64  	%rd1335, %rd1334, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r785}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd1329;
	}
	shf.l.wrap.b32 	%r787, %r786, %r785, 1;
	shf.l.wrap.b32 	%r788, %r785, %r786, 1;
	mov.b64 	%rd1336, {%r788, %r787};
	xor.b64  	%rd1337, %rd1336, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1313;
	}
	shf.l.wrap.b32 	%r791, %r790, %r789, 1;
	shf.l.wrap.b32 	%r792, %r789, %r790, 1;
	mov.b64 	%rd1338, {%r792, %r791};
	xor.b64  	%rd1339, %rd1325, %rd1338;
	xor.b64  	%rd1340, %rd1331, %rd1309;
	xor.b64  	%rd1341, %rd1333, %rd1239;
	xor.b64  	%rd1342, %rd1335, %rd1242;
	xor.b64  	%rd1343, %rd1337, %rd1245;
	xor.b64  	%rd1344, %rd1339, %rd1248;
	xor.b64  	%rd1345, %rd1331, %rd1251;
	xor.b64  	%rd1346, %rd1333, %rd1254;
	xor.b64  	%rd1347, %rd1335, %rd1257;
	xor.b64  	%rd1348, %rd1337, %rd1260;
	xor.b64  	%rd1349, %rd1339, %rd1263;
	xor.b64  	%rd1350, %rd1331, %rd1266;
	xor.b64  	%rd1351, %rd1333, %rd1269;
	xor.b64  	%rd1352, %rd1335, %rd1272;
	xor.b64  	%rd1353, %rd1337, %rd1275;
	xor.b64  	%rd1354, %rd1339, %rd1278;
	xor.b64  	%rd1355, %rd1331, %rd1281;
	xor.b64  	%rd1356, %rd1333, %rd1284;
	xor.b64  	%rd1357, %rd1335, %rd1287;
	xor.b64  	%rd1358, %rd1337, %rd1290;
	xor.b64  	%rd1359, %rd1339, %rd1293;
	xor.b64  	%rd1360, %rd1331, %rd1296;
	xor.b64  	%rd1361, %rd1333, %rd1299;
	xor.b64  	%rd1362, %rd1335, %rd1302;
	xor.b64  	%rd1363, %rd1337, %rd1305;
	xor.b64  	%rd1364, %rd1339, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd1346;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 20;
	shf.r.wrap.b32 	%r796, %r793, %r794, 20;
	mov.b64 	%rd1365, {%r796, %r795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd1352;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 21;
	shf.r.wrap.b32 	%r800, %r797, %r798, 21;
	mov.b64 	%rd1366, {%r800, %r799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r801}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd1358;
	}
	shf.l.wrap.b32 	%r803, %r802, %r801, 21;
	shf.l.wrap.b32 	%r804, %r801, %r802, 21;
	mov.b64 	%rd1367, {%r804, %r803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1364;
	}
	shf.l.wrap.b32 	%r807, %r806, %r805, 14;
	shf.l.wrap.b32 	%r808, %r805, %r806, 14;
	mov.b64 	%rd1368, {%r808, %r807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r809}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd1343;
	}
	shf.l.wrap.b32 	%r811, %r810, %r809, 28;
	shf.l.wrap.b32 	%r812, %r809, %r810, 28;
	mov.b64 	%rd1369, {%r812, %r811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1349;
	}
	shf.l.wrap.b32 	%r815, %r814, %r813, 20;
	shf.l.wrap.b32 	%r816, %r813, %r814, 20;
	mov.b64 	%rd1370, {%r816, %r815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd1350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r818,%dummy}, %rd1350;
	}
	shf.l.wrap.b32 	%r819, %r818, %r817, 3;
	shf.l.wrap.b32 	%r820, %r817, %r818, 3;
	mov.b64 	%rd1371, {%r820, %r819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd1356;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 19;
	shf.r.wrap.b32 	%r824, %r821, %r822, 19;
	mov.b64 	%rd1372, {%r824, %r823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd1362;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 3;
	shf.r.wrap.b32 	%r828, %r825, %r826, 3;
	mov.b64 	%rd1373, {%r828, %r827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd1341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd1341;
	}
	shf.l.wrap.b32 	%r831, %r830, %r829, 1;
	shf.l.wrap.b32 	%r832, %r829, %r830, 1;
	mov.b64 	%rd1374, {%r832, %r831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r834,%dummy}, %rd1347;
	}
	shf.l.wrap.b32 	%r835, %r834, %r833, 6;
	shf.l.wrap.b32 	%r836, %r833, %r834, 6;
	mov.b64 	%rd1375, {%r836, %r835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r837}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1353;
	}
	shf.l.wrap.b32 	%r839, %r838, %r837, 25;
	shf.l.wrap.b32 	%r840, %r837, %r838, 25;
	mov.b64 	%rd1376, {%r840, %r839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1359;
	}
	shf.l.wrap.b32 	%r843, %r842, %r841, 8;
	shf.l.wrap.b32 	%r844, %r841, %r842, 8;
	mov.b64 	%rd1377, {%r844, %r843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1360;
	}
	shf.l.wrap.b32 	%r847, %r846, %r845, 18;
	shf.l.wrap.b32 	%r848, %r845, %r846, 18;
	mov.b64 	%rd1378, {%r848, %r847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r849}, %rd1344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1344;
	}
	shf.l.wrap.b32 	%r851, %r850, %r849, 27;
	shf.l.wrap.b32 	%r852, %r849, %r850, 27;
	mov.b64 	%rd1379, {%r852, %r851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1345;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd1380, {%r856, %r855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd1351;
	}
	shf.l.wrap.b32 	%r859, %r858, %r857, 10;
	shf.l.wrap.b32 	%r860, %r857, %r858, 10;
	mov.b64 	%rd1381, {%r860, %r859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1357;
	}
	shf.l.wrap.b32 	%r863, %r862, %r861, 15;
	shf.l.wrap.b32 	%r864, %r861, %r862, 15;
	mov.b64 	%rd1382, {%r864, %r863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r866}, %rd1363;
	}
	shf.r.wrap.b32 	%r867, %r866, %r865, 8;
	shf.r.wrap.b32 	%r868, %r865, %r866, 8;
	mov.b64 	%rd1383, {%r868, %r867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1342;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 2;
	shf.r.wrap.b32 	%r872, %r869, %r870, 2;
	mov.b64 	%rd1384, {%r872, %r871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r874}, %rd1348;
	}
	shf.r.wrap.b32 	%r875, %r874, %r873, 9;
	shf.r.wrap.b32 	%r876, %r873, %r874, 9;
	mov.b64 	%rd1385, {%r876, %r875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1354;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 25;
	shf.r.wrap.b32 	%r880, %r877, %r878, 25;
	mov.b64 	%rd1386, {%r880, %r879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r881,%dummy}, %rd1355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r882}, %rd1355;
	}
	shf.r.wrap.b32 	%r883, %r882, %r881, 23;
	shf.r.wrap.b32 	%r884, %r881, %r882, 23;
	mov.b64 	%rd1387, {%r884, %r883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1361;
	}
	shf.l.wrap.b32 	%r887, %r886, %r885, 2;
	shf.l.wrap.b32 	%r888, %r885, %r886, 2;
	mov.b64 	%rd1388, {%r888, %r887};
	not.b64 	%rd1389, %rd1365;
	and.b64  	%rd1390, %rd1366, %rd1389;
	xor.b64  	%rd1391, %rd1390, %rd1340;
	not.b64 	%rd1392, %rd1366;
	and.b64  	%rd1393, %rd1367, %rd1392;
	xor.b64  	%rd1394, %rd1393, %rd1365;
	not.b64 	%rd1395, %rd1367;
	and.b64  	%rd1396, %rd1368, %rd1395;
	xor.b64  	%rd1397, %rd1396, %rd1366;
	not.b64 	%rd1398, %rd1368;
	and.b64  	%rd1399, %rd1340, %rd1398;
	xor.b64  	%rd1400, %rd1399, %rd1367;
	not.b64 	%rd1401, %rd1340;
	and.b64  	%rd1402, %rd1365, %rd1401;
	xor.b64  	%rd1403, %rd1402, %rd1368;
	not.b64 	%rd1404, %rd1370;
	and.b64  	%rd1405, %rd1371, %rd1404;
	xor.b64  	%rd1406, %rd1405, %rd1369;
	not.b64 	%rd1407, %rd1371;
	and.b64  	%rd1408, %rd1372, %rd1407;
	xor.b64  	%rd1409, %rd1408, %rd1370;
	not.b64 	%rd1410, %rd1372;
	and.b64  	%rd1411, %rd1373, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1371;
	not.b64 	%rd1413, %rd1373;
	and.b64  	%rd1414, %rd1369, %rd1413;
	xor.b64  	%rd1415, %rd1414, %rd1372;
	not.b64 	%rd1416, %rd1369;
	and.b64  	%rd1417, %rd1370, %rd1416;
	xor.b64  	%rd1418, %rd1417, %rd1373;
	not.b64 	%rd1419, %rd1375;
	and.b64  	%rd1420, %rd1376, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1374;
	not.b64 	%rd1422, %rd1376;
	and.b64  	%rd1423, %rd1377, %rd1422;
	xor.b64  	%rd1424, %rd1423, %rd1375;
	not.b64 	%rd1425, %rd1377;
	and.b64  	%rd1426, %rd1378, %rd1425;
	xor.b64  	%rd1427, %rd1426, %rd1376;
	not.b64 	%rd1428, %rd1378;
	and.b64  	%rd1429, %rd1374, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1377;
	not.b64 	%rd1431, %rd1374;
	and.b64  	%rd1432, %rd1375, %rd1431;
	xor.b64  	%rd1433, %rd1432, %rd1378;
	not.b64 	%rd1434, %rd1380;
	and.b64  	%rd1435, %rd1381, %rd1434;
	xor.b64  	%rd1436, %rd1435, %rd1379;
	not.b64 	%rd1437, %rd1381;
	and.b64  	%rd1438, %rd1382, %rd1437;
	xor.b64  	%rd1439, %rd1438, %rd1380;
	not.b64 	%rd1440, %rd1382;
	and.b64  	%rd1441, %rd1383, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1381;
	not.b64 	%rd1443, %rd1383;
	and.b64  	%rd1444, %rd1379, %rd1443;
	xor.b64  	%rd1445, %rd1444, %rd1382;
	not.b64 	%rd1446, %rd1379;
	and.b64  	%rd1447, %rd1380, %rd1446;
	xor.b64  	%rd1448, %rd1447, %rd1383;
	not.b64 	%rd1449, %rd1385;
	and.b64  	%rd1450, %rd1386, %rd1449;
	xor.b64  	%rd1451, %rd1450, %rd1384;
	not.b64 	%rd1452, %rd1386;
	and.b64  	%rd1453, %rd1387, %rd1452;
	xor.b64  	%rd1454, %rd1453, %rd1385;
	not.b64 	%rd1455, %rd1387;
	and.b64  	%rd1456, %rd1388, %rd1455;
	xor.b64  	%rd1457, %rd1456, %rd1386;
	not.b64 	%rd1458, %rd1388;
	and.b64  	%rd1459, %rd1384, %rd1458;
	xor.b64  	%rd1460, %rd1459, %rd1387;
	not.b64 	%rd1461, %rd1384;
	and.b64  	%rd1462, %rd1385, %rd1461;
	xor.b64  	%rd1463, %rd1462, %rd1388;
	xor.b64  	%rd1464, %rd1391, %rd22;
	xor.b64  	%rd1465, %rd1406, %rd1464;
	xor.b64  	%rd1466, %rd1465, %rd1421;
	xor.b64  	%rd1467, %rd1466, %rd1436;
	xor.b64  	%rd1468, %rd1467, %rd1451;
	xor.b64  	%rd1469, %rd1409, %rd1394;
	xor.b64  	%rd1470, %rd1469, %rd1424;
	xor.b64  	%rd1471, %rd1470, %rd1439;
	xor.b64  	%rd1472, %rd1471, %rd1454;
	xor.b64  	%rd1473, %rd1412, %rd1397;
	xor.b64  	%rd1474, %rd1473, %rd1427;
	xor.b64  	%rd1475, %rd1474, %rd1442;
	xor.b64  	%rd1476, %rd1475, %rd1457;
	xor.b64  	%rd1477, %rd1415, %rd1400;
	xor.b64  	%rd1478, %rd1477, %rd1430;
	xor.b64  	%rd1479, %rd1478, %rd1445;
	xor.b64  	%rd1480, %rd1479, %rd1460;
	xor.b64  	%rd1481, %rd1418, %rd1403;
	xor.b64  	%rd1482, %rd1481, %rd1433;
	xor.b64  	%rd1483, %rd1482, %rd1448;
	xor.b64  	%rd1484, %rd1483, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd1472;
	}
	shf.l.wrap.b32 	%r891, %r890, %r889, 1;
	shf.l.wrap.b32 	%r892, %r889, %r890, 1;
	mov.b64 	%rd1485, {%r892, %r891};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1476;
	}
	shf.l.wrap.b32 	%r895, %r894, %r893, 1;
	shf.l.wrap.b32 	%r896, %r893, %r894, 1;
	mov.b64 	%rd1487, {%r896, %r895};
	xor.b64  	%rd1488, %rd1487, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd1480;
	}
	shf.l.wrap.b32 	%r899, %r898, %r897, 1;
	shf.l.wrap.b32 	%r900, %r897, %r898, 1;
	mov.b64 	%rd1489, {%r900, %r899};
	xor.b64  	%rd1490, %rd1489, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1484;
	}
	shf.l.wrap.b32 	%r903, %r902, %r901, 1;
	shf.l.wrap.b32 	%r904, %r901, %r902, 1;
	mov.b64 	%rd1491, {%r904, %r903};
	xor.b64  	%rd1492, %rd1491, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd1468;
	}
	shf.l.wrap.b32 	%r907, %r906, %r905, 1;
	shf.l.wrap.b32 	%r908, %r905, %r906, 1;
	mov.b64 	%rd1493, {%r908, %r907};
	xor.b64  	%rd1494, %rd1480, %rd1493;
	xor.b64  	%rd1495, %rd1486, %rd1464;
	xor.b64  	%rd1496, %rd1488, %rd1394;
	xor.b64  	%rd1497, %rd1490, %rd1397;
	xor.b64  	%rd1498, %rd1492, %rd1400;
	xor.b64  	%rd1499, %rd1494, %rd1403;
	xor.b64  	%rd1500, %rd1486, %rd1406;
	xor.b64  	%rd1501, %rd1488, %rd1409;
	xor.b64  	%rd1502, %rd1490, %rd1412;
	xor.b64  	%rd1503, %rd1492, %rd1415;
	xor.b64  	%rd1504, %rd1494, %rd1418;
	xor.b64  	%rd1505, %rd1486, %rd1421;
	xor.b64  	%rd1506, %rd1488, %rd1424;
	xor.b64  	%rd1507, %rd1490, %rd1427;
	xor.b64  	%rd1508, %rd1492, %rd1430;
	xor.b64  	%rd1509, %rd1494, %rd1433;
	xor.b64  	%rd1510, %rd1486, %rd1436;
	xor.b64  	%rd1511, %rd1488, %rd1439;
	xor.b64  	%rd1512, %rd1490, %rd1442;
	xor.b64  	%rd1513, %rd1492, %rd1445;
	xor.b64  	%rd1514, %rd1494, %rd1448;
	xor.b64  	%rd1515, %rd1486, %rd1451;
	xor.b64  	%rd1516, %rd1488, %rd1454;
	xor.b64  	%rd1517, %rd1490, %rd1457;
	xor.b64  	%rd1518, %rd1492, %rd1460;
	xor.b64  	%rd1519, %rd1494, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1501;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 20;
	shf.r.wrap.b32 	%r912, %r909, %r910, 20;
	mov.b64 	%rd1520, {%r912, %r911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1507;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 21;
	shf.r.wrap.b32 	%r916, %r913, %r914, 21;
	mov.b64 	%rd1521, {%r916, %r915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1513;
	}
	shf.l.wrap.b32 	%r919, %r918, %r917, 21;
	shf.l.wrap.b32 	%r920, %r917, %r918, 21;
	mov.b64 	%rd1522, {%r920, %r919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd1519;
	}
	shf.l.wrap.b32 	%r923, %r922, %r921, 14;
	shf.l.wrap.b32 	%r924, %r921, %r922, 14;
	mov.b64 	%rd1523, {%r924, %r923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1498;
	}
	shf.l.wrap.b32 	%r927, %r926, %r925, 28;
	shf.l.wrap.b32 	%r928, %r925, %r926, 28;
	mov.b64 	%rd1524, {%r928, %r927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd1504;
	}
	shf.l.wrap.b32 	%r931, %r930, %r929, 20;
	shf.l.wrap.b32 	%r932, %r929, %r930, 20;
	mov.b64 	%rd1525, {%r932, %r931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1505;
	}
	shf.l.wrap.b32 	%r935, %r934, %r933, 3;
	shf.l.wrap.b32 	%r936, %r933, %r934, 3;
	mov.b64 	%rd1526, {%r936, %r935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd1511;
	}
	shf.r.wrap.b32 	%r939, %r938, %r937, 19;
	shf.r.wrap.b32 	%r940, %r937, %r938, 19;
	mov.b64 	%rd1527, {%r940, %r939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1517;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 3;
	shf.r.wrap.b32 	%r944, %r941, %r942, 3;
	mov.b64 	%rd1528, {%r944, %r943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1496;
	}
	shf.l.wrap.b32 	%r947, %r946, %r945, 1;
	shf.l.wrap.b32 	%r948, %r945, %r946, 1;
	mov.b64 	%rd1529, {%r948, %r947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1502;
	}
	shf.l.wrap.b32 	%r951, %r950, %r949, 6;
	shf.l.wrap.b32 	%r952, %r949, %r950, 6;
	mov.b64 	%rd1530, {%r952, %r951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1508;
	}
	shf.l.wrap.b32 	%r955, %r954, %r953, 25;
	shf.l.wrap.b32 	%r956, %r953, %r954, 25;
	mov.b64 	%rd1531, {%r956, %r955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1514;
	}
	shf.l.wrap.b32 	%r959, %r958, %r957, 8;
	shf.l.wrap.b32 	%r960, %r957, %r958, 8;
	mov.b64 	%rd1532, {%r960, %r959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1515;
	}
	shf.l.wrap.b32 	%r963, %r962, %r961, 18;
	shf.l.wrap.b32 	%r964, %r961, %r962, 18;
	mov.b64 	%rd1533, {%r964, %r963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd1499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd1499;
	}
	shf.l.wrap.b32 	%r967, %r966, %r965, 27;
	shf.l.wrap.b32 	%r968, %r965, %r966, 27;
	mov.b64 	%rd1534, {%r968, %r967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r970}, %rd1500;
	}
	shf.r.wrap.b32 	%r971, %r970, %r969, 28;
	shf.r.wrap.b32 	%r972, %r969, %r970, 28;
	mov.b64 	%rd1535, {%r972, %r971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1506;
	}
	shf.l.wrap.b32 	%r975, %r974, %r973, 10;
	shf.l.wrap.b32 	%r976, %r973, %r974, 10;
	mov.b64 	%rd1536, {%r976, %r975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd1512;
	}
	shf.l.wrap.b32 	%r979, %r978, %r977, 15;
	shf.l.wrap.b32 	%r980, %r977, %r978, 15;
	mov.b64 	%rd1537, {%r980, %r979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1518;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 8;
	shf.r.wrap.b32 	%r984, %r981, %r982, 8;
	mov.b64 	%rd1538, {%r984, %r983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r985,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd1497;
	}
	shf.r.wrap.b32 	%r987, %r986, %r985, 2;
	shf.r.wrap.b32 	%r988, %r985, %r986, 2;
	mov.b64 	%rd1539, {%r988, %r987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1503;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 9;
	shf.r.wrap.b32 	%r992, %r989, %r990, 9;
	mov.b64 	%rd1540, {%r992, %r991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd1509;
	}
	shf.r.wrap.b32 	%r995, %r994, %r993, 25;
	shf.r.wrap.b32 	%r996, %r993, %r994, 25;
	mov.b64 	%rd1541, {%r996, %r995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1510;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 23;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 23;
	mov.b64 	%rd1542, {%r1000, %r999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd1516;
	}
	shf.l.wrap.b32 	%r1003, %r1002, %r1001, 2;
	shf.l.wrap.b32 	%r1004, %r1001, %r1002, 2;
	mov.b64 	%rd1543, {%r1004, %r1003};
	not.b64 	%rd1544, %rd1520;
	and.b64  	%rd1545, %rd1521, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1495;
	not.b64 	%rd1547, %rd1521;
	and.b64  	%rd1548, %rd1522, %rd1547;
	xor.b64  	%rd1549, %rd1548, %rd1520;
	not.b64 	%rd1550, %rd1522;
	and.b64  	%rd1551, %rd1523, %rd1550;
	xor.b64  	%rd1552, %rd1551, %rd1521;
	not.b64 	%rd1553, %rd1523;
	and.b64  	%rd1554, %rd1495, %rd1553;
	xor.b64  	%rd1555, %rd1554, %rd1522;
	not.b64 	%rd1556, %rd1495;
	and.b64  	%rd1557, %rd1520, %rd1556;
	xor.b64  	%rd1558, %rd1557, %rd1523;
	not.b64 	%rd1559, %rd1525;
	and.b64  	%rd1560, %rd1526, %rd1559;
	xor.b64  	%rd1561, %rd1560, %rd1524;
	not.b64 	%rd1562, %rd1526;
	and.b64  	%rd1563, %rd1527, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1525;
	not.b64 	%rd1565, %rd1527;
	and.b64  	%rd1566, %rd1528, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1526;
	not.b64 	%rd1568, %rd1528;
	and.b64  	%rd1569, %rd1524, %rd1568;
	xor.b64  	%rd1570, %rd1569, %rd1527;
	not.b64 	%rd1571, %rd1524;
	and.b64  	%rd1572, %rd1525, %rd1571;
	xor.b64  	%rd1573, %rd1572, %rd1528;
	not.b64 	%rd1574, %rd1530;
	and.b64  	%rd1575, %rd1531, %rd1574;
	xor.b64  	%rd1576, %rd1575, %rd1529;
	not.b64 	%rd1577, %rd1531;
	and.b64  	%rd1578, %rd1532, %rd1577;
	xor.b64  	%rd1579, %rd1578, %rd1530;
	not.b64 	%rd1580, %rd1532;
	and.b64  	%rd1581, %rd1533, %rd1580;
	xor.b64  	%rd1582, %rd1581, %rd1531;
	not.b64 	%rd1583, %rd1533;
	and.b64  	%rd1584, %rd1529, %rd1583;
	xor.b64  	%rd1585, %rd1584, %rd1532;
	not.b64 	%rd1586, %rd1529;
	and.b64  	%rd1587, %rd1530, %rd1586;
	xor.b64  	%rd1588, %rd1587, %rd1533;
	not.b64 	%rd1589, %rd1535;
	and.b64  	%rd1590, %rd1536, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1534;
	not.b64 	%rd1592, %rd1536;
	and.b64  	%rd1593, %rd1537, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1535;
	not.b64 	%rd1595, %rd1537;
	and.b64  	%rd1596, %rd1538, %rd1595;
	xor.b64  	%rd1597, %rd1596, %rd1536;
	not.b64 	%rd1598, %rd1538;
	and.b64  	%rd1599, %rd1534, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1537;
	not.b64 	%rd1601, %rd1534;
	and.b64  	%rd1602, %rd1535, %rd1601;
	xor.b64  	%rd1603, %rd1602, %rd1538;
	not.b64 	%rd1604, %rd1540;
	and.b64  	%rd1605, %rd1541, %rd1604;
	xor.b64  	%rd1606, %rd1605, %rd1539;
	not.b64 	%rd1607, %rd1541;
	and.b64  	%rd1608, %rd1542, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1540;
	not.b64 	%rd1610, %rd1542;
	and.b64  	%rd1611, %rd1543, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1541;
	not.b64 	%rd1613, %rd1543;
	and.b64  	%rd1614, %rd1539, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1542;
	not.b64 	%rd1616, %rd1539;
	and.b64  	%rd1617, %rd1540, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1543;
	xor.b64  	%rd1619, %rd1546, %rd23;
	xor.b64  	%rd1620, %rd1561, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1576;
	xor.b64  	%rd1622, %rd1621, %rd1591;
	xor.b64  	%rd1623, %rd1622, %rd1606;
	xor.b64  	%rd1624, %rd1564, %rd1549;
	xor.b64  	%rd1625, %rd1624, %rd1579;
	xor.b64  	%rd1626, %rd1625, %rd1594;
	xor.b64  	%rd1627, %rd1626, %rd1609;
	xor.b64  	%rd1628, %rd1567, %rd1552;
	xor.b64  	%rd1629, %rd1628, %rd1582;
	xor.b64  	%rd1630, %rd1629, %rd1597;
	xor.b64  	%rd1631, %rd1630, %rd1612;
	xor.b64  	%rd1632, %rd1570, %rd1555;
	xor.b64  	%rd1633, %rd1632, %rd1585;
	xor.b64  	%rd1634, %rd1633, %rd1600;
	xor.b64  	%rd1635, %rd1634, %rd1615;
	xor.b64  	%rd1636, %rd1573, %rd1558;
	xor.b64  	%rd1637, %rd1636, %rd1588;
	xor.b64  	%rd1638, %rd1637, %rd1603;
	xor.b64  	%rd1639, %rd1638, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1627;
	}
	shf.l.wrap.b32 	%r1007, %r1006, %r1005, 1;
	shf.l.wrap.b32 	%r1008, %r1005, %r1006, 1;
	mov.b64 	%rd1640, {%r1008, %r1007};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd1631;
	}
	shf.l.wrap.b32 	%r1011, %r1010, %r1009, 1;
	shf.l.wrap.b32 	%r1012, %r1009, %r1010, 1;
	mov.b64 	%rd1642, {%r1012, %r1011};
	xor.b64  	%rd1643, %rd1642, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1635;
	}
	shf.l.wrap.b32 	%r1015, %r1014, %r1013, 1;
	shf.l.wrap.b32 	%r1016, %r1013, %r1014, 1;
	mov.b64 	%rd1644, {%r1016, %r1015};
	xor.b64  	%rd1645, %rd1644, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd1639;
	}
	shf.l.wrap.b32 	%r1019, %r1018, %r1017, 1;
	shf.l.wrap.b32 	%r1020, %r1017, %r1018, 1;
	mov.b64 	%rd1646, {%r1020, %r1019};
	xor.b64  	%rd1647, %rd1646, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd1623;
	}
	shf.l.wrap.b32 	%r1023, %r1022, %r1021, 1;
	shf.l.wrap.b32 	%r1024, %r1021, %r1022, 1;
	mov.b64 	%rd1648, {%r1024, %r1023};
	xor.b64  	%rd1649, %rd1635, %rd1648;
	xor.b64  	%rd1650, %rd1641, %rd1619;
	xor.b64  	%rd1651, %rd1643, %rd1549;
	xor.b64  	%rd1652, %rd1645, %rd1552;
	xor.b64  	%rd1653, %rd1647, %rd1555;
	xor.b64  	%rd1654, %rd1649, %rd1558;
	xor.b64  	%rd1655, %rd1641, %rd1561;
	xor.b64  	%rd1656, %rd1643, %rd1564;
	xor.b64  	%rd1657, %rd1645, %rd1567;
	xor.b64  	%rd1658, %rd1647, %rd1570;
	xor.b64  	%rd1659, %rd1649, %rd1573;
	xor.b64  	%rd1660, %rd1641, %rd1576;
	xor.b64  	%rd1661, %rd1643, %rd1579;
	xor.b64  	%rd1662, %rd1645, %rd1582;
	xor.b64  	%rd1663, %rd1647, %rd1585;
	xor.b64  	%rd1664, %rd1649, %rd1588;
	xor.b64  	%rd1665, %rd1641, %rd1591;
	xor.b64  	%rd1666, %rd1643, %rd1594;
	xor.b64  	%rd1667, %rd1645, %rd1597;
	xor.b64  	%rd1668, %rd1647, %rd1600;
	xor.b64  	%rd1669, %rd1649, %rd1603;
	xor.b64  	%rd1670, %rd1641, %rd1606;
	xor.b64  	%rd1671, %rd1643, %rd1609;
	xor.b64  	%rd1672, %rd1645, %rd1612;
	xor.b64  	%rd1673, %rd1647, %rd1615;
	xor.b64  	%rd1674, %rd1649, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1656;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 20;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 20;
	mov.b64 	%rd1675, {%r1028, %r1027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1662;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 21;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 21;
	mov.b64 	%rd1676, {%r1032, %r1031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd1668;
	}
	shf.l.wrap.b32 	%r1035, %r1034, %r1033, 21;
	shf.l.wrap.b32 	%r1036, %r1033, %r1034, 21;
	mov.b64 	%rd1677, {%r1036, %r1035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1674;
	}
	shf.l.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.l.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1678, {%r1040, %r1039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1042,%dummy}, %rd1653;
	}
	shf.l.wrap.b32 	%r1043, %r1042, %r1041, 28;
	shf.l.wrap.b32 	%r1044, %r1041, %r1042, 28;
	mov.b64 	%rd1679, {%r1044, %r1043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1659;
	}
	shf.l.wrap.b32 	%r1047, %r1046, %r1045, 20;
	shf.l.wrap.b32 	%r1048, %r1045, %r1046, 20;
	mov.b64 	%rd1680, {%r1048, %r1047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd1660;
	}
	shf.l.wrap.b32 	%r1051, %r1050, %r1049, 3;
	shf.l.wrap.b32 	%r1052, %r1049, %r1050, 3;
	mov.b64 	%rd1681, {%r1052, %r1051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1666;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 19;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 19;
	mov.b64 	%rd1682, {%r1056, %r1055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd1672;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 3;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 3;
	mov.b64 	%rd1683, {%r1060, %r1059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1651;
	}
	shf.l.wrap.b32 	%r1063, %r1062, %r1061, 1;
	shf.l.wrap.b32 	%r1064, %r1061, %r1062, 1;
	mov.b64 	%rd1684, {%r1064, %r1063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1657;
	}
	shf.l.wrap.b32 	%r1067, %r1066, %r1065, 6;
	shf.l.wrap.b32 	%r1068, %r1065, %r1066, 6;
	mov.b64 	%rd1685, {%r1068, %r1067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1663;
	}
	shf.l.wrap.b32 	%r1071, %r1070, %r1069, 25;
	shf.l.wrap.b32 	%r1072, %r1069, %r1070, 25;
	mov.b64 	%rd1686, {%r1072, %r1071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd1669;
	}
	shf.l.wrap.b32 	%r1075, %r1074, %r1073, 8;
	shf.l.wrap.b32 	%r1076, %r1073, %r1074, 8;
	mov.b64 	%rd1687, {%r1076, %r1075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd1670;
	}
	shf.l.wrap.b32 	%r1079, %r1078, %r1077, 18;
	shf.l.wrap.b32 	%r1080, %r1077, %r1078, 18;
	mov.b64 	%rd1688, {%r1080, %r1079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd1654;
	}
	shf.l.wrap.b32 	%r1083, %r1082, %r1081, 27;
	shf.l.wrap.b32 	%r1084, %r1081, %r1082, 27;
	mov.b64 	%rd1689, {%r1084, %r1083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1655;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 28;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 28;
	mov.b64 	%rd1690, {%r1088, %r1087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1661;
	}
	shf.l.wrap.b32 	%r1091, %r1090, %r1089, 10;
	shf.l.wrap.b32 	%r1092, %r1089, %r1090, 10;
	mov.b64 	%rd1691, {%r1092, %r1091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1094,%dummy}, %rd1667;
	}
	shf.l.wrap.b32 	%r1095, %r1094, %r1093, 15;
	shf.l.wrap.b32 	%r1096, %r1093, %r1094, 15;
	mov.b64 	%rd1692, {%r1096, %r1095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd1673;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 8;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 8;
	mov.b64 	%rd1693, {%r1100, %r1099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1652;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 2;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 2;
	mov.b64 	%rd1694, {%r1104, %r1103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1658;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 9;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 9;
	mov.b64 	%rd1695, {%r1108, %r1107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1664;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 25;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 25;
	mov.b64 	%rd1696, {%r1112, %r1111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1665;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 23;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 23;
	mov.b64 	%rd1697, {%r1116, %r1115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1671;
	}
	shf.l.wrap.b32 	%r1119, %r1118, %r1117, 2;
	shf.l.wrap.b32 	%r1120, %r1117, %r1118, 2;
	mov.b64 	%rd1698, {%r1120, %r1119};
	not.b64 	%rd1699, %rd1675;
	and.b64  	%rd1700, %rd1676, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1650;
	not.b64 	%rd1702, %rd1676;
	and.b64  	%rd1703, %rd1677, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1675;
	not.b64 	%rd1705, %rd1677;
	and.b64  	%rd1706, %rd1678, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1676;
	not.b64 	%rd1708, %rd1678;
	and.b64  	%rd1709, %rd1650, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1677;
	not.b64 	%rd1711, %rd1650;
	and.b64  	%rd1712, %rd1675, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1678;
	not.b64 	%rd1714, %rd1680;
	and.b64  	%rd1715, %rd1681, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1679;
	not.b64 	%rd1717, %rd1681;
	and.b64  	%rd1718, %rd1682, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1680;
	not.b64 	%rd1720, %rd1682;
	and.b64  	%rd1721, %rd1683, %rd1720;
	xor.b64  	%rd1722, %rd1721, %rd1681;
	not.b64 	%rd1723, %rd1683;
	and.b64  	%rd1724, %rd1679, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1682;
	not.b64 	%rd1726, %rd1679;
	and.b64  	%rd1727, %rd1680, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1683;
	not.b64 	%rd1729, %rd1685;
	and.b64  	%rd1730, %rd1686, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1684;
	not.b64 	%rd1732, %rd1686;
	and.b64  	%rd1733, %rd1687, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1685;
	not.b64 	%rd1735, %rd1687;
	and.b64  	%rd1736, %rd1688, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1686;
	not.b64 	%rd1738, %rd1688;
	and.b64  	%rd1739, %rd1684, %rd1738;
	xor.b64  	%rd1740, %rd1739, %rd1687;
	not.b64 	%rd1741, %rd1684;
	and.b64  	%rd1742, %rd1685, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1688;
	not.b64 	%rd1744, %rd1690;
	and.b64  	%rd1745, %rd1691, %rd1744;
	xor.b64  	%rd1746, %rd1745, %rd1689;
	not.b64 	%rd1747, %rd1691;
	and.b64  	%rd1748, %rd1692, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1690;
	not.b64 	%rd1750, %rd1692;
	and.b64  	%rd1751, %rd1693, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1691;
	not.b64 	%rd1753, %rd1693;
	and.b64  	%rd1754, %rd1689, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1692;
	not.b64 	%rd1756, %rd1689;
	and.b64  	%rd1757, %rd1690, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd1693;
	not.b64 	%rd1759, %rd1695;
	and.b64  	%rd1760, %rd1696, %rd1759;
	xor.b64  	%rd1761, %rd1760, %rd1694;
	not.b64 	%rd1762, %rd1696;
	and.b64  	%rd1763, %rd1697, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1695;
	not.b64 	%rd1765, %rd1697;
	and.b64  	%rd1766, %rd1698, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1696;
	not.b64 	%rd1768, %rd1698;
	and.b64  	%rd1769, %rd1694, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1697;
	not.b64 	%rd1771, %rd1694;
	and.b64  	%rd1772, %rd1695, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1698;
	xor.b64  	%rd1774, %rd1701, %rd24;
	xor.b64  	%rd1775, %rd1716, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1731;
	xor.b64  	%rd1777, %rd1776, %rd1746;
	xor.b64  	%rd1778, %rd1777, %rd1761;
	xor.b64  	%rd1779, %rd1719, %rd1704;
	xor.b64  	%rd1780, %rd1779, %rd1734;
	xor.b64  	%rd1781, %rd1780, %rd1749;
	xor.b64  	%rd1782, %rd1781, %rd1764;
	xor.b64  	%rd1783, %rd1722, %rd1707;
	xor.b64  	%rd1784, %rd1783, %rd1737;
	xor.b64  	%rd1785, %rd1784, %rd1752;
	xor.b64  	%rd1786, %rd1785, %rd1767;
	xor.b64  	%rd1787, %rd1725, %rd1710;
	xor.b64  	%rd1788, %rd1787, %rd1740;
	xor.b64  	%rd1789, %rd1788, %rd1755;
	xor.b64  	%rd1790, %rd1789, %rd1770;
	xor.b64  	%rd1791, %rd1728, %rd1713;
	xor.b64  	%rd1792, %rd1791, %rd1743;
	xor.b64  	%rd1793, %rd1792, %rd1758;
	xor.b64  	%rd1794, %rd1793, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd1782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd1782;
	}
	shf.l.wrap.b32 	%r1123, %r1122, %r1121, 1;
	shf.l.wrap.b32 	%r1124, %r1121, %r1122, 1;
	mov.b64 	%rd1795, {%r1124, %r1123};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1125}, %rd1786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd1786;
	}
	shf.l.wrap.b32 	%r1127, %r1126, %r1125, 1;
	shf.l.wrap.b32 	%r1128, %r1125, %r1126, 1;
	mov.b64 	%rd1797, {%r1128, %r1127};
	xor.b64  	%rd1798, %rd1797, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1790;
	}
	shf.l.wrap.b32 	%r1131, %r1130, %r1129, 1;
	shf.l.wrap.b32 	%r1132, %r1129, %r1130, 1;
	mov.b64 	%rd1799, {%r1132, %r1131};
	xor.b64  	%rd1800, %rd1799, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1133}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd1794;
	}
	shf.l.wrap.b32 	%r1135, %r1134, %r1133, 1;
	shf.l.wrap.b32 	%r1136, %r1133, %r1134, 1;
	mov.b64 	%rd1801, {%r1136, %r1135};
	xor.b64  	%rd1802, %rd1801, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1778;
	}
	shf.l.wrap.b32 	%r1139, %r1138, %r1137, 1;
	shf.l.wrap.b32 	%r1140, %r1137, %r1138, 1;
	mov.b64 	%rd1803, {%r1140, %r1139};
	xor.b64  	%rd1804, %rd1790, %rd1803;
	xor.b64  	%rd1805, %rd1796, %rd1774;
	xor.b64  	%rd1806, %rd1798, %rd1704;
	xor.b64  	%rd1807, %rd1800, %rd1707;
	xor.b64  	%rd1808, %rd1802, %rd1710;
	xor.b64  	%rd1809, %rd1804, %rd1713;
	xor.b64  	%rd1810, %rd1796, %rd1716;
	xor.b64  	%rd1811, %rd1798, %rd1719;
	xor.b64  	%rd1812, %rd1800, %rd1722;
	xor.b64  	%rd1813, %rd1802, %rd1725;
	xor.b64  	%rd1814, %rd1804, %rd1728;
	xor.b64  	%rd1815, %rd1796, %rd1731;
	xor.b64  	%rd1816, %rd1798, %rd1734;
	xor.b64  	%rd1817, %rd1800, %rd1737;
	xor.b64  	%rd1818, %rd1802, %rd1740;
	xor.b64  	%rd1819, %rd1804, %rd1743;
	xor.b64  	%rd1820, %rd1796, %rd1746;
	xor.b64  	%rd1821, %rd1798, %rd1749;
	xor.b64  	%rd1822, %rd1800, %rd1752;
	xor.b64  	%rd1823, %rd1802, %rd1755;
	xor.b64  	%rd1824, %rd1804, %rd1758;
	xor.b64  	%rd1825, %rd1796, %rd1761;
	xor.b64  	%rd1826, %rd1798, %rd1764;
	xor.b64  	%rd1827, %rd1800, %rd1767;
	xor.b64  	%rd1828, %rd1802, %rd1770;
	xor.b64  	%rd1829, %rd1804, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd1811;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 20;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 20;
	mov.b64 	%rd1830, {%r1144, %r1143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd1817;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 21;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 21;
	mov.b64 	%rd1831, {%r1148, %r1147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd1823;
	}
	shf.l.wrap.b32 	%r1151, %r1150, %r1149, 21;
	shf.l.wrap.b32 	%r1152, %r1149, %r1150, 21;
	mov.b64 	%rd1832, {%r1152, %r1151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd1829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd1829;
	}
	shf.l.wrap.b32 	%r1155, %r1154, %r1153, 14;
	shf.l.wrap.b32 	%r1156, %r1153, %r1154, 14;
	mov.b64 	%rd1833, {%r1156, %r1155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1808;
	}
	shf.l.wrap.b32 	%r1159, %r1158, %r1157, 28;
	shf.l.wrap.b32 	%r1160, %r1157, %r1158, 28;
	mov.b64 	%rd1834, {%r1160, %r1159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd1814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1814;
	}
	shf.l.wrap.b32 	%r1163, %r1162, %r1161, 20;
	shf.l.wrap.b32 	%r1164, %r1161, %r1162, 20;
	mov.b64 	%rd1835, {%r1164, %r1163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd1815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd1815;
	}
	shf.l.wrap.b32 	%r1167, %r1166, %r1165, 3;
	shf.l.wrap.b32 	%r1168, %r1165, %r1166, 3;
	mov.b64 	%rd1836, {%r1168, %r1167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd1821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd1821;
	}
	shf.r.wrap.b32 	%r1171, %r1170, %r1169, 19;
	shf.r.wrap.b32 	%r1172, %r1169, %r1170, 19;
	mov.b64 	%rd1837, {%r1172, %r1171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1827;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 3;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 3;
	mov.b64 	%rd1838, {%r1176, %r1175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1806;
	}
	shf.l.wrap.b32 	%r1179, %r1178, %r1177, 1;
	shf.l.wrap.b32 	%r1180, %r1177, %r1178, 1;
	mov.b64 	%rd1839, {%r1180, %r1179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd1812;
	}
	shf.l.wrap.b32 	%r1183, %r1182, %r1181, 6;
	shf.l.wrap.b32 	%r1184, %r1181, %r1182, 6;
	mov.b64 	%rd1840, {%r1184, %r1183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd1818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd1818;
	}
	shf.l.wrap.b32 	%r1187, %r1186, %r1185, 25;
	shf.l.wrap.b32 	%r1188, %r1185, %r1186, 25;
	mov.b64 	%rd1841, {%r1188, %r1187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd1824;
	}
	shf.l.wrap.b32 	%r1191, %r1190, %r1189, 8;
	shf.l.wrap.b32 	%r1192, %r1189, %r1190, 8;
	mov.b64 	%rd1842, {%r1192, %r1191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd1825;
	}
	shf.l.wrap.b32 	%r1195, %r1194, %r1193, 18;
	shf.l.wrap.b32 	%r1196, %r1193, %r1194, 18;
	mov.b64 	%rd1843, {%r1196, %r1195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd1809;
	}
	shf.l.wrap.b32 	%r1199, %r1198, %r1197, 27;
	shf.l.wrap.b32 	%r1200, %r1197, %r1198, 27;
	mov.b64 	%rd1844, {%r1200, %r1199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1202}, %rd1810;
	}
	shf.r.wrap.b32 	%r1203, %r1202, %r1201, 28;
	shf.r.wrap.b32 	%r1204, %r1201, %r1202, 28;
	mov.b64 	%rd1845, {%r1204, %r1203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1816;
	}
	shf.l.wrap.b32 	%r1207, %r1206, %r1205, 10;
	shf.l.wrap.b32 	%r1208, %r1205, %r1206, 10;
	mov.b64 	%rd1846, {%r1208, %r1207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd1822;
	}
	shf.l.wrap.b32 	%r1211, %r1210, %r1209, 15;
	shf.l.wrap.b32 	%r1212, %r1209, %r1210, 15;
	mov.b64 	%rd1847, {%r1212, %r1211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1828;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 8;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 8;
	mov.b64 	%rd1848, {%r1216, %r1215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd1807;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 2;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 2;
	mov.b64 	%rd1849, {%r1220, %r1219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1813;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 9;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 9;
	mov.b64 	%rd1850, {%r1224, %r1223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1819;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 25;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 25;
	mov.b64 	%rd1851, {%r1228, %r1227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1820;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 23;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 23;
	mov.b64 	%rd1852, {%r1232, %r1231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd1826;
	}
	shf.l.wrap.b32 	%r1235, %r1234, %r1233, 2;
	shf.l.wrap.b32 	%r1236, %r1233, %r1234, 2;
	mov.b64 	%rd1853, {%r1236, %r1235};
	not.b64 	%rd1854, %rd1830;
	and.b64  	%rd1855, %rd1831, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1805;
	not.b64 	%rd1857, %rd1831;
	and.b64  	%rd1858, %rd1832, %rd1857;
	xor.b64  	%rd1859, %rd1858, %rd1830;
	not.b64 	%rd1860, %rd1832;
	and.b64  	%rd1861, %rd1833, %rd1860;
	xor.b64  	%rd1862, %rd1861, %rd1831;
	not.b64 	%rd1863, %rd1833;
	and.b64  	%rd1864, %rd1805, %rd1863;
	xor.b64  	%rd1865, %rd1864, %rd1832;
	not.b64 	%rd1866, %rd1805;
	and.b64  	%rd1867, %rd1830, %rd1866;
	xor.b64  	%rd1868, %rd1867, %rd1833;
	not.b64 	%rd1869, %rd1835;
	and.b64  	%rd1870, %rd1836, %rd1869;
	xor.b64  	%rd1871, %rd1870, %rd1834;
	not.b64 	%rd1872, %rd1836;
	and.b64  	%rd1873, %rd1837, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1835;
	not.b64 	%rd1875, %rd1837;
	and.b64  	%rd1876, %rd1838, %rd1875;
	xor.b64  	%rd1877, %rd1876, %rd1836;
	not.b64 	%rd1878, %rd1838;
	and.b64  	%rd1879, %rd1834, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1837;
	not.b64 	%rd1881, %rd1834;
	and.b64  	%rd1882, %rd1835, %rd1881;
	xor.b64  	%rd1883, %rd1882, %rd1838;
	not.b64 	%rd1884, %rd1840;
	and.b64  	%rd1885, %rd1841, %rd1884;
	xor.b64  	%rd1886, %rd1885, %rd1839;
	not.b64 	%rd1887, %rd1841;
	and.b64  	%rd1888, %rd1842, %rd1887;
	xor.b64  	%rd1889, %rd1888, %rd1840;
	not.b64 	%rd1890, %rd1842;
	and.b64  	%rd1891, %rd1843, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1841;
	not.b64 	%rd1893, %rd1843;
	and.b64  	%rd1894, %rd1839, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1842;
	not.b64 	%rd1896, %rd1839;
	and.b64  	%rd1897, %rd1840, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1843;
	not.b64 	%rd1899, %rd1845;
	and.b64  	%rd1900, %rd1846, %rd1899;
	xor.b64  	%rd1901, %rd1900, %rd1844;
	not.b64 	%rd1902, %rd1846;
	and.b64  	%rd1903, %rd1847, %rd1902;
	xor.b64  	%rd1904, %rd1903, %rd1845;
	not.b64 	%rd1905, %rd1847;
	and.b64  	%rd1906, %rd1848, %rd1905;
	xor.b64  	%rd1907, %rd1906, %rd1846;
	not.b64 	%rd1908, %rd1848;
	and.b64  	%rd1909, %rd1844, %rd1908;
	xor.b64  	%rd1910, %rd1909, %rd1847;
	not.b64 	%rd1911, %rd1844;
	and.b64  	%rd1912, %rd1845, %rd1911;
	xor.b64  	%rd1913, %rd1912, %rd1848;
	not.b64 	%rd1914, %rd1850;
	and.b64  	%rd1915, %rd1851, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1849;
	not.b64 	%rd1917, %rd1851;
	and.b64  	%rd1918, %rd1852, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1850;
	not.b64 	%rd1920, %rd1852;
	and.b64  	%rd1921, %rd1853, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1851;
	not.b64 	%rd1923, %rd1853;
	and.b64  	%rd1924, %rd1849, %rd1923;
	xor.b64  	%rd1925, %rd1924, %rd1852;
	not.b64 	%rd1926, %rd1849;
	and.b64  	%rd1927, %rd1850, %rd1926;
	xor.b64  	%rd1928, %rd1927, %rd1853;
	xor.b64  	%rd1929, %rd1856, %rd25;
	xor.b64  	%rd1930, %rd1871, %rd1929;
	xor.b64  	%rd1931, %rd1930, %rd1886;
	xor.b64  	%rd1932, %rd1931, %rd1901;
	xor.b64  	%rd1933, %rd1932, %rd1916;
	xor.b64  	%rd1934, %rd1874, %rd1859;
	xor.b64  	%rd1935, %rd1934, %rd1889;
	xor.b64  	%rd1936, %rd1935, %rd1904;
	xor.b64  	%rd1937, %rd1936, %rd1919;
	xor.b64  	%rd1938, %rd1877, %rd1862;
	xor.b64  	%rd1939, %rd1938, %rd1892;
	xor.b64  	%rd1940, %rd1939, %rd1907;
	xor.b64  	%rd1941, %rd1940, %rd1922;
	xor.b64  	%rd1942, %rd1880, %rd1865;
	xor.b64  	%rd1943, %rd1942, %rd1895;
	xor.b64  	%rd1944, %rd1943, %rd1910;
	xor.b64  	%rd1945, %rd1944, %rd1925;
	xor.b64  	%rd1946, %rd1883, %rd1868;
	xor.b64  	%rd1947, %rd1946, %rd1898;
	xor.b64  	%rd1948, %rd1947, %rd1913;
	xor.b64  	%rd1949, %rd1948, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd1937;
	}
	shf.l.wrap.b32 	%r1239, %r1238, %r1237, 1;
	shf.l.wrap.b32 	%r1240, %r1237, %r1238, 1;
	mov.b64 	%rd1950, {%r1240, %r1239};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd1941;
	}
	shf.l.wrap.b32 	%r1243, %r1242, %r1241, 1;
	shf.l.wrap.b32 	%r1244, %r1241, %r1242, 1;
	mov.b64 	%rd1952, {%r1244, %r1243};
	xor.b64  	%rd1953, %rd1952, %rd1933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1245}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1945;
	}
	shf.l.wrap.b32 	%r1247, %r1246, %r1245, 1;
	shf.l.wrap.b32 	%r1248, %r1245, %r1246, 1;
	mov.b64 	%rd1954, {%r1248, %r1247};
	xor.b64  	%rd1955, %rd1954, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd1949;
	}
	shf.l.wrap.b32 	%r1251, %r1250, %r1249, 1;
	shf.l.wrap.b32 	%r1252, %r1249, %r1250, 1;
	mov.b64 	%rd1956, {%r1252, %r1251};
	xor.b64  	%rd1957, %rd1956, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd1933;
	}
	shf.l.wrap.b32 	%r1255, %r1254, %r1253, 1;
	shf.l.wrap.b32 	%r1256, %r1253, %r1254, 1;
	mov.b64 	%rd1958, {%r1256, %r1255};
	xor.b64  	%rd1959, %rd1945, %rd1958;
	xor.b64  	%rd1960, %rd1951, %rd1929;
	xor.b64  	%rd1961, %rd1953, %rd1859;
	xor.b64  	%rd1962, %rd1955, %rd1862;
	xor.b64  	%rd1963, %rd1957, %rd1865;
	xor.b64  	%rd1964, %rd1959, %rd1868;
	xor.b64  	%rd1965, %rd1951, %rd1871;
	xor.b64  	%rd1966, %rd1953, %rd1874;
	xor.b64  	%rd1967, %rd1955, %rd1877;
	xor.b64  	%rd1968, %rd1957, %rd1880;
	xor.b64  	%rd1969, %rd1959, %rd1883;
	xor.b64  	%rd1970, %rd1951, %rd1886;
	xor.b64  	%rd1971, %rd1953, %rd1889;
	xor.b64  	%rd1972, %rd1955, %rd1892;
	xor.b64  	%rd1973, %rd1957, %rd1895;
	xor.b64  	%rd1974, %rd1959, %rd1898;
	xor.b64  	%rd1975, %rd1951, %rd1901;
	xor.b64  	%rd1976, %rd1953, %rd1904;
	xor.b64  	%rd1977, %rd1955, %rd1907;
	xor.b64  	%rd1978, %rd1957, %rd1910;
	xor.b64  	%rd1979, %rd1959, %rd1913;
	xor.b64  	%rd1980, %rd1951, %rd1916;
	xor.b64  	%rd1981, %rd1953, %rd1919;
	xor.b64  	%rd1982, %rd1955, %rd1922;
	xor.b64  	%rd1983, %rd1957, %rd1925;
	xor.b64  	%rd1984, %rd1959, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd1966;
	}
	shf.r.wrap.b32 	%r1259, %r1258, %r1257, 20;
	shf.r.wrap.b32 	%r1260, %r1257, %r1258, 20;
	mov.b64 	%rd1985, {%r1260, %r1259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1972;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 21;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 21;
	mov.b64 	%rd1986, {%r1264, %r1263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1265}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1978;
	}
	shf.l.wrap.b32 	%r1267, %r1266, %r1265, 21;
	shf.l.wrap.b32 	%r1268, %r1265, %r1266, 21;
	mov.b64 	%rd1987, {%r1268, %r1267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd1984;
	}
	shf.l.wrap.b32 	%r1271, %r1270, %r1269, 14;
	shf.l.wrap.b32 	%r1272, %r1269, %r1270, 14;
	mov.b64 	%rd1988, {%r1272, %r1271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd1963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1963;
	}
	shf.l.wrap.b32 	%r1275, %r1274, %r1273, 28;
	shf.l.wrap.b32 	%r1276, %r1273, %r1274, 28;
	mov.b64 	%rd1989, {%r1276, %r1275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1969;
	}
	shf.l.wrap.b32 	%r1279, %r1278, %r1277, 20;
	shf.l.wrap.b32 	%r1280, %r1277, %r1278, 20;
	mov.b64 	%rd1990, {%r1280, %r1279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1281}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd1970;
	}
	shf.l.wrap.b32 	%r1283, %r1282, %r1281, 3;
	shf.l.wrap.b32 	%r1284, %r1281, %r1282, 3;
	mov.b64 	%rd1991, {%r1284, %r1283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1976;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 19;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 19;
	mov.b64 	%rd1992, {%r1288, %r1287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd1982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1290}, %rd1982;
	}
	shf.r.wrap.b32 	%r1291, %r1290, %r1289, 3;
	shf.r.wrap.b32 	%r1292, %r1289, %r1290, 3;
	mov.b64 	%rd1993, {%r1292, %r1291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd1961;
	}
	shf.l.wrap.b32 	%r1295, %r1294, %r1293, 1;
	shf.l.wrap.b32 	%r1296, %r1293, %r1294, 1;
	mov.b64 	%rd1994, {%r1296, %r1295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1297}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd1967;
	}
	shf.l.wrap.b32 	%r1299, %r1298, %r1297, 6;
	shf.l.wrap.b32 	%r1300, %r1297, %r1298, 6;
	mov.b64 	%rd1995, {%r1300, %r1299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1973;
	}
	shf.l.wrap.b32 	%r1303, %r1302, %r1301, 25;
	shf.l.wrap.b32 	%r1304, %r1301, %r1302, 25;
	mov.b64 	%rd1996, {%r1304, %r1303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd1979;
	}
	shf.l.wrap.b32 	%r1307, %r1306, %r1305, 8;
	shf.l.wrap.b32 	%r1308, %r1305, %r1306, 8;
	mov.b64 	%rd1997, {%r1308, %r1307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1980;
	}
	shf.l.wrap.b32 	%r1311, %r1310, %r1309, 18;
	shf.l.wrap.b32 	%r1312, %r1309, %r1310, 18;
	mov.b64 	%rd1998, {%r1312, %r1311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1314,%dummy}, %rd1964;
	}
	shf.l.wrap.b32 	%r1315, %r1314, %r1313, 27;
	shf.l.wrap.b32 	%r1316, %r1313, %r1314, 27;
	mov.b64 	%rd1999, {%r1316, %r1315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1965;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd2000, {%r1320, %r1319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1321}, %rd1971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd1971;
	}
	shf.l.wrap.b32 	%r1323, %r1322, %r1321, 10;
	shf.l.wrap.b32 	%r1324, %r1321, %r1322, 10;
	mov.b64 	%rd2001, {%r1324, %r1323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd1977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1977;
	}
	shf.l.wrap.b32 	%r1327, %r1326, %r1325, 15;
	shf.l.wrap.b32 	%r1328, %r1325, %r1326, 15;
	mov.b64 	%rd2002, {%r1328, %r1327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd1983;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 8;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 8;
	mov.b64 	%rd2003, {%r1332, %r1331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1962;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 2;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 2;
	mov.b64 	%rd2004, {%r1336, %r1335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd1968;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 9;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 9;
	mov.b64 	%rd2005, {%r1340, %r1339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1974;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 25;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 25;
	mov.b64 	%rd2006, {%r1344, %r1343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd1975;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 23;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 23;
	mov.b64 	%rd2007, {%r1348, %r1347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1981;
	}
	shf.l.wrap.b32 	%r1351, %r1350, %r1349, 2;
	shf.l.wrap.b32 	%r1352, %r1349, %r1350, 2;
	mov.b64 	%rd2008, {%r1352, %r1351};
	not.b64 	%rd2009, %rd1985;
	and.b64  	%rd2010, %rd1986, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd1960;
	not.b64 	%rd2012, %rd1986;
	and.b64  	%rd2013, %rd1987, %rd2012;
	xor.b64  	%rd2014, %rd2013, %rd1985;
	not.b64 	%rd2015, %rd1987;
	and.b64  	%rd2016, %rd1988, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd1986;
	not.b64 	%rd2018, %rd1988;
	and.b64  	%rd2019, %rd1960, %rd2018;
	xor.b64  	%rd2020, %rd2019, %rd1987;
	not.b64 	%rd2021, %rd1960;
	and.b64  	%rd2022, %rd1985, %rd2021;
	xor.b64  	%rd2023, %rd2022, %rd1988;
	not.b64 	%rd2024, %rd1990;
	and.b64  	%rd2025, %rd1991, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd1989;
	not.b64 	%rd2027, %rd1991;
	and.b64  	%rd2028, %rd1992, %rd2027;
	xor.b64  	%rd2029, %rd2028, %rd1990;
	not.b64 	%rd2030, %rd1992;
	and.b64  	%rd2031, %rd1993, %rd2030;
	xor.b64  	%rd2032, %rd2031, %rd1991;
	not.b64 	%rd2033, %rd1993;
	and.b64  	%rd2034, %rd1989, %rd2033;
	xor.b64  	%rd2035, %rd2034, %rd1992;
	not.b64 	%rd2036, %rd1989;
	and.b64  	%rd2037, %rd1990, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1993;
	not.b64 	%rd2039, %rd1995;
	and.b64  	%rd2040, %rd1996, %rd2039;
	xor.b64  	%rd2041, %rd2040, %rd1994;
	not.b64 	%rd2042, %rd1996;
	and.b64  	%rd2043, %rd1997, %rd2042;
	xor.b64  	%rd2044, %rd2043, %rd1995;
	not.b64 	%rd2045, %rd1997;
	and.b64  	%rd2046, %rd1998, %rd2045;
	xor.b64  	%rd2047, %rd2046, %rd1996;
	not.b64 	%rd2048, %rd1998;
	and.b64  	%rd2049, %rd1994, %rd2048;
	xor.b64  	%rd2050, %rd2049, %rd1997;
	not.b64 	%rd2051, %rd1994;
	and.b64  	%rd2052, %rd1995, %rd2051;
	xor.b64  	%rd2053, %rd2052, %rd1998;
	not.b64 	%rd2054, %rd2000;
	and.b64  	%rd2055, %rd2001, %rd2054;
	xor.b64  	%rd2056, %rd2055, %rd1999;
	not.b64 	%rd2057, %rd2001;
	and.b64  	%rd2058, %rd2002, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd2000;
	not.b64 	%rd2060, %rd2002;
	and.b64  	%rd2061, %rd2003, %rd2060;
	xor.b64  	%rd2062, %rd2061, %rd2001;
	not.b64 	%rd2063, %rd2003;
	and.b64  	%rd2064, %rd1999, %rd2063;
	xor.b64  	%rd2065, %rd2064, %rd2002;
	not.b64 	%rd2066, %rd1999;
	and.b64  	%rd2067, %rd2000, %rd2066;
	xor.b64  	%rd2068, %rd2067, %rd2003;
	not.b64 	%rd2069, %rd2005;
	and.b64  	%rd2070, %rd2006, %rd2069;
	xor.b64  	%rd2071, %rd2070, %rd2004;
	not.b64 	%rd2072, %rd2006;
	and.b64  	%rd2073, %rd2007, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2005;
	not.b64 	%rd2075, %rd2007;
	and.b64  	%rd2076, %rd2008, %rd2075;
	xor.b64  	%rd2077, %rd2076, %rd2006;
	not.b64 	%rd2078, %rd2008;
	and.b64  	%rd2079, %rd2004, %rd2078;
	xor.b64  	%rd2080, %rd2079, %rd2007;
	not.b64 	%rd2081, %rd2004;
	and.b64  	%rd2082, %rd2005, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2008;
	xor.b64  	%rd2084, %rd2011, %rd26;
	xor.b64  	%rd2085, %rd2026, %rd2084;
	xor.b64  	%rd2086, %rd2085, %rd2041;
	xor.b64  	%rd2087, %rd2086, %rd2056;
	xor.b64  	%rd2088, %rd2087, %rd2071;
	xor.b64  	%rd2089, %rd2029, %rd2014;
	xor.b64  	%rd2090, %rd2089, %rd2044;
	xor.b64  	%rd2091, %rd2090, %rd2059;
	xor.b64  	%rd2092, %rd2091, %rd2074;
	xor.b64  	%rd2093, %rd2032, %rd2017;
	xor.b64  	%rd2094, %rd2093, %rd2047;
	xor.b64  	%rd2095, %rd2094, %rd2062;
	xor.b64  	%rd2096, %rd2095, %rd2077;
	xor.b64  	%rd2097, %rd2035, %rd2020;
	xor.b64  	%rd2098, %rd2097, %rd2050;
	xor.b64  	%rd2099, %rd2098, %rd2065;
	xor.b64  	%rd2100, %rd2099, %rd2080;
	xor.b64  	%rd2101, %rd2038, %rd2023;
	xor.b64  	%rd2102, %rd2101, %rd2053;
	xor.b64  	%rd2103, %rd2102, %rd2068;
	xor.b64  	%rd2104, %rd2103, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1354,%dummy}, %rd2092;
	}
	shf.l.wrap.b32 	%r1355, %r1354, %r1353, 1;
	shf.l.wrap.b32 	%r1356, %r1353, %r1354, 1;
	mov.b64 	%rd2105, {%r1356, %r1355};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd2096;
	}
	shf.l.wrap.b32 	%r1359, %r1358, %r1357, 1;
	shf.l.wrap.b32 	%r1360, %r1357, %r1358, 1;
	mov.b64 	%rd2107, {%r1360, %r1359};
	xor.b64  	%rd2108, %rd2107, %rd2088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd2100;
	}
	shf.l.wrap.b32 	%r1363, %r1362, %r1361, 1;
	shf.l.wrap.b32 	%r1364, %r1361, %r1362, 1;
	mov.b64 	%rd2109, {%r1364, %r1363};
	xor.b64  	%rd2110, %rd2109, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd2104;
	}
	shf.l.wrap.b32 	%r1367, %r1366, %r1365, 1;
	shf.l.wrap.b32 	%r1368, %r1365, %r1366, 1;
	mov.b64 	%rd2111, {%r1368, %r1367};
	xor.b64  	%rd2112, %rd2111, %rd2096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd2088;
	}
	shf.l.wrap.b32 	%r1371, %r1370, %r1369, 1;
	shf.l.wrap.b32 	%r1372, %r1369, %r1370, 1;
	mov.b64 	%rd2113, {%r1372, %r1371};
	xor.b64  	%rd2114, %rd2100, %rd2113;
	xor.b64  	%rd2115, %rd2106, %rd2084;
	xor.b64  	%rd2116, %rd2108, %rd2014;
	xor.b64  	%rd2117, %rd2110, %rd2017;
	xor.b64  	%rd2118, %rd2112, %rd2020;
	xor.b64  	%rd2119, %rd2114, %rd2023;
	xor.b64  	%rd2120, %rd2106, %rd2026;
	xor.b64  	%rd2121, %rd2108, %rd2029;
	xor.b64  	%rd2122, %rd2110, %rd2032;
	xor.b64  	%rd2123, %rd2112, %rd2035;
	xor.b64  	%rd2124, %rd2114, %rd2038;
	xor.b64  	%rd2125, %rd2106, %rd2041;
	xor.b64  	%rd2126, %rd2108, %rd2044;
	xor.b64  	%rd2127, %rd2110, %rd2047;
	xor.b64  	%rd2128, %rd2112, %rd2050;
	xor.b64  	%rd2129, %rd2114, %rd2053;
	xor.b64  	%rd2130, %rd2106, %rd2056;
	xor.b64  	%rd2131, %rd2108, %rd2059;
	xor.b64  	%rd2132, %rd2110, %rd2062;
	xor.b64  	%rd2133, %rd2112, %rd2065;
	xor.b64  	%rd2134, %rd2114, %rd2068;
	xor.b64  	%rd2135, %rd2106, %rd2071;
	xor.b64  	%rd2136, %rd2108, %rd2074;
	xor.b64  	%rd2137, %rd2110, %rd2077;
	xor.b64  	%rd2138, %rd2112, %rd2080;
	xor.b64  	%rd2139, %rd2114, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd2121;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 20;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 20;
	mov.b64 	%rd2140, {%r1376, %r1375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd2127;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 21;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 21;
	mov.b64 	%rd2141, {%r1380, %r1379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd2133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd2133;
	}
	shf.l.wrap.b32 	%r1383, %r1382, %r1381, 21;
	shf.l.wrap.b32 	%r1384, %r1381, %r1382, 21;
	mov.b64 	%rd2142, {%r1384, %r1383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd2139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd2139;
	}
	shf.l.wrap.b32 	%r1387, %r1386, %r1385, 14;
	shf.l.wrap.b32 	%r1388, %r1385, %r1386, 14;
	mov.b64 	%rd2143, {%r1388, %r1387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd2118;
	}
	shf.l.wrap.b32 	%r1391, %r1390, %r1389, 28;
	shf.l.wrap.b32 	%r1392, %r1389, %r1390, 28;
	mov.b64 	%rd2144, {%r1392, %r1391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1393}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd2124;
	}
	shf.l.wrap.b32 	%r1395, %r1394, %r1393, 20;
	shf.l.wrap.b32 	%r1396, %r1393, %r1394, 20;
	mov.b64 	%rd2145, {%r1396, %r1395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2125;
	}
	shf.l.wrap.b32 	%r1399, %r1398, %r1397, 3;
	shf.l.wrap.b32 	%r1400, %r1397, %r1398, 3;
	mov.b64 	%rd2146, {%r1400, %r1399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1401,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd2131;
	}
	shf.r.wrap.b32 	%r1403, %r1402, %r1401, 19;
	shf.r.wrap.b32 	%r1404, %r1401, %r1402, 19;
	mov.b64 	%rd2147, {%r1404, %r1403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2137;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 3;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 3;
	mov.b64 	%rd2148, {%r1408, %r1407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1409}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd2116;
	}
	shf.l.wrap.b32 	%r1411, %r1410, %r1409, 1;
	shf.l.wrap.b32 	%r1412, %r1409, %r1410, 1;
	mov.b64 	%rd2149, {%r1412, %r1411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2122;
	}
	shf.l.wrap.b32 	%r1415, %r1414, %r1413, 6;
	shf.l.wrap.b32 	%r1416, %r1413, %r1414, 6;
	mov.b64 	%rd2150, {%r1416, %r1415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1417}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd2128;
	}
	shf.l.wrap.b32 	%r1419, %r1418, %r1417, 25;
	shf.l.wrap.b32 	%r1420, %r1417, %r1418, 25;
	mov.b64 	%rd2151, {%r1420, %r1419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2134;
	}
	shf.l.wrap.b32 	%r1423, %r1422, %r1421, 8;
	shf.l.wrap.b32 	%r1424, %r1421, %r1422, 8;
	mov.b64 	%rd2152, {%r1424, %r1423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1425}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd2135;
	}
	shf.l.wrap.b32 	%r1427, %r1426, %r1425, 18;
	shf.l.wrap.b32 	%r1428, %r1425, %r1426, 18;
	mov.b64 	%rd2153, {%r1428, %r1427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd2119;
	}
	shf.l.wrap.b32 	%r1431, %r1430, %r1429, 27;
	shf.l.wrap.b32 	%r1432, %r1429, %r1430, 27;
	mov.b64 	%rd2154, {%r1432, %r1431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd2120;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 28;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 28;
	mov.b64 	%rd2155, {%r1436, %r1435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd2126;
	}
	shf.l.wrap.b32 	%r1439, %r1438, %r1437, 10;
	shf.l.wrap.b32 	%r1440, %r1437, %r1438, 10;
	mov.b64 	%rd2156, {%r1440, %r1439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd2132;
	}
	shf.l.wrap.b32 	%r1443, %r1442, %r1441, 15;
	shf.l.wrap.b32 	%r1444, %r1441, %r1442, 15;
	mov.b64 	%rd2157, {%r1444, %r1443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd2138;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 8;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 8;
	mov.b64 	%rd2158, {%r1448, %r1447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1449,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1450}, %rd2117;
	}
	shf.r.wrap.b32 	%r1451, %r1450, %r1449, 2;
	shf.r.wrap.b32 	%r1452, %r1449, %r1450, 2;
	mov.b64 	%rd2159, {%r1452, %r1451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2123;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 9;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 9;
	mov.b64 	%rd2160, {%r1456, %r1455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1458}, %rd2129;
	}
	shf.r.wrap.b32 	%r1459, %r1458, %r1457, 25;
	shf.r.wrap.b32 	%r1460, %r1457, %r1458, 25;
	mov.b64 	%rd2161, {%r1460, %r1459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd2130;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 23;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 23;
	mov.b64 	%rd2162, {%r1464, %r1463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1465}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd2136;
	}
	shf.l.wrap.b32 	%r1467, %r1466, %r1465, 2;
	shf.l.wrap.b32 	%r1468, %r1465, %r1466, 2;
	mov.b64 	%rd2163, {%r1468, %r1467};
	not.b64 	%rd2164, %rd2140;
	and.b64  	%rd2165, %rd2141, %rd2164;
	xor.b64  	%rd2166, %rd2165, %rd2115;
	not.b64 	%rd2167, %rd2141;
	and.b64  	%rd2168, %rd2142, %rd2167;
	xor.b64  	%rd2169, %rd2168, %rd2140;
	not.b64 	%rd2170, %rd2142;
	and.b64  	%rd2171, %rd2143, %rd2170;
	xor.b64  	%rd2172, %rd2171, %rd2141;
	not.b64 	%rd2173, %rd2143;
	and.b64  	%rd2174, %rd2115, %rd2173;
	xor.b64  	%rd2175, %rd2174, %rd2142;
	not.b64 	%rd2176, %rd2115;
	and.b64  	%rd2177, %rd2140, %rd2176;
	xor.b64  	%rd2178, %rd2177, %rd2143;
	not.b64 	%rd2179, %rd2145;
	and.b64  	%rd2180, %rd2146, %rd2179;
	xor.b64  	%rd2181, %rd2180, %rd2144;
	not.b64 	%rd2182, %rd2146;
	and.b64  	%rd2183, %rd2147, %rd2182;
	xor.b64  	%rd2184, %rd2183, %rd2145;
	not.b64 	%rd2185, %rd2147;
	and.b64  	%rd2186, %rd2148, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2146;
	not.b64 	%rd2188, %rd2148;
	and.b64  	%rd2189, %rd2144, %rd2188;
	xor.b64  	%rd2190, %rd2189, %rd2147;
	not.b64 	%rd2191, %rd2144;
	and.b64  	%rd2192, %rd2145, %rd2191;
	xor.b64  	%rd2193, %rd2192, %rd2148;
	not.b64 	%rd2194, %rd2150;
	and.b64  	%rd2195, %rd2151, %rd2194;
	xor.b64  	%rd2196, %rd2195, %rd2149;
	not.b64 	%rd2197, %rd2151;
	and.b64  	%rd2198, %rd2152, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2150;
	not.b64 	%rd2200, %rd2152;
	and.b64  	%rd2201, %rd2153, %rd2200;
	xor.b64  	%rd2202, %rd2201, %rd2151;
	not.b64 	%rd2203, %rd2153;
	and.b64  	%rd2204, %rd2149, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2152;
	not.b64 	%rd2206, %rd2149;
	and.b64  	%rd2207, %rd2150, %rd2206;
	xor.b64  	%rd2208, %rd2207, %rd2153;
	not.b64 	%rd2209, %rd2155;
	and.b64  	%rd2210, %rd2156, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2154;
	not.b64 	%rd2212, %rd2156;
	and.b64  	%rd2213, %rd2157, %rd2212;
	xor.b64  	%rd2214, %rd2213, %rd2155;
	not.b64 	%rd2215, %rd2157;
	and.b64  	%rd2216, %rd2158, %rd2215;
	xor.b64  	%rd2217, %rd2216, %rd2156;
	not.b64 	%rd2218, %rd2158;
	and.b64  	%rd2219, %rd2154, %rd2218;
	xor.b64  	%rd2220, %rd2219, %rd2157;
	not.b64 	%rd2221, %rd2154;
	and.b64  	%rd2222, %rd2155, %rd2221;
	xor.b64  	%rd2223, %rd2222, %rd2158;
	not.b64 	%rd2224, %rd2160;
	and.b64  	%rd2225, %rd2161, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2159;
	not.b64 	%rd2227, %rd2161;
	and.b64  	%rd2228, %rd2162, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2160;
	not.b64 	%rd2230, %rd2162;
	and.b64  	%rd2231, %rd2163, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2161;
	not.b64 	%rd2233, %rd2163;
	and.b64  	%rd2234, %rd2159, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2162;
	not.b64 	%rd2236, %rd2159;
	and.b64  	%rd2237, %rd2160, %rd2236;
	xor.b64  	%rd2238, %rd2237, %rd2163;
	xor.b64  	%rd2239, %rd2166, %rd27;
	xor.b64  	%rd2240, %rd2181, %rd2239;
	xor.b64  	%rd2241, %rd2240, %rd2196;
	xor.b64  	%rd2242, %rd2241, %rd2211;
	xor.b64  	%rd2243, %rd2242, %rd2226;
	xor.b64  	%rd2244, %rd2184, %rd2169;
	xor.b64  	%rd2245, %rd2244, %rd2199;
	xor.b64  	%rd2246, %rd2245, %rd2214;
	xor.b64  	%rd2247, %rd2246, %rd2229;
	xor.b64  	%rd2248, %rd2187, %rd2172;
	xor.b64  	%rd2249, %rd2248, %rd2202;
	xor.b64  	%rd2250, %rd2249, %rd2217;
	xor.b64  	%rd2251, %rd2250, %rd2232;
	xor.b64  	%rd2252, %rd2190, %rd2175;
	xor.b64  	%rd2253, %rd2252, %rd2205;
	xor.b64  	%rd2254, %rd2253, %rd2220;
	xor.b64  	%rd2255, %rd2254, %rd2235;
	xor.b64  	%rd2256, %rd2193, %rd2178;
	xor.b64  	%rd2257, %rd2256, %rd2208;
	xor.b64  	%rd2258, %rd2257, %rd2223;
	xor.b64  	%rd2259, %rd2258, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd2247;
	}
	shf.l.wrap.b32 	%r1471, %r1470, %r1469, 1;
	shf.l.wrap.b32 	%r1472, %r1469, %r1470, 1;
	mov.b64 	%rd2260, {%r1472, %r1471};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1473}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2251;
	}
	shf.l.wrap.b32 	%r1475, %r1474, %r1473, 1;
	shf.l.wrap.b32 	%r1476, %r1473, %r1474, 1;
	mov.b64 	%rd2262, {%r1476, %r1475};
	xor.b64  	%rd2263, %rd2262, %rd2243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd2255;
	}
	shf.l.wrap.b32 	%r1479, %r1478, %r1477, 1;
	shf.l.wrap.b32 	%r1480, %r1477, %r1478, 1;
	mov.b64 	%rd2264, {%r1480, %r1479};
	xor.b64  	%rd2265, %rd2264, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1481}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2259;
	}
	shf.l.wrap.b32 	%r1483, %r1482, %r1481, 1;
	shf.l.wrap.b32 	%r1484, %r1481, %r1482, 1;
	mov.b64 	%rd2266, {%r1484, %r1483};
	xor.b64  	%rd2267, %rd2266, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd2243;
	}
	shf.l.wrap.b32 	%r1487, %r1486, %r1485, 1;
	shf.l.wrap.b32 	%r1488, %r1485, %r1486, 1;
	mov.b64 	%rd2268, {%r1488, %r1487};
	xor.b64  	%rd2269, %rd2255, %rd2268;
	xor.b64  	%rd2270, %rd2261, %rd2239;
	xor.b64  	%rd2271, %rd2263, %rd2169;
	xor.b64  	%rd2272, %rd2265, %rd2172;
	xor.b64  	%rd2273, %rd2267, %rd2175;
	xor.b64  	%rd2274, %rd2269, %rd2178;
	xor.b64  	%rd2275, %rd2261, %rd2181;
	xor.b64  	%rd2276, %rd2263, %rd2184;
	xor.b64  	%rd2277, %rd2265, %rd2187;
	xor.b64  	%rd2278, %rd2267, %rd2190;
	xor.b64  	%rd2279, %rd2269, %rd2193;
	xor.b64  	%rd2280, %rd2261, %rd2196;
	xor.b64  	%rd2281, %rd2263, %rd2199;
	xor.b64  	%rd2282, %rd2265, %rd2202;
	xor.b64  	%rd2283, %rd2267, %rd2205;
	xor.b64  	%rd2284, %rd2269, %rd2208;
	xor.b64  	%rd2285, %rd2261, %rd2211;
	xor.b64  	%rd2286, %rd2263, %rd2214;
	xor.b64  	%rd2287, %rd2265, %rd2217;
	xor.b64  	%rd2288, %rd2267, %rd2220;
	xor.b64  	%rd2289, %rd2269, %rd2223;
	xor.b64  	%rd2290, %rd2261, %rd2226;
	xor.b64  	%rd2291, %rd2263, %rd2229;
	xor.b64  	%rd2292, %rd2265, %rd2232;
	xor.b64  	%rd2293, %rd2267, %rd2235;
	xor.b64  	%rd2294, %rd2269, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd2276;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 20;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 20;
	mov.b64 	%rd2295, {%r1492, %r1491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2282;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 21;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 21;
	mov.b64 	%rd2296, {%r1496, %r1495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd2288;
	}
	shf.l.wrap.b32 	%r1499, %r1498, %r1497, 21;
	shf.l.wrap.b32 	%r1500, %r1497, %r1498, 21;
	mov.b64 	%rd2297, {%r1500, %r1499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd2294;
	}
	shf.l.wrap.b32 	%r1503, %r1502, %r1501, 14;
	shf.l.wrap.b32 	%r1504, %r1501, %r1502, 14;
	mov.b64 	%rd2298, {%r1504, %r1503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1505}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2273;
	}
	shf.l.wrap.b32 	%r1507, %r1506, %r1505, 28;
	shf.l.wrap.b32 	%r1508, %r1505, %r1506, 28;
	mov.b64 	%rd2299, {%r1508, %r1507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd2279;
	}
	shf.l.wrap.b32 	%r1511, %r1510, %r1509, 20;
	shf.l.wrap.b32 	%r1512, %r1509, %r1510, 20;
	mov.b64 	%rd2300, {%r1512, %r1511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1513}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd2280;
	}
	shf.l.wrap.b32 	%r1515, %r1514, %r1513, 3;
	shf.l.wrap.b32 	%r1516, %r1513, %r1514, 3;
	mov.b64 	%rd2301, {%r1516, %r1515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd2286;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 19;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 19;
	mov.b64 	%rd2302, {%r1520, %r1519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd2292;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 3;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 3;
	mov.b64 	%rd2303, {%r1524, %r1523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd2271;
	}
	shf.l.wrap.b32 	%r1527, %r1526, %r1525, 1;
	shf.l.wrap.b32 	%r1528, %r1525, %r1526, 1;
	mov.b64 	%rd2304, {%r1528, %r1527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1529}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd2277;
	}
	shf.l.wrap.b32 	%r1531, %r1530, %r1529, 6;
	shf.l.wrap.b32 	%r1532, %r1529, %r1530, 6;
	mov.b64 	%rd2305, {%r1532, %r1531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd2283;
	}
	shf.l.wrap.b32 	%r1535, %r1534, %r1533, 25;
	shf.l.wrap.b32 	%r1536, %r1533, %r1534, 25;
	mov.b64 	%rd2306, {%r1536, %r1535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2289;
	}
	shf.l.wrap.b32 	%r1539, %r1538, %r1537, 8;
	shf.l.wrap.b32 	%r1540, %r1537, %r1538, 8;
	mov.b64 	%rd2307, {%r1540, %r1539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1541}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd2290;
	}
	shf.l.wrap.b32 	%r1543, %r1542, %r1541, 18;
	shf.l.wrap.b32 	%r1544, %r1541, %r1542, 18;
	mov.b64 	%rd2308, {%r1544, %r1543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2274;
	}
	shf.l.wrap.b32 	%r1547, %r1546, %r1545, 27;
	shf.l.wrap.b32 	%r1548, %r1545, %r1546, 27;
	mov.b64 	%rd2309, {%r1548, %r1547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd2275;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 28;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 28;
	mov.b64 	%rd2310, {%r1552, %r1551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd2281;
	}
	shf.l.wrap.b32 	%r1555, %r1554, %r1553, 10;
	shf.l.wrap.b32 	%r1556, %r1553, %r1554, 10;
	mov.b64 	%rd2311, {%r1556, %r1555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1557}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd2287;
	}
	shf.l.wrap.b32 	%r1559, %r1558, %r1557, 15;
	shf.l.wrap.b32 	%r1560, %r1557, %r1558, 15;
	mov.b64 	%rd2312, {%r1560, %r1559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd2293;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 8;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 8;
	mov.b64 	%rd2313, {%r1564, %r1563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd2272;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 2;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 2;
	mov.b64 	%rd2314, {%r1568, %r1567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd2278;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 9;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 9;
	mov.b64 	%rd2315, {%r1572, %r1571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd2284;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 25;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 25;
	mov.b64 	%rd2316, {%r1576, %r1575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1577,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1578}, %rd2285;
	}
	shf.r.wrap.b32 	%r1579, %r1578, %r1577, 23;
	shf.r.wrap.b32 	%r1580, %r1577, %r1578, 23;
	mov.b64 	%rd2317, {%r1580, %r1579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1581}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1582,%dummy}, %rd2291;
	}
	shf.l.wrap.b32 	%r1583, %r1582, %r1581, 2;
	shf.l.wrap.b32 	%r1584, %r1581, %r1582, 2;
	mov.b64 	%rd2318, {%r1584, %r1583};
	not.b64 	%rd2319, %rd2295;
	and.b64  	%rd2320, %rd2296, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2270;
	not.b64 	%rd2322, %rd2296;
	and.b64  	%rd2323, %rd2297, %rd2322;
	xor.b64  	%rd2324, %rd2323, %rd2295;
	not.b64 	%rd2325, %rd2297;
	and.b64  	%rd2326, %rd2298, %rd2325;
	xor.b64  	%rd2327, %rd2326, %rd2296;
	not.b64 	%rd2328, %rd2298;
	and.b64  	%rd2329, %rd2270, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2297;
	not.b64 	%rd2331, %rd2270;
	and.b64  	%rd2332, %rd2295, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2298;
	not.b64 	%rd2334, %rd2300;
	and.b64  	%rd2335, %rd2301, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2299;
	not.b64 	%rd2337, %rd2301;
	and.b64  	%rd2338, %rd2302, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2300;
	not.b64 	%rd2340, %rd2302;
	and.b64  	%rd2341, %rd2303, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2301;
	not.b64 	%rd2343, %rd2303;
	and.b64  	%rd2344, %rd2299, %rd2343;
	xor.b64  	%rd2345, %rd2344, %rd2302;
	not.b64 	%rd2346, %rd2299;
	and.b64  	%rd2347, %rd2300, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2303;
	not.b64 	%rd2349, %rd2305;
	and.b64  	%rd2350, %rd2306, %rd2349;
	xor.b64  	%rd2351, %rd2350, %rd2304;
	not.b64 	%rd2352, %rd2306;
	and.b64  	%rd2353, %rd2307, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2305;
	not.b64 	%rd2355, %rd2307;
	and.b64  	%rd2356, %rd2308, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2306;
	not.b64 	%rd2358, %rd2308;
	and.b64  	%rd2359, %rd2304, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2307;
	not.b64 	%rd2361, %rd2304;
	and.b64  	%rd2362, %rd2305, %rd2361;
	xor.b64  	%rd2363, %rd2362, %rd2308;
	not.b64 	%rd2364, %rd2310;
	and.b64  	%rd2365, %rd2311, %rd2364;
	xor.b64  	%rd2366, %rd2365, %rd2309;
	not.b64 	%rd2367, %rd2311;
	and.b64  	%rd2368, %rd2312, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd2310;
	not.b64 	%rd2370, %rd2312;
	and.b64  	%rd2371, %rd2313, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2311;
	not.b64 	%rd2373, %rd2313;
	and.b64  	%rd2374, %rd2309, %rd2373;
	xor.b64  	%rd2375, %rd2374, %rd2312;
	not.b64 	%rd2376, %rd2309;
	and.b64  	%rd2377, %rd2310, %rd2376;
	xor.b64  	%rd2378, %rd2377, %rd2313;
	not.b64 	%rd2379, %rd2315;
	and.b64  	%rd2380, %rd2316, %rd2379;
	xor.b64  	%rd2381, %rd2380, %rd2314;
	not.b64 	%rd2382, %rd2316;
	and.b64  	%rd2383, %rd2317, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2315;
	not.b64 	%rd2385, %rd2317;
	and.b64  	%rd2386, %rd2318, %rd2385;
	xor.b64  	%rd2387, %rd2386, %rd2316;
	not.b64 	%rd2388, %rd2318;
	and.b64  	%rd2389, %rd2314, %rd2388;
	xor.b64  	%rd2390, %rd2389, %rd2317;
	not.b64 	%rd2391, %rd2314;
	and.b64  	%rd2392, %rd2315, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2318;
	xor.b64  	%rd2394, %rd2321, %rd28;
	xor.b64  	%rd2395, %rd2336, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2351;
	xor.b64  	%rd2397, %rd2396, %rd2366;
	xor.b64  	%rd2398, %rd2397, %rd2381;
	xor.b64  	%rd2399, %rd2339, %rd2324;
	xor.b64  	%rd2400, %rd2399, %rd2354;
	xor.b64  	%rd2401, %rd2400, %rd2369;
	xor.b64  	%rd2402, %rd2401, %rd2384;
	xor.b64  	%rd2403, %rd2342, %rd2327;
	xor.b64  	%rd2404, %rd2403, %rd2357;
	xor.b64  	%rd2405, %rd2404, %rd2372;
	xor.b64  	%rd2406, %rd2405, %rd2387;
	xor.b64  	%rd2407, %rd2345, %rd2330;
	xor.b64  	%rd2408, %rd2407, %rd2360;
	xor.b64  	%rd2409, %rd2408, %rd2375;
	xor.b64  	%rd2410, %rd2409, %rd2390;
	xor.b64  	%rd2411, %rd2348, %rd2333;
	xor.b64  	%rd2412, %rd2411, %rd2363;
	xor.b64  	%rd2413, %rd2412, %rd2378;
	xor.b64  	%rd2414, %rd2413, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2402;
	}
	shf.l.wrap.b32 	%r1587, %r1586, %r1585, 1;
	shf.l.wrap.b32 	%r1588, %r1585, %r1586, 1;
	mov.b64 	%rd2415, {%r1588, %r1587};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1589}, %rd2406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1590,%dummy}, %rd2406;
	}
	shf.l.wrap.b32 	%r1591, %r1590, %r1589, 1;
	shf.l.wrap.b32 	%r1592, %r1589, %r1590, 1;
	mov.b64 	%rd2417, {%r1592, %r1591};
	xor.b64  	%rd2418, %rd2417, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd2410;
	}
	shf.l.wrap.b32 	%r1595, %r1594, %r1593, 1;
	shf.l.wrap.b32 	%r1596, %r1593, %r1594, 1;
	mov.b64 	%rd2419, {%r1596, %r1595};
	xor.b64  	%rd2420, %rd2419, %rd2402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1598,%dummy}, %rd2414;
	}
	shf.l.wrap.b32 	%r1599, %r1598, %r1597, 1;
	shf.l.wrap.b32 	%r1600, %r1597, %r1598, 1;
	mov.b64 	%rd2421, {%r1600, %r1599};
	xor.b64  	%rd2422, %rd2421, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1601}, %rd2398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd2398;
	}
	shf.l.wrap.b32 	%r1603, %r1602, %r1601, 1;
	shf.l.wrap.b32 	%r1604, %r1601, %r1602, 1;
	mov.b64 	%rd2423, {%r1604, %r1603};
	xor.b64  	%rd2424, %rd2410, %rd2423;
	xor.b64  	%rd2425, %rd2416, %rd2394;
	xor.b64  	%rd2426, %rd2418, %rd2324;
	xor.b64  	%rd2427, %rd2420, %rd2327;
	xor.b64  	%rd2428, %rd2422, %rd2330;
	xor.b64  	%rd2429, %rd2424, %rd2333;
	xor.b64  	%rd2430, %rd2416, %rd2336;
	xor.b64  	%rd2431, %rd2418, %rd2339;
	xor.b64  	%rd2432, %rd2420, %rd2342;
	xor.b64  	%rd2433, %rd2422, %rd2345;
	xor.b64  	%rd2434, %rd2424, %rd2348;
	xor.b64  	%rd2435, %rd2416, %rd2351;
	xor.b64  	%rd2436, %rd2418, %rd2354;
	xor.b64  	%rd2437, %rd2420, %rd2357;
	xor.b64  	%rd2438, %rd2422, %rd2360;
	xor.b64  	%rd2439, %rd2424, %rd2363;
	xor.b64  	%rd2440, %rd2416, %rd2366;
	xor.b64  	%rd2441, %rd2418, %rd2369;
	xor.b64  	%rd2442, %rd2420, %rd2372;
	xor.b64  	%rd2443, %rd2422, %rd2375;
	xor.b64  	%rd2444, %rd2424, %rd2378;
	xor.b64  	%rd2445, %rd2416, %rd2381;
	xor.b64  	%rd2446, %rd2418, %rd2384;
	xor.b64  	%rd2447, %rd2420, %rd2387;
	xor.b64  	%rd2448, %rd2422, %rd2390;
	xor.b64  	%rd2449, %rd2424, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd2431;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 20;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 20;
	mov.b64 	%rd2450, {%r1608, %r1607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd2437;
	}
	shf.r.wrap.b32 	%r1611, %r1610, %r1609, 21;
	shf.r.wrap.b32 	%r1612, %r1609, %r1610, 21;
	mov.b64 	%rd2451, {%r1612, %r1611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd2443;
	}
	shf.l.wrap.b32 	%r1615, %r1614, %r1613, 21;
	shf.l.wrap.b32 	%r1616, %r1613, %r1614, 21;
	mov.b64 	%rd2452, {%r1616, %r1615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1617}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd2449;
	}
	shf.l.wrap.b32 	%r1619, %r1618, %r1617, 14;
	shf.l.wrap.b32 	%r1620, %r1617, %r1618, 14;
	mov.b64 	%rd2453, {%r1620, %r1619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd2428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd2428;
	}
	shf.l.wrap.b32 	%r1623, %r1622, %r1621, 28;
	shf.l.wrap.b32 	%r1624, %r1621, %r1622, 28;
	mov.b64 	%rd2454, {%r1624, %r1623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd2434;
	}
	shf.l.wrap.b32 	%r1627, %r1626, %r1625, 20;
	shf.l.wrap.b32 	%r1628, %r1625, %r1626, 20;
	mov.b64 	%rd2455, {%r1628, %r1627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd2435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd2435;
	}
	shf.l.wrap.b32 	%r1631, %r1630, %r1629, 3;
	shf.l.wrap.b32 	%r1632, %r1629, %r1630, 3;
	mov.b64 	%rd2456, {%r1632, %r1631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd2441;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 19;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 19;
	mov.b64 	%rd2457, {%r1636, %r1635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd2447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd2447;
	}
	shf.r.wrap.b32 	%r1639, %r1638, %r1637, 3;
	shf.r.wrap.b32 	%r1640, %r1637, %r1638, 3;
	mov.b64 	%rd2458, {%r1640, %r1639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd2426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd2426;
	}
	shf.l.wrap.b32 	%r1643, %r1642, %r1641, 1;
	shf.l.wrap.b32 	%r1644, %r1641, %r1642, 1;
	mov.b64 	%rd2459, {%r1644, %r1643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd2432;
	}
	shf.l.wrap.b32 	%r1647, %r1646, %r1645, 6;
	shf.l.wrap.b32 	%r1648, %r1645, %r1646, 6;
	mov.b64 	%rd2460, {%r1648, %r1647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd2438;
	}
	shf.l.wrap.b32 	%r1651, %r1650, %r1649, 25;
	shf.l.wrap.b32 	%r1652, %r1649, %r1650, 25;
	mov.b64 	%rd2461, {%r1652, %r1651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd2444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd2444;
	}
	shf.l.wrap.b32 	%r1655, %r1654, %r1653, 8;
	shf.l.wrap.b32 	%r1656, %r1653, %r1654, 8;
	mov.b64 	%rd2462, {%r1656, %r1655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd2445;
	}
	shf.l.wrap.b32 	%r1659, %r1658, %r1657, 18;
	shf.l.wrap.b32 	%r1660, %r1657, %r1658, 18;
	mov.b64 	%rd2463, {%r1660, %r1659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1661}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2429;
	}
	shf.l.wrap.b32 	%r1663, %r1662, %r1661, 27;
	shf.l.wrap.b32 	%r1664, %r1661, %r1662, 27;
	mov.b64 	%rd2464, {%r1664, %r1663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd2430;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 28;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 28;
	mov.b64 	%rd2465, {%r1668, %r1667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2436;
	}
	shf.l.wrap.b32 	%r1671, %r1670, %r1669, 10;
	shf.l.wrap.b32 	%r1672, %r1669, %r1670, 10;
	mov.b64 	%rd2466, {%r1672, %r1671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd2442;
	}
	shf.l.wrap.b32 	%r1675, %r1674, %r1673, 15;
	shf.l.wrap.b32 	%r1676, %r1673, %r1674, 15;
	mov.b64 	%rd2467, {%r1676, %r1675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1677,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd2448;
	}
	shf.r.wrap.b32 	%r1679, %r1678, %r1677, 8;
	shf.r.wrap.b32 	%r1680, %r1677, %r1678, 8;
	mov.b64 	%rd2468, {%r1680, %r1679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1681,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1682}, %rd2427;
	}
	shf.r.wrap.b32 	%r1683, %r1682, %r1681, 2;
	shf.r.wrap.b32 	%r1684, %r1681, %r1682, 2;
	mov.b64 	%rd2469, {%r1684, %r1683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2433;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 9;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 9;
	mov.b64 	%rd2470, {%r1688, %r1687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1689,%dummy}, %rd2439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1690}, %rd2439;
	}
	shf.r.wrap.b32 	%r1691, %r1690, %r1689, 25;
	shf.r.wrap.b32 	%r1692, %r1689, %r1690, 25;
	mov.b64 	%rd2471, {%r1692, %r1691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2440;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 23;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 23;
	mov.b64 	%rd2472, {%r1696, %r1695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd2446;
	}
	shf.l.wrap.b32 	%r1699, %r1698, %r1697, 2;
	shf.l.wrap.b32 	%r1700, %r1697, %r1698, 2;
	mov.b64 	%rd2473, {%r1700, %r1699};
	not.b64 	%rd2474, %rd2450;
	and.b64  	%rd2475, %rd2451, %rd2474;
	xor.b64  	%rd2476, %rd2475, %rd2425;
	not.b64 	%rd2477, %rd2451;
	and.b64  	%rd2478, %rd2452, %rd2477;
	xor.b64  	%rd2479, %rd2478, %rd2450;
	not.b64 	%rd2480, %rd2452;
	and.b64  	%rd2481, %rd2453, %rd2480;
	xor.b64  	%rd2482, %rd2481, %rd2451;
	not.b64 	%rd2483, %rd2453;
	and.b64  	%rd2484, %rd2425, %rd2483;
	xor.b64  	%rd2485, %rd2484, %rd2452;
	not.b64 	%rd2486, %rd2425;
	and.b64  	%rd2487, %rd2450, %rd2486;
	xor.b64  	%rd2488, %rd2487, %rd2453;
	not.b64 	%rd2489, %rd2455;
	and.b64  	%rd2490, %rd2456, %rd2489;
	xor.b64  	%rd2491, %rd2490, %rd2454;
	not.b64 	%rd2492, %rd2456;
	and.b64  	%rd2493, %rd2457, %rd2492;
	xor.b64  	%rd2494, %rd2493, %rd2455;
	not.b64 	%rd2495, %rd2457;
	and.b64  	%rd2496, %rd2458, %rd2495;
	xor.b64  	%rd2497, %rd2496, %rd2456;
	not.b64 	%rd2498, %rd2458;
	and.b64  	%rd2499, %rd2454, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2457;
	not.b64 	%rd2501, %rd2454;
	and.b64  	%rd2502, %rd2455, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2458;
	not.b64 	%rd2504, %rd2460;
	and.b64  	%rd2505, %rd2461, %rd2504;
	xor.b64  	%rd2506, %rd2505, %rd2459;
	not.b64 	%rd2507, %rd2461;
	and.b64  	%rd2508, %rd2462, %rd2507;
	xor.b64  	%rd2509, %rd2508, %rd2460;
	not.b64 	%rd2510, %rd2462;
	and.b64  	%rd2511, %rd2463, %rd2510;
	xor.b64  	%rd2512, %rd2511, %rd2461;
	not.b64 	%rd2513, %rd2463;
	and.b64  	%rd2514, %rd2459, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2462;
	not.b64 	%rd2516, %rd2459;
	and.b64  	%rd2517, %rd2460, %rd2516;
	xor.b64  	%rd2518, %rd2517, %rd2463;
	not.b64 	%rd2519, %rd2465;
	and.b64  	%rd2520, %rd2466, %rd2519;
	xor.b64  	%rd2521, %rd2520, %rd2464;
	not.b64 	%rd2522, %rd2466;
	and.b64  	%rd2523, %rd2467, %rd2522;
	xor.b64  	%rd2524, %rd2523, %rd2465;
	not.b64 	%rd2525, %rd2467;
	and.b64  	%rd2526, %rd2468, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2466;
	not.b64 	%rd2528, %rd2468;
	and.b64  	%rd2529, %rd2464, %rd2528;
	xor.b64  	%rd2530, %rd2529, %rd2467;
	not.b64 	%rd2531, %rd2464;
	and.b64  	%rd2532, %rd2465, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2468;
	not.b64 	%rd2534, %rd2470;
	and.b64  	%rd2535, %rd2471, %rd2534;
	xor.b64  	%rd2536, %rd2535, %rd2469;
	not.b64 	%rd2537, %rd2471;
	and.b64  	%rd2538, %rd2472, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd2470;
	not.b64 	%rd2540, %rd2472;
	and.b64  	%rd2541, %rd2473, %rd2540;
	xor.b64  	%rd2542, %rd2541, %rd2471;
	not.b64 	%rd2543, %rd2473;
	and.b64  	%rd2544, %rd2469, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2472;
	not.b64 	%rd2546, %rd2469;
	and.b64  	%rd2547, %rd2470, %rd2546;
	xor.b64  	%rd2548, %rd2547, %rd2473;
	xor.b64  	%rd2549, %rd2476, %rd29;
	xor.b64  	%rd2550, %rd2491, %rd2549;
	xor.b64  	%rd2551, %rd2550, %rd2506;
	xor.b64  	%rd2552, %rd2551, %rd2521;
	xor.b64  	%rd2553, %rd2552, %rd2536;
	xor.b64  	%rd2554, %rd2494, %rd2479;
	xor.b64  	%rd2555, %rd2554, %rd2509;
	xor.b64  	%rd2556, %rd2555, %rd2524;
	xor.b64  	%rd2557, %rd2556, %rd2539;
	xor.b64  	%rd2558, %rd2497, %rd2482;
	xor.b64  	%rd2559, %rd2558, %rd2512;
	xor.b64  	%rd2560, %rd2559, %rd2527;
	xor.b64  	%rd2561, %rd2560, %rd2542;
	xor.b64  	%rd2562, %rd2500, %rd2485;
	xor.b64  	%rd2563, %rd2562, %rd2515;
	xor.b64  	%rd2564, %rd2563, %rd2530;
	xor.b64  	%rd2565, %rd2564, %rd2545;
	xor.b64  	%rd2566, %rd2503, %rd2488;
	xor.b64  	%rd2567, %rd2566, %rd2518;
	xor.b64  	%rd2568, %rd2567, %rd2533;
	xor.b64  	%rd2569, %rd2568, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd2557;
	}
	shf.l.wrap.b32 	%r1703, %r1702, %r1701, 1;
	shf.l.wrap.b32 	%r1704, %r1701, %r1702, 1;
	mov.b64 	%rd2570, {%r1704, %r1703};
	xor.b64  	%rd2571, %rd2569, %rd2570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1706,%dummy}, %rd2561;
	}
	shf.l.wrap.b32 	%r1707, %r1706, %r1705, 1;
	shf.l.wrap.b32 	%r1708, %r1705, %r1706, 1;
	mov.b64 	%rd2572, {%r1708, %r1707};
	xor.b64  	%rd2573, %rd2572, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd2565;
	}
	shf.l.wrap.b32 	%r1711, %r1710, %r1709, 1;
	shf.l.wrap.b32 	%r1712, %r1709, %r1710, 1;
	mov.b64 	%rd2574, {%r1712, %r1711};
	xor.b64  	%rd2575, %rd2574, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd2569;
	}
	shf.l.wrap.b32 	%r1715, %r1714, %r1713, 1;
	shf.l.wrap.b32 	%r1716, %r1713, %r1714, 1;
	mov.b64 	%rd2576, {%r1716, %r1715};
	xor.b64  	%rd2577, %rd2576, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd2553;
	}
	shf.l.wrap.b32 	%r1719, %r1718, %r1717, 1;
	shf.l.wrap.b32 	%r1720, %r1717, %r1718, 1;
	mov.b64 	%rd2578, {%r1720, %r1719};
	xor.b64  	%rd2579, %rd2565, %rd2578;
	xor.b64  	%rd2580, %rd2571, %rd2549;
	xor.b64  	%rd2581, %rd2573, %rd2479;
	xor.b64  	%rd2582, %rd2575, %rd2482;
	xor.b64  	%rd2583, %rd2577, %rd2485;
	xor.b64  	%rd2584, %rd2579, %rd2488;
	xor.b64  	%rd2585, %rd2571, %rd2491;
	xor.b64  	%rd2586, %rd2573, %rd2494;
	xor.b64  	%rd2587, %rd2575, %rd2497;
	xor.b64  	%rd2588, %rd2577, %rd2500;
	xor.b64  	%rd2589, %rd2579, %rd2503;
	xor.b64  	%rd2590, %rd2571, %rd2506;
	xor.b64  	%rd2591, %rd2573, %rd2509;
	xor.b64  	%rd2592, %rd2575, %rd2512;
	xor.b64  	%rd2593, %rd2577, %rd2515;
	xor.b64  	%rd2594, %rd2579, %rd2518;
	xor.b64  	%rd2595, %rd2571, %rd2521;
	xor.b64  	%rd2596, %rd2573, %rd2524;
	xor.b64  	%rd2597, %rd2575, %rd2527;
	xor.b64  	%rd2598, %rd2577, %rd2530;
	xor.b64  	%rd2599, %rd2579, %rd2533;
	xor.b64  	%rd2600, %rd2571, %rd2536;
	xor.b64  	%rd2601, %rd2573, %rd2539;
	xor.b64  	%rd2602, %rd2575, %rd2542;
	xor.b64  	%rd2603, %rd2577, %rd2545;
	xor.b64  	%rd2604, %rd2579, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1721,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1722}, %rd2586;
	}
	shf.r.wrap.b32 	%r1723, %r1722, %r1721, 20;
	shf.r.wrap.b32 	%r1724, %r1721, %r1722, 20;
	mov.b64 	%rd2605, {%r1724, %r1723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd2592;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 21;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 21;
	mov.b64 	%rd2606, {%r1728, %r1727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1730,%dummy}, %rd2598;
	}
	shf.l.wrap.b32 	%r1731, %r1730, %r1729, 21;
	shf.l.wrap.b32 	%r1732, %r1729, %r1730, 21;
	mov.b64 	%rd2607, {%r1732, %r1731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1733}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2604;
	}
	shf.l.wrap.b32 	%r1735, %r1734, %r1733, 14;
	shf.l.wrap.b32 	%r1736, %r1733, %r1734, 14;
	mov.b64 	%rd2608, {%r1736, %r1735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd2583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1738,%dummy}, %rd2583;
	}
	shf.l.wrap.b32 	%r1739, %r1738, %r1737, 28;
	shf.l.wrap.b32 	%r1740, %r1737, %r1738, 28;
	mov.b64 	%rd2609, {%r1740, %r1739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2589;
	}
	shf.l.wrap.b32 	%r1743, %r1742, %r1741, 20;
	shf.l.wrap.b32 	%r1744, %r1741, %r1742, 20;
	mov.b64 	%rd2610, {%r1744, %r1743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd2590;
	}
	shf.l.wrap.b32 	%r1747, %r1746, %r1745, 3;
	shf.l.wrap.b32 	%r1748, %r1745, %r1746, 3;
	mov.b64 	%rd2611, {%r1748, %r1747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd2596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd2596;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 19;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 19;
	mov.b64 	%rd2612, {%r1752, %r1751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd2602;
	}
	shf.r.wrap.b32 	%r1755, %r1754, %r1753, 3;
	shf.r.wrap.b32 	%r1756, %r1753, %r1754, 3;
	mov.b64 	%rd2613, {%r1756, %r1755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1757}, %rd2581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd2581;
	}
	shf.l.wrap.b32 	%r1759, %r1758, %r1757, 1;
	shf.l.wrap.b32 	%r1760, %r1757, %r1758, 1;
	mov.b64 	%rd2614, {%r1760, %r1759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1762,%dummy}, %rd2587;
	}
	shf.l.wrap.b32 	%r1763, %r1762, %r1761, 6;
	shf.l.wrap.b32 	%r1764, %r1761, %r1762, 6;
	mov.b64 	%rd2615, {%r1764, %r1763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1765}, %rd2593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd2593;
	}
	shf.l.wrap.b32 	%r1767, %r1766, %r1765, 25;
	shf.l.wrap.b32 	%r1768, %r1765, %r1766, 25;
	mov.b64 	%rd2616, {%r1768, %r1767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1770,%dummy}, %rd2599;
	}
	shf.l.wrap.b32 	%r1771, %r1770, %r1769, 8;
	shf.l.wrap.b32 	%r1772, %r1769, %r1770, 8;
	mov.b64 	%rd2617, {%r1772, %r1771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1773}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd2600;
	}
	shf.l.wrap.b32 	%r1775, %r1774, %r1773, 18;
	shf.l.wrap.b32 	%r1776, %r1773, %r1774, 18;
	mov.b64 	%rd2618, {%r1776, %r1775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd2584;
	}
	shf.l.wrap.b32 	%r1779, %r1778, %r1777, 27;
	shf.l.wrap.b32 	%r1780, %r1777, %r1778, 27;
	mov.b64 	%rd2619, {%r1780, %r1779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd2585;
	}
	shf.r.wrap.b32 	%r1783, %r1782, %r1781, 28;
	shf.r.wrap.b32 	%r1784, %r1781, %r1782, 28;
	mov.b64 	%rd2620, {%r1784, %r1783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd2591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd2591;
	}
	shf.l.wrap.b32 	%r1787, %r1786, %r1785, 10;
	shf.l.wrap.b32 	%r1788, %r1785, %r1786, 10;
	mov.b64 	%rd2621, {%r1788, %r1787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd2597;
	}
	shf.l.wrap.b32 	%r1791, %r1790, %r1789, 15;
	shf.l.wrap.b32 	%r1792, %r1789, %r1790, 15;
	mov.b64 	%rd2622, {%r1792, %r1791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1793,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1794}, %rd2603;
	}
	shf.r.wrap.b32 	%r1795, %r1794, %r1793, 8;
	shf.r.wrap.b32 	%r1796, %r1793, %r1794, 8;
	mov.b64 	%rd2623, {%r1796, %r1795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2582;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 2;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 2;
	mov.b64 	%rd2624, {%r1800, %r1799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1801,%dummy}, %rd2588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1802}, %rd2588;
	}
	shf.r.wrap.b32 	%r1803, %r1802, %r1801, 9;
	shf.r.wrap.b32 	%r1804, %r1801, %r1802, 9;
	mov.b64 	%rd2625, {%r1804, %r1803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd2594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd2594;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 25;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 25;
	mov.b64 	%rd2626, {%r1808, %r1807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1809,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1810}, %rd2595;
	}
	shf.r.wrap.b32 	%r1811, %r1810, %r1809, 23;
	shf.r.wrap.b32 	%r1812, %r1809, %r1810, 23;
	mov.b64 	%rd2627, {%r1812, %r1811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd2601;
	}
	shf.l.wrap.b32 	%r1815, %r1814, %r1813, 2;
	shf.l.wrap.b32 	%r1816, %r1813, %r1814, 2;
	mov.b64 	%rd2628, {%r1816, %r1815};
	not.b64 	%rd2629, %rd2605;
	and.b64  	%rd2630, %rd2606, %rd2629;
	xor.b64  	%rd2631, %rd2630, %rd2580;
	not.b64 	%rd2632, %rd2606;
	and.b64  	%rd2633, %rd2607, %rd2632;
	xor.b64  	%rd2634, %rd2633, %rd2605;
	not.b64 	%rd2635, %rd2607;
	and.b64  	%rd2636, %rd2608, %rd2635;
	xor.b64  	%rd2637, %rd2636, %rd2606;
	not.b64 	%rd2638, %rd2608;
	and.b64  	%rd2639, %rd2580, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2607;
	not.b64 	%rd2641, %rd2580;
	and.b64  	%rd2642, %rd2605, %rd2641;
	xor.b64  	%rd2643, %rd2642, %rd2608;
	not.b64 	%rd2644, %rd2610;
	and.b64  	%rd2645, %rd2611, %rd2644;
	xor.b64  	%rd2646, %rd2645, %rd2609;
	not.b64 	%rd2647, %rd2611;
	and.b64  	%rd2648, %rd2612, %rd2647;
	xor.b64  	%rd2649, %rd2648, %rd2610;
	not.b64 	%rd2650, %rd2612;
	and.b64  	%rd2651, %rd2613, %rd2650;
	xor.b64  	%rd2652, %rd2651, %rd2611;
	not.b64 	%rd2653, %rd2613;
	and.b64  	%rd2654, %rd2609, %rd2653;
	xor.b64  	%rd2655, %rd2654, %rd2612;
	not.b64 	%rd2656, %rd2609;
	and.b64  	%rd2657, %rd2610, %rd2656;
	xor.b64  	%rd2658, %rd2657, %rd2613;
	not.b64 	%rd2659, %rd2615;
	and.b64  	%rd2660, %rd2616, %rd2659;
	xor.b64  	%rd2661, %rd2660, %rd2614;
	not.b64 	%rd2662, %rd2616;
	and.b64  	%rd2663, %rd2617, %rd2662;
	xor.b64  	%rd2664, %rd2663, %rd2615;
	not.b64 	%rd2665, %rd2617;
	and.b64  	%rd2666, %rd2618, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2616;
	not.b64 	%rd2668, %rd2618;
	and.b64  	%rd2669, %rd2614, %rd2668;
	xor.b64  	%rd2670, %rd2669, %rd2617;
	not.b64 	%rd2671, %rd2614;
	and.b64  	%rd2672, %rd2615, %rd2671;
	xor.b64  	%rd2673, %rd2672, %rd2618;
	not.b64 	%rd2674, %rd2620;
	and.b64  	%rd2675, %rd2621, %rd2674;
	xor.b64  	%rd2676, %rd2675, %rd2619;
	not.b64 	%rd2677, %rd2621;
	and.b64  	%rd2678, %rd2622, %rd2677;
	xor.b64  	%rd2679, %rd2678, %rd2620;
	not.b64 	%rd2680, %rd2622;
	and.b64  	%rd2681, %rd2623, %rd2680;
	xor.b64  	%rd2682, %rd2681, %rd2621;
	not.b64 	%rd2683, %rd2623;
	and.b64  	%rd2684, %rd2619, %rd2683;
	xor.b64  	%rd2685, %rd2684, %rd2622;
	not.b64 	%rd2686, %rd2619;
	and.b64  	%rd2687, %rd2620, %rd2686;
	xor.b64  	%rd2688, %rd2687, %rd2623;
	not.b64 	%rd2689, %rd2625;
	and.b64  	%rd2690, %rd2626, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2624;
	not.b64 	%rd2692, %rd2626;
	and.b64  	%rd2693, %rd2627, %rd2692;
	xor.b64  	%rd2694, %rd2693, %rd2625;
	not.b64 	%rd2695, %rd2627;
	and.b64  	%rd2696, %rd2628, %rd2695;
	xor.b64  	%rd2697, %rd2696, %rd2626;
	not.b64 	%rd2698, %rd2628;
	and.b64  	%rd2699, %rd2624, %rd2698;
	xor.b64  	%rd2700, %rd2699, %rd2627;
	not.b64 	%rd2701, %rd2624;
	and.b64  	%rd2702, %rd2625, %rd2701;
	xor.b64  	%rd2703, %rd2702, %rd2628;
	xor.b64  	%rd2704, %rd2631, %rd30;
	xor.b64  	%rd2705, %rd2646, %rd2704;
	xor.b64  	%rd2706, %rd2705, %rd2661;
	xor.b64  	%rd2707, %rd2706, %rd2676;
	xor.b64  	%rd2708, %rd2707, %rd2691;
	xor.b64  	%rd2709, %rd2649, %rd2634;
	xor.b64  	%rd2710, %rd2709, %rd2664;
	xor.b64  	%rd2711, %rd2710, %rd2679;
	xor.b64  	%rd2712, %rd2711, %rd2694;
	xor.b64  	%rd2713, %rd2652, %rd2637;
	xor.b64  	%rd2714, %rd2713, %rd2667;
	xor.b64  	%rd2715, %rd2714, %rd2682;
	xor.b64  	%rd2716, %rd2715, %rd2697;
	xor.b64  	%rd2717, %rd2655, %rd2640;
	xor.b64  	%rd2718, %rd2717, %rd2670;
	xor.b64  	%rd2719, %rd2718, %rd2685;
	xor.b64  	%rd2720, %rd2719, %rd2700;
	xor.b64  	%rd2721, %rd2658, %rd2643;
	xor.b64  	%rd2722, %rd2721, %rd2673;
	xor.b64  	%rd2723, %rd2722, %rd2688;
	xor.b64  	%rd2724, %rd2723, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd2712;
	}
	shf.l.wrap.b32 	%r1819, %r1818, %r1817, 1;
	shf.l.wrap.b32 	%r1820, %r1817, %r1818, 1;
	mov.b64 	%rd2725, {%r1820, %r1819};
	xor.b64  	%rd2726, %rd2724, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd2716;
	}
	shf.l.wrap.b32 	%r1823, %r1822, %r1821, 1;
	shf.l.wrap.b32 	%r1824, %r1821, %r1822, 1;
	mov.b64 	%rd2727, {%r1824, %r1823};
	xor.b64  	%rd2728, %rd2727, %rd2708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1825}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd2720;
	}
	shf.l.wrap.b32 	%r1827, %r1826, %r1825, 1;
	shf.l.wrap.b32 	%r1828, %r1825, %r1826, 1;
	mov.b64 	%rd2729, {%r1828, %r1827};
	xor.b64  	%rd2730, %rd2729, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd2724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2724;
	}
	shf.l.wrap.b32 	%r1831, %r1830, %r1829, 1;
	shf.l.wrap.b32 	%r1832, %r1829, %r1830, 1;
	mov.b64 	%rd2731, {%r1832, %r1831};
	xor.b64  	%rd2732, %rd2731, %rd2716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd2708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd2708;
	}
	shf.l.wrap.b32 	%r1835, %r1834, %r1833, 1;
	shf.l.wrap.b32 	%r1836, %r1833, %r1834, 1;
	mov.b64 	%rd2733, {%r1836, %r1835};
	xor.b64  	%rd2734, %rd2720, %rd2733;
	xor.b64  	%rd2735, %rd2726, %rd2704;
	xor.b64  	%rd2736, %rd2728, %rd2634;
	xor.b64  	%rd2737, %rd2730, %rd2637;
	xor.b64  	%rd2738, %rd2732, %rd2640;
	xor.b64  	%rd2739, %rd2734, %rd2643;
	xor.b64  	%rd2740, %rd2726, %rd2646;
	xor.b64  	%rd2741, %rd2728, %rd2649;
	xor.b64  	%rd2742, %rd2730, %rd2652;
	xor.b64  	%rd2743, %rd2732, %rd2655;
	xor.b64  	%rd2744, %rd2734, %rd2658;
	xor.b64  	%rd2745, %rd2726, %rd2661;
	xor.b64  	%rd2746, %rd2728, %rd2664;
	xor.b64  	%rd2747, %rd2730, %rd2667;
	xor.b64  	%rd2748, %rd2732, %rd2670;
	xor.b64  	%rd2749, %rd2734, %rd2673;
	xor.b64  	%rd2750, %rd2726, %rd2676;
	xor.b64  	%rd2751, %rd2728, %rd2679;
	xor.b64  	%rd2752, %rd2730, %rd2682;
	xor.b64  	%rd2753, %rd2732, %rd2685;
	xor.b64  	%rd2754, %rd2734, %rd2688;
	xor.b64  	%rd2755, %rd2726, %rd2691;
	xor.b64  	%rd2756, %rd2728, %rd2694;
	xor.b64  	%rd2757, %rd2730, %rd2697;
	xor.b64  	%rd2758, %rd2732, %rd2700;
	xor.b64  	%rd2759, %rd2734, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd2741;
	}
	shf.r.wrap.b32 	%r1839, %r1838, %r1837, 20;
	shf.r.wrap.b32 	%r1840, %r1837, %r1838, 20;
	mov.b64 	%rd2760, {%r1840, %r1839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd2747;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 21;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 21;
	mov.b64 	%rd2761, {%r1844, %r1843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2753;
	}
	shf.l.wrap.b32 	%r1847, %r1846, %r1845, 21;
	shf.l.wrap.b32 	%r1848, %r1845, %r1846, 21;
	mov.b64 	%rd2762, {%r1848, %r1847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd2759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1850,%dummy}, %rd2759;
	}
	shf.l.wrap.b32 	%r1851, %r1850, %r1849, 14;
	shf.l.wrap.b32 	%r1852, %r1849, %r1850, 14;
	mov.b64 	%rd2763, {%r1852, %r1851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd2738;
	}
	shf.l.wrap.b32 	%r1855, %r1854, %r1853, 28;
	shf.l.wrap.b32 	%r1856, %r1853, %r1854, 28;
	mov.b64 	%rd2764, {%r1856, %r1855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd2744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1858,%dummy}, %rd2744;
	}
	shf.l.wrap.b32 	%r1859, %r1858, %r1857, 20;
	shf.l.wrap.b32 	%r1860, %r1857, %r1858, 20;
	mov.b64 	%rd2765, {%r1860, %r1859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1862,%dummy}, %rd2745;
	}
	shf.l.wrap.b32 	%r1863, %r1862, %r1861, 3;
	shf.l.wrap.b32 	%r1864, %r1861, %r1862, 3;
	mov.b64 	%rd2766, {%r1864, %r1863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1865,%dummy}, %rd2751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1866}, %rd2751;
	}
	shf.r.wrap.b32 	%r1867, %r1866, %r1865, 19;
	shf.r.wrap.b32 	%r1868, %r1865, %r1866, 19;
	mov.b64 	%rd2767, {%r1868, %r1867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1869,%dummy}, %rd2757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1870}, %rd2757;
	}
	shf.r.wrap.b32 	%r1871, %r1870, %r1869, 3;
	shf.r.wrap.b32 	%r1872, %r1869, %r1870, 3;
	mov.b64 	%rd2768, {%r1872, %r1871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd2736;
	}
	shf.l.wrap.b32 	%r1875, %r1874, %r1873, 1;
	shf.l.wrap.b32 	%r1876, %r1873, %r1874, 1;
	mov.b64 	%rd2769, {%r1876, %r1875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd2742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1878,%dummy}, %rd2742;
	}
	shf.l.wrap.b32 	%r1879, %r1878, %r1877, 6;
	shf.l.wrap.b32 	%r1880, %r1877, %r1878, 6;
	mov.b64 	%rd2770, {%r1880, %r1879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1881}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd2748;
	}
	shf.l.wrap.b32 	%r1883, %r1882, %r1881, 25;
	shf.l.wrap.b32 	%r1884, %r1881, %r1882, 25;
	mov.b64 	%rd2771, {%r1884, %r1883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd2754;
	}
	shf.l.wrap.b32 	%r1887, %r1886, %r1885, 8;
	shf.l.wrap.b32 	%r1888, %r1885, %r1886, 8;
	mov.b64 	%rd2772, {%r1888, %r1887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1889}, %rd2755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd2755;
	}
	shf.l.wrap.b32 	%r1891, %r1890, %r1889, 18;
	shf.l.wrap.b32 	%r1892, %r1889, %r1890, 18;
	mov.b64 	%rd2773, {%r1892, %r1891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd2739;
	}
	shf.l.wrap.b32 	%r1895, %r1894, %r1893, 27;
	shf.l.wrap.b32 	%r1896, %r1893, %r1894, 27;
	mov.b64 	%rd2774, {%r1896, %r1895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1897,%dummy}, %rd2740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1898}, %rd2740;
	}
	shf.r.wrap.b32 	%r1899, %r1898, %r1897, 28;
	shf.r.wrap.b32 	%r1900, %r1897, %r1898, 28;
	mov.b64 	%rd2775, {%r1900, %r1899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd2746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd2746;
	}
	shf.l.wrap.b32 	%r1903, %r1902, %r1901, 10;
	shf.l.wrap.b32 	%r1904, %r1901, %r1902, 10;
	mov.b64 	%rd2776, {%r1904, %r1903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1905}, %rd2752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd2752;
	}
	shf.l.wrap.b32 	%r1907, %r1906, %r1905, 15;
	shf.l.wrap.b32 	%r1908, %r1905, %r1906, 15;
	mov.b64 	%rd2777, {%r1908, %r1907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd2758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd2758;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 8;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 8;
	mov.b64 	%rd2778, {%r1912, %r1911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1913,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1914}, %rd2737;
	}
	shf.r.wrap.b32 	%r1915, %r1914, %r1913, 2;
	shf.r.wrap.b32 	%r1916, %r1913, %r1914, 2;
	mov.b64 	%rd2779, {%r1916, %r1915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd2743;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 9;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 9;
	mov.b64 	%rd2780, {%r1920, %r1919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1921,%dummy}, %rd2749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1922}, %rd2749;
	}
	shf.r.wrap.b32 	%r1923, %r1922, %r1921, 25;
	shf.r.wrap.b32 	%r1924, %r1921, %r1922, 25;
	mov.b64 	%rd2781, {%r1924, %r1923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd2750;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 23;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 23;
	mov.b64 	%rd2782, {%r1928, %r1927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1929}, %rd2756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd2756;
	}
	shf.l.wrap.b32 	%r1931, %r1930, %r1929, 2;
	shf.l.wrap.b32 	%r1932, %r1929, %r1930, 2;
	mov.b64 	%rd2783, {%r1932, %r1931};
	not.b64 	%rd2784, %rd2760;
	and.b64  	%rd2785, %rd2761, %rd2784;
	xor.b64  	%rd2786, %rd2785, %rd2735;
	not.b64 	%rd2787, %rd2761;
	and.b64  	%rd2788, %rd2762, %rd2787;
	xor.b64  	%rd2789, %rd2788, %rd2760;
	not.b64 	%rd2790, %rd2762;
	and.b64  	%rd2791, %rd2763, %rd2790;
	xor.b64  	%rd2792, %rd2791, %rd2761;
	not.b64 	%rd2793, %rd2763;
	and.b64  	%rd2794, %rd2735, %rd2793;
	xor.b64  	%rd2795, %rd2794, %rd2762;
	not.b64 	%rd2796, %rd2735;
	and.b64  	%rd2797, %rd2760, %rd2796;
	xor.b64  	%rd2798, %rd2797, %rd2763;
	not.b64 	%rd2799, %rd2765;
	and.b64  	%rd2800, %rd2766, %rd2799;
	xor.b64  	%rd2801, %rd2800, %rd2764;
	not.b64 	%rd2802, %rd2766;
	and.b64  	%rd2803, %rd2767, %rd2802;
	xor.b64  	%rd2804, %rd2803, %rd2765;
	not.b64 	%rd2805, %rd2767;
	and.b64  	%rd2806, %rd2768, %rd2805;
	xor.b64  	%rd2807, %rd2806, %rd2766;
	not.b64 	%rd2808, %rd2768;
	and.b64  	%rd2809, %rd2764, %rd2808;
	xor.b64  	%rd2810, %rd2809, %rd2767;
	not.b64 	%rd2811, %rd2764;
	and.b64  	%rd2812, %rd2765, %rd2811;
	xor.b64  	%rd2813, %rd2812, %rd2768;
	not.b64 	%rd2814, %rd2770;
	and.b64  	%rd2815, %rd2771, %rd2814;
	xor.b64  	%rd2816, %rd2815, %rd2769;
	not.b64 	%rd2817, %rd2771;
	and.b64  	%rd2818, %rd2772, %rd2817;
	xor.b64  	%rd2819, %rd2818, %rd2770;
	not.b64 	%rd2820, %rd2772;
	and.b64  	%rd2821, %rd2773, %rd2820;
	xor.b64  	%rd2822, %rd2821, %rd2771;
	not.b64 	%rd2823, %rd2773;
	and.b64  	%rd2824, %rd2769, %rd2823;
	xor.b64  	%rd2825, %rd2824, %rd2772;
	not.b64 	%rd2826, %rd2769;
	and.b64  	%rd2827, %rd2770, %rd2826;
	xor.b64  	%rd2828, %rd2827, %rd2773;
	not.b64 	%rd2829, %rd2775;
	and.b64  	%rd2830, %rd2776, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2774;
	not.b64 	%rd2832, %rd2776;
	and.b64  	%rd2833, %rd2777, %rd2832;
	xor.b64  	%rd2834, %rd2833, %rd2775;
	not.b64 	%rd2835, %rd2777;
	and.b64  	%rd2836, %rd2778, %rd2835;
	xor.b64  	%rd2837, %rd2836, %rd2776;
	not.b64 	%rd2838, %rd2778;
	and.b64  	%rd2839, %rd2774, %rd2838;
	xor.b64  	%rd2840, %rd2839, %rd2777;
	not.b64 	%rd2841, %rd2774;
	and.b64  	%rd2842, %rd2775, %rd2841;
	xor.b64  	%rd2843, %rd2842, %rd2778;
	not.b64 	%rd2844, %rd2780;
	and.b64  	%rd2845, %rd2781, %rd2844;
	xor.b64  	%rd2846, %rd2845, %rd2779;
	not.b64 	%rd2847, %rd2781;
	and.b64  	%rd2848, %rd2782, %rd2847;
	xor.b64  	%rd2849, %rd2848, %rd2780;
	not.b64 	%rd2850, %rd2782;
	and.b64  	%rd2851, %rd2783, %rd2850;
	xor.b64  	%rd2852, %rd2851, %rd2781;
	not.b64 	%rd2853, %rd2783;
	and.b64  	%rd2854, %rd2779, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd2782;
	not.b64 	%rd2856, %rd2779;
	and.b64  	%rd2857, %rd2780, %rd2856;
	xor.b64  	%rd2858, %rd2857, %rd2783;
	xor.b64  	%rd2859, %rd2786, %rd31;
	xor.b64  	%rd2860, %rd2801, %rd2859;
	xor.b64  	%rd2861, %rd2860, %rd2816;
	xor.b64  	%rd2862, %rd2861, %rd2831;
	xor.b64  	%rd2863, %rd2862, %rd2846;
	xor.b64  	%rd2864, %rd2804, %rd2789;
	xor.b64  	%rd2865, %rd2864, %rd2819;
	xor.b64  	%rd2866, %rd2865, %rd2834;
	xor.b64  	%rd2867, %rd2866, %rd2849;
	xor.b64  	%rd2868, %rd2807, %rd2792;
	xor.b64  	%rd2869, %rd2868, %rd2822;
	xor.b64  	%rd2870, %rd2869, %rd2837;
	xor.b64  	%rd2871, %rd2870, %rd2852;
	xor.b64  	%rd2872, %rd2810, %rd2795;
	xor.b64  	%rd2873, %rd2872, %rd2825;
	xor.b64  	%rd2874, %rd2873, %rd2840;
	xor.b64  	%rd2875, %rd2874, %rd2855;
	xor.b64  	%rd2876, %rd2813, %rd2798;
	xor.b64  	%rd2877, %rd2876, %rd2828;
	xor.b64  	%rd2878, %rd2877, %rd2843;
	xor.b64  	%rd2879, %rd2878, %rd2858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd2867;
	}
	shf.l.wrap.b32 	%r1935, %r1934, %r1933, 1;
	shf.l.wrap.b32 	%r1936, %r1933, %r1934, 1;
	mov.b64 	%rd2880, {%r1936, %r1935};
	xor.b64  	%rd2881, %rd2879, %rd2880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1937}, %rd2871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1938,%dummy}, %rd2871;
	}
	shf.l.wrap.b32 	%r1939, %r1938, %r1937, 1;
	shf.l.wrap.b32 	%r1940, %r1937, %r1938, 1;
	mov.b64 	%rd2882, {%r1940, %r1939};
	xor.b64  	%rd2883, %rd2882, %rd2863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd2875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd2875;
	}
	shf.l.wrap.b32 	%r1943, %r1942, %r1941, 1;
	shf.l.wrap.b32 	%r1944, %r1941, %r1942, 1;
	mov.b64 	%rd2884, {%r1944, %r1943};
	xor.b64  	%rd2885, %rd2884, %rd2867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1945}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1946,%dummy}, %rd2879;
	}
	shf.l.wrap.b32 	%r1947, %r1946, %r1945, 1;
	shf.l.wrap.b32 	%r1948, %r1945, %r1946, 1;
	mov.b64 	%rd2886, {%r1948, %r1947};
	xor.b64  	%rd2887, %rd2886, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd2863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2863;
	}
	shf.l.wrap.b32 	%r1951, %r1950, %r1949, 1;
	shf.l.wrap.b32 	%r1952, %r1949, %r1950, 1;
	mov.b64 	%rd2888, {%r1952, %r1951};
	xor.b64  	%rd2889, %rd2875, %rd2888;
	xor.b64  	%rd2890, %rd2881, %rd2859;
	xor.b64  	%rd2891, %rd2883, %rd2789;
	xor.b64  	%rd2892, %rd2885, %rd2792;
	xor.b64  	%rd2893, %rd2887, %rd2795;
	xor.b64  	%rd2894, %rd2889, %rd2798;
	xor.b64  	%rd2895, %rd2881, %rd2801;
	xor.b64  	%rd2896, %rd2883, %rd2804;
	xor.b64  	%rd2897, %rd2885, %rd2807;
	xor.b64  	%rd2898, %rd2887, %rd2810;
	xor.b64  	%rd2899, %rd2889, %rd2813;
	xor.b64  	%rd2900, %rd2881, %rd2816;
	xor.b64  	%rd2901, %rd2883, %rd2819;
	xor.b64  	%rd2902, %rd2885, %rd2822;
	xor.b64  	%rd2903, %rd2887, %rd2825;
	xor.b64  	%rd2904, %rd2889, %rd2828;
	xor.b64  	%rd2905, %rd2881, %rd2831;
	xor.b64  	%rd2906, %rd2883, %rd2834;
	xor.b64  	%rd2907, %rd2885, %rd2837;
	xor.b64  	%rd2908, %rd2887, %rd2840;
	xor.b64  	%rd2909, %rd2889, %rd2843;
	xor.b64  	%rd2910, %rd2881, %rd2846;
	xor.b64  	%rd2911, %rd2883, %rd2849;
	xor.b64  	%rd2912, %rd2885, %rd2852;
	xor.b64  	%rd2913, %rd2887, %rd2855;
	xor.b64  	%rd2914, %rd2889, %rd2858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd2896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd2896;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 20;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 20;
	mov.b64 	%rd2915, {%r1956, %r1955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd2902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1958}, %rd2902;
	}
	shf.r.wrap.b32 	%r1959, %r1958, %r1957, 21;
	shf.r.wrap.b32 	%r1960, %r1957, %r1958, 21;
	mov.b64 	%rd2916, {%r1960, %r1959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd2908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd2908;
	}
	shf.l.wrap.b32 	%r1963, %r1962, %r1961, 21;
	shf.l.wrap.b32 	%r1964, %r1961, %r1962, 21;
	mov.b64 	%rd2917, {%r1964, %r1963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd2914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1966,%dummy}, %rd2914;
	}
	shf.l.wrap.b32 	%r1967, %r1966, %r1965, 14;
	shf.l.wrap.b32 	%r1968, %r1965, %r1966, 14;
	mov.b64 	%rd2918, {%r1968, %r1967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd2893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd2893;
	}
	shf.l.wrap.b32 	%r1971, %r1970, %r1969, 28;
	shf.l.wrap.b32 	%r1972, %r1969, %r1970, 28;
	mov.b64 	%rd2919, {%r1972, %r1971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd2899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1974,%dummy}, %rd2899;
	}
	shf.l.wrap.b32 	%r1975, %r1974, %r1973, 20;
	shf.l.wrap.b32 	%r1976, %r1973, %r1974, 20;
	mov.b64 	%rd2920, {%r1976, %r1975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd2900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd2900;
	}
	shf.l.wrap.b32 	%r1979, %r1978, %r1977, 3;
	shf.l.wrap.b32 	%r1980, %r1977, %r1978, 3;
	mov.b64 	%rd2921, {%r1980, %r1979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd2906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd2906;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 19;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 19;
	mov.b64 	%rd2922, {%r1984, %r1983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1985,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1986}, %rd2912;
	}
	shf.r.wrap.b32 	%r1987, %r1986, %r1985, 3;
	shf.r.wrap.b32 	%r1988, %r1985, %r1986, 3;
	mov.b64 	%rd2923, {%r1988, %r1987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd2891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1990,%dummy}, %rd2891;
	}
	shf.l.wrap.b32 	%r1991, %r1990, %r1989, 1;
	shf.l.wrap.b32 	%r1992, %r1989, %r1990, 1;
	mov.b64 	%rd2924, {%r1992, %r1991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1993}, %rd2897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2897;
	}
	shf.l.wrap.b32 	%r1995, %r1994, %r1993, 6;
	shf.l.wrap.b32 	%r1996, %r1993, %r1994, 6;
	mov.b64 	%rd2925, {%r1996, %r1995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd2903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1998,%dummy}, %rd2903;
	}
	shf.l.wrap.b32 	%r1999, %r1998, %r1997, 25;
	shf.l.wrap.b32 	%r2000, %r1997, %r1998, 25;
	mov.b64 	%rd2926, {%r2000, %r1999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2909;
	}
	shf.l.wrap.b32 	%r2003, %r2002, %r2001, 8;
	shf.l.wrap.b32 	%r2004, %r2001, %r2002, 8;
	mov.b64 	%rd2927, {%r2004, %r2003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd2910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2006,%dummy}, %rd2910;
	}
	shf.l.wrap.b32 	%r2007, %r2006, %r2005, 18;
	shf.l.wrap.b32 	%r2008, %r2005, %r2006, 18;
	mov.b64 	%rd2928, {%r2008, %r2007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2009}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2894;
	}
	shf.l.wrap.b32 	%r2011, %r2010, %r2009, 27;
	shf.l.wrap.b32 	%r2012, %r2009, %r2010, 27;
	mov.b64 	%rd2929, {%r2012, %r2011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd2895;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 28;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 28;
	mov.b64 	%rd2930, {%r2016, %r2015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2017}, %rd2901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd2901;
	}
	shf.l.wrap.b32 	%r2019, %r2018, %r2017, 10;
	shf.l.wrap.b32 	%r2020, %r2017, %r2018, 10;
	mov.b64 	%rd2931, {%r2020, %r2019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2022,%dummy}, %rd2907;
	}
	shf.l.wrap.b32 	%r2023, %r2022, %r2021, 15;
	shf.l.wrap.b32 	%r2024, %r2021, %r2022, 15;
	mov.b64 	%rd2932, {%r2024, %r2023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2025,%dummy}, %rd2913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2026}, %rd2913;
	}
	shf.r.wrap.b32 	%r2027, %r2026, %r2025, 8;
	shf.r.wrap.b32 	%r2028, %r2025, %r2026, 8;
	mov.b64 	%rd2933, {%r2028, %r2027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2029,%dummy}, %rd2892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2030}, %rd2892;
	}
	shf.r.wrap.b32 	%r2031, %r2030, %r2029, 2;
	shf.r.wrap.b32 	%r2032, %r2029, %r2030, 2;
	mov.b64 	%rd2934, {%r2032, %r2031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2033,%dummy}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2034}, %rd2898;
	}
	shf.r.wrap.b32 	%r2035, %r2034, %r2033, 9;
	shf.r.wrap.b32 	%r2036, %r2033, %r2034, 9;
	mov.b64 	%rd2935, {%r2036, %r2035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd2904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd2904;
	}
	shf.r.wrap.b32 	%r2039, %r2038, %r2037, 25;
	shf.r.wrap.b32 	%r2040, %r2037, %r2038, 25;
	mov.b64 	%rd2936, {%r2040, %r2039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2041,%dummy}, %rd2905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2042}, %rd2905;
	}
	shf.r.wrap.b32 	%r2043, %r2042, %r2041, 23;
	shf.r.wrap.b32 	%r2044, %r2041, %r2042, 23;
	mov.b64 	%rd2937, {%r2044, %r2043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2046,%dummy}, %rd2911;
	}
	shf.l.wrap.b32 	%r2047, %r2046, %r2045, 2;
	shf.l.wrap.b32 	%r2048, %r2045, %r2046, 2;
	mov.b64 	%rd2938, {%r2048, %r2047};
	not.b64 	%rd2939, %rd2915;
	and.b64  	%rd2940, %rd2916, %rd2939;
	xor.b64  	%rd2941, %rd2940, %rd2890;
	not.b64 	%rd2942, %rd2916;
	and.b64  	%rd2943, %rd2917, %rd2942;
	xor.b64  	%rd2944, %rd2943, %rd2915;
	not.b64 	%rd2945, %rd2917;
	and.b64  	%rd2946, %rd2918, %rd2945;
	xor.b64  	%rd2947, %rd2946, %rd2916;
	not.b64 	%rd2948, %rd2918;
	and.b64  	%rd2949, %rd2890, %rd2948;
	xor.b64  	%rd2950, %rd2949, %rd2917;
	not.b64 	%rd2951, %rd2890;
	and.b64  	%rd2952, %rd2915, %rd2951;
	xor.b64  	%rd2953, %rd2952, %rd2918;
	not.b64 	%rd2954, %rd2920;
	and.b64  	%rd2955, %rd2921, %rd2954;
	xor.b64  	%rd2956, %rd2955, %rd2919;
	not.b64 	%rd2957, %rd2921;
	and.b64  	%rd2958, %rd2922, %rd2957;
	xor.b64  	%rd2959, %rd2958, %rd2920;
	not.b64 	%rd2960, %rd2922;
	and.b64  	%rd2961, %rd2923, %rd2960;
	xor.b64  	%rd2962, %rd2961, %rd2921;
	not.b64 	%rd2963, %rd2923;
	and.b64  	%rd2964, %rd2919, %rd2963;
	xor.b64  	%rd2965, %rd2964, %rd2922;
	not.b64 	%rd2966, %rd2919;
	and.b64  	%rd2967, %rd2920, %rd2966;
	xor.b64  	%rd2968, %rd2967, %rd2923;
	not.b64 	%rd2969, %rd2925;
	and.b64  	%rd2970, %rd2926, %rd2969;
	xor.b64  	%rd2971, %rd2970, %rd2924;
	not.b64 	%rd2972, %rd2926;
	and.b64  	%rd2973, %rd2927, %rd2972;
	xor.b64  	%rd2974, %rd2973, %rd2925;
	not.b64 	%rd2975, %rd2927;
	and.b64  	%rd2976, %rd2928, %rd2975;
	xor.b64  	%rd2977, %rd2976, %rd2926;
	not.b64 	%rd2978, %rd2928;
	and.b64  	%rd2979, %rd2924, %rd2978;
	xor.b64  	%rd2980, %rd2979, %rd2927;
	not.b64 	%rd2981, %rd2924;
	and.b64  	%rd2982, %rd2925, %rd2981;
	xor.b64  	%rd2983, %rd2982, %rd2928;
	not.b64 	%rd2984, %rd2930;
	and.b64  	%rd2985, %rd2931, %rd2984;
	xor.b64  	%rd2986, %rd2985, %rd2929;
	not.b64 	%rd2987, %rd2931;
	and.b64  	%rd2988, %rd2932, %rd2987;
	xor.b64  	%rd2989, %rd2988, %rd2930;
	not.b64 	%rd2990, %rd2932;
	and.b64  	%rd2991, %rd2933, %rd2990;
	xor.b64  	%rd2992, %rd2991, %rd2931;
	not.b64 	%rd2993, %rd2933;
	and.b64  	%rd2994, %rd2929, %rd2993;
	xor.b64  	%rd2995, %rd2994, %rd2932;
	not.b64 	%rd2996, %rd2929;
	and.b64  	%rd2997, %rd2930, %rd2996;
	xor.b64  	%rd2998, %rd2997, %rd2933;
	not.b64 	%rd2999, %rd2935;
	and.b64  	%rd3000, %rd2936, %rd2999;
	xor.b64  	%rd3001, %rd3000, %rd2934;
	not.b64 	%rd3002, %rd2936;
	and.b64  	%rd3003, %rd2937, %rd3002;
	xor.b64  	%rd3004, %rd3003, %rd2935;
	not.b64 	%rd3005, %rd2937;
	and.b64  	%rd3006, %rd2938, %rd3005;
	xor.b64  	%rd3007, %rd3006, %rd2936;
	not.b64 	%rd3008, %rd2938;
	and.b64  	%rd3009, %rd2934, %rd3008;
	xor.b64  	%rd3010, %rd3009, %rd2937;
	not.b64 	%rd3011, %rd2934;
	and.b64  	%rd3012, %rd2935, %rd3011;
	xor.b64  	%rd3013, %rd3012, %rd2938;
	xor.b64  	%rd3014, %rd2941, %rd32;
	xor.b64  	%rd3015, %rd2956, %rd3014;
	xor.b64  	%rd3016, %rd3015, %rd2971;
	xor.b64  	%rd3017, %rd3016, %rd2986;
	xor.b64  	%rd3018, %rd3017, %rd3001;
	xor.b64  	%rd3019, %rd2959, %rd2944;
	xor.b64  	%rd3020, %rd3019, %rd2974;
	xor.b64  	%rd3021, %rd3020, %rd2989;
	xor.b64  	%rd3022, %rd3021, %rd3004;
	xor.b64  	%rd3023, %rd2962, %rd2947;
	xor.b64  	%rd3024, %rd3023, %rd2977;
	xor.b64  	%rd3025, %rd3024, %rd2992;
	xor.b64  	%rd3026, %rd3025, %rd3007;
	xor.b64  	%rd3027, %rd2965, %rd2950;
	xor.b64  	%rd3028, %rd3027, %rd2980;
	xor.b64  	%rd3029, %rd3028, %rd2995;
	xor.b64  	%rd3030, %rd3029, %rd3010;
	xor.b64  	%rd3031, %rd2968, %rd2953;
	xor.b64  	%rd3032, %rd3031, %rd2983;
	xor.b64  	%rd3033, %rd3032, %rd2998;
	xor.b64  	%rd3034, %rd3033, %rd3013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2049}, %rd3022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd3022;
	}
	shf.l.wrap.b32 	%r2051, %r2050, %r2049, 1;
	shf.l.wrap.b32 	%r2052, %r2049, %r2050, 1;
	mov.b64 	%rd3035, {%r2052, %r2051};
	xor.b64  	%rd3036, %rd3034, %rd3035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2053}, %rd3026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd3026;
	}
	shf.l.wrap.b32 	%r2055, %r2054, %r2053, 1;
	shf.l.wrap.b32 	%r2056, %r2053, %r2054, 1;
	mov.b64 	%rd3037, {%r2056, %r2055};
	xor.b64  	%rd3038, %rd3037, %rd3018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2057}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2058,%dummy}, %rd3030;
	}
	shf.l.wrap.b32 	%r2059, %r2058, %r2057, 1;
	shf.l.wrap.b32 	%r2060, %r2057, %r2058, 1;
	mov.b64 	%rd3039, {%r2060, %r2059};
	xor.b64  	%rd3040, %rd3039, %rd3022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd3034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2062,%dummy}, %rd3034;
	}
	shf.l.wrap.b32 	%r2063, %r2062, %r2061, 1;
	shf.l.wrap.b32 	%r2064, %r2061, %r2062, 1;
	mov.b64 	%rd3041, {%r2064, %r2063};
	xor.b64  	%rd3042, %rd3041, %rd3026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd3018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2066,%dummy}, %rd3018;
	}
	shf.l.wrap.b32 	%r2067, %r2066, %r2065, 1;
	shf.l.wrap.b32 	%r2068, %r2065, %r2066, 1;
	mov.b64 	%rd3043, {%r2068, %r2067};
	xor.b64  	%rd3044, %rd3030, %rd3043;
	xor.b64  	%rd3045, %rd3036, %rd3014;
	xor.b64  	%rd3046, %rd3038, %rd2944;
	xor.b64  	%rd3047, %rd3040, %rd2947;
	xor.b64  	%rd3048, %rd3042, %rd2950;
	xor.b64  	%rd3049, %rd3044, %rd2953;
	xor.b64  	%rd3050, %rd3036, %rd2956;
	xor.b64  	%rd3051, %rd3038, %rd2959;
	xor.b64  	%rd3052, %rd3040, %rd2962;
	xor.b64  	%rd3053, %rd3042, %rd2965;
	xor.b64  	%rd3054, %rd3044, %rd2968;
	xor.b64  	%rd3055, %rd3036, %rd2971;
	xor.b64  	%rd3056, %rd3038, %rd2974;
	xor.b64  	%rd3057, %rd3040, %rd2977;
	xor.b64  	%rd3058, %rd3042, %rd2980;
	xor.b64  	%rd3059, %rd3044, %rd2983;
	xor.b64  	%rd3060, %rd3036, %rd2986;
	xor.b64  	%rd3061, %rd3038, %rd2989;
	xor.b64  	%rd3062, %rd3040, %rd2992;
	xor.b64  	%rd3063, %rd3042, %rd2995;
	xor.b64  	%rd3064, %rd3044, %rd2998;
	xor.b64  	%rd3065, %rd3036, %rd3001;
	xor.b64  	%rd3066, %rd3038, %rd3004;
	xor.b64  	%rd3067, %rd3040, %rd3007;
	xor.b64  	%rd3068, %rd3042, %rd3010;
	xor.b64  	%rd3069, %rd3044, %rd3013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd3051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2070}, %rd3051;
	}
	shf.r.wrap.b32 	%r2071, %r2070, %r2069, 20;
	shf.r.wrap.b32 	%r2072, %r2069, %r2070, 20;
	mov.b64 	%rd3070, {%r2072, %r2071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2073,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2074}, %rd3057;
	}
	shf.r.wrap.b32 	%r2075, %r2074, %r2073, 21;
	shf.r.wrap.b32 	%r2076, %r2073, %r2074, 21;
	mov.b64 	%rd3071, {%r2076, %r2075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2077}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2078,%dummy}, %rd3063;
	}
	shf.l.wrap.b32 	%r2079, %r2078, %r2077, 21;
	shf.l.wrap.b32 	%r2080, %r2077, %r2078, 21;
	mov.b64 	%rd3072, {%r2080, %r2079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd3069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2082,%dummy}, %rd3069;
	}
	shf.l.wrap.b32 	%r2083, %r2082, %r2081, 14;
	shf.l.wrap.b32 	%r2084, %r2081, %r2082, 14;
	mov.b64 	%rd3073, {%r2084, %r2083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd3048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2086,%dummy}, %rd3048;
	}
	shf.l.wrap.b32 	%r2087, %r2086, %r2085, 28;
	shf.l.wrap.b32 	%r2088, %r2085, %r2086, 28;
	mov.b64 	%rd3074, {%r2088, %r2087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2089}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd3054;
	}
	shf.l.wrap.b32 	%r2091, %r2090, %r2089, 20;
	shf.l.wrap.b32 	%r2092, %r2089, %r2090, 20;
	mov.b64 	%rd3075, {%r2092, %r2091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2093}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2094,%dummy}, %rd3055;
	}
	shf.l.wrap.b32 	%r2095, %r2094, %r2093, 3;
	shf.l.wrap.b32 	%r2096, %r2093, %r2094, 3;
	mov.b64 	%rd3076, {%r2096, %r2095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2097,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2098}, %rd3061;
	}
	shf.r.wrap.b32 	%r2099, %r2098, %r2097, 19;
	shf.r.wrap.b32 	%r2100, %r2097, %r2098, 19;
	mov.b64 	%rd3077, {%r2100, %r2099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd3067;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 3;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 3;
	mov.b64 	%rd3078, {%r2104, %r2103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2105}, %rd3046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd3046;
	}
	shf.l.wrap.b32 	%r2107, %r2106, %r2105, 1;
	shf.l.wrap.b32 	%r2108, %r2105, %r2106, 1;
	mov.b64 	%rd3079, {%r2108, %r2107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2109}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2110,%dummy}, %rd3052;
	}
	shf.l.wrap.b32 	%r2111, %r2110, %r2109, 6;
	shf.l.wrap.b32 	%r2112, %r2109, %r2110, 6;
	mov.b64 	%rd3080, {%r2112, %r2111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2113}, %rd3058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd3058;
	}
	shf.l.wrap.b32 	%r2115, %r2114, %r2113, 25;
	shf.l.wrap.b32 	%r2116, %r2113, %r2114, 25;
	mov.b64 	%rd3081, {%r2116, %r2115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2117}, %rd3064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2118,%dummy}, %rd3064;
	}
	shf.l.wrap.b32 	%r2119, %r2118, %r2117, 8;
	shf.l.wrap.b32 	%r2120, %r2117, %r2118, 8;
	mov.b64 	%rd3082, {%r2120, %r2119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2121}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd3065;
	}
	shf.l.wrap.b32 	%r2123, %r2122, %r2121, 18;
	shf.l.wrap.b32 	%r2124, %r2121, %r2122, 18;
	mov.b64 	%rd3083, {%r2124, %r2123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2125}, %rd3049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2126,%dummy}, %rd3049;
	}
	shf.l.wrap.b32 	%r2127, %r2126, %r2125, 27;
	shf.l.wrap.b32 	%r2128, %r2125, %r2126, 27;
	mov.b64 	%rd3084, {%r2128, %r2127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2129,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2130}, %rd3050;
	}
	shf.r.wrap.b32 	%r2131, %r2130, %r2129, 28;
	shf.r.wrap.b32 	%r2132, %r2129, %r2130, 28;
	mov.b64 	%rd3085, {%r2132, %r2131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd3056;
	}
	shf.l.wrap.b32 	%r2135, %r2134, %r2133, 10;
	shf.l.wrap.b32 	%r2136, %r2133, %r2134, 10;
	mov.b64 	%rd3086, {%r2136, %r2135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2137}, %rd3062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2138,%dummy}, %rd3062;
	}
	shf.l.wrap.b32 	%r2139, %r2138, %r2137, 15;
	shf.l.wrap.b32 	%r2140, %r2137, %r2138, 15;
	mov.b64 	%rd3087, {%r2140, %r2139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd3068;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 8;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 8;
	mov.b64 	%rd3088, {%r2144, %r2143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2145,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2146}, %rd3047;
	}
	shf.r.wrap.b32 	%r2147, %r2146, %r2145, 2;
	shf.r.wrap.b32 	%r2148, %r2145, %r2146, 2;
	mov.b64 	%rd3089, {%r2148, %r2147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd3053;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 9;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 9;
	mov.b64 	%rd3090, {%r2152, %r2151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2153,%dummy}, %rd3059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2154}, %rd3059;
	}
	shf.r.wrap.b32 	%r2155, %r2154, %r2153, 25;
	shf.r.wrap.b32 	%r2156, %r2153, %r2154, 25;
	mov.b64 	%rd3091, {%r2156, %r2155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd3060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd3060;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 23;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 23;
	mov.b64 	%rd3092, {%r2160, %r2159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd3066;
	}
	shf.l.wrap.b32 	%r2163, %r2162, %r2161, 2;
	shf.l.wrap.b32 	%r2164, %r2161, %r2162, 2;
	mov.b64 	%rd3093, {%r2164, %r2163};
	not.b64 	%rd3094, %rd3070;
	and.b64  	%rd3095, %rd3071, %rd3094;
	xor.b64  	%rd3096, %rd3095, %rd3045;
	not.b64 	%rd3097, %rd3071;
	and.b64  	%rd3098, %rd3072, %rd3097;
	xor.b64  	%rd3099, %rd3098, %rd3070;
	not.b64 	%rd3100, %rd3072;
	and.b64  	%rd3101, %rd3073, %rd3100;
	xor.b64  	%rd3102, %rd3101, %rd3071;
	not.b64 	%rd3103, %rd3073;
	and.b64  	%rd3104, %rd3045, %rd3103;
	xor.b64  	%rd3105, %rd3104, %rd3072;
	not.b64 	%rd3106, %rd3045;
	and.b64  	%rd3107, %rd3070, %rd3106;
	xor.b64  	%rd3108, %rd3107, %rd3073;
	not.b64 	%rd3109, %rd3075;
	and.b64  	%rd3110, %rd3076, %rd3109;
	xor.b64  	%rd3111, %rd3110, %rd3074;
	not.b64 	%rd3112, %rd3076;
	and.b64  	%rd3113, %rd3077, %rd3112;
	xor.b64  	%rd3114, %rd3113, %rd3075;
	not.b64 	%rd3115, %rd3077;
	and.b64  	%rd3116, %rd3078, %rd3115;
	xor.b64  	%rd3117, %rd3116, %rd3076;
	not.b64 	%rd3118, %rd3078;
	and.b64  	%rd3119, %rd3074, %rd3118;
	xor.b64  	%rd3120, %rd3119, %rd3077;
	not.b64 	%rd3121, %rd3074;
	and.b64  	%rd3122, %rd3075, %rd3121;
	xor.b64  	%rd3123, %rd3122, %rd3078;
	not.b64 	%rd3124, %rd3080;
	and.b64  	%rd3125, %rd3081, %rd3124;
	xor.b64  	%rd3126, %rd3125, %rd3079;
	not.b64 	%rd3127, %rd3081;
	and.b64  	%rd3128, %rd3082, %rd3127;
	xor.b64  	%rd3129, %rd3128, %rd3080;
	not.b64 	%rd3130, %rd3082;
	and.b64  	%rd3131, %rd3083, %rd3130;
	xor.b64  	%rd3132, %rd3131, %rd3081;
	not.b64 	%rd3133, %rd3083;
	and.b64  	%rd3134, %rd3079, %rd3133;
	xor.b64  	%rd3135, %rd3134, %rd3082;
	not.b64 	%rd3136, %rd3079;
	and.b64  	%rd3137, %rd3080, %rd3136;
	xor.b64  	%rd3138, %rd3137, %rd3083;
	not.b64 	%rd3139, %rd3085;
	and.b64  	%rd3140, %rd3086, %rd3139;
	xor.b64  	%rd3141, %rd3140, %rd3084;
	not.b64 	%rd3142, %rd3086;
	and.b64  	%rd3143, %rd3087, %rd3142;
	xor.b64  	%rd3144, %rd3143, %rd3085;
	not.b64 	%rd3145, %rd3087;
	and.b64  	%rd3146, %rd3088, %rd3145;
	xor.b64  	%rd3147, %rd3146, %rd3086;
	not.b64 	%rd3148, %rd3088;
	and.b64  	%rd3149, %rd3084, %rd3148;
	xor.b64  	%rd3150, %rd3149, %rd3087;
	not.b64 	%rd3151, %rd3084;
	and.b64  	%rd3152, %rd3085, %rd3151;
	xor.b64  	%rd3153, %rd3152, %rd3088;
	not.b64 	%rd3154, %rd3090;
	and.b64  	%rd3155, %rd3091, %rd3154;
	xor.b64  	%rd3156, %rd3155, %rd3089;
	not.b64 	%rd3157, %rd3091;
	and.b64  	%rd3158, %rd3092, %rd3157;
	xor.b64  	%rd3159, %rd3158, %rd3090;
	not.b64 	%rd3160, %rd3092;
	and.b64  	%rd3161, %rd3093, %rd3160;
	xor.b64  	%rd3162, %rd3161, %rd3091;
	not.b64 	%rd3163, %rd3093;
	and.b64  	%rd3164, %rd3089, %rd3163;
	xor.b64  	%rd3165, %rd3164, %rd3092;
	not.b64 	%rd3166, %rd3089;
	and.b64  	%rd3167, %rd3090, %rd3166;
	xor.b64  	%rd3168, %rd3167, %rd3093;
	xor.b64  	%rd3169, %rd3096, %rd33;
	xor.b64  	%rd3170, %rd3111, %rd3169;
	xor.b64  	%rd3171, %rd3170, %rd3126;
	xor.b64  	%rd3172, %rd3171, %rd3141;
	xor.b64  	%rd3173, %rd3172, %rd3156;
	xor.b64  	%rd3174, %rd3114, %rd3099;
	xor.b64  	%rd3175, %rd3174, %rd3129;
	xor.b64  	%rd3176, %rd3175, %rd3144;
	xor.b64  	%rd3177, %rd3176, %rd3159;
	xor.b64  	%rd3178, %rd3117, %rd3102;
	xor.b64  	%rd3179, %rd3178, %rd3132;
	xor.b64  	%rd3180, %rd3179, %rd3147;
	xor.b64  	%rd3181, %rd3180, %rd3162;
	xor.b64  	%rd3182, %rd3120, %rd3105;
	xor.b64  	%rd3183, %rd3182, %rd3135;
	xor.b64  	%rd3184, %rd3183, %rd3150;
	xor.b64  	%rd3185, %rd3184, %rd3165;
	xor.b64  	%rd3186, %rd3123, %rd3108;
	xor.b64  	%rd3187, %rd3186, %rd3138;
	xor.b64  	%rd3188, %rd3187, %rd3153;
	xor.b64  	%rd3189, %rd3188, %rd3168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2165}, %rd3177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd3177;
	}
	shf.l.wrap.b32 	%r2167, %r2166, %r2165, 1;
	shf.l.wrap.b32 	%r2168, %r2165, %r2166, 1;
	mov.b64 	%rd3190, {%r2168, %r2167};
	xor.b64  	%rd3191, %rd3189, %rd3190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2169}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd3181;
	}
	shf.l.wrap.b32 	%r2171, %r2170, %r2169, 1;
	shf.l.wrap.b32 	%r2172, %r2169, %r2170, 1;
	mov.b64 	%rd3192, {%r2172, %r2171};
	xor.b64  	%rd3193, %rd3192, %rd3173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2173}, %rd3185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd3185;
	}
	shf.l.wrap.b32 	%r2175, %r2174, %r2173, 1;
	shf.l.wrap.b32 	%r2176, %r2173, %r2174, 1;
	mov.b64 	%rd3194, {%r2176, %r2175};
	xor.b64  	%rd3195, %rd3194, %rd3177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2177}, %rd3189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd3189;
	}
	shf.l.wrap.b32 	%r2179, %r2178, %r2177, 1;
	shf.l.wrap.b32 	%r2180, %r2177, %r2178, 1;
	mov.b64 	%rd3196, {%r2180, %r2179};
	xor.b64  	%rd3197, %rd3196, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2181}, %rd3173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd3173;
	}
	shf.l.wrap.b32 	%r2183, %r2182, %r2181, 1;
	shf.l.wrap.b32 	%r2184, %r2181, %r2182, 1;
	mov.b64 	%rd3198, {%r2184, %r2183};
	xor.b64  	%rd3199, %rd3185, %rd3198;
	xor.b64  	%rd3200, %rd3191, %rd3169;
	xor.b64  	%rd3201, %rd3193, %rd3099;
	xor.b64  	%rd3202, %rd3195, %rd3102;
	xor.b64  	%rd3203, %rd3197, %rd3105;
	xor.b64  	%rd3204, %rd3199, %rd3108;
	xor.b64  	%rd3205, %rd3191, %rd3111;
	xor.b64  	%rd3206, %rd3193, %rd3114;
	xor.b64  	%rd3207, %rd3195, %rd3117;
	xor.b64  	%rd3208, %rd3197, %rd3120;
	xor.b64  	%rd3209, %rd3199, %rd3123;
	xor.b64  	%rd3210, %rd3191, %rd3126;
	xor.b64  	%rd3211, %rd3193, %rd3129;
	xor.b64  	%rd3212, %rd3195, %rd3132;
	xor.b64  	%rd3213, %rd3197, %rd3135;
	xor.b64  	%rd3214, %rd3199, %rd3138;
	xor.b64  	%rd3215, %rd3191, %rd3141;
	xor.b64  	%rd3216, %rd3193, %rd3144;
	xor.b64  	%rd3217, %rd3195, %rd3147;
	xor.b64  	%rd3218, %rd3197, %rd3150;
	xor.b64  	%rd3219, %rd3199, %rd3153;
	xor.b64  	%rd3220, %rd3191, %rd3156;
	xor.b64  	%rd3221, %rd3193, %rd3159;
	xor.b64  	%rd3222, %rd3195, %rd3162;
	xor.b64  	%rd3223, %rd3197, %rd3165;
	xor.b64  	%rd3224, %rd3199, %rd3168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2185,%dummy}, %rd3206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2186}, %rd3206;
	}
	shf.r.wrap.b32 	%r2187, %r2186, %r2185, 20;
	shf.r.wrap.b32 	%r2188, %r2185, %r2186, 20;
	mov.b64 	%rd3225, {%r2188, %r2187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd3212;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 21;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 21;
	mov.b64 	%rd3226, {%r2192, %r2191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2193}, %rd3218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2194,%dummy}, %rd3218;
	}
	shf.l.wrap.b32 	%r2195, %r2194, %r2193, 21;
	shf.l.wrap.b32 	%r2196, %r2193, %r2194, 21;
	mov.b64 	%rd3227, {%r2196, %r2195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2197}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd3224;
	}
	shf.l.wrap.b32 	%r2199, %r2198, %r2197, 14;
	shf.l.wrap.b32 	%r2200, %r2197, %r2198, 14;
	mov.b64 	%rd3228, {%r2200, %r2199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2201}, %rd3203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd3203;
	}
	shf.l.wrap.b32 	%r2203, %r2202, %r2201, 28;
	shf.l.wrap.b32 	%r2204, %r2201, %r2202, 28;
	mov.b64 	%rd3229, {%r2204, %r2203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2205}, %rd3209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd3209;
	}
	shf.l.wrap.b32 	%r2207, %r2206, %r2205, 20;
	shf.l.wrap.b32 	%r2208, %r2205, %r2206, 20;
	mov.b64 	%rd3230, {%r2208, %r2207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2209}, %rd3210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd3210;
	}
	shf.l.wrap.b32 	%r2211, %r2210, %r2209, 3;
	shf.l.wrap.b32 	%r2212, %r2209, %r2210, 3;
	mov.b64 	%rd3231, {%r2212, %r2211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd3216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd3216;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 19;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 19;
	mov.b64 	%rd3232, {%r2216, %r2215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2217,%dummy}, %rd3222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2218}, %rd3222;
	}
	shf.r.wrap.b32 	%r2219, %r2218, %r2217, 3;
	shf.r.wrap.b32 	%r2220, %r2217, %r2218, 3;
	mov.b64 	%rd3233, {%r2220, %r2219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd3201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2222,%dummy}, %rd3201;
	}
	shf.l.wrap.b32 	%r2223, %r2222, %r2221, 1;
	shf.l.wrap.b32 	%r2224, %r2221, %r2222, 1;
	mov.b64 	%rd3234, {%r2224, %r2223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2225}, %rd3207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd3207;
	}
	shf.l.wrap.b32 	%r2227, %r2226, %r2225, 6;
	shf.l.wrap.b32 	%r2228, %r2225, %r2226, 6;
	mov.b64 	%rd3235, {%r2228, %r2227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2229}, %rd3213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd3213;
	}
	shf.l.wrap.b32 	%r2231, %r2230, %r2229, 25;
	shf.l.wrap.b32 	%r2232, %r2229, %r2230, 25;
	mov.b64 	%rd3236, {%r2232, %r2231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2233}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2234,%dummy}, %rd3219;
	}
	shf.l.wrap.b32 	%r2235, %r2234, %r2233, 8;
	shf.l.wrap.b32 	%r2236, %r2233, %r2234, 8;
	mov.b64 	%rd3237, {%r2236, %r2235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2237}, %rd3220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd3220;
	}
	shf.l.wrap.b32 	%r2239, %r2238, %r2237, 18;
	shf.l.wrap.b32 	%r2240, %r2237, %r2238, 18;
	mov.b64 	%rd3238, {%r2240, %r2239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2241}, %rd3204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2242,%dummy}, %rd3204;
	}
	shf.l.wrap.b32 	%r2243, %r2242, %r2241, 27;
	shf.l.wrap.b32 	%r2244, %r2241, %r2242, 27;
	mov.b64 	%rd3239, {%r2244, %r2243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3205;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3240, {%r2248, %r2247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2249}, %rd3211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2250,%dummy}, %rd3211;
	}
	shf.l.wrap.b32 	%r2251, %r2250, %r2249, 10;
	shf.l.wrap.b32 	%r2252, %r2249, %r2250, 10;
	mov.b64 	%rd3241, {%r2252, %r2251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2253}, %rd3217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd3217;
	}
	shf.l.wrap.b32 	%r2255, %r2254, %r2253, 15;
	shf.l.wrap.b32 	%r2256, %r2253, %r2254, 15;
	mov.b64 	%rd3242, {%r2256, %r2255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2257,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2258}, %rd3223;
	}
	shf.r.wrap.b32 	%r2259, %r2258, %r2257, 8;
	shf.r.wrap.b32 	%r2260, %r2257, %r2258, 8;
	mov.b64 	%rd3243, {%r2260, %r2259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3202;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 2;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 2;
	mov.b64 	%rd3244, {%r2264, %r2263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2265,%dummy}, %rd3208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd3208;
	}
	shf.r.wrap.b32 	%r2267, %r2266, %r2265, 9;
	shf.r.wrap.b32 	%r2268, %r2265, %r2266, 9;
	mov.b64 	%rd3245, {%r2268, %r2267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3214;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 25;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 25;
	mov.b64 	%rd3246, {%r2272, %r2271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2273,%dummy}, %rd3215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2274}, %rd3215;
	}
	shf.r.wrap.b32 	%r2275, %r2274, %r2273, 23;
	shf.r.wrap.b32 	%r2276, %r2273, %r2274, 23;
	mov.b64 	%rd3247, {%r2276, %r2275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2277}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd3221;
	}
	shf.l.wrap.b32 	%r2279, %r2278, %r2277, 2;
	shf.l.wrap.b32 	%r2280, %r2277, %r2278, 2;
	mov.b64 	%rd3248, {%r2280, %r2279};
	not.b64 	%rd3249, %rd3225;
	and.b64  	%rd3250, %rd3226, %rd3249;
	xor.b64  	%rd3251, %rd3250, %rd3200;
	not.b64 	%rd3252, %rd3226;
	and.b64  	%rd3253, %rd3227, %rd3252;
	xor.b64  	%rd3254, %rd3253, %rd3225;
	not.b64 	%rd3255, %rd3227;
	and.b64  	%rd3256, %rd3228, %rd3255;
	xor.b64  	%rd3257, %rd3256, %rd3226;
	not.b64 	%rd3258, %rd3228;
	and.b64  	%rd3259, %rd3200, %rd3258;
	xor.b64  	%rd3260, %rd3259, %rd3227;
	not.b64 	%rd3261, %rd3200;
	and.b64  	%rd3262, %rd3225, %rd3261;
	xor.b64  	%rd3263, %rd3262, %rd3228;
	not.b64 	%rd3264, %rd3230;
	and.b64  	%rd3265, %rd3231, %rd3264;
	xor.b64  	%rd3266, %rd3265, %rd3229;
	not.b64 	%rd3267, %rd3231;
	and.b64  	%rd3268, %rd3232, %rd3267;
	xor.b64  	%rd3269, %rd3268, %rd3230;
	not.b64 	%rd3270, %rd3232;
	and.b64  	%rd3271, %rd3233, %rd3270;
	xor.b64  	%rd3272, %rd3271, %rd3231;
	not.b64 	%rd3273, %rd3233;
	and.b64  	%rd3274, %rd3229, %rd3273;
	xor.b64  	%rd3275, %rd3274, %rd3232;
	not.b64 	%rd3276, %rd3229;
	and.b64  	%rd3277, %rd3230, %rd3276;
	xor.b64  	%rd3278, %rd3277, %rd3233;
	not.b64 	%rd3279, %rd3235;
	and.b64  	%rd3280, %rd3236, %rd3279;
	xor.b64  	%rd3281, %rd3280, %rd3234;
	not.b64 	%rd3282, %rd3236;
	and.b64  	%rd3283, %rd3237, %rd3282;
	xor.b64  	%rd3284, %rd3283, %rd3235;
	not.b64 	%rd3285, %rd3237;
	and.b64  	%rd3286, %rd3238, %rd3285;
	xor.b64  	%rd3287, %rd3286, %rd3236;
	not.b64 	%rd3288, %rd3238;
	and.b64  	%rd3289, %rd3234, %rd3288;
	xor.b64  	%rd3290, %rd3289, %rd3237;
	not.b64 	%rd3291, %rd3234;
	and.b64  	%rd3292, %rd3235, %rd3291;
	xor.b64  	%rd3293, %rd3292, %rd3238;
	not.b64 	%rd3294, %rd3240;
	and.b64  	%rd3295, %rd3241, %rd3294;
	xor.b64  	%rd3296, %rd3295, %rd3239;
	not.b64 	%rd3297, %rd3241;
	and.b64  	%rd3298, %rd3242, %rd3297;
	xor.b64  	%rd3299, %rd3298, %rd3240;
	not.b64 	%rd3300, %rd3242;
	and.b64  	%rd3301, %rd3243, %rd3300;
	xor.b64  	%rd3302, %rd3301, %rd3241;
	not.b64 	%rd3303, %rd3243;
	and.b64  	%rd3304, %rd3239, %rd3303;
	xor.b64  	%rd3305, %rd3304, %rd3242;
	not.b64 	%rd3306, %rd3239;
	and.b64  	%rd3307, %rd3240, %rd3306;
	xor.b64  	%rd3308, %rd3307, %rd3243;
	not.b64 	%rd3309, %rd3245;
	and.b64  	%rd3310, %rd3246, %rd3309;
	xor.b64  	%rd3311, %rd3310, %rd3244;
	not.b64 	%rd3312, %rd3246;
	and.b64  	%rd3313, %rd3247, %rd3312;
	xor.b64  	%rd3314, %rd3313, %rd3245;
	not.b64 	%rd3315, %rd3247;
	and.b64  	%rd3316, %rd3248, %rd3315;
	xor.b64  	%rd3317, %rd3316, %rd3246;
	not.b64 	%rd3318, %rd3248;
	and.b64  	%rd3319, %rd3244, %rd3318;
	xor.b64  	%rd3320, %rd3319, %rd3247;
	not.b64 	%rd3321, %rd3244;
	and.b64  	%rd3322, %rd3245, %rd3321;
	xor.b64  	%rd3323, %rd3322, %rd3248;
	xor.b64  	%rd3324, %rd3251, %rd34;
	xor.b64  	%rd3325, %rd3266, %rd3324;
	xor.b64  	%rd3326, %rd3325, %rd3281;
	xor.b64  	%rd3327, %rd3326, %rd3296;
	xor.b64  	%rd3328, %rd3327, %rd3311;
	xor.b64  	%rd3329, %rd3269, %rd3254;
	xor.b64  	%rd3330, %rd3329, %rd3284;
	xor.b64  	%rd3331, %rd3330, %rd3299;
	xor.b64  	%rd3332, %rd3331, %rd3314;
	xor.b64  	%rd3333, %rd3272, %rd3257;
	xor.b64  	%rd3334, %rd3333, %rd3287;
	xor.b64  	%rd3335, %rd3334, %rd3302;
	xor.b64  	%rd3336, %rd3335, %rd3317;
	xor.b64  	%rd3337, %rd3275, %rd3260;
	xor.b64  	%rd3338, %rd3337, %rd3290;
	xor.b64  	%rd3339, %rd3338, %rd3305;
	xor.b64  	%rd3340, %rd3339, %rd3320;
	xor.b64  	%rd3341, %rd3278, %rd3263;
	xor.b64  	%rd3342, %rd3341, %rd3293;
	xor.b64  	%rd3343, %rd3342, %rd3308;
	xor.b64  	%rd3344, %rd3343, %rd3323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2281}, %rd3332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2282,%dummy}, %rd3332;
	}
	shf.l.wrap.b32 	%r2283, %r2282, %r2281, 1;
	shf.l.wrap.b32 	%r2284, %r2281, %r2282, 1;
	mov.b64 	%rd3345, {%r2284, %r2283};
	xor.b64  	%rd3346, %rd3344, %rd3345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2285}, %rd3336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd3336;
	}
	shf.l.wrap.b32 	%r2287, %r2286, %r2285, 1;
	shf.l.wrap.b32 	%r2288, %r2285, %r2286, 1;
	mov.b64 	%rd3347, {%r2288, %r2287};
	xor.b64  	%rd3348, %rd3347, %rd3328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2289}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2290,%dummy}, %rd3340;
	}
	shf.l.wrap.b32 	%r2291, %r2290, %r2289, 1;
	shf.l.wrap.b32 	%r2292, %r2289, %r2290, 1;
	mov.b64 	%rd3349, {%r2292, %r2291};
	xor.b64  	%rd3350, %rd3349, %rd3332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2293}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd3344;
	}
	shf.l.wrap.b32 	%r2295, %r2294, %r2293, 1;
	shf.l.wrap.b32 	%r2296, %r2293, %r2294, 1;
	mov.b64 	%rd3351, {%r2296, %r2295};
	xor.b64  	%rd3352, %rd3351, %rd3336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2297}, %rd3328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2298,%dummy}, %rd3328;
	}
	shf.l.wrap.b32 	%r2299, %r2298, %r2297, 1;
	shf.l.wrap.b32 	%r2300, %r2297, %r2298, 1;
	mov.b64 	%rd3353, {%r2300, %r2299};
	xor.b64  	%rd3354, %rd3340, %rd3353;
	xor.b64  	%rd3355, %rd3346, %rd3324;
	xor.b64  	%rd3356, %rd3348, %rd3254;
	xor.b64  	%rd3357, %rd3350, %rd3257;
	xor.b64  	%rd3358, %rd3352, %rd3260;
	xor.b64  	%rd3359, %rd3354, %rd3263;
	xor.b64  	%rd3360, %rd3346, %rd3266;
	xor.b64  	%rd3361, %rd3348, %rd3269;
	xor.b64  	%rd3362, %rd3350, %rd3272;
	xor.b64  	%rd3363, %rd3352, %rd3275;
	xor.b64  	%rd3364, %rd3354, %rd3278;
	xor.b64  	%rd3365, %rd3346, %rd3281;
	xor.b64  	%rd3366, %rd3348, %rd3284;
	xor.b64  	%rd3367, %rd3350, %rd3287;
	xor.b64  	%rd3368, %rd3352, %rd3290;
	xor.b64  	%rd3369, %rd3354, %rd3293;
	xor.b64  	%rd3370, %rd3346, %rd3296;
	xor.b64  	%rd3371, %rd3348, %rd3299;
	xor.b64  	%rd3372, %rd3350, %rd3302;
	xor.b64  	%rd3373, %rd3352, %rd3305;
	xor.b64  	%rd3374, %rd3354, %rd3308;
	xor.b64  	%rd3375, %rd3346, %rd3311;
	xor.b64  	%rd3376, %rd3348, %rd3314;
	xor.b64  	%rd3377, %rd3350, %rd3317;
	xor.b64  	%rd3378, %rd3352, %rd3320;
	xor.b64  	%rd3379, %rd3354, %rd3323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd3361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd3361;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 20;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 20;
	mov.b64 	%rd3380, {%r2304, %r2303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2305,%dummy}, %rd3367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2306}, %rd3367;
	}
	shf.r.wrap.b32 	%r2307, %r2306, %r2305, 21;
	shf.r.wrap.b32 	%r2308, %r2305, %r2306, 21;
	mov.b64 	%rd3381, {%r2308, %r2307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2309}, %rd3373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd3373;
	}
	shf.l.wrap.b32 	%r2311, %r2310, %r2309, 21;
	shf.l.wrap.b32 	%r2312, %r2309, %r2310, 21;
	mov.b64 	%rd3382, {%r2312, %r2311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2313}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2314,%dummy}, %rd3379;
	}
	shf.l.wrap.b32 	%r2315, %r2314, %r2313, 14;
	shf.l.wrap.b32 	%r2316, %r2313, %r2314, 14;
	mov.b64 	%rd3383, {%r2316, %r2315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd3358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd3358;
	}
	shf.l.wrap.b32 	%r2319, %r2318, %r2317, 28;
	shf.l.wrap.b32 	%r2320, %r2317, %r2318, 28;
	mov.b64 	%rd3384, {%r2320, %r2319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2321}, %rd3364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd3364;
	}
	shf.l.wrap.b32 	%r2323, %r2322, %r2321, 20;
	shf.l.wrap.b32 	%r2324, %r2321, %r2322, 20;
	mov.b64 	%rd3385, {%r2324, %r2323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2325}, %rd3365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd3365;
	}
	shf.l.wrap.b32 	%r2327, %r2326, %r2325, 3;
	shf.l.wrap.b32 	%r2328, %r2325, %r2326, 3;
	mov.b64 	%rd3386, {%r2328, %r2327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2329,%dummy}, %rd3371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2330}, %rd3371;
	}
	shf.r.wrap.b32 	%r2331, %r2330, %r2329, 19;
	shf.r.wrap.b32 	%r2332, %r2329, %r2330, 19;
	mov.b64 	%rd3387, {%r2332, %r2331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd3377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd3377;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 3;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 3;
	mov.b64 	%rd3388, {%r2336, %r2335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2337}, %rd3356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2338,%dummy}, %rd3356;
	}
	shf.l.wrap.b32 	%r2339, %r2338, %r2337, 1;
	shf.l.wrap.b32 	%r2340, %r2337, %r2338, 1;
	mov.b64 	%rd3389, {%r2340, %r2339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd3362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd3362;
	}
	shf.l.wrap.b32 	%r2343, %r2342, %r2341, 6;
	shf.l.wrap.b32 	%r2344, %r2341, %r2342, 6;
	mov.b64 	%rd3390, {%r2344, %r2343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2345}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2346,%dummy}, %rd3368;
	}
	shf.l.wrap.b32 	%r2347, %r2346, %r2345, 25;
	shf.l.wrap.b32 	%r2348, %r2345, %r2346, 25;
	mov.b64 	%rd3391, {%r2348, %r2347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd3374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd3374;
	}
	shf.l.wrap.b32 	%r2351, %r2350, %r2349, 8;
	shf.l.wrap.b32 	%r2352, %r2349, %r2350, 8;
	mov.b64 	%rd3392, {%r2352, %r2351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2353}, %rd3375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2354,%dummy}, %rd3375;
	}
	shf.l.wrap.b32 	%r2355, %r2354, %r2353, 18;
	shf.l.wrap.b32 	%r2356, %r2353, %r2354, 18;
	mov.b64 	%rd3393, {%r2356, %r2355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd3359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd3359;
	}
	shf.l.wrap.b32 	%r2359, %r2358, %r2357, 27;
	shf.l.wrap.b32 	%r2360, %r2357, %r2358, 27;
	mov.b64 	%rd3394, {%r2360, %r2359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2361,%dummy}, %rd3360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2362}, %rd3360;
	}
	shf.r.wrap.b32 	%r2363, %r2362, %r2361, 28;
	shf.r.wrap.b32 	%r2364, %r2361, %r2362, 28;
	mov.b64 	%rd3395, {%r2364, %r2363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd3366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd3366;
	}
	shf.l.wrap.b32 	%r2367, %r2366, %r2365, 10;
	shf.l.wrap.b32 	%r2368, %r2365, %r2366, 10;
	mov.b64 	%rd3396, {%r2368, %r2367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2369}, %rd3372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2370,%dummy}, %rd3372;
	}
	shf.l.wrap.b32 	%r2371, %r2370, %r2369, 15;
	shf.l.wrap.b32 	%r2372, %r2369, %r2370, 15;
	mov.b64 	%rd3397, {%r2372, %r2371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd3378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd3378;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 8;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 8;
	mov.b64 	%rd3398, {%r2376, %r2375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd3357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd3357;
	}
	shf.r.wrap.b32 	%r2379, %r2378, %r2377, 2;
	shf.r.wrap.b32 	%r2380, %r2377, %r2378, 2;
	mov.b64 	%rd3399, {%r2380, %r2379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2381,%dummy}, %rd3363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd3363;
	}
	shf.r.wrap.b32 	%r2383, %r2382, %r2381, 9;
	shf.r.wrap.b32 	%r2384, %r2381, %r2382, 9;
	mov.b64 	%rd3400, {%r2384, %r2383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2385,%dummy}, %rd3369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2386}, %rd3369;
	}
	shf.r.wrap.b32 	%r2387, %r2386, %r2385, 25;
	shf.r.wrap.b32 	%r2388, %r2385, %r2386, 25;
	mov.b64 	%rd3401, {%r2388, %r2387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2389,%dummy}, %rd3370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2390}, %rd3370;
	}
	shf.r.wrap.b32 	%r2391, %r2390, %r2389, 23;
	shf.r.wrap.b32 	%r2392, %r2389, %r2390, 23;
	mov.b64 	%rd3402, {%r2392, %r2391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd3376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2394,%dummy}, %rd3376;
	}
	shf.l.wrap.b32 	%r2395, %r2394, %r2393, 2;
	shf.l.wrap.b32 	%r2396, %r2393, %r2394, 2;
	mov.b64 	%rd3403, {%r2396, %r2395};
	not.b64 	%rd3404, %rd3380;
	and.b64  	%rd3405, %rd3381, %rd3404;
	xor.b64  	%rd3406, %rd3405, %rd3355;
	not.b64 	%rd3407, %rd3381;
	and.b64  	%rd3408, %rd3382, %rd3407;
	xor.b64  	%rd3409, %rd3408, %rd3380;
	not.b64 	%rd3410, %rd3382;
	and.b64  	%rd3411, %rd3383, %rd3410;
	xor.b64  	%rd3412, %rd3411, %rd3381;
	not.b64 	%rd3413, %rd3383;
	and.b64  	%rd3414, %rd3355, %rd3413;
	xor.b64  	%rd3415, %rd3414, %rd3382;
	not.b64 	%rd3416, %rd3355;
	and.b64  	%rd3417, %rd3380, %rd3416;
	xor.b64  	%rd3418, %rd3417, %rd3383;
	not.b64 	%rd3419, %rd3385;
	and.b64  	%rd3420, %rd3386, %rd3419;
	xor.b64  	%rd3421, %rd3420, %rd3384;
	not.b64 	%rd3422, %rd3386;
	and.b64  	%rd3423, %rd3387, %rd3422;
	xor.b64  	%rd3424, %rd3423, %rd3385;
	not.b64 	%rd3425, %rd3387;
	and.b64  	%rd3426, %rd3388, %rd3425;
	xor.b64  	%rd3427, %rd3426, %rd3386;
	not.b64 	%rd3428, %rd3388;
	and.b64  	%rd3429, %rd3384, %rd3428;
	xor.b64  	%rd3430, %rd3429, %rd3387;
	not.b64 	%rd3431, %rd3384;
	and.b64  	%rd3432, %rd3385, %rd3431;
	xor.b64  	%rd3433, %rd3432, %rd3388;
	not.b64 	%rd3434, %rd3390;
	and.b64  	%rd3435, %rd3391, %rd3434;
	xor.b64  	%rd3436, %rd3435, %rd3389;
	not.b64 	%rd3437, %rd3391;
	and.b64  	%rd3438, %rd3392, %rd3437;
	xor.b64  	%rd3439, %rd3438, %rd3390;
	not.b64 	%rd3440, %rd3392;
	and.b64  	%rd3441, %rd3393, %rd3440;
	xor.b64  	%rd3442, %rd3441, %rd3391;
	not.b64 	%rd3443, %rd3393;
	and.b64  	%rd3444, %rd3389, %rd3443;
	xor.b64  	%rd3445, %rd3444, %rd3392;
	not.b64 	%rd3446, %rd3389;
	and.b64  	%rd3447, %rd3390, %rd3446;
	xor.b64  	%rd3448, %rd3447, %rd3393;
	not.b64 	%rd3449, %rd3395;
	and.b64  	%rd3450, %rd3396, %rd3449;
	xor.b64  	%rd3451, %rd3450, %rd3394;
	not.b64 	%rd3452, %rd3396;
	and.b64  	%rd3453, %rd3397, %rd3452;
	xor.b64  	%rd3454, %rd3453, %rd3395;
	not.b64 	%rd3455, %rd3397;
	and.b64  	%rd3456, %rd3398, %rd3455;
	xor.b64  	%rd3457, %rd3456, %rd3396;
	not.b64 	%rd3458, %rd3398;
	and.b64  	%rd3459, %rd3394, %rd3458;
	xor.b64  	%rd3460, %rd3459, %rd3397;
	not.b64 	%rd3461, %rd3394;
	and.b64  	%rd3462, %rd3395, %rd3461;
	xor.b64  	%rd3463, %rd3462, %rd3398;
	not.b64 	%rd3464, %rd3400;
	and.b64  	%rd3465, %rd3401, %rd3464;
	xor.b64  	%rd3466, %rd3465, %rd3399;
	not.b64 	%rd3467, %rd3401;
	and.b64  	%rd3468, %rd3402, %rd3467;
	xor.b64  	%rd3469, %rd3468, %rd3400;
	not.b64 	%rd3470, %rd3402;
	and.b64  	%rd3471, %rd3403, %rd3470;
	xor.b64  	%rd3472, %rd3471, %rd3401;
	not.b64 	%rd3473, %rd3403;
	and.b64  	%rd3474, %rd3399, %rd3473;
	xor.b64  	%rd3475, %rd3474, %rd3402;
	not.b64 	%rd3476, %rd3399;
	and.b64  	%rd3477, %rd3400, %rd3476;
	xor.b64  	%rd3478, %rd3477, %rd3403;
	xor.b64  	%rd3479, %rd3406, %rd35;
	xor.b64  	%rd3480, %rd3421, %rd3479;
	xor.b64  	%rd3481, %rd3480, %rd3436;
	xor.b64  	%rd3482, %rd3481, %rd3451;
	xor.b64  	%rd3483, %rd3482, %rd3466;
	xor.b64  	%rd3484, %rd3424, %rd3409;
	xor.b64  	%rd3485, %rd3484, %rd3439;
	xor.b64  	%rd3486, %rd3485, %rd3454;
	xor.b64  	%rd3487, %rd3486, %rd3469;
	xor.b64  	%rd3488, %rd3427, %rd3412;
	xor.b64  	%rd3489, %rd3488, %rd3442;
	xor.b64  	%rd3490, %rd3489, %rd3457;
	xor.b64  	%rd3491, %rd3490, %rd3472;
	xor.b64  	%rd3492, %rd3430, %rd3415;
	xor.b64  	%rd3493, %rd3492, %rd3445;
	xor.b64  	%rd3494, %rd3493, %rd3460;
	xor.b64  	%rd3495, %rd3494, %rd3475;
	xor.b64  	%rd3496, %rd3433, %rd3418;
	xor.b64  	%rd3497, %rd3496, %rd3448;
	xor.b64  	%rd3498, %rd3497, %rd3463;
	xor.b64  	%rd3499, %rd3498, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2397}, %rd3487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2398,%dummy}, %rd3487;
	}
	shf.l.wrap.b32 	%r2399, %r2398, %r2397, 1;
	shf.l.wrap.b32 	%r2400, %r2397, %r2398, 1;
	mov.b64 	%rd3500, {%r2400, %r2399};
	xor.b64  	%rd3501, %rd3499, %rd3500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd3491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2402,%dummy}, %rd3491;
	}
	shf.l.wrap.b32 	%r2403, %r2402, %r2401, 1;
	shf.l.wrap.b32 	%r2404, %r2401, %r2402, 1;
	mov.b64 	%rd3502, {%r2404, %r2403};
	xor.b64  	%rd3503, %rd3502, %rd3483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2405}, %rd3495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd3495;
	}
	shf.l.wrap.b32 	%r2407, %r2406, %r2405, 1;
	shf.l.wrap.b32 	%r2408, %r2405, %r2406, 1;
	mov.b64 	%rd3504, {%r2408, %r2407};
	xor.b64  	%rd3505, %rd3504, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2409}, %rd3499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2410,%dummy}, %rd3499;
	}
	shf.l.wrap.b32 	%r2411, %r2410, %r2409, 1;
	shf.l.wrap.b32 	%r2412, %r2409, %r2410, 1;
	mov.b64 	%rd3506, {%r2412, %r2411};
	xor.b64  	%rd3507, %rd3506, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd3483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2414,%dummy}, %rd3483;
	}
	shf.l.wrap.b32 	%r2415, %r2414, %r2413, 1;
	shf.l.wrap.b32 	%r2416, %r2413, %r2414, 1;
	mov.b64 	%rd3508, {%r2416, %r2415};
	xor.b64  	%rd3509, %rd3495, %rd3508;
	xor.b64  	%rd3510, %rd3501, %rd3479;
	xor.b64  	%rd3511, %rd3503, %rd3409;
	xor.b64  	%rd3512, %rd3505, %rd3412;
	xor.b64  	%rd3513, %rd3507, %rd3415;
	xor.b64  	%rd3514, %rd3509, %rd3418;
	xor.b64  	%rd3515, %rd3501, %rd3421;
	xor.b64  	%rd3516, %rd3503, %rd3424;
	xor.b64  	%rd3517, %rd3505, %rd3427;
	xor.b64  	%rd3518, %rd3507, %rd3430;
	xor.b64  	%rd3519, %rd3509, %rd3433;
	xor.b64  	%rd3520, %rd3501, %rd3436;
	xor.b64  	%rd3521, %rd3503, %rd3439;
	xor.b64  	%rd3522, %rd3505, %rd3442;
	xor.b64  	%rd3523, %rd3507, %rd3445;
	xor.b64  	%rd3524, %rd3509, %rd3448;
	xor.b64  	%rd3525, %rd3501, %rd3451;
	xor.b64  	%rd3526, %rd3503, %rd3454;
	xor.b64  	%rd3527, %rd3505, %rd3457;
	xor.b64  	%rd3528, %rd3507, %rd3460;
	xor.b64  	%rd3529, %rd3509, %rd3463;
	xor.b64  	%rd3530, %rd3501, %rd3466;
	xor.b64  	%rd3531, %rd3503, %rd3469;
	xor.b64  	%rd3532, %rd3505, %rd3472;
	xor.b64  	%rd3533, %rd3507, %rd3475;
	xor.b64  	%rd3534, %rd3509, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd3516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd3516;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 20;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 20;
	mov.b64 	%rd3535, {%r2420, %r2419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2421,%dummy}, %rd3522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2422}, %rd3522;
	}
	shf.r.wrap.b32 	%r2423, %r2422, %r2421, 21;
	shf.r.wrap.b32 	%r2424, %r2421, %r2422, 21;
	mov.b64 	%rd3536, {%r2424, %r2423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2425}, %rd3528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd3528;
	}
	shf.l.wrap.b32 	%r2427, %r2426, %r2425, 21;
	shf.l.wrap.b32 	%r2428, %r2425, %r2426, 21;
	mov.b64 	%rd3537, {%r2428, %r2427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2429}, %rd3534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2430,%dummy}, %rd3534;
	}
	shf.l.wrap.b32 	%r2431, %r2430, %r2429, 14;
	shf.l.wrap.b32 	%r2432, %r2429, %r2430, 14;
	mov.b64 	%rd3538, {%r2432, %r2431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2433}, %rd3513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2434,%dummy}, %rd3513;
	}
	shf.l.wrap.b32 	%r2435, %r2434, %r2433, 28;
	shf.l.wrap.b32 	%r2436, %r2433, %r2434, 28;
	mov.b64 	%rd3539, {%r2436, %r2435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd3519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2438,%dummy}, %rd3519;
	}
	shf.l.wrap.b32 	%r2439, %r2438, %r2437, 20;
	shf.l.wrap.b32 	%r2440, %r2437, %r2438, 20;
	mov.b64 	%rd3540, {%r2440, %r2439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2441}, %rd3520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2442,%dummy}, %rd3520;
	}
	shf.l.wrap.b32 	%r2443, %r2442, %r2441, 3;
	shf.l.wrap.b32 	%r2444, %r2441, %r2442, 3;
	mov.b64 	%rd3541, {%r2444, %r2443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2445,%dummy}, %rd3526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2446}, %rd3526;
	}
	shf.r.wrap.b32 	%r2447, %r2446, %r2445, 19;
	shf.r.wrap.b32 	%r2448, %r2445, %r2446, 19;
	mov.b64 	%rd3542, {%r2448, %r2447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2449,%dummy}, %rd3532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2450}, %rd3532;
	}
	shf.r.wrap.b32 	%r2451, %r2450, %r2449, 3;
	shf.r.wrap.b32 	%r2452, %r2449, %r2450, 3;
	mov.b64 	%rd3543, {%r2452, %r2451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2454,%dummy}, %rd3511;
	}
	shf.l.wrap.b32 	%r2455, %r2454, %r2453, 1;
	shf.l.wrap.b32 	%r2456, %r2453, %r2454, 1;
	mov.b64 	%rd3544, {%r2456, %r2455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd3517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2458,%dummy}, %rd3517;
	}
	shf.l.wrap.b32 	%r2459, %r2458, %r2457, 6;
	shf.l.wrap.b32 	%r2460, %r2457, %r2458, 6;
	mov.b64 	%rd3545, {%r2460, %r2459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd3523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2462,%dummy}, %rd3523;
	}
	shf.l.wrap.b32 	%r2463, %r2462, %r2461, 25;
	shf.l.wrap.b32 	%r2464, %r2461, %r2462, 25;
	mov.b64 	%rd3546, {%r2464, %r2463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2465}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd3529;
	}
	shf.l.wrap.b32 	%r2467, %r2466, %r2465, 8;
	shf.l.wrap.b32 	%r2468, %r2465, %r2466, 8;
	mov.b64 	%rd3547, {%r2468, %r2467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2469}, %rd3530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2470,%dummy}, %rd3530;
	}
	shf.l.wrap.b32 	%r2471, %r2470, %r2469, 18;
	shf.l.wrap.b32 	%r2472, %r2469, %r2470, 18;
	mov.b64 	%rd3548, {%r2472, %r2471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2473}, %rd3514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2474,%dummy}, %rd3514;
	}
	shf.l.wrap.b32 	%r2475, %r2474, %r2473, 27;
	shf.l.wrap.b32 	%r2476, %r2473, %r2474, 27;
	mov.b64 	%rd3549, {%r2476, %r2475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd3515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd3515;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 28;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 28;
	mov.b64 	%rd3550, {%r2480, %r2479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2481}, %rd3521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2482,%dummy}, %rd3521;
	}
	shf.l.wrap.b32 	%r2483, %r2482, %r2481, 10;
	shf.l.wrap.b32 	%r2484, %r2481, %r2482, 10;
	mov.b64 	%rd3551, {%r2484, %r2483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2485}, %rd3527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2486,%dummy}, %rd3527;
	}
	shf.l.wrap.b32 	%r2487, %r2486, %r2485, 15;
	shf.l.wrap.b32 	%r2488, %r2485, %r2486, 15;
	mov.b64 	%rd3552, {%r2488, %r2487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd3533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd3533;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 8;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 8;
	mov.b64 	%rd3553, {%r2492, %r2491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2493,%dummy}, %rd3512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2494}, %rd3512;
	}
	shf.r.wrap.b32 	%r2495, %r2494, %r2493, 2;
	shf.r.wrap.b32 	%r2496, %r2493, %r2494, 2;
	mov.b64 	%rd3554, {%r2496, %r2495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2497,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2498}, %rd3518;
	}
	shf.r.wrap.b32 	%r2499, %r2498, %r2497, 9;
	shf.r.wrap.b32 	%r2500, %r2497, %r2498, 9;
	mov.b64 	%rd3555, {%r2500, %r2499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2502}, %rd3524;
	}
	shf.r.wrap.b32 	%r2503, %r2502, %r2501, 25;
	shf.r.wrap.b32 	%r2504, %r2501, %r2502, 25;
	mov.b64 	%rd3556, {%r2504, %r2503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2506}, %rd3525;
	}
	shf.r.wrap.b32 	%r2507, %r2506, %r2505, 23;
	shf.r.wrap.b32 	%r2508, %r2505, %r2506, 23;
	mov.b64 	%rd3557, {%r2508, %r2507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2509}, %rd3531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2510,%dummy}, %rd3531;
	}
	shf.l.wrap.b32 	%r2511, %r2510, %r2509, 2;
	shf.l.wrap.b32 	%r2512, %r2509, %r2510, 2;
	mov.b64 	%rd3558, {%r2512, %r2511};
	not.b64 	%rd3559, %rd3535;
	and.b64  	%rd3560, %rd3536, %rd3559;
	xor.b64  	%rd3561, %rd3560, %rd3510;
	not.b64 	%rd3562, %rd3536;
	and.b64  	%rd3563, %rd3537, %rd3562;
	xor.b64  	%rd3564, %rd3563, %rd3535;
	not.b64 	%rd3565, %rd3537;
	and.b64  	%rd3566, %rd3538, %rd3565;
	xor.b64  	%rd3567, %rd3566, %rd3536;
	not.b64 	%rd3568, %rd3538;
	and.b64  	%rd3569, %rd3510, %rd3568;
	xor.b64  	%rd3570, %rd3569, %rd3537;
	not.b64 	%rd3571, %rd3510;
	and.b64  	%rd3572, %rd3535, %rd3571;
	xor.b64  	%rd3573, %rd3572, %rd3538;
	not.b64 	%rd3574, %rd3540;
	and.b64  	%rd3575, %rd3541, %rd3574;
	xor.b64  	%rd3576, %rd3575, %rd3539;
	not.b64 	%rd3577, %rd3541;
	and.b64  	%rd3578, %rd3542, %rd3577;
	xor.b64  	%rd3579, %rd3578, %rd3540;
	not.b64 	%rd3580, %rd3542;
	and.b64  	%rd3581, %rd3543, %rd3580;
	xor.b64  	%rd3582, %rd3581, %rd3541;
	not.b64 	%rd3583, %rd3543;
	and.b64  	%rd3584, %rd3539, %rd3583;
	xor.b64  	%rd3585, %rd3584, %rd3542;
	not.b64 	%rd3586, %rd3539;
	and.b64  	%rd3587, %rd3540, %rd3586;
	xor.b64  	%rd3588, %rd3587, %rd3543;
	not.b64 	%rd3589, %rd3545;
	and.b64  	%rd3590, %rd3546, %rd3589;
	xor.b64  	%rd3591, %rd3590, %rd3544;
	not.b64 	%rd3592, %rd3546;
	and.b64  	%rd3593, %rd3547, %rd3592;
	xor.b64  	%rd3594, %rd3593, %rd3545;
	not.b64 	%rd3595, %rd3547;
	and.b64  	%rd3596, %rd3548, %rd3595;
	xor.b64  	%rd3597, %rd3596, %rd3546;
	not.b64 	%rd3598, %rd3548;
	and.b64  	%rd3599, %rd3544, %rd3598;
	xor.b64  	%rd3600, %rd3599, %rd3547;
	not.b64 	%rd3601, %rd3544;
	and.b64  	%rd3602, %rd3545, %rd3601;
	xor.b64  	%rd3603, %rd3602, %rd3548;
	not.b64 	%rd3604, %rd3550;
	and.b64  	%rd3605, %rd3551, %rd3604;
	xor.b64  	%rd3606, %rd3605, %rd3549;
	not.b64 	%rd3607, %rd3551;
	and.b64  	%rd3608, %rd3552, %rd3607;
	xor.b64  	%rd3609, %rd3608, %rd3550;
	not.b64 	%rd3610, %rd3552;
	and.b64  	%rd3611, %rd3553, %rd3610;
	xor.b64  	%rd3612, %rd3611, %rd3551;
	not.b64 	%rd3613, %rd3553;
	and.b64  	%rd3614, %rd3549, %rd3613;
	xor.b64  	%rd3615, %rd3614, %rd3552;
	not.b64 	%rd3616, %rd3549;
	and.b64  	%rd3617, %rd3550, %rd3616;
	xor.b64  	%rd3618, %rd3617, %rd3553;
	not.b64 	%rd3619, %rd3555;
	and.b64  	%rd3620, %rd3556, %rd3619;
	xor.b64  	%rd3621, %rd3620, %rd3554;
	not.b64 	%rd3622, %rd3556;
	and.b64  	%rd3623, %rd3557, %rd3622;
	xor.b64  	%rd3624, %rd3623, %rd3555;
	not.b64 	%rd3625, %rd3557;
	and.b64  	%rd3626, %rd3558, %rd3625;
	xor.b64  	%rd3627, %rd3626, %rd3556;
	not.b64 	%rd3628, %rd3558;
	and.b64  	%rd3629, %rd3554, %rd3628;
	xor.b64  	%rd3630, %rd3629, %rd3557;
	not.b64 	%rd3631, %rd3554;
	and.b64  	%rd3632, %rd3555, %rd3631;
	xor.b64  	%rd3633, %rd3632, %rd3558;
	xor.b64  	%rd3634, %rd3561, %rd36;
	xor.b64  	%rd3635, %rd3576, %rd3634;
	xor.b64  	%rd3636, %rd3635, %rd3591;
	xor.b64  	%rd3637, %rd3636, %rd3606;
	xor.b64  	%rd3638, %rd3637, %rd3621;
	xor.b64  	%rd3639, %rd3579, %rd3564;
	xor.b64  	%rd3640, %rd3639, %rd3594;
	xor.b64  	%rd3641, %rd3640, %rd3609;
	xor.b64  	%rd3642, %rd3641, %rd3624;
	xor.b64  	%rd3643, %rd3582, %rd3567;
	xor.b64  	%rd3644, %rd3643, %rd3597;
	xor.b64  	%rd3645, %rd3644, %rd3612;
	xor.b64  	%rd3646, %rd3645, %rd3627;
	xor.b64  	%rd3647, %rd3585, %rd3570;
	xor.b64  	%rd3648, %rd3647, %rd3600;
	xor.b64  	%rd3649, %rd3648, %rd3615;
	xor.b64  	%rd3650, %rd3649, %rd3630;
	xor.b64  	%rd3651, %rd3588, %rd3573;
	xor.b64  	%rd3652, %rd3651, %rd3603;
	xor.b64  	%rd3653, %rd3652, %rd3618;
	xor.b64  	%rd3654, %rd3653, %rd3633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd3642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2514,%dummy}, %rd3642;
	}
	shf.l.wrap.b32 	%r2515, %r2514, %r2513, 1;
	shf.l.wrap.b32 	%r2516, %r2513, %r2514, 1;
	mov.b64 	%rd3655, {%r2516, %r2515};
	xor.b64  	%rd3656, %rd3654, %rd3655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd3646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2518,%dummy}, %rd3646;
	}
	shf.l.wrap.b32 	%r2519, %r2518, %r2517, 1;
	shf.l.wrap.b32 	%r2520, %r2517, %r2518, 1;
	mov.b64 	%rd3657, {%r2520, %r2519};
	xor.b64  	%rd3658, %rd3657, %rd3638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2521}, %rd3650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2522,%dummy}, %rd3650;
	}
	shf.l.wrap.b32 	%r2523, %r2522, %r2521, 1;
	shf.l.wrap.b32 	%r2524, %r2521, %r2522, 1;
	mov.b64 	%rd3659, {%r2524, %r2523};
	xor.b64  	%rd3660, %rd3659, %rd3642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd3654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2526,%dummy}, %rd3654;
	}
	shf.l.wrap.b32 	%r2527, %r2526, %r2525, 1;
	shf.l.wrap.b32 	%r2528, %r2525, %r2526, 1;
	mov.b64 	%rd3661, {%r2528, %r2527};
	xor.b64  	%rd3662, %rd3661, %rd3646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd3638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2530,%dummy}, %rd3638;
	}
	shf.l.wrap.b32 	%r2531, %r2530, %r2529, 1;
	shf.l.wrap.b32 	%r2532, %r2529, %r2530, 1;
	mov.b64 	%rd3663, {%r2532, %r2531};
	xor.b64  	%rd3664, %rd3650, %rd3663;
	xor.b64  	%rd3665, %rd3656, %rd3634;
	xor.b64  	%rd3666, %rd3658, %rd3564;
	xor.b64  	%rd3667, %rd3660, %rd3567;
	xor.b64  	%rd3668, %rd3662, %rd3570;
	xor.b64  	%rd3669, %rd3664, %rd3573;
	xor.b64  	%rd3670, %rd3656, %rd3576;
	xor.b64  	%rd3671, %rd3658, %rd3579;
	xor.b64  	%rd3672, %rd3660, %rd3582;
	xor.b64  	%rd3673, %rd3662, %rd3585;
	xor.b64  	%rd3674, %rd3664, %rd3588;
	xor.b64  	%rd3675, %rd3656, %rd3591;
	xor.b64  	%rd3676, %rd3658, %rd3594;
	xor.b64  	%rd3677, %rd3660, %rd3597;
	xor.b64  	%rd3678, %rd3662, %rd3600;
	xor.b64  	%rd3679, %rd3664, %rd3603;
	xor.b64  	%rd3680, %rd3656, %rd3606;
	xor.b64  	%rd3681, %rd3658, %rd3609;
	xor.b64  	%rd3682, %rd3660, %rd3612;
	xor.b64  	%rd3683, %rd3662, %rd3615;
	xor.b64  	%rd3684, %rd3664, %rd3618;
	xor.b64  	%rd3685, %rd3656, %rd3621;
	xor.b64  	%rd3686, %rd3658, %rd3624;
	xor.b64  	%rd3687, %rd3660, %rd3627;
	xor.b64  	%rd3688, %rd3662, %rd3630;
	xor.b64  	%rd3689, %rd3664, %rd3633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2533,%dummy}, %rd3671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2534}, %rd3671;
	}
	shf.r.wrap.b32 	%r2535, %r2534, %r2533, 20;
	shf.r.wrap.b32 	%r2536, %r2533, %r2534, 20;
	mov.b64 	%rd3690, {%r2536, %r2535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd3677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2538}, %rd3677;
	}
	shf.r.wrap.b32 	%r2539, %r2538, %r2537, 21;
	shf.r.wrap.b32 	%r2540, %r2537, %r2538, 21;
	mov.b64 	%rd3691, {%r2540, %r2539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2541}, %rd3683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2542,%dummy}, %rd3683;
	}
	shf.l.wrap.b32 	%r2543, %r2542, %r2541, 21;
	shf.l.wrap.b32 	%r2544, %r2541, %r2542, 21;
	mov.b64 	%rd3692, {%r2544, %r2543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd3689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2546,%dummy}, %rd3689;
	}
	shf.l.wrap.b32 	%r2547, %r2546, %r2545, 14;
	shf.l.wrap.b32 	%r2548, %r2545, %r2546, 14;
	mov.b64 	%rd3693, {%r2548, %r2547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2549}, %rd3668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2550,%dummy}, %rd3668;
	}
	shf.l.wrap.b32 	%r2551, %r2550, %r2549, 28;
	shf.l.wrap.b32 	%r2552, %r2549, %r2550, 28;
	mov.b64 	%rd3694, {%r2552, %r2551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2554,%dummy}, %rd3674;
	}
	shf.l.wrap.b32 	%r2555, %r2554, %r2553, 20;
	shf.l.wrap.b32 	%r2556, %r2553, %r2554, 20;
	mov.b64 	%rd3695, {%r2556, %r2555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd3675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2558,%dummy}, %rd3675;
	}
	shf.l.wrap.b32 	%r2559, %r2558, %r2557, 3;
	shf.l.wrap.b32 	%r2560, %r2557, %r2558, 3;
	mov.b64 	%rd3696, {%r2560, %r2559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2561,%dummy}, %rd3681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2562}, %rd3681;
	}
	shf.r.wrap.b32 	%r2563, %r2562, %r2561, 19;
	shf.r.wrap.b32 	%r2564, %r2561, %r2562, 19;
	mov.b64 	%rd3697, {%r2564, %r2563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd3687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd3687;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 3;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 3;
	mov.b64 	%rd3698, {%r2568, %r2567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd3666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2570,%dummy}, %rd3666;
	}
	shf.l.wrap.b32 	%r2571, %r2570, %r2569, 1;
	shf.l.wrap.b32 	%r2572, %r2569, %r2570, 1;
	mov.b64 	%rd3699, {%r2572, %r2571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2573}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2574,%dummy}, %rd3672;
	}
	shf.l.wrap.b32 	%r2575, %r2574, %r2573, 6;
	shf.l.wrap.b32 	%r2576, %r2573, %r2574, 6;
	mov.b64 	%rd3700, {%r2576, %r2575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2577}, %rd3678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2578,%dummy}, %rd3678;
	}
	shf.l.wrap.b32 	%r2579, %r2578, %r2577, 25;
	shf.l.wrap.b32 	%r2580, %r2577, %r2578, 25;
	mov.b64 	%rd3701, {%r2580, %r2579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd3684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2582,%dummy}, %rd3684;
	}
	shf.l.wrap.b32 	%r2583, %r2582, %r2581, 8;
	shf.l.wrap.b32 	%r2584, %r2581, %r2582, 8;
	mov.b64 	%rd3702, {%r2584, %r2583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd3685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2586,%dummy}, %rd3685;
	}
	shf.l.wrap.b32 	%r2587, %r2586, %r2585, 18;
	shf.l.wrap.b32 	%r2588, %r2585, %r2586, 18;
	mov.b64 	%rd3703, {%r2588, %r2587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd3669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2590,%dummy}, %rd3669;
	}
	shf.l.wrap.b32 	%r2591, %r2590, %r2589, 27;
	shf.l.wrap.b32 	%r2592, %r2589, %r2590, 27;
	mov.b64 	%rd3704, {%r2592, %r2591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2593,%dummy}, %rd3670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2594}, %rd3670;
	}
	shf.r.wrap.b32 	%r2595, %r2594, %r2593, 28;
	shf.r.wrap.b32 	%r2596, %r2593, %r2594, 28;
	mov.b64 	%rd3705, {%r2596, %r2595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd3676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2598,%dummy}, %rd3676;
	}
	shf.l.wrap.b32 	%r2599, %r2598, %r2597, 10;
	shf.l.wrap.b32 	%r2600, %r2597, %r2598, 10;
	mov.b64 	%rd3706, {%r2600, %r2599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd3682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2602,%dummy}, %rd3682;
	}
	shf.l.wrap.b32 	%r2603, %r2602, %r2601, 15;
	shf.l.wrap.b32 	%r2604, %r2601, %r2602, 15;
	mov.b64 	%rd3707, {%r2604, %r2603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2605,%dummy}, %rd3688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2606}, %rd3688;
	}
	shf.r.wrap.b32 	%r2607, %r2606, %r2605, 8;
	shf.r.wrap.b32 	%r2608, %r2605, %r2606, 8;
	mov.b64 	%rd3708, {%r2608, %r2607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2609,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2610}, %rd3667;
	}
	shf.r.wrap.b32 	%r2611, %r2610, %r2609, 2;
	shf.r.wrap.b32 	%r2612, %r2609, %r2610, 2;
	mov.b64 	%rd3709, {%r2612, %r2611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd3673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd3673;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 9;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 9;
	mov.b64 	%rd3710, {%r2616, %r2615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2617,%dummy}, %rd3679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2618}, %rd3679;
	}
	shf.r.wrap.b32 	%r2619, %r2618, %r2617, 25;
	shf.r.wrap.b32 	%r2620, %r2617, %r2618, 25;
	mov.b64 	%rd3711, {%r2620, %r2619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2621,%dummy}, %rd3680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2622}, %rd3680;
	}
	shf.r.wrap.b32 	%r2623, %r2622, %r2621, 23;
	shf.r.wrap.b32 	%r2624, %r2621, %r2622, 23;
	mov.b64 	%rd3712, {%r2624, %r2623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2625}, %rd3686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2626,%dummy}, %rd3686;
	}
	shf.l.wrap.b32 	%r2627, %r2626, %r2625, 2;
	shf.l.wrap.b32 	%r2628, %r2625, %r2626, 2;
	mov.b64 	%rd3713, {%r2628, %r2627};
	not.b64 	%rd3714, %rd3690;
	and.b64  	%rd3715, %rd3691, %rd3714;
	xor.b64  	%rd3716, %rd3715, %rd3665;
	not.b64 	%rd3717, %rd3691;
	and.b64  	%rd3718, %rd3692, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3690;
	not.b64 	%rd3720, %rd3692;
	and.b64  	%rd3721, %rd3693, %rd3720;
	xor.b64  	%rd3722, %rd3721, %rd3691;
	not.b64 	%rd3723, %rd3693;
	and.b64  	%rd3724, %rd3665, %rd3723;
	xor.b64  	%rd3725, %rd3724, %rd3692;
	not.b64 	%rd3726, %rd3665;
	and.b64  	%rd3727, %rd3690, %rd3726;
	xor.b64  	%rd3728, %rd3727, %rd3693;
	not.b64 	%rd3729, %rd3695;
	and.b64  	%rd3730, %rd3696, %rd3729;
	xor.b64  	%rd3731, %rd3730, %rd3694;
	not.b64 	%rd3732, %rd3696;
	and.b64  	%rd3733, %rd3697, %rd3732;
	xor.b64  	%rd3734, %rd3733, %rd3695;
	not.b64 	%rd3735, %rd3697;
	and.b64  	%rd3736, %rd3698, %rd3735;
	xor.b64  	%rd3737, %rd3736, %rd3696;
	not.b64 	%rd3738, %rd3698;
	and.b64  	%rd3739, %rd3694, %rd3738;
	xor.b64  	%rd3740, %rd3739, %rd3697;
	not.b64 	%rd3741, %rd3694;
	and.b64  	%rd3742, %rd3695, %rd3741;
	xor.b64  	%rd3743, %rd3742, %rd3698;
	not.b64 	%rd3744, %rd3700;
	and.b64  	%rd3745, %rd3701, %rd3744;
	xor.b64  	%rd3746, %rd3745, %rd3699;
	not.b64 	%rd3747, %rd3701;
	and.b64  	%rd3748, %rd3702, %rd3747;
	xor.b64  	%rd3749, %rd3748, %rd3700;
	not.b64 	%rd3750, %rd3702;
	and.b64  	%rd3751, %rd3703, %rd3750;
	xor.b64  	%rd3752, %rd3751, %rd3701;
	not.b64 	%rd3753, %rd3703;
	and.b64  	%rd3754, %rd3699, %rd3753;
	xor.b64  	%rd3755, %rd3754, %rd3702;
	not.b64 	%rd3756, %rd3699;
	and.b64  	%rd3757, %rd3700, %rd3756;
	xor.b64  	%rd3758, %rd3757, %rd3703;
	not.b64 	%rd3759, %rd3705;
	and.b64  	%rd3760, %rd3706, %rd3759;
	xor.b64  	%rd3761, %rd3760, %rd3704;
	not.b64 	%rd3762, %rd3706;
	and.b64  	%rd3763, %rd3707, %rd3762;
	xor.b64  	%rd3764, %rd3763, %rd3705;
	not.b64 	%rd3765, %rd3707;
	and.b64  	%rd3766, %rd3708, %rd3765;
	xor.b64  	%rd3767, %rd3766, %rd3706;
	not.b64 	%rd3768, %rd3708;
	and.b64  	%rd3769, %rd3704, %rd3768;
	xor.b64  	%rd3770, %rd3769, %rd3707;
	not.b64 	%rd3771, %rd3704;
	and.b64  	%rd3772, %rd3705, %rd3771;
	xor.b64  	%rd3773, %rd3772, %rd3708;
	not.b64 	%rd3774, %rd3710;
	and.b64  	%rd3775, %rd3711, %rd3774;
	xor.b64  	%rd3776, %rd3775, %rd3709;
	not.b64 	%rd3777, %rd3711;
	and.b64  	%rd3778, %rd3712, %rd3777;
	xor.b64  	%rd3779, %rd3778, %rd3710;
	not.b64 	%rd3780, %rd3712;
	and.b64  	%rd3781, %rd3713, %rd3780;
	xor.b64  	%rd3782, %rd3781, %rd3711;
	not.b64 	%rd3783, %rd3713;
	and.b64  	%rd3784, %rd3709, %rd3783;
	xor.b64  	%rd3785, %rd3784, %rd3712;
	not.b64 	%rd3786, %rd3709;
	and.b64  	%rd3787, %rd3710, %rd3786;
	xor.b64  	%rd3788, %rd3787, %rd3713;
	xor.b64  	%rd3789, %rd3716, %rd37;
	xor.b64  	%rd3790, %rd3731, %rd3789;
	xor.b64  	%rd3791, %rd3790, %rd3746;
	xor.b64  	%rd3792, %rd3791, %rd3761;
	xor.b64  	%rd3793, %rd3792, %rd3776;
	xor.b64  	%rd3794, %rd3734, %rd3719;
	xor.b64  	%rd3795, %rd3794, %rd3749;
	xor.b64  	%rd3796, %rd3795, %rd3764;
	xor.b64  	%rd3797, %rd3796, %rd3779;
	xor.b64  	%rd3798, %rd3737, %rd3722;
	xor.b64  	%rd3799, %rd3798, %rd3752;
	xor.b64  	%rd3800, %rd3799, %rd3767;
	xor.b64  	%rd3801, %rd3800, %rd3782;
	xor.b64  	%rd3802, %rd3740, %rd3725;
	xor.b64  	%rd3803, %rd3802, %rd3755;
	xor.b64  	%rd3804, %rd3803, %rd3770;
	xor.b64  	%rd3805, %rd3804, %rd3785;
	xor.b64  	%rd3806, %rd3743, %rd3728;
	xor.b64  	%rd3807, %rd3806, %rd3758;
	xor.b64  	%rd3808, %rd3807, %rd3773;
	xor.b64  	%rd3809, %rd3808, %rd3788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2629}, %rd3797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2630,%dummy}, %rd3797;
	}
	shf.l.wrap.b32 	%r2631, %r2630, %r2629, 1;
	shf.l.wrap.b32 	%r2632, %r2629, %r2630, 1;
	mov.b64 	%rd3810, {%r2632, %r2631};
	xor.b64  	%rd3811, %rd3809, %rd3810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd3801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2634,%dummy}, %rd3801;
	}
	shf.l.wrap.b32 	%r2635, %r2634, %r2633, 1;
	shf.l.wrap.b32 	%r2636, %r2633, %r2634, 1;
	mov.b64 	%rd3812, {%r2636, %r2635};
	xor.b64  	%rd3813, %rd3812, %rd3793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2638,%dummy}, %rd3805;
	}
	shf.l.wrap.b32 	%r2639, %r2638, %r2637, 1;
	shf.l.wrap.b32 	%r2640, %r2637, %r2638, 1;
	mov.b64 	%rd3814, {%r2640, %r2639};
	xor.b64  	%rd3815, %rd3814, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2641}, %rd3809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2642,%dummy}, %rd3809;
	}
	shf.l.wrap.b32 	%r2643, %r2642, %r2641, 1;
	shf.l.wrap.b32 	%r2644, %r2641, %r2642, 1;
	mov.b64 	%rd3816, {%r2644, %r2643};
	xor.b64  	%rd3817, %rd3816, %rd3801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd3793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2646,%dummy}, %rd3793;
	}
	shf.l.wrap.b32 	%r2647, %r2646, %r2645, 1;
	shf.l.wrap.b32 	%r2648, %r2645, %r2646, 1;
	mov.b64 	%rd3818, {%r2648, %r2647};
	xor.b64  	%rd3819, %rd3805, %rd3818;
	xor.b64  	%rd3820, %rd3811, %rd3789;
	xor.b64  	%rd3821, %rd3813, %rd3719;
	xor.b64  	%rd3822, %rd3815, %rd3722;
	xor.b64  	%rd3823, %rd3817, %rd3725;
	xor.b64  	%rd3824, %rd3819, %rd3728;
	xor.b64  	%rd3825, %rd3811, %rd3731;
	xor.b64  	%rd3826, %rd3813, %rd3734;
	xor.b64  	%rd3827, %rd3815, %rd3737;
	xor.b64  	%rd3828, %rd3817, %rd3740;
	xor.b64  	%rd3829, %rd3819, %rd3743;
	xor.b64  	%rd3830, %rd3811, %rd3746;
	xor.b64  	%rd3831, %rd3813, %rd3749;
	xor.b64  	%rd3832, %rd3815, %rd3752;
	xor.b64  	%rd3833, %rd3817, %rd3755;
	xor.b64  	%rd3834, %rd3819, %rd3758;
	xor.b64  	%rd3835, %rd3811, %rd3761;
	xor.b64  	%rd3836, %rd3813, %rd3764;
	xor.b64  	%rd3837, %rd3815, %rd3767;
	xor.b64  	%rd3838, %rd3817, %rd3770;
	xor.b64  	%rd3839, %rd3819, %rd3773;
	xor.b64  	%rd3840, %rd3811, %rd3776;
	xor.b64  	%rd3841, %rd3813, %rd3779;
	xor.b64  	%rd3842, %rd3815, %rd3782;
	xor.b64  	%rd3843, %rd3817, %rd3785;
	xor.b64  	%rd3844, %rd3819, %rd3788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd3826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd3826;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 20;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 20;
	mov.b64 	%rd3845, {%r2652, %r2651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2653,%dummy}, %rd3832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2654}, %rd3832;
	}
	shf.r.wrap.b32 	%r2655, %r2654, %r2653, 21;
	shf.r.wrap.b32 	%r2656, %r2653, %r2654, 21;
	mov.b64 	%rd3846, {%r2656, %r2655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd3838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2658,%dummy}, %rd3838;
	}
	shf.l.wrap.b32 	%r2659, %r2658, %r2657, 21;
	shf.l.wrap.b32 	%r2660, %r2657, %r2658, 21;
	mov.b64 	%rd3847, {%r2660, %r2659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2661}, %rd3844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2662,%dummy}, %rd3844;
	}
	shf.l.wrap.b32 	%r2663, %r2662, %r2661, 14;
	shf.l.wrap.b32 	%r2664, %r2661, %r2662, 14;
	mov.b64 	%rd3848, {%r2664, %r2663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd3823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd3823;
	}
	shf.l.wrap.b32 	%r2667, %r2666, %r2665, 28;
	shf.l.wrap.b32 	%r2668, %r2665, %r2666, 28;
	mov.b64 	%rd3849, {%r2668, %r2667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd3829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2670,%dummy}, %rd3829;
	}
	shf.l.wrap.b32 	%r2671, %r2670, %r2669, 20;
	shf.l.wrap.b32 	%r2672, %r2669, %r2670, 20;
	mov.b64 	%rd3850, {%r2672, %r2671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd3830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2674,%dummy}, %rd3830;
	}
	shf.l.wrap.b32 	%r2675, %r2674, %r2673, 3;
	shf.l.wrap.b32 	%r2676, %r2673, %r2674, 3;
	mov.b64 	%rd3851, {%r2676, %r2675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd3836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd3836;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 19;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 19;
	mov.b64 	%rd3852, {%r2680, %r2679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2681,%dummy}, %rd3842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2682}, %rd3842;
	}
	shf.r.wrap.b32 	%r2683, %r2682, %r2681, 3;
	shf.r.wrap.b32 	%r2684, %r2681, %r2682, 3;
	mov.b64 	%rd3853, {%r2684, %r2683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2686,%dummy}, %rd3821;
	}
	shf.l.wrap.b32 	%r2687, %r2686, %r2685, 1;
	shf.l.wrap.b32 	%r2688, %r2685, %r2686, 1;
	mov.b64 	%rd3854, {%r2688, %r2687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2689}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2690,%dummy}, %rd3827;
	}
	shf.l.wrap.b32 	%r2691, %r2690, %r2689, 6;
	shf.l.wrap.b32 	%r2692, %r2689, %r2690, 6;
	mov.b64 	%rd3855, {%r2692, %r2691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2693}, %rd3833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd3833;
	}
	shf.l.wrap.b32 	%r2695, %r2694, %r2693, 25;
	shf.l.wrap.b32 	%r2696, %r2693, %r2694, 25;
	mov.b64 	%rd3856, {%r2696, %r2695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2697}, %rd3839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2698,%dummy}, %rd3839;
	}
	shf.l.wrap.b32 	%r2699, %r2698, %r2697, 8;
	shf.l.wrap.b32 	%r2700, %r2697, %r2698, 8;
	mov.b64 	%rd3857, {%r2700, %r2699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2701}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2702,%dummy}, %rd3840;
	}
	shf.l.wrap.b32 	%r2703, %r2702, %r2701, 18;
	shf.l.wrap.b32 	%r2704, %r2701, %r2702, 18;
	mov.b64 	%rd3858, {%r2704, %r2703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd3824;
	}
	shf.l.wrap.b32 	%r2707, %r2706, %r2705, 27;
	shf.l.wrap.b32 	%r2708, %r2705, %r2706, 27;
	mov.b64 	%rd3859, {%r2708, %r2707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd3825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2710}, %rd3825;
	}
	shf.r.wrap.b32 	%r2711, %r2710, %r2709, 28;
	shf.r.wrap.b32 	%r2712, %r2709, %r2710, 28;
	mov.b64 	%rd3860, {%r2712, %r2711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd3831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2714,%dummy}, %rd3831;
	}
	shf.l.wrap.b32 	%r2715, %r2714, %r2713, 10;
	shf.l.wrap.b32 	%r2716, %r2713, %r2714, 10;
	mov.b64 	%rd3861, {%r2716, %r2715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2717}, %rd3837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2718,%dummy}, %rd3837;
	}
	shf.l.wrap.b32 	%r2719, %r2718, %r2717, 15;
	shf.l.wrap.b32 	%r2720, %r2717, %r2718, 15;
	mov.b64 	%rd3862, {%r2720, %r2719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2721,%dummy}, %rd3843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2722}, %rd3843;
	}
	shf.r.wrap.b32 	%r2723, %r2722, %r2721, 8;
	shf.r.wrap.b32 	%r2724, %r2721, %r2722, 8;
	mov.b64 	%rd3863, {%r2724, %r2723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd3822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2726}, %rd3822;
	}
	shf.r.wrap.b32 	%r2727, %r2726, %r2725, 2;
	shf.r.wrap.b32 	%r2728, %r2725, %r2726, 2;
	mov.b64 	%rd3864, {%r2728, %r2727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2729,%dummy}, %rd3828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2730}, %rd3828;
	}
	shf.r.wrap.b32 	%r2731, %r2730, %r2729, 9;
	shf.r.wrap.b32 	%r2732, %r2729, %r2730, 9;
	mov.b64 	%rd3865, {%r2732, %r2731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2733,%dummy}, %rd3834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2734}, %rd3834;
	}
	shf.r.wrap.b32 	%r2735, %r2734, %r2733, 25;
	shf.r.wrap.b32 	%r2736, %r2733, %r2734, 25;
	mov.b64 	%rd3866, {%r2736, %r2735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2737,%dummy}, %rd3835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2738}, %rd3835;
	}
	shf.r.wrap.b32 	%r2739, %r2738, %r2737, 23;
	shf.r.wrap.b32 	%r2740, %r2737, %r2738, 23;
	mov.b64 	%rd3867, {%r2740, %r2739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2741}, %rd3841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2742,%dummy}, %rd3841;
	}
	shf.l.wrap.b32 	%r2743, %r2742, %r2741, 2;
	shf.l.wrap.b32 	%r2744, %r2741, %r2742, 2;
	mov.b64 	%rd3868, {%r2744, %r2743};
	not.b64 	%rd3869, %rd3845;
	and.b64  	%rd3870, %rd3846, %rd3869;
	xor.b64  	%rd3871, %rd3870, %rd3820;
	not.b64 	%rd3872, %rd3846;
	and.b64  	%rd3873, %rd3847, %rd3872;
	xor.b64  	%rd3874, %rd3873, %rd3845;
	not.b64 	%rd3875, %rd3847;
	and.b64  	%rd3876, %rd3848, %rd3875;
	xor.b64  	%rd3877, %rd3876, %rd3846;
	not.b64 	%rd3878, %rd3848;
	and.b64  	%rd3879, %rd3820, %rd3878;
	xor.b64  	%rd3880, %rd3879, %rd3847;
	not.b64 	%rd3881, %rd3820;
	and.b64  	%rd3882, %rd3845, %rd3881;
	xor.b64  	%rd3883, %rd3882, %rd3848;
	not.b64 	%rd3884, %rd3850;
	and.b64  	%rd3885, %rd3851, %rd3884;
	xor.b64  	%rd3886, %rd3885, %rd3849;
	not.b64 	%rd3887, %rd3851;
	and.b64  	%rd3888, %rd3852, %rd3887;
	xor.b64  	%rd3889, %rd3888, %rd3850;
	not.b64 	%rd3890, %rd3852;
	and.b64  	%rd3891, %rd3853, %rd3890;
	xor.b64  	%rd3892, %rd3891, %rd3851;
	not.b64 	%rd3893, %rd3853;
	and.b64  	%rd3894, %rd3849, %rd3893;
	xor.b64  	%rd3895, %rd3894, %rd3852;
	not.b64 	%rd3896, %rd3849;
	and.b64  	%rd3897, %rd3850, %rd3896;
	xor.b64  	%rd3898, %rd3897, %rd3853;
	not.b64 	%rd3899, %rd3855;
	and.b64  	%rd3900, %rd3856, %rd3899;
	xor.b64  	%rd3901, %rd3900, %rd3854;
	not.b64 	%rd3902, %rd3856;
	and.b64  	%rd3903, %rd3857, %rd3902;
	xor.b64  	%rd3904, %rd3903, %rd3855;
	not.b64 	%rd3905, %rd3857;
	and.b64  	%rd3906, %rd3858, %rd3905;
	xor.b64  	%rd3907, %rd3906, %rd3856;
	not.b64 	%rd3908, %rd3858;
	and.b64  	%rd3909, %rd3854, %rd3908;
	xor.b64  	%rd3910, %rd3909, %rd3857;
	not.b64 	%rd3911, %rd3854;
	and.b64  	%rd3912, %rd3855, %rd3911;
	xor.b64  	%rd3913, %rd3912, %rd3858;
	not.b64 	%rd3914, %rd3860;
	and.b64  	%rd3915, %rd3861, %rd3914;
	xor.b64  	%rd3916, %rd3915, %rd3859;
	not.b64 	%rd3917, %rd3861;
	and.b64  	%rd3918, %rd3862, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd3860;
	not.b64 	%rd3920, %rd3862;
	and.b64  	%rd3921, %rd3863, %rd3920;
	xor.b64  	%rd3922, %rd3921, %rd3861;
	not.b64 	%rd3923, %rd3863;
	and.b64  	%rd3924, %rd3859, %rd3923;
	xor.b64  	%rd3925, %rd3924, %rd3862;
	not.b64 	%rd3926, %rd3859;
	and.b64  	%rd3927, %rd3860, %rd3926;
	xor.b64  	%rd3928, %rd3927, %rd3863;
	not.b64 	%rd3929, %rd3865;
	and.b64  	%rd3930, %rd3866, %rd3929;
	xor.b64  	%rd3931, %rd3930, %rd3864;
	not.b64 	%rd3932, %rd3866;
	and.b64  	%rd3933, %rd3867, %rd3932;
	xor.b64  	%rd3934, %rd3933, %rd3865;
	not.b64 	%rd3935, %rd3867;
	and.b64  	%rd3936, %rd3868, %rd3935;
	xor.b64  	%rd3937, %rd3936, %rd3866;
	not.b64 	%rd3938, %rd3868;
	and.b64  	%rd3939, %rd3864, %rd3938;
	xor.b64  	%rd3940, %rd3939, %rd3867;
	not.b64 	%rd3941, %rd3864;
	and.b64  	%rd3942, %rd3865, %rd3941;
	xor.b64  	%rd3943, %rd3942, %rd3868;
	xor.b64  	%rd3944, %rd3871, %rd38;
	xor.b64  	%rd3945, %rd3886, %rd3944;
	xor.b64  	%rd3946, %rd3945, %rd3901;
	xor.b64  	%rd3947, %rd3946, %rd3916;
	xor.b64  	%rd3948, %rd3947, %rd3931;
	xor.b64  	%rd3949, %rd3889, %rd3874;
	xor.b64  	%rd3950, %rd3949, %rd3904;
	xor.b64  	%rd3951, %rd3950, %rd3919;
	xor.b64  	%rd3952, %rd3951, %rd3934;
	xor.b64  	%rd3953, %rd3892, %rd3877;
	xor.b64  	%rd3954, %rd3953, %rd3907;
	xor.b64  	%rd3955, %rd3954, %rd3922;
	xor.b64  	%rd3956, %rd3955, %rd3937;
	xor.b64  	%rd3957, %rd3895, %rd3880;
	xor.b64  	%rd3958, %rd3957, %rd3910;
	xor.b64  	%rd3959, %rd3958, %rd3925;
	xor.b64  	%rd3960, %rd3959, %rd3940;
	xor.b64  	%rd3961, %rd3898, %rd3883;
	xor.b64  	%rd3962, %rd3961, %rd3913;
	xor.b64  	%rd3963, %rd3962, %rd3928;
	xor.b64  	%rd3964, %rd3963, %rd3943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd3952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2746,%dummy}, %rd3952;
	}
	shf.l.wrap.b32 	%r2747, %r2746, %r2745, 1;
	shf.l.wrap.b32 	%r2748, %r2745, %r2746, 1;
	mov.b64 	%rd3965, {%r2748, %r2747};
	xor.b64  	%rd3966, %rd3964, %rd3965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2749}, %rd3956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2750,%dummy}, %rd3956;
	}
	shf.l.wrap.b32 	%r2751, %r2750, %r2749, 1;
	shf.l.wrap.b32 	%r2752, %r2749, %r2750, 1;
	mov.b64 	%rd3967, {%r2752, %r2751};
	xor.b64  	%rd3968, %rd3967, %rd3948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2753}, %rd3960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2754,%dummy}, %rd3960;
	}
	shf.l.wrap.b32 	%r2755, %r2754, %r2753, 1;
	shf.l.wrap.b32 	%r2756, %r2753, %r2754, 1;
	mov.b64 	%rd3969, {%r2756, %r2755};
	xor.b64  	%rd3970, %rd3969, %rd3952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2758,%dummy}, %rd3964;
	}
	shf.l.wrap.b32 	%r2759, %r2758, %r2757, 1;
	shf.l.wrap.b32 	%r2760, %r2757, %r2758, 1;
	mov.b64 	%rd3971, {%r2760, %r2759};
	xor.b64  	%rd3972, %rd3971, %rd3956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd3948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd3948;
	}
	shf.l.wrap.b32 	%r2763, %r2762, %r2761, 1;
	shf.l.wrap.b32 	%r2764, %r2761, %r2762, 1;
	mov.b64 	%rd3973, {%r2764, %r2763};
	xor.b64  	%rd3974, %rd3960, %rd3973;
	xor.b64  	%rd3975, %rd3966, %rd3944;
	xor.b64  	%rd3976, %rd3968, %rd3874;
	xor.b64  	%rd3977, %rd3970, %rd3877;
	xor.b64  	%rd3978, %rd3972, %rd3880;
	xor.b64  	%rd3979, %rd3974, %rd3883;
	xor.b64  	%rd3980, %rd3966, %rd3886;
	xor.b64  	%rd3981, %rd3968, %rd3889;
	xor.b64  	%rd3982, %rd3970, %rd3892;
	xor.b64  	%rd3983, %rd3972, %rd3895;
	xor.b64  	%rd3984, %rd3974, %rd3898;
	xor.b64  	%rd3985, %rd3966, %rd3901;
	xor.b64  	%rd3986, %rd3968, %rd3904;
	xor.b64  	%rd3987, %rd3970, %rd3907;
	xor.b64  	%rd3988, %rd3972, %rd3910;
	xor.b64  	%rd3989, %rd3974, %rd3913;
	xor.b64  	%rd3990, %rd3966, %rd3916;
	xor.b64  	%rd3991, %rd3968, %rd3919;
	xor.b64  	%rd3992, %rd3970, %rd3922;
	xor.b64  	%rd3993, %rd3972, %rd3925;
	xor.b64  	%rd3994, %rd3974, %rd3928;
	xor.b64  	%rd3995, %rd3966, %rd3931;
	xor.b64  	%rd3996, %rd3968, %rd3934;
	xor.b64  	%rd3997, %rd3970, %rd3937;
	xor.b64  	%rd3998, %rd3972, %rd3940;
	xor.b64  	%rd3999, %rd3974, %rd3943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2765,%dummy}, %rd3981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2766}, %rd3981;
	}
	shf.r.wrap.b32 	%r2767, %r2766, %r2765, 20;
	shf.r.wrap.b32 	%r2768, %r2765, %r2766, 20;
	mov.b64 	%rd4000, {%r2768, %r2767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd3987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd3987;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 21;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 21;
	mov.b64 	%rd4001, {%r2772, %r2771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2773}, %rd3993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2774,%dummy}, %rd3993;
	}
	shf.l.wrap.b32 	%r2775, %r2774, %r2773, 21;
	shf.l.wrap.b32 	%r2776, %r2773, %r2774, 21;
	mov.b64 	%rd4002, {%r2776, %r2775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd3999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd3999;
	}
	shf.l.wrap.b32 	%r2779, %r2778, %r2777, 14;
	shf.l.wrap.b32 	%r2780, %r2777, %r2778, 14;
	mov.b64 	%rd4003, {%r2780, %r2779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2781}, %rd3978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2782,%dummy}, %rd3978;
	}
	shf.l.wrap.b32 	%r2783, %r2782, %r2781, 28;
	shf.l.wrap.b32 	%r2784, %r2781, %r2782, 28;
	mov.b64 	%rd4004, {%r2784, %r2783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd3984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd3984;
	}
	shf.l.wrap.b32 	%r2787, %r2786, %r2785, 20;
	shf.l.wrap.b32 	%r2788, %r2785, %r2786, 20;
	mov.b64 	%rd4005, {%r2788, %r2787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2789}, %rd3985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd3985;
	}
	shf.l.wrap.b32 	%r2791, %r2790, %r2789, 3;
	shf.l.wrap.b32 	%r2792, %r2789, %r2790, 3;
	mov.b64 	%rd4006, {%r2792, %r2791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2793,%dummy}, %rd3991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2794}, %rd3991;
	}
	shf.r.wrap.b32 	%r2795, %r2794, %r2793, 19;
	shf.r.wrap.b32 	%r2796, %r2793, %r2794, 19;
	mov.b64 	%rd4007, {%r2796, %r2795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2797,%dummy}, %rd3997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2798}, %rd3997;
	}
	shf.r.wrap.b32 	%r2799, %r2798, %r2797, 3;
	shf.r.wrap.b32 	%r2800, %r2797, %r2798, 3;
	mov.b64 	%rd4008, {%r2800, %r2799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2801}, %rd3976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2802,%dummy}, %rd3976;
	}
	shf.l.wrap.b32 	%r2803, %r2802, %r2801, 1;
	shf.l.wrap.b32 	%r2804, %r2801, %r2802, 1;
	mov.b64 	%rd4009, {%r2804, %r2803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd3982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2806,%dummy}, %rd3982;
	}
	shf.l.wrap.b32 	%r2807, %r2806, %r2805, 6;
	shf.l.wrap.b32 	%r2808, %r2805, %r2806, 6;
	mov.b64 	%rd4010, {%r2808, %r2807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd3988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2810,%dummy}, %rd3988;
	}
	shf.l.wrap.b32 	%r2811, %r2810, %r2809, 25;
	shf.l.wrap.b32 	%r2812, %r2809, %r2810, 25;
	mov.b64 	%rd4011, {%r2812, %r2811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2813}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2814,%dummy}, %rd3994;
	}
	shf.l.wrap.b32 	%r2815, %r2814, %r2813, 8;
	shf.l.wrap.b32 	%r2816, %r2813, %r2814, 8;
	mov.b64 	%rd4012, {%r2816, %r2815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2817}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd3995;
	}
	shf.l.wrap.b32 	%r2819, %r2818, %r2817, 18;
	shf.l.wrap.b32 	%r2820, %r2817, %r2818, 18;
	mov.b64 	%rd4013, {%r2820, %r2819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2821}, %rd3979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2822,%dummy}, %rd3979;
	}
	shf.l.wrap.b32 	%r2823, %r2822, %r2821, 27;
	shf.l.wrap.b32 	%r2824, %r2821, %r2822, 27;
	mov.b64 	%rd4014, {%r2824, %r2823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd3980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2826}, %rd3980;
	}
	shf.r.wrap.b32 	%r2827, %r2826, %r2825, 28;
	shf.r.wrap.b32 	%r2828, %r2825, %r2826, 28;
	mov.b64 	%rd4015, {%r2828, %r2827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2829}, %rd3986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2830,%dummy}, %rd3986;
	}
	shf.l.wrap.b32 	%r2831, %r2830, %r2829, 10;
	shf.l.wrap.b32 	%r2832, %r2829, %r2830, 10;
	mov.b64 	%rd4016, {%r2832, %r2831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd3992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd3992;
	}
	shf.l.wrap.b32 	%r2835, %r2834, %r2833, 15;
	shf.l.wrap.b32 	%r2836, %r2833, %r2834, 15;
	mov.b64 	%rd4017, {%r2836, %r2835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2837,%dummy}, %rd3998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2838}, %rd3998;
	}
	shf.r.wrap.b32 	%r2839, %r2838, %r2837, 8;
	shf.r.wrap.b32 	%r2840, %r2837, %r2838, 8;
	mov.b64 	%rd4018, {%r2840, %r2839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2841,%dummy}, %rd3977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2842}, %rd3977;
	}
	shf.r.wrap.b32 	%r2843, %r2842, %r2841, 2;
	shf.r.wrap.b32 	%r2844, %r2841, %r2842, 2;
	mov.b64 	%rd4019, {%r2844, %r2843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2845,%dummy}, %rd3983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2846}, %rd3983;
	}
	shf.r.wrap.b32 	%r2847, %r2846, %r2845, 9;
	shf.r.wrap.b32 	%r2848, %r2845, %r2846, 9;
	mov.b64 	%rd4020, {%r2848, %r2847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2849,%dummy}, %rd3989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2850}, %rd3989;
	}
	shf.r.wrap.b32 	%r2851, %r2850, %r2849, 25;
	shf.r.wrap.b32 	%r2852, %r2849, %r2850, 25;
	mov.b64 	%rd4021, {%r2852, %r2851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2853,%dummy}, %rd3990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2854}, %rd3990;
	}
	shf.r.wrap.b32 	%r2855, %r2854, %r2853, 23;
	shf.r.wrap.b32 	%r2856, %r2853, %r2854, 23;
	mov.b64 	%rd4022, {%r2856, %r2855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2857}, %rd3996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd3996;
	}
	shf.l.wrap.b32 	%r2859, %r2858, %r2857, 2;
	shf.l.wrap.b32 	%r2860, %r2857, %r2858, 2;
	mov.b64 	%rd4023, {%r2860, %r2859};
	not.b64 	%rd4024, %rd4000;
	and.b64  	%rd4025, %rd4001, %rd4024;
	xor.b64  	%rd4026, %rd4025, %rd3975;
	not.b64 	%rd4027, %rd4001;
	and.b64  	%rd4028, %rd4002, %rd4027;
	xor.b64  	%rd4029, %rd4028, %rd4000;
	st.local.u64 	[%rd2+8], %rd4029;
	not.b64 	%rd4030, %rd4002;
	and.b64  	%rd4031, %rd4003, %rd4030;
	xor.b64  	%rd4032, %rd4031, %rd4001;
	st.local.u64 	[%rd2+16], %rd4032;
	not.b64 	%rd4033, %rd4003;
	and.b64  	%rd4034, %rd3975, %rd4033;
	xor.b64  	%rd4035, %rd4034, %rd4002;
	st.local.u64 	[%rd2+24], %rd4035;
	not.b64 	%rd4036, %rd3975;
	and.b64  	%rd4037, %rd4000, %rd4036;
	xor.b64  	%rd4038, %rd4037, %rd4003;
	st.local.u64 	[%rd2+32], %rd4038;
	not.b64 	%rd4039, %rd4005;
	and.b64  	%rd4040, %rd4006, %rd4039;
	xor.b64  	%rd4041, %rd4040, %rd4004;
	st.local.u64 	[%rd2+40], %rd4041;
	not.b64 	%rd4042, %rd4006;
	and.b64  	%rd4043, %rd4007, %rd4042;
	xor.b64  	%rd4044, %rd4043, %rd4005;
	st.local.u64 	[%rd2+48], %rd4044;
	not.b64 	%rd4045, %rd4007;
	and.b64  	%rd4046, %rd4008, %rd4045;
	xor.b64  	%rd4047, %rd4046, %rd4006;
	st.local.u64 	[%rd2+56], %rd4047;
	not.b64 	%rd4048, %rd4008;
	and.b64  	%rd4049, %rd4004, %rd4048;
	xor.b64  	%rd4050, %rd4049, %rd4007;
	st.local.u64 	[%rd2+64], %rd4050;
	not.b64 	%rd4051, %rd4004;
	and.b64  	%rd4052, %rd4005, %rd4051;
	xor.b64  	%rd4053, %rd4052, %rd4008;
	st.local.u64 	[%rd2+72], %rd4053;
	not.b64 	%rd4054, %rd4010;
	and.b64  	%rd4055, %rd4011, %rd4054;
	xor.b64  	%rd4056, %rd4055, %rd4009;
	st.local.u64 	[%rd2+80], %rd4056;
	not.b64 	%rd4057, %rd4011;
	and.b64  	%rd4058, %rd4012, %rd4057;
	xor.b64  	%rd4059, %rd4058, %rd4010;
	st.local.u64 	[%rd2+88], %rd4059;
	not.b64 	%rd4060, %rd4012;
	and.b64  	%rd4061, %rd4013, %rd4060;
	xor.b64  	%rd4062, %rd4061, %rd4011;
	st.local.u64 	[%rd2+96], %rd4062;
	not.b64 	%rd4063, %rd4013;
	and.b64  	%rd4064, %rd4009, %rd4063;
	xor.b64  	%rd4065, %rd4064, %rd4012;
	st.local.u64 	[%rd2+104], %rd4065;
	not.b64 	%rd4066, %rd4009;
	and.b64  	%rd4067, %rd4010, %rd4066;
	xor.b64  	%rd4068, %rd4067, %rd4013;
	st.local.u64 	[%rd2+112], %rd4068;
	not.b64 	%rd4069, %rd4015;
	and.b64  	%rd4070, %rd4016, %rd4069;
	xor.b64  	%rd4071, %rd4070, %rd4014;
	st.local.u64 	[%rd2+120], %rd4071;
	not.b64 	%rd4072, %rd4016;
	and.b64  	%rd4073, %rd4017, %rd4072;
	xor.b64  	%rd4074, %rd4073, %rd4015;
	st.local.u64 	[%rd2+128], %rd4074;
	not.b64 	%rd4075, %rd4017;
	and.b64  	%rd4076, %rd4018, %rd4075;
	xor.b64  	%rd4077, %rd4076, %rd4016;
	st.local.u64 	[%rd2+136], %rd4077;
	not.b64 	%rd4078, %rd4018;
	and.b64  	%rd4079, %rd4014, %rd4078;
	xor.b64  	%rd4080, %rd4079, %rd4017;
	st.local.u64 	[%rd2+144], %rd4080;
	not.b64 	%rd4081, %rd4014;
	and.b64  	%rd4082, %rd4015, %rd4081;
	xor.b64  	%rd4083, %rd4082, %rd4018;
	st.local.u64 	[%rd2+152], %rd4083;
	not.b64 	%rd4084, %rd4020;
	and.b64  	%rd4085, %rd4021, %rd4084;
	xor.b64  	%rd4086, %rd4085, %rd4019;
	st.local.u64 	[%rd2+160], %rd4086;
	not.b64 	%rd4087, %rd4021;
	and.b64  	%rd4088, %rd4022, %rd4087;
	xor.b64  	%rd4089, %rd4088, %rd4020;
	st.local.u64 	[%rd2+168], %rd4089;
	not.b64 	%rd4090, %rd4022;
	and.b64  	%rd4091, %rd4023, %rd4090;
	xor.b64  	%rd4092, %rd4091, %rd4021;
	st.local.u64 	[%rd2+176], %rd4092;
	not.b64 	%rd4093, %rd4023;
	and.b64  	%rd4094, %rd4019, %rd4093;
	xor.b64  	%rd4095, %rd4094, %rd4022;
	st.local.u64 	[%rd2+184], %rd4095;
	not.b64 	%rd4096, %rd4019;
	and.b64  	%rd4097, %rd4020, %rd4096;
	xor.b64  	%rd4098, %rd4097, %rd4023;
	st.local.u64 	[%rd2+192], %rd4098;
	xor.b64  	%rd4099, %rd4026, %rd39;
	st.local.u64 	[%rd2], %rd4099;
	sub.s64 	%rd4100, %rd381, %rd14;
	add.s64 	%rd19844, %rd14, %rd19844;
	setp.gt.s64 	%p16, %rd19844, %rd4100;
	@%p16 bra 	$L__BB1_29;
	bra.uni 	$L__BB1_7;

$L__BB1_29:
	setp.lt.u64 	%p26, %rd19844, 64;
	@%p26 bra 	$L__BB1_6;

	shl.b64 	%rd7991, %rd19843, 3;
	st.local.u64 	[%rd2+392], %rd7991;
	and.b64  	%rd7992, %rd19843, 2305843009213693951;
	add.s64 	%rd7993, %rd2, %rd7992;
	ld.local.u8 	%rs46, [%rd7993+200];
	or.b16  	%rs47, %rs46, 1;
	st.local.u8 	[%rd7993+200], %rs47;
	ld.local.u64 	%rd7994, [%rd2+392];
	add.s64 	%rd19853, %rd7994, 1;
	st.local.u64 	[%rd2+392], %rd19853;
	ld.const.u64 	%rd7995, [rate_bits];
	setp.ne.s64 	%p27, %rd19853, %rd7995;
	@%p27 bra 	$L__BB1_38;

	setp.eq.s64 	%p28, %rd15, 0;
	@%p28 bra 	$L__BB1_37;

	add.s64 	%rd7998, %rd15, -1;
	and.b64  	%rd19852, %rd15, 3;
	setp.lt.u64 	%p29, %rd7998, 3;
	mov.u64 	%rd19848, 0;
	mov.u64 	%rd19849, %rd19848;
	@%p29 bra 	$L__BB1_35;

	sub.s64 	%rd19847, %rd15, %rd19852;

$L__BB1_34:
	add.s64 	%rd8001, %rd2, %rd19849;
	ld.local.u64 	%rd8002, [%rd8001];
	ld.local.u8 	%rd8003, [%rd8001+200];
	ld.local.u8 	%rd8004, [%rd8001+201];
	bfi.b64 	%rd8005, %rd8004, %rd8003, 8, 8;
	ld.local.u8 	%rd8006, [%rd8001+202];
	ld.local.u8 	%rd8007, [%rd8001+203];
	bfi.b64 	%rd8008, %rd8007, %rd8006, 8, 8;
	bfi.b64 	%rd8009, %rd8008, %rd8005, 16, 16;
	ld.local.u8 	%rd8010, [%rd8001+204];
	ld.local.u8 	%rd8011, [%rd8001+205];
	bfi.b64 	%rd8012, %rd8011, %rd8010, 8, 8;
	ld.local.u8 	%rd8013, [%rd8001+206];
	ld.local.u8 	%rd8014, [%rd8001+207];
	bfi.b64 	%rd8015, %rd8014, %rd8013, 8, 8;
	bfi.b64 	%rd8016, %rd8015, %rd8012, 16, 16;
	bfi.b64 	%rd8017, %rd8016, %rd8009, 32, 32;
	xor.b64  	%rd8018, %rd8002, %rd8017;
	st.local.u64 	[%rd8001], %rd8018;
	ld.local.u64 	%rd8019, [%rd8001+8];
	ld.local.u8 	%rd8020, [%rd8001+208];
	ld.local.u8 	%rd8021, [%rd8001+209];
	bfi.b64 	%rd8022, %rd8021, %rd8020, 8, 8;
	ld.local.u8 	%rd8023, [%rd8001+210];
	ld.local.u8 	%rd8024, [%rd8001+211];
	bfi.b64 	%rd8025, %rd8024, %rd8023, 8, 8;
	bfi.b64 	%rd8026, %rd8025, %rd8022, 16, 16;
	ld.local.u8 	%rd8027, [%rd8001+212];
	ld.local.u8 	%rd8028, [%rd8001+213];
	bfi.b64 	%rd8029, %rd8028, %rd8027, 8, 8;
	ld.local.u8 	%rd8030, [%rd8001+214];
	ld.local.u8 	%rd8031, [%rd8001+215];
	bfi.b64 	%rd8032, %rd8031, %rd8030, 8, 8;
	bfi.b64 	%rd8033, %rd8032, %rd8029, 16, 16;
	bfi.b64 	%rd8034, %rd8033, %rd8026, 32, 32;
	xor.b64  	%rd8035, %rd8019, %rd8034;
	st.local.u64 	[%rd8001+8], %rd8035;
	ld.local.u64 	%rd8036, [%rd8001+16];
	ld.local.u8 	%rd8037, [%rd8001+216];
	ld.local.u8 	%rd8038, [%rd8001+217];
	bfi.b64 	%rd8039, %rd8038, %rd8037, 8, 8;
	ld.local.u8 	%rd8040, [%rd8001+218];
	ld.local.u8 	%rd8041, [%rd8001+219];
	bfi.b64 	%rd8042, %rd8041, %rd8040, 8, 8;
	bfi.b64 	%rd8043, %rd8042, %rd8039, 16, 16;
	ld.local.u8 	%rd8044, [%rd8001+220];
	ld.local.u8 	%rd8045, [%rd8001+221];
	bfi.b64 	%rd8046, %rd8045, %rd8044, 8, 8;
	ld.local.u8 	%rd8047, [%rd8001+222];
	ld.local.u8 	%rd8048, [%rd8001+223];
	bfi.b64 	%rd8049, %rd8048, %rd8047, 8, 8;
	bfi.b64 	%rd8050, %rd8049, %rd8046, 16, 16;
	bfi.b64 	%rd8051, %rd8050, %rd8043, 32, 32;
	xor.b64  	%rd8052, %rd8036, %rd8051;
	st.local.u64 	[%rd8001+16], %rd8052;
	ld.local.u64 	%rd8053, [%rd8001+24];
	ld.local.u8 	%rd8054, [%rd8001+224];
	ld.local.u8 	%rd8055, [%rd8001+225];
	bfi.b64 	%rd8056, %rd8055, %rd8054, 8, 8;
	ld.local.u8 	%rd8057, [%rd8001+226];
	ld.local.u8 	%rd8058, [%rd8001+227];
	bfi.b64 	%rd8059, %rd8058, %rd8057, 8, 8;
	bfi.b64 	%rd8060, %rd8059, %rd8056, 16, 16;
	ld.local.u8 	%rd8061, [%rd8001+228];
	ld.local.u8 	%rd8062, [%rd8001+229];
	bfi.b64 	%rd8063, %rd8062, %rd8061, 8, 8;
	ld.local.u8 	%rd8064, [%rd8001+230];
	ld.local.u8 	%rd8065, [%rd8001+231];
	bfi.b64 	%rd8066, %rd8065, %rd8064, 8, 8;
	bfi.b64 	%rd8067, %rd8066, %rd8063, 16, 16;
	bfi.b64 	%rd8068, %rd8067, %rd8060, 32, 32;
	xor.b64  	%rd8069, %rd8053, %rd8068;
	st.local.u64 	[%rd8001+24], %rd8069;
	add.s64 	%rd19849, %rd19849, 32;
	add.s64 	%rd19848, %rd19848, 4;
	add.s64 	%rd19847, %rd19847, -4;
	setp.ne.s64 	%p30, %rd19847, 0;
	@%p30 bra 	$L__BB1_34;

$L__BB1_35:
	setp.eq.s64 	%p31, %rd19852, 0;
	@%p31 bra 	$L__BB1_37;

$L__BB1_36:
	.pragma "nounroll";
	add.s64 	%rd8070, %rd2, %rd19849;
	shl.b64 	%rd8071, %rd19848, 3;
	add.s64 	%rd8072, %rd2, %rd8071;
	ld.local.u64 	%rd8073, [%rd8072];
	ld.local.u8 	%rd8074, [%rd8070+200];
	ld.local.u8 	%rd8075, [%rd8070+201];
	bfi.b64 	%rd8076, %rd8075, %rd8074, 8, 8;
	ld.local.u8 	%rd8077, [%rd8070+202];
	ld.local.u8 	%rd8078, [%rd8070+203];
	bfi.b64 	%rd8079, %rd8078, %rd8077, 8, 8;
	bfi.b64 	%rd8080, %rd8079, %rd8076, 16, 16;
	ld.local.u8 	%rd8081, [%rd8070+204];
	ld.local.u8 	%rd8082, [%rd8070+205];
	bfi.b64 	%rd8083, %rd8082, %rd8081, 8, 8;
	ld.local.u8 	%rd8084, [%rd8070+206];
	ld.local.u8 	%rd8085, [%rd8070+207];
	bfi.b64 	%rd8086, %rd8085, %rd8084, 8, 8;
	bfi.b64 	%rd8087, %rd8086, %rd8083, 16, 16;
	bfi.b64 	%rd8088, %rd8087, %rd8080, 32, 32;
	xor.b64  	%rd8089, %rd8073, %rd8088;
	st.local.u64 	[%rd8072], %rd8089;
	add.s64 	%rd19849, %rd19849, 8;
	add.s64 	%rd19848, %rd19848, 1;
	add.s64 	%rd19852, %rd19852, -1;
	setp.ne.s64 	%p32, %rd19852, 0;
	@%p32 bra 	$L__BB1_36;

$L__BB1_37:
	ld.local.u64 	%rd8091, [%rd2+40];
	mov.u64 	%rd19853, 0;
	ld.local.u64 	%rd8092, [%rd2];
	xor.b64  	%rd8093, %rd8091, %rd8092;
	ld.local.u64 	%rd8094, [%rd2+80];
	xor.b64  	%rd8095, %rd8093, %rd8094;
	ld.local.u64 	%rd8096, [%rd2+120];
	xor.b64  	%rd8097, %rd8095, %rd8096;
	ld.local.u64 	%rd8098, [%rd2+160];
	xor.b64  	%rd8099, %rd8097, %rd8098;
	ld.local.u64 	%rd8100, [%rd2+48];
	ld.local.u64 	%rd8101, [%rd2+8];
	xor.b64  	%rd8102, %rd8100, %rd8101;
	ld.local.u64 	%rd8103, [%rd2+88];
	xor.b64  	%rd8104, %rd8102, %rd8103;
	ld.local.u64 	%rd8105, [%rd2+128];
	xor.b64  	%rd8106, %rd8104, %rd8105;
	ld.local.u64 	%rd8107, [%rd2+168];
	xor.b64  	%rd8108, %rd8106, %rd8107;
	ld.local.u64 	%rd8109, [%rd2+56];
	ld.local.u64 	%rd8110, [%rd2+16];
	xor.b64  	%rd8111, %rd8109, %rd8110;
	ld.local.u64 	%rd8112, [%rd2+96];
	xor.b64  	%rd8113, %rd8111, %rd8112;
	ld.local.u64 	%rd8114, [%rd2+136];
	xor.b64  	%rd8115, %rd8113, %rd8114;
	ld.local.u64 	%rd8116, [%rd2+176];
	xor.b64  	%rd8117, %rd8115, %rd8116;
	ld.local.u64 	%rd8118, [%rd2+64];
	ld.local.u64 	%rd8119, [%rd2+24];
	xor.b64  	%rd8120, %rd8118, %rd8119;
	ld.local.u64 	%rd8121, [%rd2+104];
	xor.b64  	%rd8122, %rd8120, %rd8121;
	ld.local.u64 	%rd8123, [%rd2+144];
	xor.b64  	%rd8124, %rd8122, %rd8123;
	ld.local.u64 	%rd8125, [%rd2+184];
	xor.b64  	%rd8126, %rd8124, %rd8125;
	ld.local.u64 	%rd8127, [%rd2+72];
	ld.local.u64 	%rd8128, [%rd2+32];
	xor.b64  	%rd8129, %rd8127, %rd8128;
	ld.local.u64 	%rd8130, [%rd2+112];
	xor.b64  	%rd8131, %rd8129, %rd8130;
	ld.local.u64 	%rd8132, [%rd2+152];
	xor.b64  	%rd8133, %rd8131, %rd8132;
	ld.local.u64 	%rd8134, [%rd2+192];
	xor.b64  	%rd8135, %rd8133, %rd8134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5645}, %rd8108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5646,%dummy}, %rd8108;
	}
	shf.l.wrap.b32 	%r5647, %r5646, %r5645, 1;
	shf.l.wrap.b32 	%r5648, %r5645, %r5646, 1;
	mov.b64 	%rd8136, {%r5648, %r5647};
	xor.b64  	%rd8137, %rd8135, %rd8136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd8117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5650,%dummy}, %rd8117;
	}
	shf.l.wrap.b32 	%r5651, %r5650, %r5649, 1;
	shf.l.wrap.b32 	%r5652, %r5649, %r5650, 1;
	mov.b64 	%rd8138, {%r5652, %r5651};
	xor.b64  	%rd8139, %rd8138, %rd8099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5653}, %rd8126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5654,%dummy}, %rd8126;
	}
	shf.l.wrap.b32 	%r5655, %r5654, %r5653, 1;
	shf.l.wrap.b32 	%r5656, %r5653, %r5654, 1;
	mov.b64 	%rd8140, {%r5656, %r5655};
	xor.b64  	%rd8141, %rd8140, %rd8108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd8135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5658,%dummy}, %rd8135;
	}
	shf.l.wrap.b32 	%r5659, %r5658, %r5657, 1;
	shf.l.wrap.b32 	%r5660, %r5657, %r5658, 1;
	mov.b64 	%rd8142, {%r5660, %r5659};
	xor.b64  	%rd8143, %rd8142, %rd8117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5661}, %rd8099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5662,%dummy}, %rd8099;
	}
	shf.l.wrap.b32 	%r5663, %r5662, %r5661, 1;
	shf.l.wrap.b32 	%r5664, %r5661, %r5662, 1;
	mov.b64 	%rd8144, {%r5664, %r5663};
	xor.b64  	%rd8145, %rd8126, %rd8144;
	xor.b64  	%rd8146, %rd8137, %rd8092;
	xor.b64  	%rd8147, %rd8139, %rd8101;
	xor.b64  	%rd8148, %rd8141, %rd8110;
	xor.b64  	%rd8149, %rd8143, %rd8119;
	xor.b64  	%rd8150, %rd8145, %rd8128;
	xor.b64  	%rd8151, %rd8137, %rd8091;
	xor.b64  	%rd8152, %rd8139, %rd8100;
	xor.b64  	%rd8153, %rd8141, %rd8109;
	xor.b64  	%rd8154, %rd8143, %rd8118;
	xor.b64  	%rd8155, %rd8145, %rd8127;
	xor.b64  	%rd8156, %rd8137, %rd8094;
	xor.b64  	%rd8157, %rd8139, %rd8103;
	xor.b64  	%rd8158, %rd8141, %rd8112;
	xor.b64  	%rd8159, %rd8143, %rd8121;
	xor.b64  	%rd8160, %rd8145, %rd8130;
	xor.b64  	%rd8161, %rd8137, %rd8096;
	xor.b64  	%rd8162, %rd8139, %rd8105;
	xor.b64  	%rd8163, %rd8141, %rd8114;
	xor.b64  	%rd8164, %rd8143, %rd8123;
	xor.b64  	%rd8165, %rd8145, %rd8132;
	xor.b64  	%rd8166, %rd8137, %rd8098;
	xor.b64  	%rd8167, %rd8139, %rd8107;
	xor.b64  	%rd8168, %rd8141, %rd8116;
	xor.b64  	%rd8169, %rd8143, %rd8125;
	xor.b64  	%rd8170, %rd8145, %rd8134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5665,%dummy}, %rd8152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5666}, %rd8152;
	}
	shf.r.wrap.b32 	%r5667, %r5666, %r5665, 20;
	shf.r.wrap.b32 	%r5668, %r5665, %r5666, 20;
	mov.b64 	%rd8171, {%r5668, %r5667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5669,%dummy}, %rd8158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5670}, %rd8158;
	}
	shf.r.wrap.b32 	%r5671, %r5670, %r5669, 21;
	shf.r.wrap.b32 	%r5672, %r5669, %r5670, 21;
	mov.b64 	%rd8172, {%r5672, %r5671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd8164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd8164;
	}
	shf.l.wrap.b32 	%r5675, %r5674, %r5673, 21;
	shf.l.wrap.b32 	%r5676, %r5673, %r5674, 21;
	mov.b64 	%rd8173, {%r5676, %r5675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5677}, %rd8170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5678,%dummy}, %rd8170;
	}
	shf.l.wrap.b32 	%r5679, %r5678, %r5677, 14;
	shf.l.wrap.b32 	%r5680, %r5677, %r5678, 14;
	mov.b64 	%rd8174, {%r5680, %r5679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd8149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd8149;
	}
	shf.l.wrap.b32 	%r5683, %r5682, %r5681, 28;
	shf.l.wrap.b32 	%r5684, %r5681, %r5682, 28;
	mov.b64 	%rd8175, {%r5684, %r5683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5685}, %rd8155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5686,%dummy}, %rd8155;
	}
	shf.l.wrap.b32 	%r5687, %r5686, %r5685, 20;
	shf.l.wrap.b32 	%r5688, %r5685, %r5686, 20;
	mov.b64 	%rd8176, {%r5688, %r5687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd8156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd8156;
	}
	shf.l.wrap.b32 	%r5691, %r5690, %r5689, 3;
	shf.l.wrap.b32 	%r5692, %r5689, %r5690, 3;
	mov.b64 	%rd8177, {%r5692, %r5691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5693,%dummy}, %rd8162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5694}, %rd8162;
	}
	shf.r.wrap.b32 	%r5695, %r5694, %r5693, 19;
	shf.r.wrap.b32 	%r5696, %r5693, %r5694, 19;
	mov.b64 	%rd8178, {%r5696, %r5695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5697,%dummy}, %rd8168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5698}, %rd8168;
	}
	shf.r.wrap.b32 	%r5699, %r5698, %r5697, 3;
	shf.r.wrap.b32 	%r5700, %r5697, %r5698, 3;
	mov.b64 	%rd8179, {%r5700, %r5699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5701}, %rd8147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5702,%dummy}, %rd8147;
	}
	shf.l.wrap.b32 	%r5703, %r5702, %r5701, 1;
	shf.l.wrap.b32 	%r5704, %r5701, %r5702, 1;
	mov.b64 	%rd8180, {%r5704, %r5703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd8153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5706,%dummy}, %rd8153;
	}
	shf.l.wrap.b32 	%r5707, %r5706, %r5705, 6;
	shf.l.wrap.b32 	%r5708, %r5705, %r5706, 6;
	mov.b64 	%rd8181, {%r5708, %r5707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5709}, %rd8159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5710,%dummy}, %rd8159;
	}
	shf.l.wrap.b32 	%r5711, %r5710, %r5709, 25;
	shf.l.wrap.b32 	%r5712, %r5709, %r5710, 25;
	mov.b64 	%rd8182, {%r5712, %r5711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd8165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5714,%dummy}, %rd8165;
	}
	shf.l.wrap.b32 	%r5715, %r5714, %r5713, 8;
	shf.l.wrap.b32 	%r5716, %r5713, %r5714, 8;
	mov.b64 	%rd8183, {%r5716, %r5715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd8166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5718,%dummy}, %rd8166;
	}
	shf.l.wrap.b32 	%r5719, %r5718, %r5717, 18;
	shf.l.wrap.b32 	%r5720, %r5717, %r5718, 18;
	mov.b64 	%rd8184, {%r5720, %r5719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd8150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5722,%dummy}, %rd8150;
	}
	shf.l.wrap.b32 	%r5723, %r5722, %r5721, 27;
	shf.l.wrap.b32 	%r5724, %r5721, %r5722, 27;
	mov.b64 	%rd8185, {%r5724, %r5723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5725,%dummy}, %rd8151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd8151;
	}
	shf.r.wrap.b32 	%r5727, %r5726, %r5725, 28;
	shf.r.wrap.b32 	%r5728, %r5725, %r5726, 28;
	mov.b64 	%rd8186, {%r5728, %r5727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd8157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5730,%dummy}, %rd8157;
	}
	shf.l.wrap.b32 	%r5731, %r5730, %r5729, 10;
	shf.l.wrap.b32 	%r5732, %r5729, %r5730, 10;
	mov.b64 	%rd8187, {%r5732, %r5731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5733}, %rd8163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5734,%dummy}, %rd8163;
	}
	shf.l.wrap.b32 	%r5735, %r5734, %r5733, 15;
	shf.l.wrap.b32 	%r5736, %r5733, %r5734, 15;
	mov.b64 	%rd8188, {%r5736, %r5735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5737,%dummy}, %rd8169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5738}, %rd8169;
	}
	shf.r.wrap.b32 	%r5739, %r5738, %r5737, 8;
	shf.r.wrap.b32 	%r5740, %r5737, %r5738, 8;
	mov.b64 	%rd8189, {%r5740, %r5739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5741,%dummy}, %rd8148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5742}, %rd8148;
	}
	shf.r.wrap.b32 	%r5743, %r5742, %r5741, 2;
	shf.r.wrap.b32 	%r5744, %r5741, %r5742, 2;
	mov.b64 	%rd8190, {%r5744, %r5743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5745,%dummy}, %rd8154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5746}, %rd8154;
	}
	shf.r.wrap.b32 	%r5747, %r5746, %r5745, 9;
	shf.r.wrap.b32 	%r5748, %r5745, %r5746, 9;
	mov.b64 	%rd8191, {%r5748, %r5747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5749,%dummy}, %rd8160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5750}, %rd8160;
	}
	shf.r.wrap.b32 	%r5751, %r5750, %r5749, 25;
	shf.r.wrap.b32 	%r5752, %r5749, %r5750, 25;
	mov.b64 	%rd8192, {%r5752, %r5751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5753,%dummy}, %rd8161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5754}, %rd8161;
	}
	shf.r.wrap.b32 	%r5755, %r5754, %r5753, 23;
	shf.r.wrap.b32 	%r5756, %r5753, %r5754, 23;
	mov.b64 	%rd8193, {%r5756, %r5755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd8167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5758,%dummy}, %rd8167;
	}
	shf.l.wrap.b32 	%r5759, %r5758, %r5757, 2;
	shf.l.wrap.b32 	%r5760, %r5757, %r5758, 2;
	mov.b64 	%rd8194, {%r5760, %r5759};
	not.b64 	%rd8195, %rd8171;
	and.b64  	%rd8196, %rd8172, %rd8195;
	xor.b64  	%rd8197, %rd8196, %rd8146;
	not.b64 	%rd8198, %rd8172;
	and.b64  	%rd8199, %rd8173, %rd8198;
	xor.b64  	%rd8200, %rd8199, %rd8171;
	not.b64 	%rd8201, %rd8173;
	and.b64  	%rd8202, %rd8174, %rd8201;
	xor.b64  	%rd8203, %rd8202, %rd8172;
	not.b64 	%rd8204, %rd8174;
	and.b64  	%rd8205, %rd8146, %rd8204;
	xor.b64  	%rd8206, %rd8205, %rd8173;
	not.b64 	%rd8207, %rd8146;
	and.b64  	%rd8208, %rd8171, %rd8207;
	xor.b64  	%rd8209, %rd8208, %rd8174;
	not.b64 	%rd8210, %rd8176;
	and.b64  	%rd8211, %rd8177, %rd8210;
	xor.b64  	%rd8212, %rd8211, %rd8175;
	not.b64 	%rd8213, %rd8177;
	and.b64  	%rd8214, %rd8178, %rd8213;
	xor.b64  	%rd8215, %rd8214, %rd8176;
	not.b64 	%rd8216, %rd8178;
	and.b64  	%rd8217, %rd8179, %rd8216;
	xor.b64  	%rd8218, %rd8217, %rd8177;
	not.b64 	%rd8219, %rd8179;
	and.b64  	%rd8220, %rd8175, %rd8219;
	xor.b64  	%rd8221, %rd8220, %rd8178;
	not.b64 	%rd8222, %rd8175;
	and.b64  	%rd8223, %rd8176, %rd8222;
	xor.b64  	%rd8224, %rd8223, %rd8179;
	not.b64 	%rd8225, %rd8181;
	and.b64  	%rd8226, %rd8182, %rd8225;
	xor.b64  	%rd8227, %rd8226, %rd8180;
	not.b64 	%rd8228, %rd8182;
	and.b64  	%rd8229, %rd8183, %rd8228;
	xor.b64  	%rd8230, %rd8229, %rd8181;
	not.b64 	%rd8231, %rd8183;
	and.b64  	%rd8232, %rd8184, %rd8231;
	xor.b64  	%rd8233, %rd8232, %rd8182;
	not.b64 	%rd8234, %rd8184;
	and.b64  	%rd8235, %rd8180, %rd8234;
	xor.b64  	%rd8236, %rd8235, %rd8183;
	not.b64 	%rd8237, %rd8180;
	and.b64  	%rd8238, %rd8181, %rd8237;
	xor.b64  	%rd8239, %rd8238, %rd8184;
	not.b64 	%rd8240, %rd8186;
	and.b64  	%rd8241, %rd8187, %rd8240;
	xor.b64  	%rd8242, %rd8241, %rd8185;
	not.b64 	%rd8243, %rd8187;
	and.b64  	%rd8244, %rd8188, %rd8243;
	xor.b64  	%rd8245, %rd8244, %rd8186;
	not.b64 	%rd8246, %rd8188;
	and.b64  	%rd8247, %rd8189, %rd8246;
	xor.b64  	%rd8248, %rd8247, %rd8187;
	not.b64 	%rd8249, %rd8189;
	and.b64  	%rd8250, %rd8185, %rd8249;
	xor.b64  	%rd8251, %rd8250, %rd8188;
	not.b64 	%rd8252, %rd8185;
	and.b64  	%rd8253, %rd8186, %rd8252;
	xor.b64  	%rd8254, %rd8253, %rd8189;
	not.b64 	%rd8255, %rd8191;
	and.b64  	%rd8256, %rd8192, %rd8255;
	xor.b64  	%rd8257, %rd8256, %rd8190;
	not.b64 	%rd8258, %rd8192;
	and.b64  	%rd8259, %rd8193, %rd8258;
	xor.b64  	%rd8260, %rd8259, %rd8191;
	not.b64 	%rd8261, %rd8193;
	and.b64  	%rd8262, %rd8194, %rd8261;
	xor.b64  	%rd8263, %rd8262, %rd8192;
	not.b64 	%rd8264, %rd8194;
	and.b64  	%rd8265, %rd8190, %rd8264;
	xor.b64  	%rd8266, %rd8265, %rd8193;
	not.b64 	%rd8267, %rd8190;
	and.b64  	%rd8268, %rd8191, %rd8267;
	xor.b64  	%rd8269, %rd8268, %rd8194;
	xor.b64  	%rd8271, %rd8197, %rd16;
	xor.b64  	%rd8272, %rd8212, %rd8271;
	xor.b64  	%rd8273, %rd8272, %rd8227;
	xor.b64  	%rd8274, %rd8273, %rd8242;
	xor.b64  	%rd8275, %rd8274, %rd8257;
	xor.b64  	%rd8276, %rd8215, %rd8200;
	xor.b64  	%rd8277, %rd8276, %rd8230;
	xor.b64  	%rd8278, %rd8277, %rd8245;
	xor.b64  	%rd8279, %rd8278, %rd8260;
	xor.b64  	%rd8280, %rd8218, %rd8203;
	xor.b64  	%rd8281, %rd8280, %rd8233;
	xor.b64  	%rd8282, %rd8281, %rd8248;
	xor.b64  	%rd8283, %rd8282, %rd8263;
	xor.b64  	%rd8284, %rd8221, %rd8206;
	xor.b64  	%rd8285, %rd8284, %rd8236;
	xor.b64  	%rd8286, %rd8285, %rd8251;
	xor.b64  	%rd8287, %rd8286, %rd8266;
	xor.b64  	%rd8288, %rd8224, %rd8209;
	xor.b64  	%rd8289, %rd8288, %rd8239;
	xor.b64  	%rd8290, %rd8289, %rd8254;
	xor.b64  	%rd8291, %rd8290, %rd8269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd8279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd8279;
	}
	shf.l.wrap.b32 	%r5763, %r5762, %r5761, 1;
	shf.l.wrap.b32 	%r5764, %r5761, %r5762, 1;
	mov.b64 	%rd8292, {%r5764, %r5763};
	xor.b64  	%rd8293, %rd8291, %rd8292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5765}, %rd8283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5766,%dummy}, %rd8283;
	}
	shf.l.wrap.b32 	%r5767, %r5766, %r5765, 1;
	shf.l.wrap.b32 	%r5768, %r5765, %r5766, 1;
	mov.b64 	%rd8294, {%r5768, %r5767};
	xor.b64  	%rd8295, %rd8294, %rd8275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd8287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5770,%dummy}, %rd8287;
	}
	shf.l.wrap.b32 	%r5771, %r5770, %r5769, 1;
	shf.l.wrap.b32 	%r5772, %r5769, %r5770, 1;
	mov.b64 	%rd8296, {%r5772, %r5771};
	xor.b64  	%rd8297, %rd8296, %rd8279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5773}, %rd8291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd8291;
	}
	shf.l.wrap.b32 	%r5775, %r5774, %r5773, 1;
	shf.l.wrap.b32 	%r5776, %r5773, %r5774, 1;
	mov.b64 	%rd8298, {%r5776, %r5775};
	xor.b64  	%rd8299, %rd8298, %rd8283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5777}, %rd8275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5778,%dummy}, %rd8275;
	}
	shf.l.wrap.b32 	%r5779, %r5778, %r5777, 1;
	shf.l.wrap.b32 	%r5780, %r5777, %r5778, 1;
	mov.b64 	%rd8300, {%r5780, %r5779};
	xor.b64  	%rd8301, %rd8287, %rd8300;
	xor.b64  	%rd8302, %rd8293, %rd8271;
	xor.b64  	%rd8303, %rd8295, %rd8200;
	xor.b64  	%rd8304, %rd8297, %rd8203;
	xor.b64  	%rd8305, %rd8299, %rd8206;
	xor.b64  	%rd8306, %rd8301, %rd8209;
	xor.b64  	%rd8307, %rd8293, %rd8212;
	xor.b64  	%rd8308, %rd8295, %rd8215;
	xor.b64  	%rd8309, %rd8297, %rd8218;
	xor.b64  	%rd8310, %rd8299, %rd8221;
	xor.b64  	%rd8311, %rd8301, %rd8224;
	xor.b64  	%rd8312, %rd8293, %rd8227;
	xor.b64  	%rd8313, %rd8295, %rd8230;
	xor.b64  	%rd8314, %rd8297, %rd8233;
	xor.b64  	%rd8315, %rd8299, %rd8236;
	xor.b64  	%rd8316, %rd8301, %rd8239;
	xor.b64  	%rd8317, %rd8293, %rd8242;
	xor.b64  	%rd8318, %rd8295, %rd8245;
	xor.b64  	%rd8319, %rd8297, %rd8248;
	xor.b64  	%rd8320, %rd8299, %rd8251;
	xor.b64  	%rd8321, %rd8301, %rd8254;
	xor.b64  	%rd8322, %rd8293, %rd8257;
	xor.b64  	%rd8323, %rd8295, %rd8260;
	xor.b64  	%rd8324, %rd8297, %rd8263;
	xor.b64  	%rd8325, %rd8299, %rd8266;
	xor.b64  	%rd8326, %rd8301, %rd8269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5781,%dummy}, %rd8308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5782}, %rd8308;
	}
	shf.r.wrap.b32 	%r5783, %r5782, %r5781, 20;
	shf.r.wrap.b32 	%r5784, %r5781, %r5782, 20;
	mov.b64 	%rd8327, {%r5784, %r5783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5785,%dummy}, %rd8314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5786}, %rd8314;
	}
	shf.r.wrap.b32 	%r5787, %r5786, %r5785, 21;
	shf.r.wrap.b32 	%r5788, %r5785, %r5786, 21;
	mov.b64 	%rd8328, {%r5788, %r5787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5789}, %rd8320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5790,%dummy}, %rd8320;
	}
	shf.l.wrap.b32 	%r5791, %r5790, %r5789, 21;
	shf.l.wrap.b32 	%r5792, %r5789, %r5790, 21;
	mov.b64 	%rd8329, {%r5792, %r5791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd8326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd8326;
	}
	shf.l.wrap.b32 	%r5795, %r5794, %r5793, 14;
	shf.l.wrap.b32 	%r5796, %r5793, %r5794, 14;
	mov.b64 	%rd8330, {%r5796, %r5795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5797}, %rd8305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd8305;
	}
	shf.l.wrap.b32 	%r5799, %r5798, %r5797, 28;
	shf.l.wrap.b32 	%r5800, %r5797, %r5798, 28;
	mov.b64 	%rd8331, {%r5800, %r5799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5801}, %rd8311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5802,%dummy}, %rd8311;
	}
	shf.l.wrap.b32 	%r5803, %r5802, %r5801, 20;
	shf.l.wrap.b32 	%r5804, %r5801, %r5802, 20;
	mov.b64 	%rd8332, {%r5804, %r5803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd8312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5806,%dummy}, %rd8312;
	}
	shf.l.wrap.b32 	%r5807, %r5806, %r5805, 3;
	shf.l.wrap.b32 	%r5808, %r5805, %r5806, 3;
	mov.b64 	%rd8333, {%r5808, %r5807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5809,%dummy}, %rd8318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5810}, %rd8318;
	}
	shf.r.wrap.b32 	%r5811, %r5810, %r5809, 19;
	shf.r.wrap.b32 	%r5812, %r5809, %r5810, 19;
	mov.b64 	%rd8334, {%r5812, %r5811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5813,%dummy}, %rd8324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5814}, %rd8324;
	}
	shf.r.wrap.b32 	%r5815, %r5814, %r5813, 3;
	shf.r.wrap.b32 	%r5816, %r5813, %r5814, 3;
	mov.b64 	%rd8335, {%r5816, %r5815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd8303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5818,%dummy}, %rd8303;
	}
	shf.l.wrap.b32 	%r5819, %r5818, %r5817, 1;
	shf.l.wrap.b32 	%r5820, %r5817, %r5818, 1;
	mov.b64 	%rd8336, {%r5820, %r5819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd8309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd8309;
	}
	shf.l.wrap.b32 	%r5823, %r5822, %r5821, 6;
	shf.l.wrap.b32 	%r5824, %r5821, %r5822, 6;
	mov.b64 	%rd8337, {%r5824, %r5823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5825}, %rd8315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5826,%dummy}, %rd8315;
	}
	shf.l.wrap.b32 	%r5827, %r5826, %r5825, 25;
	shf.l.wrap.b32 	%r5828, %r5825, %r5826, 25;
	mov.b64 	%rd8338, {%r5828, %r5827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd8321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5830,%dummy}, %rd8321;
	}
	shf.l.wrap.b32 	%r5831, %r5830, %r5829, 8;
	shf.l.wrap.b32 	%r5832, %r5829, %r5830, 8;
	mov.b64 	%rd8339, {%r5832, %r5831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5833}, %rd8322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd8322;
	}
	shf.l.wrap.b32 	%r5835, %r5834, %r5833, 18;
	shf.l.wrap.b32 	%r5836, %r5833, %r5834, 18;
	mov.b64 	%rd8340, {%r5836, %r5835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5837}, %rd8306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5838,%dummy}, %rd8306;
	}
	shf.l.wrap.b32 	%r5839, %r5838, %r5837, 27;
	shf.l.wrap.b32 	%r5840, %r5837, %r5838, 27;
	mov.b64 	%rd8341, {%r5840, %r5839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5841,%dummy}, %rd8307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5842}, %rd8307;
	}
	shf.r.wrap.b32 	%r5843, %r5842, %r5841, 28;
	shf.r.wrap.b32 	%r5844, %r5841, %r5842, 28;
	mov.b64 	%rd8342, {%r5844, %r5843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5845}, %rd8313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd8313;
	}
	shf.l.wrap.b32 	%r5847, %r5846, %r5845, 10;
	shf.l.wrap.b32 	%r5848, %r5845, %r5846, 10;
	mov.b64 	%rd8343, {%r5848, %r5847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5849}, %rd8319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5850,%dummy}, %rd8319;
	}
	shf.l.wrap.b32 	%r5851, %r5850, %r5849, 15;
	shf.l.wrap.b32 	%r5852, %r5849, %r5850, 15;
	mov.b64 	%rd8344, {%r5852, %r5851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5853,%dummy}, %rd8325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5854}, %rd8325;
	}
	shf.r.wrap.b32 	%r5855, %r5854, %r5853, 8;
	shf.r.wrap.b32 	%r5856, %r5853, %r5854, 8;
	mov.b64 	%rd8345, {%r5856, %r5855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5857,%dummy}, %rd8304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5858}, %rd8304;
	}
	shf.r.wrap.b32 	%r5859, %r5858, %r5857, 2;
	shf.r.wrap.b32 	%r5860, %r5857, %r5858, 2;
	mov.b64 	%rd8346, {%r5860, %r5859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5861,%dummy}, %rd8310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5862}, %rd8310;
	}
	shf.r.wrap.b32 	%r5863, %r5862, %r5861, 9;
	shf.r.wrap.b32 	%r5864, %r5861, %r5862, 9;
	mov.b64 	%rd8347, {%r5864, %r5863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5865,%dummy}, %rd8316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5866}, %rd8316;
	}
	shf.r.wrap.b32 	%r5867, %r5866, %r5865, 25;
	shf.r.wrap.b32 	%r5868, %r5865, %r5866, 25;
	mov.b64 	%rd8348, {%r5868, %r5867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd8317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd8317;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 23;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 23;
	mov.b64 	%rd8349, {%r5872, %r5871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5873}, %rd8323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5874,%dummy}, %rd8323;
	}
	shf.l.wrap.b32 	%r5875, %r5874, %r5873, 2;
	shf.l.wrap.b32 	%r5876, %r5873, %r5874, 2;
	mov.b64 	%rd8350, {%r5876, %r5875};
	not.b64 	%rd8351, %rd8327;
	and.b64  	%rd8352, %rd8328, %rd8351;
	xor.b64  	%rd8353, %rd8352, %rd8302;
	not.b64 	%rd8354, %rd8328;
	and.b64  	%rd8355, %rd8329, %rd8354;
	xor.b64  	%rd8356, %rd8355, %rd8327;
	not.b64 	%rd8357, %rd8329;
	and.b64  	%rd8358, %rd8330, %rd8357;
	xor.b64  	%rd8359, %rd8358, %rd8328;
	not.b64 	%rd8360, %rd8330;
	and.b64  	%rd8361, %rd8302, %rd8360;
	xor.b64  	%rd8362, %rd8361, %rd8329;
	not.b64 	%rd8363, %rd8302;
	and.b64  	%rd8364, %rd8327, %rd8363;
	xor.b64  	%rd8365, %rd8364, %rd8330;
	not.b64 	%rd8366, %rd8332;
	and.b64  	%rd8367, %rd8333, %rd8366;
	xor.b64  	%rd8368, %rd8367, %rd8331;
	not.b64 	%rd8369, %rd8333;
	and.b64  	%rd8370, %rd8334, %rd8369;
	xor.b64  	%rd8371, %rd8370, %rd8332;
	not.b64 	%rd8372, %rd8334;
	and.b64  	%rd8373, %rd8335, %rd8372;
	xor.b64  	%rd8374, %rd8373, %rd8333;
	not.b64 	%rd8375, %rd8335;
	and.b64  	%rd8376, %rd8331, %rd8375;
	xor.b64  	%rd8377, %rd8376, %rd8334;
	not.b64 	%rd8378, %rd8331;
	and.b64  	%rd8379, %rd8332, %rd8378;
	xor.b64  	%rd8380, %rd8379, %rd8335;
	not.b64 	%rd8381, %rd8337;
	and.b64  	%rd8382, %rd8338, %rd8381;
	xor.b64  	%rd8383, %rd8382, %rd8336;
	not.b64 	%rd8384, %rd8338;
	and.b64  	%rd8385, %rd8339, %rd8384;
	xor.b64  	%rd8386, %rd8385, %rd8337;
	not.b64 	%rd8387, %rd8339;
	and.b64  	%rd8388, %rd8340, %rd8387;
	xor.b64  	%rd8389, %rd8388, %rd8338;
	not.b64 	%rd8390, %rd8340;
	and.b64  	%rd8391, %rd8336, %rd8390;
	xor.b64  	%rd8392, %rd8391, %rd8339;
	not.b64 	%rd8393, %rd8336;
	and.b64  	%rd8394, %rd8337, %rd8393;
	xor.b64  	%rd8395, %rd8394, %rd8340;
	not.b64 	%rd8396, %rd8342;
	and.b64  	%rd8397, %rd8343, %rd8396;
	xor.b64  	%rd8398, %rd8397, %rd8341;
	not.b64 	%rd8399, %rd8343;
	and.b64  	%rd8400, %rd8344, %rd8399;
	xor.b64  	%rd8401, %rd8400, %rd8342;
	not.b64 	%rd8402, %rd8344;
	and.b64  	%rd8403, %rd8345, %rd8402;
	xor.b64  	%rd8404, %rd8403, %rd8343;
	not.b64 	%rd8405, %rd8345;
	and.b64  	%rd8406, %rd8341, %rd8405;
	xor.b64  	%rd8407, %rd8406, %rd8344;
	not.b64 	%rd8408, %rd8341;
	and.b64  	%rd8409, %rd8342, %rd8408;
	xor.b64  	%rd8410, %rd8409, %rd8345;
	not.b64 	%rd8411, %rd8347;
	and.b64  	%rd8412, %rd8348, %rd8411;
	xor.b64  	%rd8413, %rd8412, %rd8346;
	not.b64 	%rd8414, %rd8348;
	and.b64  	%rd8415, %rd8349, %rd8414;
	xor.b64  	%rd8416, %rd8415, %rd8347;
	not.b64 	%rd8417, %rd8349;
	and.b64  	%rd8418, %rd8350, %rd8417;
	xor.b64  	%rd8419, %rd8418, %rd8348;
	not.b64 	%rd8420, %rd8350;
	and.b64  	%rd8421, %rd8346, %rd8420;
	xor.b64  	%rd8422, %rd8421, %rd8349;
	not.b64 	%rd8423, %rd8346;
	and.b64  	%rd8424, %rd8347, %rd8423;
	xor.b64  	%rd8425, %rd8424, %rd8350;
	xor.b64  	%rd8427, %rd8353, %rd17;
	xor.b64  	%rd8428, %rd8368, %rd8427;
	xor.b64  	%rd8429, %rd8428, %rd8383;
	xor.b64  	%rd8430, %rd8429, %rd8398;
	xor.b64  	%rd8431, %rd8430, %rd8413;
	xor.b64  	%rd8432, %rd8371, %rd8356;
	xor.b64  	%rd8433, %rd8432, %rd8386;
	xor.b64  	%rd8434, %rd8433, %rd8401;
	xor.b64  	%rd8435, %rd8434, %rd8416;
	xor.b64  	%rd8436, %rd8374, %rd8359;
	xor.b64  	%rd8437, %rd8436, %rd8389;
	xor.b64  	%rd8438, %rd8437, %rd8404;
	xor.b64  	%rd8439, %rd8438, %rd8419;
	xor.b64  	%rd8440, %rd8377, %rd8362;
	xor.b64  	%rd8441, %rd8440, %rd8392;
	xor.b64  	%rd8442, %rd8441, %rd8407;
	xor.b64  	%rd8443, %rd8442, %rd8422;
	xor.b64  	%rd8444, %rd8380, %rd8365;
	xor.b64  	%rd8445, %rd8444, %rd8395;
	xor.b64  	%rd8446, %rd8445, %rd8410;
	xor.b64  	%rd8447, %rd8446, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd8435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5878,%dummy}, %rd8435;
	}
	shf.l.wrap.b32 	%r5879, %r5878, %r5877, 1;
	shf.l.wrap.b32 	%r5880, %r5877, %r5878, 1;
	mov.b64 	%rd8448, {%r5880, %r5879};
	xor.b64  	%rd8449, %rd8447, %rd8448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5881}, %rd8439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd8439;
	}
	shf.l.wrap.b32 	%r5883, %r5882, %r5881, 1;
	shf.l.wrap.b32 	%r5884, %r5881, %r5882, 1;
	mov.b64 	%rd8450, {%r5884, %r5883};
	xor.b64  	%rd8451, %rd8450, %rd8431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5885}, %rd8443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5886,%dummy}, %rd8443;
	}
	shf.l.wrap.b32 	%r5887, %r5886, %r5885, 1;
	shf.l.wrap.b32 	%r5888, %r5885, %r5886, 1;
	mov.b64 	%rd8452, {%r5888, %r5887};
	xor.b64  	%rd8453, %rd8452, %rd8435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd8447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd8447;
	}
	shf.l.wrap.b32 	%r5891, %r5890, %r5889, 1;
	shf.l.wrap.b32 	%r5892, %r5889, %r5890, 1;
	mov.b64 	%rd8454, {%r5892, %r5891};
	xor.b64  	%rd8455, %rd8454, %rd8439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5893}, %rd8431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd8431;
	}
	shf.l.wrap.b32 	%r5895, %r5894, %r5893, 1;
	shf.l.wrap.b32 	%r5896, %r5893, %r5894, 1;
	mov.b64 	%rd8456, {%r5896, %r5895};
	xor.b64  	%rd8457, %rd8443, %rd8456;
	xor.b64  	%rd8458, %rd8449, %rd8427;
	xor.b64  	%rd8459, %rd8451, %rd8356;
	xor.b64  	%rd8460, %rd8453, %rd8359;
	xor.b64  	%rd8461, %rd8455, %rd8362;
	xor.b64  	%rd8462, %rd8457, %rd8365;
	xor.b64  	%rd8463, %rd8449, %rd8368;
	xor.b64  	%rd8464, %rd8451, %rd8371;
	xor.b64  	%rd8465, %rd8453, %rd8374;
	xor.b64  	%rd8466, %rd8455, %rd8377;
	xor.b64  	%rd8467, %rd8457, %rd8380;
	xor.b64  	%rd8468, %rd8449, %rd8383;
	xor.b64  	%rd8469, %rd8451, %rd8386;
	xor.b64  	%rd8470, %rd8453, %rd8389;
	xor.b64  	%rd8471, %rd8455, %rd8392;
	xor.b64  	%rd8472, %rd8457, %rd8395;
	xor.b64  	%rd8473, %rd8449, %rd8398;
	xor.b64  	%rd8474, %rd8451, %rd8401;
	xor.b64  	%rd8475, %rd8453, %rd8404;
	xor.b64  	%rd8476, %rd8455, %rd8407;
	xor.b64  	%rd8477, %rd8457, %rd8410;
	xor.b64  	%rd8478, %rd8449, %rd8413;
	xor.b64  	%rd8479, %rd8451, %rd8416;
	xor.b64  	%rd8480, %rd8453, %rd8419;
	xor.b64  	%rd8481, %rd8455, %rd8422;
	xor.b64  	%rd8482, %rd8457, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5897,%dummy}, %rd8464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5898}, %rd8464;
	}
	shf.r.wrap.b32 	%r5899, %r5898, %r5897, 20;
	shf.r.wrap.b32 	%r5900, %r5897, %r5898, 20;
	mov.b64 	%rd8483, {%r5900, %r5899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5901,%dummy}, %rd8470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5902}, %rd8470;
	}
	shf.r.wrap.b32 	%r5903, %r5902, %r5901, 21;
	shf.r.wrap.b32 	%r5904, %r5901, %r5902, 21;
	mov.b64 	%rd8484, {%r5904, %r5903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5905}, %rd8476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5906,%dummy}, %rd8476;
	}
	shf.l.wrap.b32 	%r5907, %r5906, %r5905, 21;
	shf.l.wrap.b32 	%r5908, %r5905, %r5906, 21;
	mov.b64 	%rd8485, {%r5908, %r5907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5909}, %rd8482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd8482;
	}
	shf.l.wrap.b32 	%r5911, %r5910, %r5909, 14;
	shf.l.wrap.b32 	%r5912, %r5909, %r5910, 14;
	mov.b64 	%rd8486, {%r5912, %r5911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5913}, %rd8461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5914,%dummy}, %rd8461;
	}
	shf.l.wrap.b32 	%r5915, %r5914, %r5913, 28;
	shf.l.wrap.b32 	%r5916, %r5913, %r5914, 28;
	mov.b64 	%rd8487, {%r5916, %r5915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5917}, %rd8467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5918,%dummy}, %rd8467;
	}
	shf.l.wrap.b32 	%r5919, %r5918, %r5917, 20;
	shf.l.wrap.b32 	%r5920, %r5917, %r5918, 20;
	mov.b64 	%rd8488, {%r5920, %r5919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd8468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5922,%dummy}, %rd8468;
	}
	shf.l.wrap.b32 	%r5923, %r5922, %r5921, 3;
	shf.l.wrap.b32 	%r5924, %r5921, %r5922, 3;
	mov.b64 	%rd8489, {%r5924, %r5923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd8474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd8474;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 19;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 19;
	mov.b64 	%rd8490, {%r5928, %r5927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5929,%dummy}, %rd8480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5930}, %rd8480;
	}
	shf.r.wrap.b32 	%r5931, %r5930, %r5929, 3;
	shf.r.wrap.b32 	%r5932, %r5929, %r5930, 3;
	mov.b64 	%rd8491, {%r5932, %r5931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5933}, %rd8459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5934,%dummy}, %rd8459;
	}
	shf.l.wrap.b32 	%r5935, %r5934, %r5933, 1;
	shf.l.wrap.b32 	%r5936, %r5933, %r5934, 1;
	mov.b64 	%rd8492, {%r5936, %r5935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5937}, %rd8465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd8465;
	}
	shf.l.wrap.b32 	%r5939, %r5938, %r5937, 6;
	shf.l.wrap.b32 	%r5940, %r5937, %r5938, 6;
	mov.b64 	%rd8493, {%r5940, %r5939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5941}, %rd8471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd8471;
	}
	shf.l.wrap.b32 	%r5943, %r5942, %r5941, 25;
	shf.l.wrap.b32 	%r5944, %r5941, %r5942, 25;
	mov.b64 	%rd8494, {%r5944, %r5943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5945}, %rd8477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd8477;
	}
	shf.l.wrap.b32 	%r5947, %r5946, %r5945, 8;
	shf.l.wrap.b32 	%r5948, %r5945, %r5946, 8;
	mov.b64 	%rd8495, {%r5948, %r5947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5949}, %rd8478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd8478;
	}
	shf.l.wrap.b32 	%r5951, %r5950, %r5949, 18;
	shf.l.wrap.b32 	%r5952, %r5949, %r5950, 18;
	mov.b64 	%rd8496, {%r5952, %r5951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5953}, %rd8462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd8462;
	}
	shf.l.wrap.b32 	%r5955, %r5954, %r5953, 27;
	shf.l.wrap.b32 	%r5956, %r5953, %r5954, 27;
	mov.b64 	%rd8497, {%r5956, %r5955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5957,%dummy}, %rd8463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5958}, %rd8463;
	}
	shf.r.wrap.b32 	%r5959, %r5958, %r5957, 28;
	shf.r.wrap.b32 	%r5960, %r5957, %r5958, 28;
	mov.b64 	%rd8498, {%r5960, %r5959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd8469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd8469;
	}
	shf.l.wrap.b32 	%r5963, %r5962, %r5961, 10;
	shf.l.wrap.b32 	%r5964, %r5961, %r5962, 10;
	mov.b64 	%rd8499, {%r5964, %r5963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5965}, %rd8475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5966,%dummy}, %rd8475;
	}
	shf.l.wrap.b32 	%r5967, %r5966, %r5965, 15;
	shf.l.wrap.b32 	%r5968, %r5965, %r5966, 15;
	mov.b64 	%rd8500, {%r5968, %r5967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5969,%dummy}, %rd8481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5970}, %rd8481;
	}
	shf.r.wrap.b32 	%r5971, %r5970, %r5969, 8;
	shf.r.wrap.b32 	%r5972, %r5969, %r5970, 8;
	mov.b64 	%rd8501, {%r5972, %r5971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5973,%dummy}, %rd8460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5974}, %rd8460;
	}
	shf.r.wrap.b32 	%r5975, %r5974, %r5973, 2;
	shf.r.wrap.b32 	%r5976, %r5973, %r5974, 2;
	mov.b64 	%rd8502, {%r5976, %r5975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5977,%dummy}, %rd8466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5978}, %rd8466;
	}
	shf.r.wrap.b32 	%r5979, %r5978, %r5977, 9;
	shf.r.wrap.b32 	%r5980, %r5977, %r5978, 9;
	mov.b64 	%rd8503, {%r5980, %r5979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5981,%dummy}, %rd8472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5982}, %rd8472;
	}
	shf.r.wrap.b32 	%r5983, %r5982, %r5981, 25;
	shf.r.wrap.b32 	%r5984, %r5981, %r5982, 25;
	mov.b64 	%rd8504, {%r5984, %r5983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5985,%dummy}, %rd8473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5986}, %rd8473;
	}
	shf.r.wrap.b32 	%r5987, %r5986, %r5985, 23;
	shf.r.wrap.b32 	%r5988, %r5985, %r5986, 23;
	mov.b64 	%rd8505, {%r5988, %r5987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5989}, %rd8479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5990,%dummy}, %rd8479;
	}
	shf.l.wrap.b32 	%r5991, %r5990, %r5989, 2;
	shf.l.wrap.b32 	%r5992, %r5989, %r5990, 2;
	mov.b64 	%rd8506, {%r5992, %r5991};
	not.b64 	%rd8507, %rd8483;
	and.b64  	%rd8508, %rd8484, %rd8507;
	xor.b64  	%rd8509, %rd8508, %rd8458;
	not.b64 	%rd8510, %rd8484;
	and.b64  	%rd8511, %rd8485, %rd8510;
	xor.b64  	%rd8512, %rd8511, %rd8483;
	not.b64 	%rd8513, %rd8485;
	and.b64  	%rd8514, %rd8486, %rd8513;
	xor.b64  	%rd8515, %rd8514, %rd8484;
	not.b64 	%rd8516, %rd8486;
	and.b64  	%rd8517, %rd8458, %rd8516;
	xor.b64  	%rd8518, %rd8517, %rd8485;
	not.b64 	%rd8519, %rd8458;
	and.b64  	%rd8520, %rd8483, %rd8519;
	xor.b64  	%rd8521, %rd8520, %rd8486;
	not.b64 	%rd8522, %rd8488;
	and.b64  	%rd8523, %rd8489, %rd8522;
	xor.b64  	%rd8524, %rd8523, %rd8487;
	not.b64 	%rd8525, %rd8489;
	and.b64  	%rd8526, %rd8490, %rd8525;
	xor.b64  	%rd8527, %rd8526, %rd8488;
	not.b64 	%rd8528, %rd8490;
	and.b64  	%rd8529, %rd8491, %rd8528;
	xor.b64  	%rd8530, %rd8529, %rd8489;
	not.b64 	%rd8531, %rd8491;
	and.b64  	%rd8532, %rd8487, %rd8531;
	xor.b64  	%rd8533, %rd8532, %rd8490;
	not.b64 	%rd8534, %rd8487;
	and.b64  	%rd8535, %rd8488, %rd8534;
	xor.b64  	%rd8536, %rd8535, %rd8491;
	not.b64 	%rd8537, %rd8493;
	and.b64  	%rd8538, %rd8494, %rd8537;
	xor.b64  	%rd8539, %rd8538, %rd8492;
	not.b64 	%rd8540, %rd8494;
	and.b64  	%rd8541, %rd8495, %rd8540;
	xor.b64  	%rd8542, %rd8541, %rd8493;
	not.b64 	%rd8543, %rd8495;
	and.b64  	%rd8544, %rd8496, %rd8543;
	xor.b64  	%rd8545, %rd8544, %rd8494;
	not.b64 	%rd8546, %rd8496;
	and.b64  	%rd8547, %rd8492, %rd8546;
	xor.b64  	%rd8548, %rd8547, %rd8495;
	not.b64 	%rd8549, %rd8492;
	and.b64  	%rd8550, %rd8493, %rd8549;
	xor.b64  	%rd8551, %rd8550, %rd8496;
	not.b64 	%rd8552, %rd8498;
	and.b64  	%rd8553, %rd8499, %rd8552;
	xor.b64  	%rd8554, %rd8553, %rd8497;
	not.b64 	%rd8555, %rd8499;
	and.b64  	%rd8556, %rd8500, %rd8555;
	xor.b64  	%rd8557, %rd8556, %rd8498;
	not.b64 	%rd8558, %rd8500;
	and.b64  	%rd8559, %rd8501, %rd8558;
	xor.b64  	%rd8560, %rd8559, %rd8499;
	not.b64 	%rd8561, %rd8501;
	and.b64  	%rd8562, %rd8497, %rd8561;
	xor.b64  	%rd8563, %rd8562, %rd8500;
	not.b64 	%rd8564, %rd8497;
	and.b64  	%rd8565, %rd8498, %rd8564;
	xor.b64  	%rd8566, %rd8565, %rd8501;
	not.b64 	%rd8567, %rd8503;
	and.b64  	%rd8568, %rd8504, %rd8567;
	xor.b64  	%rd8569, %rd8568, %rd8502;
	not.b64 	%rd8570, %rd8504;
	and.b64  	%rd8571, %rd8505, %rd8570;
	xor.b64  	%rd8572, %rd8571, %rd8503;
	not.b64 	%rd8573, %rd8505;
	and.b64  	%rd8574, %rd8506, %rd8573;
	xor.b64  	%rd8575, %rd8574, %rd8504;
	not.b64 	%rd8576, %rd8506;
	and.b64  	%rd8577, %rd8502, %rd8576;
	xor.b64  	%rd8578, %rd8577, %rd8505;
	not.b64 	%rd8579, %rd8502;
	and.b64  	%rd8580, %rd8503, %rd8579;
	xor.b64  	%rd8581, %rd8580, %rd8506;
	xor.b64  	%rd8583, %rd8509, %rd18;
	xor.b64  	%rd8584, %rd8524, %rd8583;
	xor.b64  	%rd8585, %rd8584, %rd8539;
	xor.b64  	%rd8586, %rd8585, %rd8554;
	xor.b64  	%rd8587, %rd8586, %rd8569;
	xor.b64  	%rd8588, %rd8527, %rd8512;
	xor.b64  	%rd8589, %rd8588, %rd8542;
	xor.b64  	%rd8590, %rd8589, %rd8557;
	xor.b64  	%rd8591, %rd8590, %rd8572;
	xor.b64  	%rd8592, %rd8530, %rd8515;
	xor.b64  	%rd8593, %rd8592, %rd8545;
	xor.b64  	%rd8594, %rd8593, %rd8560;
	xor.b64  	%rd8595, %rd8594, %rd8575;
	xor.b64  	%rd8596, %rd8533, %rd8518;
	xor.b64  	%rd8597, %rd8596, %rd8548;
	xor.b64  	%rd8598, %rd8597, %rd8563;
	xor.b64  	%rd8599, %rd8598, %rd8578;
	xor.b64  	%rd8600, %rd8536, %rd8521;
	xor.b64  	%rd8601, %rd8600, %rd8551;
	xor.b64  	%rd8602, %rd8601, %rd8566;
	xor.b64  	%rd8603, %rd8602, %rd8581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5993}, %rd8591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd8591;
	}
	shf.l.wrap.b32 	%r5995, %r5994, %r5993, 1;
	shf.l.wrap.b32 	%r5996, %r5993, %r5994, 1;
	mov.b64 	%rd8604, {%r5996, %r5995};
	xor.b64  	%rd8605, %rd8603, %rd8604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5997}, %rd8595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5998,%dummy}, %rd8595;
	}
	shf.l.wrap.b32 	%r5999, %r5998, %r5997, 1;
	shf.l.wrap.b32 	%r6000, %r5997, %r5998, 1;
	mov.b64 	%rd8606, {%r6000, %r5999};
	xor.b64  	%rd8607, %rd8606, %rd8587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6001}, %rd8599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd8599;
	}
	shf.l.wrap.b32 	%r6003, %r6002, %r6001, 1;
	shf.l.wrap.b32 	%r6004, %r6001, %r6002, 1;
	mov.b64 	%rd8608, {%r6004, %r6003};
	xor.b64  	%rd8609, %rd8608, %rd8591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6005}, %rd8603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6006,%dummy}, %rd8603;
	}
	shf.l.wrap.b32 	%r6007, %r6006, %r6005, 1;
	shf.l.wrap.b32 	%r6008, %r6005, %r6006, 1;
	mov.b64 	%rd8610, {%r6008, %r6007};
	xor.b64  	%rd8611, %rd8610, %rd8595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6009}, %rd8587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd8587;
	}
	shf.l.wrap.b32 	%r6011, %r6010, %r6009, 1;
	shf.l.wrap.b32 	%r6012, %r6009, %r6010, 1;
	mov.b64 	%rd8612, {%r6012, %r6011};
	xor.b64  	%rd8613, %rd8599, %rd8612;
	xor.b64  	%rd8614, %rd8605, %rd8583;
	xor.b64  	%rd8615, %rd8607, %rd8512;
	xor.b64  	%rd8616, %rd8609, %rd8515;
	xor.b64  	%rd8617, %rd8611, %rd8518;
	xor.b64  	%rd8618, %rd8613, %rd8521;
	xor.b64  	%rd8619, %rd8605, %rd8524;
	xor.b64  	%rd8620, %rd8607, %rd8527;
	xor.b64  	%rd8621, %rd8609, %rd8530;
	xor.b64  	%rd8622, %rd8611, %rd8533;
	xor.b64  	%rd8623, %rd8613, %rd8536;
	xor.b64  	%rd8624, %rd8605, %rd8539;
	xor.b64  	%rd8625, %rd8607, %rd8542;
	xor.b64  	%rd8626, %rd8609, %rd8545;
	xor.b64  	%rd8627, %rd8611, %rd8548;
	xor.b64  	%rd8628, %rd8613, %rd8551;
	xor.b64  	%rd8629, %rd8605, %rd8554;
	xor.b64  	%rd8630, %rd8607, %rd8557;
	xor.b64  	%rd8631, %rd8609, %rd8560;
	xor.b64  	%rd8632, %rd8611, %rd8563;
	xor.b64  	%rd8633, %rd8613, %rd8566;
	xor.b64  	%rd8634, %rd8605, %rd8569;
	xor.b64  	%rd8635, %rd8607, %rd8572;
	xor.b64  	%rd8636, %rd8609, %rd8575;
	xor.b64  	%rd8637, %rd8611, %rd8578;
	xor.b64  	%rd8638, %rd8613, %rd8581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6013,%dummy}, %rd8620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6014}, %rd8620;
	}
	shf.r.wrap.b32 	%r6015, %r6014, %r6013, 20;
	shf.r.wrap.b32 	%r6016, %r6013, %r6014, 20;
	mov.b64 	%rd8639, {%r6016, %r6015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6017,%dummy}, %rd8626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6018}, %rd8626;
	}
	shf.r.wrap.b32 	%r6019, %r6018, %r6017, 21;
	shf.r.wrap.b32 	%r6020, %r6017, %r6018, 21;
	mov.b64 	%rd8640, {%r6020, %r6019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd8632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6022,%dummy}, %rd8632;
	}
	shf.l.wrap.b32 	%r6023, %r6022, %r6021, 21;
	shf.l.wrap.b32 	%r6024, %r6021, %r6022, 21;
	mov.b64 	%rd8641, {%r6024, %r6023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6025}, %rd8638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd8638;
	}
	shf.l.wrap.b32 	%r6027, %r6026, %r6025, 14;
	shf.l.wrap.b32 	%r6028, %r6025, %r6026, 14;
	mov.b64 	%rd8642, {%r6028, %r6027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd8617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6030,%dummy}, %rd8617;
	}
	shf.l.wrap.b32 	%r6031, %r6030, %r6029, 28;
	shf.l.wrap.b32 	%r6032, %r6029, %r6030, 28;
	mov.b64 	%rd8643, {%r6032, %r6031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6033}, %rd8623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd8623;
	}
	shf.l.wrap.b32 	%r6035, %r6034, %r6033, 20;
	shf.l.wrap.b32 	%r6036, %r6033, %r6034, 20;
	mov.b64 	%rd8644, {%r6036, %r6035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6037}, %rd8624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6038,%dummy}, %rd8624;
	}
	shf.l.wrap.b32 	%r6039, %r6038, %r6037, 3;
	shf.l.wrap.b32 	%r6040, %r6037, %r6038, 3;
	mov.b64 	%rd8645, {%r6040, %r6039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6041,%dummy}, %rd8630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6042}, %rd8630;
	}
	shf.r.wrap.b32 	%r6043, %r6042, %r6041, 19;
	shf.r.wrap.b32 	%r6044, %r6041, %r6042, 19;
	mov.b64 	%rd8646, {%r6044, %r6043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6045,%dummy}, %rd8636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6046}, %rd8636;
	}
	shf.r.wrap.b32 	%r6047, %r6046, %r6045, 3;
	shf.r.wrap.b32 	%r6048, %r6045, %r6046, 3;
	mov.b64 	%rd8647, {%r6048, %r6047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6049}, %rd8615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6050,%dummy}, %rd8615;
	}
	shf.l.wrap.b32 	%r6051, %r6050, %r6049, 1;
	shf.l.wrap.b32 	%r6052, %r6049, %r6050, 1;
	mov.b64 	%rd8648, {%r6052, %r6051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd8621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd8621;
	}
	shf.l.wrap.b32 	%r6055, %r6054, %r6053, 6;
	shf.l.wrap.b32 	%r6056, %r6053, %r6054, 6;
	mov.b64 	%rd8649, {%r6056, %r6055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6057}, %rd8627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6058,%dummy}, %rd8627;
	}
	shf.l.wrap.b32 	%r6059, %r6058, %r6057, 25;
	shf.l.wrap.b32 	%r6060, %r6057, %r6058, 25;
	mov.b64 	%rd8650, {%r6060, %r6059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6061}, %rd8633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd8633;
	}
	shf.l.wrap.b32 	%r6063, %r6062, %r6061, 8;
	shf.l.wrap.b32 	%r6064, %r6061, %r6062, 8;
	mov.b64 	%rd8651, {%r6064, %r6063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6065}, %rd8634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6066,%dummy}, %rd8634;
	}
	shf.l.wrap.b32 	%r6067, %r6066, %r6065, 18;
	shf.l.wrap.b32 	%r6068, %r6065, %r6066, 18;
	mov.b64 	%rd8652, {%r6068, %r6067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6069}, %rd8618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6070,%dummy}, %rd8618;
	}
	shf.l.wrap.b32 	%r6071, %r6070, %r6069, 27;
	shf.l.wrap.b32 	%r6072, %r6069, %r6070, 27;
	mov.b64 	%rd8653, {%r6072, %r6071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6073,%dummy}, %rd8619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6074}, %rd8619;
	}
	shf.r.wrap.b32 	%r6075, %r6074, %r6073, 28;
	shf.r.wrap.b32 	%r6076, %r6073, %r6074, 28;
	mov.b64 	%rd8654, {%r6076, %r6075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6077}, %rd8625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6078,%dummy}, %rd8625;
	}
	shf.l.wrap.b32 	%r6079, %r6078, %r6077, 10;
	shf.l.wrap.b32 	%r6080, %r6077, %r6078, 10;
	mov.b64 	%rd8655, {%r6080, %r6079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd8631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6082,%dummy}, %rd8631;
	}
	shf.l.wrap.b32 	%r6083, %r6082, %r6081, 15;
	shf.l.wrap.b32 	%r6084, %r6081, %r6082, 15;
	mov.b64 	%rd8656, {%r6084, %r6083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6085,%dummy}, %rd8637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6086}, %rd8637;
	}
	shf.r.wrap.b32 	%r6087, %r6086, %r6085, 8;
	shf.r.wrap.b32 	%r6088, %r6085, %r6086, 8;
	mov.b64 	%rd8657, {%r6088, %r6087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6089,%dummy}, %rd8616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6090}, %rd8616;
	}
	shf.r.wrap.b32 	%r6091, %r6090, %r6089, 2;
	shf.r.wrap.b32 	%r6092, %r6089, %r6090, 2;
	mov.b64 	%rd8658, {%r6092, %r6091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6093,%dummy}, %rd8622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6094}, %rd8622;
	}
	shf.r.wrap.b32 	%r6095, %r6094, %r6093, 9;
	shf.r.wrap.b32 	%r6096, %r6093, %r6094, 9;
	mov.b64 	%rd8659, {%r6096, %r6095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6097,%dummy}, %rd8628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6098}, %rd8628;
	}
	shf.r.wrap.b32 	%r6099, %r6098, %r6097, 25;
	shf.r.wrap.b32 	%r6100, %r6097, %r6098, 25;
	mov.b64 	%rd8660, {%r6100, %r6099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6101,%dummy}, %rd8629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6102}, %rd8629;
	}
	shf.r.wrap.b32 	%r6103, %r6102, %r6101, 23;
	shf.r.wrap.b32 	%r6104, %r6101, %r6102, 23;
	mov.b64 	%rd8661, {%r6104, %r6103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6105}, %rd8635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd8635;
	}
	shf.l.wrap.b32 	%r6107, %r6106, %r6105, 2;
	shf.l.wrap.b32 	%r6108, %r6105, %r6106, 2;
	mov.b64 	%rd8662, {%r6108, %r6107};
	not.b64 	%rd8663, %rd8639;
	and.b64  	%rd8664, %rd8640, %rd8663;
	xor.b64  	%rd8665, %rd8664, %rd8614;
	not.b64 	%rd8666, %rd8640;
	and.b64  	%rd8667, %rd8641, %rd8666;
	xor.b64  	%rd8668, %rd8667, %rd8639;
	not.b64 	%rd8669, %rd8641;
	and.b64  	%rd8670, %rd8642, %rd8669;
	xor.b64  	%rd8671, %rd8670, %rd8640;
	not.b64 	%rd8672, %rd8642;
	and.b64  	%rd8673, %rd8614, %rd8672;
	xor.b64  	%rd8674, %rd8673, %rd8641;
	not.b64 	%rd8675, %rd8614;
	and.b64  	%rd8676, %rd8639, %rd8675;
	xor.b64  	%rd8677, %rd8676, %rd8642;
	not.b64 	%rd8678, %rd8644;
	and.b64  	%rd8679, %rd8645, %rd8678;
	xor.b64  	%rd8680, %rd8679, %rd8643;
	not.b64 	%rd8681, %rd8645;
	and.b64  	%rd8682, %rd8646, %rd8681;
	xor.b64  	%rd8683, %rd8682, %rd8644;
	not.b64 	%rd8684, %rd8646;
	and.b64  	%rd8685, %rd8647, %rd8684;
	xor.b64  	%rd8686, %rd8685, %rd8645;
	not.b64 	%rd8687, %rd8647;
	and.b64  	%rd8688, %rd8643, %rd8687;
	xor.b64  	%rd8689, %rd8688, %rd8646;
	not.b64 	%rd8690, %rd8643;
	and.b64  	%rd8691, %rd8644, %rd8690;
	xor.b64  	%rd8692, %rd8691, %rd8647;
	not.b64 	%rd8693, %rd8649;
	and.b64  	%rd8694, %rd8650, %rd8693;
	xor.b64  	%rd8695, %rd8694, %rd8648;
	not.b64 	%rd8696, %rd8650;
	and.b64  	%rd8697, %rd8651, %rd8696;
	xor.b64  	%rd8698, %rd8697, %rd8649;
	not.b64 	%rd8699, %rd8651;
	and.b64  	%rd8700, %rd8652, %rd8699;
	xor.b64  	%rd8701, %rd8700, %rd8650;
	not.b64 	%rd8702, %rd8652;
	and.b64  	%rd8703, %rd8648, %rd8702;
	xor.b64  	%rd8704, %rd8703, %rd8651;
	not.b64 	%rd8705, %rd8648;
	and.b64  	%rd8706, %rd8649, %rd8705;
	xor.b64  	%rd8707, %rd8706, %rd8652;
	not.b64 	%rd8708, %rd8654;
	and.b64  	%rd8709, %rd8655, %rd8708;
	xor.b64  	%rd8710, %rd8709, %rd8653;
	not.b64 	%rd8711, %rd8655;
	and.b64  	%rd8712, %rd8656, %rd8711;
	xor.b64  	%rd8713, %rd8712, %rd8654;
	not.b64 	%rd8714, %rd8656;
	and.b64  	%rd8715, %rd8657, %rd8714;
	xor.b64  	%rd8716, %rd8715, %rd8655;
	not.b64 	%rd8717, %rd8657;
	and.b64  	%rd8718, %rd8653, %rd8717;
	xor.b64  	%rd8719, %rd8718, %rd8656;
	not.b64 	%rd8720, %rd8653;
	and.b64  	%rd8721, %rd8654, %rd8720;
	xor.b64  	%rd8722, %rd8721, %rd8657;
	not.b64 	%rd8723, %rd8659;
	and.b64  	%rd8724, %rd8660, %rd8723;
	xor.b64  	%rd8725, %rd8724, %rd8658;
	not.b64 	%rd8726, %rd8660;
	and.b64  	%rd8727, %rd8661, %rd8726;
	xor.b64  	%rd8728, %rd8727, %rd8659;
	not.b64 	%rd8729, %rd8661;
	and.b64  	%rd8730, %rd8662, %rd8729;
	xor.b64  	%rd8731, %rd8730, %rd8660;
	not.b64 	%rd8732, %rd8662;
	and.b64  	%rd8733, %rd8658, %rd8732;
	xor.b64  	%rd8734, %rd8733, %rd8661;
	not.b64 	%rd8735, %rd8658;
	and.b64  	%rd8736, %rd8659, %rd8735;
	xor.b64  	%rd8737, %rd8736, %rd8662;
	xor.b64  	%rd8739, %rd8665, %rd19;
	xor.b64  	%rd8740, %rd8680, %rd8739;
	xor.b64  	%rd8741, %rd8740, %rd8695;
	xor.b64  	%rd8742, %rd8741, %rd8710;
	xor.b64  	%rd8743, %rd8742, %rd8725;
	xor.b64  	%rd8744, %rd8683, %rd8668;
	xor.b64  	%rd8745, %rd8744, %rd8698;
	xor.b64  	%rd8746, %rd8745, %rd8713;
	xor.b64  	%rd8747, %rd8746, %rd8728;
	xor.b64  	%rd8748, %rd8686, %rd8671;
	xor.b64  	%rd8749, %rd8748, %rd8701;
	xor.b64  	%rd8750, %rd8749, %rd8716;
	xor.b64  	%rd8751, %rd8750, %rd8731;
	xor.b64  	%rd8752, %rd8689, %rd8674;
	xor.b64  	%rd8753, %rd8752, %rd8704;
	xor.b64  	%rd8754, %rd8753, %rd8719;
	xor.b64  	%rd8755, %rd8754, %rd8734;
	xor.b64  	%rd8756, %rd8692, %rd8677;
	xor.b64  	%rd8757, %rd8756, %rd8707;
	xor.b64  	%rd8758, %rd8757, %rd8722;
	xor.b64  	%rd8759, %rd8758, %rd8737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6109}, %rd8747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6110,%dummy}, %rd8747;
	}
	shf.l.wrap.b32 	%r6111, %r6110, %r6109, 1;
	shf.l.wrap.b32 	%r6112, %r6109, %r6110, 1;
	mov.b64 	%rd8760, {%r6112, %r6111};
	xor.b64  	%rd8761, %rd8759, %rd8760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd8751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6114,%dummy}, %rd8751;
	}
	shf.l.wrap.b32 	%r6115, %r6114, %r6113, 1;
	shf.l.wrap.b32 	%r6116, %r6113, %r6114, 1;
	mov.b64 	%rd8762, {%r6116, %r6115};
	xor.b64  	%rd8763, %rd8762, %rd8743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6117}, %rd8755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6118,%dummy}, %rd8755;
	}
	shf.l.wrap.b32 	%r6119, %r6118, %r6117, 1;
	shf.l.wrap.b32 	%r6120, %r6117, %r6118, 1;
	mov.b64 	%rd8764, {%r6120, %r6119};
	xor.b64  	%rd8765, %rd8764, %rd8747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd8759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd8759;
	}
	shf.l.wrap.b32 	%r6123, %r6122, %r6121, 1;
	shf.l.wrap.b32 	%r6124, %r6121, %r6122, 1;
	mov.b64 	%rd8766, {%r6124, %r6123};
	xor.b64  	%rd8767, %rd8766, %rd8751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6125}, %rd8743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6126,%dummy}, %rd8743;
	}
	shf.l.wrap.b32 	%r6127, %r6126, %r6125, 1;
	shf.l.wrap.b32 	%r6128, %r6125, %r6126, 1;
	mov.b64 	%rd8768, {%r6128, %r6127};
	xor.b64  	%rd8769, %rd8755, %rd8768;
	xor.b64  	%rd8770, %rd8761, %rd8739;
	xor.b64  	%rd8771, %rd8763, %rd8668;
	xor.b64  	%rd8772, %rd8765, %rd8671;
	xor.b64  	%rd8773, %rd8767, %rd8674;
	xor.b64  	%rd8774, %rd8769, %rd8677;
	xor.b64  	%rd8775, %rd8761, %rd8680;
	xor.b64  	%rd8776, %rd8763, %rd8683;
	xor.b64  	%rd8777, %rd8765, %rd8686;
	xor.b64  	%rd8778, %rd8767, %rd8689;
	xor.b64  	%rd8779, %rd8769, %rd8692;
	xor.b64  	%rd8780, %rd8761, %rd8695;
	xor.b64  	%rd8781, %rd8763, %rd8698;
	xor.b64  	%rd8782, %rd8765, %rd8701;
	xor.b64  	%rd8783, %rd8767, %rd8704;
	xor.b64  	%rd8784, %rd8769, %rd8707;
	xor.b64  	%rd8785, %rd8761, %rd8710;
	xor.b64  	%rd8786, %rd8763, %rd8713;
	xor.b64  	%rd8787, %rd8765, %rd8716;
	xor.b64  	%rd8788, %rd8767, %rd8719;
	xor.b64  	%rd8789, %rd8769, %rd8722;
	xor.b64  	%rd8790, %rd8761, %rd8725;
	xor.b64  	%rd8791, %rd8763, %rd8728;
	xor.b64  	%rd8792, %rd8765, %rd8731;
	xor.b64  	%rd8793, %rd8767, %rd8734;
	xor.b64  	%rd8794, %rd8769, %rd8737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6129,%dummy}, %rd8776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6130}, %rd8776;
	}
	shf.r.wrap.b32 	%r6131, %r6130, %r6129, 20;
	shf.r.wrap.b32 	%r6132, %r6129, %r6130, 20;
	mov.b64 	%rd8795, {%r6132, %r6131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6133,%dummy}, %rd8782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6134}, %rd8782;
	}
	shf.r.wrap.b32 	%r6135, %r6134, %r6133, 21;
	shf.r.wrap.b32 	%r6136, %r6133, %r6134, 21;
	mov.b64 	%rd8796, {%r6136, %r6135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6137}, %rd8788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd8788;
	}
	shf.l.wrap.b32 	%r6139, %r6138, %r6137, 21;
	shf.l.wrap.b32 	%r6140, %r6137, %r6138, 21;
	mov.b64 	%rd8797, {%r6140, %r6139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6141}, %rd8794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6142,%dummy}, %rd8794;
	}
	shf.l.wrap.b32 	%r6143, %r6142, %r6141, 14;
	shf.l.wrap.b32 	%r6144, %r6141, %r6142, 14;
	mov.b64 	%rd8798, {%r6144, %r6143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6145}, %rd8773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd8773;
	}
	shf.l.wrap.b32 	%r6147, %r6146, %r6145, 28;
	shf.l.wrap.b32 	%r6148, %r6145, %r6146, 28;
	mov.b64 	%rd8799, {%r6148, %r6147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6149}, %rd8779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6150,%dummy}, %rd8779;
	}
	shf.l.wrap.b32 	%r6151, %r6150, %r6149, 20;
	shf.l.wrap.b32 	%r6152, %r6149, %r6150, 20;
	mov.b64 	%rd8800, {%r6152, %r6151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6153}, %rd8780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd8780;
	}
	shf.l.wrap.b32 	%r6155, %r6154, %r6153, 3;
	shf.l.wrap.b32 	%r6156, %r6153, %r6154, 3;
	mov.b64 	%rd8801, {%r6156, %r6155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6157,%dummy}, %rd8786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6158}, %rd8786;
	}
	shf.r.wrap.b32 	%r6159, %r6158, %r6157, 19;
	shf.r.wrap.b32 	%r6160, %r6157, %r6158, 19;
	mov.b64 	%rd8802, {%r6160, %r6159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6161,%dummy}, %rd8792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6162}, %rd8792;
	}
	shf.r.wrap.b32 	%r6163, %r6162, %r6161, 3;
	shf.r.wrap.b32 	%r6164, %r6161, %r6162, 3;
	mov.b64 	%rd8803, {%r6164, %r6163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6165}, %rd8771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6166,%dummy}, %rd8771;
	}
	shf.l.wrap.b32 	%r6167, %r6166, %r6165, 1;
	shf.l.wrap.b32 	%r6168, %r6165, %r6166, 1;
	mov.b64 	%rd8804, {%r6168, %r6167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd8777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd8777;
	}
	shf.l.wrap.b32 	%r6171, %r6170, %r6169, 6;
	shf.l.wrap.b32 	%r6172, %r6169, %r6170, 6;
	mov.b64 	%rd8805, {%r6172, %r6171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6173}, %rd8783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6174,%dummy}, %rd8783;
	}
	shf.l.wrap.b32 	%r6175, %r6174, %r6173, 25;
	shf.l.wrap.b32 	%r6176, %r6173, %r6174, 25;
	mov.b64 	%rd8806, {%r6176, %r6175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6178,%dummy}, %rd8789;
	}
	shf.l.wrap.b32 	%r6179, %r6178, %r6177, 8;
	shf.l.wrap.b32 	%r6180, %r6177, %r6178, 8;
	mov.b64 	%rd8807, {%r6180, %r6179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6181}, %rd8790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6182,%dummy}, %rd8790;
	}
	shf.l.wrap.b32 	%r6183, %r6182, %r6181, 18;
	shf.l.wrap.b32 	%r6184, %r6181, %r6182, 18;
	mov.b64 	%rd8808, {%r6184, %r6183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6185}, %rd8774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd8774;
	}
	shf.l.wrap.b32 	%r6187, %r6186, %r6185, 27;
	shf.l.wrap.b32 	%r6188, %r6185, %r6186, 27;
	mov.b64 	%rd8809, {%r6188, %r6187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd8775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd8775;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 28;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 28;
	mov.b64 	%rd8810, {%r6192, %r6191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6193}, %rd8781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6194,%dummy}, %rd8781;
	}
	shf.l.wrap.b32 	%r6195, %r6194, %r6193, 10;
	shf.l.wrap.b32 	%r6196, %r6193, %r6194, 10;
	mov.b64 	%rd8811, {%r6196, %r6195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd8787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6198,%dummy}, %rd8787;
	}
	shf.l.wrap.b32 	%r6199, %r6198, %r6197, 15;
	shf.l.wrap.b32 	%r6200, %r6197, %r6198, 15;
	mov.b64 	%rd8812, {%r6200, %r6199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6201,%dummy}, %rd8793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6202}, %rd8793;
	}
	shf.r.wrap.b32 	%r6203, %r6202, %r6201, 8;
	shf.r.wrap.b32 	%r6204, %r6201, %r6202, 8;
	mov.b64 	%rd8813, {%r6204, %r6203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6205,%dummy}, %rd8772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6206}, %rd8772;
	}
	shf.r.wrap.b32 	%r6207, %r6206, %r6205, 2;
	shf.r.wrap.b32 	%r6208, %r6205, %r6206, 2;
	mov.b64 	%rd8814, {%r6208, %r6207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6209,%dummy}, %rd8778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6210}, %rd8778;
	}
	shf.r.wrap.b32 	%r6211, %r6210, %r6209, 9;
	shf.r.wrap.b32 	%r6212, %r6209, %r6210, 9;
	mov.b64 	%rd8815, {%r6212, %r6211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6213,%dummy}, %rd8784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6214}, %rd8784;
	}
	shf.r.wrap.b32 	%r6215, %r6214, %r6213, 25;
	shf.r.wrap.b32 	%r6216, %r6213, %r6214, 25;
	mov.b64 	%rd8816, {%r6216, %r6215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6217,%dummy}, %rd8785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6218}, %rd8785;
	}
	shf.r.wrap.b32 	%r6219, %r6218, %r6217, 23;
	shf.r.wrap.b32 	%r6220, %r6217, %r6218, 23;
	mov.b64 	%rd8817, {%r6220, %r6219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6221}, %rd8791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6222,%dummy}, %rd8791;
	}
	shf.l.wrap.b32 	%r6223, %r6222, %r6221, 2;
	shf.l.wrap.b32 	%r6224, %r6221, %r6222, 2;
	mov.b64 	%rd8818, {%r6224, %r6223};
	not.b64 	%rd8819, %rd8795;
	and.b64  	%rd8820, %rd8796, %rd8819;
	xor.b64  	%rd8821, %rd8820, %rd8770;
	not.b64 	%rd8822, %rd8796;
	and.b64  	%rd8823, %rd8797, %rd8822;
	xor.b64  	%rd8824, %rd8823, %rd8795;
	not.b64 	%rd8825, %rd8797;
	and.b64  	%rd8826, %rd8798, %rd8825;
	xor.b64  	%rd8827, %rd8826, %rd8796;
	not.b64 	%rd8828, %rd8798;
	and.b64  	%rd8829, %rd8770, %rd8828;
	xor.b64  	%rd8830, %rd8829, %rd8797;
	not.b64 	%rd8831, %rd8770;
	and.b64  	%rd8832, %rd8795, %rd8831;
	xor.b64  	%rd8833, %rd8832, %rd8798;
	not.b64 	%rd8834, %rd8800;
	and.b64  	%rd8835, %rd8801, %rd8834;
	xor.b64  	%rd8836, %rd8835, %rd8799;
	not.b64 	%rd8837, %rd8801;
	and.b64  	%rd8838, %rd8802, %rd8837;
	xor.b64  	%rd8839, %rd8838, %rd8800;
	not.b64 	%rd8840, %rd8802;
	and.b64  	%rd8841, %rd8803, %rd8840;
	xor.b64  	%rd8842, %rd8841, %rd8801;
	not.b64 	%rd8843, %rd8803;
	and.b64  	%rd8844, %rd8799, %rd8843;
	xor.b64  	%rd8845, %rd8844, %rd8802;
	not.b64 	%rd8846, %rd8799;
	and.b64  	%rd8847, %rd8800, %rd8846;
	xor.b64  	%rd8848, %rd8847, %rd8803;
	not.b64 	%rd8849, %rd8805;
	and.b64  	%rd8850, %rd8806, %rd8849;
	xor.b64  	%rd8851, %rd8850, %rd8804;
	not.b64 	%rd8852, %rd8806;
	and.b64  	%rd8853, %rd8807, %rd8852;
	xor.b64  	%rd8854, %rd8853, %rd8805;
	not.b64 	%rd8855, %rd8807;
	and.b64  	%rd8856, %rd8808, %rd8855;
	xor.b64  	%rd8857, %rd8856, %rd8806;
	not.b64 	%rd8858, %rd8808;
	and.b64  	%rd8859, %rd8804, %rd8858;
	xor.b64  	%rd8860, %rd8859, %rd8807;
	not.b64 	%rd8861, %rd8804;
	and.b64  	%rd8862, %rd8805, %rd8861;
	xor.b64  	%rd8863, %rd8862, %rd8808;
	not.b64 	%rd8864, %rd8810;
	and.b64  	%rd8865, %rd8811, %rd8864;
	xor.b64  	%rd8866, %rd8865, %rd8809;
	not.b64 	%rd8867, %rd8811;
	and.b64  	%rd8868, %rd8812, %rd8867;
	xor.b64  	%rd8869, %rd8868, %rd8810;
	not.b64 	%rd8870, %rd8812;
	and.b64  	%rd8871, %rd8813, %rd8870;
	xor.b64  	%rd8872, %rd8871, %rd8811;
	not.b64 	%rd8873, %rd8813;
	and.b64  	%rd8874, %rd8809, %rd8873;
	xor.b64  	%rd8875, %rd8874, %rd8812;
	not.b64 	%rd8876, %rd8809;
	and.b64  	%rd8877, %rd8810, %rd8876;
	xor.b64  	%rd8878, %rd8877, %rd8813;
	not.b64 	%rd8879, %rd8815;
	and.b64  	%rd8880, %rd8816, %rd8879;
	xor.b64  	%rd8881, %rd8880, %rd8814;
	not.b64 	%rd8882, %rd8816;
	and.b64  	%rd8883, %rd8817, %rd8882;
	xor.b64  	%rd8884, %rd8883, %rd8815;
	not.b64 	%rd8885, %rd8817;
	and.b64  	%rd8886, %rd8818, %rd8885;
	xor.b64  	%rd8887, %rd8886, %rd8816;
	not.b64 	%rd8888, %rd8818;
	and.b64  	%rd8889, %rd8814, %rd8888;
	xor.b64  	%rd8890, %rd8889, %rd8817;
	not.b64 	%rd8891, %rd8814;
	and.b64  	%rd8892, %rd8815, %rd8891;
	xor.b64  	%rd8893, %rd8892, %rd8818;
	xor.b64  	%rd8895, %rd8821, %rd20;
	xor.b64  	%rd8896, %rd8836, %rd8895;
	xor.b64  	%rd8897, %rd8896, %rd8851;
	xor.b64  	%rd8898, %rd8897, %rd8866;
	xor.b64  	%rd8899, %rd8898, %rd8881;
	xor.b64  	%rd8900, %rd8839, %rd8824;
	xor.b64  	%rd8901, %rd8900, %rd8854;
	xor.b64  	%rd8902, %rd8901, %rd8869;
	xor.b64  	%rd8903, %rd8902, %rd8884;
	xor.b64  	%rd8904, %rd8842, %rd8827;
	xor.b64  	%rd8905, %rd8904, %rd8857;
	xor.b64  	%rd8906, %rd8905, %rd8872;
	xor.b64  	%rd8907, %rd8906, %rd8887;
	xor.b64  	%rd8908, %rd8845, %rd8830;
	xor.b64  	%rd8909, %rd8908, %rd8860;
	xor.b64  	%rd8910, %rd8909, %rd8875;
	xor.b64  	%rd8911, %rd8910, %rd8890;
	xor.b64  	%rd8912, %rd8848, %rd8833;
	xor.b64  	%rd8913, %rd8912, %rd8863;
	xor.b64  	%rd8914, %rd8913, %rd8878;
	xor.b64  	%rd8915, %rd8914, %rd8893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6225}, %rd8903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd8903;
	}
	shf.l.wrap.b32 	%r6227, %r6226, %r6225, 1;
	shf.l.wrap.b32 	%r6228, %r6225, %r6226, 1;
	mov.b64 	%rd8916, {%r6228, %r6227};
	xor.b64  	%rd8917, %rd8915, %rd8916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6229}, %rd8907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6230,%dummy}, %rd8907;
	}
	shf.l.wrap.b32 	%r6231, %r6230, %r6229, 1;
	shf.l.wrap.b32 	%r6232, %r6229, %r6230, 1;
	mov.b64 	%rd8918, {%r6232, %r6231};
	xor.b64  	%rd8919, %rd8918, %rd8899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6233}, %rd8911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6234,%dummy}, %rd8911;
	}
	shf.l.wrap.b32 	%r6235, %r6234, %r6233, 1;
	shf.l.wrap.b32 	%r6236, %r6233, %r6234, 1;
	mov.b64 	%rd8920, {%r6236, %r6235};
	xor.b64  	%rd8921, %rd8920, %rd8903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd8915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6238,%dummy}, %rd8915;
	}
	shf.l.wrap.b32 	%r6239, %r6238, %r6237, 1;
	shf.l.wrap.b32 	%r6240, %r6237, %r6238, 1;
	mov.b64 	%rd8922, {%r6240, %r6239};
	xor.b64  	%rd8923, %rd8922, %rd8907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6241}, %rd8899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6242,%dummy}, %rd8899;
	}
	shf.l.wrap.b32 	%r6243, %r6242, %r6241, 1;
	shf.l.wrap.b32 	%r6244, %r6241, %r6242, 1;
	mov.b64 	%rd8924, {%r6244, %r6243};
	xor.b64  	%rd8925, %rd8911, %rd8924;
	xor.b64  	%rd8926, %rd8917, %rd8895;
	xor.b64  	%rd8927, %rd8919, %rd8824;
	xor.b64  	%rd8928, %rd8921, %rd8827;
	xor.b64  	%rd8929, %rd8923, %rd8830;
	xor.b64  	%rd8930, %rd8925, %rd8833;
	xor.b64  	%rd8931, %rd8917, %rd8836;
	xor.b64  	%rd8932, %rd8919, %rd8839;
	xor.b64  	%rd8933, %rd8921, %rd8842;
	xor.b64  	%rd8934, %rd8923, %rd8845;
	xor.b64  	%rd8935, %rd8925, %rd8848;
	xor.b64  	%rd8936, %rd8917, %rd8851;
	xor.b64  	%rd8937, %rd8919, %rd8854;
	xor.b64  	%rd8938, %rd8921, %rd8857;
	xor.b64  	%rd8939, %rd8923, %rd8860;
	xor.b64  	%rd8940, %rd8925, %rd8863;
	xor.b64  	%rd8941, %rd8917, %rd8866;
	xor.b64  	%rd8942, %rd8919, %rd8869;
	xor.b64  	%rd8943, %rd8921, %rd8872;
	xor.b64  	%rd8944, %rd8923, %rd8875;
	xor.b64  	%rd8945, %rd8925, %rd8878;
	xor.b64  	%rd8946, %rd8917, %rd8881;
	xor.b64  	%rd8947, %rd8919, %rd8884;
	xor.b64  	%rd8948, %rd8921, %rd8887;
	xor.b64  	%rd8949, %rd8923, %rd8890;
	xor.b64  	%rd8950, %rd8925, %rd8893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6245,%dummy}, %rd8932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6246}, %rd8932;
	}
	shf.r.wrap.b32 	%r6247, %r6246, %r6245, 20;
	shf.r.wrap.b32 	%r6248, %r6245, %r6246, 20;
	mov.b64 	%rd8951, {%r6248, %r6247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6249,%dummy}, %rd8938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6250}, %rd8938;
	}
	shf.r.wrap.b32 	%r6251, %r6250, %r6249, 21;
	shf.r.wrap.b32 	%r6252, %r6249, %r6250, 21;
	mov.b64 	%rd8952, {%r6252, %r6251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6253}, %rd8944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6254,%dummy}, %rd8944;
	}
	shf.l.wrap.b32 	%r6255, %r6254, %r6253, 21;
	shf.l.wrap.b32 	%r6256, %r6253, %r6254, 21;
	mov.b64 	%rd8953, {%r6256, %r6255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd8950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6258,%dummy}, %rd8950;
	}
	shf.l.wrap.b32 	%r6259, %r6258, %r6257, 14;
	shf.l.wrap.b32 	%r6260, %r6257, %r6258, 14;
	mov.b64 	%rd8954, {%r6260, %r6259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6261}, %rd8929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6262,%dummy}, %rd8929;
	}
	shf.l.wrap.b32 	%r6263, %r6262, %r6261, 28;
	shf.l.wrap.b32 	%r6264, %r6261, %r6262, 28;
	mov.b64 	%rd8955, {%r6264, %r6263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6265}, %rd8935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd8935;
	}
	shf.l.wrap.b32 	%r6267, %r6266, %r6265, 20;
	shf.l.wrap.b32 	%r6268, %r6265, %r6266, 20;
	mov.b64 	%rd8956, {%r6268, %r6267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6269}, %rd8936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6270,%dummy}, %rd8936;
	}
	shf.l.wrap.b32 	%r6271, %r6270, %r6269, 3;
	shf.l.wrap.b32 	%r6272, %r6269, %r6270, 3;
	mov.b64 	%rd8957, {%r6272, %r6271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6273,%dummy}, %rd8942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6274}, %rd8942;
	}
	shf.r.wrap.b32 	%r6275, %r6274, %r6273, 19;
	shf.r.wrap.b32 	%r6276, %r6273, %r6274, 19;
	mov.b64 	%rd8958, {%r6276, %r6275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6277,%dummy}, %rd8948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6278}, %rd8948;
	}
	shf.r.wrap.b32 	%r6279, %r6278, %r6277, 3;
	shf.r.wrap.b32 	%r6280, %r6277, %r6278, 3;
	mov.b64 	%rd8959, {%r6280, %r6279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6281}, %rd8927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6282,%dummy}, %rd8927;
	}
	shf.l.wrap.b32 	%r6283, %r6282, %r6281, 1;
	shf.l.wrap.b32 	%r6284, %r6281, %r6282, 1;
	mov.b64 	%rd8960, {%r6284, %r6283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6285}, %rd8933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd8933;
	}
	shf.l.wrap.b32 	%r6287, %r6286, %r6285, 6;
	shf.l.wrap.b32 	%r6288, %r6285, %r6286, 6;
	mov.b64 	%rd8961, {%r6288, %r6287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6289}, %rd8939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6290,%dummy}, %rd8939;
	}
	shf.l.wrap.b32 	%r6291, %r6290, %r6289, 25;
	shf.l.wrap.b32 	%r6292, %r6289, %r6290, 25;
	mov.b64 	%rd8962, {%r6292, %r6291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6293}, %rd8945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6294,%dummy}, %rd8945;
	}
	shf.l.wrap.b32 	%r6295, %r6294, %r6293, 8;
	shf.l.wrap.b32 	%r6296, %r6293, %r6294, 8;
	mov.b64 	%rd8963, {%r6296, %r6295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd8946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6298,%dummy}, %rd8946;
	}
	shf.l.wrap.b32 	%r6299, %r6298, %r6297, 18;
	shf.l.wrap.b32 	%r6300, %r6297, %r6298, 18;
	mov.b64 	%rd8964, {%r6300, %r6299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6301}, %rd8930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6302,%dummy}, %rd8930;
	}
	shf.l.wrap.b32 	%r6303, %r6302, %r6301, 27;
	shf.l.wrap.b32 	%r6304, %r6301, %r6302, 27;
	mov.b64 	%rd8965, {%r6304, %r6303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6305,%dummy}, %rd8931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6306}, %rd8931;
	}
	shf.r.wrap.b32 	%r6307, %r6306, %r6305, 28;
	shf.r.wrap.b32 	%r6308, %r6305, %r6306, 28;
	mov.b64 	%rd8966, {%r6308, %r6307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6309}, %rd8937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6310,%dummy}, %rd8937;
	}
	shf.l.wrap.b32 	%r6311, %r6310, %r6309, 10;
	shf.l.wrap.b32 	%r6312, %r6309, %r6310, 10;
	mov.b64 	%rd8967, {%r6312, %r6311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6313}, %rd8943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6314,%dummy}, %rd8943;
	}
	shf.l.wrap.b32 	%r6315, %r6314, %r6313, 15;
	shf.l.wrap.b32 	%r6316, %r6313, %r6314, 15;
	mov.b64 	%rd8968, {%r6316, %r6315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6317,%dummy}, %rd8949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6318}, %rd8949;
	}
	shf.r.wrap.b32 	%r6319, %r6318, %r6317, 8;
	shf.r.wrap.b32 	%r6320, %r6317, %r6318, 8;
	mov.b64 	%rd8969, {%r6320, %r6319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6321,%dummy}, %rd8928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6322}, %rd8928;
	}
	shf.r.wrap.b32 	%r6323, %r6322, %r6321, 2;
	shf.r.wrap.b32 	%r6324, %r6321, %r6322, 2;
	mov.b64 	%rd8970, {%r6324, %r6323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6325,%dummy}, %rd8934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6326}, %rd8934;
	}
	shf.r.wrap.b32 	%r6327, %r6326, %r6325, 9;
	shf.r.wrap.b32 	%r6328, %r6325, %r6326, 9;
	mov.b64 	%rd8971, {%r6328, %r6327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6329,%dummy}, %rd8940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6330}, %rd8940;
	}
	shf.r.wrap.b32 	%r6331, %r6330, %r6329, 25;
	shf.r.wrap.b32 	%r6332, %r6329, %r6330, 25;
	mov.b64 	%rd8972, {%r6332, %r6331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6333,%dummy}, %rd8941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6334}, %rd8941;
	}
	shf.r.wrap.b32 	%r6335, %r6334, %r6333, 23;
	shf.r.wrap.b32 	%r6336, %r6333, %r6334, 23;
	mov.b64 	%rd8973, {%r6336, %r6335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd8947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6338,%dummy}, %rd8947;
	}
	shf.l.wrap.b32 	%r6339, %r6338, %r6337, 2;
	shf.l.wrap.b32 	%r6340, %r6337, %r6338, 2;
	mov.b64 	%rd8974, {%r6340, %r6339};
	not.b64 	%rd8975, %rd8951;
	and.b64  	%rd8976, %rd8952, %rd8975;
	xor.b64  	%rd8977, %rd8976, %rd8926;
	not.b64 	%rd8978, %rd8952;
	and.b64  	%rd8979, %rd8953, %rd8978;
	xor.b64  	%rd8980, %rd8979, %rd8951;
	not.b64 	%rd8981, %rd8953;
	and.b64  	%rd8982, %rd8954, %rd8981;
	xor.b64  	%rd8983, %rd8982, %rd8952;
	not.b64 	%rd8984, %rd8954;
	and.b64  	%rd8985, %rd8926, %rd8984;
	xor.b64  	%rd8986, %rd8985, %rd8953;
	not.b64 	%rd8987, %rd8926;
	and.b64  	%rd8988, %rd8951, %rd8987;
	xor.b64  	%rd8989, %rd8988, %rd8954;
	not.b64 	%rd8990, %rd8956;
	and.b64  	%rd8991, %rd8957, %rd8990;
	xor.b64  	%rd8992, %rd8991, %rd8955;
	not.b64 	%rd8993, %rd8957;
	and.b64  	%rd8994, %rd8958, %rd8993;
	xor.b64  	%rd8995, %rd8994, %rd8956;
	not.b64 	%rd8996, %rd8958;
	and.b64  	%rd8997, %rd8959, %rd8996;
	xor.b64  	%rd8998, %rd8997, %rd8957;
	not.b64 	%rd8999, %rd8959;
	and.b64  	%rd9000, %rd8955, %rd8999;
	xor.b64  	%rd9001, %rd9000, %rd8958;
	not.b64 	%rd9002, %rd8955;
	and.b64  	%rd9003, %rd8956, %rd9002;
	xor.b64  	%rd9004, %rd9003, %rd8959;
	not.b64 	%rd9005, %rd8961;
	and.b64  	%rd9006, %rd8962, %rd9005;
	xor.b64  	%rd9007, %rd9006, %rd8960;
	not.b64 	%rd9008, %rd8962;
	and.b64  	%rd9009, %rd8963, %rd9008;
	xor.b64  	%rd9010, %rd9009, %rd8961;
	not.b64 	%rd9011, %rd8963;
	and.b64  	%rd9012, %rd8964, %rd9011;
	xor.b64  	%rd9013, %rd9012, %rd8962;
	not.b64 	%rd9014, %rd8964;
	and.b64  	%rd9015, %rd8960, %rd9014;
	xor.b64  	%rd9016, %rd9015, %rd8963;
	not.b64 	%rd9017, %rd8960;
	and.b64  	%rd9018, %rd8961, %rd9017;
	xor.b64  	%rd9019, %rd9018, %rd8964;
	not.b64 	%rd9020, %rd8966;
	and.b64  	%rd9021, %rd8967, %rd9020;
	xor.b64  	%rd9022, %rd9021, %rd8965;
	not.b64 	%rd9023, %rd8967;
	and.b64  	%rd9024, %rd8968, %rd9023;
	xor.b64  	%rd9025, %rd9024, %rd8966;
	not.b64 	%rd9026, %rd8968;
	and.b64  	%rd9027, %rd8969, %rd9026;
	xor.b64  	%rd9028, %rd9027, %rd8967;
	not.b64 	%rd9029, %rd8969;
	and.b64  	%rd9030, %rd8965, %rd9029;
	xor.b64  	%rd9031, %rd9030, %rd8968;
	not.b64 	%rd9032, %rd8965;
	and.b64  	%rd9033, %rd8966, %rd9032;
	xor.b64  	%rd9034, %rd9033, %rd8969;
	not.b64 	%rd9035, %rd8971;
	and.b64  	%rd9036, %rd8972, %rd9035;
	xor.b64  	%rd9037, %rd9036, %rd8970;
	not.b64 	%rd9038, %rd8972;
	and.b64  	%rd9039, %rd8973, %rd9038;
	xor.b64  	%rd9040, %rd9039, %rd8971;
	not.b64 	%rd9041, %rd8973;
	and.b64  	%rd9042, %rd8974, %rd9041;
	xor.b64  	%rd9043, %rd9042, %rd8972;
	not.b64 	%rd9044, %rd8974;
	and.b64  	%rd9045, %rd8970, %rd9044;
	xor.b64  	%rd9046, %rd9045, %rd8973;
	not.b64 	%rd9047, %rd8970;
	and.b64  	%rd9048, %rd8971, %rd9047;
	xor.b64  	%rd9049, %rd9048, %rd8974;
	xor.b64  	%rd9051, %rd8977, %rd21;
	xor.b64  	%rd9052, %rd8992, %rd9051;
	xor.b64  	%rd9053, %rd9052, %rd9007;
	xor.b64  	%rd9054, %rd9053, %rd9022;
	xor.b64  	%rd9055, %rd9054, %rd9037;
	xor.b64  	%rd9056, %rd8995, %rd8980;
	xor.b64  	%rd9057, %rd9056, %rd9010;
	xor.b64  	%rd9058, %rd9057, %rd9025;
	xor.b64  	%rd9059, %rd9058, %rd9040;
	xor.b64  	%rd9060, %rd8998, %rd8983;
	xor.b64  	%rd9061, %rd9060, %rd9013;
	xor.b64  	%rd9062, %rd9061, %rd9028;
	xor.b64  	%rd9063, %rd9062, %rd9043;
	xor.b64  	%rd9064, %rd9001, %rd8986;
	xor.b64  	%rd9065, %rd9064, %rd9016;
	xor.b64  	%rd9066, %rd9065, %rd9031;
	xor.b64  	%rd9067, %rd9066, %rd9046;
	xor.b64  	%rd9068, %rd9004, %rd8989;
	xor.b64  	%rd9069, %rd9068, %rd9019;
	xor.b64  	%rd9070, %rd9069, %rd9034;
	xor.b64  	%rd9071, %rd9070, %rd9049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6341}, %rd9059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6342,%dummy}, %rd9059;
	}
	shf.l.wrap.b32 	%r6343, %r6342, %r6341, 1;
	shf.l.wrap.b32 	%r6344, %r6341, %r6342, 1;
	mov.b64 	%rd9072, {%r6344, %r6343};
	xor.b64  	%rd9073, %rd9071, %rd9072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6345}, %rd9063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd9063;
	}
	shf.l.wrap.b32 	%r6347, %r6346, %r6345, 1;
	shf.l.wrap.b32 	%r6348, %r6345, %r6346, 1;
	mov.b64 	%rd9074, {%r6348, %r6347};
	xor.b64  	%rd9075, %rd9074, %rd9055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6349}, %rd9067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6350,%dummy}, %rd9067;
	}
	shf.l.wrap.b32 	%r6351, %r6350, %r6349, 1;
	shf.l.wrap.b32 	%r6352, %r6349, %r6350, 1;
	mov.b64 	%rd9076, {%r6352, %r6351};
	xor.b64  	%rd9077, %rd9076, %rd9059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6353}, %rd9071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd9071;
	}
	shf.l.wrap.b32 	%r6355, %r6354, %r6353, 1;
	shf.l.wrap.b32 	%r6356, %r6353, %r6354, 1;
	mov.b64 	%rd9078, {%r6356, %r6355};
	xor.b64  	%rd9079, %rd9078, %rd9063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6357}, %rd9055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6358,%dummy}, %rd9055;
	}
	shf.l.wrap.b32 	%r6359, %r6358, %r6357, 1;
	shf.l.wrap.b32 	%r6360, %r6357, %r6358, 1;
	mov.b64 	%rd9080, {%r6360, %r6359};
	xor.b64  	%rd9081, %rd9067, %rd9080;
	xor.b64  	%rd9082, %rd9073, %rd9051;
	xor.b64  	%rd9083, %rd9075, %rd8980;
	xor.b64  	%rd9084, %rd9077, %rd8983;
	xor.b64  	%rd9085, %rd9079, %rd8986;
	xor.b64  	%rd9086, %rd9081, %rd8989;
	xor.b64  	%rd9087, %rd9073, %rd8992;
	xor.b64  	%rd9088, %rd9075, %rd8995;
	xor.b64  	%rd9089, %rd9077, %rd8998;
	xor.b64  	%rd9090, %rd9079, %rd9001;
	xor.b64  	%rd9091, %rd9081, %rd9004;
	xor.b64  	%rd9092, %rd9073, %rd9007;
	xor.b64  	%rd9093, %rd9075, %rd9010;
	xor.b64  	%rd9094, %rd9077, %rd9013;
	xor.b64  	%rd9095, %rd9079, %rd9016;
	xor.b64  	%rd9096, %rd9081, %rd9019;
	xor.b64  	%rd9097, %rd9073, %rd9022;
	xor.b64  	%rd9098, %rd9075, %rd9025;
	xor.b64  	%rd9099, %rd9077, %rd9028;
	xor.b64  	%rd9100, %rd9079, %rd9031;
	xor.b64  	%rd9101, %rd9081, %rd9034;
	xor.b64  	%rd9102, %rd9073, %rd9037;
	xor.b64  	%rd9103, %rd9075, %rd9040;
	xor.b64  	%rd9104, %rd9077, %rd9043;
	xor.b64  	%rd9105, %rd9079, %rd9046;
	xor.b64  	%rd9106, %rd9081, %rd9049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6361,%dummy}, %rd9088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6362}, %rd9088;
	}
	shf.r.wrap.b32 	%r6363, %r6362, %r6361, 20;
	shf.r.wrap.b32 	%r6364, %r6361, %r6362, 20;
	mov.b64 	%rd9107, {%r6364, %r6363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6365,%dummy}, %rd9094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6366}, %rd9094;
	}
	shf.r.wrap.b32 	%r6367, %r6366, %r6365, 21;
	shf.r.wrap.b32 	%r6368, %r6365, %r6366, 21;
	mov.b64 	%rd9108, {%r6368, %r6367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6369}, %rd9100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd9100;
	}
	shf.l.wrap.b32 	%r6371, %r6370, %r6369, 21;
	shf.l.wrap.b32 	%r6372, %r6369, %r6370, 21;
	mov.b64 	%rd9109, {%r6372, %r6371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6373}, %rd9106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6374,%dummy}, %rd9106;
	}
	shf.l.wrap.b32 	%r6375, %r6374, %r6373, 14;
	shf.l.wrap.b32 	%r6376, %r6373, %r6374, 14;
	mov.b64 	%rd9110, {%r6376, %r6375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6377}, %rd9085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd9085;
	}
	shf.l.wrap.b32 	%r6379, %r6378, %r6377, 28;
	shf.l.wrap.b32 	%r6380, %r6377, %r6378, 28;
	mov.b64 	%rd9111, {%r6380, %r6379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6381}, %rd9091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6382,%dummy}, %rd9091;
	}
	shf.l.wrap.b32 	%r6383, %r6382, %r6381, 20;
	shf.l.wrap.b32 	%r6384, %r6381, %r6382, 20;
	mov.b64 	%rd9112, {%r6384, %r6383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6385}, %rd9092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd9092;
	}
	shf.l.wrap.b32 	%r6387, %r6386, %r6385, 3;
	shf.l.wrap.b32 	%r6388, %r6385, %r6386, 3;
	mov.b64 	%rd9113, {%r6388, %r6387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6389,%dummy}, %rd9098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6390}, %rd9098;
	}
	shf.r.wrap.b32 	%r6391, %r6390, %r6389, 19;
	shf.r.wrap.b32 	%r6392, %r6389, %r6390, 19;
	mov.b64 	%rd9114, {%r6392, %r6391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6393,%dummy}, %rd9104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6394}, %rd9104;
	}
	shf.r.wrap.b32 	%r6395, %r6394, %r6393, 3;
	shf.r.wrap.b32 	%r6396, %r6393, %r6394, 3;
	mov.b64 	%rd9115, {%r6396, %r6395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6397}, %rd9083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6398,%dummy}, %rd9083;
	}
	shf.l.wrap.b32 	%r6399, %r6398, %r6397, 1;
	shf.l.wrap.b32 	%r6400, %r6397, %r6398, 1;
	mov.b64 	%rd9116, {%r6400, %r6399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6401}, %rd9089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd9089;
	}
	shf.l.wrap.b32 	%r6403, %r6402, %r6401, 6;
	shf.l.wrap.b32 	%r6404, %r6401, %r6402, 6;
	mov.b64 	%rd9117, {%r6404, %r6403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6405}, %rd9095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6406,%dummy}, %rd9095;
	}
	shf.l.wrap.b32 	%r6407, %r6406, %r6405, 25;
	shf.l.wrap.b32 	%r6408, %r6405, %r6406, 25;
	mov.b64 	%rd9118, {%r6408, %r6407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6409}, %rd9101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6410,%dummy}, %rd9101;
	}
	shf.l.wrap.b32 	%r6411, %r6410, %r6409, 8;
	shf.l.wrap.b32 	%r6412, %r6409, %r6410, 8;
	mov.b64 	%rd9119, {%r6412, %r6411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6413}, %rd9102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6414,%dummy}, %rd9102;
	}
	shf.l.wrap.b32 	%r6415, %r6414, %r6413, 18;
	shf.l.wrap.b32 	%r6416, %r6413, %r6414, 18;
	mov.b64 	%rd9120, {%r6416, %r6415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6417}, %rd9086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6418,%dummy}, %rd9086;
	}
	shf.l.wrap.b32 	%r6419, %r6418, %r6417, 27;
	shf.l.wrap.b32 	%r6420, %r6417, %r6418, 27;
	mov.b64 	%rd9121, {%r6420, %r6419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6421,%dummy}, %rd9087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6422}, %rd9087;
	}
	shf.r.wrap.b32 	%r6423, %r6422, %r6421, 28;
	shf.r.wrap.b32 	%r6424, %r6421, %r6422, 28;
	mov.b64 	%rd9122, {%r6424, %r6423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6425}, %rd9093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd9093;
	}
	shf.l.wrap.b32 	%r6427, %r6426, %r6425, 10;
	shf.l.wrap.b32 	%r6428, %r6425, %r6426, 10;
	mov.b64 	%rd9123, {%r6428, %r6427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6429}, %rd9099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6430,%dummy}, %rd9099;
	}
	shf.l.wrap.b32 	%r6431, %r6430, %r6429, 15;
	shf.l.wrap.b32 	%r6432, %r6429, %r6430, 15;
	mov.b64 	%rd9124, {%r6432, %r6431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6433,%dummy}, %rd9105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6434}, %rd9105;
	}
	shf.r.wrap.b32 	%r6435, %r6434, %r6433, 8;
	shf.r.wrap.b32 	%r6436, %r6433, %r6434, 8;
	mov.b64 	%rd9125, {%r6436, %r6435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6437,%dummy}, %rd9084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6438}, %rd9084;
	}
	shf.r.wrap.b32 	%r6439, %r6438, %r6437, 2;
	shf.r.wrap.b32 	%r6440, %r6437, %r6438, 2;
	mov.b64 	%rd9126, {%r6440, %r6439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6441,%dummy}, %rd9090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6442}, %rd9090;
	}
	shf.r.wrap.b32 	%r6443, %r6442, %r6441, 9;
	shf.r.wrap.b32 	%r6444, %r6441, %r6442, 9;
	mov.b64 	%rd9127, {%r6444, %r6443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6445,%dummy}, %rd9096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6446}, %rd9096;
	}
	shf.r.wrap.b32 	%r6447, %r6446, %r6445, 25;
	shf.r.wrap.b32 	%r6448, %r6445, %r6446, 25;
	mov.b64 	%rd9128, {%r6448, %r6447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6449,%dummy}, %rd9097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6450}, %rd9097;
	}
	shf.r.wrap.b32 	%r6451, %r6450, %r6449, 23;
	shf.r.wrap.b32 	%r6452, %r6449, %r6450, 23;
	mov.b64 	%rd9129, {%r6452, %r6451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6453}, %rd9103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6454,%dummy}, %rd9103;
	}
	shf.l.wrap.b32 	%r6455, %r6454, %r6453, 2;
	shf.l.wrap.b32 	%r6456, %r6453, %r6454, 2;
	mov.b64 	%rd9130, {%r6456, %r6455};
	not.b64 	%rd9131, %rd9107;
	and.b64  	%rd9132, %rd9108, %rd9131;
	xor.b64  	%rd9133, %rd9132, %rd9082;
	not.b64 	%rd9134, %rd9108;
	and.b64  	%rd9135, %rd9109, %rd9134;
	xor.b64  	%rd9136, %rd9135, %rd9107;
	not.b64 	%rd9137, %rd9109;
	and.b64  	%rd9138, %rd9110, %rd9137;
	xor.b64  	%rd9139, %rd9138, %rd9108;
	not.b64 	%rd9140, %rd9110;
	and.b64  	%rd9141, %rd9082, %rd9140;
	xor.b64  	%rd9142, %rd9141, %rd9109;
	not.b64 	%rd9143, %rd9082;
	and.b64  	%rd9144, %rd9107, %rd9143;
	xor.b64  	%rd9145, %rd9144, %rd9110;
	not.b64 	%rd9146, %rd9112;
	and.b64  	%rd9147, %rd9113, %rd9146;
	xor.b64  	%rd9148, %rd9147, %rd9111;
	not.b64 	%rd9149, %rd9113;
	and.b64  	%rd9150, %rd9114, %rd9149;
	xor.b64  	%rd9151, %rd9150, %rd9112;
	not.b64 	%rd9152, %rd9114;
	and.b64  	%rd9153, %rd9115, %rd9152;
	xor.b64  	%rd9154, %rd9153, %rd9113;
	not.b64 	%rd9155, %rd9115;
	and.b64  	%rd9156, %rd9111, %rd9155;
	xor.b64  	%rd9157, %rd9156, %rd9114;
	not.b64 	%rd9158, %rd9111;
	and.b64  	%rd9159, %rd9112, %rd9158;
	xor.b64  	%rd9160, %rd9159, %rd9115;
	not.b64 	%rd9161, %rd9117;
	and.b64  	%rd9162, %rd9118, %rd9161;
	xor.b64  	%rd9163, %rd9162, %rd9116;
	not.b64 	%rd9164, %rd9118;
	and.b64  	%rd9165, %rd9119, %rd9164;
	xor.b64  	%rd9166, %rd9165, %rd9117;
	not.b64 	%rd9167, %rd9119;
	and.b64  	%rd9168, %rd9120, %rd9167;
	xor.b64  	%rd9169, %rd9168, %rd9118;
	not.b64 	%rd9170, %rd9120;
	and.b64  	%rd9171, %rd9116, %rd9170;
	xor.b64  	%rd9172, %rd9171, %rd9119;
	not.b64 	%rd9173, %rd9116;
	and.b64  	%rd9174, %rd9117, %rd9173;
	xor.b64  	%rd9175, %rd9174, %rd9120;
	not.b64 	%rd9176, %rd9122;
	and.b64  	%rd9177, %rd9123, %rd9176;
	xor.b64  	%rd9178, %rd9177, %rd9121;
	not.b64 	%rd9179, %rd9123;
	and.b64  	%rd9180, %rd9124, %rd9179;
	xor.b64  	%rd9181, %rd9180, %rd9122;
	not.b64 	%rd9182, %rd9124;
	and.b64  	%rd9183, %rd9125, %rd9182;
	xor.b64  	%rd9184, %rd9183, %rd9123;
	not.b64 	%rd9185, %rd9125;
	and.b64  	%rd9186, %rd9121, %rd9185;
	xor.b64  	%rd9187, %rd9186, %rd9124;
	not.b64 	%rd9188, %rd9121;
	and.b64  	%rd9189, %rd9122, %rd9188;
	xor.b64  	%rd9190, %rd9189, %rd9125;
	not.b64 	%rd9191, %rd9127;
	and.b64  	%rd9192, %rd9128, %rd9191;
	xor.b64  	%rd9193, %rd9192, %rd9126;
	not.b64 	%rd9194, %rd9128;
	and.b64  	%rd9195, %rd9129, %rd9194;
	xor.b64  	%rd9196, %rd9195, %rd9127;
	not.b64 	%rd9197, %rd9129;
	and.b64  	%rd9198, %rd9130, %rd9197;
	xor.b64  	%rd9199, %rd9198, %rd9128;
	not.b64 	%rd9200, %rd9130;
	and.b64  	%rd9201, %rd9126, %rd9200;
	xor.b64  	%rd9202, %rd9201, %rd9129;
	not.b64 	%rd9203, %rd9126;
	and.b64  	%rd9204, %rd9127, %rd9203;
	xor.b64  	%rd9205, %rd9204, %rd9130;
	xor.b64  	%rd9207, %rd9133, %rd22;
	xor.b64  	%rd9208, %rd9148, %rd9207;
	xor.b64  	%rd9209, %rd9208, %rd9163;
	xor.b64  	%rd9210, %rd9209, %rd9178;
	xor.b64  	%rd9211, %rd9210, %rd9193;
	xor.b64  	%rd9212, %rd9151, %rd9136;
	xor.b64  	%rd9213, %rd9212, %rd9166;
	xor.b64  	%rd9214, %rd9213, %rd9181;
	xor.b64  	%rd9215, %rd9214, %rd9196;
	xor.b64  	%rd9216, %rd9154, %rd9139;
	xor.b64  	%rd9217, %rd9216, %rd9169;
	xor.b64  	%rd9218, %rd9217, %rd9184;
	xor.b64  	%rd9219, %rd9218, %rd9199;
	xor.b64  	%rd9220, %rd9157, %rd9142;
	xor.b64  	%rd9221, %rd9220, %rd9172;
	xor.b64  	%rd9222, %rd9221, %rd9187;
	xor.b64  	%rd9223, %rd9222, %rd9202;
	xor.b64  	%rd9224, %rd9160, %rd9145;
	xor.b64  	%rd9225, %rd9224, %rd9175;
	xor.b64  	%rd9226, %rd9225, %rd9190;
	xor.b64  	%rd9227, %rd9226, %rd9205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6457}, %rd9215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd9215;
	}
	shf.l.wrap.b32 	%r6459, %r6458, %r6457, 1;
	shf.l.wrap.b32 	%r6460, %r6457, %r6458, 1;
	mov.b64 	%rd9228, {%r6460, %r6459};
	xor.b64  	%rd9229, %rd9227, %rd9228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6461}, %rd9219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6462,%dummy}, %rd9219;
	}
	shf.l.wrap.b32 	%r6463, %r6462, %r6461, 1;
	shf.l.wrap.b32 	%r6464, %r6461, %r6462, 1;
	mov.b64 	%rd9230, {%r6464, %r6463};
	xor.b64  	%rd9231, %rd9230, %rd9211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6465}, %rd9223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd9223;
	}
	shf.l.wrap.b32 	%r6467, %r6466, %r6465, 1;
	shf.l.wrap.b32 	%r6468, %r6465, %r6466, 1;
	mov.b64 	%rd9232, {%r6468, %r6467};
	xor.b64  	%rd9233, %rd9232, %rd9215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6469}, %rd9227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6470,%dummy}, %rd9227;
	}
	shf.l.wrap.b32 	%r6471, %r6470, %r6469, 1;
	shf.l.wrap.b32 	%r6472, %r6469, %r6470, 1;
	mov.b64 	%rd9234, {%r6472, %r6471};
	xor.b64  	%rd9235, %rd9234, %rd9219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6473}, %rd9211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd9211;
	}
	shf.l.wrap.b32 	%r6475, %r6474, %r6473, 1;
	shf.l.wrap.b32 	%r6476, %r6473, %r6474, 1;
	mov.b64 	%rd9236, {%r6476, %r6475};
	xor.b64  	%rd9237, %rd9223, %rd9236;
	xor.b64  	%rd9238, %rd9229, %rd9207;
	xor.b64  	%rd9239, %rd9231, %rd9136;
	xor.b64  	%rd9240, %rd9233, %rd9139;
	xor.b64  	%rd9241, %rd9235, %rd9142;
	xor.b64  	%rd9242, %rd9237, %rd9145;
	xor.b64  	%rd9243, %rd9229, %rd9148;
	xor.b64  	%rd9244, %rd9231, %rd9151;
	xor.b64  	%rd9245, %rd9233, %rd9154;
	xor.b64  	%rd9246, %rd9235, %rd9157;
	xor.b64  	%rd9247, %rd9237, %rd9160;
	xor.b64  	%rd9248, %rd9229, %rd9163;
	xor.b64  	%rd9249, %rd9231, %rd9166;
	xor.b64  	%rd9250, %rd9233, %rd9169;
	xor.b64  	%rd9251, %rd9235, %rd9172;
	xor.b64  	%rd9252, %rd9237, %rd9175;
	xor.b64  	%rd9253, %rd9229, %rd9178;
	xor.b64  	%rd9254, %rd9231, %rd9181;
	xor.b64  	%rd9255, %rd9233, %rd9184;
	xor.b64  	%rd9256, %rd9235, %rd9187;
	xor.b64  	%rd9257, %rd9237, %rd9190;
	xor.b64  	%rd9258, %rd9229, %rd9193;
	xor.b64  	%rd9259, %rd9231, %rd9196;
	xor.b64  	%rd9260, %rd9233, %rd9199;
	xor.b64  	%rd9261, %rd9235, %rd9202;
	xor.b64  	%rd9262, %rd9237, %rd9205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6477,%dummy}, %rd9244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6478}, %rd9244;
	}
	shf.r.wrap.b32 	%r6479, %r6478, %r6477, 20;
	shf.r.wrap.b32 	%r6480, %r6477, %r6478, 20;
	mov.b64 	%rd9263, {%r6480, %r6479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6481,%dummy}, %rd9250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6482}, %rd9250;
	}
	shf.r.wrap.b32 	%r6483, %r6482, %r6481, 21;
	shf.r.wrap.b32 	%r6484, %r6481, %r6482, 21;
	mov.b64 	%rd9264, {%r6484, %r6483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6485}, %rd9256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6486,%dummy}, %rd9256;
	}
	shf.l.wrap.b32 	%r6487, %r6486, %r6485, 21;
	shf.l.wrap.b32 	%r6488, %r6485, %r6486, 21;
	mov.b64 	%rd9265, {%r6488, %r6487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6489}, %rd9262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd9262;
	}
	shf.l.wrap.b32 	%r6491, %r6490, %r6489, 14;
	shf.l.wrap.b32 	%r6492, %r6489, %r6490, 14;
	mov.b64 	%rd9266, {%r6492, %r6491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6493}, %rd9241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6494,%dummy}, %rd9241;
	}
	shf.l.wrap.b32 	%r6495, %r6494, %r6493, 28;
	shf.l.wrap.b32 	%r6496, %r6493, %r6494, 28;
	mov.b64 	%rd9267, {%r6496, %r6495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6497}, %rd9247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd9247;
	}
	shf.l.wrap.b32 	%r6499, %r6498, %r6497, 20;
	shf.l.wrap.b32 	%r6500, %r6497, %r6498, 20;
	mov.b64 	%rd9268, {%r6500, %r6499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6501}, %rd9248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6502,%dummy}, %rd9248;
	}
	shf.l.wrap.b32 	%r6503, %r6502, %r6501, 3;
	shf.l.wrap.b32 	%r6504, %r6501, %r6502, 3;
	mov.b64 	%rd9269, {%r6504, %r6503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6505,%dummy}, %rd9254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6506}, %rd9254;
	}
	shf.r.wrap.b32 	%r6507, %r6506, %r6505, 19;
	shf.r.wrap.b32 	%r6508, %r6505, %r6506, 19;
	mov.b64 	%rd9270, {%r6508, %r6507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6509,%dummy}, %rd9260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6510}, %rd9260;
	}
	shf.r.wrap.b32 	%r6511, %r6510, %r6509, 3;
	shf.r.wrap.b32 	%r6512, %r6509, %r6510, 3;
	mov.b64 	%rd9271, {%r6512, %r6511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6513}, %rd9239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd9239;
	}
	shf.l.wrap.b32 	%r6515, %r6514, %r6513, 1;
	shf.l.wrap.b32 	%r6516, %r6513, %r6514, 1;
	mov.b64 	%rd9272, {%r6516, %r6515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6517}, %rd9245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6518,%dummy}, %rd9245;
	}
	shf.l.wrap.b32 	%r6519, %r6518, %r6517, 6;
	shf.l.wrap.b32 	%r6520, %r6517, %r6518, 6;
	mov.b64 	%rd9273, {%r6520, %r6519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6521}, %rd9251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd9251;
	}
	shf.l.wrap.b32 	%r6523, %r6522, %r6521, 25;
	shf.l.wrap.b32 	%r6524, %r6521, %r6522, 25;
	mov.b64 	%rd9274, {%r6524, %r6523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6525}, %rd9257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6526,%dummy}, %rd9257;
	}
	shf.l.wrap.b32 	%r6527, %r6526, %r6525, 8;
	shf.l.wrap.b32 	%r6528, %r6525, %r6526, 8;
	mov.b64 	%rd9275, {%r6528, %r6527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6529}, %rd9258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd9258;
	}
	shf.l.wrap.b32 	%r6531, %r6530, %r6529, 18;
	shf.l.wrap.b32 	%r6532, %r6529, %r6530, 18;
	mov.b64 	%rd9276, {%r6532, %r6531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6533}, %rd9242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6534,%dummy}, %rd9242;
	}
	shf.l.wrap.b32 	%r6535, %r6534, %r6533, 27;
	shf.l.wrap.b32 	%r6536, %r6533, %r6534, 27;
	mov.b64 	%rd9277, {%r6536, %r6535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6537,%dummy}, %rd9243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6538}, %rd9243;
	}
	shf.r.wrap.b32 	%r6539, %r6538, %r6537, 28;
	shf.r.wrap.b32 	%r6540, %r6537, %r6538, 28;
	mov.b64 	%rd9278, {%r6540, %r6539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6541}, %rd9249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6542,%dummy}, %rd9249;
	}
	shf.l.wrap.b32 	%r6543, %r6542, %r6541, 10;
	shf.l.wrap.b32 	%r6544, %r6541, %r6542, 10;
	mov.b64 	%rd9279, {%r6544, %r6543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6545}, %rd9255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd9255;
	}
	shf.l.wrap.b32 	%r6547, %r6546, %r6545, 15;
	shf.l.wrap.b32 	%r6548, %r6545, %r6546, 15;
	mov.b64 	%rd9280, {%r6548, %r6547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6549,%dummy}, %rd9261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6550}, %rd9261;
	}
	shf.r.wrap.b32 	%r6551, %r6550, %r6549, 8;
	shf.r.wrap.b32 	%r6552, %r6549, %r6550, 8;
	mov.b64 	%rd9281, {%r6552, %r6551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6553,%dummy}, %rd9240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6554}, %rd9240;
	}
	shf.r.wrap.b32 	%r6555, %r6554, %r6553, 2;
	shf.r.wrap.b32 	%r6556, %r6553, %r6554, 2;
	mov.b64 	%rd9282, {%r6556, %r6555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6557,%dummy}, %rd9246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6558}, %rd9246;
	}
	shf.r.wrap.b32 	%r6559, %r6558, %r6557, 9;
	shf.r.wrap.b32 	%r6560, %r6557, %r6558, 9;
	mov.b64 	%rd9283, {%r6560, %r6559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6561,%dummy}, %rd9252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6562}, %rd9252;
	}
	shf.r.wrap.b32 	%r6563, %r6562, %r6561, 25;
	shf.r.wrap.b32 	%r6564, %r6561, %r6562, 25;
	mov.b64 	%rd9284, {%r6564, %r6563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6565,%dummy}, %rd9253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6566}, %rd9253;
	}
	shf.r.wrap.b32 	%r6567, %r6566, %r6565, 23;
	shf.r.wrap.b32 	%r6568, %r6565, %r6566, 23;
	mov.b64 	%rd9285, {%r6568, %r6567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6569}, %rd9259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd9259;
	}
	shf.l.wrap.b32 	%r6571, %r6570, %r6569, 2;
	shf.l.wrap.b32 	%r6572, %r6569, %r6570, 2;
	mov.b64 	%rd9286, {%r6572, %r6571};
	not.b64 	%rd9287, %rd9263;
	and.b64  	%rd9288, %rd9264, %rd9287;
	xor.b64  	%rd9289, %rd9288, %rd9238;
	not.b64 	%rd9290, %rd9264;
	and.b64  	%rd9291, %rd9265, %rd9290;
	xor.b64  	%rd9292, %rd9291, %rd9263;
	not.b64 	%rd9293, %rd9265;
	and.b64  	%rd9294, %rd9266, %rd9293;
	xor.b64  	%rd9295, %rd9294, %rd9264;
	not.b64 	%rd9296, %rd9266;
	and.b64  	%rd9297, %rd9238, %rd9296;
	xor.b64  	%rd9298, %rd9297, %rd9265;
	not.b64 	%rd9299, %rd9238;
	and.b64  	%rd9300, %rd9263, %rd9299;
	xor.b64  	%rd9301, %rd9300, %rd9266;
	not.b64 	%rd9302, %rd9268;
	and.b64  	%rd9303, %rd9269, %rd9302;
	xor.b64  	%rd9304, %rd9303, %rd9267;
	not.b64 	%rd9305, %rd9269;
	and.b64  	%rd9306, %rd9270, %rd9305;
	xor.b64  	%rd9307, %rd9306, %rd9268;
	not.b64 	%rd9308, %rd9270;
	and.b64  	%rd9309, %rd9271, %rd9308;
	xor.b64  	%rd9310, %rd9309, %rd9269;
	not.b64 	%rd9311, %rd9271;
	and.b64  	%rd9312, %rd9267, %rd9311;
	xor.b64  	%rd9313, %rd9312, %rd9270;
	not.b64 	%rd9314, %rd9267;
	and.b64  	%rd9315, %rd9268, %rd9314;
	xor.b64  	%rd9316, %rd9315, %rd9271;
	not.b64 	%rd9317, %rd9273;
	and.b64  	%rd9318, %rd9274, %rd9317;
	xor.b64  	%rd9319, %rd9318, %rd9272;
	not.b64 	%rd9320, %rd9274;
	and.b64  	%rd9321, %rd9275, %rd9320;
	xor.b64  	%rd9322, %rd9321, %rd9273;
	not.b64 	%rd9323, %rd9275;
	and.b64  	%rd9324, %rd9276, %rd9323;
	xor.b64  	%rd9325, %rd9324, %rd9274;
	not.b64 	%rd9326, %rd9276;
	and.b64  	%rd9327, %rd9272, %rd9326;
	xor.b64  	%rd9328, %rd9327, %rd9275;
	not.b64 	%rd9329, %rd9272;
	and.b64  	%rd9330, %rd9273, %rd9329;
	xor.b64  	%rd9331, %rd9330, %rd9276;
	not.b64 	%rd9332, %rd9278;
	and.b64  	%rd9333, %rd9279, %rd9332;
	xor.b64  	%rd9334, %rd9333, %rd9277;
	not.b64 	%rd9335, %rd9279;
	and.b64  	%rd9336, %rd9280, %rd9335;
	xor.b64  	%rd9337, %rd9336, %rd9278;
	not.b64 	%rd9338, %rd9280;
	and.b64  	%rd9339, %rd9281, %rd9338;
	xor.b64  	%rd9340, %rd9339, %rd9279;
	not.b64 	%rd9341, %rd9281;
	and.b64  	%rd9342, %rd9277, %rd9341;
	xor.b64  	%rd9343, %rd9342, %rd9280;
	not.b64 	%rd9344, %rd9277;
	and.b64  	%rd9345, %rd9278, %rd9344;
	xor.b64  	%rd9346, %rd9345, %rd9281;
	not.b64 	%rd9347, %rd9283;
	and.b64  	%rd9348, %rd9284, %rd9347;
	xor.b64  	%rd9349, %rd9348, %rd9282;
	not.b64 	%rd9350, %rd9284;
	and.b64  	%rd9351, %rd9285, %rd9350;
	xor.b64  	%rd9352, %rd9351, %rd9283;
	not.b64 	%rd9353, %rd9285;
	and.b64  	%rd9354, %rd9286, %rd9353;
	xor.b64  	%rd9355, %rd9354, %rd9284;
	not.b64 	%rd9356, %rd9286;
	and.b64  	%rd9357, %rd9282, %rd9356;
	xor.b64  	%rd9358, %rd9357, %rd9285;
	not.b64 	%rd9359, %rd9282;
	and.b64  	%rd9360, %rd9283, %rd9359;
	xor.b64  	%rd9361, %rd9360, %rd9286;
	xor.b64  	%rd9363, %rd9289, %rd23;
	xor.b64  	%rd9364, %rd9304, %rd9363;
	xor.b64  	%rd9365, %rd9364, %rd9319;
	xor.b64  	%rd9366, %rd9365, %rd9334;
	xor.b64  	%rd9367, %rd9366, %rd9349;
	xor.b64  	%rd9368, %rd9307, %rd9292;
	xor.b64  	%rd9369, %rd9368, %rd9322;
	xor.b64  	%rd9370, %rd9369, %rd9337;
	xor.b64  	%rd9371, %rd9370, %rd9352;
	xor.b64  	%rd9372, %rd9310, %rd9295;
	xor.b64  	%rd9373, %rd9372, %rd9325;
	xor.b64  	%rd9374, %rd9373, %rd9340;
	xor.b64  	%rd9375, %rd9374, %rd9355;
	xor.b64  	%rd9376, %rd9313, %rd9298;
	xor.b64  	%rd9377, %rd9376, %rd9328;
	xor.b64  	%rd9378, %rd9377, %rd9343;
	xor.b64  	%rd9379, %rd9378, %rd9358;
	xor.b64  	%rd9380, %rd9316, %rd9301;
	xor.b64  	%rd9381, %rd9380, %rd9331;
	xor.b64  	%rd9382, %rd9381, %rd9346;
	xor.b64  	%rd9383, %rd9382, %rd9361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6573}, %rd9371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6574,%dummy}, %rd9371;
	}
	shf.l.wrap.b32 	%r6575, %r6574, %r6573, 1;
	shf.l.wrap.b32 	%r6576, %r6573, %r6574, 1;
	mov.b64 	%rd9384, {%r6576, %r6575};
	xor.b64  	%rd9385, %rd9383, %rd9384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6577}, %rd9375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd9375;
	}
	shf.l.wrap.b32 	%r6579, %r6578, %r6577, 1;
	shf.l.wrap.b32 	%r6580, %r6577, %r6578, 1;
	mov.b64 	%rd9386, {%r6580, %r6579};
	xor.b64  	%rd9387, %rd9386, %rd9367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6581}, %rd9379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6582,%dummy}, %rd9379;
	}
	shf.l.wrap.b32 	%r6583, %r6582, %r6581, 1;
	shf.l.wrap.b32 	%r6584, %r6581, %r6582, 1;
	mov.b64 	%rd9388, {%r6584, %r6583};
	xor.b64  	%rd9389, %rd9388, %rd9371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6585}, %rd9383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd9383;
	}
	shf.l.wrap.b32 	%r6587, %r6586, %r6585, 1;
	shf.l.wrap.b32 	%r6588, %r6585, %r6586, 1;
	mov.b64 	%rd9390, {%r6588, %r6587};
	xor.b64  	%rd9391, %rd9390, %rd9375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6589}, %rd9367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6590,%dummy}, %rd9367;
	}
	shf.l.wrap.b32 	%r6591, %r6590, %r6589, 1;
	shf.l.wrap.b32 	%r6592, %r6589, %r6590, 1;
	mov.b64 	%rd9392, {%r6592, %r6591};
	xor.b64  	%rd9393, %rd9379, %rd9392;
	xor.b64  	%rd9394, %rd9385, %rd9363;
	xor.b64  	%rd9395, %rd9387, %rd9292;
	xor.b64  	%rd9396, %rd9389, %rd9295;
	xor.b64  	%rd9397, %rd9391, %rd9298;
	xor.b64  	%rd9398, %rd9393, %rd9301;
	xor.b64  	%rd9399, %rd9385, %rd9304;
	xor.b64  	%rd9400, %rd9387, %rd9307;
	xor.b64  	%rd9401, %rd9389, %rd9310;
	xor.b64  	%rd9402, %rd9391, %rd9313;
	xor.b64  	%rd9403, %rd9393, %rd9316;
	xor.b64  	%rd9404, %rd9385, %rd9319;
	xor.b64  	%rd9405, %rd9387, %rd9322;
	xor.b64  	%rd9406, %rd9389, %rd9325;
	xor.b64  	%rd9407, %rd9391, %rd9328;
	xor.b64  	%rd9408, %rd9393, %rd9331;
	xor.b64  	%rd9409, %rd9385, %rd9334;
	xor.b64  	%rd9410, %rd9387, %rd9337;
	xor.b64  	%rd9411, %rd9389, %rd9340;
	xor.b64  	%rd9412, %rd9391, %rd9343;
	xor.b64  	%rd9413, %rd9393, %rd9346;
	xor.b64  	%rd9414, %rd9385, %rd9349;
	xor.b64  	%rd9415, %rd9387, %rd9352;
	xor.b64  	%rd9416, %rd9389, %rd9355;
	xor.b64  	%rd9417, %rd9391, %rd9358;
	xor.b64  	%rd9418, %rd9393, %rd9361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6593,%dummy}, %rd9400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6594}, %rd9400;
	}
	shf.r.wrap.b32 	%r6595, %r6594, %r6593, 20;
	shf.r.wrap.b32 	%r6596, %r6593, %r6594, 20;
	mov.b64 	%rd9419, {%r6596, %r6595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6597,%dummy}, %rd9406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6598}, %rd9406;
	}
	shf.r.wrap.b32 	%r6599, %r6598, %r6597, 21;
	shf.r.wrap.b32 	%r6600, %r6597, %r6598, 21;
	mov.b64 	%rd9420, {%r6600, %r6599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6601}, %rd9412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd9412;
	}
	shf.l.wrap.b32 	%r6603, %r6602, %r6601, 21;
	shf.l.wrap.b32 	%r6604, %r6601, %r6602, 21;
	mov.b64 	%rd9421, {%r6604, %r6603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6605}, %rd9418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6606,%dummy}, %rd9418;
	}
	shf.l.wrap.b32 	%r6607, %r6606, %r6605, 14;
	shf.l.wrap.b32 	%r6608, %r6605, %r6606, 14;
	mov.b64 	%rd9422, {%r6608, %r6607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6609}, %rd9397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6610,%dummy}, %rd9397;
	}
	shf.l.wrap.b32 	%r6611, %r6610, %r6609, 28;
	shf.l.wrap.b32 	%r6612, %r6609, %r6610, 28;
	mov.b64 	%rd9423, {%r6612, %r6611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd9403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6614,%dummy}, %rd9403;
	}
	shf.l.wrap.b32 	%r6615, %r6614, %r6613, 20;
	shf.l.wrap.b32 	%r6616, %r6613, %r6614, 20;
	mov.b64 	%rd9424, {%r6616, %r6615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6617}, %rd9404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6618,%dummy}, %rd9404;
	}
	shf.l.wrap.b32 	%r6619, %r6618, %r6617, 3;
	shf.l.wrap.b32 	%r6620, %r6617, %r6618, 3;
	mov.b64 	%rd9425, {%r6620, %r6619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6621,%dummy}, %rd9410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6622}, %rd9410;
	}
	shf.r.wrap.b32 	%r6623, %r6622, %r6621, 19;
	shf.r.wrap.b32 	%r6624, %r6621, %r6622, 19;
	mov.b64 	%rd9426, {%r6624, %r6623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6625,%dummy}, %rd9416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6626}, %rd9416;
	}
	shf.r.wrap.b32 	%r6627, %r6626, %r6625, 3;
	shf.r.wrap.b32 	%r6628, %r6625, %r6626, 3;
	mov.b64 	%rd9427, {%r6628, %r6627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6629}, %rd9395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6630,%dummy}, %rd9395;
	}
	shf.l.wrap.b32 	%r6631, %r6630, %r6629, 1;
	shf.l.wrap.b32 	%r6632, %r6629, %r6630, 1;
	mov.b64 	%rd9428, {%r6632, %r6631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd9401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6634,%dummy}, %rd9401;
	}
	shf.l.wrap.b32 	%r6635, %r6634, %r6633, 6;
	shf.l.wrap.b32 	%r6636, %r6633, %r6634, 6;
	mov.b64 	%rd9429, {%r6636, %r6635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6637}, %rd9407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6638,%dummy}, %rd9407;
	}
	shf.l.wrap.b32 	%r6639, %r6638, %r6637, 25;
	shf.l.wrap.b32 	%r6640, %r6637, %r6638, 25;
	mov.b64 	%rd9430, {%r6640, %r6639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6641}, %rd9413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd9413;
	}
	shf.l.wrap.b32 	%r6643, %r6642, %r6641, 8;
	shf.l.wrap.b32 	%r6644, %r6641, %r6642, 8;
	mov.b64 	%rd9431, {%r6644, %r6643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6645}, %rd9414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6646,%dummy}, %rd9414;
	}
	shf.l.wrap.b32 	%r6647, %r6646, %r6645, 18;
	shf.l.wrap.b32 	%r6648, %r6645, %r6646, 18;
	mov.b64 	%rd9432, {%r6648, %r6647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6649}, %rd9398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6650,%dummy}, %rd9398;
	}
	shf.l.wrap.b32 	%r6651, %r6650, %r6649, 27;
	shf.l.wrap.b32 	%r6652, %r6649, %r6650, 27;
	mov.b64 	%rd9433, {%r6652, %r6651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6653,%dummy}, %rd9399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6654}, %rd9399;
	}
	shf.r.wrap.b32 	%r6655, %r6654, %r6653, 28;
	shf.r.wrap.b32 	%r6656, %r6653, %r6654, 28;
	mov.b64 	%rd9434, {%r6656, %r6655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6657}, %rd9405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6658,%dummy}, %rd9405;
	}
	shf.l.wrap.b32 	%r6659, %r6658, %r6657, 10;
	shf.l.wrap.b32 	%r6660, %r6657, %r6658, 10;
	mov.b64 	%rd9435, {%r6660, %r6659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6661}, %rd9411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6662,%dummy}, %rd9411;
	}
	shf.l.wrap.b32 	%r6663, %r6662, %r6661, 15;
	shf.l.wrap.b32 	%r6664, %r6661, %r6662, 15;
	mov.b64 	%rd9436, {%r6664, %r6663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6665,%dummy}, %rd9417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6666}, %rd9417;
	}
	shf.r.wrap.b32 	%r6667, %r6666, %r6665, 8;
	shf.r.wrap.b32 	%r6668, %r6665, %r6666, 8;
	mov.b64 	%rd9437, {%r6668, %r6667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6669,%dummy}, %rd9396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6670}, %rd9396;
	}
	shf.r.wrap.b32 	%r6671, %r6670, %r6669, 2;
	shf.r.wrap.b32 	%r6672, %r6669, %r6670, 2;
	mov.b64 	%rd9438, {%r6672, %r6671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6673,%dummy}, %rd9402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6674}, %rd9402;
	}
	shf.r.wrap.b32 	%r6675, %r6674, %r6673, 9;
	shf.r.wrap.b32 	%r6676, %r6673, %r6674, 9;
	mov.b64 	%rd9439, {%r6676, %r6675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6677,%dummy}, %rd9408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6678}, %rd9408;
	}
	shf.r.wrap.b32 	%r6679, %r6678, %r6677, 25;
	shf.r.wrap.b32 	%r6680, %r6677, %r6678, 25;
	mov.b64 	%rd9440, {%r6680, %r6679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6681,%dummy}, %rd9409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6682}, %rd9409;
	}
	shf.r.wrap.b32 	%r6683, %r6682, %r6681, 23;
	shf.r.wrap.b32 	%r6684, %r6681, %r6682, 23;
	mov.b64 	%rd9441, {%r6684, %r6683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6685}, %rd9415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6686,%dummy}, %rd9415;
	}
	shf.l.wrap.b32 	%r6687, %r6686, %r6685, 2;
	shf.l.wrap.b32 	%r6688, %r6685, %r6686, 2;
	mov.b64 	%rd9442, {%r6688, %r6687};
	not.b64 	%rd9443, %rd9419;
	and.b64  	%rd9444, %rd9420, %rd9443;
	xor.b64  	%rd9445, %rd9444, %rd9394;
	not.b64 	%rd9446, %rd9420;
	and.b64  	%rd9447, %rd9421, %rd9446;
	xor.b64  	%rd9448, %rd9447, %rd9419;
	not.b64 	%rd9449, %rd9421;
	and.b64  	%rd9450, %rd9422, %rd9449;
	xor.b64  	%rd9451, %rd9450, %rd9420;
	not.b64 	%rd9452, %rd9422;
	and.b64  	%rd9453, %rd9394, %rd9452;
	xor.b64  	%rd9454, %rd9453, %rd9421;
	not.b64 	%rd9455, %rd9394;
	and.b64  	%rd9456, %rd9419, %rd9455;
	xor.b64  	%rd9457, %rd9456, %rd9422;
	not.b64 	%rd9458, %rd9424;
	and.b64  	%rd9459, %rd9425, %rd9458;
	xor.b64  	%rd9460, %rd9459, %rd9423;
	not.b64 	%rd9461, %rd9425;
	and.b64  	%rd9462, %rd9426, %rd9461;
	xor.b64  	%rd9463, %rd9462, %rd9424;
	not.b64 	%rd9464, %rd9426;
	and.b64  	%rd9465, %rd9427, %rd9464;
	xor.b64  	%rd9466, %rd9465, %rd9425;
	not.b64 	%rd9467, %rd9427;
	and.b64  	%rd9468, %rd9423, %rd9467;
	xor.b64  	%rd9469, %rd9468, %rd9426;
	not.b64 	%rd9470, %rd9423;
	and.b64  	%rd9471, %rd9424, %rd9470;
	xor.b64  	%rd9472, %rd9471, %rd9427;
	not.b64 	%rd9473, %rd9429;
	and.b64  	%rd9474, %rd9430, %rd9473;
	xor.b64  	%rd9475, %rd9474, %rd9428;
	not.b64 	%rd9476, %rd9430;
	and.b64  	%rd9477, %rd9431, %rd9476;
	xor.b64  	%rd9478, %rd9477, %rd9429;
	not.b64 	%rd9479, %rd9431;
	and.b64  	%rd9480, %rd9432, %rd9479;
	xor.b64  	%rd9481, %rd9480, %rd9430;
	not.b64 	%rd9482, %rd9432;
	and.b64  	%rd9483, %rd9428, %rd9482;
	xor.b64  	%rd9484, %rd9483, %rd9431;
	not.b64 	%rd9485, %rd9428;
	and.b64  	%rd9486, %rd9429, %rd9485;
	xor.b64  	%rd9487, %rd9486, %rd9432;
	not.b64 	%rd9488, %rd9434;
	and.b64  	%rd9489, %rd9435, %rd9488;
	xor.b64  	%rd9490, %rd9489, %rd9433;
	not.b64 	%rd9491, %rd9435;
	and.b64  	%rd9492, %rd9436, %rd9491;
	xor.b64  	%rd9493, %rd9492, %rd9434;
	not.b64 	%rd9494, %rd9436;
	and.b64  	%rd9495, %rd9437, %rd9494;
	xor.b64  	%rd9496, %rd9495, %rd9435;
	not.b64 	%rd9497, %rd9437;
	and.b64  	%rd9498, %rd9433, %rd9497;
	xor.b64  	%rd9499, %rd9498, %rd9436;
	not.b64 	%rd9500, %rd9433;
	and.b64  	%rd9501, %rd9434, %rd9500;
	xor.b64  	%rd9502, %rd9501, %rd9437;
	not.b64 	%rd9503, %rd9439;
	and.b64  	%rd9504, %rd9440, %rd9503;
	xor.b64  	%rd9505, %rd9504, %rd9438;
	not.b64 	%rd9506, %rd9440;
	and.b64  	%rd9507, %rd9441, %rd9506;
	xor.b64  	%rd9508, %rd9507, %rd9439;
	not.b64 	%rd9509, %rd9441;
	and.b64  	%rd9510, %rd9442, %rd9509;
	xor.b64  	%rd9511, %rd9510, %rd9440;
	not.b64 	%rd9512, %rd9442;
	and.b64  	%rd9513, %rd9438, %rd9512;
	xor.b64  	%rd9514, %rd9513, %rd9441;
	not.b64 	%rd9515, %rd9438;
	and.b64  	%rd9516, %rd9439, %rd9515;
	xor.b64  	%rd9517, %rd9516, %rd9442;
	xor.b64  	%rd9519, %rd9445, %rd24;
	xor.b64  	%rd9520, %rd9460, %rd9519;
	xor.b64  	%rd9521, %rd9520, %rd9475;
	xor.b64  	%rd9522, %rd9521, %rd9490;
	xor.b64  	%rd9523, %rd9522, %rd9505;
	xor.b64  	%rd9524, %rd9463, %rd9448;
	xor.b64  	%rd9525, %rd9524, %rd9478;
	xor.b64  	%rd9526, %rd9525, %rd9493;
	xor.b64  	%rd9527, %rd9526, %rd9508;
	xor.b64  	%rd9528, %rd9466, %rd9451;
	xor.b64  	%rd9529, %rd9528, %rd9481;
	xor.b64  	%rd9530, %rd9529, %rd9496;
	xor.b64  	%rd9531, %rd9530, %rd9511;
	xor.b64  	%rd9532, %rd9469, %rd9454;
	xor.b64  	%rd9533, %rd9532, %rd9484;
	xor.b64  	%rd9534, %rd9533, %rd9499;
	xor.b64  	%rd9535, %rd9534, %rd9514;
	xor.b64  	%rd9536, %rd9472, %rd9457;
	xor.b64  	%rd9537, %rd9536, %rd9487;
	xor.b64  	%rd9538, %rd9537, %rd9502;
	xor.b64  	%rd9539, %rd9538, %rd9517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6689}, %rd9527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6690,%dummy}, %rd9527;
	}
	shf.l.wrap.b32 	%r6691, %r6690, %r6689, 1;
	shf.l.wrap.b32 	%r6692, %r6689, %r6690, 1;
	mov.b64 	%rd9540, {%r6692, %r6691};
	xor.b64  	%rd9541, %rd9539, %rd9540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd9531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6694,%dummy}, %rd9531;
	}
	shf.l.wrap.b32 	%r6695, %r6694, %r6693, 1;
	shf.l.wrap.b32 	%r6696, %r6693, %r6694, 1;
	mov.b64 	%rd9542, {%r6696, %r6695};
	xor.b64  	%rd9543, %rd9542, %rd9523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6697}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6698,%dummy}, %rd9535;
	}
	shf.l.wrap.b32 	%r6699, %r6698, %r6697, 1;
	shf.l.wrap.b32 	%r6700, %r6697, %r6698, 1;
	mov.b64 	%rd9544, {%r6700, %r6699};
	xor.b64  	%rd9545, %rd9544, %rd9527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6701}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6702,%dummy}, %rd9539;
	}
	shf.l.wrap.b32 	%r6703, %r6702, %r6701, 1;
	shf.l.wrap.b32 	%r6704, %r6701, %r6702, 1;
	mov.b64 	%rd9546, {%r6704, %r6703};
	xor.b64  	%rd9547, %rd9546, %rd9531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6705}, %rd9523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6706,%dummy}, %rd9523;
	}
	shf.l.wrap.b32 	%r6707, %r6706, %r6705, 1;
	shf.l.wrap.b32 	%r6708, %r6705, %r6706, 1;
	mov.b64 	%rd9548, {%r6708, %r6707};
	xor.b64  	%rd9549, %rd9535, %rd9548;
	xor.b64  	%rd9550, %rd9541, %rd9519;
	xor.b64  	%rd9551, %rd9543, %rd9448;
	xor.b64  	%rd9552, %rd9545, %rd9451;
	xor.b64  	%rd9553, %rd9547, %rd9454;
	xor.b64  	%rd9554, %rd9549, %rd9457;
	xor.b64  	%rd9555, %rd9541, %rd9460;
	xor.b64  	%rd9556, %rd9543, %rd9463;
	xor.b64  	%rd9557, %rd9545, %rd9466;
	xor.b64  	%rd9558, %rd9547, %rd9469;
	xor.b64  	%rd9559, %rd9549, %rd9472;
	xor.b64  	%rd9560, %rd9541, %rd9475;
	xor.b64  	%rd9561, %rd9543, %rd9478;
	xor.b64  	%rd9562, %rd9545, %rd9481;
	xor.b64  	%rd9563, %rd9547, %rd9484;
	xor.b64  	%rd9564, %rd9549, %rd9487;
	xor.b64  	%rd9565, %rd9541, %rd9490;
	xor.b64  	%rd9566, %rd9543, %rd9493;
	xor.b64  	%rd9567, %rd9545, %rd9496;
	xor.b64  	%rd9568, %rd9547, %rd9499;
	xor.b64  	%rd9569, %rd9549, %rd9502;
	xor.b64  	%rd9570, %rd9541, %rd9505;
	xor.b64  	%rd9571, %rd9543, %rd9508;
	xor.b64  	%rd9572, %rd9545, %rd9511;
	xor.b64  	%rd9573, %rd9547, %rd9514;
	xor.b64  	%rd9574, %rd9549, %rd9517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6709,%dummy}, %rd9556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6710}, %rd9556;
	}
	shf.r.wrap.b32 	%r6711, %r6710, %r6709, 20;
	shf.r.wrap.b32 	%r6712, %r6709, %r6710, 20;
	mov.b64 	%rd9575, {%r6712, %r6711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6713,%dummy}, %rd9562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6714}, %rd9562;
	}
	shf.r.wrap.b32 	%r6715, %r6714, %r6713, 21;
	shf.r.wrap.b32 	%r6716, %r6713, %r6714, 21;
	mov.b64 	%rd9576, {%r6716, %r6715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6717}, %rd9568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6718,%dummy}, %rd9568;
	}
	shf.l.wrap.b32 	%r6719, %r6718, %r6717, 21;
	shf.l.wrap.b32 	%r6720, %r6717, %r6718, 21;
	mov.b64 	%rd9577, {%r6720, %r6719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6721}, %rd9574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd9574;
	}
	shf.l.wrap.b32 	%r6723, %r6722, %r6721, 14;
	shf.l.wrap.b32 	%r6724, %r6721, %r6722, 14;
	mov.b64 	%rd9578, {%r6724, %r6723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6725}, %rd9553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6726,%dummy}, %rd9553;
	}
	shf.l.wrap.b32 	%r6727, %r6726, %r6725, 28;
	shf.l.wrap.b32 	%r6728, %r6725, %r6726, 28;
	mov.b64 	%rd9579, {%r6728, %r6727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6729}, %rd9559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6730,%dummy}, %rd9559;
	}
	shf.l.wrap.b32 	%r6731, %r6730, %r6729, 20;
	shf.l.wrap.b32 	%r6732, %r6729, %r6730, 20;
	mov.b64 	%rd9580, {%r6732, %r6731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd9560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6734,%dummy}, %rd9560;
	}
	shf.l.wrap.b32 	%r6735, %r6734, %r6733, 3;
	shf.l.wrap.b32 	%r6736, %r6733, %r6734, 3;
	mov.b64 	%rd9581, {%r6736, %r6735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6737,%dummy}, %rd9566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6738}, %rd9566;
	}
	shf.r.wrap.b32 	%r6739, %r6738, %r6737, 19;
	shf.r.wrap.b32 	%r6740, %r6737, %r6738, 19;
	mov.b64 	%rd9582, {%r6740, %r6739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6741,%dummy}, %rd9572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6742}, %rd9572;
	}
	shf.r.wrap.b32 	%r6743, %r6742, %r6741, 3;
	shf.r.wrap.b32 	%r6744, %r6741, %r6742, 3;
	mov.b64 	%rd9583, {%r6744, %r6743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6745}, %rd9551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd9551;
	}
	shf.l.wrap.b32 	%r6747, %r6746, %r6745, 1;
	shf.l.wrap.b32 	%r6748, %r6745, %r6746, 1;
	mov.b64 	%rd9584, {%r6748, %r6747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6749}, %rd9557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6750,%dummy}, %rd9557;
	}
	shf.l.wrap.b32 	%r6751, %r6750, %r6749, 6;
	shf.l.wrap.b32 	%r6752, %r6749, %r6750, 6;
	mov.b64 	%rd9585, {%r6752, %r6751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6753}, %rd9563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6754,%dummy}, %rd9563;
	}
	shf.l.wrap.b32 	%r6755, %r6754, %r6753, 25;
	shf.l.wrap.b32 	%r6756, %r6753, %r6754, 25;
	mov.b64 	%rd9586, {%r6756, %r6755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6757}, %rd9569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6758,%dummy}, %rd9569;
	}
	shf.l.wrap.b32 	%r6759, %r6758, %r6757, 8;
	shf.l.wrap.b32 	%r6760, %r6757, %r6758, 8;
	mov.b64 	%rd9587, {%r6760, %r6759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6761}, %rd9570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd9570;
	}
	shf.l.wrap.b32 	%r6763, %r6762, %r6761, 18;
	shf.l.wrap.b32 	%r6764, %r6761, %r6762, 18;
	mov.b64 	%rd9588, {%r6764, %r6763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6765}, %rd9554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6766,%dummy}, %rd9554;
	}
	shf.l.wrap.b32 	%r6767, %r6766, %r6765, 27;
	shf.l.wrap.b32 	%r6768, %r6765, %r6766, 27;
	mov.b64 	%rd9589, {%r6768, %r6767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6769,%dummy}, %rd9555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6770}, %rd9555;
	}
	shf.r.wrap.b32 	%r6771, %r6770, %r6769, 28;
	shf.r.wrap.b32 	%r6772, %r6769, %r6770, 28;
	mov.b64 	%rd9590, {%r6772, %r6771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6773}, %rd9561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6774,%dummy}, %rd9561;
	}
	shf.l.wrap.b32 	%r6775, %r6774, %r6773, 10;
	shf.l.wrap.b32 	%r6776, %r6773, %r6774, 10;
	mov.b64 	%rd9591, {%r6776, %r6775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6777}, %rd9567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd9567;
	}
	shf.l.wrap.b32 	%r6779, %r6778, %r6777, 15;
	shf.l.wrap.b32 	%r6780, %r6777, %r6778, 15;
	mov.b64 	%rd9592, {%r6780, %r6779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6781,%dummy}, %rd9573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6782}, %rd9573;
	}
	shf.r.wrap.b32 	%r6783, %r6782, %r6781, 8;
	shf.r.wrap.b32 	%r6784, %r6781, %r6782, 8;
	mov.b64 	%rd9593, {%r6784, %r6783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6785,%dummy}, %rd9552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6786}, %rd9552;
	}
	shf.r.wrap.b32 	%r6787, %r6786, %r6785, 2;
	shf.r.wrap.b32 	%r6788, %r6785, %r6786, 2;
	mov.b64 	%rd9594, {%r6788, %r6787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6789,%dummy}, %rd9558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6790}, %rd9558;
	}
	shf.r.wrap.b32 	%r6791, %r6790, %r6789, 9;
	shf.r.wrap.b32 	%r6792, %r6789, %r6790, 9;
	mov.b64 	%rd9595, {%r6792, %r6791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6793,%dummy}, %rd9564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6794}, %rd9564;
	}
	shf.r.wrap.b32 	%r6795, %r6794, %r6793, 25;
	shf.r.wrap.b32 	%r6796, %r6793, %r6794, 25;
	mov.b64 	%rd9596, {%r6796, %r6795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6797,%dummy}, %rd9565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6798}, %rd9565;
	}
	shf.r.wrap.b32 	%r6799, %r6798, %r6797, 23;
	shf.r.wrap.b32 	%r6800, %r6797, %r6798, 23;
	mov.b64 	%rd9597, {%r6800, %r6799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6801}, %rd9571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd9571;
	}
	shf.l.wrap.b32 	%r6803, %r6802, %r6801, 2;
	shf.l.wrap.b32 	%r6804, %r6801, %r6802, 2;
	mov.b64 	%rd9598, {%r6804, %r6803};
	not.b64 	%rd9599, %rd9575;
	and.b64  	%rd9600, %rd9576, %rd9599;
	xor.b64  	%rd9601, %rd9600, %rd9550;
	not.b64 	%rd9602, %rd9576;
	and.b64  	%rd9603, %rd9577, %rd9602;
	xor.b64  	%rd9604, %rd9603, %rd9575;
	not.b64 	%rd9605, %rd9577;
	and.b64  	%rd9606, %rd9578, %rd9605;
	xor.b64  	%rd9607, %rd9606, %rd9576;
	not.b64 	%rd9608, %rd9578;
	and.b64  	%rd9609, %rd9550, %rd9608;
	xor.b64  	%rd9610, %rd9609, %rd9577;
	not.b64 	%rd9611, %rd9550;
	and.b64  	%rd9612, %rd9575, %rd9611;
	xor.b64  	%rd9613, %rd9612, %rd9578;
	not.b64 	%rd9614, %rd9580;
	and.b64  	%rd9615, %rd9581, %rd9614;
	xor.b64  	%rd9616, %rd9615, %rd9579;
	not.b64 	%rd9617, %rd9581;
	and.b64  	%rd9618, %rd9582, %rd9617;
	xor.b64  	%rd9619, %rd9618, %rd9580;
	not.b64 	%rd9620, %rd9582;
	and.b64  	%rd9621, %rd9583, %rd9620;
	xor.b64  	%rd9622, %rd9621, %rd9581;
	not.b64 	%rd9623, %rd9583;
	and.b64  	%rd9624, %rd9579, %rd9623;
	xor.b64  	%rd9625, %rd9624, %rd9582;
	not.b64 	%rd9626, %rd9579;
	and.b64  	%rd9627, %rd9580, %rd9626;
	xor.b64  	%rd9628, %rd9627, %rd9583;
	not.b64 	%rd9629, %rd9585;
	and.b64  	%rd9630, %rd9586, %rd9629;
	xor.b64  	%rd9631, %rd9630, %rd9584;
	not.b64 	%rd9632, %rd9586;
	and.b64  	%rd9633, %rd9587, %rd9632;
	xor.b64  	%rd9634, %rd9633, %rd9585;
	not.b64 	%rd9635, %rd9587;
	and.b64  	%rd9636, %rd9588, %rd9635;
	xor.b64  	%rd9637, %rd9636, %rd9586;
	not.b64 	%rd9638, %rd9588;
	and.b64  	%rd9639, %rd9584, %rd9638;
	xor.b64  	%rd9640, %rd9639, %rd9587;
	not.b64 	%rd9641, %rd9584;
	and.b64  	%rd9642, %rd9585, %rd9641;
	xor.b64  	%rd9643, %rd9642, %rd9588;
	not.b64 	%rd9644, %rd9590;
	and.b64  	%rd9645, %rd9591, %rd9644;
	xor.b64  	%rd9646, %rd9645, %rd9589;
	not.b64 	%rd9647, %rd9591;
	and.b64  	%rd9648, %rd9592, %rd9647;
	xor.b64  	%rd9649, %rd9648, %rd9590;
	not.b64 	%rd9650, %rd9592;
	and.b64  	%rd9651, %rd9593, %rd9650;
	xor.b64  	%rd9652, %rd9651, %rd9591;
	not.b64 	%rd9653, %rd9593;
	and.b64  	%rd9654, %rd9589, %rd9653;
	xor.b64  	%rd9655, %rd9654, %rd9592;
	not.b64 	%rd9656, %rd9589;
	and.b64  	%rd9657, %rd9590, %rd9656;
	xor.b64  	%rd9658, %rd9657, %rd9593;
	not.b64 	%rd9659, %rd9595;
	and.b64  	%rd9660, %rd9596, %rd9659;
	xor.b64  	%rd9661, %rd9660, %rd9594;
	not.b64 	%rd9662, %rd9596;
	and.b64  	%rd9663, %rd9597, %rd9662;
	xor.b64  	%rd9664, %rd9663, %rd9595;
	not.b64 	%rd9665, %rd9597;
	and.b64  	%rd9666, %rd9598, %rd9665;
	xor.b64  	%rd9667, %rd9666, %rd9596;
	not.b64 	%rd9668, %rd9598;
	and.b64  	%rd9669, %rd9594, %rd9668;
	xor.b64  	%rd9670, %rd9669, %rd9597;
	not.b64 	%rd9671, %rd9594;
	and.b64  	%rd9672, %rd9595, %rd9671;
	xor.b64  	%rd9673, %rd9672, %rd9598;
	xor.b64  	%rd9675, %rd9601, %rd25;
	xor.b64  	%rd9676, %rd9616, %rd9675;
	xor.b64  	%rd9677, %rd9676, %rd9631;
	xor.b64  	%rd9678, %rd9677, %rd9646;
	xor.b64  	%rd9679, %rd9678, %rd9661;
	xor.b64  	%rd9680, %rd9619, %rd9604;
	xor.b64  	%rd9681, %rd9680, %rd9634;
	xor.b64  	%rd9682, %rd9681, %rd9649;
	xor.b64  	%rd9683, %rd9682, %rd9664;
	xor.b64  	%rd9684, %rd9622, %rd9607;
	xor.b64  	%rd9685, %rd9684, %rd9637;
	xor.b64  	%rd9686, %rd9685, %rd9652;
	xor.b64  	%rd9687, %rd9686, %rd9667;
	xor.b64  	%rd9688, %rd9625, %rd9610;
	xor.b64  	%rd9689, %rd9688, %rd9640;
	xor.b64  	%rd9690, %rd9689, %rd9655;
	xor.b64  	%rd9691, %rd9690, %rd9670;
	xor.b64  	%rd9692, %rd9628, %rd9613;
	xor.b64  	%rd9693, %rd9692, %rd9643;
	xor.b64  	%rd9694, %rd9693, %rd9658;
	xor.b64  	%rd9695, %rd9694, %rd9673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6805}, %rd9683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6806,%dummy}, %rd9683;
	}
	shf.l.wrap.b32 	%r6807, %r6806, %r6805, 1;
	shf.l.wrap.b32 	%r6808, %r6805, %r6806, 1;
	mov.b64 	%rd9696, {%r6808, %r6807};
	xor.b64  	%rd9697, %rd9695, %rd9696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6809}, %rd9687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd9687;
	}
	shf.l.wrap.b32 	%r6811, %r6810, %r6809, 1;
	shf.l.wrap.b32 	%r6812, %r6809, %r6810, 1;
	mov.b64 	%rd9698, {%r6812, %r6811};
	xor.b64  	%rd9699, %rd9698, %rd9679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6813}, %rd9691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6814,%dummy}, %rd9691;
	}
	shf.l.wrap.b32 	%r6815, %r6814, %r6813, 1;
	shf.l.wrap.b32 	%r6816, %r6813, %r6814, 1;
	mov.b64 	%rd9700, {%r6816, %r6815};
	xor.b64  	%rd9701, %rd9700, %rd9683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6817}, %rd9695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd9695;
	}
	shf.l.wrap.b32 	%r6819, %r6818, %r6817, 1;
	shf.l.wrap.b32 	%r6820, %r6817, %r6818, 1;
	mov.b64 	%rd9702, {%r6820, %r6819};
	xor.b64  	%rd9703, %rd9702, %rd9687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6821}, %rd9679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6822,%dummy}, %rd9679;
	}
	shf.l.wrap.b32 	%r6823, %r6822, %r6821, 1;
	shf.l.wrap.b32 	%r6824, %r6821, %r6822, 1;
	mov.b64 	%rd9704, {%r6824, %r6823};
	xor.b64  	%rd9705, %rd9691, %rd9704;
	xor.b64  	%rd9706, %rd9697, %rd9675;
	xor.b64  	%rd9707, %rd9699, %rd9604;
	xor.b64  	%rd9708, %rd9701, %rd9607;
	xor.b64  	%rd9709, %rd9703, %rd9610;
	xor.b64  	%rd9710, %rd9705, %rd9613;
	xor.b64  	%rd9711, %rd9697, %rd9616;
	xor.b64  	%rd9712, %rd9699, %rd9619;
	xor.b64  	%rd9713, %rd9701, %rd9622;
	xor.b64  	%rd9714, %rd9703, %rd9625;
	xor.b64  	%rd9715, %rd9705, %rd9628;
	xor.b64  	%rd9716, %rd9697, %rd9631;
	xor.b64  	%rd9717, %rd9699, %rd9634;
	xor.b64  	%rd9718, %rd9701, %rd9637;
	xor.b64  	%rd9719, %rd9703, %rd9640;
	xor.b64  	%rd9720, %rd9705, %rd9643;
	xor.b64  	%rd9721, %rd9697, %rd9646;
	xor.b64  	%rd9722, %rd9699, %rd9649;
	xor.b64  	%rd9723, %rd9701, %rd9652;
	xor.b64  	%rd9724, %rd9703, %rd9655;
	xor.b64  	%rd9725, %rd9705, %rd9658;
	xor.b64  	%rd9726, %rd9697, %rd9661;
	xor.b64  	%rd9727, %rd9699, %rd9664;
	xor.b64  	%rd9728, %rd9701, %rd9667;
	xor.b64  	%rd9729, %rd9703, %rd9670;
	xor.b64  	%rd9730, %rd9705, %rd9673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6825,%dummy}, %rd9712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6826}, %rd9712;
	}
	shf.r.wrap.b32 	%r6827, %r6826, %r6825, 20;
	shf.r.wrap.b32 	%r6828, %r6825, %r6826, 20;
	mov.b64 	%rd9731, {%r6828, %r6827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6829,%dummy}, %rd9718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6830}, %rd9718;
	}
	shf.r.wrap.b32 	%r6831, %r6830, %r6829, 21;
	shf.r.wrap.b32 	%r6832, %r6829, %r6830, 21;
	mov.b64 	%rd9732, {%r6832, %r6831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6833}, %rd9724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd9724;
	}
	shf.l.wrap.b32 	%r6835, %r6834, %r6833, 21;
	shf.l.wrap.b32 	%r6836, %r6833, %r6834, 21;
	mov.b64 	%rd9733, {%r6836, %r6835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6837}, %rd9730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6838,%dummy}, %rd9730;
	}
	shf.l.wrap.b32 	%r6839, %r6838, %r6837, 14;
	shf.l.wrap.b32 	%r6840, %r6837, %r6838, 14;
	mov.b64 	%rd9734, {%r6840, %r6839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6841}, %rd9709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd9709;
	}
	shf.l.wrap.b32 	%r6843, %r6842, %r6841, 28;
	shf.l.wrap.b32 	%r6844, %r6841, %r6842, 28;
	mov.b64 	%rd9735, {%r6844, %r6843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6845}, %rd9715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6846,%dummy}, %rd9715;
	}
	shf.l.wrap.b32 	%r6847, %r6846, %r6845, 20;
	shf.l.wrap.b32 	%r6848, %r6845, %r6846, 20;
	mov.b64 	%rd9736, {%r6848, %r6847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6849}, %rd9716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd9716;
	}
	shf.l.wrap.b32 	%r6851, %r6850, %r6849, 3;
	shf.l.wrap.b32 	%r6852, %r6849, %r6850, 3;
	mov.b64 	%rd9737, {%r6852, %r6851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6853,%dummy}, %rd9722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6854}, %rd9722;
	}
	shf.r.wrap.b32 	%r6855, %r6854, %r6853, 19;
	shf.r.wrap.b32 	%r6856, %r6853, %r6854, 19;
	mov.b64 	%rd9738, {%r6856, %r6855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6857,%dummy}, %rd9728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6858}, %rd9728;
	}
	shf.r.wrap.b32 	%r6859, %r6858, %r6857, 3;
	shf.r.wrap.b32 	%r6860, %r6857, %r6858, 3;
	mov.b64 	%rd9739, {%r6860, %r6859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6861}, %rd9707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6862,%dummy}, %rd9707;
	}
	shf.l.wrap.b32 	%r6863, %r6862, %r6861, 1;
	shf.l.wrap.b32 	%r6864, %r6861, %r6862, 1;
	mov.b64 	%rd9740, {%r6864, %r6863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6865}, %rd9713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd9713;
	}
	shf.l.wrap.b32 	%r6867, %r6866, %r6865, 6;
	shf.l.wrap.b32 	%r6868, %r6865, %r6866, 6;
	mov.b64 	%rd9741, {%r6868, %r6867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6869}, %rd9719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6870,%dummy}, %rd9719;
	}
	shf.l.wrap.b32 	%r6871, %r6870, %r6869, 25;
	shf.l.wrap.b32 	%r6872, %r6869, %r6870, 25;
	mov.b64 	%rd9742, {%r6872, %r6871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6873}, %rd9725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd9725;
	}
	shf.l.wrap.b32 	%r6875, %r6874, %r6873, 8;
	shf.l.wrap.b32 	%r6876, %r6873, %r6874, 8;
	mov.b64 	%rd9743, {%r6876, %r6875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6877}, %rd9726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6878,%dummy}, %rd9726;
	}
	shf.l.wrap.b32 	%r6879, %r6878, %r6877, 18;
	shf.l.wrap.b32 	%r6880, %r6877, %r6878, 18;
	mov.b64 	%rd9744, {%r6880, %r6879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6881}, %rd9710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd9710;
	}
	shf.l.wrap.b32 	%r6883, %r6882, %r6881, 27;
	shf.l.wrap.b32 	%r6884, %r6881, %r6882, 27;
	mov.b64 	%rd9745, {%r6884, %r6883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6885,%dummy}, %rd9711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6886}, %rd9711;
	}
	shf.r.wrap.b32 	%r6887, %r6886, %r6885, 28;
	shf.r.wrap.b32 	%r6888, %r6885, %r6886, 28;
	mov.b64 	%rd9746, {%r6888, %r6887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6889}, %rd9717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd9717;
	}
	shf.l.wrap.b32 	%r6891, %r6890, %r6889, 10;
	shf.l.wrap.b32 	%r6892, %r6889, %r6890, 10;
	mov.b64 	%rd9747, {%r6892, %r6891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6893}, %rd9723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6894,%dummy}, %rd9723;
	}
	shf.l.wrap.b32 	%r6895, %r6894, %r6893, 15;
	shf.l.wrap.b32 	%r6896, %r6893, %r6894, 15;
	mov.b64 	%rd9748, {%r6896, %r6895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6897,%dummy}, %rd9729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6898}, %rd9729;
	}
	shf.r.wrap.b32 	%r6899, %r6898, %r6897, 8;
	shf.r.wrap.b32 	%r6900, %r6897, %r6898, 8;
	mov.b64 	%rd9749, {%r6900, %r6899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6901,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6902}, %rd9708;
	}
	shf.r.wrap.b32 	%r6903, %r6902, %r6901, 2;
	shf.r.wrap.b32 	%r6904, %r6901, %r6902, 2;
	mov.b64 	%rd9750, {%r6904, %r6903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6905,%dummy}, %rd9714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6906}, %rd9714;
	}
	shf.r.wrap.b32 	%r6907, %r6906, %r6905, 9;
	shf.r.wrap.b32 	%r6908, %r6905, %r6906, 9;
	mov.b64 	%rd9751, {%r6908, %r6907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6909,%dummy}, %rd9720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6910}, %rd9720;
	}
	shf.r.wrap.b32 	%r6911, %r6910, %r6909, 25;
	shf.r.wrap.b32 	%r6912, %r6909, %r6910, 25;
	mov.b64 	%rd9752, {%r6912, %r6911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6913,%dummy}, %rd9721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6914}, %rd9721;
	}
	shf.r.wrap.b32 	%r6915, %r6914, %r6913, 23;
	shf.r.wrap.b32 	%r6916, %r6913, %r6914, 23;
	mov.b64 	%rd9753, {%r6916, %r6915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd9727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6918,%dummy}, %rd9727;
	}
	shf.l.wrap.b32 	%r6919, %r6918, %r6917, 2;
	shf.l.wrap.b32 	%r6920, %r6917, %r6918, 2;
	mov.b64 	%rd9754, {%r6920, %r6919};
	not.b64 	%rd9755, %rd9731;
	and.b64  	%rd9756, %rd9732, %rd9755;
	xor.b64  	%rd9757, %rd9756, %rd9706;
	not.b64 	%rd9758, %rd9732;
	and.b64  	%rd9759, %rd9733, %rd9758;
	xor.b64  	%rd9760, %rd9759, %rd9731;
	not.b64 	%rd9761, %rd9733;
	and.b64  	%rd9762, %rd9734, %rd9761;
	xor.b64  	%rd9763, %rd9762, %rd9732;
	not.b64 	%rd9764, %rd9734;
	and.b64  	%rd9765, %rd9706, %rd9764;
	xor.b64  	%rd9766, %rd9765, %rd9733;
	not.b64 	%rd9767, %rd9706;
	and.b64  	%rd9768, %rd9731, %rd9767;
	xor.b64  	%rd9769, %rd9768, %rd9734;
	not.b64 	%rd9770, %rd9736;
	and.b64  	%rd9771, %rd9737, %rd9770;
	xor.b64  	%rd9772, %rd9771, %rd9735;
	not.b64 	%rd9773, %rd9737;
	and.b64  	%rd9774, %rd9738, %rd9773;
	xor.b64  	%rd9775, %rd9774, %rd9736;
	not.b64 	%rd9776, %rd9738;
	and.b64  	%rd9777, %rd9739, %rd9776;
	xor.b64  	%rd9778, %rd9777, %rd9737;
	not.b64 	%rd9779, %rd9739;
	and.b64  	%rd9780, %rd9735, %rd9779;
	xor.b64  	%rd9781, %rd9780, %rd9738;
	not.b64 	%rd9782, %rd9735;
	and.b64  	%rd9783, %rd9736, %rd9782;
	xor.b64  	%rd9784, %rd9783, %rd9739;
	not.b64 	%rd9785, %rd9741;
	and.b64  	%rd9786, %rd9742, %rd9785;
	xor.b64  	%rd9787, %rd9786, %rd9740;
	not.b64 	%rd9788, %rd9742;
	and.b64  	%rd9789, %rd9743, %rd9788;
	xor.b64  	%rd9790, %rd9789, %rd9741;
	not.b64 	%rd9791, %rd9743;
	and.b64  	%rd9792, %rd9744, %rd9791;
	xor.b64  	%rd9793, %rd9792, %rd9742;
	not.b64 	%rd9794, %rd9744;
	and.b64  	%rd9795, %rd9740, %rd9794;
	xor.b64  	%rd9796, %rd9795, %rd9743;
	not.b64 	%rd9797, %rd9740;
	and.b64  	%rd9798, %rd9741, %rd9797;
	xor.b64  	%rd9799, %rd9798, %rd9744;
	not.b64 	%rd9800, %rd9746;
	and.b64  	%rd9801, %rd9747, %rd9800;
	xor.b64  	%rd9802, %rd9801, %rd9745;
	not.b64 	%rd9803, %rd9747;
	and.b64  	%rd9804, %rd9748, %rd9803;
	xor.b64  	%rd9805, %rd9804, %rd9746;
	not.b64 	%rd9806, %rd9748;
	and.b64  	%rd9807, %rd9749, %rd9806;
	xor.b64  	%rd9808, %rd9807, %rd9747;
	not.b64 	%rd9809, %rd9749;
	and.b64  	%rd9810, %rd9745, %rd9809;
	xor.b64  	%rd9811, %rd9810, %rd9748;
	not.b64 	%rd9812, %rd9745;
	and.b64  	%rd9813, %rd9746, %rd9812;
	xor.b64  	%rd9814, %rd9813, %rd9749;
	not.b64 	%rd9815, %rd9751;
	and.b64  	%rd9816, %rd9752, %rd9815;
	xor.b64  	%rd9817, %rd9816, %rd9750;
	not.b64 	%rd9818, %rd9752;
	and.b64  	%rd9819, %rd9753, %rd9818;
	xor.b64  	%rd9820, %rd9819, %rd9751;
	not.b64 	%rd9821, %rd9753;
	and.b64  	%rd9822, %rd9754, %rd9821;
	xor.b64  	%rd9823, %rd9822, %rd9752;
	not.b64 	%rd9824, %rd9754;
	and.b64  	%rd9825, %rd9750, %rd9824;
	xor.b64  	%rd9826, %rd9825, %rd9753;
	not.b64 	%rd9827, %rd9750;
	and.b64  	%rd9828, %rd9751, %rd9827;
	xor.b64  	%rd9829, %rd9828, %rd9754;
	xor.b64  	%rd9831, %rd9757, %rd26;
	xor.b64  	%rd9832, %rd9772, %rd9831;
	xor.b64  	%rd9833, %rd9832, %rd9787;
	xor.b64  	%rd9834, %rd9833, %rd9802;
	xor.b64  	%rd9835, %rd9834, %rd9817;
	xor.b64  	%rd9836, %rd9775, %rd9760;
	xor.b64  	%rd9837, %rd9836, %rd9790;
	xor.b64  	%rd9838, %rd9837, %rd9805;
	xor.b64  	%rd9839, %rd9838, %rd9820;
	xor.b64  	%rd9840, %rd9778, %rd9763;
	xor.b64  	%rd9841, %rd9840, %rd9793;
	xor.b64  	%rd9842, %rd9841, %rd9808;
	xor.b64  	%rd9843, %rd9842, %rd9823;
	xor.b64  	%rd9844, %rd9781, %rd9766;
	xor.b64  	%rd9845, %rd9844, %rd9796;
	xor.b64  	%rd9846, %rd9845, %rd9811;
	xor.b64  	%rd9847, %rd9846, %rd9826;
	xor.b64  	%rd9848, %rd9784, %rd9769;
	xor.b64  	%rd9849, %rd9848, %rd9799;
	xor.b64  	%rd9850, %rd9849, %rd9814;
	xor.b64  	%rd9851, %rd9850, %rd9829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6921}, %rd9839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd9839;
	}
	shf.l.wrap.b32 	%r6923, %r6922, %r6921, 1;
	shf.l.wrap.b32 	%r6924, %r6921, %r6922, 1;
	mov.b64 	%rd9852, {%r6924, %r6923};
	xor.b64  	%rd9853, %rd9851, %rd9852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6925}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6926,%dummy}, %rd9843;
	}
	shf.l.wrap.b32 	%r6927, %r6926, %r6925, 1;
	shf.l.wrap.b32 	%r6928, %r6925, %r6926, 1;
	mov.b64 	%rd9854, {%r6928, %r6927};
	xor.b64  	%rd9855, %rd9854, %rd9835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd9847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd9847;
	}
	shf.l.wrap.b32 	%r6931, %r6930, %r6929, 1;
	shf.l.wrap.b32 	%r6932, %r6929, %r6930, 1;
	mov.b64 	%rd9856, {%r6932, %r6931};
	xor.b64  	%rd9857, %rd9856, %rd9839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6933}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd9851;
	}
	shf.l.wrap.b32 	%r6935, %r6934, %r6933, 1;
	shf.l.wrap.b32 	%r6936, %r6933, %r6934, 1;
	mov.b64 	%rd9858, {%r6936, %r6935};
	xor.b64  	%rd9859, %rd9858, %rd9843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6937}, %rd9835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd9835;
	}
	shf.l.wrap.b32 	%r6939, %r6938, %r6937, 1;
	shf.l.wrap.b32 	%r6940, %r6937, %r6938, 1;
	mov.b64 	%rd9860, {%r6940, %r6939};
	xor.b64  	%rd9861, %rd9847, %rd9860;
	xor.b64  	%rd9862, %rd9853, %rd9831;
	xor.b64  	%rd9863, %rd9855, %rd9760;
	xor.b64  	%rd9864, %rd9857, %rd9763;
	xor.b64  	%rd9865, %rd9859, %rd9766;
	xor.b64  	%rd9866, %rd9861, %rd9769;
	xor.b64  	%rd9867, %rd9853, %rd9772;
	xor.b64  	%rd9868, %rd9855, %rd9775;
	xor.b64  	%rd9869, %rd9857, %rd9778;
	xor.b64  	%rd9870, %rd9859, %rd9781;
	xor.b64  	%rd9871, %rd9861, %rd9784;
	xor.b64  	%rd9872, %rd9853, %rd9787;
	xor.b64  	%rd9873, %rd9855, %rd9790;
	xor.b64  	%rd9874, %rd9857, %rd9793;
	xor.b64  	%rd9875, %rd9859, %rd9796;
	xor.b64  	%rd9876, %rd9861, %rd9799;
	xor.b64  	%rd9877, %rd9853, %rd9802;
	xor.b64  	%rd9878, %rd9855, %rd9805;
	xor.b64  	%rd9879, %rd9857, %rd9808;
	xor.b64  	%rd9880, %rd9859, %rd9811;
	xor.b64  	%rd9881, %rd9861, %rd9814;
	xor.b64  	%rd9882, %rd9853, %rd9817;
	xor.b64  	%rd9883, %rd9855, %rd9820;
	xor.b64  	%rd9884, %rd9857, %rd9823;
	xor.b64  	%rd9885, %rd9859, %rd9826;
	xor.b64  	%rd9886, %rd9861, %rd9829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6941,%dummy}, %rd9868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6942}, %rd9868;
	}
	shf.r.wrap.b32 	%r6943, %r6942, %r6941, 20;
	shf.r.wrap.b32 	%r6944, %r6941, %r6942, 20;
	mov.b64 	%rd9887, {%r6944, %r6943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6945,%dummy}, %rd9874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6946}, %rd9874;
	}
	shf.r.wrap.b32 	%r6947, %r6946, %r6945, 21;
	shf.r.wrap.b32 	%r6948, %r6945, %r6946, 21;
	mov.b64 	%rd9888, {%r6948, %r6947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6949}, %rd9880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6950,%dummy}, %rd9880;
	}
	shf.l.wrap.b32 	%r6951, %r6950, %r6949, 21;
	shf.l.wrap.b32 	%r6952, %r6949, %r6950, 21;
	mov.b64 	%rd9889, {%r6952, %r6951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd9886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6954,%dummy}, %rd9886;
	}
	shf.l.wrap.b32 	%r6955, %r6954, %r6953, 14;
	shf.l.wrap.b32 	%r6956, %r6953, %r6954, 14;
	mov.b64 	%rd9890, {%r6956, %r6955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6957}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd9865;
	}
	shf.l.wrap.b32 	%r6959, %r6958, %r6957, 28;
	shf.l.wrap.b32 	%r6960, %r6957, %r6958, 28;
	mov.b64 	%rd9891, {%r6960, %r6959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6961}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd9871;
	}
	shf.l.wrap.b32 	%r6963, %r6962, %r6961, 20;
	shf.l.wrap.b32 	%r6964, %r6961, %r6962, 20;
	mov.b64 	%rd9892, {%r6964, %r6963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd9872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6966,%dummy}, %rd9872;
	}
	shf.l.wrap.b32 	%r6967, %r6966, %r6965, 3;
	shf.l.wrap.b32 	%r6968, %r6965, %r6966, 3;
	mov.b64 	%rd9893, {%r6968, %r6967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6969,%dummy}, %rd9878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6970}, %rd9878;
	}
	shf.r.wrap.b32 	%r6971, %r6970, %r6969, 19;
	shf.r.wrap.b32 	%r6972, %r6969, %r6970, 19;
	mov.b64 	%rd9894, {%r6972, %r6971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6973,%dummy}, %rd9884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6974}, %rd9884;
	}
	shf.r.wrap.b32 	%r6975, %r6974, %r6973, 3;
	shf.r.wrap.b32 	%r6976, %r6973, %r6974, 3;
	mov.b64 	%rd9895, {%r6976, %r6975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd9863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd9863;
	}
	shf.l.wrap.b32 	%r6979, %r6978, %r6977, 1;
	shf.l.wrap.b32 	%r6980, %r6977, %r6978, 1;
	mov.b64 	%rd9896, {%r6980, %r6979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6981}, %rd9869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd9869;
	}
	shf.l.wrap.b32 	%r6983, %r6982, %r6981, 6;
	shf.l.wrap.b32 	%r6984, %r6981, %r6982, 6;
	mov.b64 	%rd9897, {%r6984, %r6983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6985}, %rd9875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd9875;
	}
	shf.l.wrap.b32 	%r6987, %r6986, %r6985, 25;
	shf.l.wrap.b32 	%r6988, %r6985, %r6986, 25;
	mov.b64 	%rd9898, {%r6988, %r6987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd9881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6990,%dummy}, %rd9881;
	}
	shf.l.wrap.b32 	%r6991, %r6990, %r6989, 8;
	shf.l.wrap.b32 	%r6992, %r6989, %r6990, 8;
	mov.b64 	%rd9899, {%r6992, %r6991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6993}, %rd9882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd9882;
	}
	shf.l.wrap.b32 	%r6995, %r6994, %r6993, 18;
	shf.l.wrap.b32 	%r6996, %r6993, %r6994, 18;
	mov.b64 	%rd9900, {%r6996, %r6995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6997}, %rd9866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6998,%dummy}, %rd9866;
	}
	shf.l.wrap.b32 	%r6999, %r6998, %r6997, 27;
	shf.l.wrap.b32 	%r7000, %r6997, %r6998, 27;
	mov.b64 	%rd9901, {%r7000, %r6999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7001,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7002}, %rd9867;
	}
	shf.r.wrap.b32 	%r7003, %r7002, %r7001, 28;
	shf.r.wrap.b32 	%r7004, %r7001, %r7002, 28;
	mov.b64 	%rd9902, {%r7004, %r7003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7005}, %rd9873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd9873;
	}
	shf.l.wrap.b32 	%r7007, %r7006, %r7005, 10;
	shf.l.wrap.b32 	%r7008, %r7005, %r7006, 10;
	mov.b64 	%rd9903, {%r7008, %r7007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7009}, %rd9879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd9879;
	}
	shf.l.wrap.b32 	%r7011, %r7010, %r7009, 15;
	shf.l.wrap.b32 	%r7012, %r7009, %r7010, 15;
	mov.b64 	%rd9904, {%r7012, %r7011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7013,%dummy}, %rd9885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7014}, %rd9885;
	}
	shf.r.wrap.b32 	%r7015, %r7014, %r7013, 8;
	shf.r.wrap.b32 	%r7016, %r7013, %r7014, 8;
	mov.b64 	%rd9905, {%r7016, %r7015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7017,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7018}, %rd9864;
	}
	shf.r.wrap.b32 	%r7019, %r7018, %r7017, 2;
	shf.r.wrap.b32 	%r7020, %r7017, %r7018, 2;
	mov.b64 	%rd9906, {%r7020, %r7019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7021,%dummy}, %rd9870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7022}, %rd9870;
	}
	shf.r.wrap.b32 	%r7023, %r7022, %r7021, 9;
	shf.r.wrap.b32 	%r7024, %r7021, %r7022, 9;
	mov.b64 	%rd9907, {%r7024, %r7023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7025,%dummy}, %rd9876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7026}, %rd9876;
	}
	shf.r.wrap.b32 	%r7027, %r7026, %r7025, 25;
	shf.r.wrap.b32 	%r7028, %r7025, %r7026, 25;
	mov.b64 	%rd9908, {%r7028, %r7027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7029,%dummy}, %rd9877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7030}, %rd9877;
	}
	shf.r.wrap.b32 	%r7031, %r7030, %r7029, 23;
	shf.r.wrap.b32 	%r7032, %r7029, %r7030, 23;
	mov.b64 	%rd9909, {%r7032, %r7031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7033}, %rd9883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7034,%dummy}, %rd9883;
	}
	shf.l.wrap.b32 	%r7035, %r7034, %r7033, 2;
	shf.l.wrap.b32 	%r7036, %r7033, %r7034, 2;
	mov.b64 	%rd9910, {%r7036, %r7035};
	not.b64 	%rd9911, %rd9887;
	and.b64  	%rd9912, %rd9888, %rd9911;
	xor.b64  	%rd9913, %rd9912, %rd9862;
	not.b64 	%rd9914, %rd9888;
	and.b64  	%rd9915, %rd9889, %rd9914;
	xor.b64  	%rd9916, %rd9915, %rd9887;
	not.b64 	%rd9917, %rd9889;
	and.b64  	%rd9918, %rd9890, %rd9917;
	xor.b64  	%rd9919, %rd9918, %rd9888;
	not.b64 	%rd9920, %rd9890;
	and.b64  	%rd9921, %rd9862, %rd9920;
	xor.b64  	%rd9922, %rd9921, %rd9889;
	not.b64 	%rd9923, %rd9862;
	and.b64  	%rd9924, %rd9887, %rd9923;
	xor.b64  	%rd9925, %rd9924, %rd9890;
	not.b64 	%rd9926, %rd9892;
	and.b64  	%rd9927, %rd9893, %rd9926;
	xor.b64  	%rd9928, %rd9927, %rd9891;
	not.b64 	%rd9929, %rd9893;
	and.b64  	%rd9930, %rd9894, %rd9929;
	xor.b64  	%rd9931, %rd9930, %rd9892;
	not.b64 	%rd9932, %rd9894;
	and.b64  	%rd9933, %rd9895, %rd9932;
	xor.b64  	%rd9934, %rd9933, %rd9893;
	not.b64 	%rd9935, %rd9895;
	and.b64  	%rd9936, %rd9891, %rd9935;
	xor.b64  	%rd9937, %rd9936, %rd9894;
	not.b64 	%rd9938, %rd9891;
	and.b64  	%rd9939, %rd9892, %rd9938;
	xor.b64  	%rd9940, %rd9939, %rd9895;
	not.b64 	%rd9941, %rd9897;
	and.b64  	%rd9942, %rd9898, %rd9941;
	xor.b64  	%rd9943, %rd9942, %rd9896;
	not.b64 	%rd9944, %rd9898;
	and.b64  	%rd9945, %rd9899, %rd9944;
	xor.b64  	%rd9946, %rd9945, %rd9897;
	not.b64 	%rd9947, %rd9899;
	and.b64  	%rd9948, %rd9900, %rd9947;
	xor.b64  	%rd9949, %rd9948, %rd9898;
	not.b64 	%rd9950, %rd9900;
	and.b64  	%rd9951, %rd9896, %rd9950;
	xor.b64  	%rd9952, %rd9951, %rd9899;
	not.b64 	%rd9953, %rd9896;
	and.b64  	%rd9954, %rd9897, %rd9953;
	xor.b64  	%rd9955, %rd9954, %rd9900;
	not.b64 	%rd9956, %rd9902;
	and.b64  	%rd9957, %rd9903, %rd9956;
	xor.b64  	%rd9958, %rd9957, %rd9901;
	not.b64 	%rd9959, %rd9903;
	and.b64  	%rd9960, %rd9904, %rd9959;
	xor.b64  	%rd9961, %rd9960, %rd9902;
	not.b64 	%rd9962, %rd9904;
	and.b64  	%rd9963, %rd9905, %rd9962;
	xor.b64  	%rd9964, %rd9963, %rd9903;
	not.b64 	%rd9965, %rd9905;
	and.b64  	%rd9966, %rd9901, %rd9965;
	xor.b64  	%rd9967, %rd9966, %rd9904;
	not.b64 	%rd9968, %rd9901;
	and.b64  	%rd9969, %rd9902, %rd9968;
	xor.b64  	%rd9970, %rd9969, %rd9905;
	not.b64 	%rd9971, %rd9907;
	and.b64  	%rd9972, %rd9908, %rd9971;
	xor.b64  	%rd9973, %rd9972, %rd9906;
	not.b64 	%rd9974, %rd9908;
	and.b64  	%rd9975, %rd9909, %rd9974;
	xor.b64  	%rd9976, %rd9975, %rd9907;
	not.b64 	%rd9977, %rd9909;
	and.b64  	%rd9978, %rd9910, %rd9977;
	xor.b64  	%rd9979, %rd9978, %rd9908;
	not.b64 	%rd9980, %rd9910;
	and.b64  	%rd9981, %rd9906, %rd9980;
	xor.b64  	%rd9982, %rd9981, %rd9909;
	not.b64 	%rd9983, %rd9906;
	and.b64  	%rd9984, %rd9907, %rd9983;
	xor.b64  	%rd9985, %rd9984, %rd9910;
	xor.b64  	%rd9987, %rd9913, %rd27;
	xor.b64  	%rd9988, %rd9928, %rd9987;
	xor.b64  	%rd9989, %rd9988, %rd9943;
	xor.b64  	%rd9990, %rd9989, %rd9958;
	xor.b64  	%rd9991, %rd9990, %rd9973;
	xor.b64  	%rd9992, %rd9931, %rd9916;
	xor.b64  	%rd9993, %rd9992, %rd9946;
	xor.b64  	%rd9994, %rd9993, %rd9961;
	xor.b64  	%rd9995, %rd9994, %rd9976;
	xor.b64  	%rd9996, %rd9934, %rd9919;
	xor.b64  	%rd9997, %rd9996, %rd9949;
	xor.b64  	%rd9998, %rd9997, %rd9964;
	xor.b64  	%rd9999, %rd9998, %rd9979;
	xor.b64  	%rd10000, %rd9937, %rd9922;
	xor.b64  	%rd10001, %rd10000, %rd9952;
	xor.b64  	%rd10002, %rd10001, %rd9967;
	xor.b64  	%rd10003, %rd10002, %rd9982;
	xor.b64  	%rd10004, %rd9940, %rd9925;
	xor.b64  	%rd10005, %rd10004, %rd9955;
	xor.b64  	%rd10006, %rd10005, %rd9970;
	xor.b64  	%rd10007, %rd10006, %rd9985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7037}, %rd9995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd9995;
	}
	shf.l.wrap.b32 	%r7039, %r7038, %r7037, 1;
	shf.l.wrap.b32 	%r7040, %r7037, %r7038, 1;
	mov.b64 	%rd10008, {%r7040, %r7039};
	xor.b64  	%rd10009, %rd10007, %rd10008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7041}, %rd9999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd9999;
	}
	shf.l.wrap.b32 	%r7043, %r7042, %r7041, 1;
	shf.l.wrap.b32 	%r7044, %r7041, %r7042, 1;
	mov.b64 	%rd10010, {%r7044, %r7043};
	xor.b64  	%rd10011, %rd10010, %rd9991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7045}, %rd10003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7046,%dummy}, %rd10003;
	}
	shf.l.wrap.b32 	%r7047, %r7046, %r7045, 1;
	shf.l.wrap.b32 	%r7048, %r7045, %r7046, 1;
	mov.b64 	%rd10012, {%r7048, %r7047};
	xor.b64  	%rd10013, %rd10012, %rd9995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd10007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7050,%dummy}, %rd10007;
	}
	shf.l.wrap.b32 	%r7051, %r7050, %r7049, 1;
	shf.l.wrap.b32 	%r7052, %r7049, %r7050, 1;
	mov.b64 	%rd10014, {%r7052, %r7051};
	xor.b64  	%rd10015, %rd10014, %rd9999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7053}, %rd9991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd9991;
	}
	shf.l.wrap.b32 	%r7055, %r7054, %r7053, 1;
	shf.l.wrap.b32 	%r7056, %r7053, %r7054, 1;
	mov.b64 	%rd10016, {%r7056, %r7055};
	xor.b64  	%rd10017, %rd10003, %rd10016;
	xor.b64  	%rd10018, %rd10009, %rd9987;
	xor.b64  	%rd10019, %rd10011, %rd9916;
	xor.b64  	%rd10020, %rd10013, %rd9919;
	xor.b64  	%rd10021, %rd10015, %rd9922;
	xor.b64  	%rd10022, %rd10017, %rd9925;
	xor.b64  	%rd10023, %rd10009, %rd9928;
	xor.b64  	%rd10024, %rd10011, %rd9931;
	xor.b64  	%rd10025, %rd10013, %rd9934;
	xor.b64  	%rd10026, %rd10015, %rd9937;
	xor.b64  	%rd10027, %rd10017, %rd9940;
	xor.b64  	%rd10028, %rd10009, %rd9943;
	xor.b64  	%rd10029, %rd10011, %rd9946;
	xor.b64  	%rd10030, %rd10013, %rd9949;
	xor.b64  	%rd10031, %rd10015, %rd9952;
	xor.b64  	%rd10032, %rd10017, %rd9955;
	xor.b64  	%rd10033, %rd10009, %rd9958;
	xor.b64  	%rd10034, %rd10011, %rd9961;
	xor.b64  	%rd10035, %rd10013, %rd9964;
	xor.b64  	%rd10036, %rd10015, %rd9967;
	xor.b64  	%rd10037, %rd10017, %rd9970;
	xor.b64  	%rd10038, %rd10009, %rd9973;
	xor.b64  	%rd10039, %rd10011, %rd9976;
	xor.b64  	%rd10040, %rd10013, %rd9979;
	xor.b64  	%rd10041, %rd10015, %rd9982;
	xor.b64  	%rd10042, %rd10017, %rd9985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7057,%dummy}, %rd10024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7058}, %rd10024;
	}
	shf.r.wrap.b32 	%r7059, %r7058, %r7057, 20;
	shf.r.wrap.b32 	%r7060, %r7057, %r7058, 20;
	mov.b64 	%rd10043, {%r7060, %r7059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7061,%dummy}, %rd10030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7062}, %rd10030;
	}
	shf.r.wrap.b32 	%r7063, %r7062, %r7061, 21;
	shf.r.wrap.b32 	%r7064, %r7061, %r7062, 21;
	mov.b64 	%rd10044, {%r7064, %r7063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd10036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7066,%dummy}, %rd10036;
	}
	shf.l.wrap.b32 	%r7067, %r7066, %r7065, 21;
	shf.l.wrap.b32 	%r7068, %r7065, %r7066, 21;
	mov.b64 	%rd10045, {%r7068, %r7067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd10042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7070,%dummy}, %rd10042;
	}
	shf.l.wrap.b32 	%r7071, %r7070, %r7069, 14;
	shf.l.wrap.b32 	%r7072, %r7069, %r7070, 14;
	mov.b64 	%rd10046, {%r7072, %r7071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7073}, %rd10021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd10021;
	}
	shf.l.wrap.b32 	%r7075, %r7074, %r7073, 28;
	shf.l.wrap.b32 	%r7076, %r7073, %r7074, 28;
	mov.b64 	%rd10047, {%r7076, %r7075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7077}, %rd10027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd10027;
	}
	shf.l.wrap.b32 	%r7079, %r7078, %r7077, 20;
	shf.l.wrap.b32 	%r7080, %r7077, %r7078, 20;
	mov.b64 	%rd10048, {%r7080, %r7079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7081}, %rd10028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7082,%dummy}, %rd10028;
	}
	shf.l.wrap.b32 	%r7083, %r7082, %r7081, 3;
	shf.l.wrap.b32 	%r7084, %r7081, %r7082, 3;
	mov.b64 	%rd10049, {%r7084, %r7083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7085,%dummy}, %rd10034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7086}, %rd10034;
	}
	shf.r.wrap.b32 	%r7087, %r7086, %r7085, 19;
	shf.r.wrap.b32 	%r7088, %r7085, %r7086, 19;
	mov.b64 	%rd10050, {%r7088, %r7087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7089,%dummy}, %rd10040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7090}, %rd10040;
	}
	shf.r.wrap.b32 	%r7091, %r7090, %r7089, 3;
	shf.r.wrap.b32 	%r7092, %r7089, %r7090, 3;
	mov.b64 	%rd10051, {%r7092, %r7091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7093}, %rd10019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7094,%dummy}, %rd10019;
	}
	shf.l.wrap.b32 	%r7095, %r7094, %r7093, 1;
	shf.l.wrap.b32 	%r7096, %r7093, %r7094, 1;
	mov.b64 	%rd10052, {%r7096, %r7095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7097}, %rd10025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd10025;
	}
	shf.l.wrap.b32 	%r7099, %r7098, %r7097, 6;
	shf.l.wrap.b32 	%r7100, %r7097, %r7098, 6;
	mov.b64 	%rd10053, {%r7100, %r7099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7101}, %rd10031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7102,%dummy}, %rd10031;
	}
	shf.l.wrap.b32 	%r7103, %r7102, %r7101, 25;
	shf.l.wrap.b32 	%r7104, %r7101, %r7102, 25;
	mov.b64 	%rd10054, {%r7104, %r7103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7105}, %rd10037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7106,%dummy}, %rd10037;
	}
	shf.l.wrap.b32 	%r7107, %r7106, %r7105, 8;
	shf.l.wrap.b32 	%r7108, %r7105, %r7106, 8;
	mov.b64 	%rd10055, {%r7108, %r7107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7109}, %rd10038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7110,%dummy}, %rd10038;
	}
	shf.l.wrap.b32 	%r7111, %r7110, %r7109, 18;
	shf.l.wrap.b32 	%r7112, %r7109, %r7110, 18;
	mov.b64 	%rd10056, {%r7112, %r7111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7113}, %rd10022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7114,%dummy}, %rd10022;
	}
	shf.l.wrap.b32 	%r7115, %r7114, %r7113, 27;
	shf.l.wrap.b32 	%r7116, %r7113, %r7114, 27;
	mov.b64 	%rd10057, {%r7116, %r7115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7117,%dummy}, %rd10023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7118}, %rd10023;
	}
	shf.r.wrap.b32 	%r7119, %r7118, %r7117, 28;
	shf.r.wrap.b32 	%r7120, %r7117, %r7118, 28;
	mov.b64 	%rd10058, {%r7120, %r7119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7121}, %rd10029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7122,%dummy}, %rd10029;
	}
	shf.l.wrap.b32 	%r7123, %r7122, %r7121, 10;
	shf.l.wrap.b32 	%r7124, %r7121, %r7122, 10;
	mov.b64 	%rd10059, {%r7124, %r7123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7125}, %rd10035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd10035;
	}
	shf.l.wrap.b32 	%r7127, %r7126, %r7125, 15;
	shf.l.wrap.b32 	%r7128, %r7125, %r7126, 15;
	mov.b64 	%rd10060, {%r7128, %r7127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7129,%dummy}, %rd10041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7130}, %rd10041;
	}
	shf.r.wrap.b32 	%r7131, %r7130, %r7129, 8;
	shf.r.wrap.b32 	%r7132, %r7129, %r7130, 8;
	mov.b64 	%rd10061, {%r7132, %r7131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7133,%dummy}, %rd10020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7134}, %rd10020;
	}
	shf.r.wrap.b32 	%r7135, %r7134, %r7133, 2;
	shf.r.wrap.b32 	%r7136, %r7133, %r7134, 2;
	mov.b64 	%rd10062, {%r7136, %r7135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7137,%dummy}, %rd10026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7138}, %rd10026;
	}
	shf.r.wrap.b32 	%r7139, %r7138, %r7137, 9;
	shf.r.wrap.b32 	%r7140, %r7137, %r7138, 9;
	mov.b64 	%rd10063, {%r7140, %r7139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7141,%dummy}, %rd10032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7142}, %rd10032;
	}
	shf.r.wrap.b32 	%r7143, %r7142, %r7141, 25;
	shf.r.wrap.b32 	%r7144, %r7141, %r7142, 25;
	mov.b64 	%rd10064, {%r7144, %r7143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7145,%dummy}, %rd10033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7146}, %rd10033;
	}
	shf.r.wrap.b32 	%r7147, %r7146, %r7145, 23;
	shf.r.wrap.b32 	%r7148, %r7145, %r7146, 23;
	mov.b64 	%rd10065, {%r7148, %r7147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7149}, %rd10039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7150,%dummy}, %rd10039;
	}
	shf.l.wrap.b32 	%r7151, %r7150, %r7149, 2;
	shf.l.wrap.b32 	%r7152, %r7149, %r7150, 2;
	mov.b64 	%rd10066, {%r7152, %r7151};
	not.b64 	%rd10067, %rd10043;
	and.b64  	%rd10068, %rd10044, %rd10067;
	xor.b64  	%rd10069, %rd10068, %rd10018;
	not.b64 	%rd10070, %rd10044;
	and.b64  	%rd10071, %rd10045, %rd10070;
	xor.b64  	%rd10072, %rd10071, %rd10043;
	not.b64 	%rd10073, %rd10045;
	and.b64  	%rd10074, %rd10046, %rd10073;
	xor.b64  	%rd10075, %rd10074, %rd10044;
	not.b64 	%rd10076, %rd10046;
	and.b64  	%rd10077, %rd10018, %rd10076;
	xor.b64  	%rd10078, %rd10077, %rd10045;
	not.b64 	%rd10079, %rd10018;
	and.b64  	%rd10080, %rd10043, %rd10079;
	xor.b64  	%rd10081, %rd10080, %rd10046;
	not.b64 	%rd10082, %rd10048;
	and.b64  	%rd10083, %rd10049, %rd10082;
	xor.b64  	%rd10084, %rd10083, %rd10047;
	not.b64 	%rd10085, %rd10049;
	and.b64  	%rd10086, %rd10050, %rd10085;
	xor.b64  	%rd10087, %rd10086, %rd10048;
	not.b64 	%rd10088, %rd10050;
	and.b64  	%rd10089, %rd10051, %rd10088;
	xor.b64  	%rd10090, %rd10089, %rd10049;
	not.b64 	%rd10091, %rd10051;
	and.b64  	%rd10092, %rd10047, %rd10091;
	xor.b64  	%rd10093, %rd10092, %rd10050;
	not.b64 	%rd10094, %rd10047;
	and.b64  	%rd10095, %rd10048, %rd10094;
	xor.b64  	%rd10096, %rd10095, %rd10051;
	not.b64 	%rd10097, %rd10053;
	and.b64  	%rd10098, %rd10054, %rd10097;
	xor.b64  	%rd10099, %rd10098, %rd10052;
	not.b64 	%rd10100, %rd10054;
	and.b64  	%rd10101, %rd10055, %rd10100;
	xor.b64  	%rd10102, %rd10101, %rd10053;
	not.b64 	%rd10103, %rd10055;
	and.b64  	%rd10104, %rd10056, %rd10103;
	xor.b64  	%rd10105, %rd10104, %rd10054;
	not.b64 	%rd10106, %rd10056;
	and.b64  	%rd10107, %rd10052, %rd10106;
	xor.b64  	%rd10108, %rd10107, %rd10055;
	not.b64 	%rd10109, %rd10052;
	and.b64  	%rd10110, %rd10053, %rd10109;
	xor.b64  	%rd10111, %rd10110, %rd10056;
	not.b64 	%rd10112, %rd10058;
	and.b64  	%rd10113, %rd10059, %rd10112;
	xor.b64  	%rd10114, %rd10113, %rd10057;
	not.b64 	%rd10115, %rd10059;
	and.b64  	%rd10116, %rd10060, %rd10115;
	xor.b64  	%rd10117, %rd10116, %rd10058;
	not.b64 	%rd10118, %rd10060;
	and.b64  	%rd10119, %rd10061, %rd10118;
	xor.b64  	%rd10120, %rd10119, %rd10059;
	not.b64 	%rd10121, %rd10061;
	and.b64  	%rd10122, %rd10057, %rd10121;
	xor.b64  	%rd10123, %rd10122, %rd10060;
	not.b64 	%rd10124, %rd10057;
	and.b64  	%rd10125, %rd10058, %rd10124;
	xor.b64  	%rd10126, %rd10125, %rd10061;
	not.b64 	%rd10127, %rd10063;
	and.b64  	%rd10128, %rd10064, %rd10127;
	xor.b64  	%rd10129, %rd10128, %rd10062;
	not.b64 	%rd10130, %rd10064;
	and.b64  	%rd10131, %rd10065, %rd10130;
	xor.b64  	%rd10132, %rd10131, %rd10063;
	not.b64 	%rd10133, %rd10065;
	and.b64  	%rd10134, %rd10066, %rd10133;
	xor.b64  	%rd10135, %rd10134, %rd10064;
	not.b64 	%rd10136, %rd10066;
	and.b64  	%rd10137, %rd10062, %rd10136;
	xor.b64  	%rd10138, %rd10137, %rd10065;
	not.b64 	%rd10139, %rd10062;
	and.b64  	%rd10140, %rd10063, %rd10139;
	xor.b64  	%rd10141, %rd10140, %rd10066;
	xor.b64  	%rd10143, %rd10069, %rd28;
	xor.b64  	%rd10144, %rd10084, %rd10143;
	xor.b64  	%rd10145, %rd10144, %rd10099;
	xor.b64  	%rd10146, %rd10145, %rd10114;
	xor.b64  	%rd10147, %rd10146, %rd10129;
	xor.b64  	%rd10148, %rd10087, %rd10072;
	xor.b64  	%rd10149, %rd10148, %rd10102;
	xor.b64  	%rd10150, %rd10149, %rd10117;
	xor.b64  	%rd10151, %rd10150, %rd10132;
	xor.b64  	%rd10152, %rd10090, %rd10075;
	xor.b64  	%rd10153, %rd10152, %rd10105;
	xor.b64  	%rd10154, %rd10153, %rd10120;
	xor.b64  	%rd10155, %rd10154, %rd10135;
	xor.b64  	%rd10156, %rd10093, %rd10078;
	xor.b64  	%rd10157, %rd10156, %rd10108;
	xor.b64  	%rd10158, %rd10157, %rd10123;
	xor.b64  	%rd10159, %rd10158, %rd10138;
	xor.b64  	%rd10160, %rd10096, %rd10081;
	xor.b64  	%rd10161, %rd10160, %rd10111;
	xor.b64  	%rd10162, %rd10161, %rd10126;
	xor.b64  	%rd10163, %rd10162, %rd10141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd10151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7154,%dummy}, %rd10151;
	}
	shf.l.wrap.b32 	%r7155, %r7154, %r7153, 1;
	shf.l.wrap.b32 	%r7156, %r7153, %r7154, 1;
	mov.b64 	%rd10164, {%r7156, %r7155};
	xor.b64  	%rd10165, %rd10163, %rd10164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7157}, %rd10155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd10155;
	}
	shf.l.wrap.b32 	%r7159, %r7158, %r7157, 1;
	shf.l.wrap.b32 	%r7160, %r7157, %r7158, 1;
	mov.b64 	%rd10166, {%r7160, %r7159};
	xor.b64  	%rd10167, %rd10166, %rd10147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7161}, %rd10159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7162,%dummy}, %rd10159;
	}
	shf.l.wrap.b32 	%r7163, %r7162, %r7161, 1;
	shf.l.wrap.b32 	%r7164, %r7161, %r7162, 1;
	mov.b64 	%rd10168, {%r7164, %r7163};
	xor.b64  	%rd10169, %rd10168, %rd10151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7165}, %rd10163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7166,%dummy}, %rd10163;
	}
	shf.l.wrap.b32 	%r7167, %r7166, %r7165, 1;
	shf.l.wrap.b32 	%r7168, %r7165, %r7166, 1;
	mov.b64 	%rd10170, {%r7168, %r7167};
	xor.b64  	%rd10171, %rd10170, %rd10155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd10147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7170,%dummy}, %rd10147;
	}
	shf.l.wrap.b32 	%r7171, %r7170, %r7169, 1;
	shf.l.wrap.b32 	%r7172, %r7169, %r7170, 1;
	mov.b64 	%rd10172, {%r7172, %r7171};
	xor.b64  	%rd10173, %rd10159, %rd10172;
	xor.b64  	%rd10174, %rd10165, %rd10143;
	xor.b64  	%rd10175, %rd10167, %rd10072;
	xor.b64  	%rd10176, %rd10169, %rd10075;
	xor.b64  	%rd10177, %rd10171, %rd10078;
	xor.b64  	%rd10178, %rd10173, %rd10081;
	xor.b64  	%rd10179, %rd10165, %rd10084;
	xor.b64  	%rd10180, %rd10167, %rd10087;
	xor.b64  	%rd10181, %rd10169, %rd10090;
	xor.b64  	%rd10182, %rd10171, %rd10093;
	xor.b64  	%rd10183, %rd10173, %rd10096;
	xor.b64  	%rd10184, %rd10165, %rd10099;
	xor.b64  	%rd10185, %rd10167, %rd10102;
	xor.b64  	%rd10186, %rd10169, %rd10105;
	xor.b64  	%rd10187, %rd10171, %rd10108;
	xor.b64  	%rd10188, %rd10173, %rd10111;
	xor.b64  	%rd10189, %rd10165, %rd10114;
	xor.b64  	%rd10190, %rd10167, %rd10117;
	xor.b64  	%rd10191, %rd10169, %rd10120;
	xor.b64  	%rd10192, %rd10171, %rd10123;
	xor.b64  	%rd10193, %rd10173, %rd10126;
	xor.b64  	%rd10194, %rd10165, %rd10129;
	xor.b64  	%rd10195, %rd10167, %rd10132;
	xor.b64  	%rd10196, %rd10169, %rd10135;
	xor.b64  	%rd10197, %rd10171, %rd10138;
	xor.b64  	%rd10198, %rd10173, %rd10141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7173,%dummy}, %rd10180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7174}, %rd10180;
	}
	shf.r.wrap.b32 	%r7175, %r7174, %r7173, 20;
	shf.r.wrap.b32 	%r7176, %r7173, %r7174, 20;
	mov.b64 	%rd10199, {%r7176, %r7175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7177,%dummy}, %rd10186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7178}, %rd10186;
	}
	shf.r.wrap.b32 	%r7179, %r7178, %r7177, 21;
	shf.r.wrap.b32 	%r7180, %r7177, %r7178, 21;
	mov.b64 	%rd10200, {%r7180, %r7179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7181}, %rd10192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7182,%dummy}, %rd10192;
	}
	shf.l.wrap.b32 	%r7183, %r7182, %r7181, 21;
	shf.l.wrap.b32 	%r7184, %r7181, %r7182, 21;
	mov.b64 	%rd10201, {%r7184, %r7183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7185}, %rd10198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd10198;
	}
	shf.l.wrap.b32 	%r7187, %r7186, %r7185, 14;
	shf.l.wrap.b32 	%r7188, %r7185, %r7186, 14;
	mov.b64 	%rd10202, {%r7188, %r7187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7189}, %rd10177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7190,%dummy}, %rd10177;
	}
	shf.l.wrap.b32 	%r7191, %r7190, %r7189, 28;
	shf.l.wrap.b32 	%r7192, %r7189, %r7190, 28;
	mov.b64 	%rd10203, {%r7192, %r7191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7193}, %rd10183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd10183;
	}
	shf.l.wrap.b32 	%r7195, %r7194, %r7193, 20;
	shf.l.wrap.b32 	%r7196, %r7193, %r7194, 20;
	mov.b64 	%rd10204, {%r7196, %r7195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7197}, %rd10184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7198,%dummy}, %rd10184;
	}
	shf.l.wrap.b32 	%r7199, %r7198, %r7197, 3;
	shf.l.wrap.b32 	%r7200, %r7197, %r7198, 3;
	mov.b64 	%rd10205, {%r7200, %r7199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7201,%dummy}, %rd10190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7202}, %rd10190;
	}
	shf.r.wrap.b32 	%r7203, %r7202, %r7201, 19;
	shf.r.wrap.b32 	%r7204, %r7201, %r7202, 19;
	mov.b64 	%rd10206, {%r7204, %r7203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd10196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd10196;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 3;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 3;
	mov.b64 	%rd10207, {%r7208, %r7207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7209}, %rd10175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd10175;
	}
	shf.l.wrap.b32 	%r7211, %r7210, %r7209, 1;
	shf.l.wrap.b32 	%r7212, %r7209, %r7210, 1;
	mov.b64 	%rd10208, {%r7212, %r7211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7213}, %rd10181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7214,%dummy}, %rd10181;
	}
	shf.l.wrap.b32 	%r7215, %r7214, %r7213, 6;
	shf.l.wrap.b32 	%r7216, %r7213, %r7214, 6;
	mov.b64 	%rd10209, {%r7216, %r7215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7217}, %rd10187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd10187;
	}
	shf.l.wrap.b32 	%r7219, %r7218, %r7217, 25;
	shf.l.wrap.b32 	%r7220, %r7217, %r7218, 25;
	mov.b64 	%rd10210, {%r7220, %r7219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd10193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7222,%dummy}, %rd10193;
	}
	shf.l.wrap.b32 	%r7223, %r7222, %r7221, 8;
	shf.l.wrap.b32 	%r7224, %r7221, %r7222, 8;
	mov.b64 	%rd10211, {%r7224, %r7223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7225}, %rd10194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd10194;
	}
	shf.l.wrap.b32 	%r7227, %r7226, %r7225, 18;
	shf.l.wrap.b32 	%r7228, %r7225, %r7226, 18;
	mov.b64 	%rd10212, {%r7228, %r7227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7229}, %rd10178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7230,%dummy}, %rd10178;
	}
	shf.l.wrap.b32 	%r7231, %r7230, %r7229, 27;
	shf.l.wrap.b32 	%r7232, %r7229, %r7230, 27;
	mov.b64 	%rd10213, {%r7232, %r7231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7233,%dummy}, %rd10179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7234}, %rd10179;
	}
	shf.r.wrap.b32 	%r7235, %r7234, %r7233, 28;
	shf.r.wrap.b32 	%r7236, %r7233, %r7234, 28;
	mov.b64 	%rd10214, {%r7236, %r7235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7237}, %rd10185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7238,%dummy}, %rd10185;
	}
	shf.l.wrap.b32 	%r7239, %r7238, %r7237, 10;
	shf.l.wrap.b32 	%r7240, %r7237, %r7238, 10;
	mov.b64 	%rd10215, {%r7240, %r7239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7241}, %rd10191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd10191;
	}
	shf.l.wrap.b32 	%r7243, %r7242, %r7241, 15;
	shf.l.wrap.b32 	%r7244, %r7241, %r7242, 15;
	mov.b64 	%rd10216, {%r7244, %r7243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7245,%dummy}, %rd10197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7246}, %rd10197;
	}
	shf.r.wrap.b32 	%r7247, %r7246, %r7245, 8;
	shf.r.wrap.b32 	%r7248, %r7245, %r7246, 8;
	mov.b64 	%rd10217, {%r7248, %r7247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7249,%dummy}, %rd10176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7250}, %rd10176;
	}
	shf.r.wrap.b32 	%r7251, %r7250, %r7249, 2;
	shf.r.wrap.b32 	%r7252, %r7249, %r7250, 2;
	mov.b64 	%rd10218, {%r7252, %r7251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7253,%dummy}, %rd10182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7254}, %rd10182;
	}
	shf.r.wrap.b32 	%r7255, %r7254, %r7253, 9;
	shf.r.wrap.b32 	%r7256, %r7253, %r7254, 9;
	mov.b64 	%rd10219, {%r7256, %r7255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7257,%dummy}, %rd10188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7258}, %rd10188;
	}
	shf.r.wrap.b32 	%r7259, %r7258, %r7257, 25;
	shf.r.wrap.b32 	%r7260, %r7257, %r7258, 25;
	mov.b64 	%rd10220, {%r7260, %r7259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7261,%dummy}, %rd10189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7262}, %rd10189;
	}
	shf.r.wrap.b32 	%r7263, %r7262, %r7261, 23;
	shf.r.wrap.b32 	%r7264, %r7261, %r7262, 23;
	mov.b64 	%rd10221, {%r7264, %r7263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7265}, %rd10195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd10195;
	}
	shf.l.wrap.b32 	%r7267, %r7266, %r7265, 2;
	shf.l.wrap.b32 	%r7268, %r7265, %r7266, 2;
	mov.b64 	%rd10222, {%r7268, %r7267};
	not.b64 	%rd10223, %rd10199;
	and.b64  	%rd10224, %rd10200, %rd10223;
	xor.b64  	%rd10225, %rd10224, %rd10174;
	not.b64 	%rd10226, %rd10200;
	and.b64  	%rd10227, %rd10201, %rd10226;
	xor.b64  	%rd10228, %rd10227, %rd10199;
	not.b64 	%rd10229, %rd10201;
	and.b64  	%rd10230, %rd10202, %rd10229;
	xor.b64  	%rd10231, %rd10230, %rd10200;
	not.b64 	%rd10232, %rd10202;
	and.b64  	%rd10233, %rd10174, %rd10232;
	xor.b64  	%rd10234, %rd10233, %rd10201;
	not.b64 	%rd10235, %rd10174;
	and.b64  	%rd10236, %rd10199, %rd10235;
	xor.b64  	%rd10237, %rd10236, %rd10202;
	not.b64 	%rd10238, %rd10204;
	and.b64  	%rd10239, %rd10205, %rd10238;
	xor.b64  	%rd10240, %rd10239, %rd10203;
	not.b64 	%rd10241, %rd10205;
	and.b64  	%rd10242, %rd10206, %rd10241;
	xor.b64  	%rd10243, %rd10242, %rd10204;
	not.b64 	%rd10244, %rd10206;
	and.b64  	%rd10245, %rd10207, %rd10244;
	xor.b64  	%rd10246, %rd10245, %rd10205;
	not.b64 	%rd10247, %rd10207;
	and.b64  	%rd10248, %rd10203, %rd10247;
	xor.b64  	%rd10249, %rd10248, %rd10206;
	not.b64 	%rd10250, %rd10203;
	and.b64  	%rd10251, %rd10204, %rd10250;
	xor.b64  	%rd10252, %rd10251, %rd10207;
	not.b64 	%rd10253, %rd10209;
	and.b64  	%rd10254, %rd10210, %rd10253;
	xor.b64  	%rd10255, %rd10254, %rd10208;
	not.b64 	%rd10256, %rd10210;
	and.b64  	%rd10257, %rd10211, %rd10256;
	xor.b64  	%rd10258, %rd10257, %rd10209;
	not.b64 	%rd10259, %rd10211;
	and.b64  	%rd10260, %rd10212, %rd10259;
	xor.b64  	%rd10261, %rd10260, %rd10210;
	not.b64 	%rd10262, %rd10212;
	and.b64  	%rd10263, %rd10208, %rd10262;
	xor.b64  	%rd10264, %rd10263, %rd10211;
	not.b64 	%rd10265, %rd10208;
	and.b64  	%rd10266, %rd10209, %rd10265;
	xor.b64  	%rd10267, %rd10266, %rd10212;
	not.b64 	%rd10268, %rd10214;
	and.b64  	%rd10269, %rd10215, %rd10268;
	xor.b64  	%rd10270, %rd10269, %rd10213;
	not.b64 	%rd10271, %rd10215;
	and.b64  	%rd10272, %rd10216, %rd10271;
	xor.b64  	%rd10273, %rd10272, %rd10214;
	not.b64 	%rd10274, %rd10216;
	and.b64  	%rd10275, %rd10217, %rd10274;
	xor.b64  	%rd10276, %rd10275, %rd10215;
	not.b64 	%rd10277, %rd10217;
	and.b64  	%rd10278, %rd10213, %rd10277;
	xor.b64  	%rd10279, %rd10278, %rd10216;
	not.b64 	%rd10280, %rd10213;
	and.b64  	%rd10281, %rd10214, %rd10280;
	xor.b64  	%rd10282, %rd10281, %rd10217;
	not.b64 	%rd10283, %rd10219;
	and.b64  	%rd10284, %rd10220, %rd10283;
	xor.b64  	%rd10285, %rd10284, %rd10218;
	not.b64 	%rd10286, %rd10220;
	and.b64  	%rd10287, %rd10221, %rd10286;
	xor.b64  	%rd10288, %rd10287, %rd10219;
	not.b64 	%rd10289, %rd10221;
	and.b64  	%rd10290, %rd10222, %rd10289;
	xor.b64  	%rd10291, %rd10290, %rd10220;
	not.b64 	%rd10292, %rd10222;
	and.b64  	%rd10293, %rd10218, %rd10292;
	xor.b64  	%rd10294, %rd10293, %rd10221;
	not.b64 	%rd10295, %rd10218;
	and.b64  	%rd10296, %rd10219, %rd10295;
	xor.b64  	%rd10297, %rd10296, %rd10222;
	xor.b64  	%rd10299, %rd10225, %rd29;
	xor.b64  	%rd10300, %rd10240, %rd10299;
	xor.b64  	%rd10301, %rd10300, %rd10255;
	xor.b64  	%rd10302, %rd10301, %rd10270;
	xor.b64  	%rd10303, %rd10302, %rd10285;
	xor.b64  	%rd10304, %rd10243, %rd10228;
	xor.b64  	%rd10305, %rd10304, %rd10258;
	xor.b64  	%rd10306, %rd10305, %rd10273;
	xor.b64  	%rd10307, %rd10306, %rd10288;
	xor.b64  	%rd10308, %rd10246, %rd10231;
	xor.b64  	%rd10309, %rd10308, %rd10261;
	xor.b64  	%rd10310, %rd10309, %rd10276;
	xor.b64  	%rd10311, %rd10310, %rd10291;
	xor.b64  	%rd10312, %rd10249, %rd10234;
	xor.b64  	%rd10313, %rd10312, %rd10264;
	xor.b64  	%rd10314, %rd10313, %rd10279;
	xor.b64  	%rd10315, %rd10314, %rd10294;
	xor.b64  	%rd10316, %rd10252, %rd10237;
	xor.b64  	%rd10317, %rd10316, %rd10267;
	xor.b64  	%rd10318, %rd10317, %rd10282;
	xor.b64  	%rd10319, %rd10318, %rd10297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7269}, %rd10307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7270,%dummy}, %rd10307;
	}
	shf.l.wrap.b32 	%r7271, %r7270, %r7269, 1;
	shf.l.wrap.b32 	%r7272, %r7269, %r7270, 1;
	mov.b64 	%rd10320, {%r7272, %r7271};
	xor.b64  	%rd10321, %rd10319, %rd10320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7273}, %rd10311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd10311;
	}
	shf.l.wrap.b32 	%r7275, %r7274, %r7273, 1;
	shf.l.wrap.b32 	%r7276, %r7273, %r7274, 1;
	mov.b64 	%rd10322, {%r7276, %r7275};
	xor.b64  	%rd10323, %rd10322, %rd10303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7277}, %rd10315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7278,%dummy}, %rd10315;
	}
	shf.l.wrap.b32 	%r7279, %r7278, %r7277, 1;
	shf.l.wrap.b32 	%r7280, %r7277, %r7278, 1;
	mov.b64 	%rd10324, {%r7280, %r7279};
	xor.b64  	%rd10325, %rd10324, %rd10307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7281}, %rd10319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd10319;
	}
	shf.l.wrap.b32 	%r7283, %r7282, %r7281, 1;
	shf.l.wrap.b32 	%r7284, %r7281, %r7282, 1;
	mov.b64 	%rd10326, {%r7284, %r7283};
	xor.b64  	%rd10327, %rd10326, %rd10311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7285}, %rd10303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7286,%dummy}, %rd10303;
	}
	shf.l.wrap.b32 	%r7287, %r7286, %r7285, 1;
	shf.l.wrap.b32 	%r7288, %r7285, %r7286, 1;
	mov.b64 	%rd10328, {%r7288, %r7287};
	xor.b64  	%rd10329, %rd10315, %rd10328;
	xor.b64  	%rd10330, %rd10321, %rd10299;
	xor.b64  	%rd10331, %rd10323, %rd10228;
	xor.b64  	%rd10332, %rd10325, %rd10231;
	xor.b64  	%rd10333, %rd10327, %rd10234;
	xor.b64  	%rd10334, %rd10329, %rd10237;
	xor.b64  	%rd10335, %rd10321, %rd10240;
	xor.b64  	%rd10336, %rd10323, %rd10243;
	xor.b64  	%rd10337, %rd10325, %rd10246;
	xor.b64  	%rd10338, %rd10327, %rd10249;
	xor.b64  	%rd10339, %rd10329, %rd10252;
	xor.b64  	%rd10340, %rd10321, %rd10255;
	xor.b64  	%rd10341, %rd10323, %rd10258;
	xor.b64  	%rd10342, %rd10325, %rd10261;
	xor.b64  	%rd10343, %rd10327, %rd10264;
	xor.b64  	%rd10344, %rd10329, %rd10267;
	xor.b64  	%rd10345, %rd10321, %rd10270;
	xor.b64  	%rd10346, %rd10323, %rd10273;
	xor.b64  	%rd10347, %rd10325, %rd10276;
	xor.b64  	%rd10348, %rd10327, %rd10279;
	xor.b64  	%rd10349, %rd10329, %rd10282;
	xor.b64  	%rd10350, %rd10321, %rd10285;
	xor.b64  	%rd10351, %rd10323, %rd10288;
	xor.b64  	%rd10352, %rd10325, %rd10291;
	xor.b64  	%rd10353, %rd10327, %rd10294;
	xor.b64  	%rd10354, %rd10329, %rd10297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7289,%dummy}, %rd10336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7290}, %rd10336;
	}
	shf.r.wrap.b32 	%r7291, %r7290, %r7289, 20;
	shf.r.wrap.b32 	%r7292, %r7289, %r7290, 20;
	mov.b64 	%rd10355, {%r7292, %r7291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7293,%dummy}, %rd10342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7294}, %rd10342;
	}
	shf.r.wrap.b32 	%r7295, %r7294, %r7293, 21;
	shf.r.wrap.b32 	%r7296, %r7293, %r7294, 21;
	mov.b64 	%rd10356, {%r7296, %r7295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7297}, %rd10348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd10348;
	}
	shf.l.wrap.b32 	%r7299, %r7298, %r7297, 21;
	shf.l.wrap.b32 	%r7300, %r7297, %r7298, 21;
	mov.b64 	%rd10357, {%r7300, %r7299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7301}, %rd10354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7302,%dummy}, %rd10354;
	}
	shf.l.wrap.b32 	%r7303, %r7302, %r7301, 14;
	shf.l.wrap.b32 	%r7304, %r7301, %r7302, 14;
	mov.b64 	%rd10358, {%r7304, %r7303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7305}, %rd10333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd10333;
	}
	shf.l.wrap.b32 	%r7307, %r7306, %r7305, 28;
	shf.l.wrap.b32 	%r7308, %r7305, %r7306, 28;
	mov.b64 	%rd10359, {%r7308, %r7307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7309}, %rd10339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7310,%dummy}, %rd10339;
	}
	shf.l.wrap.b32 	%r7311, %r7310, %r7309, 20;
	shf.l.wrap.b32 	%r7312, %r7309, %r7310, 20;
	mov.b64 	%rd10360, {%r7312, %r7311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7313}, %rd10340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd10340;
	}
	shf.l.wrap.b32 	%r7315, %r7314, %r7313, 3;
	shf.l.wrap.b32 	%r7316, %r7313, %r7314, 3;
	mov.b64 	%rd10361, {%r7316, %r7315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7317,%dummy}, %rd10346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7318}, %rd10346;
	}
	shf.r.wrap.b32 	%r7319, %r7318, %r7317, 19;
	shf.r.wrap.b32 	%r7320, %r7317, %r7318, 19;
	mov.b64 	%rd10362, {%r7320, %r7319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7321,%dummy}, %rd10352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7322}, %rd10352;
	}
	shf.r.wrap.b32 	%r7323, %r7322, %r7321, 3;
	shf.r.wrap.b32 	%r7324, %r7321, %r7322, 3;
	mov.b64 	%rd10363, {%r7324, %r7323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7325}, %rd10331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7326,%dummy}, %rd10331;
	}
	shf.l.wrap.b32 	%r7327, %r7326, %r7325, 1;
	shf.l.wrap.b32 	%r7328, %r7325, %r7326, 1;
	mov.b64 	%rd10364, {%r7328, %r7327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7329}, %rd10337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd10337;
	}
	shf.l.wrap.b32 	%r7331, %r7330, %r7329, 6;
	shf.l.wrap.b32 	%r7332, %r7329, %r7330, 6;
	mov.b64 	%rd10365, {%r7332, %r7331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7333}, %rd10343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7334,%dummy}, %rd10343;
	}
	shf.l.wrap.b32 	%r7335, %r7334, %r7333, 25;
	shf.l.wrap.b32 	%r7336, %r7333, %r7334, 25;
	mov.b64 	%rd10366, {%r7336, %r7335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7337}, %rd10349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd10349;
	}
	shf.l.wrap.b32 	%r7339, %r7338, %r7337, 8;
	shf.l.wrap.b32 	%r7340, %r7337, %r7338, 8;
	mov.b64 	%rd10367, {%r7340, %r7339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7341}, %rd10350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7342,%dummy}, %rd10350;
	}
	shf.l.wrap.b32 	%r7343, %r7342, %r7341, 18;
	shf.l.wrap.b32 	%r7344, %r7341, %r7342, 18;
	mov.b64 	%rd10368, {%r7344, %r7343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7345}, %rd10334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd10334;
	}
	shf.l.wrap.b32 	%r7347, %r7346, %r7345, 27;
	shf.l.wrap.b32 	%r7348, %r7345, %r7346, 27;
	mov.b64 	%rd10369, {%r7348, %r7347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7349,%dummy}, %rd10335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7350}, %rd10335;
	}
	shf.r.wrap.b32 	%r7351, %r7350, %r7349, 28;
	shf.r.wrap.b32 	%r7352, %r7349, %r7350, 28;
	mov.b64 	%rd10370, {%r7352, %r7351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7353}, %rd10341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd10341;
	}
	shf.l.wrap.b32 	%r7355, %r7354, %r7353, 10;
	shf.l.wrap.b32 	%r7356, %r7353, %r7354, 10;
	mov.b64 	%rd10371, {%r7356, %r7355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7357}, %rd10347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7358,%dummy}, %rd10347;
	}
	shf.l.wrap.b32 	%r7359, %r7358, %r7357, 15;
	shf.l.wrap.b32 	%r7360, %r7357, %r7358, 15;
	mov.b64 	%rd10372, {%r7360, %r7359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7361,%dummy}, %rd10353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7362}, %rd10353;
	}
	shf.r.wrap.b32 	%r7363, %r7362, %r7361, 8;
	shf.r.wrap.b32 	%r7364, %r7361, %r7362, 8;
	mov.b64 	%rd10373, {%r7364, %r7363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7365,%dummy}, %rd10332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7366}, %rd10332;
	}
	shf.r.wrap.b32 	%r7367, %r7366, %r7365, 2;
	shf.r.wrap.b32 	%r7368, %r7365, %r7366, 2;
	mov.b64 	%rd10374, {%r7368, %r7367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7369,%dummy}, %rd10338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7370}, %rd10338;
	}
	shf.r.wrap.b32 	%r7371, %r7370, %r7369, 9;
	shf.r.wrap.b32 	%r7372, %r7369, %r7370, 9;
	mov.b64 	%rd10375, {%r7372, %r7371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7373,%dummy}, %rd10344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7374}, %rd10344;
	}
	shf.r.wrap.b32 	%r7375, %r7374, %r7373, 25;
	shf.r.wrap.b32 	%r7376, %r7373, %r7374, 25;
	mov.b64 	%rd10376, {%r7376, %r7375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7377,%dummy}, %rd10345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7378}, %rd10345;
	}
	shf.r.wrap.b32 	%r7379, %r7378, %r7377, 23;
	shf.r.wrap.b32 	%r7380, %r7377, %r7378, 23;
	mov.b64 	%rd10377, {%r7380, %r7379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7381}, %rd10351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7382,%dummy}, %rd10351;
	}
	shf.l.wrap.b32 	%r7383, %r7382, %r7381, 2;
	shf.l.wrap.b32 	%r7384, %r7381, %r7382, 2;
	mov.b64 	%rd10378, {%r7384, %r7383};
	not.b64 	%rd10379, %rd10355;
	and.b64  	%rd10380, %rd10356, %rd10379;
	xor.b64  	%rd10381, %rd10380, %rd10330;
	not.b64 	%rd10382, %rd10356;
	and.b64  	%rd10383, %rd10357, %rd10382;
	xor.b64  	%rd10384, %rd10383, %rd10355;
	not.b64 	%rd10385, %rd10357;
	and.b64  	%rd10386, %rd10358, %rd10385;
	xor.b64  	%rd10387, %rd10386, %rd10356;
	not.b64 	%rd10388, %rd10358;
	and.b64  	%rd10389, %rd10330, %rd10388;
	xor.b64  	%rd10390, %rd10389, %rd10357;
	not.b64 	%rd10391, %rd10330;
	and.b64  	%rd10392, %rd10355, %rd10391;
	xor.b64  	%rd10393, %rd10392, %rd10358;
	not.b64 	%rd10394, %rd10360;
	and.b64  	%rd10395, %rd10361, %rd10394;
	xor.b64  	%rd10396, %rd10395, %rd10359;
	not.b64 	%rd10397, %rd10361;
	and.b64  	%rd10398, %rd10362, %rd10397;
	xor.b64  	%rd10399, %rd10398, %rd10360;
	not.b64 	%rd10400, %rd10362;
	and.b64  	%rd10401, %rd10363, %rd10400;
	xor.b64  	%rd10402, %rd10401, %rd10361;
	not.b64 	%rd10403, %rd10363;
	and.b64  	%rd10404, %rd10359, %rd10403;
	xor.b64  	%rd10405, %rd10404, %rd10362;
	not.b64 	%rd10406, %rd10359;
	and.b64  	%rd10407, %rd10360, %rd10406;
	xor.b64  	%rd10408, %rd10407, %rd10363;
	not.b64 	%rd10409, %rd10365;
	and.b64  	%rd10410, %rd10366, %rd10409;
	xor.b64  	%rd10411, %rd10410, %rd10364;
	not.b64 	%rd10412, %rd10366;
	and.b64  	%rd10413, %rd10367, %rd10412;
	xor.b64  	%rd10414, %rd10413, %rd10365;
	not.b64 	%rd10415, %rd10367;
	and.b64  	%rd10416, %rd10368, %rd10415;
	xor.b64  	%rd10417, %rd10416, %rd10366;
	not.b64 	%rd10418, %rd10368;
	and.b64  	%rd10419, %rd10364, %rd10418;
	xor.b64  	%rd10420, %rd10419, %rd10367;
	not.b64 	%rd10421, %rd10364;
	and.b64  	%rd10422, %rd10365, %rd10421;
	xor.b64  	%rd10423, %rd10422, %rd10368;
	not.b64 	%rd10424, %rd10370;
	and.b64  	%rd10425, %rd10371, %rd10424;
	xor.b64  	%rd10426, %rd10425, %rd10369;
	not.b64 	%rd10427, %rd10371;
	and.b64  	%rd10428, %rd10372, %rd10427;
	xor.b64  	%rd10429, %rd10428, %rd10370;
	not.b64 	%rd10430, %rd10372;
	and.b64  	%rd10431, %rd10373, %rd10430;
	xor.b64  	%rd10432, %rd10431, %rd10371;
	not.b64 	%rd10433, %rd10373;
	and.b64  	%rd10434, %rd10369, %rd10433;
	xor.b64  	%rd10435, %rd10434, %rd10372;
	not.b64 	%rd10436, %rd10369;
	and.b64  	%rd10437, %rd10370, %rd10436;
	xor.b64  	%rd10438, %rd10437, %rd10373;
	not.b64 	%rd10439, %rd10375;
	and.b64  	%rd10440, %rd10376, %rd10439;
	xor.b64  	%rd10441, %rd10440, %rd10374;
	not.b64 	%rd10442, %rd10376;
	and.b64  	%rd10443, %rd10377, %rd10442;
	xor.b64  	%rd10444, %rd10443, %rd10375;
	not.b64 	%rd10445, %rd10377;
	and.b64  	%rd10446, %rd10378, %rd10445;
	xor.b64  	%rd10447, %rd10446, %rd10376;
	not.b64 	%rd10448, %rd10378;
	and.b64  	%rd10449, %rd10374, %rd10448;
	xor.b64  	%rd10450, %rd10449, %rd10377;
	not.b64 	%rd10451, %rd10374;
	and.b64  	%rd10452, %rd10375, %rd10451;
	xor.b64  	%rd10453, %rd10452, %rd10378;
	xor.b64  	%rd10455, %rd10381, %rd30;
	xor.b64  	%rd10456, %rd10396, %rd10455;
	xor.b64  	%rd10457, %rd10456, %rd10411;
	xor.b64  	%rd10458, %rd10457, %rd10426;
	xor.b64  	%rd10459, %rd10458, %rd10441;
	xor.b64  	%rd10460, %rd10399, %rd10384;
	xor.b64  	%rd10461, %rd10460, %rd10414;
	xor.b64  	%rd10462, %rd10461, %rd10429;
	xor.b64  	%rd10463, %rd10462, %rd10444;
	xor.b64  	%rd10464, %rd10402, %rd10387;
	xor.b64  	%rd10465, %rd10464, %rd10417;
	xor.b64  	%rd10466, %rd10465, %rd10432;
	xor.b64  	%rd10467, %rd10466, %rd10447;
	xor.b64  	%rd10468, %rd10405, %rd10390;
	xor.b64  	%rd10469, %rd10468, %rd10420;
	xor.b64  	%rd10470, %rd10469, %rd10435;
	xor.b64  	%rd10471, %rd10470, %rd10450;
	xor.b64  	%rd10472, %rd10408, %rd10393;
	xor.b64  	%rd10473, %rd10472, %rd10423;
	xor.b64  	%rd10474, %rd10473, %rd10438;
	xor.b64  	%rd10475, %rd10474, %rd10453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7385}, %rd10463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd10463;
	}
	shf.l.wrap.b32 	%r7387, %r7386, %r7385, 1;
	shf.l.wrap.b32 	%r7388, %r7385, %r7386, 1;
	mov.b64 	%rd10476, {%r7388, %r7387};
	xor.b64  	%rd10477, %rd10475, %rd10476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7389}, %rd10467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7390,%dummy}, %rd10467;
	}
	shf.l.wrap.b32 	%r7391, %r7390, %r7389, 1;
	shf.l.wrap.b32 	%r7392, %r7389, %r7390, 1;
	mov.b64 	%rd10478, {%r7392, %r7391};
	xor.b64  	%rd10479, %rd10478, %rd10459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7393}, %rd10471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd10471;
	}
	shf.l.wrap.b32 	%r7395, %r7394, %r7393, 1;
	shf.l.wrap.b32 	%r7396, %r7393, %r7394, 1;
	mov.b64 	%rd10480, {%r7396, %r7395};
	xor.b64  	%rd10481, %rd10480, %rd10463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7397}, %rd10475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7398,%dummy}, %rd10475;
	}
	shf.l.wrap.b32 	%r7399, %r7398, %r7397, 1;
	shf.l.wrap.b32 	%r7400, %r7397, %r7398, 1;
	mov.b64 	%rd10482, {%r7400, %r7399};
	xor.b64  	%rd10483, %rd10482, %rd10467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7401}, %rd10459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd10459;
	}
	shf.l.wrap.b32 	%r7403, %r7402, %r7401, 1;
	shf.l.wrap.b32 	%r7404, %r7401, %r7402, 1;
	mov.b64 	%rd10484, {%r7404, %r7403};
	xor.b64  	%rd10485, %rd10471, %rd10484;
	xor.b64  	%rd10486, %rd10477, %rd10455;
	xor.b64  	%rd10487, %rd10479, %rd10384;
	xor.b64  	%rd10488, %rd10481, %rd10387;
	xor.b64  	%rd10489, %rd10483, %rd10390;
	xor.b64  	%rd10490, %rd10485, %rd10393;
	xor.b64  	%rd10491, %rd10477, %rd10396;
	xor.b64  	%rd10492, %rd10479, %rd10399;
	xor.b64  	%rd10493, %rd10481, %rd10402;
	xor.b64  	%rd10494, %rd10483, %rd10405;
	xor.b64  	%rd10495, %rd10485, %rd10408;
	xor.b64  	%rd10496, %rd10477, %rd10411;
	xor.b64  	%rd10497, %rd10479, %rd10414;
	xor.b64  	%rd10498, %rd10481, %rd10417;
	xor.b64  	%rd10499, %rd10483, %rd10420;
	xor.b64  	%rd10500, %rd10485, %rd10423;
	xor.b64  	%rd10501, %rd10477, %rd10426;
	xor.b64  	%rd10502, %rd10479, %rd10429;
	xor.b64  	%rd10503, %rd10481, %rd10432;
	xor.b64  	%rd10504, %rd10483, %rd10435;
	xor.b64  	%rd10505, %rd10485, %rd10438;
	xor.b64  	%rd10506, %rd10477, %rd10441;
	xor.b64  	%rd10507, %rd10479, %rd10444;
	xor.b64  	%rd10508, %rd10481, %rd10447;
	xor.b64  	%rd10509, %rd10483, %rd10450;
	xor.b64  	%rd10510, %rd10485, %rd10453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7405,%dummy}, %rd10492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7406}, %rd10492;
	}
	shf.r.wrap.b32 	%r7407, %r7406, %r7405, 20;
	shf.r.wrap.b32 	%r7408, %r7405, %r7406, 20;
	mov.b64 	%rd10511, {%r7408, %r7407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7409,%dummy}, %rd10498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7410}, %rd10498;
	}
	shf.r.wrap.b32 	%r7411, %r7410, %r7409, 21;
	shf.r.wrap.b32 	%r7412, %r7409, %r7410, 21;
	mov.b64 	%rd10512, {%r7412, %r7411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7413}, %rd10504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7414,%dummy}, %rd10504;
	}
	shf.l.wrap.b32 	%r7415, %r7414, %r7413, 21;
	shf.l.wrap.b32 	%r7416, %r7413, %r7414, 21;
	mov.b64 	%rd10513, {%r7416, %r7415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7417}, %rd10510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd10510;
	}
	shf.l.wrap.b32 	%r7419, %r7418, %r7417, 14;
	shf.l.wrap.b32 	%r7420, %r7417, %r7418, 14;
	mov.b64 	%rd10514, {%r7420, %r7419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7421}, %rd10489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7422,%dummy}, %rd10489;
	}
	shf.l.wrap.b32 	%r7423, %r7422, %r7421, 28;
	shf.l.wrap.b32 	%r7424, %r7421, %r7422, 28;
	mov.b64 	%rd10515, {%r7424, %r7423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7425}, %rd10495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd10495;
	}
	shf.l.wrap.b32 	%r7427, %r7426, %r7425, 20;
	shf.l.wrap.b32 	%r7428, %r7425, %r7426, 20;
	mov.b64 	%rd10516, {%r7428, %r7427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7429}, %rd10496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7430,%dummy}, %rd10496;
	}
	shf.l.wrap.b32 	%r7431, %r7430, %r7429, 3;
	shf.l.wrap.b32 	%r7432, %r7429, %r7430, 3;
	mov.b64 	%rd10517, {%r7432, %r7431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7433,%dummy}, %rd10502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7434}, %rd10502;
	}
	shf.r.wrap.b32 	%r7435, %r7434, %r7433, 19;
	shf.r.wrap.b32 	%r7436, %r7433, %r7434, 19;
	mov.b64 	%rd10518, {%r7436, %r7435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7437,%dummy}, %rd10508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7438}, %rd10508;
	}
	shf.r.wrap.b32 	%r7439, %r7438, %r7437, 3;
	shf.r.wrap.b32 	%r7440, %r7437, %r7438, 3;
	mov.b64 	%rd10519, {%r7440, %r7439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7441}, %rd10487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7442,%dummy}, %rd10487;
	}
	shf.l.wrap.b32 	%r7443, %r7442, %r7441, 1;
	shf.l.wrap.b32 	%r7444, %r7441, %r7442, 1;
	mov.b64 	%rd10520, {%r7444, %r7443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7445}, %rd10493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7446,%dummy}, %rd10493;
	}
	shf.l.wrap.b32 	%r7447, %r7446, %r7445, 6;
	shf.l.wrap.b32 	%r7448, %r7445, %r7446, 6;
	mov.b64 	%rd10521, {%r7448, %r7447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7449}, %rd10499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7450,%dummy}, %rd10499;
	}
	shf.l.wrap.b32 	%r7451, %r7450, %r7449, 25;
	shf.l.wrap.b32 	%r7452, %r7449, %r7450, 25;
	mov.b64 	%rd10522, {%r7452, %r7451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7453}, %rd10505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7454,%dummy}, %rd10505;
	}
	shf.l.wrap.b32 	%r7455, %r7454, %r7453, 8;
	shf.l.wrap.b32 	%r7456, %r7453, %r7454, 8;
	mov.b64 	%rd10523, {%r7456, %r7455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7457}, %rd10506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7458,%dummy}, %rd10506;
	}
	shf.l.wrap.b32 	%r7459, %r7458, %r7457, 18;
	shf.l.wrap.b32 	%r7460, %r7457, %r7458, 18;
	mov.b64 	%rd10524, {%r7460, %r7459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7461}, %rd10490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7462,%dummy}, %rd10490;
	}
	shf.l.wrap.b32 	%r7463, %r7462, %r7461, 27;
	shf.l.wrap.b32 	%r7464, %r7461, %r7462, 27;
	mov.b64 	%rd10525, {%r7464, %r7463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7465,%dummy}, %rd10491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7466}, %rd10491;
	}
	shf.r.wrap.b32 	%r7467, %r7466, %r7465, 28;
	shf.r.wrap.b32 	%r7468, %r7465, %r7466, 28;
	mov.b64 	%rd10526, {%r7468, %r7467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7469}, %rd10497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7470,%dummy}, %rd10497;
	}
	shf.l.wrap.b32 	%r7471, %r7470, %r7469, 10;
	shf.l.wrap.b32 	%r7472, %r7469, %r7470, 10;
	mov.b64 	%rd10527, {%r7472, %r7471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7473}, %rd10503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7474,%dummy}, %rd10503;
	}
	shf.l.wrap.b32 	%r7475, %r7474, %r7473, 15;
	shf.l.wrap.b32 	%r7476, %r7473, %r7474, 15;
	mov.b64 	%rd10528, {%r7476, %r7475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7477,%dummy}, %rd10509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7478}, %rd10509;
	}
	shf.r.wrap.b32 	%r7479, %r7478, %r7477, 8;
	shf.r.wrap.b32 	%r7480, %r7477, %r7478, 8;
	mov.b64 	%rd10529, {%r7480, %r7479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7481,%dummy}, %rd10488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7482}, %rd10488;
	}
	shf.r.wrap.b32 	%r7483, %r7482, %r7481, 2;
	shf.r.wrap.b32 	%r7484, %r7481, %r7482, 2;
	mov.b64 	%rd10530, {%r7484, %r7483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7485,%dummy}, %rd10494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7486}, %rd10494;
	}
	shf.r.wrap.b32 	%r7487, %r7486, %r7485, 9;
	shf.r.wrap.b32 	%r7488, %r7485, %r7486, 9;
	mov.b64 	%rd10531, {%r7488, %r7487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7489,%dummy}, %rd10500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7490}, %rd10500;
	}
	shf.r.wrap.b32 	%r7491, %r7490, %r7489, 25;
	shf.r.wrap.b32 	%r7492, %r7489, %r7490, 25;
	mov.b64 	%rd10532, {%r7492, %r7491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7493,%dummy}, %rd10501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7494}, %rd10501;
	}
	shf.r.wrap.b32 	%r7495, %r7494, %r7493, 23;
	shf.r.wrap.b32 	%r7496, %r7493, %r7494, 23;
	mov.b64 	%rd10533, {%r7496, %r7495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7497}, %rd10507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7498,%dummy}, %rd10507;
	}
	shf.l.wrap.b32 	%r7499, %r7498, %r7497, 2;
	shf.l.wrap.b32 	%r7500, %r7497, %r7498, 2;
	mov.b64 	%rd10534, {%r7500, %r7499};
	not.b64 	%rd10535, %rd10511;
	and.b64  	%rd10536, %rd10512, %rd10535;
	xor.b64  	%rd10537, %rd10536, %rd10486;
	not.b64 	%rd10538, %rd10512;
	and.b64  	%rd10539, %rd10513, %rd10538;
	xor.b64  	%rd10540, %rd10539, %rd10511;
	not.b64 	%rd10541, %rd10513;
	and.b64  	%rd10542, %rd10514, %rd10541;
	xor.b64  	%rd10543, %rd10542, %rd10512;
	not.b64 	%rd10544, %rd10514;
	and.b64  	%rd10545, %rd10486, %rd10544;
	xor.b64  	%rd10546, %rd10545, %rd10513;
	not.b64 	%rd10547, %rd10486;
	and.b64  	%rd10548, %rd10511, %rd10547;
	xor.b64  	%rd10549, %rd10548, %rd10514;
	not.b64 	%rd10550, %rd10516;
	and.b64  	%rd10551, %rd10517, %rd10550;
	xor.b64  	%rd10552, %rd10551, %rd10515;
	not.b64 	%rd10553, %rd10517;
	and.b64  	%rd10554, %rd10518, %rd10553;
	xor.b64  	%rd10555, %rd10554, %rd10516;
	not.b64 	%rd10556, %rd10518;
	and.b64  	%rd10557, %rd10519, %rd10556;
	xor.b64  	%rd10558, %rd10557, %rd10517;
	not.b64 	%rd10559, %rd10519;
	and.b64  	%rd10560, %rd10515, %rd10559;
	xor.b64  	%rd10561, %rd10560, %rd10518;
	not.b64 	%rd10562, %rd10515;
	and.b64  	%rd10563, %rd10516, %rd10562;
	xor.b64  	%rd10564, %rd10563, %rd10519;
	not.b64 	%rd10565, %rd10521;
	and.b64  	%rd10566, %rd10522, %rd10565;
	xor.b64  	%rd10567, %rd10566, %rd10520;
	not.b64 	%rd10568, %rd10522;
	and.b64  	%rd10569, %rd10523, %rd10568;
	xor.b64  	%rd10570, %rd10569, %rd10521;
	not.b64 	%rd10571, %rd10523;
	and.b64  	%rd10572, %rd10524, %rd10571;
	xor.b64  	%rd10573, %rd10572, %rd10522;
	not.b64 	%rd10574, %rd10524;
	and.b64  	%rd10575, %rd10520, %rd10574;
	xor.b64  	%rd10576, %rd10575, %rd10523;
	not.b64 	%rd10577, %rd10520;
	and.b64  	%rd10578, %rd10521, %rd10577;
	xor.b64  	%rd10579, %rd10578, %rd10524;
	not.b64 	%rd10580, %rd10526;
	and.b64  	%rd10581, %rd10527, %rd10580;
	xor.b64  	%rd10582, %rd10581, %rd10525;
	not.b64 	%rd10583, %rd10527;
	and.b64  	%rd10584, %rd10528, %rd10583;
	xor.b64  	%rd10585, %rd10584, %rd10526;
	not.b64 	%rd10586, %rd10528;
	and.b64  	%rd10587, %rd10529, %rd10586;
	xor.b64  	%rd10588, %rd10587, %rd10527;
	not.b64 	%rd10589, %rd10529;
	and.b64  	%rd10590, %rd10525, %rd10589;
	xor.b64  	%rd10591, %rd10590, %rd10528;
	not.b64 	%rd10592, %rd10525;
	and.b64  	%rd10593, %rd10526, %rd10592;
	xor.b64  	%rd10594, %rd10593, %rd10529;
	not.b64 	%rd10595, %rd10531;
	and.b64  	%rd10596, %rd10532, %rd10595;
	xor.b64  	%rd10597, %rd10596, %rd10530;
	not.b64 	%rd10598, %rd10532;
	and.b64  	%rd10599, %rd10533, %rd10598;
	xor.b64  	%rd10600, %rd10599, %rd10531;
	not.b64 	%rd10601, %rd10533;
	and.b64  	%rd10602, %rd10534, %rd10601;
	xor.b64  	%rd10603, %rd10602, %rd10532;
	not.b64 	%rd10604, %rd10534;
	and.b64  	%rd10605, %rd10530, %rd10604;
	xor.b64  	%rd10606, %rd10605, %rd10533;
	not.b64 	%rd10607, %rd10530;
	and.b64  	%rd10608, %rd10531, %rd10607;
	xor.b64  	%rd10609, %rd10608, %rd10534;
	xor.b64  	%rd10611, %rd10537, %rd31;
	xor.b64  	%rd10612, %rd10552, %rd10611;
	xor.b64  	%rd10613, %rd10612, %rd10567;
	xor.b64  	%rd10614, %rd10613, %rd10582;
	xor.b64  	%rd10615, %rd10614, %rd10597;
	xor.b64  	%rd10616, %rd10555, %rd10540;
	xor.b64  	%rd10617, %rd10616, %rd10570;
	xor.b64  	%rd10618, %rd10617, %rd10585;
	xor.b64  	%rd10619, %rd10618, %rd10600;
	xor.b64  	%rd10620, %rd10558, %rd10543;
	xor.b64  	%rd10621, %rd10620, %rd10573;
	xor.b64  	%rd10622, %rd10621, %rd10588;
	xor.b64  	%rd10623, %rd10622, %rd10603;
	xor.b64  	%rd10624, %rd10561, %rd10546;
	xor.b64  	%rd10625, %rd10624, %rd10576;
	xor.b64  	%rd10626, %rd10625, %rd10591;
	xor.b64  	%rd10627, %rd10626, %rd10606;
	xor.b64  	%rd10628, %rd10564, %rd10549;
	xor.b64  	%rd10629, %rd10628, %rd10579;
	xor.b64  	%rd10630, %rd10629, %rd10594;
	xor.b64  	%rd10631, %rd10630, %rd10609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7501}, %rd10619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7502,%dummy}, %rd10619;
	}
	shf.l.wrap.b32 	%r7503, %r7502, %r7501, 1;
	shf.l.wrap.b32 	%r7504, %r7501, %r7502, 1;
	mov.b64 	%rd10632, {%r7504, %r7503};
	xor.b64  	%rd10633, %rd10631, %rd10632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7505}, %rd10623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7506,%dummy}, %rd10623;
	}
	shf.l.wrap.b32 	%r7507, %r7506, %r7505, 1;
	shf.l.wrap.b32 	%r7508, %r7505, %r7506, 1;
	mov.b64 	%rd10634, {%r7508, %r7507};
	xor.b64  	%rd10635, %rd10634, %rd10615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7509}, %rd10627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7510,%dummy}, %rd10627;
	}
	shf.l.wrap.b32 	%r7511, %r7510, %r7509, 1;
	shf.l.wrap.b32 	%r7512, %r7509, %r7510, 1;
	mov.b64 	%rd10636, {%r7512, %r7511};
	xor.b64  	%rd10637, %rd10636, %rd10619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7513}, %rd10631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7514,%dummy}, %rd10631;
	}
	shf.l.wrap.b32 	%r7515, %r7514, %r7513, 1;
	shf.l.wrap.b32 	%r7516, %r7513, %r7514, 1;
	mov.b64 	%rd10638, {%r7516, %r7515};
	xor.b64  	%rd10639, %rd10638, %rd10623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7517}, %rd10615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7518,%dummy}, %rd10615;
	}
	shf.l.wrap.b32 	%r7519, %r7518, %r7517, 1;
	shf.l.wrap.b32 	%r7520, %r7517, %r7518, 1;
	mov.b64 	%rd10640, {%r7520, %r7519};
	xor.b64  	%rd10641, %rd10627, %rd10640;
	xor.b64  	%rd10642, %rd10633, %rd10611;
	xor.b64  	%rd10643, %rd10635, %rd10540;
	xor.b64  	%rd10644, %rd10637, %rd10543;
	xor.b64  	%rd10645, %rd10639, %rd10546;
	xor.b64  	%rd10646, %rd10641, %rd10549;
	xor.b64  	%rd10647, %rd10633, %rd10552;
	xor.b64  	%rd10648, %rd10635, %rd10555;
	xor.b64  	%rd10649, %rd10637, %rd10558;
	xor.b64  	%rd10650, %rd10639, %rd10561;
	xor.b64  	%rd10651, %rd10641, %rd10564;
	xor.b64  	%rd10652, %rd10633, %rd10567;
	xor.b64  	%rd10653, %rd10635, %rd10570;
	xor.b64  	%rd10654, %rd10637, %rd10573;
	xor.b64  	%rd10655, %rd10639, %rd10576;
	xor.b64  	%rd10656, %rd10641, %rd10579;
	xor.b64  	%rd10657, %rd10633, %rd10582;
	xor.b64  	%rd10658, %rd10635, %rd10585;
	xor.b64  	%rd10659, %rd10637, %rd10588;
	xor.b64  	%rd10660, %rd10639, %rd10591;
	xor.b64  	%rd10661, %rd10641, %rd10594;
	xor.b64  	%rd10662, %rd10633, %rd10597;
	xor.b64  	%rd10663, %rd10635, %rd10600;
	xor.b64  	%rd10664, %rd10637, %rd10603;
	xor.b64  	%rd10665, %rd10639, %rd10606;
	xor.b64  	%rd10666, %rd10641, %rd10609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7521,%dummy}, %rd10648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7522}, %rd10648;
	}
	shf.r.wrap.b32 	%r7523, %r7522, %r7521, 20;
	shf.r.wrap.b32 	%r7524, %r7521, %r7522, 20;
	mov.b64 	%rd10667, {%r7524, %r7523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7525,%dummy}, %rd10654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7526}, %rd10654;
	}
	shf.r.wrap.b32 	%r7527, %r7526, %r7525, 21;
	shf.r.wrap.b32 	%r7528, %r7525, %r7526, 21;
	mov.b64 	%rd10668, {%r7528, %r7527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7529}, %rd10660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7530,%dummy}, %rd10660;
	}
	shf.l.wrap.b32 	%r7531, %r7530, %r7529, 21;
	shf.l.wrap.b32 	%r7532, %r7529, %r7530, 21;
	mov.b64 	%rd10669, {%r7532, %r7531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7533}, %rd10666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7534,%dummy}, %rd10666;
	}
	shf.l.wrap.b32 	%r7535, %r7534, %r7533, 14;
	shf.l.wrap.b32 	%r7536, %r7533, %r7534, 14;
	mov.b64 	%rd10670, {%r7536, %r7535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7537}, %rd10645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7538,%dummy}, %rd10645;
	}
	shf.l.wrap.b32 	%r7539, %r7538, %r7537, 28;
	shf.l.wrap.b32 	%r7540, %r7537, %r7538, 28;
	mov.b64 	%rd10671, {%r7540, %r7539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7541}, %rd10651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7542,%dummy}, %rd10651;
	}
	shf.l.wrap.b32 	%r7543, %r7542, %r7541, 20;
	shf.l.wrap.b32 	%r7544, %r7541, %r7542, 20;
	mov.b64 	%rd10672, {%r7544, %r7543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7545}, %rd10652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7546,%dummy}, %rd10652;
	}
	shf.l.wrap.b32 	%r7547, %r7546, %r7545, 3;
	shf.l.wrap.b32 	%r7548, %r7545, %r7546, 3;
	mov.b64 	%rd10673, {%r7548, %r7547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7549,%dummy}, %rd10658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7550}, %rd10658;
	}
	shf.r.wrap.b32 	%r7551, %r7550, %r7549, 19;
	shf.r.wrap.b32 	%r7552, %r7549, %r7550, 19;
	mov.b64 	%rd10674, {%r7552, %r7551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7553,%dummy}, %rd10664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7554}, %rd10664;
	}
	shf.r.wrap.b32 	%r7555, %r7554, %r7553, 3;
	shf.r.wrap.b32 	%r7556, %r7553, %r7554, 3;
	mov.b64 	%rd10675, {%r7556, %r7555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7557}, %rd10643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7558,%dummy}, %rd10643;
	}
	shf.l.wrap.b32 	%r7559, %r7558, %r7557, 1;
	shf.l.wrap.b32 	%r7560, %r7557, %r7558, 1;
	mov.b64 	%rd10676, {%r7560, %r7559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7561}, %rd10649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7562,%dummy}, %rd10649;
	}
	shf.l.wrap.b32 	%r7563, %r7562, %r7561, 6;
	shf.l.wrap.b32 	%r7564, %r7561, %r7562, 6;
	mov.b64 	%rd10677, {%r7564, %r7563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7565}, %rd10655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7566,%dummy}, %rd10655;
	}
	shf.l.wrap.b32 	%r7567, %r7566, %r7565, 25;
	shf.l.wrap.b32 	%r7568, %r7565, %r7566, 25;
	mov.b64 	%rd10678, {%r7568, %r7567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7569}, %rd10661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7570,%dummy}, %rd10661;
	}
	shf.l.wrap.b32 	%r7571, %r7570, %r7569, 8;
	shf.l.wrap.b32 	%r7572, %r7569, %r7570, 8;
	mov.b64 	%rd10679, {%r7572, %r7571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7573}, %rd10662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7574,%dummy}, %rd10662;
	}
	shf.l.wrap.b32 	%r7575, %r7574, %r7573, 18;
	shf.l.wrap.b32 	%r7576, %r7573, %r7574, 18;
	mov.b64 	%rd10680, {%r7576, %r7575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7577}, %rd10646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7578,%dummy}, %rd10646;
	}
	shf.l.wrap.b32 	%r7579, %r7578, %r7577, 27;
	shf.l.wrap.b32 	%r7580, %r7577, %r7578, 27;
	mov.b64 	%rd10681, {%r7580, %r7579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7581,%dummy}, %rd10647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7582}, %rd10647;
	}
	shf.r.wrap.b32 	%r7583, %r7582, %r7581, 28;
	shf.r.wrap.b32 	%r7584, %r7581, %r7582, 28;
	mov.b64 	%rd10682, {%r7584, %r7583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7585}, %rd10653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7586,%dummy}, %rd10653;
	}
	shf.l.wrap.b32 	%r7587, %r7586, %r7585, 10;
	shf.l.wrap.b32 	%r7588, %r7585, %r7586, 10;
	mov.b64 	%rd10683, {%r7588, %r7587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7589}, %rd10659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7590,%dummy}, %rd10659;
	}
	shf.l.wrap.b32 	%r7591, %r7590, %r7589, 15;
	shf.l.wrap.b32 	%r7592, %r7589, %r7590, 15;
	mov.b64 	%rd10684, {%r7592, %r7591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7593,%dummy}, %rd10665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7594}, %rd10665;
	}
	shf.r.wrap.b32 	%r7595, %r7594, %r7593, 8;
	shf.r.wrap.b32 	%r7596, %r7593, %r7594, 8;
	mov.b64 	%rd10685, {%r7596, %r7595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7597,%dummy}, %rd10644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7598}, %rd10644;
	}
	shf.r.wrap.b32 	%r7599, %r7598, %r7597, 2;
	shf.r.wrap.b32 	%r7600, %r7597, %r7598, 2;
	mov.b64 	%rd10686, {%r7600, %r7599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7601,%dummy}, %rd10650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7602}, %rd10650;
	}
	shf.r.wrap.b32 	%r7603, %r7602, %r7601, 9;
	shf.r.wrap.b32 	%r7604, %r7601, %r7602, 9;
	mov.b64 	%rd10687, {%r7604, %r7603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7605,%dummy}, %rd10656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7606}, %rd10656;
	}
	shf.r.wrap.b32 	%r7607, %r7606, %r7605, 25;
	shf.r.wrap.b32 	%r7608, %r7605, %r7606, 25;
	mov.b64 	%rd10688, {%r7608, %r7607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7609,%dummy}, %rd10657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7610}, %rd10657;
	}
	shf.r.wrap.b32 	%r7611, %r7610, %r7609, 23;
	shf.r.wrap.b32 	%r7612, %r7609, %r7610, 23;
	mov.b64 	%rd10689, {%r7612, %r7611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7613}, %rd10663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7614,%dummy}, %rd10663;
	}
	shf.l.wrap.b32 	%r7615, %r7614, %r7613, 2;
	shf.l.wrap.b32 	%r7616, %r7613, %r7614, 2;
	mov.b64 	%rd10690, {%r7616, %r7615};
	not.b64 	%rd10691, %rd10667;
	and.b64  	%rd10692, %rd10668, %rd10691;
	xor.b64  	%rd10693, %rd10692, %rd10642;
	not.b64 	%rd10694, %rd10668;
	and.b64  	%rd10695, %rd10669, %rd10694;
	xor.b64  	%rd10696, %rd10695, %rd10667;
	not.b64 	%rd10697, %rd10669;
	and.b64  	%rd10698, %rd10670, %rd10697;
	xor.b64  	%rd10699, %rd10698, %rd10668;
	not.b64 	%rd10700, %rd10670;
	and.b64  	%rd10701, %rd10642, %rd10700;
	xor.b64  	%rd10702, %rd10701, %rd10669;
	not.b64 	%rd10703, %rd10642;
	and.b64  	%rd10704, %rd10667, %rd10703;
	xor.b64  	%rd10705, %rd10704, %rd10670;
	not.b64 	%rd10706, %rd10672;
	and.b64  	%rd10707, %rd10673, %rd10706;
	xor.b64  	%rd10708, %rd10707, %rd10671;
	not.b64 	%rd10709, %rd10673;
	and.b64  	%rd10710, %rd10674, %rd10709;
	xor.b64  	%rd10711, %rd10710, %rd10672;
	not.b64 	%rd10712, %rd10674;
	and.b64  	%rd10713, %rd10675, %rd10712;
	xor.b64  	%rd10714, %rd10713, %rd10673;
	not.b64 	%rd10715, %rd10675;
	and.b64  	%rd10716, %rd10671, %rd10715;
	xor.b64  	%rd10717, %rd10716, %rd10674;
	not.b64 	%rd10718, %rd10671;
	and.b64  	%rd10719, %rd10672, %rd10718;
	xor.b64  	%rd10720, %rd10719, %rd10675;
	not.b64 	%rd10721, %rd10677;
	and.b64  	%rd10722, %rd10678, %rd10721;
	xor.b64  	%rd10723, %rd10722, %rd10676;
	not.b64 	%rd10724, %rd10678;
	and.b64  	%rd10725, %rd10679, %rd10724;
	xor.b64  	%rd10726, %rd10725, %rd10677;
	not.b64 	%rd10727, %rd10679;
	and.b64  	%rd10728, %rd10680, %rd10727;
	xor.b64  	%rd10729, %rd10728, %rd10678;
	not.b64 	%rd10730, %rd10680;
	and.b64  	%rd10731, %rd10676, %rd10730;
	xor.b64  	%rd10732, %rd10731, %rd10679;
	not.b64 	%rd10733, %rd10676;
	and.b64  	%rd10734, %rd10677, %rd10733;
	xor.b64  	%rd10735, %rd10734, %rd10680;
	not.b64 	%rd10736, %rd10682;
	and.b64  	%rd10737, %rd10683, %rd10736;
	xor.b64  	%rd10738, %rd10737, %rd10681;
	not.b64 	%rd10739, %rd10683;
	and.b64  	%rd10740, %rd10684, %rd10739;
	xor.b64  	%rd10741, %rd10740, %rd10682;
	not.b64 	%rd10742, %rd10684;
	and.b64  	%rd10743, %rd10685, %rd10742;
	xor.b64  	%rd10744, %rd10743, %rd10683;
	not.b64 	%rd10745, %rd10685;
	and.b64  	%rd10746, %rd10681, %rd10745;
	xor.b64  	%rd10747, %rd10746, %rd10684;
	not.b64 	%rd10748, %rd10681;
	and.b64  	%rd10749, %rd10682, %rd10748;
	xor.b64  	%rd10750, %rd10749, %rd10685;
	not.b64 	%rd10751, %rd10687;
	and.b64  	%rd10752, %rd10688, %rd10751;
	xor.b64  	%rd10753, %rd10752, %rd10686;
	not.b64 	%rd10754, %rd10688;
	and.b64  	%rd10755, %rd10689, %rd10754;
	xor.b64  	%rd10756, %rd10755, %rd10687;
	not.b64 	%rd10757, %rd10689;
	and.b64  	%rd10758, %rd10690, %rd10757;
	xor.b64  	%rd10759, %rd10758, %rd10688;
	not.b64 	%rd10760, %rd10690;
	and.b64  	%rd10761, %rd10686, %rd10760;
	xor.b64  	%rd10762, %rd10761, %rd10689;
	not.b64 	%rd10763, %rd10686;
	and.b64  	%rd10764, %rd10687, %rd10763;
	xor.b64  	%rd10765, %rd10764, %rd10690;
	xor.b64  	%rd10767, %rd10693, %rd32;
	xor.b64  	%rd10768, %rd10708, %rd10767;
	xor.b64  	%rd10769, %rd10768, %rd10723;
	xor.b64  	%rd10770, %rd10769, %rd10738;
	xor.b64  	%rd10771, %rd10770, %rd10753;
	xor.b64  	%rd10772, %rd10711, %rd10696;
	xor.b64  	%rd10773, %rd10772, %rd10726;
	xor.b64  	%rd10774, %rd10773, %rd10741;
	xor.b64  	%rd10775, %rd10774, %rd10756;
	xor.b64  	%rd10776, %rd10714, %rd10699;
	xor.b64  	%rd10777, %rd10776, %rd10729;
	xor.b64  	%rd10778, %rd10777, %rd10744;
	xor.b64  	%rd10779, %rd10778, %rd10759;
	xor.b64  	%rd10780, %rd10717, %rd10702;
	xor.b64  	%rd10781, %rd10780, %rd10732;
	xor.b64  	%rd10782, %rd10781, %rd10747;
	xor.b64  	%rd10783, %rd10782, %rd10762;
	xor.b64  	%rd10784, %rd10720, %rd10705;
	xor.b64  	%rd10785, %rd10784, %rd10735;
	xor.b64  	%rd10786, %rd10785, %rd10750;
	xor.b64  	%rd10787, %rd10786, %rd10765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7617}, %rd10775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7618,%dummy}, %rd10775;
	}
	shf.l.wrap.b32 	%r7619, %r7618, %r7617, 1;
	shf.l.wrap.b32 	%r7620, %r7617, %r7618, 1;
	mov.b64 	%rd10788, {%r7620, %r7619};
	xor.b64  	%rd10789, %rd10787, %rd10788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7621}, %rd10779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7622,%dummy}, %rd10779;
	}
	shf.l.wrap.b32 	%r7623, %r7622, %r7621, 1;
	shf.l.wrap.b32 	%r7624, %r7621, %r7622, 1;
	mov.b64 	%rd10790, {%r7624, %r7623};
	xor.b64  	%rd10791, %rd10790, %rd10771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7625}, %rd10783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7626,%dummy}, %rd10783;
	}
	shf.l.wrap.b32 	%r7627, %r7626, %r7625, 1;
	shf.l.wrap.b32 	%r7628, %r7625, %r7626, 1;
	mov.b64 	%rd10792, {%r7628, %r7627};
	xor.b64  	%rd10793, %rd10792, %rd10775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7629}, %rd10787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7630,%dummy}, %rd10787;
	}
	shf.l.wrap.b32 	%r7631, %r7630, %r7629, 1;
	shf.l.wrap.b32 	%r7632, %r7629, %r7630, 1;
	mov.b64 	%rd10794, {%r7632, %r7631};
	xor.b64  	%rd10795, %rd10794, %rd10779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7633}, %rd10771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7634,%dummy}, %rd10771;
	}
	shf.l.wrap.b32 	%r7635, %r7634, %r7633, 1;
	shf.l.wrap.b32 	%r7636, %r7633, %r7634, 1;
	mov.b64 	%rd10796, {%r7636, %r7635};
	xor.b64  	%rd10797, %rd10783, %rd10796;
	xor.b64  	%rd10798, %rd10789, %rd10767;
	xor.b64  	%rd10799, %rd10791, %rd10696;
	xor.b64  	%rd10800, %rd10793, %rd10699;
	xor.b64  	%rd10801, %rd10795, %rd10702;
	xor.b64  	%rd10802, %rd10797, %rd10705;
	xor.b64  	%rd10803, %rd10789, %rd10708;
	xor.b64  	%rd10804, %rd10791, %rd10711;
	xor.b64  	%rd10805, %rd10793, %rd10714;
	xor.b64  	%rd10806, %rd10795, %rd10717;
	xor.b64  	%rd10807, %rd10797, %rd10720;
	xor.b64  	%rd10808, %rd10789, %rd10723;
	xor.b64  	%rd10809, %rd10791, %rd10726;
	xor.b64  	%rd10810, %rd10793, %rd10729;
	xor.b64  	%rd10811, %rd10795, %rd10732;
	xor.b64  	%rd10812, %rd10797, %rd10735;
	xor.b64  	%rd10813, %rd10789, %rd10738;
	xor.b64  	%rd10814, %rd10791, %rd10741;
	xor.b64  	%rd10815, %rd10793, %rd10744;
	xor.b64  	%rd10816, %rd10795, %rd10747;
	xor.b64  	%rd10817, %rd10797, %rd10750;
	xor.b64  	%rd10818, %rd10789, %rd10753;
	xor.b64  	%rd10819, %rd10791, %rd10756;
	xor.b64  	%rd10820, %rd10793, %rd10759;
	xor.b64  	%rd10821, %rd10795, %rd10762;
	xor.b64  	%rd10822, %rd10797, %rd10765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7637,%dummy}, %rd10804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7638}, %rd10804;
	}
	shf.r.wrap.b32 	%r7639, %r7638, %r7637, 20;
	shf.r.wrap.b32 	%r7640, %r7637, %r7638, 20;
	mov.b64 	%rd10823, {%r7640, %r7639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7641,%dummy}, %rd10810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7642}, %rd10810;
	}
	shf.r.wrap.b32 	%r7643, %r7642, %r7641, 21;
	shf.r.wrap.b32 	%r7644, %r7641, %r7642, 21;
	mov.b64 	%rd10824, {%r7644, %r7643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7645}, %rd10816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7646,%dummy}, %rd10816;
	}
	shf.l.wrap.b32 	%r7647, %r7646, %r7645, 21;
	shf.l.wrap.b32 	%r7648, %r7645, %r7646, 21;
	mov.b64 	%rd10825, {%r7648, %r7647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7649}, %rd10822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7650,%dummy}, %rd10822;
	}
	shf.l.wrap.b32 	%r7651, %r7650, %r7649, 14;
	shf.l.wrap.b32 	%r7652, %r7649, %r7650, 14;
	mov.b64 	%rd10826, {%r7652, %r7651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7653}, %rd10801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7654,%dummy}, %rd10801;
	}
	shf.l.wrap.b32 	%r7655, %r7654, %r7653, 28;
	shf.l.wrap.b32 	%r7656, %r7653, %r7654, 28;
	mov.b64 	%rd10827, {%r7656, %r7655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7657}, %rd10807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7658,%dummy}, %rd10807;
	}
	shf.l.wrap.b32 	%r7659, %r7658, %r7657, 20;
	shf.l.wrap.b32 	%r7660, %r7657, %r7658, 20;
	mov.b64 	%rd10828, {%r7660, %r7659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7661}, %rd10808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7662,%dummy}, %rd10808;
	}
	shf.l.wrap.b32 	%r7663, %r7662, %r7661, 3;
	shf.l.wrap.b32 	%r7664, %r7661, %r7662, 3;
	mov.b64 	%rd10829, {%r7664, %r7663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7665,%dummy}, %rd10814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7666}, %rd10814;
	}
	shf.r.wrap.b32 	%r7667, %r7666, %r7665, 19;
	shf.r.wrap.b32 	%r7668, %r7665, %r7666, 19;
	mov.b64 	%rd10830, {%r7668, %r7667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7669,%dummy}, %rd10820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7670}, %rd10820;
	}
	shf.r.wrap.b32 	%r7671, %r7670, %r7669, 3;
	shf.r.wrap.b32 	%r7672, %r7669, %r7670, 3;
	mov.b64 	%rd10831, {%r7672, %r7671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7673}, %rd10799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7674,%dummy}, %rd10799;
	}
	shf.l.wrap.b32 	%r7675, %r7674, %r7673, 1;
	shf.l.wrap.b32 	%r7676, %r7673, %r7674, 1;
	mov.b64 	%rd10832, {%r7676, %r7675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7677}, %rd10805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7678,%dummy}, %rd10805;
	}
	shf.l.wrap.b32 	%r7679, %r7678, %r7677, 6;
	shf.l.wrap.b32 	%r7680, %r7677, %r7678, 6;
	mov.b64 	%rd10833, {%r7680, %r7679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7681}, %rd10811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7682,%dummy}, %rd10811;
	}
	shf.l.wrap.b32 	%r7683, %r7682, %r7681, 25;
	shf.l.wrap.b32 	%r7684, %r7681, %r7682, 25;
	mov.b64 	%rd10834, {%r7684, %r7683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7685}, %rd10817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7686,%dummy}, %rd10817;
	}
	shf.l.wrap.b32 	%r7687, %r7686, %r7685, 8;
	shf.l.wrap.b32 	%r7688, %r7685, %r7686, 8;
	mov.b64 	%rd10835, {%r7688, %r7687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7689}, %rd10818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7690,%dummy}, %rd10818;
	}
	shf.l.wrap.b32 	%r7691, %r7690, %r7689, 18;
	shf.l.wrap.b32 	%r7692, %r7689, %r7690, 18;
	mov.b64 	%rd10836, {%r7692, %r7691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7693}, %rd10802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7694,%dummy}, %rd10802;
	}
	shf.l.wrap.b32 	%r7695, %r7694, %r7693, 27;
	shf.l.wrap.b32 	%r7696, %r7693, %r7694, 27;
	mov.b64 	%rd10837, {%r7696, %r7695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7697,%dummy}, %rd10803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7698}, %rd10803;
	}
	shf.r.wrap.b32 	%r7699, %r7698, %r7697, 28;
	shf.r.wrap.b32 	%r7700, %r7697, %r7698, 28;
	mov.b64 	%rd10838, {%r7700, %r7699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7701}, %rd10809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7702,%dummy}, %rd10809;
	}
	shf.l.wrap.b32 	%r7703, %r7702, %r7701, 10;
	shf.l.wrap.b32 	%r7704, %r7701, %r7702, 10;
	mov.b64 	%rd10839, {%r7704, %r7703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7705}, %rd10815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7706,%dummy}, %rd10815;
	}
	shf.l.wrap.b32 	%r7707, %r7706, %r7705, 15;
	shf.l.wrap.b32 	%r7708, %r7705, %r7706, 15;
	mov.b64 	%rd10840, {%r7708, %r7707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7709,%dummy}, %rd10821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7710}, %rd10821;
	}
	shf.r.wrap.b32 	%r7711, %r7710, %r7709, 8;
	shf.r.wrap.b32 	%r7712, %r7709, %r7710, 8;
	mov.b64 	%rd10841, {%r7712, %r7711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7713,%dummy}, %rd10800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7714}, %rd10800;
	}
	shf.r.wrap.b32 	%r7715, %r7714, %r7713, 2;
	shf.r.wrap.b32 	%r7716, %r7713, %r7714, 2;
	mov.b64 	%rd10842, {%r7716, %r7715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7717,%dummy}, %rd10806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7718}, %rd10806;
	}
	shf.r.wrap.b32 	%r7719, %r7718, %r7717, 9;
	shf.r.wrap.b32 	%r7720, %r7717, %r7718, 9;
	mov.b64 	%rd10843, {%r7720, %r7719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7721,%dummy}, %rd10812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7722}, %rd10812;
	}
	shf.r.wrap.b32 	%r7723, %r7722, %r7721, 25;
	shf.r.wrap.b32 	%r7724, %r7721, %r7722, 25;
	mov.b64 	%rd10844, {%r7724, %r7723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7725,%dummy}, %rd10813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7726}, %rd10813;
	}
	shf.r.wrap.b32 	%r7727, %r7726, %r7725, 23;
	shf.r.wrap.b32 	%r7728, %r7725, %r7726, 23;
	mov.b64 	%rd10845, {%r7728, %r7727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7729}, %rd10819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7730,%dummy}, %rd10819;
	}
	shf.l.wrap.b32 	%r7731, %r7730, %r7729, 2;
	shf.l.wrap.b32 	%r7732, %r7729, %r7730, 2;
	mov.b64 	%rd10846, {%r7732, %r7731};
	not.b64 	%rd10847, %rd10823;
	and.b64  	%rd10848, %rd10824, %rd10847;
	xor.b64  	%rd10849, %rd10848, %rd10798;
	not.b64 	%rd10850, %rd10824;
	and.b64  	%rd10851, %rd10825, %rd10850;
	xor.b64  	%rd10852, %rd10851, %rd10823;
	not.b64 	%rd10853, %rd10825;
	and.b64  	%rd10854, %rd10826, %rd10853;
	xor.b64  	%rd10855, %rd10854, %rd10824;
	not.b64 	%rd10856, %rd10826;
	and.b64  	%rd10857, %rd10798, %rd10856;
	xor.b64  	%rd10858, %rd10857, %rd10825;
	not.b64 	%rd10859, %rd10798;
	and.b64  	%rd10860, %rd10823, %rd10859;
	xor.b64  	%rd10861, %rd10860, %rd10826;
	not.b64 	%rd10862, %rd10828;
	and.b64  	%rd10863, %rd10829, %rd10862;
	xor.b64  	%rd10864, %rd10863, %rd10827;
	not.b64 	%rd10865, %rd10829;
	and.b64  	%rd10866, %rd10830, %rd10865;
	xor.b64  	%rd10867, %rd10866, %rd10828;
	not.b64 	%rd10868, %rd10830;
	and.b64  	%rd10869, %rd10831, %rd10868;
	xor.b64  	%rd10870, %rd10869, %rd10829;
	not.b64 	%rd10871, %rd10831;
	and.b64  	%rd10872, %rd10827, %rd10871;
	xor.b64  	%rd10873, %rd10872, %rd10830;
	not.b64 	%rd10874, %rd10827;
	and.b64  	%rd10875, %rd10828, %rd10874;
	xor.b64  	%rd10876, %rd10875, %rd10831;
	not.b64 	%rd10877, %rd10833;
	and.b64  	%rd10878, %rd10834, %rd10877;
	xor.b64  	%rd10879, %rd10878, %rd10832;
	not.b64 	%rd10880, %rd10834;
	and.b64  	%rd10881, %rd10835, %rd10880;
	xor.b64  	%rd10882, %rd10881, %rd10833;
	not.b64 	%rd10883, %rd10835;
	and.b64  	%rd10884, %rd10836, %rd10883;
	xor.b64  	%rd10885, %rd10884, %rd10834;
	not.b64 	%rd10886, %rd10836;
	and.b64  	%rd10887, %rd10832, %rd10886;
	xor.b64  	%rd10888, %rd10887, %rd10835;
	not.b64 	%rd10889, %rd10832;
	and.b64  	%rd10890, %rd10833, %rd10889;
	xor.b64  	%rd10891, %rd10890, %rd10836;
	not.b64 	%rd10892, %rd10838;
	and.b64  	%rd10893, %rd10839, %rd10892;
	xor.b64  	%rd10894, %rd10893, %rd10837;
	not.b64 	%rd10895, %rd10839;
	and.b64  	%rd10896, %rd10840, %rd10895;
	xor.b64  	%rd10897, %rd10896, %rd10838;
	not.b64 	%rd10898, %rd10840;
	and.b64  	%rd10899, %rd10841, %rd10898;
	xor.b64  	%rd10900, %rd10899, %rd10839;
	not.b64 	%rd10901, %rd10841;
	and.b64  	%rd10902, %rd10837, %rd10901;
	xor.b64  	%rd10903, %rd10902, %rd10840;
	not.b64 	%rd10904, %rd10837;
	and.b64  	%rd10905, %rd10838, %rd10904;
	xor.b64  	%rd10906, %rd10905, %rd10841;
	not.b64 	%rd10907, %rd10843;
	and.b64  	%rd10908, %rd10844, %rd10907;
	xor.b64  	%rd10909, %rd10908, %rd10842;
	not.b64 	%rd10910, %rd10844;
	and.b64  	%rd10911, %rd10845, %rd10910;
	xor.b64  	%rd10912, %rd10911, %rd10843;
	not.b64 	%rd10913, %rd10845;
	and.b64  	%rd10914, %rd10846, %rd10913;
	xor.b64  	%rd10915, %rd10914, %rd10844;
	not.b64 	%rd10916, %rd10846;
	and.b64  	%rd10917, %rd10842, %rd10916;
	xor.b64  	%rd10918, %rd10917, %rd10845;
	not.b64 	%rd10919, %rd10842;
	and.b64  	%rd10920, %rd10843, %rd10919;
	xor.b64  	%rd10921, %rd10920, %rd10846;
	xor.b64  	%rd10923, %rd10849, %rd33;
	xor.b64  	%rd10924, %rd10864, %rd10923;
	xor.b64  	%rd10925, %rd10924, %rd10879;
	xor.b64  	%rd10926, %rd10925, %rd10894;
	xor.b64  	%rd10927, %rd10926, %rd10909;
	xor.b64  	%rd10928, %rd10867, %rd10852;
	xor.b64  	%rd10929, %rd10928, %rd10882;
	xor.b64  	%rd10930, %rd10929, %rd10897;
	xor.b64  	%rd10931, %rd10930, %rd10912;
	xor.b64  	%rd10932, %rd10870, %rd10855;
	xor.b64  	%rd10933, %rd10932, %rd10885;
	xor.b64  	%rd10934, %rd10933, %rd10900;
	xor.b64  	%rd10935, %rd10934, %rd10915;
	xor.b64  	%rd10936, %rd10873, %rd10858;
	xor.b64  	%rd10937, %rd10936, %rd10888;
	xor.b64  	%rd10938, %rd10937, %rd10903;
	xor.b64  	%rd10939, %rd10938, %rd10918;
	xor.b64  	%rd10940, %rd10876, %rd10861;
	xor.b64  	%rd10941, %rd10940, %rd10891;
	xor.b64  	%rd10942, %rd10941, %rd10906;
	xor.b64  	%rd10943, %rd10942, %rd10921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7733}, %rd10931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7734,%dummy}, %rd10931;
	}
	shf.l.wrap.b32 	%r7735, %r7734, %r7733, 1;
	shf.l.wrap.b32 	%r7736, %r7733, %r7734, 1;
	mov.b64 	%rd10944, {%r7736, %r7735};
	xor.b64  	%rd10945, %rd10943, %rd10944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7737}, %rd10935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7738,%dummy}, %rd10935;
	}
	shf.l.wrap.b32 	%r7739, %r7738, %r7737, 1;
	shf.l.wrap.b32 	%r7740, %r7737, %r7738, 1;
	mov.b64 	%rd10946, {%r7740, %r7739};
	xor.b64  	%rd10947, %rd10946, %rd10927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7741}, %rd10939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7742,%dummy}, %rd10939;
	}
	shf.l.wrap.b32 	%r7743, %r7742, %r7741, 1;
	shf.l.wrap.b32 	%r7744, %r7741, %r7742, 1;
	mov.b64 	%rd10948, {%r7744, %r7743};
	xor.b64  	%rd10949, %rd10948, %rd10931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7745}, %rd10943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7746,%dummy}, %rd10943;
	}
	shf.l.wrap.b32 	%r7747, %r7746, %r7745, 1;
	shf.l.wrap.b32 	%r7748, %r7745, %r7746, 1;
	mov.b64 	%rd10950, {%r7748, %r7747};
	xor.b64  	%rd10951, %rd10950, %rd10935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7749}, %rd10927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7750,%dummy}, %rd10927;
	}
	shf.l.wrap.b32 	%r7751, %r7750, %r7749, 1;
	shf.l.wrap.b32 	%r7752, %r7749, %r7750, 1;
	mov.b64 	%rd10952, {%r7752, %r7751};
	xor.b64  	%rd10953, %rd10939, %rd10952;
	xor.b64  	%rd10954, %rd10945, %rd10923;
	xor.b64  	%rd10955, %rd10947, %rd10852;
	xor.b64  	%rd10956, %rd10949, %rd10855;
	xor.b64  	%rd10957, %rd10951, %rd10858;
	xor.b64  	%rd10958, %rd10953, %rd10861;
	xor.b64  	%rd10959, %rd10945, %rd10864;
	xor.b64  	%rd10960, %rd10947, %rd10867;
	xor.b64  	%rd10961, %rd10949, %rd10870;
	xor.b64  	%rd10962, %rd10951, %rd10873;
	xor.b64  	%rd10963, %rd10953, %rd10876;
	xor.b64  	%rd10964, %rd10945, %rd10879;
	xor.b64  	%rd10965, %rd10947, %rd10882;
	xor.b64  	%rd10966, %rd10949, %rd10885;
	xor.b64  	%rd10967, %rd10951, %rd10888;
	xor.b64  	%rd10968, %rd10953, %rd10891;
	xor.b64  	%rd10969, %rd10945, %rd10894;
	xor.b64  	%rd10970, %rd10947, %rd10897;
	xor.b64  	%rd10971, %rd10949, %rd10900;
	xor.b64  	%rd10972, %rd10951, %rd10903;
	xor.b64  	%rd10973, %rd10953, %rd10906;
	xor.b64  	%rd10974, %rd10945, %rd10909;
	xor.b64  	%rd10975, %rd10947, %rd10912;
	xor.b64  	%rd10976, %rd10949, %rd10915;
	xor.b64  	%rd10977, %rd10951, %rd10918;
	xor.b64  	%rd10978, %rd10953, %rd10921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7753,%dummy}, %rd10960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7754}, %rd10960;
	}
	shf.r.wrap.b32 	%r7755, %r7754, %r7753, 20;
	shf.r.wrap.b32 	%r7756, %r7753, %r7754, 20;
	mov.b64 	%rd10979, {%r7756, %r7755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7757,%dummy}, %rd10966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7758}, %rd10966;
	}
	shf.r.wrap.b32 	%r7759, %r7758, %r7757, 21;
	shf.r.wrap.b32 	%r7760, %r7757, %r7758, 21;
	mov.b64 	%rd10980, {%r7760, %r7759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7761}, %rd10972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7762,%dummy}, %rd10972;
	}
	shf.l.wrap.b32 	%r7763, %r7762, %r7761, 21;
	shf.l.wrap.b32 	%r7764, %r7761, %r7762, 21;
	mov.b64 	%rd10981, {%r7764, %r7763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7765}, %rd10978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7766,%dummy}, %rd10978;
	}
	shf.l.wrap.b32 	%r7767, %r7766, %r7765, 14;
	shf.l.wrap.b32 	%r7768, %r7765, %r7766, 14;
	mov.b64 	%rd10982, {%r7768, %r7767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7769}, %rd10957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7770,%dummy}, %rd10957;
	}
	shf.l.wrap.b32 	%r7771, %r7770, %r7769, 28;
	shf.l.wrap.b32 	%r7772, %r7769, %r7770, 28;
	mov.b64 	%rd10983, {%r7772, %r7771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7773}, %rd10963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7774,%dummy}, %rd10963;
	}
	shf.l.wrap.b32 	%r7775, %r7774, %r7773, 20;
	shf.l.wrap.b32 	%r7776, %r7773, %r7774, 20;
	mov.b64 	%rd10984, {%r7776, %r7775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7777}, %rd10964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7778,%dummy}, %rd10964;
	}
	shf.l.wrap.b32 	%r7779, %r7778, %r7777, 3;
	shf.l.wrap.b32 	%r7780, %r7777, %r7778, 3;
	mov.b64 	%rd10985, {%r7780, %r7779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7781,%dummy}, %rd10970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7782}, %rd10970;
	}
	shf.r.wrap.b32 	%r7783, %r7782, %r7781, 19;
	shf.r.wrap.b32 	%r7784, %r7781, %r7782, 19;
	mov.b64 	%rd10986, {%r7784, %r7783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7785,%dummy}, %rd10976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7786}, %rd10976;
	}
	shf.r.wrap.b32 	%r7787, %r7786, %r7785, 3;
	shf.r.wrap.b32 	%r7788, %r7785, %r7786, 3;
	mov.b64 	%rd10987, {%r7788, %r7787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7789}, %rd10955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7790,%dummy}, %rd10955;
	}
	shf.l.wrap.b32 	%r7791, %r7790, %r7789, 1;
	shf.l.wrap.b32 	%r7792, %r7789, %r7790, 1;
	mov.b64 	%rd10988, {%r7792, %r7791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7793}, %rd10961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7794,%dummy}, %rd10961;
	}
	shf.l.wrap.b32 	%r7795, %r7794, %r7793, 6;
	shf.l.wrap.b32 	%r7796, %r7793, %r7794, 6;
	mov.b64 	%rd10989, {%r7796, %r7795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7797}, %rd10967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7798,%dummy}, %rd10967;
	}
	shf.l.wrap.b32 	%r7799, %r7798, %r7797, 25;
	shf.l.wrap.b32 	%r7800, %r7797, %r7798, 25;
	mov.b64 	%rd10990, {%r7800, %r7799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7801}, %rd10973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7802,%dummy}, %rd10973;
	}
	shf.l.wrap.b32 	%r7803, %r7802, %r7801, 8;
	shf.l.wrap.b32 	%r7804, %r7801, %r7802, 8;
	mov.b64 	%rd10991, {%r7804, %r7803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7805}, %rd10974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7806,%dummy}, %rd10974;
	}
	shf.l.wrap.b32 	%r7807, %r7806, %r7805, 18;
	shf.l.wrap.b32 	%r7808, %r7805, %r7806, 18;
	mov.b64 	%rd10992, {%r7808, %r7807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7809}, %rd10958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7810,%dummy}, %rd10958;
	}
	shf.l.wrap.b32 	%r7811, %r7810, %r7809, 27;
	shf.l.wrap.b32 	%r7812, %r7809, %r7810, 27;
	mov.b64 	%rd10993, {%r7812, %r7811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7813,%dummy}, %rd10959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7814}, %rd10959;
	}
	shf.r.wrap.b32 	%r7815, %r7814, %r7813, 28;
	shf.r.wrap.b32 	%r7816, %r7813, %r7814, 28;
	mov.b64 	%rd10994, {%r7816, %r7815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7817}, %rd10965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7818,%dummy}, %rd10965;
	}
	shf.l.wrap.b32 	%r7819, %r7818, %r7817, 10;
	shf.l.wrap.b32 	%r7820, %r7817, %r7818, 10;
	mov.b64 	%rd10995, {%r7820, %r7819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7821}, %rd10971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7822,%dummy}, %rd10971;
	}
	shf.l.wrap.b32 	%r7823, %r7822, %r7821, 15;
	shf.l.wrap.b32 	%r7824, %r7821, %r7822, 15;
	mov.b64 	%rd10996, {%r7824, %r7823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7825,%dummy}, %rd10977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7826}, %rd10977;
	}
	shf.r.wrap.b32 	%r7827, %r7826, %r7825, 8;
	shf.r.wrap.b32 	%r7828, %r7825, %r7826, 8;
	mov.b64 	%rd10997, {%r7828, %r7827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7829,%dummy}, %rd10956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7830}, %rd10956;
	}
	shf.r.wrap.b32 	%r7831, %r7830, %r7829, 2;
	shf.r.wrap.b32 	%r7832, %r7829, %r7830, 2;
	mov.b64 	%rd10998, {%r7832, %r7831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7833,%dummy}, %rd10962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7834}, %rd10962;
	}
	shf.r.wrap.b32 	%r7835, %r7834, %r7833, 9;
	shf.r.wrap.b32 	%r7836, %r7833, %r7834, 9;
	mov.b64 	%rd10999, {%r7836, %r7835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7837,%dummy}, %rd10968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7838}, %rd10968;
	}
	shf.r.wrap.b32 	%r7839, %r7838, %r7837, 25;
	shf.r.wrap.b32 	%r7840, %r7837, %r7838, 25;
	mov.b64 	%rd11000, {%r7840, %r7839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7841,%dummy}, %rd10969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7842}, %rd10969;
	}
	shf.r.wrap.b32 	%r7843, %r7842, %r7841, 23;
	shf.r.wrap.b32 	%r7844, %r7841, %r7842, 23;
	mov.b64 	%rd11001, {%r7844, %r7843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7845}, %rd10975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7846,%dummy}, %rd10975;
	}
	shf.l.wrap.b32 	%r7847, %r7846, %r7845, 2;
	shf.l.wrap.b32 	%r7848, %r7845, %r7846, 2;
	mov.b64 	%rd11002, {%r7848, %r7847};
	not.b64 	%rd11003, %rd10979;
	and.b64  	%rd11004, %rd10980, %rd11003;
	xor.b64  	%rd11005, %rd11004, %rd10954;
	not.b64 	%rd11006, %rd10980;
	and.b64  	%rd11007, %rd10981, %rd11006;
	xor.b64  	%rd11008, %rd11007, %rd10979;
	not.b64 	%rd11009, %rd10981;
	and.b64  	%rd11010, %rd10982, %rd11009;
	xor.b64  	%rd11011, %rd11010, %rd10980;
	not.b64 	%rd11012, %rd10982;
	and.b64  	%rd11013, %rd10954, %rd11012;
	xor.b64  	%rd11014, %rd11013, %rd10981;
	not.b64 	%rd11015, %rd10954;
	and.b64  	%rd11016, %rd10979, %rd11015;
	xor.b64  	%rd11017, %rd11016, %rd10982;
	not.b64 	%rd11018, %rd10984;
	and.b64  	%rd11019, %rd10985, %rd11018;
	xor.b64  	%rd11020, %rd11019, %rd10983;
	not.b64 	%rd11021, %rd10985;
	and.b64  	%rd11022, %rd10986, %rd11021;
	xor.b64  	%rd11023, %rd11022, %rd10984;
	not.b64 	%rd11024, %rd10986;
	and.b64  	%rd11025, %rd10987, %rd11024;
	xor.b64  	%rd11026, %rd11025, %rd10985;
	not.b64 	%rd11027, %rd10987;
	and.b64  	%rd11028, %rd10983, %rd11027;
	xor.b64  	%rd11029, %rd11028, %rd10986;
	not.b64 	%rd11030, %rd10983;
	and.b64  	%rd11031, %rd10984, %rd11030;
	xor.b64  	%rd11032, %rd11031, %rd10987;
	not.b64 	%rd11033, %rd10989;
	and.b64  	%rd11034, %rd10990, %rd11033;
	xor.b64  	%rd11035, %rd11034, %rd10988;
	not.b64 	%rd11036, %rd10990;
	and.b64  	%rd11037, %rd10991, %rd11036;
	xor.b64  	%rd11038, %rd11037, %rd10989;
	not.b64 	%rd11039, %rd10991;
	and.b64  	%rd11040, %rd10992, %rd11039;
	xor.b64  	%rd11041, %rd11040, %rd10990;
	not.b64 	%rd11042, %rd10992;
	and.b64  	%rd11043, %rd10988, %rd11042;
	xor.b64  	%rd11044, %rd11043, %rd10991;
	not.b64 	%rd11045, %rd10988;
	and.b64  	%rd11046, %rd10989, %rd11045;
	xor.b64  	%rd11047, %rd11046, %rd10992;
	not.b64 	%rd11048, %rd10994;
	and.b64  	%rd11049, %rd10995, %rd11048;
	xor.b64  	%rd11050, %rd11049, %rd10993;
	not.b64 	%rd11051, %rd10995;
	and.b64  	%rd11052, %rd10996, %rd11051;
	xor.b64  	%rd11053, %rd11052, %rd10994;
	not.b64 	%rd11054, %rd10996;
	and.b64  	%rd11055, %rd10997, %rd11054;
	xor.b64  	%rd11056, %rd11055, %rd10995;
	not.b64 	%rd11057, %rd10997;
	and.b64  	%rd11058, %rd10993, %rd11057;
	xor.b64  	%rd11059, %rd11058, %rd10996;
	not.b64 	%rd11060, %rd10993;
	and.b64  	%rd11061, %rd10994, %rd11060;
	xor.b64  	%rd11062, %rd11061, %rd10997;
	not.b64 	%rd11063, %rd10999;
	and.b64  	%rd11064, %rd11000, %rd11063;
	xor.b64  	%rd11065, %rd11064, %rd10998;
	not.b64 	%rd11066, %rd11000;
	and.b64  	%rd11067, %rd11001, %rd11066;
	xor.b64  	%rd11068, %rd11067, %rd10999;
	not.b64 	%rd11069, %rd11001;
	and.b64  	%rd11070, %rd11002, %rd11069;
	xor.b64  	%rd11071, %rd11070, %rd11000;
	not.b64 	%rd11072, %rd11002;
	and.b64  	%rd11073, %rd10998, %rd11072;
	xor.b64  	%rd11074, %rd11073, %rd11001;
	not.b64 	%rd11075, %rd10998;
	and.b64  	%rd11076, %rd10999, %rd11075;
	xor.b64  	%rd11077, %rd11076, %rd11002;
	xor.b64  	%rd11079, %rd11005, %rd34;
	xor.b64  	%rd11080, %rd11020, %rd11079;
	xor.b64  	%rd11081, %rd11080, %rd11035;
	xor.b64  	%rd11082, %rd11081, %rd11050;
	xor.b64  	%rd11083, %rd11082, %rd11065;
	xor.b64  	%rd11084, %rd11023, %rd11008;
	xor.b64  	%rd11085, %rd11084, %rd11038;
	xor.b64  	%rd11086, %rd11085, %rd11053;
	xor.b64  	%rd11087, %rd11086, %rd11068;
	xor.b64  	%rd11088, %rd11026, %rd11011;
	xor.b64  	%rd11089, %rd11088, %rd11041;
	xor.b64  	%rd11090, %rd11089, %rd11056;
	xor.b64  	%rd11091, %rd11090, %rd11071;
	xor.b64  	%rd11092, %rd11029, %rd11014;
	xor.b64  	%rd11093, %rd11092, %rd11044;
	xor.b64  	%rd11094, %rd11093, %rd11059;
	xor.b64  	%rd11095, %rd11094, %rd11074;
	xor.b64  	%rd11096, %rd11032, %rd11017;
	xor.b64  	%rd11097, %rd11096, %rd11047;
	xor.b64  	%rd11098, %rd11097, %rd11062;
	xor.b64  	%rd11099, %rd11098, %rd11077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7849}, %rd11087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7850,%dummy}, %rd11087;
	}
	shf.l.wrap.b32 	%r7851, %r7850, %r7849, 1;
	shf.l.wrap.b32 	%r7852, %r7849, %r7850, 1;
	mov.b64 	%rd11100, {%r7852, %r7851};
	xor.b64  	%rd11101, %rd11099, %rd11100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7853}, %rd11091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7854,%dummy}, %rd11091;
	}
	shf.l.wrap.b32 	%r7855, %r7854, %r7853, 1;
	shf.l.wrap.b32 	%r7856, %r7853, %r7854, 1;
	mov.b64 	%rd11102, {%r7856, %r7855};
	xor.b64  	%rd11103, %rd11102, %rd11083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7857}, %rd11095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7858,%dummy}, %rd11095;
	}
	shf.l.wrap.b32 	%r7859, %r7858, %r7857, 1;
	shf.l.wrap.b32 	%r7860, %r7857, %r7858, 1;
	mov.b64 	%rd11104, {%r7860, %r7859};
	xor.b64  	%rd11105, %rd11104, %rd11087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7861}, %rd11099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7862,%dummy}, %rd11099;
	}
	shf.l.wrap.b32 	%r7863, %r7862, %r7861, 1;
	shf.l.wrap.b32 	%r7864, %r7861, %r7862, 1;
	mov.b64 	%rd11106, {%r7864, %r7863};
	xor.b64  	%rd11107, %rd11106, %rd11091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7865}, %rd11083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7866,%dummy}, %rd11083;
	}
	shf.l.wrap.b32 	%r7867, %r7866, %r7865, 1;
	shf.l.wrap.b32 	%r7868, %r7865, %r7866, 1;
	mov.b64 	%rd11108, {%r7868, %r7867};
	xor.b64  	%rd11109, %rd11095, %rd11108;
	xor.b64  	%rd11110, %rd11101, %rd11079;
	xor.b64  	%rd11111, %rd11103, %rd11008;
	xor.b64  	%rd11112, %rd11105, %rd11011;
	xor.b64  	%rd11113, %rd11107, %rd11014;
	xor.b64  	%rd11114, %rd11109, %rd11017;
	xor.b64  	%rd11115, %rd11101, %rd11020;
	xor.b64  	%rd11116, %rd11103, %rd11023;
	xor.b64  	%rd11117, %rd11105, %rd11026;
	xor.b64  	%rd11118, %rd11107, %rd11029;
	xor.b64  	%rd11119, %rd11109, %rd11032;
	xor.b64  	%rd11120, %rd11101, %rd11035;
	xor.b64  	%rd11121, %rd11103, %rd11038;
	xor.b64  	%rd11122, %rd11105, %rd11041;
	xor.b64  	%rd11123, %rd11107, %rd11044;
	xor.b64  	%rd11124, %rd11109, %rd11047;
	xor.b64  	%rd11125, %rd11101, %rd11050;
	xor.b64  	%rd11126, %rd11103, %rd11053;
	xor.b64  	%rd11127, %rd11105, %rd11056;
	xor.b64  	%rd11128, %rd11107, %rd11059;
	xor.b64  	%rd11129, %rd11109, %rd11062;
	xor.b64  	%rd11130, %rd11101, %rd11065;
	xor.b64  	%rd11131, %rd11103, %rd11068;
	xor.b64  	%rd11132, %rd11105, %rd11071;
	xor.b64  	%rd11133, %rd11107, %rd11074;
	xor.b64  	%rd11134, %rd11109, %rd11077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7869,%dummy}, %rd11116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7870}, %rd11116;
	}
	shf.r.wrap.b32 	%r7871, %r7870, %r7869, 20;
	shf.r.wrap.b32 	%r7872, %r7869, %r7870, 20;
	mov.b64 	%rd11135, {%r7872, %r7871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7873,%dummy}, %rd11122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7874}, %rd11122;
	}
	shf.r.wrap.b32 	%r7875, %r7874, %r7873, 21;
	shf.r.wrap.b32 	%r7876, %r7873, %r7874, 21;
	mov.b64 	%rd11136, {%r7876, %r7875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7877}, %rd11128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7878,%dummy}, %rd11128;
	}
	shf.l.wrap.b32 	%r7879, %r7878, %r7877, 21;
	shf.l.wrap.b32 	%r7880, %r7877, %r7878, 21;
	mov.b64 	%rd11137, {%r7880, %r7879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7881}, %rd11134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7882,%dummy}, %rd11134;
	}
	shf.l.wrap.b32 	%r7883, %r7882, %r7881, 14;
	shf.l.wrap.b32 	%r7884, %r7881, %r7882, 14;
	mov.b64 	%rd11138, {%r7884, %r7883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7885}, %rd11113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7886,%dummy}, %rd11113;
	}
	shf.l.wrap.b32 	%r7887, %r7886, %r7885, 28;
	shf.l.wrap.b32 	%r7888, %r7885, %r7886, 28;
	mov.b64 	%rd11139, {%r7888, %r7887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7889}, %rd11119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7890,%dummy}, %rd11119;
	}
	shf.l.wrap.b32 	%r7891, %r7890, %r7889, 20;
	shf.l.wrap.b32 	%r7892, %r7889, %r7890, 20;
	mov.b64 	%rd11140, {%r7892, %r7891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7893}, %rd11120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7894,%dummy}, %rd11120;
	}
	shf.l.wrap.b32 	%r7895, %r7894, %r7893, 3;
	shf.l.wrap.b32 	%r7896, %r7893, %r7894, 3;
	mov.b64 	%rd11141, {%r7896, %r7895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7897,%dummy}, %rd11126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7898}, %rd11126;
	}
	shf.r.wrap.b32 	%r7899, %r7898, %r7897, 19;
	shf.r.wrap.b32 	%r7900, %r7897, %r7898, 19;
	mov.b64 	%rd11142, {%r7900, %r7899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7901,%dummy}, %rd11132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7902}, %rd11132;
	}
	shf.r.wrap.b32 	%r7903, %r7902, %r7901, 3;
	shf.r.wrap.b32 	%r7904, %r7901, %r7902, 3;
	mov.b64 	%rd11143, {%r7904, %r7903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7905}, %rd11111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7906,%dummy}, %rd11111;
	}
	shf.l.wrap.b32 	%r7907, %r7906, %r7905, 1;
	shf.l.wrap.b32 	%r7908, %r7905, %r7906, 1;
	mov.b64 	%rd11144, {%r7908, %r7907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7909}, %rd11117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7910,%dummy}, %rd11117;
	}
	shf.l.wrap.b32 	%r7911, %r7910, %r7909, 6;
	shf.l.wrap.b32 	%r7912, %r7909, %r7910, 6;
	mov.b64 	%rd11145, {%r7912, %r7911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7913}, %rd11123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7914,%dummy}, %rd11123;
	}
	shf.l.wrap.b32 	%r7915, %r7914, %r7913, 25;
	shf.l.wrap.b32 	%r7916, %r7913, %r7914, 25;
	mov.b64 	%rd11146, {%r7916, %r7915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7917}, %rd11129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7918,%dummy}, %rd11129;
	}
	shf.l.wrap.b32 	%r7919, %r7918, %r7917, 8;
	shf.l.wrap.b32 	%r7920, %r7917, %r7918, 8;
	mov.b64 	%rd11147, {%r7920, %r7919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7921}, %rd11130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7922,%dummy}, %rd11130;
	}
	shf.l.wrap.b32 	%r7923, %r7922, %r7921, 18;
	shf.l.wrap.b32 	%r7924, %r7921, %r7922, 18;
	mov.b64 	%rd11148, {%r7924, %r7923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7925}, %rd11114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7926,%dummy}, %rd11114;
	}
	shf.l.wrap.b32 	%r7927, %r7926, %r7925, 27;
	shf.l.wrap.b32 	%r7928, %r7925, %r7926, 27;
	mov.b64 	%rd11149, {%r7928, %r7927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7929,%dummy}, %rd11115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7930}, %rd11115;
	}
	shf.r.wrap.b32 	%r7931, %r7930, %r7929, 28;
	shf.r.wrap.b32 	%r7932, %r7929, %r7930, 28;
	mov.b64 	%rd11150, {%r7932, %r7931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7933}, %rd11121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7934,%dummy}, %rd11121;
	}
	shf.l.wrap.b32 	%r7935, %r7934, %r7933, 10;
	shf.l.wrap.b32 	%r7936, %r7933, %r7934, 10;
	mov.b64 	%rd11151, {%r7936, %r7935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7937}, %rd11127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7938,%dummy}, %rd11127;
	}
	shf.l.wrap.b32 	%r7939, %r7938, %r7937, 15;
	shf.l.wrap.b32 	%r7940, %r7937, %r7938, 15;
	mov.b64 	%rd11152, {%r7940, %r7939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7941,%dummy}, %rd11133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7942}, %rd11133;
	}
	shf.r.wrap.b32 	%r7943, %r7942, %r7941, 8;
	shf.r.wrap.b32 	%r7944, %r7941, %r7942, 8;
	mov.b64 	%rd11153, {%r7944, %r7943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7945,%dummy}, %rd11112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7946}, %rd11112;
	}
	shf.r.wrap.b32 	%r7947, %r7946, %r7945, 2;
	shf.r.wrap.b32 	%r7948, %r7945, %r7946, 2;
	mov.b64 	%rd11154, {%r7948, %r7947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7949,%dummy}, %rd11118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7950}, %rd11118;
	}
	shf.r.wrap.b32 	%r7951, %r7950, %r7949, 9;
	shf.r.wrap.b32 	%r7952, %r7949, %r7950, 9;
	mov.b64 	%rd11155, {%r7952, %r7951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7953,%dummy}, %rd11124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7954}, %rd11124;
	}
	shf.r.wrap.b32 	%r7955, %r7954, %r7953, 25;
	shf.r.wrap.b32 	%r7956, %r7953, %r7954, 25;
	mov.b64 	%rd11156, {%r7956, %r7955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7957,%dummy}, %rd11125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7958}, %rd11125;
	}
	shf.r.wrap.b32 	%r7959, %r7958, %r7957, 23;
	shf.r.wrap.b32 	%r7960, %r7957, %r7958, 23;
	mov.b64 	%rd11157, {%r7960, %r7959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7961}, %rd11131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7962,%dummy}, %rd11131;
	}
	shf.l.wrap.b32 	%r7963, %r7962, %r7961, 2;
	shf.l.wrap.b32 	%r7964, %r7961, %r7962, 2;
	mov.b64 	%rd11158, {%r7964, %r7963};
	not.b64 	%rd11159, %rd11135;
	and.b64  	%rd11160, %rd11136, %rd11159;
	xor.b64  	%rd11161, %rd11160, %rd11110;
	not.b64 	%rd11162, %rd11136;
	and.b64  	%rd11163, %rd11137, %rd11162;
	xor.b64  	%rd11164, %rd11163, %rd11135;
	not.b64 	%rd11165, %rd11137;
	and.b64  	%rd11166, %rd11138, %rd11165;
	xor.b64  	%rd11167, %rd11166, %rd11136;
	not.b64 	%rd11168, %rd11138;
	and.b64  	%rd11169, %rd11110, %rd11168;
	xor.b64  	%rd11170, %rd11169, %rd11137;
	not.b64 	%rd11171, %rd11110;
	and.b64  	%rd11172, %rd11135, %rd11171;
	xor.b64  	%rd11173, %rd11172, %rd11138;
	not.b64 	%rd11174, %rd11140;
	and.b64  	%rd11175, %rd11141, %rd11174;
	xor.b64  	%rd11176, %rd11175, %rd11139;
	not.b64 	%rd11177, %rd11141;
	and.b64  	%rd11178, %rd11142, %rd11177;
	xor.b64  	%rd11179, %rd11178, %rd11140;
	not.b64 	%rd11180, %rd11142;
	and.b64  	%rd11181, %rd11143, %rd11180;
	xor.b64  	%rd11182, %rd11181, %rd11141;
	not.b64 	%rd11183, %rd11143;
	and.b64  	%rd11184, %rd11139, %rd11183;
	xor.b64  	%rd11185, %rd11184, %rd11142;
	not.b64 	%rd11186, %rd11139;
	and.b64  	%rd11187, %rd11140, %rd11186;
	xor.b64  	%rd11188, %rd11187, %rd11143;
	not.b64 	%rd11189, %rd11145;
	and.b64  	%rd11190, %rd11146, %rd11189;
	xor.b64  	%rd11191, %rd11190, %rd11144;
	not.b64 	%rd11192, %rd11146;
	and.b64  	%rd11193, %rd11147, %rd11192;
	xor.b64  	%rd11194, %rd11193, %rd11145;
	not.b64 	%rd11195, %rd11147;
	and.b64  	%rd11196, %rd11148, %rd11195;
	xor.b64  	%rd11197, %rd11196, %rd11146;
	not.b64 	%rd11198, %rd11148;
	and.b64  	%rd11199, %rd11144, %rd11198;
	xor.b64  	%rd11200, %rd11199, %rd11147;
	not.b64 	%rd11201, %rd11144;
	and.b64  	%rd11202, %rd11145, %rd11201;
	xor.b64  	%rd11203, %rd11202, %rd11148;
	not.b64 	%rd11204, %rd11150;
	and.b64  	%rd11205, %rd11151, %rd11204;
	xor.b64  	%rd11206, %rd11205, %rd11149;
	not.b64 	%rd11207, %rd11151;
	and.b64  	%rd11208, %rd11152, %rd11207;
	xor.b64  	%rd11209, %rd11208, %rd11150;
	not.b64 	%rd11210, %rd11152;
	and.b64  	%rd11211, %rd11153, %rd11210;
	xor.b64  	%rd11212, %rd11211, %rd11151;
	not.b64 	%rd11213, %rd11153;
	and.b64  	%rd11214, %rd11149, %rd11213;
	xor.b64  	%rd11215, %rd11214, %rd11152;
	not.b64 	%rd11216, %rd11149;
	and.b64  	%rd11217, %rd11150, %rd11216;
	xor.b64  	%rd11218, %rd11217, %rd11153;
	not.b64 	%rd11219, %rd11155;
	and.b64  	%rd11220, %rd11156, %rd11219;
	xor.b64  	%rd11221, %rd11220, %rd11154;
	not.b64 	%rd11222, %rd11156;
	and.b64  	%rd11223, %rd11157, %rd11222;
	xor.b64  	%rd11224, %rd11223, %rd11155;
	not.b64 	%rd11225, %rd11157;
	and.b64  	%rd11226, %rd11158, %rd11225;
	xor.b64  	%rd11227, %rd11226, %rd11156;
	not.b64 	%rd11228, %rd11158;
	and.b64  	%rd11229, %rd11154, %rd11228;
	xor.b64  	%rd11230, %rd11229, %rd11157;
	not.b64 	%rd11231, %rd11154;
	and.b64  	%rd11232, %rd11155, %rd11231;
	xor.b64  	%rd11233, %rd11232, %rd11158;
	xor.b64  	%rd11235, %rd11161, %rd35;
	xor.b64  	%rd11236, %rd11176, %rd11235;
	xor.b64  	%rd11237, %rd11236, %rd11191;
	xor.b64  	%rd11238, %rd11237, %rd11206;
	xor.b64  	%rd11239, %rd11238, %rd11221;
	xor.b64  	%rd11240, %rd11179, %rd11164;
	xor.b64  	%rd11241, %rd11240, %rd11194;
	xor.b64  	%rd11242, %rd11241, %rd11209;
	xor.b64  	%rd11243, %rd11242, %rd11224;
	xor.b64  	%rd11244, %rd11182, %rd11167;
	xor.b64  	%rd11245, %rd11244, %rd11197;
	xor.b64  	%rd11246, %rd11245, %rd11212;
	xor.b64  	%rd11247, %rd11246, %rd11227;
	xor.b64  	%rd11248, %rd11185, %rd11170;
	xor.b64  	%rd11249, %rd11248, %rd11200;
	xor.b64  	%rd11250, %rd11249, %rd11215;
	xor.b64  	%rd11251, %rd11250, %rd11230;
	xor.b64  	%rd11252, %rd11188, %rd11173;
	xor.b64  	%rd11253, %rd11252, %rd11203;
	xor.b64  	%rd11254, %rd11253, %rd11218;
	xor.b64  	%rd11255, %rd11254, %rd11233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7965}, %rd11243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7966,%dummy}, %rd11243;
	}
	shf.l.wrap.b32 	%r7967, %r7966, %r7965, 1;
	shf.l.wrap.b32 	%r7968, %r7965, %r7966, 1;
	mov.b64 	%rd11256, {%r7968, %r7967};
	xor.b64  	%rd11257, %rd11255, %rd11256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7969}, %rd11247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7970,%dummy}, %rd11247;
	}
	shf.l.wrap.b32 	%r7971, %r7970, %r7969, 1;
	shf.l.wrap.b32 	%r7972, %r7969, %r7970, 1;
	mov.b64 	%rd11258, {%r7972, %r7971};
	xor.b64  	%rd11259, %rd11258, %rd11239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7973}, %rd11251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7974,%dummy}, %rd11251;
	}
	shf.l.wrap.b32 	%r7975, %r7974, %r7973, 1;
	shf.l.wrap.b32 	%r7976, %r7973, %r7974, 1;
	mov.b64 	%rd11260, {%r7976, %r7975};
	xor.b64  	%rd11261, %rd11260, %rd11243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7977}, %rd11255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7978,%dummy}, %rd11255;
	}
	shf.l.wrap.b32 	%r7979, %r7978, %r7977, 1;
	shf.l.wrap.b32 	%r7980, %r7977, %r7978, 1;
	mov.b64 	%rd11262, {%r7980, %r7979};
	xor.b64  	%rd11263, %rd11262, %rd11247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7981}, %rd11239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7982,%dummy}, %rd11239;
	}
	shf.l.wrap.b32 	%r7983, %r7982, %r7981, 1;
	shf.l.wrap.b32 	%r7984, %r7981, %r7982, 1;
	mov.b64 	%rd11264, {%r7984, %r7983};
	xor.b64  	%rd11265, %rd11251, %rd11264;
	xor.b64  	%rd11266, %rd11257, %rd11235;
	xor.b64  	%rd11267, %rd11259, %rd11164;
	xor.b64  	%rd11268, %rd11261, %rd11167;
	xor.b64  	%rd11269, %rd11263, %rd11170;
	xor.b64  	%rd11270, %rd11265, %rd11173;
	xor.b64  	%rd11271, %rd11257, %rd11176;
	xor.b64  	%rd11272, %rd11259, %rd11179;
	xor.b64  	%rd11273, %rd11261, %rd11182;
	xor.b64  	%rd11274, %rd11263, %rd11185;
	xor.b64  	%rd11275, %rd11265, %rd11188;
	xor.b64  	%rd11276, %rd11257, %rd11191;
	xor.b64  	%rd11277, %rd11259, %rd11194;
	xor.b64  	%rd11278, %rd11261, %rd11197;
	xor.b64  	%rd11279, %rd11263, %rd11200;
	xor.b64  	%rd11280, %rd11265, %rd11203;
	xor.b64  	%rd11281, %rd11257, %rd11206;
	xor.b64  	%rd11282, %rd11259, %rd11209;
	xor.b64  	%rd11283, %rd11261, %rd11212;
	xor.b64  	%rd11284, %rd11263, %rd11215;
	xor.b64  	%rd11285, %rd11265, %rd11218;
	xor.b64  	%rd11286, %rd11257, %rd11221;
	xor.b64  	%rd11287, %rd11259, %rd11224;
	xor.b64  	%rd11288, %rd11261, %rd11227;
	xor.b64  	%rd11289, %rd11263, %rd11230;
	xor.b64  	%rd11290, %rd11265, %rd11233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7985,%dummy}, %rd11272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7986}, %rd11272;
	}
	shf.r.wrap.b32 	%r7987, %r7986, %r7985, 20;
	shf.r.wrap.b32 	%r7988, %r7985, %r7986, 20;
	mov.b64 	%rd11291, {%r7988, %r7987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7989,%dummy}, %rd11278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7990}, %rd11278;
	}
	shf.r.wrap.b32 	%r7991, %r7990, %r7989, 21;
	shf.r.wrap.b32 	%r7992, %r7989, %r7990, 21;
	mov.b64 	%rd11292, {%r7992, %r7991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7993}, %rd11284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7994,%dummy}, %rd11284;
	}
	shf.l.wrap.b32 	%r7995, %r7994, %r7993, 21;
	shf.l.wrap.b32 	%r7996, %r7993, %r7994, 21;
	mov.b64 	%rd11293, {%r7996, %r7995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd11290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7998,%dummy}, %rd11290;
	}
	shf.l.wrap.b32 	%r7999, %r7998, %r7997, 14;
	shf.l.wrap.b32 	%r8000, %r7997, %r7998, 14;
	mov.b64 	%rd11294, {%r8000, %r7999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8001}, %rd11269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8002,%dummy}, %rd11269;
	}
	shf.l.wrap.b32 	%r8003, %r8002, %r8001, 28;
	shf.l.wrap.b32 	%r8004, %r8001, %r8002, 28;
	mov.b64 	%rd11295, {%r8004, %r8003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8005}, %rd11275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8006,%dummy}, %rd11275;
	}
	shf.l.wrap.b32 	%r8007, %r8006, %r8005, 20;
	shf.l.wrap.b32 	%r8008, %r8005, %r8006, 20;
	mov.b64 	%rd11296, {%r8008, %r8007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8009}, %rd11276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8010,%dummy}, %rd11276;
	}
	shf.l.wrap.b32 	%r8011, %r8010, %r8009, 3;
	shf.l.wrap.b32 	%r8012, %r8009, %r8010, 3;
	mov.b64 	%rd11297, {%r8012, %r8011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8013,%dummy}, %rd11282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8014}, %rd11282;
	}
	shf.r.wrap.b32 	%r8015, %r8014, %r8013, 19;
	shf.r.wrap.b32 	%r8016, %r8013, %r8014, 19;
	mov.b64 	%rd11298, {%r8016, %r8015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8017,%dummy}, %rd11288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8018}, %rd11288;
	}
	shf.r.wrap.b32 	%r8019, %r8018, %r8017, 3;
	shf.r.wrap.b32 	%r8020, %r8017, %r8018, 3;
	mov.b64 	%rd11299, {%r8020, %r8019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8021}, %rd11267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8022,%dummy}, %rd11267;
	}
	shf.l.wrap.b32 	%r8023, %r8022, %r8021, 1;
	shf.l.wrap.b32 	%r8024, %r8021, %r8022, 1;
	mov.b64 	%rd11300, {%r8024, %r8023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8025}, %rd11273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8026,%dummy}, %rd11273;
	}
	shf.l.wrap.b32 	%r8027, %r8026, %r8025, 6;
	shf.l.wrap.b32 	%r8028, %r8025, %r8026, 6;
	mov.b64 	%rd11301, {%r8028, %r8027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8029}, %rd11279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8030,%dummy}, %rd11279;
	}
	shf.l.wrap.b32 	%r8031, %r8030, %r8029, 25;
	shf.l.wrap.b32 	%r8032, %r8029, %r8030, 25;
	mov.b64 	%rd11302, {%r8032, %r8031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8033}, %rd11285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8034,%dummy}, %rd11285;
	}
	shf.l.wrap.b32 	%r8035, %r8034, %r8033, 8;
	shf.l.wrap.b32 	%r8036, %r8033, %r8034, 8;
	mov.b64 	%rd11303, {%r8036, %r8035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8037}, %rd11286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8038,%dummy}, %rd11286;
	}
	shf.l.wrap.b32 	%r8039, %r8038, %r8037, 18;
	shf.l.wrap.b32 	%r8040, %r8037, %r8038, 18;
	mov.b64 	%rd11304, {%r8040, %r8039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8041}, %rd11270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8042,%dummy}, %rd11270;
	}
	shf.l.wrap.b32 	%r8043, %r8042, %r8041, 27;
	shf.l.wrap.b32 	%r8044, %r8041, %r8042, 27;
	mov.b64 	%rd11305, {%r8044, %r8043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8045,%dummy}, %rd11271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8046}, %rd11271;
	}
	shf.r.wrap.b32 	%r8047, %r8046, %r8045, 28;
	shf.r.wrap.b32 	%r8048, %r8045, %r8046, 28;
	mov.b64 	%rd11306, {%r8048, %r8047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8049}, %rd11277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8050,%dummy}, %rd11277;
	}
	shf.l.wrap.b32 	%r8051, %r8050, %r8049, 10;
	shf.l.wrap.b32 	%r8052, %r8049, %r8050, 10;
	mov.b64 	%rd11307, {%r8052, %r8051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8053}, %rd11283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8054,%dummy}, %rd11283;
	}
	shf.l.wrap.b32 	%r8055, %r8054, %r8053, 15;
	shf.l.wrap.b32 	%r8056, %r8053, %r8054, 15;
	mov.b64 	%rd11308, {%r8056, %r8055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8057,%dummy}, %rd11289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8058}, %rd11289;
	}
	shf.r.wrap.b32 	%r8059, %r8058, %r8057, 8;
	shf.r.wrap.b32 	%r8060, %r8057, %r8058, 8;
	mov.b64 	%rd11309, {%r8060, %r8059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8061,%dummy}, %rd11268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8062}, %rd11268;
	}
	shf.r.wrap.b32 	%r8063, %r8062, %r8061, 2;
	shf.r.wrap.b32 	%r8064, %r8061, %r8062, 2;
	mov.b64 	%rd11310, {%r8064, %r8063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8065,%dummy}, %rd11274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8066}, %rd11274;
	}
	shf.r.wrap.b32 	%r8067, %r8066, %r8065, 9;
	shf.r.wrap.b32 	%r8068, %r8065, %r8066, 9;
	mov.b64 	%rd11311, {%r8068, %r8067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8069,%dummy}, %rd11280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8070}, %rd11280;
	}
	shf.r.wrap.b32 	%r8071, %r8070, %r8069, 25;
	shf.r.wrap.b32 	%r8072, %r8069, %r8070, 25;
	mov.b64 	%rd11312, {%r8072, %r8071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8073,%dummy}, %rd11281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8074}, %rd11281;
	}
	shf.r.wrap.b32 	%r8075, %r8074, %r8073, 23;
	shf.r.wrap.b32 	%r8076, %r8073, %r8074, 23;
	mov.b64 	%rd11313, {%r8076, %r8075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8077}, %rd11287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8078,%dummy}, %rd11287;
	}
	shf.l.wrap.b32 	%r8079, %r8078, %r8077, 2;
	shf.l.wrap.b32 	%r8080, %r8077, %r8078, 2;
	mov.b64 	%rd11314, {%r8080, %r8079};
	not.b64 	%rd11315, %rd11291;
	and.b64  	%rd11316, %rd11292, %rd11315;
	xor.b64  	%rd11317, %rd11316, %rd11266;
	not.b64 	%rd11318, %rd11292;
	and.b64  	%rd11319, %rd11293, %rd11318;
	xor.b64  	%rd11320, %rd11319, %rd11291;
	not.b64 	%rd11321, %rd11293;
	and.b64  	%rd11322, %rd11294, %rd11321;
	xor.b64  	%rd11323, %rd11322, %rd11292;
	not.b64 	%rd11324, %rd11294;
	and.b64  	%rd11325, %rd11266, %rd11324;
	xor.b64  	%rd11326, %rd11325, %rd11293;
	not.b64 	%rd11327, %rd11266;
	and.b64  	%rd11328, %rd11291, %rd11327;
	xor.b64  	%rd11329, %rd11328, %rd11294;
	not.b64 	%rd11330, %rd11296;
	and.b64  	%rd11331, %rd11297, %rd11330;
	xor.b64  	%rd11332, %rd11331, %rd11295;
	not.b64 	%rd11333, %rd11297;
	and.b64  	%rd11334, %rd11298, %rd11333;
	xor.b64  	%rd11335, %rd11334, %rd11296;
	not.b64 	%rd11336, %rd11298;
	and.b64  	%rd11337, %rd11299, %rd11336;
	xor.b64  	%rd11338, %rd11337, %rd11297;
	not.b64 	%rd11339, %rd11299;
	and.b64  	%rd11340, %rd11295, %rd11339;
	xor.b64  	%rd11341, %rd11340, %rd11298;
	not.b64 	%rd11342, %rd11295;
	and.b64  	%rd11343, %rd11296, %rd11342;
	xor.b64  	%rd11344, %rd11343, %rd11299;
	not.b64 	%rd11345, %rd11301;
	and.b64  	%rd11346, %rd11302, %rd11345;
	xor.b64  	%rd11347, %rd11346, %rd11300;
	not.b64 	%rd11348, %rd11302;
	and.b64  	%rd11349, %rd11303, %rd11348;
	xor.b64  	%rd11350, %rd11349, %rd11301;
	not.b64 	%rd11351, %rd11303;
	and.b64  	%rd11352, %rd11304, %rd11351;
	xor.b64  	%rd11353, %rd11352, %rd11302;
	not.b64 	%rd11354, %rd11304;
	and.b64  	%rd11355, %rd11300, %rd11354;
	xor.b64  	%rd11356, %rd11355, %rd11303;
	not.b64 	%rd11357, %rd11300;
	and.b64  	%rd11358, %rd11301, %rd11357;
	xor.b64  	%rd11359, %rd11358, %rd11304;
	not.b64 	%rd11360, %rd11306;
	and.b64  	%rd11361, %rd11307, %rd11360;
	xor.b64  	%rd11362, %rd11361, %rd11305;
	not.b64 	%rd11363, %rd11307;
	and.b64  	%rd11364, %rd11308, %rd11363;
	xor.b64  	%rd11365, %rd11364, %rd11306;
	not.b64 	%rd11366, %rd11308;
	and.b64  	%rd11367, %rd11309, %rd11366;
	xor.b64  	%rd11368, %rd11367, %rd11307;
	not.b64 	%rd11369, %rd11309;
	and.b64  	%rd11370, %rd11305, %rd11369;
	xor.b64  	%rd11371, %rd11370, %rd11308;
	not.b64 	%rd11372, %rd11305;
	and.b64  	%rd11373, %rd11306, %rd11372;
	xor.b64  	%rd11374, %rd11373, %rd11309;
	not.b64 	%rd11375, %rd11311;
	and.b64  	%rd11376, %rd11312, %rd11375;
	xor.b64  	%rd11377, %rd11376, %rd11310;
	not.b64 	%rd11378, %rd11312;
	and.b64  	%rd11379, %rd11313, %rd11378;
	xor.b64  	%rd11380, %rd11379, %rd11311;
	not.b64 	%rd11381, %rd11313;
	and.b64  	%rd11382, %rd11314, %rd11381;
	xor.b64  	%rd11383, %rd11382, %rd11312;
	not.b64 	%rd11384, %rd11314;
	and.b64  	%rd11385, %rd11310, %rd11384;
	xor.b64  	%rd11386, %rd11385, %rd11313;
	not.b64 	%rd11387, %rd11310;
	and.b64  	%rd11388, %rd11311, %rd11387;
	xor.b64  	%rd11389, %rd11388, %rd11314;
	xor.b64  	%rd11391, %rd11317, %rd36;
	xor.b64  	%rd11392, %rd11332, %rd11391;
	xor.b64  	%rd11393, %rd11392, %rd11347;
	xor.b64  	%rd11394, %rd11393, %rd11362;
	xor.b64  	%rd11395, %rd11394, %rd11377;
	xor.b64  	%rd11396, %rd11335, %rd11320;
	xor.b64  	%rd11397, %rd11396, %rd11350;
	xor.b64  	%rd11398, %rd11397, %rd11365;
	xor.b64  	%rd11399, %rd11398, %rd11380;
	xor.b64  	%rd11400, %rd11338, %rd11323;
	xor.b64  	%rd11401, %rd11400, %rd11353;
	xor.b64  	%rd11402, %rd11401, %rd11368;
	xor.b64  	%rd11403, %rd11402, %rd11383;
	xor.b64  	%rd11404, %rd11341, %rd11326;
	xor.b64  	%rd11405, %rd11404, %rd11356;
	xor.b64  	%rd11406, %rd11405, %rd11371;
	xor.b64  	%rd11407, %rd11406, %rd11386;
	xor.b64  	%rd11408, %rd11344, %rd11329;
	xor.b64  	%rd11409, %rd11408, %rd11359;
	xor.b64  	%rd11410, %rd11409, %rd11374;
	xor.b64  	%rd11411, %rd11410, %rd11389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8081}, %rd11399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8082,%dummy}, %rd11399;
	}
	shf.l.wrap.b32 	%r8083, %r8082, %r8081, 1;
	shf.l.wrap.b32 	%r8084, %r8081, %r8082, 1;
	mov.b64 	%rd11412, {%r8084, %r8083};
	xor.b64  	%rd11413, %rd11411, %rd11412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8085}, %rd11403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8086,%dummy}, %rd11403;
	}
	shf.l.wrap.b32 	%r8087, %r8086, %r8085, 1;
	shf.l.wrap.b32 	%r8088, %r8085, %r8086, 1;
	mov.b64 	%rd11414, {%r8088, %r8087};
	xor.b64  	%rd11415, %rd11414, %rd11395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8089}, %rd11407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8090,%dummy}, %rd11407;
	}
	shf.l.wrap.b32 	%r8091, %r8090, %r8089, 1;
	shf.l.wrap.b32 	%r8092, %r8089, %r8090, 1;
	mov.b64 	%rd11416, {%r8092, %r8091};
	xor.b64  	%rd11417, %rd11416, %rd11399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8093}, %rd11411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8094,%dummy}, %rd11411;
	}
	shf.l.wrap.b32 	%r8095, %r8094, %r8093, 1;
	shf.l.wrap.b32 	%r8096, %r8093, %r8094, 1;
	mov.b64 	%rd11418, {%r8096, %r8095};
	xor.b64  	%rd11419, %rd11418, %rd11403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8097}, %rd11395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8098,%dummy}, %rd11395;
	}
	shf.l.wrap.b32 	%r8099, %r8098, %r8097, 1;
	shf.l.wrap.b32 	%r8100, %r8097, %r8098, 1;
	mov.b64 	%rd11420, {%r8100, %r8099};
	xor.b64  	%rd11421, %rd11407, %rd11420;
	xor.b64  	%rd11422, %rd11413, %rd11391;
	xor.b64  	%rd11423, %rd11415, %rd11320;
	xor.b64  	%rd11424, %rd11417, %rd11323;
	xor.b64  	%rd11425, %rd11419, %rd11326;
	xor.b64  	%rd11426, %rd11421, %rd11329;
	xor.b64  	%rd11427, %rd11413, %rd11332;
	xor.b64  	%rd11428, %rd11415, %rd11335;
	xor.b64  	%rd11429, %rd11417, %rd11338;
	xor.b64  	%rd11430, %rd11419, %rd11341;
	xor.b64  	%rd11431, %rd11421, %rd11344;
	xor.b64  	%rd11432, %rd11413, %rd11347;
	xor.b64  	%rd11433, %rd11415, %rd11350;
	xor.b64  	%rd11434, %rd11417, %rd11353;
	xor.b64  	%rd11435, %rd11419, %rd11356;
	xor.b64  	%rd11436, %rd11421, %rd11359;
	xor.b64  	%rd11437, %rd11413, %rd11362;
	xor.b64  	%rd11438, %rd11415, %rd11365;
	xor.b64  	%rd11439, %rd11417, %rd11368;
	xor.b64  	%rd11440, %rd11419, %rd11371;
	xor.b64  	%rd11441, %rd11421, %rd11374;
	xor.b64  	%rd11442, %rd11413, %rd11377;
	xor.b64  	%rd11443, %rd11415, %rd11380;
	xor.b64  	%rd11444, %rd11417, %rd11383;
	xor.b64  	%rd11445, %rd11419, %rd11386;
	xor.b64  	%rd11446, %rd11421, %rd11389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8101,%dummy}, %rd11428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8102}, %rd11428;
	}
	shf.r.wrap.b32 	%r8103, %r8102, %r8101, 20;
	shf.r.wrap.b32 	%r8104, %r8101, %r8102, 20;
	mov.b64 	%rd11447, {%r8104, %r8103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8105,%dummy}, %rd11434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8106}, %rd11434;
	}
	shf.r.wrap.b32 	%r8107, %r8106, %r8105, 21;
	shf.r.wrap.b32 	%r8108, %r8105, %r8106, 21;
	mov.b64 	%rd11448, {%r8108, %r8107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8109}, %rd11440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8110,%dummy}, %rd11440;
	}
	shf.l.wrap.b32 	%r8111, %r8110, %r8109, 21;
	shf.l.wrap.b32 	%r8112, %r8109, %r8110, 21;
	mov.b64 	%rd11449, {%r8112, %r8111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8113}, %rd11446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8114,%dummy}, %rd11446;
	}
	shf.l.wrap.b32 	%r8115, %r8114, %r8113, 14;
	shf.l.wrap.b32 	%r8116, %r8113, %r8114, 14;
	mov.b64 	%rd11450, {%r8116, %r8115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8117}, %rd11425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8118,%dummy}, %rd11425;
	}
	shf.l.wrap.b32 	%r8119, %r8118, %r8117, 28;
	shf.l.wrap.b32 	%r8120, %r8117, %r8118, 28;
	mov.b64 	%rd11451, {%r8120, %r8119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8121}, %rd11431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8122,%dummy}, %rd11431;
	}
	shf.l.wrap.b32 	%r8123, %r8122, %r8121, 20;
	shf.l.wrap.b32 	%r8124, %r8121, %r8122, 20;
	mov.b64 	%rd11452, {%r8124, %r8123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8125}, %rd11432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8126,%dummy}, %rd11432;
	}
	shf.l.wrap.b32 	%r8127, %r8126, %r8125, 3;
	shf.l.wrap.b32 	%r8128, %r8125, %r8126, 3;
	mov.b64 	%rd11453, {%r8128, %r8127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8129,%dummy}, %rd11438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8130}, %rd11438;
	}
	shf.r.wrap.b32 	%r8131, %r8130, %r8129, 19;
	shf.r.wrap.b32 	%r8132, %r8129, %r8130, 19;
	mov.b64 	%rd11454, {%r8132, %r8131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8133,%dummy}, %rd11444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8134}, %rd11444;
	}
	shf.r.wrap.b32 	%r8135, %r8134, %r8133, 3;
	shf.r.wrap.b32 	%r8136, %r8133, %r8134, 3;
	mov.b64 	%rd11455, {%r8136, %r8135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8137}, %rd11423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8138,%dummy}, %rd11423;
	}
	shf.l.wrap.b32 	%r8139, %r8138, %r8137, 1;
	shf.l.wrap.b32 	%r8140, %r8137, %r8138, 1;
	mov.b64 	%rd11456, {%r8140, %r8139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8141}, %rd11429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8142,%dummy}, %rd11429;
	}
	shf.l.wrap.b32 	%r8143, %r8142, %r8141, 6;
	shf.l.wrap.b32 	%r8144, %r8141, %r8142, 6;
	mov.b64 	%rd11457, {%r8144, %r8143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8145}, %rd11435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8146,%dummy}, %rd11435;
	}
	shf.l.wrap.b32 	%r8147, %r8146, %r8145, 25;
	shf.l.wrap.b32 	%r8148, %r8145, %r8146, 25;
	mov.b64 	%rd11458, {%r8148, %r8147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8149}, %rd11441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8150,%dummy}, %rd11441;
	}
	shf.l.wrap.b32 	%r8151, %r8150, %r8149, 8;
	shf.l.wrap.b32 	%r8152, %r8149, %r8150, 8;
	mov.b64 	%rd11459, {%r8152, %r8151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8153}, %rd11442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8154,%dummy}, %rd11442;
	}
	shf.l.wrap.b32 	%r8155, %r8154, %r8153, 18;
	shf.l.wrap.b32 	%r8156, %r8153, %r8154, 18;
	mov.b64 	%rd11460, {%r8156, %r8155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8157}, %rd11426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8158,%dummy}, %rd11426;
	}
	shf.l.wrap.b32 	%r8159, %r8158, %r8157, 27;
	shf.l.wrap.b32 	%r8160, %r8157, %r8158, 27;
	mov.b64 	%rd11461, {%r8160, %r8159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8161,%dummy}, %rd11427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8162}, %rd11427;
	}
	shf.r.wrap.b32 	%r8163, %r8162, %r8161, 28;
	shf.r.wrap.b32 	%r8164, %r8161, %r8162, 28;
	mov.b64 	%rd11462, {%r8164, %r8163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8165}, %rd11433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8166,%dummy}, %rd11433;
	}
	shf.l.wrap.b32 	%r8167, %r8166, %r8165, 10;
	shf.l.wrap.b32 	%r8168, %r8165, %r8166, 10;
	mov.b64 	%rd11463, {%r8168, %r8167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8169}, %rd11439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8170,%dummy}, %rd11439;
	}
	shf.l.wrap.b32 	%r8171, %r8170, %r8169, 15;
	shf.l.wrap.b32 	%r8172, %r8169, %r8170, 15;
	mov.b64 	%rd11464, {%r8172, %r8171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8173,%dummy}, %rd11445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8174}, %rd11445;
	}
	shf.r.wrap.b32 	%r8175, %r8174, %r8173, 8;
	shf.r.wrap.b32 	%r8176, %r8173, %r8174, 8;
	mov.b64 	%rd11465, {%r8176, %r8175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8177,%dummy}, %rd11424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8178}, %rd11424;
	}
	shf.r.wrap.b32 	%r8179, %r8178, %r8177, 2;
	shf.r.wrap.b32 	%r8180, %r8177, %r8178, 2;
	mov.b64 	%rd11466, {%r8180, %r8179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8181,%dummy}, %rd11430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8182}, %rd11430;
	}
	shf.r.wrap.b32 	%r8183, %r8182, %r8181, 9;
	shf.r.wrap.b32 	%r8184, %r8181, %r8182, 9;
	mov.b64 	%rd11467, {%r8184, %r8183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8185,%dummy}, %rd11436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8186}, %rd11436;
	}
	shf.r.wrap.b32 	%r8187, %r8186, %r8185, 25;
	shf.r.wrap.b32 	%r8188, %r8185, %r8186, 25;
	mov.b64 	%rd11468, {%r8188, %r8187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8189,%dummy}, %rd11437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8190}, %rd11437;
	}
	shf.r.wrap.b32 	%r8191, %r8190, %r8189, 23;
	shf.r.wrap.b32 	%r8192, %r8189, %r8190, 23;
	mov.b64 	%rd11469, {%r8192, %r8191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8193}, %rd11443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8194,%dummy}, %rd11443;
	}
	shf.l.wrap.b32 	%r8195, %r8194, %r8193, 2;
	shf.l.wrap.b32 	%r8196, %r8193, %r8194, 2;
	mov.b64 	%rd11470, {%r8196, %r8195};
	not.b64 	%rd11471, %rd11447;
	and.b64  	%rd11472, %rd11448, %rd11471;
	xor.b64  	%rd11473, %rd11472, %rd11422;
	not.b64 	%rd11474, %rd11448;
	and.b64  	%rd11475, %rd11449, %rd11474;
	xor.b64  	%rd11476, %rd11475, %rd11447;
	not.b64 	%rd11477, %rd11449;
	and.b64  	%rd11478, %rd11450, %rd11477;
	xor.b64  	%rd11479, %rd11478, %rd11448;
	not.b64 	%rd11480, %rd11450;
	and.b64  	%rd11481, %rd11422, %rd11480;
	xor.b64  	%rd11482, %rd11481, %rd11449;
	not.b64 	%rd11483, %rd11422;
	and.b64  	%rd11484, %rd11447, %rd11483;
	xor.b64  	%rd11485, %rd11484, %rd11450;
	not.b64 	%rd11486, %rd11452;
	and.b64  	%rd11487, %rd11453, %rd11486;
	xor.b64  	%rd11488, %rd11487, %rd11451;
	not.b64 	%rd11489, %rd11453;
	and.b64  	%rd11490, %rd11454, %rd11489;
	xor.b64  	%rd11491, %rd11490, %rd11452;
	not.b64 	%rd11492, %rd11454;
	and.b64  	%rd11493, %rd11455, %rd11492;
	xor.b64  	%rd11494, %rd11493, %rd11453;
	not.b64 	%rd11495, %rd11455;
	and.b64  	%rd11496, %rd11451, %rd11495;
	xor.b64  	%rd11497, %rd11496, %rd11454;
	not.b64 	%rd11498, %rd11451;
	and.b64  	%rd11499, %rd11452, %rd11498;
	xor.b64  	%rd11500, %rd11499, %rd11455;
	not.b64 	%rd11501, %rd11457;
	and.b64  	%rd11502, %rd11458, %rd11501;
	xor.b64  	%rd11503, %rd11502, %rd11456;
	not.b64 	%rd11504, %rd11458;
	and.b64  	%rd11505, %rd11459, %rd11504;
	xor.b64  	%rd11506, %rd11505, %rd11457;
	not.b64 	%rd11507, %rd11459;
	and.b64  	%rd11508, %rd11460, %rd11507;
	xor.b64  	%rd11509, %rd11508, %rd11458;
	not.b64 	%rd11510, %rd11460;
	and.b64  	%rd11511, %rd11456, %rd11510;
	xor.b64  	%rd11512, %rd11511, %rd11459;
	not.b64 	%rd11513, %rd11456;
	and.b64  	%rd11514, %rd11457, %rd11513;
	xor.b64  	%rd11515, %rd11514, %rd11460;
	not.b64 	%rd11516, %rd11462;
	and.b64  	%rd11517, %rd11463, %rd11516;
	xor.b64  	%rd11518, %rd11517, %rd11461;
	not.b64 	%rd11519, %rd11463;
	and.b64  	%rd11520, %rd11464, %rd11519;
	xor.b64  	%rd11521, %rd11520, %rd11462;
	not.b64 	%rd11522, %rd11464;
	and.b64  	%rd11523, %rd11465, %rd11522;
	xor.b64  	%rd11524, %rd11523, %rd11463;
	not.b64 	%rd11525, %rd11465;
	and.b64  	%rd11526, %rd11461, %rd11525;
	xor.b64  	%rd11527, %rd11526, %rd11464;
	not.b64 	%rd11528, %rd11461;
	and.b64  	%rd11529, %rd11462, %rd11528;
	xor.b64  	%rd11530, %rd11529, %rd11465;
	not.b64 	%rd11531, %rd11467;
	and.b64  	%rd11532, %rd11468, %rd11531;
	xor.b64  	%rd11533, %rd11532, %rd11466;
	not.b64 	%rd11534, %rd11468;
	and.b64  	%rd11535, %rd11469, %rd11534;
	xor.b64  	%rd11536, %rd11535, %rd11467;
	not.b64 	%rd11537, %rd11469;
	and.b64  	%rd11538, %rd11470, %rd11537;
	xor.b64  	%rd11539, %rd11538, %rd11468;
	not.b64 	%rd11540, %rd11470;
	and.b64  	%rd11541, %rd11466, %rd11540;
	xor.b64  	%rd11542, %rd11541, %rd11469;
	not.b64 	%rd11543, %rd11466;
	and.b64  	%rd11544, %rd11467, %rd11543;
	xor.b64  	%rd11545, %rd11544, %rd11470;
	xor.b64  	%rd11547, %rd11473, %rd37;
	xor.b64  	%rd11548, %rd11488, %rd11547;
	xor.b64  	%rd11549, %rd11548, %rd11503;
	xor.b64  	%rd11550, %rd11549, %rd11518;
	xor.b64  	%rd11551, %rd11550, %rd11533;
	xor.b64  	%rd11552, %rd11491, %rd11476;
	xor.b64  	%rd11553, %rd11552, %rd11506;
	xor.b64  	%rd11554, %rd11553, %rd11521;
	xor.b64  	%rd11555, %rd11554, %rd11536;
	xor.b64  	%rd11556, %rd11494, %rd11479;
	xor.b64  	%rd11557, %rd11556, %rd11509;
	xor.b64  	%rd11558, %rd11557, %rd11524;
	xor.b64  	%rd11559, %rd11558, %rd11539;
	xor.b64  	%rd11560, %rd11497, %rd11482;
	xor.b64  	%rd11561, %rd11560, %rd11512;
	xor.b64  	%rd11562, %rd11561, %rd11527;
	xor.b64  	%rd11563, %rd11562, %rd11542;
	xor.b64  	%rd11564, %rd11500, %rd11485;
	xor.b64  	%rd11565, %rd11564, %rd11515;
	xor.b64  	%rd11566, %rd11565, %rd11530;
	xor.b64  	%rd11567, %rd11566, %rd11545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8197}, %rd11555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8198,%dummy}, %rd11555;
	}
	shf.l.wrap.b32 	%r8199, %r8198, %r8197, 1;
	shf.l.wrap.b32 	%r8200, %r8197, %r8198, 1;
	mov.b64 	%rd11568, {%r8200, %r8199};
	xor.b64  	%rd11569, %rd11567, %rd11568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8201}, %rd11559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8202,%dummy}, %rd11559;
	}
	shf.l.wrap.b32 	%r8203, %r8202, %r8201, 1;
	shf.l.wrap.b32 	%r8204, %r8201, %r8202, 1;
	mov.b64 	%rd11570, {%r8204, %r8203};
	xor.b64  	%rd11571, %rd11570, %rd11551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8205}, %rd11563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8206,%dummy}, %rd11563;
	}
	shf.l.wrap.b32 	%r8207, %r8206, %r8205, 1;
	shf.l.wrap.b32 	%r8208, %r8205, %r8206, 1;
	mov.b64 	%rd11572, {%r8208, %r8207};
	xor.b64  	%rd11573, %rd11572, %rd11555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8209}, %rd11567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8210,%dummy}, %rd11567;
	}
	shf.l.wrap.b32 	%r8211, %r8210, %r8209, 1;
	shf.l.wrap.b32 	%r8212, %r8209, %r8210, 1;
	mov.b64 	%rd11574, {%r8212, %r8211};
	xor.b64  	%rd11575, %rd11574, %rd11559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8213}, %rd11551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8214,%dummy}, %rd11551;
	}
	shf.l.wrap.b32 	%r8215, %r8214, %r8213, 1;
	shf.l.wrap.b32 	%r8216, %r8213, %r8214, 1;
	mov.b64 	%rd11576, {%r8216, %r8215};
	xor.b64  	%rd11577, %rd11563, %rd11576;
	xor.b64  	%rd11578, %rd11569, %rd11547;
	xor.b64  	%rd11579, %rd11571, %rd11476;
	xor.b64  	%rd11580, %rd11573, %rd11479;
	xor.b64  	%rd11581, %rd11575, %rd11482;
	xor.b64  	%rd11582, %rd11577, %rd11485;
	xor.b64  	%rd11583, %rd11569, %rd11488;
	xor.b64  	%rd11584, %rd11571, %rd11491;
	xor.b64  	%rd11585, %rd11573, %rd11494;
	xor.b64  	%rd11586, %rd11575, %rd11497;
	xor.b64  	%rd11587, %rd11577, %rd11500;
	xor.b64  	%rd11588, %rd11569, %rd11503;
	xor.b64  	%rd11589, %rd11571, %rd11506;
	xor.b64  	%rd11590, %rd11573, %rd11509;
	xor.b64  	%rd11591, %rd11575, %rd11512;
	xor.b64  	%rd11592, %rd11577, %rd11515;
	xor.b64  	%rd11593, %rd11569, %rd11518;
	xor.b64  	%rd11594, %rd11571, %rd11521;
	xor.b64  	%rd11595, %rd11573, %rd11524;
	xor.b64  	%rd11596, %rd11575, %rd11527;
	xor.b64  	%rd11597, %rd11577, %rd11530;
	xor.b64  	%rd11598, %rd11569, %rd11533;
	xor.b64  	%rd11599, %rd11571, %rd11536;
	xor.b64  	%rd11600, %rd11573, %rd11539;
	xor.b64  	%rd11601, %rd11575, %rd11542;
	xor.b64  	%rd11602, %rd11577, %rd11545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8217,%dummy}, %rd11584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8218}, %rd11584;
	}
	shf.r.wrap.b32 	%r8219, %r8218, %r8217, 20;
	shf.r.wrap.b32 	%r8220, %r8217, %r8218, 20;
	mov.b64 	%rd11603, {%r8220, %r8219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8221,%dummy}, %rd11590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8222}, %rd11590;
	}
	shf.r.wrap.b32 	%r8223, %r8222, %r8221, 21;
	shf.r.wrap.b32 	%r8224, %r8221, %r8222, 21;
	mov.b64 	%rd11604, {%r8224, %r8223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8225}, %rd11596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8226,%dummy}, %rd11596;
	}
	shf.l.wrap.b32 	%r8227, %r8226, %r8225, 21;
	shf.l.wrap.b32 	%r8228, %r8225, %r8226, 21;
	mov.b64 	%rd11605, {%r8228, %r8227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8229}, %rd11602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8230,%dummy}, %rd11602;
	}
	shf.l.wrap.b32 	%r8231, %r8230, %r8229, 14;
	shf.l.wrap.b32 	%r8232, %r8229, %r8230, 14;
	mov.b64 	%rd11606, {%r8232, %r8231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8233}, %rd11581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8234,%dummy}, %rd11581;
	}
	shf.l.wrap.b32 	%r8235, %r8234, %r8233, 28;
	shf.l.wrap.b32 	%r8236, %r8233, %r8234, 28;
	mov.b64 	%rd11607, {%r8236, %r8235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8237}, %rd11587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8238,%dummy}, %rd11587;
	}
	shf.l.wrap.b32 	%r8239, %r8238, %r8237, 20;
	shf.l.wrap.b32 	%r8240, %r8237, %r8238, 20;
	mov.b64 	%rd11608, {%r8240, %r8239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8241}, %rd11588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8242,%dummy}, %rd11588;
	}
	shf.l.wrap.b32 	%r8243, %r8242, %r8241, 3;
	shf.l.wrap.b32 	%r8244, %r8241, %r8242, 3;
	mov.b64 	%rd11609, {%r8244, %r8243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8245,%dummy}, %rd11594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8246}, %rd11594;
	}
	shf.r.wrap.b32 	%r8247, %r8246, %r8245, 19;
	shf.r.wrap.b32 	%r8248, %r8245, %r8246, 19;
	mov.b64 	%rd11610, {%r8248, %r8247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8249,%dummy}, %rd11600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8250}, %rd11600;
	}
	shf.r.wrap.b32 	%r8251, %r8250, %r8249, 3;
	shf.r.wrap.b32 	%r8252, %r8249, %r8250, 3;
	mov.b64 	%rd11611, {%r8252, %r8251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8253}, %rd11579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8254,%dummy}, %rd11579;
	}
	shf.l.wrap.b32 	%r8255, %r8254, %r8253, 1;
	shf.l.wrap.b32 	%r8256, %r8253, %r8254, 1;
	mov.b64 	%rd11612, {%r8256, %r8255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8257}, %rd11585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8258,%dummy}, %rd11585;
	}
	shf.l.wrap.b32 	%r8259, %r8258, %r8257, 6;
	shf.l.wrap.b32 	%r8260, %r8257, %r8258, 6;
	mov.b64 	%rd11613, {%r8260, %r8259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8261}, %rd11591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8262,%dummy}, %rd11591;
	}
	shf.l.wrap.b32 	%r8263, %r8262, %r8261, 25;
	shf.l.wrap.b32 	%r8264, %r8261, %r8262, 25;
	mov.b64 	%rd11614, {%r8264, %r8263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8265}, %rd11597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8266,%dummy}, %rd11597;
	}
	shf.l.wrap.b32 	%r8267, %r8266, %r8265, 8;
	shf.l.wrap.b32 	%r8268, %r8265, %r8266, 8;
	mov.b64 	%rd11615, {%r8268, %r8267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8269}, %rd11598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8270,%dummy}, %rd11598;
	}
	shf.l.wrap.b32 	%r8271, %r8270, %r8269, 18;
	shf.l.wrap.b32 	%r8272, %r8269, %r8270, 18;
	mov.b64 	%rd11616, {%r8272, %r8271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8273}, %rd11582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8274,%dummy}, %rd11582;
	}
	shf.l.wrap.b32 	%r8275, %r8274, %r8273, 27;
	shf.l.wrap.b32 	%r8276, %r8273, %r8274, 27;
	mov.b64 	%rd11617, {%r8276, %r8275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8277,%dummy}, %rd11583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8278}, %rd11583;
	}
	shf.r.wrap.b32 	%r8279, %r8278, %r8277, 28;
	shf.r.wrap.b32 	%r8280, %r8277, %r8278, 28;
	mov.b64 	%rd11618, {%r8280, %r8279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8281}, %rd11589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8282,%dummy}, %rd11589;
	}
	shf.l.wrap.b32 	%r8283, %r8282, %r8281, 10;
	shf.l.wrap.b32 	%r8284, %r8281, %r8282, 10;
	mov.b64 	%rd11619, {%r8284, %r8283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8285}, %rd11595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8286,%dummy}, %rd11595;
	}
	shf.l.wrap.b32 	%r8287, %r8286, %r8285, 15;
	shf.l.wrap.b32 	%r8288, %r8285, %r8286, 15;
	mov.b64 	%rd11620, {%r8288, %r8287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8289,%dummy}, %rd11601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8290}, %rd11601;
	}
	shf.r.wrap.b32 	%r8291, %r8290, %r8289, 8;
	shf.r.wrap.b32 	%r8292, %r8289, %r8290, 8;
	mov.b64 	%rd11621, {%r8292, %r8291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8293,%dummy}, %rd11580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8294}, %rd11580;
	}
	shf.r.wrap.b32 	%r8295, %r8294, %r8293, 2;
	shf.r.wrap.b32 	%r8296, %r8293, %r8294, 2;
	mov.b64 	%rd11622, {%r8296, %r8295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8297,%dummy}, %rd11586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8298}, %rd11586;
	}
	shf.r.wrap.b32 	%r8299, %r8298, %r8297, 9;
	shf.r.wrap.b32 	%r8300, %r8297, %r8298, 9;
	mov.b64 	%rd11623, {%r8300, %r8299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8301,%dummy}, %rd11592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8302}, %rd11592;
	}
	shf.r.wrap.b32 	%r8303, %r8302, %r8301, 25;
	shf.r.wrap.b32 	%r8304, %r8301, %r8302, 25;
	mov.b64 	%rd11624, {%r8304, %r8303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8305,%dummy}, %rd11593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8306}, %rd11593;
	}
	shf.r.wrap.b32 	%r8307, %r8306, %r8305, 23;
	shf.r.wrap.b32 	%r8308, %r8305, %r8306, 23;
	mov.b64 	%rd11625, {%r8308, %r8307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8309}, %rd11599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8310,%dummy}, %rd11599;
	}
	shf.l.wrap.b32 	%r8311, %r8310, %r8309, 2;
	shf.l.wrap.b32 	%r8312, %r8309, %r8310, 2;
	mov.b64 	%rd11626, {%r8312, %r8311};
	not.b64 	%rd11627, %rd11603;
	and.b64  	%rd11628, %rd11604, %rd11627;
	xor.b64  	%rd11629, %rd11628, %rd11578;
	not.b64 	%rd11630, %rd11604;
	and.b64  	%rd11631, %rd11605, %rd11630;
	xor.b64  	%rd11632, %rd11631, %rd11603;
	not.b64 	%rd11633, %rd11605;
	and.b64  	%rd11634, %rd11606, %rd11633;
	xor.b64  	%rd11635, %rd11634, %rd11604;
	not.b64 	%rd11636, %rd11606;
	and.b64  	%rd11637, %rd11578, %rd11636;
	xor.b64  	%rd11638, %rd11637, %rd11605;
	not.b64 	%rd11639, %rd11578;
	and.b64  	%rd11640, %rd11603, %rd11639;
	xor.b64  	%rd11641, %rd11640, %rd11606;
	not.b64 	%rd11642, %rd11608;
	and.b64  	%rd11643, %rd11609, %rd11642;
	xor.b64  	%rd11644, %rd11643, %rd11607;
	not.b64 	%rd11645, %rd11609;
	and.b64  	%rd11646, %rd11610, %rd11645;
	xor.b64  	%rd11647, %rd11646, %rd11608;
	not.b64 	%rd11648, %rd11610;
	and.b64  	%rd11649, %rd11611, %rd11648;
	xor.b64  	%rd11650, %rd11649, %rd11609;
	not.b64 	%rd11651, %rd11611;
	and.b64  	%rd11652, %rd11607, %rd11651;
	xor.b64  	%rd11653, %rd11652, %rd11610;
	not.b64 	%rd11654, %rd11607;
	and.b64  	%rd11655, %rd11608, %rd11654;
	xor.b64  	%rd11656, %rd11655, %rd11611;
	not.b64 	%rd11657, %rd11613;
	and.b64  	%rd11658, %rd11614, %rd11657;
	xor.b64  	%rd11659, %rd11658, %rd11612;
	not.b64 	%rd11660, %rd11614;
	and.b64  	%rd11661, %rd11615, %rd11660;
	xor.b64  	%rd11662, %rd11661, %rd11613;
	not.b64 	%rd11663, %rd11615;
	and.b64  	%rd11664, %rd11616, %rd11663;
	xor.b64  	%rd11665, %rd11664, %rd11614;
	not.b64 	%rd11666, %rd11616;
	and.b64  	%rd11667, %rd11612, %rd11666;
	xor.b64  	%rd11668, %rd11667, %rd11615;
	not.b64 	%rd11669, %rd11612;
	and.b64  	%rd11670, %rd11613, %rd11669;
	xor.b64  	%rd11671, %rd11670, %rd11616;
	not.b64 	%rd11672, %rd11618;
	and.b64  	%rd11673, %rd11619, %rd11672;
	xor.b64  	%rd11674, %rd11673, %rd11617;
	not.b64 	%rd11675, %rd11619;
	and.b64  	%rd11676, %rd11620, %rd11675;
	xor.b64  	%rd11677, %rd11676, %rd11618;
	not.b64 	%rd11678, %rd11620;
	and.b64  	%rd11679, %rd11621, %rd11678;
	xor.b64  	%rd11680, %rd11679, %rd11619;
	not.b64 	%rd11681, %rd11621;
	and.b64  	%rd11682, %rd11617, %rd11681;
	xor.b64  	%rd11683, %rd11682, %rd11620;
	not.b64 	%rd11684, %rd11617;
	and.b64  	%rd11685, %rd11618, %rd11684;
	xor.b64  	%rd11686, %rd11685, %rd11621;
	not.b64 	%rd11687, %rd11623;
	and.b64  	%rd11688, %rd11624, %rd11687;
	xor.b64  	%rd11689, %rd11688, %rd11622;
	not.b64 	%rd11690, %rd11624;
	and.b64  	%rd11691, %rd11625, %rd11690;
	xor.b64  	%rd11692, %rd11691, %rd11623;
	not.b64 	%rd11693, %rd11625;
	and.b64  	%rd11694, %rd11626, %rd11693;
	xor.b64  	%rd11695, %rd11694, %rd11624;
	not.b64 	%rd11696, %rd11626;
	and.b64  	%rd11697, %rd11622, %rd11696;
	xor.b64  	%rd11698, %rd11697, %rd11625;
	not.b64 	%rd11699, %rd11622;
	and.b64  	%rd11700, %rd11623, %rd11699;
	xor.b64  	%rd11701, %rd11700, %rd11626;
	xor.b64  	%rd11703, %rd11629, %rd38;
	xor.b64  	%rd11704, %rd11644, %rd11703;
	xor.b64  	%rd11705, %rd11704, %rd11659;
	xor.b64  	%rd11706, %rd11705, %rd11674;
	xor.b64  	%rd11707, %rd11706, %rd11689;
	xor.b64  	%rd11708, %rd11647, %rd11632;
	xor.b64  	%rd11709, %rd11708, %rd11662;
	xor.b64  	%rd11710, %rd11709, %rd11677;
	xor.b64  	%rd11711, %rd11710, %rd11692;
	xor.b64  	%rd11712, %rd11650, %rd11635;
	xor.b64  	%rd11713, %rd11712, %rd11665;
	xor.b64  	%rd11714, %rd11713, %rd11680;
	xor.b64  	%rd11715, %rd11714, %rd11695;
	xor.b64  	%rd11716, %rd11653, %rd11638;
	xor.b64  	%rd11717, %rd11716, %rd11668;
	xor.b64  	%rd11718, %rd11717, %rd11683;
	xor.b64  	%rd11719, %rd11718, %rd11698;
	xor.b64  	%rd11720, %rd11656, %rd11641;
	xor.b64  	%rd11721, %rd11720, %rd11671;
	xor.b64  	%rd11722, %rd11721, %rd11686;
	xor.b64  	%rd11723, %rd11722, %rd11701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8313}, %rd11711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8314,%dummy}, %rd11711;
	}
	shf.l.wrap.b32 	%r8315, %r8314, %r8313, 1;
	shf.l.wrap.b32 	%r8316, %r8313, %r8314, 1;
	mov.b64 	%rd11724, {%r8316, %r8315};
	xor.b64  	%rd11725, %rd11723, %rd11724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8317}, %rd11715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8318,%dummy}, %rd11715;
	}
	shf.l.wrap.b32 	%r8319, %r8318, %r8317, 1;
	shf.l.wrap.b32 	%r8320, %r8317, %r8318, 1;
	mov.b64 	%rd11726, {%r8320, %r8319};
	xor.b64  	%rd11727, %rd11726, %rd11707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8321}, %rd11719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8322,%dummy}, %rd11719;
	}
	shf.l.wrap.b32 	%r8323, %r8322, %r8321, 1;
	shf.l.wrap.b32 	%r8324, %r8321, %r8322, 1;
	mov.b64 	%rd11728, {%r8324, %r8323};
	xor.b64  	%rd11729, %rd11728, %rd11711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8325}, %rd11723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8326,%dummy}, %rd11723;
	}
	shf.l.wrap.b32 	%r8327, %r8326, %r8325, 1;
	shf.l.wrap.b32 	%r8328, %r8325, %r8326, 1;
	mov.b64 	%rd11730, {%r8328, %r8327};
	xor.b64  	%rd11731, %rd11730, %rd11715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8329}, %rd11707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8330,%dummy}, %rd11707;
	}
	shf.l.wrap.b32 	%r8331, %r8330, %r8329, 1;
	shf.l.wrap.b32 	%r8332, %r8329, %r8330, 1;
	mov.b64 	%rd11732, {%r8332, %r8331};
	xor.b64  	%rd11733, %rd11719, %rd11732;
	xor.b64  	%rd11734, %rd11725, %rd11703;
	xor.b64  	%rd11735, %rd11727, %rd11632;
	xor.b64  	%rd11736, %rd11729, %rd11635;
	xor.b64  	%rd11737, %rd11731, %rd11638;
	xor.b64  	%rd11738, %rd11733, %rd11641;
	xor.b64  	%rd11739, %rd11725, %rd11644;
	xor.b64  	%rd11740, %rd11727, %rd11647;
	xor.b64  	%rd11741, %rd11729, %rd11650;
	xor.b64  	%rd11742, %rd11731, %rd11653;
	xor.b64  	%rd11743, %rd11733, %rd11656;
	xor.b64  	%rd11744, %rd11725, %rd11659;
	xor.b64  	%rd11745, %rd11727, %rd11662;
	xor.b64  	%rd11746, %rd11729, %rd11665;
	xor.b64  	%rd11747, %rd11731, %rd11668;
	xor.b64  	%rd11748, %rd11733, %rd11671;
	xor.b64  	%rd11749, %rd11725, %rd11674;
	xor.b64  	%rd11750, %rd11727, %rd11677;
	xor.b64  	%rd11751, %rd11729, %rd11680;
	xor.b64  	%rd11752, %rd11731, %rd11683;
	xor.b64  	%rd11753, %rd11733, %rd11686;
	xor.b64  	%rd11754, %rd11725, %rd11689;
	xor.b64  	%rd11755, %rd11727, %rd11692;
	xor.b64  	%rd11756, %rd11729, %rd11695;
	xor.b64  	%rd11757, %rd11731, %rd11698;
	xor.b64  	%rd11758, %rd11733, %rd11701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8333,%dummy}, %rd11740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8334}, %rd11740;
	}
	shf.r.wrap.b32 	%r8335, %r8334, %r8333, 20;
	shf.r.wrap.b32 	%r8336, %r8333, %r8334, 20;
	mov.b64 	%rd11759, {%r8336, %r8335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8337,%dummy}, %rd11746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8338}, %rd11746;
	}
	shf.r.wrap.b32 	%r8339, %r8338, %r8337, 21;
	shf.r.wrap.b32 	%r8340, %r8337, %r8338, 21;
	mov.b64 	%rd11760, {%r8340, %r8339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8341}, %rd11752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8342,%dummy}, %rd11752;
	}
	shf.l.wrap.b32 	%r8343, %r8342, %r8341, 21;
	shf.l.wrap.b32 	%r8344, %r8341, %r8342, 21;
	mov.b64 	%rd11761, {%r8344, %r8343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8345}, %rd11758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8346,%dummy}, %rd11758;
	}
	shf.l.wrap.b32 	%r8347, %r8346, %r8345, 14;
	shf.l.wrap.b32 	%r8348, %r8345, %r8346, 14;
	mov.b64 	%rd11762, {%r8348, %r8347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8349}, %rd11737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8350,%dummy}, %rd11737;
	}
	shf.l.wrap.b32 	%r8351, %r8350, %r8349, 28;
	shf.l.wrap.b32 	%r8352, %r8349, %r8350, 28;
	mov.b64 	%rd11763, {%r8352, %r8351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8353}, %rd11743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8354,%dummy}, %rd11743;
	}
	shf.l.wrap.b32 	%r8355, %r8354, %r8353, 20;
	shf.l.wrap.b32 	%r8356, %r8353, %r8354, 20;
	mov.b64 	%rd11764, {%r8356, %r8355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8357}, %rd11744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8358,%dummy}, %rd11744;
	}
	shf.l.wrap.b32 	%r8359, %r8358, %r8357, 3;
	shf.l.wrap.b32 	%r8360, %r8357, %r8358, 3;
	mov.b64 	%rd11765, {%r8360, %r8359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8361,%dummy}, %rd11750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8362}, %rd11750;
	}
	shf.r.wrap.b32 	%r8363, %r8362, %r8361, 19;
	shf.r.wrap.b32 	%r8364, %r8361, %r8362, 19;
	mov.b64 	%rd11766, {%r8364, %r8363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8365,%dummy}, %rd11756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8366}, %rd11756;
	}
	shf.r.wrap.b32 	%r8367, %r8366, %r8365, 3;
	shf.r.wrap.b32 	%r8368, %r8365, %r8366, 3;
	mov.b64 	%rd11767, {%r8368, %r8367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8369}, %rd11735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8370,%dummy}, %rd11735;
	}
	shf.l.wrap.b32 	%r8371, %r8370, %r8369, 1;
	shf.l.wrap.b32 	%r8372, %r8369, %r8370, 1;
	mov.b64 	%rd11768, {%r8372, %r8371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8373}, %rd11741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8374,%dummy}, %rd11741;
	}
	shf.l.wrap.b32 	%r8375, %r8374, %r8373, 6;
	shf.l.wrap.b32 	%r8376, %r8373, %r8374, 6;
	mov.b64 	%rd11769, {%r8376, %r8375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8377}, %rd11747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8378,%dummy}, %rd11747;
	}
	shf.l.wrap.b32 	%r8379, %r8378, %r8377, 25;
	shf.l.wrap.b32 	%r8380, %r8377, %r8378, 25;
	mov.b64 	%rd11770, {%r8380, %r8379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8381}, %rd11753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8382,%dummy}, %rd11753;
	}
	shf.l.wrap.b32 	%r8383, %r8382, %r8381, 8;
	shf.l.wrap.b32 	%r8384, %r8381, %r8382, 8;
	mov.b64 	%rd11771, {%r8384, %r8383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8385}, %rd11754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8386,%dummy}, %rd11754;
	}
	shf.l.wrap.b32 	%r8387, %r8386, %r8385, 18;
	shf.l.wrap.b32 	%r8388, %r8385, %r8386, 18;
	mov.b64 	%rd11772, {%r8388, %r8387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8389}, %rd11738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8390,%dummy}, %rd11738;
	}
	shf.l.wrap.b32 	%r8391, %r8390, %r8389, 27;
	shf.l.wrap.b32 	%r8392, %r8389, %r8390, 27;
	mov.b64 	%rd11773, {%r8392, %r8391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8393,%dummy}, %rd11739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8394}, %rd11739;
	}
	shf.r.wrap.b32 	%r8395, %r8394, %r8393, 28;
	shf.r.wrap.b32 	%r8396, %r8393, %r8394, 28;
	mov.b64 	%rd11774, {%r8396, %r8395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8397}, %rd11745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8398,%dummy}, %rd11745;
	}
	shf.l.wrap.b32 	%r8399, %r8398, %r8397, 10;
	shf.l.wrap.b32 	%r8400, %r8397, %r8398, 10;
	mov.b64 	%rd11775, {%r8400, %r8399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8401}, %rd11751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8402,%dummy}, %rd11751;
	}
	shf.l.wrap.b32 	%r8403, %r8402, %r8401, 15;
	shf.l.wrap.b32 	%r8404, %r8401, %r8402, 15;
	mov.b64 	%rd11776, {%r8404, %r8403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8405,%dummy}, %rd11757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8406}, %rd11757;
	}
	shf.r.wrap.b32 	%r8407, %r8406, %r8405, 8;
	shf.r.wrap.b32 	%r8408, %r8405, %r8406, 8;
	mov.b64 	%rd11777, {%r8408, %r8407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8409,%dummy}, %rd11736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8410}, %rd11736;
	}
	shf.r.wrap.b32 	%r8411, %r8410, %r8409, 2;
	shf.r.wrap.b32 	%r8412, %r8409, %r8410, 2;
	mov.b64 	%rd11778, {%r8412, %r8411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8413,%dummy}, %rd11742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8414}, %rd11742;
	}
	shf.r.wrap.b32 	%r8415, %r8414, %r8413, 9;
	shf.r.wrap.b32 	%r8416, %r8413, %r8414, 9;
	mov.b64 	%rd11779, {%r8416, %r8415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8417,%dummy}, %rd11748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8418}, %rd11748;
	}
	shf.r.wrap.b32 	%r8419, %r8418, %r8417, 25;
	shf.r.wrap.b32 	%r8420, %r8417, %r8418, 25;
	mov.b64 	%rd11780, {%r8420, %r8419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8421,%dummy}, %rd11749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8422}, %rd11749;
	}
	shf.r.wrap.b32 	%r8423, %r8422, %r8421, 23;
	shf.r.wrap.b32 	%r8424, %r8421, %r8422, 23;
	mov.b64 	%rd11781, {%r8424, %r8423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8425}, %rd11755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8426,%dummy}, %rd11755;
	}
	shf.l.wrap.b32 	%r8427, %r8426, %r8425, 2;
	shf.l.wrap.b32 	%r8428, %r8425, %r8426, 2;
	mov.b64 	%rd11782, {%r8428, %r8427};
	not.b64 	%rd11783, %rd11759;
	and.b64  	%rd11784, %rd11760, %rd11783;
	xor.b64  	%rd11785, %rd11784, %rd11734;
	not.b64 	%rd11786, %rd11760;
	and.b64  	%rd11787, %rd11761, %rd11786;
	xor.b64  	%rd11788, %rd11787, %rd11759;
	st.local.u64 	[%rd2+8], %rd11788;
	not.b64 	%rd11789, %rd11761;
	and.b64  	%rd11790, %rd11762, %rd11789;
	xor.b64  	%rd11791, %rd11790, %rd11760;
	st.local.u64 	[%rd2+16], %rd11791;
	not.b64 	%rd11792, %rd11762;
	and.b64  	%rd11793, %rd11734, %rd11792;
	xor.b64  	%rd11794, %rd11793, %rd11761;
	st.local.u64 	[%rd2+24], %rd11794;
	not.b64 	%rd11795, %rd11734;
	and.b64  	%rd11796, %rd11759, %rd11795;
	xor.b64  	%rd11797, %rd11796, %rd11762;
	st.local.u64 	[%rd2+32], %rd11797;
	not.b64 	%rd11798, %rd11764;
	and.b64  	%rd11799, %rd11765, %rd11798;
	xor.b64  	%rd11800, %rd11799, %rd11763;
	st.local.u64 	[%rd2+40], %rd11800;
	not.b64 	%rd11801, %rd11765;
	and.b64  	%rd11802, %rd11766, %rd11801;
	xor.b64  	%rd11803, %rd11802, %rd11764;
	st.local.u64 	[%rd2+48], %rd11803;
	not.b64 	%rd11804, %rd11766;
	and.b64  	%rd11805, %rd11767, %rd11804;
	xor.b64  	%rd11806, %rd11805, %rd11765;
	st.local.u64 	[%rd2+56], %rd11806;
	not.b64 	%rd11807, %rd11767;
	and.b64  	%rd11808, %rd11763, %rd11807;
	xor.b64  	%rd11809, %rd11808, %rd11766;
	st.local.u64 	[%rd2+64], %rd11809;
	not.b64 	%rd11810, %rd11763;
	and.b64  	%rd11811, %rd11764, %rd11810;
	xor.b64  	%rd11812, %rd11811, %rd11767;
	st.local.u64 	[%rd2+72], %rd11812;
	not.b64 	%rd11813, %rd11769;
	and.b64  	%rd11814, %rd11770, %rd11813;
	xor.b64  	%rd11815, %rd11814, %rd11768;
	st.local.u64 	[%rd2+80], %rd11815;
	not.b64 	%rd11816, %rd11770;
	and.b64  	%rd11817, %rd11771, %rd11816;
	xor.b64  	%rd11818, %rd11817, %rd11769;
	st.local.u64 	[%rd2+88], %rd11818;
	not.b64 	%rd11819, %rd11771;
	and.b64  	%rd11820, %rd11772, %rd11819;
	xor.b64  	%rd11821, %rd11820, %rd11770;
	st.local.u64 	[%rd2+96], %rd11821;
	not.b64 	%rd11822, %rd11772;
	and.b64  	%rd11823, %rd11768, %rd11822;
	xor.b64  	%rd11824, %rd11823, %rd11771;
	st.local.u64 	[%rd2+104], %rd11824;
	not.b64 	%rd11825, %rd11768;
	and.b64  	%rd11826, %rd11769, %rd11825;
	xor.b64  	%rd11827, %rd11826, %rd11772;
	st.local.u64 	[%rd2+112], %rd11827;
	not.b64 	%rd11828, %rd11774;
	and.b64  	%rd11829, %rd11775, %rd11828;
	xor.b64  	%rd11830, %rd11829, %rd11773;
	st.local.u64 	[%rd2+120], %rd11830;
	not.b64 	%rd11831, %rd11775;
	and.b64  	%rd11832, %rd11776, %rd11831;
	xor.b64  	%rd11833, %rd11832, %rd11774;
	st.local.u64 	[%rd2+128], %rd11833;
	not.b64 	%rd11834, %rd11776;
	and.b64  	%rd11835, %rd11777, %rd11834;
	xor.b64  	%rd11836, %rd11835, %rd11775;
	st.local.u64 	[%rd2+136], %rd11836;
	not.b64 	%rd11837, %rd11777;
	and.b64  	%rd11838, %rd11773, %rd11837;
	xor.b64  	%rd11839, %rd11838, %rd11776;
	st.local.u64 	[%rd2+144], %rd11839;
	not.b64 	%rd11840, %rd11773;
	and.b64  	%rd11841, %rd11774, %rd11840;
	xor.b64  	%rd11842, %rd11841, %rd11777;
	st.local.u64 	[%rd2+152], %rd11842;
	not.b64 	%rd11843, %rd11779;
	and.b64  	%rd11844, %rd11780, %rd11843;
	xor.b64  	%rd11845, %rd11844, %rd11778;
	st.local.u64 	[%rd2+160], %rd11845;
	not.b64 	%rd11846, %rd11780;
	and.b64  	%rd11847, %rd11781, %rd11846;
	xor.b64  	%rd11848, %rd11847, %rd11779;
	st.local.u64 	[%rd2+168], %rd11848;
	not.b64 	%rd11849, %rd11781;
	and.b64  	%rd11850, %rd11782, %rd11849;
	xor.b64  	%rd11851, %rd11850, %rd11780;
	st.local.u64 	[%rd2+176], %rd11851;
	not.b64 	%rd11852, %rd11782;
	and.b64  	%rd11853, %rd11778, %rd11852;
	xor.b64  	%rd11854, %rd11853, %rd11781;
	st.local.u64 	[%rd2+184], %rd11854;
	not.b64 	%rd11855, %rd11778;
	and.b64  	%rd11856, %rd11779, %rd11855;
	xor.b64  	%rd11857, %rd11856, %rd11782;
	st.local.u64 	[%rd2+192], %rd11857;
	xor.b64  	%rd11859, %rd11785, %rd39;
	st.local.u64 	[%rd2], %rd11859;
	st.local.u64 	[%rd2+392], %rd19853;

$L__BB1_38:
	and.b64  	%rd93, %rd19853, 63;
	shr.u64 	%rd94, %rd19853, 6;
	setp.eq.s64 	%p33, %rd94, 0;
	mov.u64 	%rd19860, 0;
	@%p33 bra 	$L__BB1_44;

	add.s64 	%rd11863, %rd94, -1;
	and.b64  	%rd19859, %rd94, 3;
	setp.lt.u64 	%p34, %rd11863, 3;
	mov.u64 	%rd19860, 0;
	mov.u32 	%r14034, 0;
	@%p34 bra 	$L__BB1_42;

	sub.s64 	%rd19855, %rd94, %rd19859;

$L__BB1_41:
	add.s64 	%rd11865, %rd2, %rd19860;
	ld.local.u64 	%rd11866, [%rd11865];
	ld.local.u8 	%rd11867, [%rd11865+200];
	ld.local.u8 	%rd11868, [%rd11865+201];
	bfi.b64 	%rd11869, %rd11868, %rd11867, 8, 8;
	ld.local.u8 	%rd11870, [%rd11865+202];
	ld.local.u8 	%rd11871, [%rd11865+203];
	bfi.b64 	%rd11872, %rd11871, %rd11870, 8, 8;
	bfi.b64 	%rd11873, %rd11872, %rd11869, 16, 16;
	ld.local.u8 	%rd11874, [%rd11865+204];
	ld.local.u8 	%rd11875, [%rd11865+205];
	bfi.b64 	%rd11876, %rd11875, %rd11874, 8, 8;
	ld.local.u8 	%rd11877, [%rd11865+206];
	ld.local.u8 	%rd11878, [%rd11865+207];
	bfi.b64 	%rd11879, %rd11878, %rd11877, 8, 8;
	bfi.b64 	%rd11880, %rd11879, %rd11876, 16, 16;
	bfi.b64 	%rd11881, %rd11880, %rd11873, 32, 32;
	xor.b64  	%rd11882, %rd11866, %rd11881;
	st.local.u64 	[%rd11865], %rd11882;
	ld.local.u64 	%rd11883, [%rd11865+8];
	ld.local.u8 	%rd11884, [%rd11865+208];
	ld.local.u8 	%rd11885, [%rd11865+209];
	bfi.b64 	%rd11886, %rd11885, %rd11884, 8, 8;
	ld.local.u8 	%rd11887, [%rd11865+210];
	ld.local.u8 	%rd11888, [%rd11865+211];
	bfi.b64 	%rd11889, %rd11888, %rd11887, 8, 8;
	bfi.b64 	%rd11890, %rd11889, %rd11886, 16, 16;
	ld.local.u8 	%rd11891, [%rd11865+212];
	ld.local.u8 	%rd11892, [%rd11865+213];
	bfi.b64 	%rd11893, %rd11892, %rd11891, 8, 8;
	ld.local.u8 	%rd11894, [%rd11865+214];
	ld.local.u8 	%rd11895, [%rd11865+215];
	bfi.b64 	%rd11896, %rd11895, %rd11894, 8, 8;
	bfi.b64 	%rd11897, %rd11896, %rd11893, 16, 16;
	bfi.b64 	%rd11898, %rd11897, %rd11890, 32, 32;
	xor.b64  	%rd11899, %rd11883, %rd11898;
	st.local.u64 	[%rd11865+8], %rd11899;
	ld.local.u64 	%rd11900, [%rd11865+16];
	ld.local.u8 	%rd11901, [%rd11865+216];
	ld.local.u8 	%rd11902, [%rd11865+217];
	bfi.b64 	%rd11903, %rd11902, %rd11901, 8, 8;
	ld.local.u8 	%rd11904, [%rd11865+218];
	ld.local.u8 	%rd11905, [%rd11865+219];
	bfi.b64 	%rd11906, %rd11905, %rd11904, 8, 8;
	bfi.b64 	%rd11907, %rd11906, %rd11903, 16, 16;
	ld.local.u8 	%rd11908, [%rd11865+220];
	ld.local.u8 	%rd11909, [%rd11865+221];
	bfi.b64 	%rd11910, %rd11909, %rd11908, 8, 8;
	ld.local.u8 	%rd11911, [%rd11865+222];
	ld.local.u8 	%rd11912, [%rd11865+223];
	bfi.b64 	%rd11913, %rd11912, %rd11911, 8, 8;
	bfi.b64 	%rd11914, %rd11913, %rd11910, 16, 16;
	bfi.b64 	%rd11915, %rd11914, %rd11907, 32, 32;
	xor.b64  	%rd11916, %rd11900, %rd11915;
	st.local.u64 	[%rd11865+16], %rd11916;
	ld.local.u64 	%rd11917, [%rd11865+24];
	ld.local.u8 	%rd11918, [%rd11865+224];
	ld.local.u8 	%rd11919, [%rd11865+225];
	bfi.b64 	%rd11920, %rd11919, %rd11918, 8, 8;
	ld.local.u8 	%rd11921, [%rd11865+226];
	ld.local.u8 	%rd11922, [%rd11865+227];
	bfi.b64 	%rd11923, %rd11922, %rd11921, 8, 8;
	bfi.b64 	%rd11924, %rd11923, %rd11920, 16, 16;
	ld.local.u8 	%rd11925, [%rd11865+228];
	ld.local.u8 	%rd11926, [%rd11865+229];
	bfi.b64 	%rd11927, %rd11926, %rd11925, 8, 8;
	ld.local.u8 	%rd11928, [%rd11865+230];
	ld.local.u8 	%rd11929, [%rd11865+231];
	bfi.b64 	%rd11930, %rd11929, %rd11928, 8, 8;
	bfi.b64 	%rd11931, %rd11930, %rd11927, 16, 16;
	bfi.b64 	%rd11932, %rd11931, %rd11924, 32, 32;
	xor.b64  	%rd11933, %rd11917, %rd11932;
	st.local.u64 	[%rd11865+24], %rd11933;
	add.s64 	%rd19860, %rd19860, 32;
	add.s32 	%r14034, %r14034, 4;
	add.s64 	%rd19855, %rd19855, -4;
	setp.ne.s64 	%p35, %rd19855, 0;
	@%p35 bra 	$L__BB1_41;

$L__BB1_42:
	setp.eq.s64 	%p36, %rd19859, 0;
	@%p36 bra 	$L__BB1_44;

$L__BB1_43:
	.pragma "nounroll";
	add.s64 	%rd11934, %rd2, %rd19860;
	mul.wide.s32 	%rd11935, %r14034, 8;
	add.s64 	%rd11936, %rd2, %rd11935;
	ld.local.u64 	%rd11937, [%rd11936];
	ld.local.u8 	%rd11938, [%rd11934+200];
	ld.local.u8 	%rd11939, [%rd11934+201];
	bfi.b64 	%rd11940, %rd11939, %rd11938, 8, 8;
	ld.local.u8 	%rd11941, [%rd11934+202];
	ld.local.u8 	%rd11942, [%rd11934+203];
	bfi.b64 	%rd11943, %rd11942, %rd11941, 8, 8;
	bfi.b64 	%rd11944, %rd11943, %rd11940, 16, 16;
	ld.local.u8 	%rd11945, [%rd11934+204];
	ld.local.u8 	%rd11946, [%rd11934+205];
	bfi.b64 	%rd11947, %rd11946, %rd11945, 8, 8;
	ld.local.u8 	%rd11948, [%rd11934+206];
	ld.local.u8 	%rd11949, [%rd11934+207];
	bfi.b64 	%rd11950, %rd11949, %rd11948, 8, 8;
	bfi.b64 	%rd11951, %rd11950, %rd11947, 16, 16;
	bfi.b64 	%rd11952, %rd11951, %rd11944, 32, 32;
	xor.b64  	%rd11953, %rd11937, %rd11952;
	st.local.u64 	[%rd11936], %rd11953;
	add.s64 	%rd19860, %rd19860, 8;
	add.s32 	%r14034, %r14034, 1;
	add.s64 	%rd19859, %rd19859, -1;
	setp.ne.s64 	%p37, %rd19859, 0;
	@%p37 bra 	$L__BB1_43;

$L__BB1_44:
	setp.eq.s64 	%p38, %rd93, 0;
	@%p38 bra 	$L__BB1_46;

	cvt.u32.u64 	%r8431, %rd93;
	mov.u32 	%r8432, -1;
	shl.b32 	%r8433, %r8432, %r8431;
	not.b32 	%r8434, %r8433;
	cvt.s64.s32 	%rd11954, %r8434;
	add.s64 	%rd11955, %rd2, %rd19860;
	ld.local.u8 	%rd11956, [%rd11955+200];
	ld.local.u8 	%rd11957, [%rd11955+201];
	bfi.b64 	%rd11958, %rd11957, %rd11956, 8, 8;
	ld.local.u8 	%rd11959, [%rd11955+202];
	ld.local.u8 	%rd11960, [%rd11955+203];
	bfi.b64 	%rd11961, %rd11960, %rd11959, 8, 8;
	bfi.b64 	%rd11962, %rd11961, %rd11958, 16, 16;
	ld.local.u8 	%rd11963, [%rd11955+204];
	ld.local.u8 	%rd11964, [%rd11955+205];
	bfi.b64 	%rd11965, %rd11964, %rd11963, 8, 8;
	ld.local.u8 	%rd11966, [%rd11955+206];
	ld.local.u8 	%rd11967, [%rd11955+207];
	bfi.b64 	%rd11968, %rd11967, %rd11966, 8, 8;
	bfi.b64 	%rd11969, %rd11968, %rd11965, 16, 16;
	bfi.b64 	%rd11970, %rd11969, %rd11962, 32, 32;
	and.b64  	%rd11971, %rd11970, %rd11954;
	shl.b64 	%rd11972, %rd94, 3;
	add.s64 	%rd11973, %rd2, %rd11972;
	ld.local.u64 	%rd11974, [%rd11973];
	xor.b64  	%rd11975, %rd11974, %rd11971;
	st.local.u64 	[%rd11973], %rd11975;

$L__BB1_46:
	ld.const.u64 	%rd19825, [CUDA_KECCAK_CONSTS+40];
	ld.const.u64 	%rd19824, [CUDA_KECCAK_CONSTS+32];
	ld.const.u64 	%rd19823, [CUDA_KECCAK_CONSTS+24];
	ld.const.u64 	%rd19822, [CUDA_KECCAK_CONSTS+16];
	ld.const.u64 	%rd19821, [CUDA_KECCAK_CONSTS+8];
	ld.const.u64 	%rd19820, [CUDA_KECCAK_CONSTS];
	add.s64 	%rd11976, %rd7995, -1;
	shr.u64 	%rd11977, %rd11976, 3;
	and.b64  	%rd11978, %rd11977, 2305843009213693944;
	add.s64 	%rd11979, %rd2, %rd11978;
	ld.local.u64 	%rd11980, [%rd11979];
	xor.b64  	%rd11981, %rd11980, -9223372036854775808;
	st.local.u64 	[%rd11979], %rd11981;
	ld.local.u64 	%rd11982, [%rd2+40];
	ld.local.u64 	%rd11983, [%rd2];
	xor.b64  	%rd11984, %rd11982, %rd11983;
	ld.local.u64 	%rd11985, [%rd2+80];
	xor.b64  	%rd11986, %rd11984, %rd11985;
	ld.local.u64 	%rd11987, [%rd2+120];
	xor.b64  	%rd11988, %rd11986, %rd11987;
	ld.local.u64 	%rd11989, [%rd2+160];
	xor.b64  	%rd11990, %rd11988, %rd11989;
	ld.local.u64 	%rd11991, [%rd2+48];
	ld.local.u64 	%rd11992, [%rd2+8];
	xor.b64  	%rd11993, %rd11991, %rd11992;
	ld.local.u64 	%rd11994, [%rd2+88];
	xor.b64  	%rd11995, %rd11993, %rd11994;
	ld.local.u64 	%rd11996, [%rd2+128];
	xor.b64  	%rd11997, %rd11995, %rd11996;
	ld.local.u64 	%rd11998, [%rd2+168];
	xor.b64  	%rd11999, %rd11997, %rd11998;
	ld.local.u64 	%rd12000, [%rd2+56];
	ld.local.u64 	%rd12001, [%rd2+16];
	xor.b64  	%rd12002, %rd12000, %rd12001;
	ld.local.u64 	%rd12003, [%rd2+96];
	xor.b64  	%rd12004, %rd12002, %rd12003;
	ld.local.u64 	%rd12005, [%rd2+136];
	xor.b64  	%rd12006, %rd12004, %rd12005;
	ld.local.u64 	%rd12007, [%rd2+176];
	xor.b64  	%rd12008, %rd12006, %rd12007;
	ld.local.u64 	%rd12009, [%rd2+64];
	ld.local.u64 	%rd12010, [%rd2+24];
	xor.b64  	%rd12011, %rd12009, %rd12010;
	ld.local.u64 	%rd12012, [%rd2+104];
	xor.b64  	%rd12013, %rd12011, %rd12012;
	ld.local.u64 	%rd12014, [%rd2+144];
	xor.b64  	%rd12015, %rd12013, %rd12014;
	ld.local.u64 	%rd12016, [%rd2+184];
	xor.b64  	%rd12017, %rd12015, %rd12016;
	ld.local.u64 	%rd12018, [%rd2+72];
	ld.local.u64 	%rd12019, [%rd2+32];
	xor.b64  	%rd12020, %rd12018, %rd12019;
	ld.local.u64 	%rd12021, [%rd2+112];
	xor.b64  	%rd12022, %rd12020, %rd12021;
	ld.local.u64 	%rd12023, [%rd2+152];
	xor.b64  	%rd12024, %rd12022, %rd12023;
	ld.local.u64 	%rd12025, [%rd2+192];
	xor.b64  	%rd12026, %rd12024, %rd12025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8435}, %rd11999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8436,%dummy}, %rd11999;
	}
	shf.l.wrap.b32 	%r8437, %r8436, %r8435, 1;
	shf.l.wrap.b32 	%r8438, %r8435, %r8436, 1;
	mov.b64 	%rd12027, {%r8438, %r8437};
	xor.b64  	%rd12028, %rd12026, %rd12027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8439}, %rd12008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8440,%dummy}, %rd12008;
	}
	shf.l.wrap.b32 	%r8441, %r8440, %r8439, 1;
	shf.l.wrap.b32 	%r8442, %r8439, %r8440, 1;
	mov.b64 	%rd12029, {%r8442, %r8441};
	xor.b64  	%rd12030, %rd12029, %rd11990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8443}, %rd12017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8444,%dummy}, %rd12017;
	}
	shf.l.wrap.b32 	%r8445, %r8444, %r8443, 1;
	shf.l.wrap.b32 	%r8446, %r8443, %r8444, 1;
	mov.b64 	%rd12031, {%r8446, %r8445};
	xor.b64  	%rd12032, %rd12031, %rd11999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8447}, %rd12026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8448,%dummy}, %rd12026;
	}
	shf.l.wrap.b32 	%r8449, %r8448, %r8447, 1;
	shf.l.wrap.b32 	%r8450, %r8447, %r8448, 1;
	mov.b64 	%rd12033, {%r8450, %r8449};
	xor.b64  	%rd12034, %rd12033, %rd12008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8451}, %rd11990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8452,%dummy}, %rd11990;
	}
	shf.l.wrap.b32 	%r8453, %r8452, %r8451, 1;
	shf.l.wrap.b32 	%r8454, %r8451, %r8452, 1;
	mov.b64 	%rd12035, {%r8454, %r8453};
	xor.b64  	%rd12036, %rd12017, %rd12035;
	xor.b64  	%rd12037, %rd12028, %rd11983;
	xor.b64  	%rd12038, %rd12030, %rd11992;
	xor.b64  	%rd12039, %rd12032, %rd12001;
	xor.b64  	%rd12040, %rd12034, %rd12010;
	xor.b64  	%rd12041, %rd12036, %rd12019;
	xor.b64  	%rd12042, %rd12028, %rd11982;
	xor.b64  	%rd12043, %rd12030, %rd11991;
	xor.b64  	%rd12044, %rd12032, %rd12000;
	xor.b64  	%rd12045, %rd12034, %rd12009;
	xor.b64  	%rd12046, %rd12036, %rd12018;
	xor.b64  	%rd12047, %rd12028, %rd11985;
	xor.b64  	%rd12048, %rd12030, %rd11994;
	xor.b64  	%rd12049, %rd12032, %rd12003;
	xor.b64  	%rd12050, %rd12034, %rd12012;
	xor.b64  	%rd12051, %rd12036, %rd12021;
	xor.b64  	%rd12052, %rd12028, %rd11987;
	xor.b64  	%rd12053, %rd12030, %rd11996;
	xor.b64  	%rd12054, %rd12032, %rd12005;
	xor.b64  	%rd12055, %rd12034, %rd12014;
	xor.b64  	%rd12056, %rd12036, %rd12023;
	xor.b64  	%rd12057, %rd12028, %rd11989;
	xor.b64  	%rd12058, %rd12030, %rd11998;
	xor.b64  	%rd12059, %rd12032, %rd12007;
	xor.b64  	%rd12060, %rd12034, %rd12016;
	xor.b64  	%rd12061, %rd12036, %rd12025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8455,%dummy}, %rd12043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8456}, %rd12043;
	}
	shf.r.wrap.b32 	%r8457, %r8456, %r8455, 20;
	shf.r.wrap.b32 	%r8458, %r8455, %r8456, 20;
	mov.b64 	%rd12062, {%r8458, %r8457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8459,%dummy}, %rd12049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8460}, %rd12049;
	}
	shf.r.wrap.b32 	%r8461, %r8460, %r8459, 21;
	shf.r.wrap.b32 	%r8462, %r8459, %r8460, 21;
	mov.b64 	%rd12063, {%r8462, %r8461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8463}, %rd12055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8464,%dummy}, %rd12055;
	}
	shf.l.wrap.b32 	%r8465, %r8464, %r8463, 21;
	shf.l.wrap.b32 	%r8466, %r8463, %r8464, 21;
	mov.b64 	%rd12064, {%r8466, %r8465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8467}, %rd12061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8468,%dummy}, %rd12061;
	}
	shf.l.wrap.b32 	%r8469, %r8468, %r8467, 14;
	shf.l.wrap.b32 	%r8470, %r8467, %r8468, 14;
	mov.b64 	%rd12065, {%r8470, %r8469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd12040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8472,%dummy}, %rd12040;
	}
	shf.l.wrap.b32 	%r8473, %r8472, %r8471, 28;
	shf.l.wrap.b32 	%r8474, %r8471, %r8472, 28;
	mov.b64 	%rd12066, {%r8474, %r8473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8475}, %rd12046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8476,%dummy}, %rd12046;
	}
	shf.l.wrap.b32 	%r8477, %r8476, %r8475, 20;
	shf.l.wrap.b32 	%r8478, %r8475, %r8476, 20;
	mov.b64 	%rd12067, {%r8478, %r8477};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8479}, %rd12047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8480,%dummy}, %rd12047;
	}
	shf.l.wrap.b32 	%r8481, %r8480, %r8479, 3;
	shf.l.wrap.b32 	%r8482, %r8479, %r8480, 3;
	mov.b64 	%rd12068, {%r8482, %r8481};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8483,%dummy}, %rd12053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8484}, %rd12053;
	}
	shf.r.wrap.b32 	%r8485, %r8484, %r8483, 19;
	shf.r.wrap.b32 	%r8486, %r8483, %r8484, 19;
	mov.b64 	%rd12069, {%r8486, %r8485};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8487,%dummy}, %rd12059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8488}, %rd12059;
	}
	shf.r.wrap.b32 	%r8489, %r8488, %r8487, 3;
	shf.r.wrap.b32 	%r8490, %r8487, %r8488, 3;
	mov.b64 	%rd12070, {%r8490, %r8489};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8491}, %rd12038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8492,%dummy}, %rd12038;
	}
	shf.l.wrap.b32 	%r8493, %r8492, %r8491, 1;
	shf.l.wrap.b32 	%r8494, %r8491, %r8492, 1;
	mov.b64 	%rd12071, {%r8494, %r8493};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8495}, %rd12044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8496,%dummy}, %rd12044;
	}
	shf.l.wrap.b32 	%r8497, %r8496, %r8495, 6;
	shf.l.wrap.b32 	%r8498, %r8495, %r8496, 6;
	mov.b64 	%rd12072, {%r8498, %r8497};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8499}, %rd12050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8500,%dummy}, %rd12050;
	}
	shf.l.wrap.b32 	%r8501, %r8500, %r8499, 25;
	shf.l.wrap.b32 	%r8502, %r8499, %r8500, 25;
	mov.b64 	%rd12073, {%r8502, %r8501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd12056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8504,%dummy}, %rd12056;
	}
	shf.l.wrap.b32 	%r8505, %r8504, %r8503, 8;
	shf.l.wrap.b32 	%r8506, %r8503, %r8504, 8;
	mov.b64 	%rd12074, {%r8506, %r8505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8507}, %rd12057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8508,%dummy}, %rd12057;
	}
	shf.l.wrap.b32 	%r8509, %r8508, %r8507, 18;
	shf.l.wrap.b32 	%r8510, %r8507, %r8508, 18;
	mov.b64 	%rd12075, {%r8510, %r8509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8511}, %rd12041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd12041;
	}
	shf.l.wrap.b32 	%r8513, %r8512, %r8511, 27;
	shf.l.wrap.b32 	%r8514, %r8511, %r8512, 27;
	mov.b64 	%rd12076, {%r8514, %r8513};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8515,%dummy}, %rd12042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8516}, %rd12042;
	}
	shf.r.wrap.b32 	%r8517, %r8516, %r8515, 28;
	shf.r.wrap.b32 	%r8518, %r8515, %r8516, 28;
	mov.b64 	%rd12077, {%r8518, %r8517};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8519}, %rd12048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8520,%dummy}, %rd12048;
	}
	shf.l.wrap.b32 	%r8521, %r8520, %r8519, 10;
	shf.l.wrap.b32 	%r8522, %r8519, %r8520, 10;
	mov.b64 	%rd12078, {%r8522, %r8521};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8523}, %rd12054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8524,%dummy}, %rd12054;
	}
	shf.l.wrap.b32 	%r8525, %r8524, %r8523, 15;
	shf.l.wrap.b32 	%r8526, %r8523, %r8524, 15;
	mov.b64 	%rd12079, {%r8526, %r8525};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8527,%dummy}, %rd12060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8528}, %rd12060;
	}
	shf.r.wrap.b32 	%r8529, %r8528, %r8527, 8;
	shf.r.wrap.b32 	%r8530, %r8527, %r8528, 8;
	mov.b64 	%rd12080, {%r8530, %r8529};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8531,%dummy}, %rd12039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8532}, %rd12039;
	}
	shf.r.wrap.b32 	%r8533, %r8532, %r8531, 2;
	shf.r.wrap.b32 	%r8534, %r8531, %r8532, 2;
	mov.b64 	%rd12081, {%r8534, %r8533};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8535,%dummy}, %rd12045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8536}, %rd12045;
	}
	shf.r.wrap.b32 	%r8537, %r8536, %r8535, 9;
	shf.r.wrap.b32 	%r8538, %r8535, %r8536, 9;
	mov.b64 	%rd12082, {%r8538, %r8537};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8539,%dummy}, %rd12051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8540}, %rd12051;
	}
	shf.r.wrap.b32 	%r8541, %r8540, %r8539, 25;
	shf.r.wrap.b32 	%r8542, %r8539, %r8540, 25;
	mov.b64 	%rd12083, {%r8542, %r8541};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8543,%dummy}, %rd12052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8544}, %rd12052;
	}
	shf.r.wrap.b32 	%r8545, %r8544, %r8543, 23;
	shf.r.wrap.b32 	%r8546, %r8543, %r8544, 23;
	mov.b64 	%rd12084, {%r8546, %r8545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8547}, %rd12058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8548,%dummy}, %rd12058;
	}
	shf.l.wrap.b32 	%r8549, %r8548, %r8547, 2;
	shf.l.wrap.b32 	%r8550, %r8547, %r8548, 2;
	mov.b64 	%rd12085, {%r8550, %r8549};
	not.b64 	%rd12086, %rd12062;
	and.b64  	%rd12087, %rd12063, %rd12086;
	xor.b64  	%rd12088, %rd12087, %rd12037;
	not.b64 	%rd12089, %rd12063;
	and.b64  	%rd12090, %rd12064, %rd12089;
	xor.b64  	%rd12091, %rd12090, %rd12062;
	not.b64 	%rd12092, %rd12064;
	and.b64  	%rd12093, %rd12065, %rd12092;
	xor.b64  	%rd12094, %rd12093, %rd12063;
	not.b64 	%rd12095, %rd12065;
	and.b64  	%rd12096, %rd12037, %rd12095;
	xor.b64  	%rd12097, %rd12096, %rd12064;
	not.b64 	%rd12098, %rd12037;
	and.b64  	%rd12099, %rd12062, %rd12098;
	xor.b64  	%rd12100, %rd12099, %rd12065;
	not.b64 	%rd12101, %rd12067;
	and.b64  	%rd12102, %rd12068, %rd12101;
	xor.b64  	%rd12103, %rd12102, %rd12066;
	not.b64 	%rd12104, %rd12068;
	and.b64  	%rd12105, %rd12069, %rd12104;
	xor.b64  	%rd12106, %rd12105, %rd12067;
	not.b64 	%rd12107, %rd12069;
	and.b64  	%rd12108, %rd12070, %rd12107;
	xor.b64  	%rd12109, %rd12108, %rd12068;
	not.b64 	%rd12110, %rd12070;
	and.b64  	%rd12111, %rd12066, %rd12110;
	xor.b64  	%rd12112, %rd12111, %rd12069;
	not.b64 	%rd12113, %rd12066;
	and.b64  	%rd12114, %rd12067, %rd12113;
	xor.b64  	%rd12115, %rd12114, %rd12070;
	not.b64 	%rd12116, %rd12072;
	and.b64  	%rd12117, %rd12073, %rd12116;
	xor.b64  	%rd12118, %rd12117, %rd12071;
	not.b64 	%rd12119, %rd12073;
	and.b64  	%rd12120, %rd12074, %rd12119;
	xor.b64  	%rd12121, %rd12120, %rd12072;
	not.b64 	%rd12122, %rd12074;
	and.b64  	%rd12123, %rd12075, %rd12122;
	xor.b64  	%rd12124, %rd12123, %rd12073;
	not.b64 	%rd12125, %rd12075;
	and.b64  	%rd12126, %rd12071, %rd12125;
	xor.b64  	%rd12127, %rd12126, %rd12074;
	not.b64 	%rd12128, %rd12071;
	and.b64  	%rd12129, %rd12072, %rd12128;
	xor.b64  	%rd12130, %rd12129, %rd12075;
	not.b64 	%rd12131, %rd12077;
	and.b64  	%rd12132, %rd12078, %rd12131;
	xor.b64  	%rd12133, %rd12132, %rd12076;
	not.b64 	%rd12134, %rd12078;
	and.b64  	%rd12135, %rd12079, %rd12134;
	xor.b64  	%rd12136, %rd12135, %rd12077;
	not.b64 	%rd12137, %rd12079;
	and.b64  	%rd12138, %rd12080, %rd12137;
	xor.b64  	%rd12139, %rd12138, %rd12078;
	not.b64 	%rd12140, %rd12080;
	and.b64  	%rd12141, %rd12076, %rd12140;
	xor.b64  	%rd12142, %rd12141, %rd12079;
	not.b64 	%rd12143, %rd12076;
	and.b64  	%rd12144, %rd12077, %rd12143;
	xor.b64  	%rd12145, %rd12144, %rd12080;
	not.b64 	%rd12146, %rd12082;
	and.b64  	%rd12147, %rd12083, %rd12146;
	xor.b64  	%rd12148, %rd12147, %rd12081;
	not.b64 	%rd12149, %rd12083;
	and.b64  	%rd12150, %rd12084, %rd12149;
	xor.b64  	%rd12151, %rd12150, %rd12082;
	not.b64 	%rd12152, %rd12084;
	and.b64  	%rd12153, %rd12085, %rd12152;
	xor.b64  	%rd12154, %rd12153, %rd12083;
	not.b64 	%rd12155, %rd12085;
	and.b64  	%rd12156, %rd12081, %rd12155;
	xor.b64  	%rd12157, %rd12156, %rd12084;
	not.b64 	%rd12158, %rd12081;
	and.b64  	%rd12159, %rd12082, %rd12158;
	xor.b64  	%rd12160, %rd12159, %rd12085;
	xor.b64  	%rd12162, %rd12088, %rd19820;
	xor.b64  	%rd12163, %rd12103, %rd12162;
	xor.b64  	%rd12164, %rd12163, %rd12118;
	xor.b64  	%rd12165, %rd12164, %rd12133;
	xor.b64  	%rd12166, %rd12165, %rd12148;
	xor.b64  	%rd12167, %rd12106, %rd12091;
	xor.b64  	%rd12168, %rd12167, %rd12121;
	xor.b64  	%rd12169, %rd12168, %rd12136;
	xor.b64  	%rd12170, %rd12169, %rd12151;
	xor.b64  	%rd12171, %rd12109, %rd12094;
	xor.b64  	%rd12172, %rd12171, %rd12124;
	xor.b64  	%rd12173, %rd12172, %rd12139;
	xor.b64  	%rd12174, %rd12173, %rd12154;
	xor.b64  	%rd12175, %rd12112, %rd12097;
	xor.b64  	%rd12176, %rd12175, %rd12127;
	xor.b64  	%rd12177, %rd12176, %rd12142;
	xor.b64  	%rd12178, %rd12177, %rd12157;
	xor.b64  	%rd12179, %rd12115, %rd12100;
	xor.b64  	%rd12180, %rd12179, %rd12130;
	xor.b64  	%rd12181, %rd12180, %rd12145;
	xor.b64  	%rd12182, %rd12181, %rd12160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8551}, %rd12170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8552,%dummy}, %rd12170;
	}
	shf.l.wrap.b32 	%r8553, %r8552, %r8551, 1;
	shf.l.wrap.b32 	%r8554, %r8551, %r8552, 1;
	mov.b64 	%rd12183, {%r8554, %r8553};
	xor.b64  	%rd12184, %rd12182, %rd12183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8555}, %rd12174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8556,%dummy}, %rd12174;
	}
	shf.l.wrap.b32 	%r8557, %r8556, %r8555, 1;
	shf.l.wrap.b32 	%r8558, %r8555, %r8556, 1;
	mov.b64 	%rd12185, {%r8558, %r8557};
	xor.b64  	%rd12186, %rd12185, %rd12166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8559}, %rd12178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8560,%dummy}, %rd12178;
	}
	shf.l.wrap.b32 	%r8561, %r8560, %r8559, 1;
	shf.l.wrap.b32 	%r8562, %r8559, %r8560, 1;
	mov.b64 	%rd12187, {%r8562, %r8561};
	xor.b64  	%rd12188, %rd12187, %rd12170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8563}, %rd12182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8564,%dummy}, %rd12182;
	}
	shf.l.wrap.b32 	%r8565, %r8564, %r8563, 1;
	shf.l.wrap.b32 	%r8566, %r8563, %r8564, 1;
	mov.b64 	%rd12189, {%r8566, %r8565};
	xor.b64  	%rd12190, %rd12189, %rd12174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8567}, %rd12166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8568,%dummy}, %rd12166;
	}
	shf.l.wrap.b32 	%r8569, %r8568, %r8567, 1;
	shf.l.wrap.b32 	%r8570, %r8567, %r8568, 1;
	mov.b64 	%rd12191, {%r8570, %r8569};
	xor.b64  	%rd12192, %rd12178, %rd12191;
	xor.b64  	%rd12193, %rd12184, %rd12162;
	xor.b64  	%rd12194, %rd12186, %rd12091;
	xor.b64  	%rd12195, %rd12188, %rd12094;
	xor.b64  	%rd12196, %rd12190, %rd12097;
	xor.b64  	%rd12197, %rd12192, %rd12100;
	xor.b64  	%rd12198, %rd12184, %rd12103;
	xor.b64  	%rd12199, %rd12186, %rd12106;
	xor.b64  	%rd12200, %rd12188, %rd12109;
	xor.b64  	%rd12201, %rd12190, %rd12112;
	xor.b64  	%rd12202, %rd12192, %rd12115;
	xor.b64  	%rd12203, %rd12184, %rd12118;
	xor.b64  	%rd12204, %rd12186, %rd12121;
	xor.b64  	%rd12205, %rd12188, %rd12124;
	xor.b64  	%rd12206, %rd12190, %rd12127;
	xor.b64  	%rd12207, %rd12192, %rd12130;
	xor.b64  	%rd12208, %rd12184, %rd12133;
	xor.b64  	%rd12209, %rd12186, %rd12136;
	xor.b64  	%rd12210, %rd12188, %rd12139;
	xor.b64  	%rd12211, %rd12190, %rd12142;
	xor.b64  	%rd12212, %rd12192, %rd12145;
	xor.b64  	%rd12213, %rd12184, %rd12148;
	xor.b64  	%rd12214, %rd12186, %rd12151;
	xor.b64  	%rd12215, %rd12188, %rd12154;
	xor.b64  	%rd12216, %rd12190, %rd12157;
	xor.b64  	%rd12217, %rd12192, %rd12160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8571,%dummy}, %rd12199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8572}, %rd12199;
	}
	shf.r.wrap.b32 	%r8573, %r8572, %r8571, 20;
	shf.r.wrap.b32 	%r8574, %r8571, %r8572, 20;
	mov.b64 	%rd12218, {%r8574, %r8573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8575,%dummy}, %rd12205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8576}, %rd12205;
	}
	shf.r.wrap.b32 	%r8577, %r8576, %r8575, 21;
	shf.r.wrap.b32 	%r8578, %r8575, %r8576, 21;
	mov.b64 	%rd12219, {%r8578, %r8577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8579}, %rd12211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8580,%dummy}, %rd12211;
	}
	shf.l.wrap.b32 	%r8581, %r8580, %r8579, 21;
	shf.l.wrap.b32 	%r8582, %r8579, %r8580, 21;
	mov.b64 	%rd12220, {%r8582, %r8581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd12217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8584,%dummy}, %rd12217;
	}
	shf.l.wrap.b32 	%r8585, %r8584, %r8583, 14;
	shf.l.wrap.b32 	%r8586, %r8583, %r8584, 14;
	mov.b64 	%rd12221, {%r8586, %r8585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8587}, %rd12196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8588,%dummy}, %rd12196;
	}
	shf.l.wrap.b32 	%r8589, %r8588, %r8587, 28;
	shf.l.wrap.b32 	%r8590, %r8587, %r8588, 28;
	mov.b64 	%rd12222, {%r8590, %r8589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8591}, %rd12202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8592,%dummy}, %rd12202;
	}
	shf.l.wrap.b32 	%r8593, %r8592, %r8591, 20;
	shf.l.wrap.b32 	%r8594, %r8591, %r8592, 20;
	mov.b64 	%rd12223, {%r8594, %r8593};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8595}, %rd12203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8596,%dummy}, %rd12203;
	}
	shf.l.wrap.b32 	%r8597, %r8596, %r8595, 3;
	shf.l.wrap.b32 	%r8598, %r8595, %r8596, 3;
	mov.b64 	%rd12224, {%r8598, %r8597};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8599,%dummy}, %rd12209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8600}, %rd12209;
	}
	shf.r.wrap.b32 	%r8601, %r8600, %r8599, 19;
	shf.r.wrap.b32 	%r8602, %r8599, %r8600, 19;
	mov.b64 	%rd12225, {%r8602, %r8601};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8603,%dummy}, %rd12215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8604}, %rd12215;
	}
	shf.r.wrap.b32 	%r8605, %r8604, %r8603, 3;
	shf.r.wrap.b32 	%r8606, %r8603, %r8604, 3;
	mov.b64 	%rd12226, {%r8606, %r8605};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8607}, %rd12194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8608,%dummy}, %rd12194;
	}
	shf.l.wrap.b32 	%r8609, %r8608, %r8607, 1;
	shf.l.wrap.b32 	%r8610, %r8607, %r8608, 1;
	mov.b64 	%rd12227, {%r8610, %r8609};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8611}, %rd12200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8612,%dummy}, %rd12200;
	}
	shf.l.wrap.b32 	%r8613, %r8612, %r8611, 6;
	shf.l.wrap.b32 	%r8614, %r8611, %r8612, 6;
	mov.b64 	%rd12228, {%r8614, %r8613};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8615}, %rd12206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8616,%dummy}, %rd12206;
	}
	shf.l.wrap.b32 	%r8617, %r8616, %r8615, 25;
	shf.l.wrap.b32 	%r8618, %r8615, %r8616, 25;
	mov.b64 	%rd12229, {%r8618, %r8617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8619}, %rd12212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8620,%dummy}, %rd12212;
	}
	shf.l.wrap.b32 	%r8621, %r8620, %r8619, 8;
	shf.l.wrap.b32 	%r8622, %r8619, %r8620, 8;
	mov.b64 	%rd12230, {%r8622, %r8621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd12213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8624,%dummy}, %rd12213;
	}
	shf.l.wrap.b32 	%r8625, %r8624, %r8623, 18;
	shf.l.wrap.b32 	%r8626, %r8623, %r8624, 18;
	mov.b64 	%rd12231, {%r8626, %r8625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8627}, %rd12197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8628,%dummy}, %rd12197;
	}
	shf.l.wrap.b32 	%r8629, %r8628, %r8627, 27;
	shf.l.wrap.b32 	%r8630, %r8627, %r8628, 27;
	mov.b64 	%rd12232, {%r8630, %r8629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8631,%dummy}, %rd12198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8632}, %rd12198;
	}
	shf.r.wrap.b32 	%r8633, %r8632, %r8631, 28;
	shf.r.wrap.b32 	%r8634, %r8631, %r8632, 28;
	mov.b64 	%rd12233, {%r8634, %r8633};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8635}, %rd12204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8636,%dummy}, %rd12204;
	}
	shf.l.wrap.b32 	%r8637, %r8636, %r8635, 10;
	shf.l.wrap.b32 	%r8638, %r8635, %r8636, 10;
	mov.b64 	%rd12234, {%r8638, %r8637};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8639}, %rd12210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8640,%dummy}, %rd12210;
	}
	shf.l.wrap.b32 	%r8641, %r8640, %r8639, 15;
	shf.l.wrap.b32 	%r8642, %r8639, %r8640, 15;
	mov.b64 	%rd12235, {%r8642, %r8641};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8643,%dummy}, %rd12216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8644}, %rd12216;
	}
	shf.r.wrap.b32 	%r8645, %r8644, %r8643, 8;
	shf.r.wrap.b32 	%r8646, %r8643, %r8644, 8;
	mov.b64 	%rd12236, {%r8646, %r8645};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8647,%dummy}, %rd12195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8648}, %rd12195;
	}
	shf.r.wrap.b32 	%r8649, %r8648, %r8647, 2;
	shf.r.wrap.b32 	%r8650, %r8647, %r8648, 2;
	mov.b64 	%rd12237, {%r8650, %r8649};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8651,%dummy}, %rd12201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8652}, %rd12201;
	}
	shf.r.wrap.b32 	%r8653, %r8652, %r8651, 9;
	shf.r.wrap.b32 	%r8654, %r8651, %r8652, 9;
	mov.b64 	%rd12238, {%r8654, %r8653};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8655,%dummy}, %rd12207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8656}, %rd12207;
	}
	shf.r.wrap.b32 	%r8657, %r8656, %r8655, 25;
	shf.r.wrap.b32 	%r8658, %r8655, %r8656, 25;
	mov.b64 	%rd12239, {%r8658, %r8657};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8659,%dummy}, %rd12208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8660}, %rd12208;
	}
	shf.r.wrap.b32 	%r8661, %r8660, %r8659, 23;
	shf.r.wrap.b32 	%r8662, %r8659, %r8660, 23;
	mov.b64 	%rd12240, {%r8662, %r8661};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8663}, %rd12214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8664,%dummy}, %rd12214;
	}
	shf.l.wrap.b32 	%r8665, %r8664, %r8663, 2;
	shf.l.wrap.b32 	%r8666, %r8663, %r8664, 2;
	mov.b64 	%rd12241, {%r8666, %r8665};
	not.b64 	%rd12242, %rd12218;
	and.b64  	%rd12243, %rd12219, %rd12242;
	xor.b64  	%rd12244, %rd12243, %rd12193;
	not.b64 	%rd12245, %rd12219;
	and.b64  	%rd12246, %rd12220, %rd12245;
	xor.b64  	%rd12247, %rd12246, %rd12218;
	not.b64 	%rd12248, %rd12220;
	and.b64  	%rd12249, %rd12221, %rd12248;
	xor.b64  	%rd12250, %rd12249, %rd12219;
	not.b64 	%rd12251, %rd12221;
	and.b64  	%rd12252, %rd12193, %rd12251;
	xor.b64  	%rd12253, %rd12252, %rd12220;
	not.b64 	%rd12254, %rd12193;
	and.b64  	%rd12255, %rd12218, %rd12254;
	xor.b64  	%rd12256, %rd12255, %rd12221;
	not.b64 	%rd12257, %rd12223;
	and.b64  	%rd12258, %rd12224, %rd12257;
	xor.b64  	%rd12259, %rd12258, %rd12222;
	not.b64 	%rd12260, %rd12224;
	and.b64  	%rd12261, %rd12225, %rd12260;
	xor.b64  	%rd12262, %rd12261, %rd12223;
	not.b64 	%rd12263, %rd12225;
	and.b64  	%rd12264, %rd12226, %rd12263;
	xor.b64  	%rd12265, %rd12264, %rd12224;
	not.b64 	%rd12266, %rd12226;
	and.b64  	%rd12267, %rd12222, %rd12266;
	xor.b64  	%rd12268, %rd12267, %rd12225;
	not.b64 	%rd12269, %rd12222;
	and.b64  	%rd12270, %rd12223, %rd12269;
	xor.b64  	%rd12271, %rd12270, %rd12226;
	not.b64 	%rd12272, %rd12228;
	and.b64  	%rd12273, %rd12229, %rd12272;
	xor.b64  	%rd12274, %rd12273, %rd12227;
	not.b64 	%rd12275, %rd12229;
	and.b64  	%rd12276, %rd12230, %rd12275;
	xor.b64  	%rd12277, %rd12276, %rd12228;
	not.b64 	%rd12278, %rd12230;
	and.b64  	%rd12279, %rd12231, %rd12278;
	xor.b64  	%rd12280, %rd12279, %rd12229;
	not.b64 	%rd12281, %rd12231;
	and.b64  	%rd12282, %rd12227, %rd12281;
	xor.b64  	%rd12283, %rd12282, %rd12230;
	not.b64 	%rd12284, %rd12227;
	and.b64  	%rd12285, %rd12228, %rd12284;
	xor.b64  	%rd12286, %rd12285, %rd12231;
	not.b64 	%rd12287, %rd12233;
	and.b64  	%rd12288, %rd12234, %rd12287;
	xor.b64  	%rd12289, %rd12288, %rd12232;
	not.b64 	%rd12290, %rd12234;
	and.b64  	%rd12291, %rd12235, %rd12290;
	xor.b64  	%rd12292, %rd12291, %rd12233;
	not.b64 	%rd12293, %rd12235;
	and.b64  	%rd12294, %rd12236, %rd12293;
	xor.b64  	%rd12295, %rd12294, %rd12234;
	not.b64 	%rd12296, %rd12236;
	and.b64  	%rd12297, %rd12232, %rd12296;
	xor.b64  	%rd12298, %rd12297, %rd12235;
	not.b64 	%rd12299, %rd12232;
	and.b64  	%rd12300, %rd12233, %rd12299;
	xor.b64  	%rd12301, %rd12300, %rd12236;
	not.b64 	%rd12302, %rd12238;
	and.b64  	%rd12303, %rd12239, %rd12302;
	xor.b64  	%rd12304, %rd12303, %rd12237;
	not.b64 	%rd12305, %rd12239;
	and.b64  	%rd12306, %rd12240, %rd12305;
	xor.b64  	%rd12307, %rd12306, %rd12238;
	not.b64 	%rd12308, %rd12240;
	and.b64  	%rd12309, %rd12241, %rd12308;
	xor.b64  	%rd12310, %rd12309, %rd12239;
	not.b64 	%rd12311, %rd12241;
	and.b64  	%rd12312, %rd12237, %rd12311;
	xor.b64  	%rd12313, %rd12312, %rd12240;
	not.b64 	%rd12314, %rd12237;
	and.b64  	%rd12315, %rd12238, %rd12314;
	xor.b64  	%rd12316, %rd12315, %rd12241;
	xor.b64  	%rd12318, %rd12244, %rd19821;
	xor.b64  	%rd12319, %rd12259, %rd12318;
	xor.b64  	%rd12320, %rd12319, %rd12274;
	xor.b64  	%rd12321, %rd12320, %rd12289;
	xor.b64  	%rd12322, %rd12321, %rd12304;
	xor.b64  	%rd12323, %rd12262, %rd12247;
	xor.b64  	%rd12324, %rd12323, %rd12277;
	xor.b64  	%rd12325, %rd12324, %rd12292;
	xor.b64  	%rd12326, %rd12325, %rd12307;
	xor.b64  	%rd12327, %rd12265, %rd12250;
	xor.b64  	%rd12328, %rd12327, %rd12280;
	xor.b64  	%rd12329, %rd12328, %rd12295;
	xor.b64  	%rd12330, %rd12329, %rd12310;
	xor.b64  	%rd12331, %rd12268, %rd12253;
	xor.b64  	%rd12332, %rd12331, %rd12283;
	xor.b64  	%rd12333, %rd12332, %rd12298;
	xor.b64  	%rd12334, %rd12333, %rd12313;
	xor.b64  	%rd12335, %rd12271, %rd12256;
	xor.b64  	%rd12336, %rd12335, %rd12286;
	xor.b64  	%rd12337, %rd12336, %rd12301;
	xor.b64  	%rd12338, %rd12337, %rd12316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8667}, %rd12326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8668,%dummy}, %rd12326;
	}
	shf.l.wrap.b32 	%r8669, %r8668, %r8667, 1;
	shf.l.wrap.b32 	%r8670, %r8667, %r8668, 1;
	mov.b64 	%rd12339, {%r8670, %r8669};
	xor.b64  	%rd12340, %rd12338, %rd12339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8671}, %rd12330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8672,%dummy}, %rd12330;
	}
	shf.l.wrap.b32 	%r8673, %r8672, %r8671, 1;
	shf.l.wrap.b32 	%r8674, %r8671, %r8672, 1;
	mov.b64 	%rd12341, {%r8674, %r8673};
	xor.b64  	%rd12342, %rd12341, %rd12322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8675}, %rd12334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8676,%dummy}, %rd12334;
	}
	shf.l.wrap.b32 	%r8677, %r8676, %r8675, 1;
	shf.l.wrap.b32 	%r8678, %r8675, %r8676, 1;
	mov.b64 	%rd12343, {%r8678, %r8677};
	xor.b64  	%rd12344, %rd12343, %rd12326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8679}, %rd12338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8680,%dummy}, %rd12338;
	}
	shf.l.wrap.b32 	%r8681, %r8680, %r8679, 1;
	shf.l.wrap.b32 	%r8682, %r8679, %r8680, 1;
	mov.b64 	%rd12345, {%r8682, %r8681};
	xor.b64  	%rd12346, %rd12345, %rd12330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8683}, %rd12322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8684,%dummy}, %rd12322;
	}
	shf.l.wrap.b32 	%r8685, %r8684, %r8683, 1;
	shf.l.wrap.b32 	%r8686, %r8683, %r8684, 1;
	mov.b64 	%rd12347, {%r8686, %r8685};
	xor.b64  	%rd12348, %rd12334, %rd12347;
	xor.b64  	%rd12349, %rd12340, %rd12318;
	xor.b64  	%rd12350, %rd12342, %rd12247;
	xor.b64  	%rd12351, %rd12344, %rd12250;
	xor.b64  	%rd12352, %rd12346, %rd12253;
	xor.b64  	%rd12353, %rd12348, %rd12256;
	xor.b64  	%rd12354, %rd12340, %rd12259;
	xor.b64  	%rd12355, %rd12342, %rd12262;
	xor.b64  	%rd12356, %rd12344, %rd12265;
	xor.b64  	%rd12357, %rd12346, %rd12268;
	xor.b64  	%rd12358, %rd12348, %rd12271;
	xor.b64  	%rd12359, %rd12340, %rd12274;
	xor.b64  	%rd12360, %rd12342, %rd12277;
	xor.b64  	%rd12361, %rd12344, %rd12280;
	xor.b64  	%rd12362, %rd12346, %rd12283;
	xor.b64  	%rd12363, %rd12348, %rd12286;
	xor.b64  	%rd12364, %rd12340, %rd12289;
	xor.b64  	%rd12365, %rd12342, %rd12292;
	xor.b64  	%rd12366, %rd12344, %rd12295;
	xor.b64  	%rd12367, %rd12346, %rd12298;
	xor.b64  	%rd12368, %rd12348, %rd12301;
	xor.b64  	%rd12369, %rd12340, %rd12304;
	xor.b64  	%rd12370, %rd12342, %rd12307;
	xor.b64  	%rd12371, %rd12344, %rd12310;
	xor.b64  	%rd12372, %rd12346, %rd12313;
	xor.b64  	%rd12373, %rd12348, %rd12316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8687,%dummy}, %rd12355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8688}, %rd12355;
	}
	shf.r.wrap.b32 	%r8689, %r8688, %r8687, 20;
	shf.r.wrap.b32 	%r8690, %r8687, %r8688, 20;
	mov.b64 	%rd12374, {%r8690, %r8689};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8691,%dummy}, %rd12361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8692}, %rd12361;
	}
	shf.r.wrap.b32 	%r8693, %r8692, %r8691, 21;
	shf.r.wrap.b32 	%r8694, %r8691, %r8692, 21;
	mov.b64 	%rd12375, {%r8694, %r8693};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8695}, %rd12367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8696,%dummy}, %rd12367;
	}
	shf.l.wrap.b32 	%r8697, %r8696, %r8695, 21;
	shf.l.wrap.b32 	%r8698, %r8695, %r8696, 21;
	mov.b64 	%rd12376, {%r8698, %r8697};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8699}, %rd12373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8700,%dummy}, %rd12373;
	}
	shf.l.wrap.b32 	%r8701, %r8700, %r8699, 14;
	shf.l.wrap.b32 	%r8702, %r8699, %r8700, 14;
	mov.b64 	%rd12377, {%r8702, %r8701};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8703}, %rd12352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8704,%dummy}, %rd12352;
	}
	shf.l.wrap.b32 	%r8705, %r8704, %r8703, 28;
	shf.l.wrap.b32 	%r8706, %r8703, %r8704, 28;
	mov.b64 	%rd12378, {%r8706, %r8705};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8707}, %rd12358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8708,%dummy}, %rd12358;
	}
	shf.l.wrap.b32 	%r8709, %r8708, %r8707, 20;
	shf.l.wrap.b32 	%r8710, %r8707, %r8708, 20;
	mov.b64 	%rd12379, {%r8710, %r8709};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8711}, %rd12359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8712,%dummy}, %rd12359;
	}
	shf.l.wrap.b32 	%r8713, %r8712, %r8711, 3;
	shf.l.wrap.b32 	%r8714, %r8711, %r8712, 3;
	mov.b64 	%rd12380, {%r8714, %r8713};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8715,%dummy}, %rd12365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8716}, %rd12365;
	}
	shf.r.wrap.b32 	%r8717, %r8716, %r8715, 19;
	shf.r.wrap.b32 	%r8718, %r8715, %r8716, 19;
	mov.b64 	%rd12381, {%r8718, %r8717};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8719,%dummy}, %rd12371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8720}, %rd12371;
	}
	shf.r.wrap.b32 	%r8721, %r8720, %r8719, 3;
	shf.r.wrap.b32 	%r8722, %r8719, %r8720, 3;
	mov.b64 	%rd12382, {%r8722, %r8721};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8723}, %rd12350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8724,%dummy}, %rd12350;
	}
	shf.l.wrap.b32 	%r8725, %r8724, %r8723, 1;
	shf.l.wrap.b32 	%r8726, %r8723, %r8724, 1;
	mov.b64 	%rd12383, {%r8726, %r8725};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8727}, %rd12356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8728,%dummy}, %rd12356;
	}
	shf.l.wrap.b32 	%r8729, %r8728, %r8727, 6;
	shf.l.wrap.b32 	%r8730, %r8727, %r8728, 6;
	mov.b64 	%rd12384, {%r8730, %r8729};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8731}, %rd12362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8732,%dummy}, %rd12362;
	}
	shf.l.wrap.b32 	%r8733, %r8732, %r8731, 25;
	shf.l.wrap.b32 	%r8734, %r8731, %r8732, 25;
	mov.b64 	%rd12385, {%r8734, %r8733};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8735}, %rd12368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8736,%dummy}, %rd12368;
	}
	shf.l.wrap.b32 	%r8737, %r8736, %r8735, 8;
	shf.l.wrap.b32 	%r8738, %r8735, %r8736, 8;
	mov.b64 	%rd12386, {%r8738, %r8737};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8739}, %rd12369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8740,%dummy}, %rd12369;
	}
	shf.l.wrap.b32 	%r8741, %r8740, %r8739, 18;
	shf.l.wrap.b32 	%r8742, %r8739, %r8740, 18;
	mov.b64 	%rd12387, {%r8742, %r8741};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8743}, %rd12353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8744,%dummy}, %rd12353;
	}
	shf.l.wrap.b32 	%r8745, %r8744, %r8743, 27;
	shf.l.wrap.b32 	%r8746, %r8743, %r8744, 27;
	mov.b64 	%rd12388, {%r8746, %r8745};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8747,%dummy}, %rd12354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8748}, %rd12354;
	}
	shf.r.wrap.b32 	%r8749, %r8748, %r8747, 28;
	shf.r.wrap.b32 	%r8750, %r8747, %r8748, 28;
	mov.b64 	%rd12389, {%r8750, %r8749};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8751}, %rd12360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8752,%dummy}, %rd12360;
	}
	shf.l.wrap.b32 	%r8753, %r8752, %r8751, 10;
	shf.l.wrap.b32 	%r8754, %r8751, %r8752, 10;
	mov.b64 	%rd12390, {%r8754, %r8753};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8755}, %rd12366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8756,%dummy}, %rd12366;
	}
	shf.l.wrap.b32 	%r8757, %r8756, %r8755, 15;
	shf.l.wrap.b32 	%r8758, %r8755, %r8756, 15;
	mov.b64 	%rd12391, {%r8758, %r8757};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8759,%dummy}, %rd12372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8760}, %rd12372;
	}
	shf.r.wrap.b32 	%r8761, %r8760, %r8759, 8;
	shf.r.wrap.b32 	%r8762, %r8759, %r8760, 8;
	mov.b64 	%rd12392, {%r8762, %r8761};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8763,%dummy}, %rd12351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8764}, %rd12351;
	}
	shf.r.wrap.b32 	%r8765, %r8764, %r8763, 2;
	shf.r.wrap.b32 	%r8766, %r8763, %r8764, 2;
	mov.b64 	%rd12393, {%r8766, %r8765};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8767,%dummy}, %rd12357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8768}, %rd12357;
	}
	shf.r.wrap.b32 	%r8769, %r8768, %r8767, 9;
	shf.r.wrap.b32 	%r8770, %r8767, %r8768, 9;
	mov.b64 	%rd12394, {%r8770, %r8769};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8771,%dummy}, %rd12363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8772}, %rd12363;
	}
	shf.r.wrap.b32 	%r8773, %r8772, %r8771, 25;
	shf.r.wrap.b32 	%r8774, %r8771, %r8772, 25;
	mov.b64 	%rd12395, {%r8774, %r8773};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8775,%dummy}, %rd12364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8776}, %rd12364;
	}
	shf.r.wrap.b32 	%r8777, %r8776, %r8775, 23;
	shf.r.wrap.b32 	%r8778, %r8775, %r8776, 23;
	mov.b64 	%rd12396, {%r8778, %r8777};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8779}, %rd12370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8780,%dummy}, %rd12370;
	}
	shf.l.wrap.b32 	%r8781, %r8780, %r8779, 2;
	shf.l.wrap.b32 	%r8782, %r8779, %r8780, 2;
	mov.b64 	%rd12397, {%r8782, %r8781};
	not.b64 	%rd12398, %rd12374;
	and.b64  	%rd12399, %rd12375, %rd12398;
	xor.b64  	%rd12400, %rd12399, %rd12349;
	not.b64 	%rd12401, %rd12375;
	and.b64  	%rd12402, %rd12376, %rd12401;
	xor.b64  	%rd12403, %rd12402, %rd12374;
	not.b64 	%rd12404, %rd12376;
	and.b64  	%rd12405, %rd12377, %rd12404;
	xor.b64  	%rd12406, %rd12405, %rd12375;
	not.b64 	%rd12407, %rd12377;
	and.b64  	%rd12408, %rd12349, %rd12407;
	xor.b64  	%rd12409, %rd12408, %rd12376;
	not.b64 	%rd12410, %rd12349;
	and.b64  	%rd12411, %rd12374, %rd12410;
	xor.b64  	%rd12412, %rd12411, %rd12377;
	not.b64 	%rd12413, %rd12379;
	and.b64  	%rd12414, %rd12380, %rd12413;
	xor.b64  	%rd12415, %rd12414, %rd12378;
	not.b64 	%rd12416, %rd12380;
	and.b64  	%rd12417, %rd12381, %rd12416;
	xor.b64  	%rd12418, %rd12417, %rd12379;
	not.b64 	%rd12419, %rd12381;
	and.b64  	%rd12420, %rd12382, %rd12419;
	xor.b64  	%rd12421, %rd12420, %rd12380;
	not.b64 	%rd12422, %rd12382;
	and.b64  	%rd12423, %rd12378, %rd12422;
	xor.b64  	%rd12424, %rd12423, %rd12381;
	not.b64 	%rd12425, %rd12378;
	and.b64  	%rd12426, %rd12379, %rd12425;
	xor.b64  	%rd12427, %rd12426, %rd12382;
	not.b64 	%rd12428, %rd12384;
	and.b64  	%rd12429, %rd12385, %rd12428;
	xor.b64  	%rd12430, %rd12429, %rd12383;
	not.b64 	%rd12431, %rd12385;
	and.b64  	%rd12432, %rd12386, %rd12431;
	xor.b64  	%rd12433, %rd12432, %rd12384;
	not.b64 	%rd12434, %rd12386;
	and.b64  	%rd12435, %rd12387, %rd12434;
	xor.b64  	%rd12436, %rd12435, %rd12385;
	not.b64 	%rd12437, %rd12387;
	and.b64  	%rd12438, %rd12383, %rd12437;
	xor.b64  	%rd12439, %rd12438, %rd12386;
	not.b64 	%rd12440, %rd12383;
	and.b64  	%rd12441, %rd12384, %rd12440;
	xor.b64  	%rd12442, %rd12441, %rd12387;
	not.b64 	%rd12443, %rd12389;
	and.b64  	%rd12444, %rd12390, %rd12443;
	xor.b64  	%rd12445, %rd12444, %rd12388;
	not.b64 	%rd12446, %rd12390;
	and.b64  	%rd12447, %rd12391, %rd12446;
	xor.b64  	%rd12448, %rd12447, %rd12389;
	not.b64 	%rd12449, %rd12391;
	and.b64  	%rd12450, %rd12392, %rd12449;
	xor.b64  	%rd12451, %rd12450, %rd12390;
	not.b64 	%rd12452, %rd12392;
	and.b64  	%rd12453, %rd12388, %rd12452;
	xor.b64  	%rd12454, %rd12453, %rd12391;
	not.b64 	%rd12455, %rd12388;
	and.b64  	%rd12456, %rd12389, %rd12455;
	xor.b64  	%rd12457, %rd12456, %rd12392;
	not.b64 	%rd12458, %rd12394;
	and.b64  	%rd12459, %rd12395, %rd12458;
	xor.b64  	%rd12460, %rd12459, %rd12393;
	not.b64 	%rd12461, %rd12395;
	and.b64  	%rd12462, %rd12396, %rd12461;
	xor.b64  	%rd12463, %rd12462, %rd12394;
	not.b64 	%rd12464, %rd12396;
	and.b64  	%rd12465, %rd12397, %rd12464;
	xor.b64  	%rd12466, %rd12465, %rd12395;
	not.b64 	%rd12467, %rd12397;
	and.b64  	%rd12468, %rd12393, %rd12467;
	xor.b64  	%rd12469, %rd12468, %rd12396;
	not.b64 	%rd12470, %rd12393;
	and.b64  	%rd12471, %rd12394, %rd12470;
	xor.b64  	%rd12472, %rd12471, %rd12397;
	xor.b64  	%rd12474, %rd12400, %rd19822;
	xor.b64  	%rd12475, %rd12415, %rd12474;
	xor.b64  	%rd12476, %rd12475, %rd12430;
	xor.b64  	%rd12477, %rd12476, %rd12445;
	xor.b64  	%rd12478, %rd12477, %rd12460;
	xor.b64  	%rd12479, %rd12418, %rd12403;
	xor.b64  	%rd12480, %rd12479, %rd12433;
	xor.b64  	%rd12481, %rd12480, %rd12448;
	xor.b64  	%rd12482, %rd12481, %rd12463;
	xor.b64  	%rd12483, %rd12421, %rd12406;
	xor.b64  	%rd12484, %rd12483, %rd12436;
	xor.b64  	%rd12485, %rd12484, %rd12451;
	xor.b64  	%rd12486, %rd12485, %rd12466;
	xor.b64  	%rd12487, %rd12424, %rd12409;
	xor.b64  	%rd12488, %rd12487, %rd12439;
	xor.b64  	%rd12489, %rd12488, %rd12454;
	xor.b64  	%rd12490, %rd12489, %rd12469;
	xor.b64  	%rd12491, %rd12427, %rd12412;
	xor.b64  	%rd12492, %rd12491, %rd12442;
	xor.b64  	%rd12493, %rd12492, %rd12457;
	xor.b64  	%rd12494, %rd12493, %rd12472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8783}, %rd12482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8784,%dummy}, %rd12482;
	}
	shf.l.wrap.b32 	%r8785, %r8784, %r8783, 1;
	shf.l.wrap.b32 	%r8786, %r8783, %r8784, 1;
	mov.b64 	%rd12495, {%r8786, %r8785};
	xor.b64  	%rd12496, %rd12494, %rd12495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8787}, %rd12486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8788,%dummy}, %rd12486;
	}
	shf.l.wrap.b32 	%r8789, %r8788, %r8787, 1;
	shf.l.wrap.b32 	%r8790, %r8787, %r8788, 1;
	mov.b64 	%rd12497, {%r8790, %r8789};
	xor.b64  	%rd12498, %rd12497, %rd12478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8791}, %rd12490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8792,%dummy}, %rd12490;
	}
	shf.l.wrap.b32 	%r8793, %r8792, %r8791, 1;
	shf.l.wrap.b32 	%r8794, %r8791, %r8792, 1;
	mov.b64 	%rd12499, {%r8794, %r8793};
	xor.b64  	%rd12500, %rd12499, %rd12482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8795}, %rd12494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8796,%dummy}, %rd12494;
	}
	shf.l.wrap.b32 	%r8797, %r8796, %r8795, 1;
	shf.l.wrap.b32 	%r8798, %r8795, %r8796, 1;
	mov.b64 	%rd12501, {%r8798, %r8797};
	xor.b64  	%rd12502, %rd12501, %rd12486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8799}, %rd12478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8800,%dummy}, %rd12478;
	}
	shf.l.wrap.b32 	%r8801, %r8800, %r8799, 1;
	shf.l.wrap.b32 	%r8802, %r8799, %r8800, 1;
	mov.b64 	%rd12503, {%r8802, %r8801};
	xor.b64  	%rd12504, %rd12490, %rd12503;
	xor.b64  	%rd12505, %rd12496, %rd12474;
	xor.b64  	%rd12506, %rd12498, %rd12403;
	xor.b64  	%rd12507, %rd12500, %rd12406;
	xor.b64  	%rd12508, %rd12502, %rd12409;
	xor.b64  	%rd12509, %rd12504, %rd12412;
	xor.b64  	%rd12510, %rd12496, %rd12415;
	xor.b64  	%rd12511, %rd12498, %rd12418;
	xor.b64  	%rd12512, %rd12500, %rd12421;
	xor.b64  	%rd12513, %rd12502, %rd12424;
	xor.b64  	%rd12514, %rd12504, %rd12427;
	xor.b64  	%rd12515, %rd12496, %rd12430;
	xor.b64  	%rd12516, %rd12498, %rd12433;
	xor.b64  	%rd12517, %rd12500, %rd12436;
	xor.b64  	%rd12518, %rd12502, %rd12439;
	xor.b64  	%rd12519, %rd12504, %rd12442;
	xor.b64  	%rd12520, %rd12496, %rd12445;
	xor.b64  	%rd12521, %rd12498, %rd12448;
	xor.b64  	%rd12522, %rd12500, %rd12451;
	xor.b64  	%rd12523, %rd12502, %rd12454;
	xor.b64  	%rd12524, %rd12504, %rd12457;
	xor.b64  	%rd12525, %rd12496, %rd12460;
	xor.b64  	%rd12526, %rd12498, %rd12463;
	xor.b64  	%rd12527, %rd12500, %rd12466;
	xor.b64  	%rd12528, %rd12502, %rd12469;
	xor.b64  	%rd12529, %rd12504, %rd12472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8803,%dummy}, %rd12511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8804}, %rd12511;
	}
	shf.r.wrap.b32 	%r8805, %r8804, %r8803, 20;
	shf.r.wrap.b32 	%r8806, %r8803, %r8804, 20;
	mov.b64 	%rd12530, {%r8806, %r8805};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8807,%dummy}, %rd12517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8808}, %rd12517;
	}
	shf.r.wrap.b32 	%r8809, %r8808, %r8807, 21;
	shf.r.wrap.b32 	%r8810, %r8807, %r8808, 21;
	mov.b64 	%rd12531, {%r8810, %r8809};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8811}, %rd12523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8812,%dummy}, %rd12523;
	}
	shf.l.wrap.b32 	%r8813, %r8812, %r8811, 21;
	shf.l.wrap.b32 	%r8814, %r8811, %r8812, 21;
	mov.b64 	%rd12532, {%r8814, %r8813};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8815}, %rd12529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8816,%dummy}, %rd12529;
	}
	shf.l.wrap.b32 	%r8817, %r8816, %r8815, 14;
	shf.l.wrap.b32 	%r8818, %r8815, %r8816, 14;
	mov.b64 	%rd12533, {%r8818, %r8817};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8819}, %rd12508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8820,%dummy}, %rd12508;
	}
	shf.l.wrap.b32 	%r8821, %r8820, %r8819, 28;
	shf.l.wrap.b32 	%r8822, %r8819, %r8820, 28;
	mov.b64 	%rd12534, {%r8822, %r8821};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8823}, %rd12514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8824,%dummy}, %rd12514;
	}
	shf.l.wrap.b32 	%r8825, %r8824, %r8823, 20;
	shf.l.wrap.b32 	%r8826, %r8823, %r8824, 20;
	mov.b64 	%rd12535, {%r8826, %r8825};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8827}, %rd12515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8828,%dummy}, %rd12515;
	}
	shf.l.wrap.b32 	%r8829, %r8828, %r8827, 3;
	shf.l.wrap.b32 	%r8830, %r8827, %r8828, 3;
	mov.b64 	%rd12536, {%r8830, %r8829};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8831,%dummy}, %rd12521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8832}, %rd12521;
	}
	shf.r.wrap.b32 	%r8833, %r8832, %r8831, 19;
	shf.r.wrap.b32 	%r8834, %r8831, %r8832, 19;
	mov.b64 	%rd12537, {%r8834, %r8833};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8835,%dummy}, %rd12527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8836}, %rd12527;
	}
	shf.r.wrap.b32 	%r8837, %r8836, %r8835, 3;
	shf.r.wrap.b32 	%r8838, %r8835, %r8836, 3;
	mov.b64 	%rd12538, {%r8838, %r8837};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8839}, %rd12506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8840,%dummy}, %rd12506;
	}
	shf.l.wrap.b32 	%r8841, %r8840, %r8839, 1;
	shf.l.wrap.b32 	%r8842, %r8839, %r8840, 1;
	mov.b64 	%rd12539, {%r8842, %r8841};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8843}, %rd12512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8844,%dummy}, %rd12512;
	}
	shf.l.wrap.b32 	%r8845, %r8844, %r8843, 6;
	shf.l.wrap.b32 	%r8846, %r8843, %r8844, 6;
	mov.b64 	%rd12540, {%r8846, %r8845};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8847}, %rd12518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8848,%dummy}, %rd12518;
	}
	shf.l.wrap.b32 	%r8849, %r8848, %r8847, 25;
	shf.l.wrap.b32 	%r8850, %r8847, %r8848, 25;
	mov.b64 	%rd12541, {%r8850, %r8849};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8851}, %rd12524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8852,%dummy}, %rd12524;
	}
	shf.l.wrap.b32 	%r8853, %r8852, %r8851, 8;
	shf.l.wrap.b32 	%r8854, %r8851, %r8852, 8;
	mov.b64 	%rd12542, {%r8854, %r8853};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8855}, %rd12525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8856,%dummy}, %rd12525;
	}
	shf.l.wrap.b32 	%r8857, %r8856, %r8855, 18;
	shf.l.wrap.b32 	%r8858, %r8855, %r8856, 18;
	mov.b64 	%rd12543, {%r8858, %r8857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8859}, %rd12509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8860,%dummy}, %rd12509;
	}
	shf.l.wrap.b32 	%r8861, %r8860, %r8859, 27;
	shf.l.wrap.b32 	%r8862, %r8859, %r8860, 27;
	mov.b64 	%rd12544, {%r8862, %r8861};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8863,%dummy}, %rd12510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8864}, %rd12510;
	}
	shf.r.wrap.b32 	%r8865, %r8864, %r8863, 28;
	shf.r.wrap.b32 	%r8866, %r8863, %r8864, 28;
	mov.b64 	%rd12545, {%r8866, %r8865};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8867}, %rd12516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8868,%dummy}, %rd12516;
	}
	shf.l.wrap.b32 	%r8869, %r8868, %r8867, 10;
	shf.l.wrap.b32 	%r8870, %r8867, %r8868, 10;
	mov.b64 	%rd12546, {%r8870, %r8869};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8871}, %rd12522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8872,%dummy}, %rd12522;
	}
	shf.l.wrap.b32 	%r8873, %r8872, %r8871, 15;
	shf.l.wrap.b32 	%r8874, %r8871, %r8872, 15;
	mov.b64 	%rd12547, {%r8874, %r8873};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8875,%dummy}, %rd12528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8876}, %rd12528;
	}
	shf.r.wrap.b32 	%r8877, %r8876, %r8875, 8;
	shf.r.wrap.b32 	%r8878, %r8875, %r8876, 8;
	mov.b64 	%rd12548, {%r8878, %r8877};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8879,%dummy}, %rd12507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8880}, %rd12507;
	}
	shf.r.wrap.b32 	%r8881, %r8880, %r8879, 2;
	shf.r.wrap.b32 	%r8882, %r8879, %r8880, 2;
	mov.b64 	%rd12549, {%r8882, %r8881};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8883,%dummy}, %rd12513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8884}, %rd12513;
	}
	shf.r.wrap.b32 	%r8885, %r8884, %r8883, 9;
	shf.r.wrap.b32 	%r8886, %r8883, %r8884, 9;
	mov.b64 	%rd12550, {%r8886, %r8885};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8887,%dummy}, %rd12519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8888}, %rd12519;
	}
	shf.r.wrap.b32 	%r8889, %r8888, %r8887, 25;
	shf.r.wrap.b32 	%r8890, %r8887, %r8888, 25;
	mov.b64 	%rd12551, {%r8890, %r8889};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8891,%dummy}, %rd12520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8892}, %rd12520;
	}
	shf.r.wrap.b32 	%r8893, %r8892, %r8891, 23;
	shf.r.wrap.b32 	%r8894, %r8891, %r8892, 23;
	mov.b64 	%rd12552, {%r8894, %r8893};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8895}, %rd12526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd12526;
	}
	shf.l.wrap.b32 	%r8897, %r8896, %r8895, 2;
	shf.l.wrap.b32 	%r8898, %r8895, %r8896, 2;
	mov.b64 	%rd12553, {%r8898, %r8897};
	not.b64 	%rd12554, %rd12530;
	and.b64  	%rd12555, %rd12531, %rd12554;
	xor.b64  	%rd12556, %rd12555, %rd12505;
	not.b64 	%rd12557, %rd12531;
	and.b64  	%rd12558, %rd12532, %rd12557;
	xor.b64  	%rd12559, %rd12558, %rd12530;
	not.b64 	%rd12560, %rd12532;
	and.b64  	%rd12561, %rd12533, %rd12560;
	xor.b64  	%rd12562, %rd12561, %rd12531;
	not.b64 	%rd12563, %rd12533;
	and.b64  	%rd12564, %rd12505, %rd12563;
	xor.b64  	%rd12565, %rd12564, %rd12532;
	not.b64 	%rd12566, %rd12505;
	and.b64  	%rd12567, %rd12530, %rd12566;
	xor.b64  	%rd12568, %rd12567, %rd12533;
	not.b64 	%rd12569, %rd12535;
	and.b64  	%rd12570, %rd12536, %rd12569;
	xor.b64  	%rd12571, %rd12570, %rd12534;
	not.b64 	%rd12572, %rd12536;
	and.b64  	%rd12573, %rd12537, %rd12572;
	xor.b64  	%rd12574, %rd12573, %rd12535;
	not.b64 	%rd12575, %rd12537;
	and.b64  	%rd12576, %rd12538, %rd12575;
	xor.b64  	%rd12577, %rd12576, %rd12536;
	not.b64 	%rd12578, %rd12538;
	and.b64  	%rd12579, %rd12534, %rd12578;
	xor.b64  	%rd12580, %rd12579, %rd12537;
	not.b64 	%rd12581, %rd12534;
	and.b64  	%rd12582, %rd12535, %rd12581;
	xor.b64  	%rd12583, %rd12582, %rd12538;
	not.b64 	%rd12584, %rd12540;
	and.b64  	%rd12585, %rd12541, %rd12584;
	xor.b64  	%rd12586, %rd12585, %rd12539;
	not.b64 	%rd12587, %rd12541;
	and.b64  	%rd12588, %rd12542, %rd12587;
	xor.b64  	%rd12589, %rd12588, %rd12540;
	not.b64 	%rd12590, %rd12542;
	and.b64  	%rd12591, %rd12543, %rd12590;
	xor.b64  	%rd12592, %rd12591, %rd12541;
	not.b64 	%rd12593, %rd12543;
	and.b64  	%rd12594, %rd12539, %rd12593;
	xor.b64  	%rd12595, %rd12594, %rd12542;
	not.b64 	%rd12596, %rd12539;
	and.b64  	%rd12597, %rd12540, %rd12596;
	xor.b64  	%rd12598, %rd12597, %rd12543;
	not.b64 	%rd12599, %rd12545;
	and.b64  	%rd12600, %rd12546, %rd12599;
	xor.b64  	%rd12601, %rd12600, %rd12544;
	not.b64 	%rd12602, %rd12546;
	and.b64  	%rd12603, %rd12547, %rd12602;
	xor.b64  	%rd12604, %rd12603, %rd12545;
	not.b64 	%rd12605, %rd12547;
	and.b64  	%rd12606, %rd12548, %rd12605;
	xor.b64  	%rd12607, %rd12606, %rd12546;
	not.b64 	%rd12608, %rd12548;
	and.b64  	%rd12609, %rd12544, %rd12608;
	xor.b64  	%rd12610, %rd12609, %rd12547;
	not.b64 	%rd12611, %rd12544;
	and.b64  	%rd12612, %rd12545, %rd12611;
	xor.b64  	%rd12613, %rd12612, %rd12548;
	not.b64 	%rd12614, %rd12550;
	and.b64  	%rd12615, %rd12551, %rd12614;
	xor.b64  	%rd12616, %rd12615, %rd12549;
	not.b64 	%rd12617, %rd12551;
	and.b64  	%rd12618, %rd12552, %rd12617;
	xor.b64  	%rd12619, %rd12618, %rd12550;
	not.b64 	%rd12620, %rd12552;
	and.b64  	%rd12621, %rd12553, %rd12620;
	xor.b64  	%rd12622, %rd12621, %rd12551;
	not.b64 	%rd12623, %rd12553;
	and.b64  	%rd12624, %rd12549, %rd12623;
	xor.b64  	%rd12625, %rd12624, %rd12552;
	not.b64 	%rd12626, %rd12549;
	and.b64  	%rd12627, %rd12550, %rd12626;
	xor.b64  	%rd12628, %rd12627, %rd12553;
	xor.b64  	%rd12629, %rd12556, %rd19823;
	xor.b64  	%rd12630, %rd12571, %rd12629;
	xor.b64  	%rd12631, %rd12630, %rd12586;
	xor.b64  	%rd12632, %rd12631, %rd12601;
	xor.b64  	%rd12633, %rd12632, %rd12616;
	xor.b64  	%rd12634, %rd12574, %rd12559;
	xor.b64  	%rd12635, %rd12634, %rd12589;
	xor.b64  	%rd12636, %rd12635, %rd12604;
	xor.b64  	%rd12637, %rd12636, %rd12619;
	xor.b64  	%rd12638, %rd12577, %rd12562;
	xor.b64  	%rd12639, %rd12638, %rd12592;
	xor.b64  	%rd12640, %rd12639, %rd12607;
	xor.b64  	%rd12641, %rd12640, %rd12622;
	xor.b64  	%rd12642, %rd12580, %rd12565;
	xor.b64  	%rd12643, %rd12642, %rd12595;
	xor.b64  	%rd12644, %rd12643, %rd12610;
	xor.b64  	%rd12645, %rd12644, %rd12625;
	xor.b64  	%rd12646, %rd12583, %rd12568;
	xor.b64  	%rd12647, %rd12646, %rd12598;
	xor.b64  	%rd12648, %rd12647, %rd12613;
	xor.b64  	%rd12649, %rd12648, %rd12628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8899}, %rd12637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8900,%dummy}, %rd12637;
	}
	shf.l.wrap.b32 	%r8901, %r8900, %r8899, 1;
	shf.l.wrap.b32 	%r8902, %r8899, %r8900, 1;
	mov.b64 	%rd12650, {%r8902, %r8901};
	xor.b64  	%rd12651, %rd12649, %rd12650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8903}, %rd12641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8904,%dummy}, %rd12641;
	}
	shf.l.wrap.b32 	%r8905, %r8904, %r8903, 1;
	shf.l.wrap.b32 	%r8906, %r8903, %r8904, 1;
	mov.b64 	%rd12652, {%r8906, %r8905};
	xor.b64  	%rd12653, %rd12652, %rd12633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8907}, %rd12645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8908,%dummy}, %rd12645;
	}
	shf.l.wrap.b32 	%r8909, %r8908, %r8907, 1;
	shf.l.wrap.b32 	%r8910, %r8907, %r8908, 1;
	mov.b64 	%rd12654, {%r8910, %r8909};
	xor.b64  	%rd12655, %rd12654, %rd12637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8911}, %rd12649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8912,%dummy}, %rd12649;
	}
	shf.l.wrap.b32 	%r8913, %r8912, %r8911, 1;
	shf.l.wrap.b32 	%r8914, %r8911, %r8912, 1;
	mov.b64 	%rd12656, {%r8914, %r8913};
	xor.b64  	%rd12657, %rd12656, %rd12641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8915}, %rd12633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8916,%dummy}, %rd12633;
	}
	shf.l.wrap.b32 	%r8917, %r8916, %r8915, 1;
	shf.l.wrap.b32 	%r8918, %r8915, %r8916, 1;
	mov.b64 	%rd12658, {%r8918, %r8917};
	xor.b64  	%rd12659, %rd12645, %rd12658;
	xor.b64  	%rd12660, %rd12651, %rd12629;
	xor.b64  	%rd12661, %rd12653, %rd12559;
	xor.b64  	%rd12662, %rd12655, %rd12562;
	xor.b64  	%rd12663, %rd12657, %rd12565;
	xor.b64  	%rd12664, %rd12659, %rd12568;
	xor.b64  	%rd12665, %rd12651, %rd12571;
	xor.b64  	%rd12666, %rd12653, %rd12574;
	xor.b64  	%rd12667, %rd12655, %rd12577;
	xor.b64  	%rd12668, %rd12657, %rd12580;
	xor.b64  	%rd12669, %rd12659, %rd12583;
	xor.b64  	%rd12670, %rd12651, %rd12586;
	xor.b64  	%rd12671, %rd12653, %rd12589;
	xor.b64  	%rd12672, %rd12655, %rd12592;
	xor.b64  	%rd12673, %rd12657, %rd12595;
	xor.b64  	%rd12674, %rd12659, %rd12598;
	xor.b64  	%rd12675, %rd12651, %rd12601;
	xor.b64  	%rd12676, %rd12653, %rd12604;
	xor.b64  	%rd12677, %rd12655, %rd12607;
	xor.b64  	%rd12678, %rd12657, %rd12610;
	xor.b64  	%rd12679, %rd12659, %rd12613;
	xor.b64  	%rd12680, %rd12651, %rd12616;
	xor.b64  	%rd12681, %rd12653, %rd12619;
	xor.b64  	%rd12682, %rd12655, %rd12622;
	xor.b64  	%rd12683, %rd12657, %rd12625;
	xor.b64  	%rd12684, %rd12659, %rd12628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8919,%dummy}, %rd12666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8920}, %rd12666;
	}
	shf.r.wrap.b32 	%r8921, %r8920, %r8919, 20;
	shf.r.wrap.b32 	%r8922, %r8919, %r8920, 20;
	mov.b64 	%rd12685, {%r8922, %r8921};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8923,%dummy}, %rd12672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8924}, %rd12672;
	}
	shf.r.wrap.b32 	%r8925, %r8924, %r8923, 21;
	shf.r.wrap.b32 	%r8926, %r8923, %r8924, 21;
	mov.b64 	%rd12686, {%r8926, %r8925};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8927}, %rd12678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8928,%dummy}, %rd12678;
	}
	shf.l.wrap.b32 	%r8929, %r8928, %r8927, 21;
	shf.l.wrap.b32 	%r8930, %r8927, %r8928, 21;
	mov.b64 	%rd12687, {%r8930, %r8929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8931}, %rd12684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8932,%dummy}, %rd12684;
	}
	shf.l.wrap.b32 	%r8933, %r8932, %r8931, 14;
	shf.l.wrap.b32 	%r8934, %r8931, %r8932, 14;
	mov.b64 	%rd12688, {%r8934, %r8933};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8935}, %rd12663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8936,%dummy}, %rd12663;
	}
	shf.l.wrap.b32 	%r8937, %r8936, %r8935, 28;
	shf.l.wrap.b32 	%r8938, %r8935, %r8936, 28;
	mov.b64 	%rd12689, {%r8938, %r8937};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8939}, %rd12669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8940,%dummy}, %rd12669;
	}
	shf.l.wrap.b32 	%r8941, %r8940, %r8939, 20;
	shf.l.wrap.b32 	%r8942, %r8939, %r8940, 20;
	mov.b64 	%rd12690, {%r8942, %r8941};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8943}, %rd12670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8944,%dummy}, %rd12670;
	}
	shf.l.wrap.b32 	%r8945, %r8944, %r8943, 3;
	shf.l.wrap.b32 	%r8946, %r8943, %r8944, 3;
	mov.b64 	%rd12691, {%r8946, %r8945};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8947,%dummy}, %rd12676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8948}, %rd12676;
	}
	shf.r.wrap.b32 	%r8949, %r8948, %r8947, 19;
	shf.r.wrap.b32 	%r8950, %r8947, %r8948, 19;
	mov.b64 	%rd12692, {%r8950, %r8949};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8951,%dummy}, %rd12682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8952}, %rd12682;
	}
	shf.r.wrap.b32 	%r8953, %r8952, %r8951, 3;
	shf.r.wrap.b32 	%r8954, %r8951, %r8952, 3;
	mov.b64 	%rd12693, {%r8954, %r8953};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8955}, %rd12661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8956,%dummy}, %rd12661;
	}
	shf.l.wrap.b32 	%r8957, %r8956, %r8955, 1;
	shf.l.wrap.b32 	%r8958, %r8955, %r8956, 1;
	mov.b64 	%rd12694, {%r8958, %r8957};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8959}, %rd12667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8960,%dummy}, %rd12667;
	}
	shf.l.wrap.b32 	%r8961, %r8960, %r8959, 6;
	shf.l.wrap.b32 	%r8962, %r8959, %r8960, 6;
	mov.b64 	%rd12695, {%r8962, %r8961};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8963}, %rd12673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8964,%dummy}, %rd12673;
	}
	shf.l.wrap.b32 	%r8965, %r8964, %r8963, 25;
	shf.l.wrap.b32 	%r8966, %r8963, %r8964, 25;
	mov.b64 	%rd12696, {%r8966, %r8965};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8967}, %rd12679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8968,%dummy}, %rd12679;
	}
	shf.l.wrap.b32 	%r8969, %r8968, %r8967, 8;
	shf.l.wrap.b32 	%r8970, %r8967, %r8968, 8;
	mov.b64 	%rd12697, {%r8970, %r8969};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8971}, %rd12680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8972,%dummy}, %rd12680;
	}
	shf.l.wrap.b32 	%r8973, %r8972, %r8971, 18;
	shf.l.wrap.b32 	%r8974, %r8971, %r8972, 18;
	mov.b64 	%rd12698, {%r8974, %r8973};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8975}, %rd12664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8976,%dummy}, %rd12664;
	}
	shf.l.wrap.b32 	%r8977, %r8976, %r8975, 27;
	shf.l.wrap.b32 	%r8978, %r8975, %r8976, 27;
	mov.b64 	%rd12699, {%r8978, %r8977};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8979,%dummy}, %rd12665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8980}, %rd12665;
	}
	shf.r.wrap.b32 	%r8981, %r8980, %r8979, 28;
	shf.r.wrap.b32 	%r8982, %r8979, %r8980, 28;
	mov.b64 	%rd12700, {%r8982, %r8981};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8983}, %rd12671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8984,%dummy}, %rd12671;
	}
	shf.l.wrap.b32 	%r8985, %r8984, %r8983, 10;
	shf.l.wrap.b32 	%r8986, %r8983, %r8984, 10;
	mov.b64 	%rd12701, {%r8986, %r8985};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8987}, %rd12677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8988,%dummy}, %rd12677;
	}
	shf.l.wrap.b32 	%r8989, %r8988, %r8987, 15;
	shf.l.wrap.b32 	%r8990, %r8987, %r8988, 15;
	mov.b64 	%rd12702, {%r8990, %r8989};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8991,%dummy}, %rd12683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8992}, %rd12683;
	}
	shf.r.wrap.b32 	%r8993, %r8992, %r8991, 8;
	shf.r.wrap.b32 	%r8994, %r8991, %r8992, 8;
	mov.b64 	%rd12703, {%r8994, %r8993};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8995,%dummy}, %rd12662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8996}, %rd12662;
	}
	shf.r.wrap.b32 	%r8997, %r8996, %r8995, 2;
	shf.r.wrap.b32 	%r8998, %r8995, %r8996, 2;
	mov.b64 	%rd12704, {%r8998, %r8997};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8999,%dummy}, %rd12668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9000}, %rd12668;
	}
	shf.r.wrap.b32 	%r9001, %r9000, %r8999, 9;
	shf.r.wrap.b32 	%r9002, %r8999, %r9000, 9;
	mov.b64 	%rd12705, {%r9002, %r9001};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9003,%dummy}, %rd12674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9004}, %rd12674;
	}
	shf.r.wrap.b32 	%r9005, %r9004, %r9003, 25;
	shf.r.wrap.b32 	%r9006, %r9003, %r9004, 25;
	mov.b64 	%rd12706, {%r9006, %r9005};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9007,%dummy}, %rd12675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9008}, %rd12675;
	}
	shf.r.wrap.b32 	%r9009, %r9008, %r9007, 23;
	shf.r.wrap.b32 	%r9010, %r9007, %r9008, 23;
	mov.b64 	%rd12707, {%r9010, %r9009};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9011}, %rd12681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9012,%dummy}, %rd12681;
	}
	shf.l.wrap.b32 	%r9013, %r9012, %r9011, 2;
	shf.l.wrap.b32 	%r9014, %r9011, %r9012, 2;
	mov.b64 	%rd12708, {%r9014, %r9013};
	not.b64 	%rd12709, %rd12685;
	and.b64  	%rd12710, %rd12686, %rd12709;
	xor.b64  	%rd12711, %rd12710, %rd12660;
	not.b64 	%rd12712, %rd12686;
	and.b64  	%rd12713, %rd12687, %rd12712;
	xor.b64  	%rd12714, %rd12713, %rd12685;
	not.b64 	%rd12715, %rd12687;
	and.b64  	%rd12716, %rd12688, %rd12715;
	xor.b64  	%rd12717, %rd12716, %rd12686;
	not.b64 	%rd12718, %rd12688;
	and.b64  	%rd12719, %rd12660, %rd12718;
	xor.b64  	%rd12720, %rd12719, %rd12687;
	not.b64 	%rd12721, %rd12660;
	and.b64  	%rd12722, %rd12685, %rd12721;
	xor.b64  	%rd12723, %rd12722, %rd12688;
	not.b64 	%rd12724, %rd12690;
	and.b64  	%rd12725, %rd12691, %rd12724;
	xor.b64  	%rd12726, %rd12725, %rd12689;
	not.b64 	%rd12727, %rd12691;
	and.b64  	%rd12728, %rd12692, %rd12727;
	xor.b64  	%rd12729, %rd12728, %rd12690;
	not.b64 	%rd12730, %rd12692;
	and.b64  	%rd12731, %rd12693, %rd12730;
	xor.b64  	%rd12732, %rd12731, %rd12691;
	not.b64 	%rd12733, %rd12693;
	and.b64  	%rd12734, %rd12689, %rd12733;
	xor.b64  	%rd12735, %rd12734, %rd12692;
	not.b64 	%rd12736, %rd12689;
	and.b64  	%rd12737, %rd12690, %rd12736;
	xor.b64  	%rd12738, %rd12737, %rd12693;
	not.b64 	%rd12739, %rd12695;
	and.b64  	%rd12740, %rd12696, %rd12739;
	xor.b64  	%rd12741, %rd12740, %rd12694;
	not.b64 	%rd12742, %rd12696;
	and.b64  	%rd12743, %rd12697, %rd12742;
	xor.b64  	%rd12744, %rd12743, %rd12695;
	not.b64 	%rd12745, %rd12697;
	and.b64  	%rd12746, %rd12698, %rd12745;
	xor.b64  	%rd12747, %rd12746, %rd12696;
	not.b64 	%rd12748, %rd12698;
	and.b64  	%rd12749, %rd12694, %rd12748;
	xor.b64  	%rd12750, %rd12749, %rd12697;
	not.b64 	%rd12751, %rd12694;
	and.b64  	%rd12752, %rd12695, %rd12751;
	xor.b64  	%rd12753, %rd12752, %rd12698;
	not.b64 	%rd12754, %rd12700;
	and.b64  	%rd12755, %rd12701, %rd12754;
	xor.b64  	%rd12756, %rd12755, %rd12699;
	not.b64 	%rd12757, %rd12701;
	and.b64  	%rd12758, %rd12702, %rd12757;
	xor.b64  	%rd12759, %rd12758, %rd12700;
	not.b64 	%rd12760, %rd12702;
	and.b64  	%rd12761, %rd12703, %rd12760;
	xor.b64  	%rd12762, %rd12761, %rd12701;
	not.b64 	%rd12763, %rd12703;
	and.b64  	%rd12764, %rd12699, %rd12763;
	xor.b64  	%rd12765, %rd12764, %rd12702;
	not.b64 	%rd12766, %rd12699;
	and.b64  	%rd12767, %rd12700, %rd12766;
	xor.b64  	%rd12768, %rd12767, %rd12703;
	not.b64 	%rd12769, %rd12705;
	and.b64  	%rd12770, %rd12706, %rd12769;
	xor.b64  	%rd12771, %rd12770, %rd12704;
	not.b64 	%rd12772, %rd12706;
	and.b64  	%rd12773, %rd12707, %rd12772;
	xor.b64  	%rd12774, %rd12773, %rd12705;
	not.b64 	%rd12775, %rd12707;
	and.b64  	%rd12776, %rd12708, %rd12775;
	xor.b64  	%rd12777, %rd12776, %rd12706;
	not.b64 	%rd12778, %rd12708;
	and.b64  	%rd12779, %rd12704, %rd12778;
	xor.b64  	%rd12780, %rd12779, %rd12707;
	not.b64 	%rd12781, %rd12704;
	and.b64  	%rd12782, %rd12705, %rd12781;
	xor.b64  	%rd12783, %rd12782, %rd12708;
	xor.b64  	%rd12784, %rd12711, %rd19824;
	xor.b64  	%rd12785, %rd12726, %rd12784;
	xor.b64  	%rd12786, %rd12785, %rd12741;
	xor.b64  	%rd12787, %rd12786, %rd12756;
	xor.b64  	%rd12788, %rd12787, %rd12771;
	xor.b64  	%rd12789, %rd12729, %rd12714;
	xor.b64  	%rd12790, %rd12789, %rd12744;
	xor.b64  	%rd12791, %rd12790, %rd12759;
	xor.b64  	%rd12792, %rd12791, %rd12774;
	xor.b64  	%rd12793, %rd12732, %rd12717;
	xor.b64  	%rd12794, %rd12793, %rd12747;
	xor.b64  	%rd12795, %rd12794, %rd12762;
	xor.b64  	%rd12796, %rd12795, %rd12777;
	xor.b64  	%rd12797, %rd12735, %rd12720;
	xor.b64  	%rd12798, %rd12797, %rd12750;
	xor.b64  	%rd12799, %rd12798, %rd12765;
	xor.b64  	%rd12800, %rd12799, %rd12780;
	xor.b64  	%rd12801, %rd12738, %rd12723;
	xor.b64  	%rd12802, %rd12801, %rd12753;
	xor.b64  	%rd12803, %rd12802, %rd12768;
	xor.b64  	%rd12804, %rd12803, %rd12783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9015}, %rd12792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9016,%dummy}, %rd12792;
	}
	shf.l.wrap.b32 	%r9017, %r9016, %r9015, 1;
	shf.l.wrap.b32 	%r9018, %r9015, %r9016, 1;
	mov.b64 	%rd12805, {%r9018, %r9017};
	xor.b64  	%rd12806, %rd12804, %rd12805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9019}, %rd12796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9020,%dummy}, %rd12796;
	}
	shf.l.wrap.b32 	%r9021, %r9020, %r9019, 1;
	shf.l.wrap.b32 	%r9022, %r9019, %r9020, 1;
	mov.b64 	%rd12807, {%r9022, %r9021};
	xor.b64  	%rd12808, %rd12807, %rd12788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9023}, %rd12800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9024,%dummy}, %rd12800;
	}
	shf.l.wrap.b32 	%r9025, %r9024, %r9023, 1;
	shf.l.wrap.b32 	%r9026, %r9023, %r9024, 1;
	mov.b64 	%rd12809, {%r9026, %r9025};
	xor.b64  	%rd12810, %rd12809, %rd12792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9027}, %rd12804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9028,%dummy}, %rd12804;
	}
	shf.l.wrap.b32 	%r9029, %r9028, %r9027, 1;
	shf.l.wrap.b32 	%r9030, %r9027, %r9028, 1;
	mov.b64 	%rd12811, {%r9030, %r9029};
	xor.b64  	%rd12812, %rd12811, %rd12796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9031}, %rd12788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9032,%dummy}, %rd12788;
	}
	shf.l.wrap.b32 	%r9033, %r9032, %r9031, 1;
	shf.l.wrap.b32 	%r9034, %r9031, %r9032, 1;
	mov.b64 	%rd12813, {%r9034, %r9033};
	xor.b64  	%rd12814, %rd12800, %rd12813;
	xor.b64  	%rd12815, %rd12806, %rd12784;
	xor.b64  	%rd12816, %rd12808, %rd12714;
	xor.b64  	%rd12817, %rd12810, %rd12717;
	xor.b64  	%rd12818, %rd12812, %rd12720;
	xor.b64  	%rd12819, %rd12814, %rd12723;
	xor.b64  	%rd12820, %rd12806, %rd12726;
	xor.b64  	%rd12821, %rd12808, %rd12729;
	xor.b64  	%rd12822, %rd12810, %rd12732;
	xor.b64  	%rd12823, %rd12812, %rd12735;
	xor.b64  	%rd12824, %rd12814, %rd12738;
	xor.b64  	%rd12825, %rd12806, %rd12741;
	xor.b64  	%rd12826, %rd12808, %rd12744;
	xor.b64  	%rd12827, %rd12810, %rd12747;
	xor.b64  	%rd12828, %rd12812, %rd12750;
	xor.b64  	%rd12829, %rd12814, %rd12753;
	xor.b64  	%rd12830, %rd12806, %rd12756;
	xor.b64  	%rd12831, %rd12808, %rd12759;
	xor.b64  	%rd12832, %rd12810, %rd12762;
	xor.b64  	%rd12833, %rd12812, %rd12765;
	xor.b64  	%rd12834, %rd12814, %rd12768;
	xor.b64  	%rd12835, %rd12806, %rd12771;
	xor.b64  	%rd12836, %rd12808, %rd12774;
	xor.b64  	%rd12837, %rd12810, %rd12777;
	xor.b64  	%rd12838, %rd12812, %rd12780;
	xor.b64  	%rd12839, %rd12814, %rd12783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9035,%dummy}, %rd12821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9036}, %rd12821;
	}
	shf.r.wrap.b32 	%r9037, %r9036, %r9035, 20;
	shf.r.wrap.b32 	%r9038, %r9035, %r9036, 20;
	mov.b64 	%rd12840, {%r9038, %r9037};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9039,%dummy}, %rd12827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9040}, %rd12827;
	}
	shf.r.wrap.b32 	%r9041, %r9040, %r9039, 21;
	shf.r.wrap.b32 	%r9042, %r9039, %r9040, 21;
	mov.b64 	%rd12841, {%r9042, %r9041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9043}, %rd12833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9044,%dummy}, %rd12833;
	}
	shf.l.wrap.b32 	%r9045, %r9044, %r9043, 21;
	shf.l.wrap.b32 	%r9046, %r9043, %r9044, 21;
	mov.b64 	%rd12842, {%r9046, %r9045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9047}, %rd12839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9048,%dummy}, %rd12839;
	}
	shf.l.wrap.b32 	%r9049, %r9048, %r9047, 14;
	shf.l.wrap.b32 	%r9050, %r9047, %r9048, 14;
	mov.b64 	%rd12843, {%r9050, %r9049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9051}, %rd12818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9052,%dummy}, %rd12818;
	}
	shf.l.wrap.b32 	%r9053, %r9052, %r9051, 28;
	shf.l.wrap.b32 	%r9054, %r9051, %r9052, 28;
	mov.b64 	%rd12844, {%r9054, %r9053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9055}, %rd12824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9056,%dummy}, %rd12824;
	}
	shf.l.wrap.b32 	%r9057, %r9056, %r9055, 20;
	shf.l.wrap.b32 	%r9058, %r9055, %r9056, 20;
	mov.b64 	%rd12845, {%r9058, %r9057};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9059}, %rd12825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9060,%dummy}, %rd12825;
	}
	shf.l.wrap.b32 	%r9061, %r9060, %r9059, 3;
	shf.l.wrap.b32 	%r9062, %r9059, %r9060, 3;
	mov.b64 	%rd12846, {%r9062, %r9061};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9063,%dummy}, %rd12831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9064}, %rd12831;
	}
	shf.r.wrap.b32 	%r9065, %r9064, %r9063, 19;
	shf.r.wrap.b32 	%r9066, %r9063, %r9064, 19;
	mov.b64 	%rd12847, {%r9066, %r9065};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9067,%dummy}, %rd12837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9068}, %rd12837;
	}
	shf.r.wrap.b32 	%r9069, %r9068, %r9067, 3;
	shf.r.wrap.b32 	%r9070, %r9067, %r9068, 3;
	mov.b64 	%rd12848, {%r9070, %r9069};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9071}, %rd12816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9072,%dummy}, %rd12816;
	}
	shf.l.wrap.b32 	%r9073, %r9072, %r9071, 1;
	shf.l.wrap.b32 	%r9074, %r9071, %r9072, 1;
	mov.b64 	%rd12849, {%r9074, %r9073};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9075}, %rd12822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9076,%dummy}, %rd12822;
	}
	shf.l.wrap.b32 	%r9077, %r9076, %r9075, 6;
	shf.l.wrap.b32 	%r9078, %r9075, %r9076, 6;
	mov.b64 	%rd12850, {%r9078, %r9077};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9079}, %rd12828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9080,%dummy}, %rd12828;
	}
	shf.l.wrap.b32 	%r9081, %r9080, %r9079, 25;
	shf.l.wrap.b32 	%r9082, %r9079, %r9080, 25;
	mov.b64 	%rd12851, {%r9082, %r9081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9083}, %rd12834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9084,%dummy}, %rd12834;
	}
	shf.l.wrap.b32 	%r9085, %r9084, %r9083, 8;
	shf.l.wrap.b32 	%r9086, %r9083, %r9084, 8;
	mov.b64 	%rd12852, {%r9086, %r9085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9087}, %rd12835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9088,%dummy}, %rd12835;
	}
	shf.l.wrap.b32 	%r9089, %r9088, %r9087, 18;
	shf.l.wrap.b32 	%r9090, %r9087, %r9088, 18;
	mov.b64 	%rd12853, {%r9090, %r9089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9091}, %rd12819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd12819;
	}
	shf.l.wrap.b32 	%r9093, %r9092, %r9091, 27;
	shf.l.wrap.b32 	%r9094, %r9091, %r9092, 27;
	mov.b64 	%rd12854, {%r9094, %r9093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9095,%dummy}, %rd12820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9096}, %rd12820;
	}
	shf.r.wrap.b32 	%r9097, %r9096, %r9095, 28;
	shf.r.wrap.b32 	%r9098, %r9095, %r9096, 28;
	mov.b64 	%rd12855, {%r9098, %r9097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9099}, %rd12826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9100,%dummy}, %rd12826;
	}
	shf.l.wrap.b32 	%r9101, %r9100, %r9099, 10;
	shf.l.wrap.b32 	%r9102, %r9099, %r9100, 10;
	mov.b64 	%rd12856, {%r9102, %r9101};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9103}, %rd12832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9104,%dummy}, %rd12832;
	}
	shf.l.wrap.b32 	%r9105, %r9104, %r9103, 15;
	shf.l.wrap.b32 	%r9106, %r9103, %r9104, 15;
	mov.b64 	%rd12857, {%r9106, %r9105};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9107,%dummy}, %rd12838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9108}, %rd12838;
	}
	shf.r.wrap.b32 	%r9109, %r9108, %r9107, 8;
	shf.r.wrap.b32 	%r9110, %r9107, %r9108, 8;
	mov.b64 	%rd12858, {%r9110, %r9109};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9111,%dummy}, %rd12817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9112}, %rd12817;
	}
	shf.r.wrap.b32 	%r9113, %r9112, %r9111, 2;
	shf.r.wrap.b32 	%r9114, %r9111, %r9112, 2;
	mov.b64 	%rd12859, {%r9114, %r9113};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9115,%dummy}, %rd12823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9116}, %rd12823;
	}
	shf.r.wrap.b32 	%r9117, %r9116, %r9115, 9;
	shf.r.wrap.b32 	%r9118, %r9115, %r9116, 9;
	mov.b64 	%rd12860, {%r9118, %r9117};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9119,%dummy}, %rd12829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9120}, %rd12829;
	}
	shf.r.wrap.b32 	%r9121, %r9120, %r9119, 25;
	shf.r.wrap.b32 	%r9122, %r9119, %r9120, 25;
	mov.b64 	%rd12861, {%r9122, %r9121};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9123,%dummy}, %rd12830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9124}, %rd12830;
	}
	shf.r.wrap.b32 	%r9125, %r9124, %r9123, 23;
	shf.r.wrap.b32 	%r9126, %r9123, %r9124, 23;
	mov.b64 	%rd12862, {%r9126, %r9125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9127}, %rd12836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9128,%dummy}, %rd12836;
	}
	shf.l.wrap.b32 	%r9129, %r9128, %r9127, 2;
	shf.l.wrap.b32 	%r9130, %r9127, %r9128, 2;
	mov.b64 	%rd12863, {%r9130, %r9129};
	not.b64 	%rd12864, %rd12840;
	and.b64  	%rd12865, %rd12841, %rd12864;
	xor.b64  	%rd12866, %rd12865, %rd12815;
	not.b64 	%rd12867, %rd12841;
	and.b64  	%rd12868, %rd12842, %rd12867;
	xor.b64  	%rd12869, %rd12868, %rd12840;
	not.b64 	%rd12870, %rd12842;
	and.b64  	%rd12871, %rd12843, %rd12870;
	xor.b64  	%rd12872, %rd12871, %rd12841;
	not.b64 	%rd12873, %rd12843;
	and.b64  	%rd12874, %rd12815, %rd12873;
	xor.b64  	%rd12875, %rd12874, %rd12842;
	not.b64 	%rd12876, %rd12815;
	and.b64  	%rd12877, %rd12840, %rd12876;
	xor.b64  	%rd12878, %rd12877, %rd12843;
	not.b64 	%rd12879, %rd12845;
	and.b64  	%rd12880, %rd12846, %rd12879;
	xor.b64  	%rd12881, %rd12880, %rd12844;
	not.b64 	%rd12882, %rd12846;
	and.b64  	%rd12883, %rd12847, %rd12882;
	xor.b64  	%rd12884, %rd12883, %rd12845;
	not.b64 	%rd12885, %rd12847;
	and.b64  	%rd12886, %rd12848, %rd12885;
	xor.b64  	%rd12887, %rd12886, %rd12846;
	not.b64 	%rd12888, %rd12848;
	and.b64  	%rd12889, %rd12844, %rd12888;
	xor.b64  	%rd12890, %rd12889, %rd12847;
	not.b64 	%rd12891, %rd12844;
	and.b64  	%rd12892, %rd12845, %rd12891;
	xor.b64  	%rd12893, %rd12892, %rd12848;
	not.b64 	%rd12894, %rd12850;
	and.b64  	%rd12895, %rd12851, %rd12894;
	xor.b64  	%rd12896, %rd12895, %rd12849;
	not.b64 	%rd12897, %rd12851;
	and.b64  	%rd12898, %rd12852, %rd12897;
	xor.b64  	%rd12899, %rd12898, %rd12850;
	not.b64 	%rd12900, %rd12852;
	and.b64  	%rd12901, %rd12853, %rd12900;
	xor.b64  	%rd12902, %rd12901, %rd12851;
	not.b64 	%rd12903, %rd12853;
	and.b64  	%rd12904, %rd12849, %rd12903;
	xor.b64  	%rd12905, %rd12904, %rd12852;
	not.b64 	%rd12906, %rd12849;
	and.b64  	%rd12907, %rd12850, %rd12906;
	xor.b64  	%rd12908, %rd12907, %rd12853;
	not.b64 	%rd12909, %rd12855;
	and.b64  	%rd12910, %rd12856, %rd12909;
	xor.b64  	%rd12911, %rd12910, %rd12854;
	not.b64 	%rd12912, %rd12856;
	and.b64  	%rd12913, %rd12857, %rd12912;
	xor.b64  	%rd12914, %rd12913, %rd12855;
	not.b64 	%rd12915, %rd12857;
	and.b64  	%rd12916, %rd12858, %rd12915;
	xor.b64  	%rd12917, %rd12916, %rd12856;
	not.b64 	%rd12918, %rd12858;
	and.b64  	%rd12919, %rd12854, %rd12918;
	xor.b64  	%rd12920, %rd12919, %rd12857;
	not.b64 	%rd12921, %rd12854;
	and.b64  	%rd12922, %rd12855, %rd12921;
	xor.b64  	%rd12923, %rd12922, %rd12858;
	not.b64 	%rd12924, %rd12860;
	and.b64  	%rd12925, %rd12861, %rd12924;
	xor.b64  	%rd12926, %rd12925, %rd12859;
	not.b64 	%rd12927, %rd12861;
	and.b64  	%rd12928, %rd12862, %rd12927;
	xor.b64  	%rd12929, %rd12928, %rd12860;
	not.b64 	%rd12930, %rd12862;
	and.b64  	%rd12931, %rd12863, %rd12930;
	xor.b64  	%rd12932, %rd12931, %rd12861;
	not.b64 	%rd12933, %rd12863;
	and.b64  	%rd12934, %rd12859, %rd12933;
	xor.b64  	%rd12935, %rd12934, %rd12862;
	not.b64 	%rd12936, %rd12859;
	and.b64  	%rd12937, %rd12860, %rd12936;
	xor.b64  	%rd12938, %rd12937, %rd12863;
	xor.b64  	%rd12939, %rd12866, %rd19825;
	xor.b64  	%rd12940, %rd12881, %rd12939;
	xor.b64  	%rd12941, %rd12940, %rd12896;
	xor.b64  	%rd12942, %rd12941, %rd12911;
	xor.b64  	%rd12943, %rd12942, %rd12926;
	xor.b64  	%rd12944, %rd12884, %rd12869;
	xor.b64  	%rd12945, %rd12944, %rd12899;
	xor.b64  	%rd12946, %rd12945, %rd12914;
	xor.b64  	%rd12947, %rd12946, %rd12929;
	xor.b64  	%rd12948, %rd12887, %rd12872;
	xor.b64  	%rd12949, %rd12948, %rd12902;
	xor.b64  	%rd12950, %rd12949, %rd12917;
	xor.b64  	%rd12951, %rd12950, %rd12932;
	xor.b64  	%rd12952, %rd12890, %rd12875;
	xor.b64  	%rd12953, %rd12952, %rd12905;
	xor.b64  	%rd12954, %rd12953, %rd12920;
	xor.b64  	%rd12955, %rd12954, %rd12935;
	xor.b64  	%rd12956, %rd12893, %rd12878;
	xor.b64  	%rd12957, %rd12956, %rd12908;
	xor.b64  	%rd12958, %rd12957, %rd12923;
	xor.b64  	%rd12959, %rd12958, %rd12938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9131}, %rd12947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9132,%dummy}, %rd12947;
	}
	shf.l.wrap.b32 	%r9133, %r9132, %r9131, 1;
	shf.l.wrap.b32 	%r9134, %r9131, %r9132, 1;
	mov.b64 	%rd12960, {%r9134, %r9133};
	xor.b64  	%rd12961, %rd12959, %rd12960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9135}, %rd12951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9136,%dummy}, %rd12951;
	}
	shf.l.wrap.b32 	%r9137, %r9136, %r9135, 1;
	shf.l.wrap.b32 	%r9138, %r9135, %r9136, 1;
	mov.b64 	%rd12962, {%r9138, %r9137};
	xor.b64  	%rd12963, %rd12962, %rd12943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9139}, %rd12955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9140,%dummy}, %rd12955;
	}
	shf.l.wrap.b32 	%r9141, %r9140, %r9139, 1;
	shf.l.wrap.b32 	%r9142, %r9139, %r9140, 1;
	mov.b64 	%rd12964, {%r9142, %r9141};
	xor.b64  	%rd12965, %rd12964, %rd12947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9143}, %rd12959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9144,%dummy}, %rd12959;
	}
	shf.l.wrap.b32 	%r9145, %r9144, %r9143, 1;
	shf.l.wrap.b32 	%r9146, %r9143, %r9144, 1;
	mov.b64 	%rd12966, {%r9146, %r9145};
	xor.b64  	%rd12967, %rd12966, %rd12951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9147}, %rd12943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9148,%dummy}, %rd12943;
	}
	shf.l.wrap.b32 	%r9149, %r9148, %r9147, 1;
	shf.l.wrap.b32 	%r9150, %r9147, %r9148, 1;
	mov.b64 	%rd12968, {%r9150, %r9149};
	xor.b64  	%rd12969, %rd12955, %rd12968;
	xor.b64  	%rd12970, %rd12961, %rd12939;
	xor.b64  	%rd12971, %rd12963, %rd12869;
	xor.b64  	%rd12972, %rd12965, %rd12872;
	xor.b64  	%rd12973, %rd12967, %rd12875;
	xor.b64  	%rd12974, %rd12969, %rd12878;
	xor.b64  	%rd12975, %rd12961, %rd12881;
	xor.b64  	%rd12976, %rd12963, %rd12884;
	xor.b64  	%rd12977, %rd12965, %rd12887;
	xor.b64  	%rd12978, %rd12967, %rd12890;
	xor.b64  	%rd12979, %rd12969, %rd12893;
	xor.b64  	%rd12980, %rd12961, %rd12896;
	xor.b64  	%rd12981, %rd12963, %rd12899;
	xor.b64  	%rd12982, %rd12965, %rd12902;
	xor.b64  	%rd12983, %rd12967, %rd12905;
	xor.b64  	%rd12984, %rd12969, %rd12908;
	xor.b64  	%rd12985, %rd12961, %rd12911;
	xor.b64  	%rd12986, %rd12963, %rd12914;
	xor.b64  	%rd12987, %rd12965, %rd12917;
	xor.b64  	%rd12988, %rd12967, %rd12920;
	xor.b64  	%rd12989, %rd12969, %rd12923;
	xor.b64  	%rd12990, %rd12961, %rd12926;
	xor.b64  	%rd12991, %rd12963, %rd12929;
	xor.b64  	%rd12992, %rd12965, %rd12932;
	xor.b64  	%rd12993, %rd12967, %rd12935;
	xor.b64  	%rd12994, %rd12969, %rd12938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9151,%dummy}, %rd12976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9152}, %rd12976;
	}
	shf.r.wrap.b32 	%r9153, %r9152, %r9151, 20;
	shf.r.wrap.b32 	%r9154, %r9151, %r9152, 20;
	mov.b64 	%rd12995, {%r9154, %r9153};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9155,%dummy}, %rd12982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9156}, %rd12982;
	}
	shf.r.wrap.b32 	%r9157, %r9156, %r9155, 21;
	shf.r.wrap.b32 	%r9158, %r9155, %r9156, 21;
	mov.b64 	%rd12996, {%r9158, %r9157};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9159}, %rd12988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9160,%dummy}, %rd12988;
	}
	shf.l.wrap.b32 	%r9161, %r9160, %r9159, 21;
	shf.l.wrap.b32 	%r9162, %r9159, %r9160, 21;
	mov.b64 	%rd12997, {%r9162, %r9161};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9163}, %rd12994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9164,%dummy}, %rd12994;
	}
	shf.l.wrap.b32 	%r9165, %r9164, %r9163, 14;
	shf.l.wrap.b32 	%r9166, %r9163, %r9164, 14;
	mov.b64 	%rd12998, {%r9166, %r9165};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9167}, %rd12973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9168,%dummy}, %rd12973;
	}
	shf.l.wrap.b32 	%r9169, %r9168, %r9167, 28;
	shf.l.wrap.b32 	%r9170, %r9167, %r9168, 28;
	mov.b64 	%rd12999, {%r9170, %r9169};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9171}, %rd12979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9172,%dummy}, %rd12979;
	}
	shf.l.wrap.b32 	%r9173, %r9172, %r9171, 20;
	shf.l.wrap.b32 	%r9174, %r9171, %r9172, 20;
	mov.b64 	%rd13000, {%r9174, %r9173};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9175}, %rd12980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9176,%dummy}, %rd12980;
	}
	shf.l.wrap.b32 	%r9177, %r9176, %r9175, 3;
	shf.l.wrap.b32 	%r9178, %r9175, %r9176, 3;
	mov.b64 	%rd13001, {%r9178, %r9177};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9179,%dummy}, %rd12986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9180}, %rd12986;
	}
	shf.r.wrap.b32 	%r9181, %r9180, %r9179, 19;
	shf.r.wrap.b32 	%r9182, %r9179, %r9180, 19;
	mov.b64 	%rd13002, {%r9182, %r9181};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9183,%dummy}, %rd12992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9184}, %rd12992;
	}
	shf.r.wrap.b32 	%r9185, %r9184, %r9183, 3;
	shf.r.wrap.b32 	%r9186, %r9183, %r9184, 3;
	mov.b64 	%rd13003, {%r9186, %r9185};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9187}, %rd12971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9188,%dummy}, %rd12971;
	}
	shf.l.wrap.b32 	%r9189, %r9188, %r9187, 1;
	shf.l.wrap.b32 	%r9190, %r9187, %r9188, 1;
	mov.b64 	%rd13004, {%r9190, %r9189};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9191}, %rd12977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9192,%dummy}, %rd12977;
	}
	shf.l.wrap.b32 	%r9193, %r9192, %r9191, 6;
	shf.l.wrap.b32 	%r9194, %r9191, %r9192, 6;
	mov.b64 	%rd13005, {%r9194, %r9193};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9195}, %rd12983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9196,%dummy}, %rd12983;
	}
	shf.l.wrap.b32 	%r9197, %r9196, %r9195, 25;
	shf.l.wrap.b32 	%r9198, %r9195, %r9196, 25;
	mov.b64 	%rd13006, {%r9198, %r9197};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9199}, %rd12989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9200,%dummy}, %rd12989;
	}
	shf.l.wrap.b32 	%r9201, %r9200, %r9199, 8;
	shf.l.wrap.b32 	%r9202, %r9199, %r9200, 8;
	mov.b64 	%rd13007, {%r9202, %r9201};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9203}, %rd12990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9204,%dummy}, %rd12990;
	}
	shf.l.wrap.b32 	%r9205, %r9204, %r9203, 18;
	shf.l.wrap.b32 	%r9206, %r9203, %r9204, 18;
	mov.b64 	%rd13008, {%r9206, %r9205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9207}, %rd12974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9208,%dummy}, %rd12974;
	}
	shf.l.wrap.b32 	%r9209, %r9208, %r9207, 27;
	shf.l.wrap.b32 	%r9210, %r9207, %r9208, 27;
	mov.b64 	%rd13009, {%r9210, %r9209};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9211,%dummy}, %rd12975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9212}, %rd12975;
	}
	shf.r.wrap.b32 	%r9213, %r9212, %r9211, 28;
	shf.r.wrap.b32 	%r9214, %r9211, %r9212, 28;
	mov.b64 	%rd13010, {%r9214, %r9213};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9215}, %rd12981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd12981;
	}
	shf.l.wrap.b32 	%r9217, %r9216, %r9215, 10;
	shf.l.wrap.b32 	%r9218, %r9215, %r9216, 10;
	mov.b64 	%rd13011, {%r9218, %r9217};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9219}, %rd12987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9220,%dummy}, %rd12987;
	}
	shf.l.wrap.b32 	%r9221, %r9220, %r9219, 15;
	shf.l.wrap.b32 	%r9222, %r9219, %r9220, 15;
	mov.b64 	%rd13012, {%r9222, %r9221};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9223,%dummy}, %rd12993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9224}, %rd12993;
	}
	shf.r.wrap.b32 	%r9225, %r9224, %r9223, 8;
	shf.r.wrap.b32 	%r9226, %r9223, %r9224, 8;
	mov.b64 	%rd13013, {%r9226, %r9225};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9227,%dummy}, %rd12972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9228}, %rd12972;
	}
	shf.r.wrap.b32 	%r9229, %r9228, %r9227, 2;
	shf.r.wrap.b32 	%r9230, %r9227, %r9228, 2;
	mov.b64 	%rd13014, {%r9230, %r9229};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9231,%dummy}, %rd12978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9232}, %rd12978;
	}
	shf.r.wrap.b32 	%r9233, %r9232, %r9231, 9;
	shf.r.wrap.b32 	%r9234, %r9231, %r9232, 9;
	mov.b64 	%rd13015, {%r9234, %r9233};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9235,%dummy}, %rd12984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9236}, %rd12984;
	}
	shf.r.wrap.b32 	%r9237, %r9236, %r9235, 25;
	shf.r.wrap.b32 	%r9238, %r9235, %r9236, 25;
	mov.b64 	%rd13016, {%r9238, %r9237};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9239,%dummy}, %rd12985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9240}, %rd12985;
	}
	shf.r.wrap.b32 	%r9241, %r9240, %r9239, 23;
	shf.r.wrap.b32 	%r9242, %r9239, %r9240, 23;
	mov.b64 	%rd13017, {%r9242, %r9241};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9243}, %rd12991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9244,%dummy}, %rd12991;
	}
	shf.l.wrap.b32 	%r9245, %r9244, %r9243, 2;
	shf.l.wrap.b32 	%r9246, %r9243, %r9244, 2;
	mov.b64 	%rd13018, {%r9246, %r9245};
	not.b64 	%rd13019, %rd12995;
	and.b64  	%rd13020, %rd12996, %rd13019;
	xor.b64  	%rd13021, %rd13020, %rd12970;
	not.b64 	%rd13022, %rd12996;
	and.b64  	%rd13023, %rd12997, %rd13022;
	xor.b64  	%rd13024, %rd13023, %rd12995;
	not.b64 	%rd13025, %rd12997;
	and.b64  	%rd13026, %rd12998, %rd13025;
	xor.b64  	%rd13027, %rd13026, %rd12996;
	not.b64 	%rd13028, %rd12998;
	and.b64  	%rd13029, %rd12970, %rd13028;
	xor.b64  	%rd13030, %rd13029, %rd12997;
	not.b64 	%rd13031, %rd12970;
	and.b64  	%rd13032, %rd12995, %rd13031;
	xor.b64  	%rd13033, %rd13032, %rd12998;
	not.b64 	%rd13034, %rd13000;
	and.b64  	%rd13035, %rd13001, %rd13034;
	xor.b64  	%rd13036, %rd13035, %rd12999;
	not.b64 	%rd13037, %rd13001;
	and.b64  	%rd13038, %rd13002, %rd13037;
	xor.b64  	%rd13039, %rd13038, %rd13000;
	not.b64 	%rd13040, %rd13002;
	and.b64  	%rd13041, %rd13003, %rd13040;
	xor.b64  	%rd13042, %rd13041, %rd13001;
	not.b64 	%rd13043, %rd13003;
	and.b64  	%rd13044, %rd12999, %rd13043;
	xor.b64  	%rd13045, %rd13044, %rd13002;
	not.b64 	%rd13046, %rd12999;
	and.b64  	%rd13047, %rd13000, %rd13046;
	xor.b64  	%rd13048, %rd13047, %rd13003;
	not.b64 	%rd13049, %rd13005;
	and.b64  	%rd13050, %rd13006, %rd13049;
	xor.b64  	%rd13051, %rd13050, %rd13004;
	not.b64 	%rd13052, %rd13006;
	and.b64  	%rd13053, %rd13007, %rd13052;
	xor.b64  	%rd13054, %rd13053, %rd13005;
	not.b64 	%rd13055, %rd13007;
	and.b64  	%rd13056, %rd13008, %rd13055;
	xor.b64  	%rd13057, %rd13056, %rd13006;
	not.b64 	%rd13058, %rd13008;
	and.b64  	%rd13059, %rd13004, %rd13058;
	xor.b64  	%rd13060, %rd13059, %rd13007;
	not.b64 	%rd13061, %rd13004;
	and.b64  	%rd13062, %rd13005, %rd13061;
	xor.b64  	%rd13063, %rd13062, %rd13008;
	not.b64 	%rd13064, %rd13010;
	and.b64  	%rd13065, %rd13011, %rd13064;
	xor.b64  	%rd13066, %rd13065, %rd13009;
	not.b64 	%rd13067, %rd13011;
	and.b64  	%rd13068, %rd13012, %rd13067;
	xor.b64  	%rd13069, %rd13068, %rd13010;
	not.b64 	%rd13070, %rd13012;
	and.b64  	%rd13071, %rd13013, %rd13070;
	xor.b64  	%rd13072, %rd13071, %rd13011;
	not.b64 	%rd13073, %rd13013;
	and.b64  	%rd13074, %rd13009, %rd13073;
	xor.b64  	%rd13075, %rd13074, %rd13012;
	not.b64 	%rd13076, %rd13009;
	and.b64  	%rd13077, %rd13010, %rd13076;
	xor.b64  	%rd13078, %rd13077, %rd13013;
	not.b64 	%rd13079, %rd13015;
	and.b64  	%rd13080, %rd13016, %rd13079;
	xor.b64  	%rd13081, %rd13080, %rd13014;
	not.b64 	%rd13082, %rd13016;
	and.b64  	%rd13083, %rd13017, %rd13082;
	xor.b64  	%rd13084, %rd13083, %rd13015;
	not.b64 	%rd13085, %rd13017;
	and.b64  	%rd13086, %rd13018, %rd13085;
	xor.b64  	%rd13087, %rd13086, %rd13016;
	not.b64 	%rd13088, %rd13018;
	and.b64  	%rd13089, %rd13014, %rd13088;
	xor.b64  	%rd13090, %rd13089, %rd13017;
	not.b64 	%rd13091, %rd13014;
	and.b64  	%rd13092, %rd13015, %rd13091;
	xor.b64  	%rd13093, %rd13092, %rd13018;
	xor.b64  	%rd13094, %rd13021, %rd22;
	xor.b64  	%rd13095, %rd13036, %rd13094;
	xor.b64  	%rd13096, %rd13095, %rd13051;
	xor.b64  	%rd13097, %rd13096, %rd13066;
	xor.b64  	%rd13098, %rd13097, %rd13081;
	xor.b64  	%rd13099, %rd13039, %rd13024;
	xor.b64  	%rd13100, %rd13099, %rd13054;
	xor.b64  	%rd13101, %rd13100, %rd13069;
	xor.b64  	%rd13102, %rd13101, %rd13084;
	xor.b64  	%rd13103, %rd13042, %rd13027;
	xor.b64  	%rd13104, %rd13103, %rd13057;
	xor.b64  	%rd13105, %rd13104, %rd13072;
	xor.b64  	%rd13106, %rd13105, %rd13087;
	xor.b64  	%rd13107, %rd13045, %rd13030;
	xor.b64  	%rd13108, %rd13107, %rd13060;
	xor.b64  	%rd13109, %rd13108, %rd13075;
	xor.b64  	%rd13110, %rd13109, %rd13090;
	xor.b64  	%rd13111, %rd13048, %rd13033;
	xor.b64  	%rd13112, %rd13111, %rd13063;
	xor.b64  	%rd13113, %rd13112, %rd13078;
	xor.b64  	%rd13114, %rd13113, %rd13093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9247}, %rd13102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9248,%dummy}, %rd13102;
	}
	shf.l.wrap.b32 	%r9249, %r9248, %r9247, 1;
	shf.l.wrap.b32 	%r9250, %r9247, %r9248, 1;
	mov.b64 	%rd13115, {%r9250, %r9249};
	xor.b64  	%rd13116, %rd13114, %rd13115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9251}, %rd13106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9252,%dummy}, %rd13106;
	}
	shf.l.wrap.b32 	%r9253, %r9252, %r9251, 1;
	shf.l.wrap.b32 	%r9254, %r9251, %r9252, 1;
	mov.b64 	%rd13117, {%r9254, %r9253};
	xor.b64  	%rd13118, %rd13117, %rd13098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9255}, %rd13110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9256,%dummy}, %rd13110;
	}
	shf.l.wrap.b32 	%r9257, %r9256, %r9255, 1;
	shf.l.wrap.b32 	%r9258, %r9255, %r9256, 1;
	mov.b64 	%rd13119, {%r9258, %r9257};
	xor.b64  	%rd13120, %rd13119, %rd13102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9259}, %rd13114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9260,%dummy}, %rd13114;
	}
	shf.l.wrap.b32 	%r9261, %r9260, %r9259, 1;
	shf.l.wrap.b32 	%r9262, %r9259, %r9260, 1;
	mov.b64 	%rd13121, {%r9262, %r9261};
	xor.b64  	%rd13122, %rd13121, %rd13106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9263}, %rd13098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9264,%dummy}, %rd13098;
	}
	shf.l.wrap.b32 	%r9265, %r9264, %r9263, 1;
	shf.l.wrap.b32 	%r9266, %r9263, %r9264, 1;
	mov.b64 	%rd13123, {%r9266, %r9265};
	xor.b64  	%rd13124, %rd13110, %rd13123;
	xor.b64  	%rd13125, %rd13116, %rd13094;
	xor.b64  	%rd13126, %rd13118, %rd13024;
	xor.b64  	%rd13127, %rd13120, %rd13027;
	xor.b64  	%rd13128, %rd13122, %rd13030;
	xor.b64  	%rd13129, %rd13124, %rd13033;
	xor.b64  	%rd13130, %rd13116, %rd13036;
	xor.b64  	%rd13131, %rd13118, %rd13039;
	xor.b64  	%rd13132, %rd13120, %rd13042;
	xor.b64  	%rd13133, %rd13122, %rd13045;
	xor.b64  	%rd13134, %rd13124, %rd13048;
	xor.b64  	%rd13135, %rd13116, %rd13051;
	xor.b64  	%rd13136, %rd13118, %rd13054;
	xor.b64  	%rd13137, %rd13120, %rd13057;
	xor.b64  	%rd13138, %rd13122, %rd13060;
	xor.b64  	%rd13139, %rd13124, %rd13063;
	xor.b64  	%rd13140, %rd13116, %rd13066;
	xor.b64  	%rd13141, %rd13118, %rd13069;
	xor.b64  	%rd13142, %rd13120, %rd13072;
	xor.b64  	%rd13143, %rd13122, %rd13075;
	xor.b64  	%rd13144, %rd13124, %rd13078;
	xor.b64  	%rd13145, %rd13116, %rd13081;
	xor.b64  	%rd13146, %rd13118, %rd13084;
	xor.b64  	%rd13147, %rd13120, %rd13087;
	xor.b64  	%rd13148, %rd13122, %rd13090;
	xor.b64  	%rd13149, %rd13124, %rd13093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9267,%dummy}, %rd13131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9268}, %rd13131;
	}
	shf.r.wrap.b32 	%r9269, %r9268, %r9267, 20;
	shf.r.wrap.b32 	%r9270, %r9267, %r9268, 20;
	mov.b64 	%rd13150, {%r9270, %r9269};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9271,%dummy}, %rd13137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9272}, %rd13137;
	}
	shf.r.wrap.b32 	%r9273, %r9272, %r9271, 21;
	shf.r.wrap.b32 	%r9274, %r9271, %r9272, 21;
	mov.b64 	%rd13151, {%r9274, %r9273};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9275}, %rd13143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9276,%dummy}, %rd13143;
	}
	shf.l.wrap.b32 	%r9277, %r9276, %r9275, 21;
	shf.l.wrap.b32 	%r9278, %r9275, %r9276, 21;
	mov.b64 	%rd13152, {%r9278, %r9277};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9279}, %rd13149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9280,%dummy}, %rd13149;
	}
	shf.l.wrap.b32 	%r9281, %r9280, %r9279, 14;
	shf.l.wrap.b32 	%r9282, %r9279, %r9280, 14;
	mov.b64 	%rd13153, {%r9282, %r9281};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9283}, %rd13128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9284,%dummy}, %rd13128;
	}
	shf.l.wrap.b32 	%r9285, %r9284, %r9283, 28;
	shf.l.wrap.b32 	%r9286, %r9283, %r9284, 28;
	mov.b64 	%rd13154, {%r9286, %r9285};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9287}, %rd13134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9288,%dummy}, %rd13134;
	}
	shf.l.wrap.b32 	%r9289, %r9288, %r9287, 20;
	shf.l.wrap.b32 	%r9290, %r9287, %r9288, 20;
	mov.b64 	%rd13155, {%r9290, %r9289};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9291}, %rd13135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9292,%dummy}, %rd13135;
	}
	shf.l.wrap.b32 	%r9293, %r9292, %r9291, 3;
	shf.l.wrap.b32 	%r9294, %r9291, %r9292, 3;
	mov.b64 	%rd13156, {%r9294, %r9293};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9295,%dummy}, %rd13141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9296}, %rd13141;
	}
	shf.r.wrap.b32 	%r9297, %r9296, %r9295, 19;
	shf.r.wrap.b32 	%r9298, %r9295, %r9296, 19;
	mov.b64 	%rd13157, {%r9298, %r9297};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9299,%dummy}, %rd13147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9300}, %rd13147;
	}
	shf.r.wrap.b32 	%r9301, %r9300, %r9299, 3;
	shf.r.wrap.b32 	%r9302, %r9299, %r9300, 3;
	mov.b64 	%rd13158, {%r9302, %r9301};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9303}, %rd13126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9304,%dummy}, %rd13126;
	}
	shf.l.wrap.b32 	%r9305, %r9304, %r9303, 1;
	shf.l.wrap.b32 	%r9306, %r9303, %r9304, 1;
	mov.b64 	%rd13159, {%r9306, %r9305};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9307}, %rd13132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9308,%dummy}, %rd13132;
	}
	shf.l.wrap.b32 	%r9309, %r9308, %r9307, 6;
	shf.l.wrap.b32 	%r9310, %r9307, %r9308, 6;
	mov.b64 	%rd13160, {%r9310, %r9309};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9311}, %rd13138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9312,%dummy}, %rd13138;
	}
	shf.l.wrap.b32 	%r9313, %r9312, %r9311, 25;
	shf.l.wrap.b32 	%r9314, %r9311, %r9312, 25;
	mov.b64 	%rd13161, {%r9314, %r9313};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9315}, %rd13144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9316,%dummy}, %rd13144;
	}
	shf.l.wrap.b32 	%r9317, %r9316, %r9315, 8;
	shf.l.wrap.b32 	%r9318, %r9315, %r9316, 8;
	mov.b64 	%rd13162, {%r9318, %r9317};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9319}, %rd13145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9320,%dummy}, %rd13145;
	}
	shf.l.wrap.b32 	%r9321, %r9320, %r9319, 18;
	shf.l.wrap.b32 	%r9322, %r9319, %r9320, 18;
	mov.b64 	%rd13163, {%r9322, %r9321};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9323}, %rd13129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9324,%dummy}, %rd13129;
	}
	shf.l.wrap.b32 	%r9325, %r9324, %r9323, 27;
	shf.l.wrap.b32 	%r9326, %r9323, %r9324, 27;
	mov.b64 	%rd13164, {%r9326, %r9325};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9327,%dummy}, %rd13130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9328}, %rd13130;
	}
	shf.r.wrap.b32 	%r9329, %r9328, %r9327, 28;
	shf.r.wrap.b32 	%r9330, %r9327, %r9328, 28;
	mov.b64 	%rd13165, {%r9330, %r9329};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9331}, %rd13136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9332,%dummy}, %rd13136;
	}
	shf.l.wrap.b32 	%r9333, %r9332, %r9331, 10;
	shf.l.wrap.b32 	%r9334, %r9331, %r9332, 10;
	mov.b64 	%rd13166, {%r9334, %r9333};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9335}, %rd13142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9336,%dummy}, %rd13142;
	}
	shf.l.wrap.b32 	%r9337, %r9336, %r9335, 15;
	shf.l.wrap.b32 	%r9338, %r9335, %r9336, 15;
	mov.b64 	%rd13167, {%r9338, %r9337};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9339,%dummy}, %rd13148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9340}, %rd13148;
	}
	shf.r.wrap.b32 	%r9341, %r9340, %r9339, 8;
	shf.r.wrap.b32 	%r9342, %r9339, %r9340, 8;
	mov.b64 	%rd13168, {%r9342, %r9341};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9343,%dummy}, %rd13127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9344}, %rd13127;
	}
	shf.r.wrap.b32 	%r9345, %r9344, %r9343, 2;
	shf.r.wrap.b32 	%r9346, %r9343, %r9344, 2;
	mov.b64 	%rd13169, {%r9346, %r9345};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9347,%dummy}, %rd13133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9348}, %rd13133;
	}
	shf.r.wrap.b32 	%r9349, %r9348, %r9347, 9;
	shf.r.wrap.b32 	%r9350, %r9347, %r9348, 9;
	mov.b64 	%rd13170, {%r9350, %r9349};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9351,%dummy}, %rd13139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9352}, %rd13139;
	}
	shf.r.wrap.b32 	%r9353, %r9352, %r9351, 25;
	shf.r.wrap.b32 	%r9354, %r9351, %r9352, 25;
	mov.b64 	%rd13171, {%r9354, %r9353};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9355,%dummy}, %rd13140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9356}, %rd13140;
	}
	shf.r.wrap.b32 	%r9357, %r9356, %r9355, 23;
	shf.r.wrap.b32 	%r9358, %r9355, %r9356, 23;
	mov.b64 	%rd13172, {%r9358, %r9357};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9359}, %rd13146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9360,%dummy}, %rd13146;
	}
	shf.l.wrap.b32 	%r9361, %r9360, %r9359, 2;
	shf.l.wrap.b32 	%r9362, %r9359, %r9360, 2;
	mov.b64 	%rd13173, {%r9362, %r9361};
	not.b64 	%rd13174, %rd13150;
	and.b64  	%rd13175, %rd13151, %rd13174;
	xor.b64  	%rd13176, %rd13175, %rd13125;
	not.b64 	%rd13177, %rd13151;
	and.b64  	%rd13178, %rd13152, %rd13177;
	xor.b64  	%rd13179, %rd13178, %rd13150;
	not.b64 	%rd13180, %rd13152;
	and.b64  	%rd13181, %rd13153, %rd13180;
	xor.b64  	%rd13182, %rd13181, %rd13151;
	not.b64 	%rd13183, %rd13153;
	and.b64  	%rd13184, %rd13125, %rd13183;
	xor.b64  	%rd13185, %rd13184, %rd13152;
	not.b64 	%rd13186, %rd13125;
	and.b64  	%rd13187, %rd13150, %rd13186;
	xor.b64  	%rd13188, %rd13187, %rd13153;
	not.b64 	%rd13189, %rd13155;
	and.b64  	%rd13190, %rd13156, %rd13189;
	xor.b64  	%rd13191, %rd13190, %rd13154;
	not.b64 	%rd13192, %rd13156;
	and.b64  	%rd13193, %rd13157, %rd13192;
	xor.b64  	%rd13194, %rd13193, %rd13155;
	not.b64 	%rd13195, %rd13157;
	and.b64  	%rd13196, %rd13158, %rd13195;
	xor.b64  	%rd13197, %rd13196, %rd13156;
	not.b64 	%rd13198, %rd13158;
	and.b64  	%rd13199, %rd13154, %rd13198;
	xor.b64  	%rd13200, %rd13199, %rd13157;
	not.b64 	%rd13201, %rd13154;
	and.b64  	%rd13202, %rd13155, %rd13201;
	xor.b64  	%rd13203, %rd13202, %rd13158;
	not.b64 	%rd13204, %rd13160;
	and.b64  	%rd13205, %rd13161, %rd13204;
	xor.b64  	%rd13206, %rd13205, %rd13159;
	not.b64 	%rd13207, %rd13161;
	and.b64  	%rd13208, %rd13162, %rd13207;
	xor.b64  	%rd13209, %rd13208, %rd13160;
	not.b64 	%rd13210, %rd13162;
	and.b64  	%rd13211, %rd13163, %rd13210;
	xor.b64  	%rd13212, %rd13211, %rd13161;
	not.b64 	%rd13213, %rd13163;
	and.b64  	%rd13214, %rd13159, %rd13213;
	xor.b64  	%rd13215, %rd13214, %rd13162;
	not.b64 	%rd13216, %rd13159;
	and.b64  	%rd13217, %rd13160, %rd13216;
	xor.b64  	%rd13218, %rd13217, %rd13163;
	not.b64 	%rd13219, %rd13165;
	and.b64  	%rd13220, %rd13166, %rd13219;
	xor.b64  	%rd13221, %rd13220, %rd13164;
	not.b64 	%rd13222, %rd13166;
	and.b64  	%rd13223, %rd13167, %rd13222;
	xor.b64  	%rd13224, %rd13223, %rd13165;
	not.b64 	%rd13225, %rd13167;
	and.b64  	%rd13226, %rd13168, %rd13225;
	xor.b64  	%rd13227, %rd13226, %rd13166;
	not.b64 	%rd13228, %rd13168;
	and.b64  	%rd13229, %rd13164, %rd13228;
	xor.b64  	%rd13230, %rd13229, %rd13167;
	not.b64 	%rd13231, %rd13164;
	and.b64  	%rd13232, %rd13165, %rd13231;
	xor.b64  	%rd13233, %rd13232, %rd13168;
	not.b64 	%rd13234, %rd13170;
	and.b64  	%rd13235, %rd13171, %rd13234;
	xor.b64  	%rd13236, %rd13235, %rd13169;
	not.b64 	%rd13237, %rd13171;
	and.b64  	%rd13238, %rd13172, %rd13237;
	xor.b64  	%rd13239, %rd13238, %rd13170;
	not.b64 	%rd13240, %rd13172;
	and.b64  	%rd13241, %rd13173, %rd13240;
	xor.b64  	%rd13242, %rd13241, %rd13171;
	not.b64 	%rd13243, %rd13173;
	and.b64  	%rd13244, %rd13169, %rd13243;
	xor.b64  	%rd13245, %rd13244, %rd13172;
	not.b64 	%rd13246, %rd13169;
	and.b64  	%rd13247, %rd13170, %rd13246;
	xor.b64  	%rd13248, %rd13247, %rd13173;
	xor.b64  	%rd13249, %rd13176, %rd23;
	xor.b64  	%rd13250, %rd13191, %rd13249;
	xor.b64  	%rd13251, %rd13250, %rd13206;
	xor.b64  	%rd13252, %rd13251, %rd13221;
	xor.b64  	%rd13253, %rd13252, %rd13236;
	xor.b64  	%rd13254, %rd13194, %rd13179;
	xor.b64  	%rd13255, %rd13254, %rd13209;
	xor.b64  	%rd13256, %rd13255, %rd13224;
	xor.b64  	%rd13257, %rd13256, %rd13239;
	xor.b64  	%rd13258, %rd13197, %rd13182;
	xor.b64  	%rd13259, %rd13258, %rd13212;
	xor.b64  	%rd13260, %rd13259, %rd13227;
	xor.b64  	%rd13261, %rd13260, %rd13242;
	xor.b64  	%rd13262, %rd13200, %rd13185;
	xor.b64  	%rd13263, %rd13262, %rd13215;
	xor.b64  	%rd13264, %rd13263, %rd13230;
	xor.b64  	%rd13265, %rd13264, %rd13245;
	xor.b64  	%rd13266, %rd13203, %rd13188;
	xor.b64  	%rd13267, %rd13266, %rd13218;
	xor.b64  	%rd13268, %rd13267, %rd13233;
	xor.b64  	%rd13269, %rd13268, %rd13248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9363}, %rd13257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9364,%dummy}, %rd13257;
	}
	shf.l.wrap.b32 	%r9365, %r9364, %r9363, 1;
	shf.l.wrap.b32 	%r9366, %r9363, %r9364, 1;
	mov.b64 	%rd13270, {%r9366, %r9365};
	xor.b64  	%rd13271, %rd13269, %rd13270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9367}, %rd13261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9368,%dummy}, %rd13261;
	}
	shf.l.wrap.b32 	%r9369, %r9368, %r9367, 1;
	shf.l.wrap.b32 	%r9370, %r9367, %r9368, 1;
	mov.b64 	%rd13272, {%r9370, %r9369};
	xor.b64  	%rd13273, %rd13272, %rd13253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9371}, %rd13265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9372,%dummy}, %rd13265;
	}
	shf.l.wrap.b32 	%r9373, %r9372, %r9371, 1;
	shf.l.wrap.b32 	%r9374, %r9371, %r9372, 1;
	mov.b64 	%rd13274, {%r9374, %r9373};
	xor.b64  	%rd13275, %rd13274, %rd13257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9375}, %rd13269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9376,%dummy}, %rd13269;
	}
	shf.l.wrap.b32 	%r9377, %r9376, %r9375, 1;
	shf.l.wrap.b32 	%r9378, %r9375, %r9376, 1;
	mov.b64 	%rd13276, {%r9378, %r9377};
	xor.b64  	%rd13277, %rd13276, %rd13261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9379}, %rd13253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9380,%dummy}, %rd13253;
	}
	shf.l.wrap.b32 	%r9381, %r9380, %r9379, 1;
	shf.l.wrap.b32 	%r9382, %r9379, %r9380, 1;
	mov.b64 	%rd13278, {%r9382, %r9381};
	xor.b64  	%rd13279, %rd13265, %rd13278;
	xor.b64  	%rd13280, %rd13271, %rd13249;
	xor.b64  	%rd13281, %rd13273, %rd13179;
	xor.b64  	%rd13282, %rd13275, %rd13182;
	xor.b64  	%rd13283, %rd13277, %rd13185;
	xor.b64  	%rd13284, %rd13279, %rd13188;
	xor.b64  	%rd13285, %rd13271, %rd13191;
	xor.b64  	%rd13286, %rd13273, %rd13194;
	xor.b64  	%rd13287, %rd13275, %rd13197;
	xor.b64  	%rd13288, %rd13277, %rd13200;
	xor.b64  	%rd13289, %rd13279, %rd13203;
	xor.b64  	%rd13290, %rd13271, %rd13206;
	xor.b64  	%rd13291, %rd13273, %rd13209;
	xor.b64  	%rd13292, %rd13275, %rd13212;
	xor.b64  	%rd13293, %rd13277, %rd13215;
	xor.b64  	%rd13294, %rd13279, %rd13218;
	xor.b64  	%rd13295, %rd13271, %rd13221;
	xor.b64  	%rd13296, %rd13273, %rd13224;
	xor.b64  	%rd13297, %rd13275, %rd13227;
	xor.b64  	%rd13298, %rd13277, %rd13230;
	xor.b64  	%rd13299, %rd13279, %rd13233;
	xor.b64  	%rd13300, %rd13271, %rd13236;
	xor.b64  	%rd13301, %rd13273, %rd13239;
	xor.b64  	%rd13302, %rd13275, %rd13242;
	xor.b64  	%rd13303, %rd13277, %rd13245;
	xor.b64  	%rd13304, %rd13279, %rd13248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9383,%dummy}, %rd13286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9384}, %rd13286;
	}
	shf.r.wrap.b32 	%r9385, %r9384, %r9383, 20;
	shf.r.wrap.b32 	%r9386, %r9383, %r9384, 20;
	mov.b64 	%rd13305, {%r9386, %r9385};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9387,%dummy}, %rd13292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9388}, %rd13292;
	}
	shf.r.wrap.b32 	%r9389, %r9388, %r9387, 21;
	shf.r.wrap.b32 	%r9390, %r9387, %r9388, 21;
	mov.b64 	%rd13306, {%r9390, %r9389};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9391}, %rd13298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9392,%dummy}, %rd13298;
	}
	shf.l.wrap.b32 	%r9393, %r9392, %r9391, 21;
	shf.l.wrap.b32 	%r9394, %r9391, %r9392, 21;
	mov.b64 	%rd13307, {%r9394, %r9393};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9395}, %rd13304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9396,%dummy}, %rd13304;
	}
	shf.l.wrap.b32 	%r9397, %r9396, %r9395, 14;
	shf.l.wrap.b32 	%r9398, %r9395, %r9396, 14;
	mov.b64 	%rd13308, {%r9398, %r9397};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9399}, %rd13283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9400,%dummy}, %rd13283;
	}
	shf.l.wrap.b32 	%r9401, %r9400, %r9399, 28;
	shf.l.wrap.b32 	%r9402, %r9399, %r9400, 28;
	mov.b64 	%rd13309, {%r9402, %r9401};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9403}, %rd13289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9404,%dummy}, %rd13289;
	}
	shf.l.wrap.b32 	%r9405, %r9404, %r9403, 20;
	shf.l.wrap.b32 	%r9406, %r9403, %r9404, 20;
	mov.b64 	%rd13310, {%r9406, %r9405};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9407}, %rd13290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9408,%dummy}, %rd13290;
	}
	shf.l.wrap.b32 	%r9409, %r9408, %r9407, 3;
	shf.l.wrap.b32 	%r9410, %r9407, %r9408, 3;
	mov.b64 	%rd13311, {%r9410, %r9409};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9411,%dummy}, %rd13296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9412}, %rd13296;
	}
	shf.r.wrap.b32 	%r9413, %r9412, %r9411, 19;
	shf.r.wrap.b32 	%r9414, %r9411, %r9412, 19;
	mov.b64 	%rd13312, {%r9414, %r9413};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9415,%dummy}, %rd13302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9416}, %rd13302;
	}
	shf.r.wrap.b32 	%r9417, %r9416, %r9415, 3;
	shf.r.wrap.b32 	%r9418, %r9415, %r9416, 3;
	mov.b64 	%rd13313, {%r9418, %r9417};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9419}, %rd13281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9420,%dummy}, %rd13281;
	}
	shf.l.wrap.b32 	%r9421, %r9420, %r9419, 1;
	shf.l.wrap.b32 	%r9422, %r9419, %r9420, 1;
	mov.b64 	%rd13314, {%r9422, %r9421};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9423}, %rd13287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9424,%dummy}, %rd13287;
	}
	shf.l.wrap.b32 	%r9425, %r9424, %r9423, 6;
	shf.l.wrap.b32 	%r9426, %r9423, %r9424, 6;
	mov.b64 	%rd13315, {%r9426, %r9425};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9427}, %rd13293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9428,%dummy}, %rd13293;
	}
	shf.l.wrap.b32 	%r9429, %r9428, %r9427, 25;
	shf.l.wrap.b32 	%r9430, %r9427, %r9428, 25;
	mov.b64 	%rd13316, {%r9430, %r9429};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9431}, %rd13299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9432,%dummy}, %rd13299;
	}
	shf.l.wrap.b32 	%r9433, %r9432, %r9431, 8;
	shf.l.wrap.b32 	%r9434, %r9431, %r9432, 8;
	mov.b64 	%rd13317, {%r9434, %r9433};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9435}, %rd13300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9436,%dummy}, %rd13300;
	}
	shf.l.wrap.b32 	%r9437, %r9436, %r9435, 18;
	shf.l.wrap.b32 	%r9438, %r9435, %r9436, 18;
	mov.b64 	%rd13318, {%r9438, %r9437};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9439}, %rd13284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9440,%dummy}, %rd13284;
	}
	shf.l.wrap.b32 	%r9441, %r9440, %r9439, 27;
	shf.l.wrap.b32 	%r9442, %r9439, %r9440, 27;
	mov.b64 	%rd13319, {%r9442, %r9441};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9443,%dummy}, %rd13285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9444}, %rd13285;
	}
	shf.r.wrap.b32 	%r9445, %r9444, %r9443, 28;
	shf.r.wrap.b32 	%r9446, %r9443, %r9444, 28;
	mov.b64 	%rd13320, {%r9446, %r9445};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9447}, %rd13291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9448,%dummy}, %rd13291;
	}
	shf.l.wrap.b32 	%r9449, %r9448, %r9447, 10;
	shf.l.wrap.b32 	%r9450, %r9447, %r9448, 10;
	mov.b64 	%rd13321, {%r9450, %r9449};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9451}, %rd13297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9452,%dummy}, %rd13297;
	}
	shf.l.wrap.b32 	%r9453, %r9452, %r9451, 15;
	shf.l.wrap.b32 	%r9454, %r9451, %r9452, 15;
	mov.b64 	%rd13322, {%r9454, %r9453};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9455,%dummy}, %rd13303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9456}, %rd13303;
	}
	shf.r.wrap.b32 	%r9457, %r9456, %r9455, 8;
	shf.r.wrap.b32 	%r9458, %r9455, %r9456, 8;
	mov.b64 	%rd13323, {%r9458, %r9457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9459,%dummy}, %rd13282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9460}, %rd13282;
	}
	shf.r.wrap.b32 	%r9461, %r9460, %r9459, 2;
	shf.r.wrap.b32 	%r9462, %r9459, %r9460, 2;
	mov.b64 	%rd13324, {%r9462, %r9461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9463,%dummy}, %rd13288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9464}, %rd13288;
	}
	shf.r.wrap.b32 	%r9465, %r9464, %r9463, 9;
	shf.r.wrap.b32 	%r9466, %r9463, %r9464, 9;
	mov.b64 	%rd13325, {%r9466, %r9465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9467,%dummy}, %rd13294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9468}, %rd13294;
	}
	shf.r.wrap.b32 	%r9469, %r9468, %r9467, 25;
	shf.r.wrap.b32 	%r9470, %r9467, %r9468, 25;
	mov.b64 	%rd13326, {%r9470, %r9469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9471,%dummy}, %rd13295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9472}, %rd13295;
	}
	shf.r.wrap.b32 	%r9473, %r9472, %r9471, 23;
	shf.r.wrap.b32 	%r9474, %r9471, %r9472, 23;
	mov.b64 	%rd13327, {%r9474, %r9473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9475}, %rd13301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9476,%dummy}, %rd13301;
	}
	shf.l.wrap.b32 	%r9477, %r9476, %r9475, 2;
	shf.l.wrap.b32 	%r9478, %r9475, %r9476, 2;
	mov.b64 	%rd13328, {%r9478, %r9477};
	not.b64 	%rd13329, %rd13305;
	and.b64  	%rd13330, %rd13306, %rd13329;
	xor.b64  	%rd13331, %rd13330, %rd13280;
	not.b64 	%rd13332, %rd13306;
	and.b64  	%rd13333, %rd13307, %rd13332;
	xor.b64  	%rd13334, %rd13333, %rd13305;
	not.b64 	%rd13335, %rd13307;
	and.b64  	%rd13336, %rd13308, %rd13335;
	xor.b64  	%rd13337, %rd13336, %rd13306;
	not.b64 	%rd13338, %rd13308;
	and.b64  	%rd13339, %rd13280, %rd13338;
	xor.b64  	%rd13340, %rd13339, %rd13307;
	not.b64 	%rd13341, %rd13280;
	and.b64  	%rd13342, %rd13305, %rd13341;
	xor.b64  	%rd13343, %rd13342, %rd13308;
	not.b64 	%rd13344, %rd13310;
	and.b64  	%rd13345, %rd13311, %rd13344;
	xor.b64  	%rd13346, %rd13345, %rd13309;
	not.b64 	%rd13347, %rd13311;
	and.b64  	%rd13348, %rd13312, %rd13347;
	xor.b64  	%rd13349, %rd13348, %rd13310;
	not.b64 	%rd13350, %rd13312;
	and.b64  	%rd13351, %rd13313, %rd13350;
	xor.b64  	%rd13352, %rd13351, %rd13311;
	not.b64 	%rd13353, %rd13313;
	and.b64  	%rd13354, %rd13309, %rd13353;
	xor.b64  	%rd13355, %rd13354, %rd13312;
	not.b64 	%rd13356, %rd13309;
	and.b64  	%rd13357, %rd13310, %rd13356;
	xor.b64  	%rd13358, %rd13357, %rd13313;
	not.b64 	%rd13359, %rd13315;
	and.b64  	%rd13360, %rd13316, %rd13359;
	xor.b64  	%rd13361, %rd13360, %rd13314;
	not.b64 	%rd13362, %rd13316;
	and.b64  	%rd13363, %rd13317, %rd13362;
	xor.b64  	%rd13364, %rd13363, %rd13315;
	not.b64 	%rd13365, %rd13317;
	and.b64  	%rd13366, %rd13318, %rd13365;
	xor.b64  	%rd13367, %rd13366, %rd13316;
	not.b64 	%rd13368, %rd13318;
	and.b64  	%rd13369, %rd13314, %rd13368;
	xor.b64  	%rd13370, %rd13369, %rd13317;
	not.b64 	%rd13371, %rd13314;
	and.b64  	%rd13372, %rd13315, %rd13371;
	xor.b64  	%rd13373, %rd13372, %rd13318;
	not.b64 	%rd13374, %rd13320;
	and.b64  	%rd13375, %rd13321, %rd13374;
	xor.b64  	%rd13376, %rd13375, %rd13319;
	not.b64 	%rd13377, %rd13321;
	and.b64  	%rd13378, %rd13322, %rd13377;
	xor.b64  	%rd13379, %rd13378, %rd13320;
	not.b64 	%rd13380, %rd13322;
	and.b64  	%rd13381, %rd13323, %rd13380;
	xor.b64  	%rd13382, %rd13381, %rd13321;
	not.b64 	%rd13383, %rd13323;
	and.b64  	%rd13384, %rd13319, %rd13383;
	xor.b64  	%rd13385, %rd13384, %rd13322;
	not.b64 	%rd13386, %rd13319;
	and.b64  	%rd13387, %rd13320, %rd13386;
	xor.b64  	%rd13388, %rd13387, %rd13323;
	not.b64 	%rd13389, %rd13325;
	and.b64  	%rd13390, %rd13326, %rd13389;
	xor.b64  	%rd13391, %rd13390, %rd13324;
	not.b64 	%rd13392, %rd13326;
	and.b64  	%rd13393, %rd13327, %rd13392;
	xor.b64  	%rd13394, %rd13393, %rd13325;
	not.b64 	%rd13395, %rd13327;
	and.b64  	%rd13396, %rd13328, %rd13395;
	xor.b64  	%rd13397, %rd13396, %rd13326;
	not.b64 	%rd13398, %rd13328;
	and.b64  	%rd13399, %rd13324, %rd13398;
	xor.b64  	%rd13400, %rd13399, %rd13327;
	not.b64 	%rd13401, %rd13324;
	and.b64  	%rd13402, %rd13325, %rd13401;
	xor.b64  	%rd13403, %rd13402, %rd13328;
	xor.b64  	%rd13404, %rd13331, %rd24;
	xor.b64  	%rd13405, %rd13346, %rd13404;
	xor.b64  	%rd13406, %rd13405, %rd13361;
	xor.b64  	%rd13407, %rd13406, %rd13376;
	xor.b64  	%rd13408, %rd13407, %rd13391;
	xor.b64  	%rd13409, %rd13349, %rd13334;
	xor.b64  	%rd13410, %rd13409, %rd13364;
	xor.b64  	%rd13411, %rd13410, %rd13379;
	xor.b64  	%rd13412, %rd13411, %rd13394;
	xor.b64  	%rd13413, %rd13352, %rd13337;
	xor.b64  	%rd13414, %rd13413, %rd13367;
	xor.b64  	%rd13415, %rd13414, %rd13382;
	xor.b64  	%rd13416, %rd13415, %rd13397;
	xor.b64  	%rd13417, %rd13355, %rd13340;
	xor.b64  	%rd13418, %rd13417, %rd13370;
	xor.b64  	%rd13419, %rd13418, %rd13385;
	xor.b64  	%rd13420, %rd13419, %rd13400;
	xor.b64  	%rd13421, %rd13358, %rd13343;
	xor.b64  	%rd13422, %rd13421, %rd13373;
	xor.b64  	%rd13423, %rd13422, %rd13388;
	xor.b64  	%rd13424, %rd13423, %rd13403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9479}, %rd13412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9480,%dummy}, %rd13412;
	}
	shf.l.wrap.b32 	%r9481, %r9480, %r9479, 1;
	shf.l.wrap.b32 	%r9482, %r9479, %r9480, 1;
	mov.b64 	%rd13425, {%r9482, %r9481};
	xor.b64  	%rd13426, %rd13424, %rd13425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9483}, %rd13416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9484,%dummy}, %rd13416;
	}
	shf.l.wrap.b32 	%r9485, %r9484, %r9483, 1;
	shf.l.wrap.b32 	%r9486, %r9483, %r9484, 1;
	mov.b64 	%rd13427, {%r9486, %r9485};
	xor.b64  	%rd13428, %rd13427, %rd13408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9487}, %rd13420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9488,%dummy}, %rd13420;
	}
	shf.l.wrap.b32 	%r9489, %r9488, %r9487, 1;
	shf.l.wrap.b32 	%r9490, %r9487, %r9488, 1;
	mov.b64 	%rd13429, {%r9490, %r9489};
	xor.b64  	%rd13430, %rd13429, %rd13412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9491}, %rd13424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9492,%dummy}, %rd13424;
	}
	shf.l.wrap.b32 	%r9493, %r9492, %r9491, 1;
	shf.l.wrap.b32 	%r9494, %r9491, %r9492, 1;
	mov.b64 	%rd13431, {%r9494, %r9493};
	xor.b64  	%rd13432, %rd13431, %rd13416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9495}, %rd13408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9496,%dummy}, %rd13408;
	}
	shf.l.wrap.b32 	%r9497, %r9496, %r9495, 1;
	shf.l.wrap.b32 	%r9498, %r9495, %r9496, 1;
	mov.b64 	%rd13433, {%r9498, %r9497};
	xor.b64  	%rd13434, %rd13420, %rd13433;
	xor.b64  	%rd13435, %rd13426, %rd13404;
	xor.b64  	%rd13436, %rd13428, %rd13334;
	xor.b64  	%rd13437, %rd13430, %rd13337;
	xor.b64  	%rd13438, %rd13432, %rd13340;
	xor.b64  	%rd13439, %rd13434, %rd13343;
	xor.b64  	%rd13440, %rd13426, %rd13346;
	xor.b64  	%rd13441, %rd13428, %rd13349;
	xor.b64  	%rd13442, %rd13430, %rd13352;
	xor.b64  	%rd13443, %rd13432, %rd13355;
	xor.b64  	%rd13444, %rd13434, %rd13358;
	xor.b64  	%rd13445, %rd13426, %rd13361;
	xor.b64  	%rd13446, %rd13428, %rd13364;
	xor.b64  	%rd13447, %rd13430, %rd13367;
	xor.b64  	%rd13448, %rd13432, %rd13370;
	xor.b64  	%rd13449, %rd13434, %rd13373;
	xor.b64  	%rd13450, %rd13426, %rd13376;
	xor.b64  	%rd13451, %rd13428, %rd13379;
	xor.b64  	%rd13452, %rd13430, %rd13382;
	xor.b64  	%rd13453, %rd13432, %rd13385;
	xor.b64  	%rd13454, %rd13434, %rd13388;
	xor.b64  	%rd13455, %rd13426, %rd13391;
	xor.b64  	%rd13456, %rd13428, %rd13394;
	xor.b64  	%rd13457, %rd13430, %rd13397;
	xor.b64  	%rd13458, %rd13432, %rd13400;
	xor.b64  	%rd13459, %rd13434, %rd13403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9499,%dummy}, %rd13441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9500}, %rd13441;
	}
	shf.r.wrap.b32 	%r9501, %r9500, %r9499, 20;
	shf.r.wrap.b32 	%r9502, %r9499, %r9500, 20;
	mov.b64 	%rd13460, {%r9502, %r9501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9503,%dummy}, %rd13447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9504}, %rd13447;
	}
	shf.r.wrap.b32 	%r9505, %r9504, %r9503, 21;
	shf.r.wrap.b32 	%r9506, %r9503, %r9504, 21;
	mov.b64 	%rd13461, {%r9506, %r9505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9507}, %rd13453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9508,%dummy}, %rd13453;
	}
	shf.l.wrap.b32 	%r9509, %r9508, %r9507, 21;
	shf.l.wrap.b32 	%r9510, %r9507, %r9508, 21;
	mov.b64 	%rd13462, {%r9510, %r9509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9511}, %rd13459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9512,%dummy}, %rd13459;
	}
	shf.l.wrap.b32 	%r9513, %r9512, %r9511, 14;
	shf.l.wrap.b32 	%r9514, %r9511, %r9512, 14;
	mov.b64 	%rd13463, {%r9514, %r9513};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9515}, %rd13438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9516,%dummy}, %rd13438;
	}
	shf.l.wrap.b32 	%r9517, %r9516, %r9515, 28;
	shf.l.wrap.b32 	%r9518, %r9515, %r9516, 28;
	mov.b64 	%rd13464, {%r9518, %r9517};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9519}, %rd13444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9520,%dummy}, %rd13444;
	}
	shf.l.wrap.b32 	%r9521, %r9520, %r9519, 20;
	shf.l.wrap.b32 	%r9522, %r9519, %r9520, 20;
	mov.b64 	%rd13465, {%r9522, %r9521};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9523}, %rd13445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9524,%dummy}, %rd13445;
	}
	shf.l.wrap.b32 	%r9525, %r9524, %r9523, 3;
	shf.l.wrap.b32 	%r9526, %r9523, %r9524, 3;
	mov.b64 	%rd13466, {%r9526, %r9525};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9527,%dummy}, %rd13451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9528}, %rd13451;
	}
	shf.r.wrap.b32 	%r9529, %r9528, %r9527, 19;
	shf.r.wrap.b32 	%r9530, %r9527, %r9528, 19;
	mov.b64 	%rd13467, {%r9530, %r9529};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9531,%dummy}, %rd13457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9532}, %rd13457;
	}
	shf.r.wrap.b32 	%r9533, %r9532, %r9531, 3;
	shf.r.wrap.b32 	%r9534, %r9531, %r9532, 3;
	mov.b64 	%rd13468, {%r9534, %r9533};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9535}, %rd13436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9536,%dummy}, %rd13436;
	}
	shf.l.wrap.b32 	%r9537, %r9536, %r9535, 1;
	shf.l.wrap.b32 	%r9538, %r9535, %r9536, 1;
	mov.b64 	%rd13469, {%r9538, %r9537};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9539}, %rd13442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9540,%dummy}, %rd13442;
	}
	shf.l.wrap.b32 	%r9541, %r9540, %r9539, 6;
	shf.l.wrap.b32 	%r9542, %r9539, %r9540, 6;
	mov.b64 	%rd13470, {%r9542, %r9541};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9543}, %rd13448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9544,%dummy}, %rd13448;
	}
	shf.l.wrap.b32 	%r9545, %r9544, %r9543, 25;
	shf.l.wrap.b32 	%r9546, %r9543, %r9544, 25;
	mov.b64 	%rd13471, {%r9546, %r9545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9547}, %rd13454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9548,%dummy}, %rd13454;
	}
	shf.l.wrap.b32 	%r9549, %r9548, %r9547, 8;
	shf.l.wrap.b32 	%r9550, %r9547, %r9548, 8;
	mov.b64 	%rd13472, {%r9550, %r9549};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9551}, %rd13455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9552,%dummy}, %rd13455;
	}
	shf.l.wrap.b32 	%r9553, %r9552, %r9551, 18;
	shf.l.wrap.b32 	%r9554, %r9551, %r9552, 18;
	mov.b64 	%rd13473, {%r9554, %r9553};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9555}, %rd13439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9556,%dummy}, %rd13439;
	}
	shf.l.wrap.b32 	%r9557, %r9556, %r9555, 27;
	shf.l.wrap.b32 	%r9558, %r9555, %r9556, 27;
	mov.b64 	%rd13474, {%r9558, %r9557};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9559,%dummy}, %rd13440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9560}, %rd13440;
	}
	shf.r.wrap.b32 	%r9561, %r9560, %r9559, 28;
	shf.r.wrap.b32 	%r9562, %r9559, %r9560, 28;
	mov.b64 	%rd13475, {%r9562, %r9561};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9563}, %rd13446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9564,%dummy}, %rd13446;
	}
	shf.l.wrap.b32 	%r9565, %r9564, %r9563, 10;
	shf.l.wrap.b32 	%r9566, %r9563, %r9564, 10;
	mov.b64 	%rd13476, {%r9566, %r9565};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9567}, %rd13452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9568,%dummy}, %rd13452;
	}
	shf.l.wrap.b32 	%r9569, %r9568, %r9567, 15;
	shf.l.wrap.b32 	%r9570, %r9567, %r9568, 15;
	mov.b64 	%rd13477, {%r9570, %r9569};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9571,%dummy}, %rd13458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9572}, %rd13458;
	}
	shf.r.wrap.b32 	%r9573, %r9572, %r9571, 8;
	shf.r.wrap.b32 	%r9574, %r9571, %r9572, 8;
	mov.b64 	%rd13478, {%r9574, %r9573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9575,%dummy}, %rd13437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9576}, %rd13437;
	}
	shf.r.wrap.b32 	%r9577, %r9576, %r9575, 2;
	shf.r.wrap.b32 	%r9578, %r9575, %r9576, 2;
	mov.b64 	%rd13479, {%r9578, %r9577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9579,%dummy}, %rd13443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9580}, %rd13443;
	}
	shf.r.wrap.b32 	%r9581, %r9580, %r9579, 9;
	shf.r.wrap.b32 	%r9582, %r9579, %r9580, 9;
	mov.b64 	%rd13480, {%r9582, %r9581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9583,%dummy}, %rd13449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9584}, %rd13449;
	}
	shf.r.wrap.b32 	%r9585, %r9584, %r9583, 25;
	shf.r.wrap.b32 	%r9586, %r9583, %r9584, 25;
	mov.b64 	%rd13481, {%r9586, %r9585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9587,%dummy}, %rd13450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9588}, %rd13450;
	}
	shf.r.wrap.b32 	%r9589, %r9588, %r9587, 23;
	shf.r.wrap.b32 	%r9590, %r9587, %r9588, 23;
	mov.b64 	%rd13482, {%r9590, %r9589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9591}, %rd13456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9592,%dummy}, %rd13456;
	}
	shf.l.wrap.b32 	%r9593, %r9592, %r9591, 2;
	shf.l.wrap.b32 	%r9594, %r9591, %r9592, 2;
	mov.b64 	%rd13483, {%r9594, %r9593};
	not.b64 	%rd13484, %rd13460;
	and.b64  	%rd13485, %rd13461, %rd13484;
	xor.b64  	%rd13486, %rd13485, %rd13435;
	not.b64 	%rd13487, %rd13461;
	and.b64  	%rd13488, %rd13462, %rd13487;
	xor.b64  	%rd13489, %rd13488, %rd13460;
	not.b64 	%rd13490, %rd13462;
	and.b64  	%rd13491, %rd13463, %rd13490;
	xor.b64  	%rd13492, %rd13491, %rd13461;
	not.b64 	%rd13493, %rd13463;
	and.b64  	%rd13494, %rd13435, %rd13493;
	xor.b64  	%rd13495, %rd13494, %rd13462;
	not.b64 	%rd13496, %rd13435;
	and.b64  	%rd13497, %rd13460, %rd13496;
	xor.b64  	%rd13498, %rd13497, %rd13463;
	not.b64 	%rd13499, %rd13465;
	and.b64  	%rd13500, %rd13466, %rd13499;
	xor.b64  	%rd13501, %rd13500, %rd13464;
	not.b64 	%rd13502, %rd13466;
	and.b64  	%rd13503, %rd13467, %rd13502;
	xor.b64  	%rd13504, %rd13503, %rd13465;
	not.b64 	%rd13505, %rd13467;
	and.b64  	%rd13506, %rd13468, %rd13505;
	xor.b64  	%rd13507, %rd13506, %rd13466;
	not.b64 	%rd13508, %rd13468;
	and.b64  	%rd13509, %rd13464, %rd13508;
	xor.b64  	%rd13510, %rd13509, %rd13467;
	not.b64 	%rd13511, %rd13464;
	and.b64  	%rd13512, %rd13465, %rd13511;
	xor.b64  	%rd13513, %rd13512, %rd13468;
	not.b64 	%rd13514, %rd13470;
	and.b64  	%rd13515, %rd13471, %rd13514;
	xor.b64  	%rd13516, %rd13515, %rd13469;
	not.b64 	%rd13517, %rd13471;
	and.b64  	%rd13518, %rd13472, %rd13517;
	xor.b64  	%rd13519, %rd13518, %rd13470;
	not.b64 	%rd13520, %rd13472;
	and.b64  	%rd13521, %rd13473, %rd13520;
	xor.b64  	%rd13522, %rd13521, %rd13471;
	not.b64 	%rd13523, %rd13473;
	and.b64  	%rd13524, %rd13469, %rd13523;
	xor.b64  	%rd13525, %rd13524, %rd13472;
	not.b64 	%rd13526, %rd13469;
	and.b64  	%rd13527, %rd13470, %rd13526;
	xor.b64  	%rd13528, %rd13527, %rd13473;
	not.b64 	%rd13529, %rd13475;
	and.b64  	%rd13530, %rd13476, %rd13529;
	xor.b64  	%rd13531, %rd13530, %rd13474;
	not.b64 	%rd13532, %rd13476;
	and.b64  	%rd13533, %rd13477, %rd13532;
	xor.b64  	%rd13534, %rd13533, %rd13475;
	not.b64 	%rd13535, %rd13477;
	and.b64  	%rd13536, %rd13478, %rd13535;
	xor.b64  	%rd13537, %rd13536, %rd13476;
	not.b64 	%rd13538, %rd13478;
	and.b64  	%rd13539, %rd13474, %rd13538;
	xor.b64  	%rd13540, %rd13539, %rd13477;
	not.b64 	%rd13541, %rd13474;
	and.b64  	%rd13542, %rd13475, %rd13541;
	xor.b64  	%rd13543, %rd13542, %rd13478;
	not.b64 	%rd13544, %rd13480;
	and.b64  	%rd13545, %rd13481, %rd13544;
	xor.b64  	%rd13546, %rd13545, %rd13479;
	not.b64 	%rd13547, %rd13481;
	and.b64  	%rd13548, %rd13482, %rd13547;
	xor.b64  	%rd13549, %rd13548, %rd13480;
	not.b64 	%rd13550, %rd13482;
	and.b64  	%rd13551, %rd13483, %rd13550;
	xor.b64  	%rd13552, %rd13551, %rd13481;
	not.b64 	%rd13553, %rd13483;
	and.b64  	%rd13554, %rd13479, %rd13553;
	xor.b64  	%rd13555, %rd13554, %rd13482;
	not.b64 	%rd13556, %rd13479;
	and.b64  	%rd13557, %rd13480, %rd13556;
	xor.b64  	%rd13558, %rd13557, %rd13483;
	xor.b64  	%rd13559, %rd13486, %rd25;
	xor.b64  	%rd13560, %rd13501, %rd13559;
	xor.b64  	%rd13561, %rd13560, %rd13516;
	xor.b64  	%rd13562, %rd13561, %rd13531;
	xor.b64  	%rd13563, %rd13562, %rd13546;
	xor.b64  	%rd13564, %rd13504, %rd13489;
	xor.b64  	%rd13565, %rd13564, %rd13519;
	xor.b64  	%rd13566, %rd13565, %rd13534;
	xor.b64  	%rd13567, %rd13566, %rd13549;
	xor.b64  	%rd13568, %rd13507, %rd13492;
	xor.b64  	%rd13569, %rd13568, %rd13522;
	xor.b64  	%rd13570, %rd13569, %rd13537;
	xor.b64  	%rd13571, %rd13570, %rd13552;
	xor.b64  	%rd13572, %rd13510, %rd13495;
	xor.b64  	%rd13573, %rd13572, %rd13525;
	xor.b64  	%rd13574, %rd13573, %rd13540;
	xor.b64  	%rd13575, %rd13574, %rd13555;
	xor.b64  	%rd13576, %rd13513, %rd13498;
	xor.b64  	%rd13577, %rd13576, %rd13528;
	xor.b64  	%rd13578, %rd13577, %rd13543;
	xor.b64  	%rd13579, %rd13578, %rd13558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9595}, %rd13567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9596,%dummy}, %rd13567;
	}
	shf.l.wrap.b32 	%r9597, %r9596, %r9595, 1;
	shf.l.wrap.b32 	%r9598, %r9595, %r9596, 1;
	mov.b64 	%rd13580, {%r9598, %r9597};
	xor.b64  	%rd13581, %rd13579, %rd13580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9599}, %rd13571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9600,%dummy}, %rd13571;
	}
	shf.l.wrap.b32 	%r9601, %r9600, %r9599, 1;
	shf.l.wrap.b32 	%r9602, %r9599, %r9600, 1;
	mov.b64 	%rd13582, {%r9602, %r9601};
	xor.b64  	%rd13583, %rd13582, %rd13563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9603}, %rd13575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9604,%dummy}, %rd13575;
	}
	shf.l.wrap.b32 	%r9605, %r9604, %r9603, 1;
	shf.l.wrap.b32 	%r9606, %r9603, %r9604, 1;
	mov.b64 	%rd13584, {%r9606, %r9605};
	xor.b64  	%rd13585, %rd13584, %rd13567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9607}, %rd13579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9608,%dummy}, %rd13579;
	}
	shf.l.wrap.b32 	%r9609, %r9608, %r9607, 1;
	shf.l.wrap.b32 	%r9610, %r9607, %r9608, 1;
	mov.b64 	%rd13586, {%r9610, %r9609};
	xor.b64  	%rd13587, %rd13586, %rd13571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9611}, %rd13563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9612,%dummy}, %rd13563;
	}
	shf.l.wrap.b32 	%r9613, %r9612, %r9611, 1;
	shf.l.wrap.b32 	%r9614, %r9611, %r9612, 1;
	mov.b64 	%rd13588, {%r9614, %r9613};
	xor.b64  	%rd13589, %rd13575, %rd13588;
	xor.b64  	%rd13590, %rd13581, %rd13559;
	xor.b64  	%rd13591, %rd13583, %rd13489;
	xor.b64  	%rd13592, %rd13585, %rd13492;
	xor.b64  	%rd13593, %rd13587, %rd13495;
	xor.b64  	%rd13594, %rd13589, %rd13498;
	xor.b64  	%rd13595, %rd13581, %rd13501;
	xor.b64  	%rd13596, %rd13583, %rd13504;
	xor.b64  	%rd13597, %rd13585, %rd13507;
	xor.b64  	%rd13598, %rd13587, %rd13510;
	xor.b64  	%rd13599, %rd13589, %rd13513;
	xor.b64  	%rd13600, %rd13581, %rd13516;
	xor.b64  	%rd13601, %rd13583, %rd13519;
	xor.b64  	%rd13602, %rd13585, %rd13522;
	xor.b64  	%rd13603, %rd13587, %rd13525;
	xor.b64  	%rd13604, %rd13589, %rd13528;
	xor.b64  	%rd13605, %rd13581, %rd13531;
	xor.b64  	%rd13606, %rd13583, %rd13534;
	xor.b64  	%rd13607, %rd13585, %rd13537;
	xor.b64  	%rd13608, %rd13587, %rd13540;
	xor.b64  	%rd13609, %rd13589, %rd13543;
	xor.b64  	%rd13610, %rd13581, %rd13546;
	xor.b64  	%rd13611, %rd13583, %rd13549;
	xor.b64  	%rd13612, %rd13585, %rd13552;
	xor.b64  	%rd13613, %rd13587, %rd13555;
	xor.b64  	%rd13614, %rd13589, %rd13558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9615,%dummy}, %rd13596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9616}, %rd13596;
	}
	shf.r.wrap.b32 	%r9617, %r9616, %r9615, 20;
	shf.r.wrap.b32 	%r9618, %r9615, %r9616, 20;
	mov.b64 	%rd13615, {%r9618, %r9617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9619,%dummy}, %rd13602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9620}, %rd13602;
	}
	shf.r.wrap.b32 	%r9621, %r9620, %r9619, 21;
	shf.r.wrap.b32 	%r9622, %r9619, %r9620, 21;
	mov.b64 	%rd13616, {%r9622, %r9621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9623}, %rd13608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd13608;
	}
	shf.l.wrap.b32 	%r9625, %r9624, %r9623, 21;
	shf.l.wrap.b32 	%r9626, %r9623, %r9624, 21;
	mov.b64 	%rd13617, {%r9626, %r9625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9627}, %rd13614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9628,%dummy}, %rd13614;
	}
	shf.l.wrap.b32 	%r9629, %r9628, %r9627, 14;
	shf.l.wrap.b32 	%r9630, %r9627, %r9628, 14;
	mov.b64 	%rd13618, {%r9630, %r9629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9631}, %rd13593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9632,%dummy}, %rd13593;
	}
	shf.l.wrap.b32 	%r9633, %r9632, %r9631, 28;
	shf.l.wrap.b32 	%r9634, %r9631, %r9632, 28;
	mov.b64 	%rd13619, {%r9634, %r9633};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9635}, %rd13599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9636,%dummy}, %rd13599;
	}
	shf.l.wrap.b32 	%r9637, %r9636, %r9635, 20;
	shf.l.wrap.b32 	%r9638, %r9635, %r9636, 20;
	mov.b64 	%rd13620, {%r9638, %r9637};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9639}, %rd13600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9640,%dummy}, %rd13600;
	}
	shf.l.wrap.b32 	%r9641, %r9640, %r9639, 3;
	shf.l.wrap.b32 	%r9642, %r9639, %r9640, 3;
	mov.b64 	%rd13621, {%r9642, %r9641};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9643,%dummy}, %rd13606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9644}, %rd13606;
	}
	shf.r.wrap.b32 	%r9645, %r9644, %r9643, 19;
	shf.r.wrap.b32 	%r9646, %r9643, %r9644, 19;
	mov.b64 	%rd13622, {%r9646, %r9645};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9647,%dummy}, %rd13612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9648}, %rd13612;
	}
	shf.r.wrap.b32 	%r9649, %r9648, %r9647, 3;
	shf.r.wrap.b32 	%r9650, %r9647, %r9648, 3;
	mov.b64 	%rd13623, {%r9650, %r9649};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9651}, %rd13591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9652,%dummy}, %rd13591;
	}
	shf.l.wrap.b32 	%r9653, %r9652, %r9651, 1;
	shf.l.wrap.b32 	%r9654, %r9651, %r9652, 1;
	mov.b64 	%rd13624, {%r9654, %r9653};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9655}, %rd13597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9656,%dummy}, %rd13597;
	}
	shf.l.wrap.b32 	%r9657, %r9656, %r9655, 6;
	shf.l.wrap.b32 	%r9658, %r9655, %r9656, 6;
	mov.b64 	%rd13625, {%r9658, %r9657};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9659}, %rd13603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9660,%dummy}, %rd13603;
	}
	shf.l.wrap.b32 	%r9661, %r9660, %r9659, 25;
	shf.l.wrap.b32 	%r9662, %r9659, %r9660, 25;
	mov.b64 	%rd13626, {%r9662, %r9661};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9663}, %rd13609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd13609;
	}
	shf.l.wrap.b32 	%r9665, %r9664, %r9663, 8;
	shf.l.wrap.b32 	%r9666, %r9663, %r9664, 8;
	mov.b64 	%rd13627, {%r9666, %r9665};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9667}, %rd13610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9668,%dummy}, %rd13610;
	}
	shf.l.wrap.b32 	%r9669, %r9668, %r9667, 18;
	shf.l.wrap.b32 	%r9670, %r9667, %r9668, 18;
	mov.b64 	%rd13628, {%r9670, %r9669};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9671}, %rd13594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd13594;
	}
	shf.l.wrap.b32 	%r9673, %r9672, %r9671, 27;
	shf.l.wrap.b32 	%r9674, %r9671, %r9672, 27;
	mov.b64 	%rd13629, {%r9674, %r9673};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9675,%dummy}, %rd13595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9676}, %rd13595;
	}
	shf.r.wrap.b32 	%r9677, %r9676, %r9675, 28;
	shf.r.wrap.b32 	%r9678, %r9675, %r9676, 28;
	mov.b64 	%rd13630, {%r9678, %r9677};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9679}, %rd13601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9680,%dummy}, %rd13601;
	}
	shf.l.wrap.b32 	%r9681, %r9680, %r9679, 10;
	shf.l.wrap.b32 	%r9682, %r9679, %r9680, 10;
	mov.b64 	%rd13631, {%r9682, %r9681};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9683}, %rd13607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9684,%dummy}, %rd13607;
	}
	shf.l.wrap.b32 	%r9685, %r9684, %r9683, 15;
	shf.l.wrap.b32 	%r9686, %r9683, %r9684, 15;
	mov.b64 	%rd13632, {%r9686, %r9685};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9687,%dummy}, %rd13613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9688}, %rd13613;
	}
	shf.r.wrap.b32 	%r9689, %r9688, %r9687, 8;
	shf.r.wrap.b32 	%r9690, %r9687, %r9688, 8;
	mov.b64 	%rd13633, {%r9690, %r9689};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9691,%dummy}, %rd13592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9692}, %rd13592;
	}
	shf.r.wrap.b32 	%r9693, %r9692, %r9691, 2;
	shf.r.wrap.b32 	%r9694, %r9691, %r9692, 2;
	mov.b64 	%rd13634, {%r9694, %r9693};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9695,%dummy}, %rd13598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9696}, %rd13598;
	}
	shf.r.wrap.b32 	%r9697, %r9696, %r9695, 9;
	shf.r.wrap.b32 	%r9698, %r9695, %r9696, 9;
	mov.b64 	%rd13635, {%r9698, %r9697};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9699,%dummy}, %rd13604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9700}, %rd13604;
	}
	shf.r.wrap.b32 	%r9701, %r9700, %r9699, 25;
	shf.r.wrap.b32 	%r9702, %r9699, %r9700, 25;
	mov.b64 	%rd13636, {%r9702, %r9701};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9703,%dummy}, %rd13605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9704}, %rd13605;
	}
	shf.r.wrap.b32 	%r9705, %r9704, %r9703, 23;
	shf.r.wrap.b32 	%r9706, %r9703, %r9704, 23;
	mov.b64 	%rd13637, {%r9706, %r9705};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9707}, %rd13611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9708,%dummy}, %rd13611;
	}
	shf.l.wrap.b32 	%r9709, %r9708, %r9707, 2;
	shf.l.wrap.b32 	%r9710, %r9707, %r9708, 2;
	mov.b64 	%rd13638, {%r9710, %r9709};
	not.b64 	%rd13639, %rd13615;
	and.b64  	%rd13640, %rd13616, %rd13639;
	xor.b64  	%rd13641, %rd13640, %rd13590;
	not.b64 	%rd13642, %rd13616;
	and.b64  	%rd13643, %rd13617, %rd13642;
	xor.b64  	%rd13644, %rd13643, %rd13615;
	not.b64 	%rd13645, %rd13617;
	and.b64  	%rd13646, %rd13618, %rd13645;
	xor.b64  	%rd13647, %rd13646, %rd13616;
	not.b64 	%rd13648, %rd13618;
	and.b64  	%rd13649, %rd13590, %rd13648;
	xor.b64  	%rd13650, %rd13649, %rd13617;
	not.b64 	%rd13651, %rd13590;
	and.b64  	%rd13652, %rd13615, %rd13651;
	xor.b64  	%rd13653, %rd13652, %rd13618;
	not.b64 	%rd13654, %rd13620;
	and.b64  	%rd13655, %rd13621, %rd13654;
	xor.b64  	%rd13656, %rd13655, %rd13619;
	not.b64 	%rd13657, %rd13621;
	and.b64  	%rd13658, %rd13622, %rd13657;
	xor.b64  	%rd13659, %rd13658, %rd13620;
	not.b64 	%rd13660, %rd13622;
	and.b64  	%rd13661, %rd13623, %rd13660;
	xor.b64  	%rd13662, %rd13661, %rd13621;
	not.b64 	%rd13663, %rd13623;
	and.b64  	%rd13664, %rd13619, %rd13663;
	xor.b64  	%rd13665, %rd13664, %rd13622;
	not.b64 	%rd13666, %rd13619;
	and.b64  	%rd13667, %rd13620, %rd13666;
	xor.b64  	%rd13668, %rd13667, %rd13623;
	not.b64 	%rd13669, %rd13625;
	and.b64  	%rd13670, %rd13626, %rd13669;
	xor.b64  	%rd13671, %rd13670, %rd13624;
	not.b64 	%rd13672, %rd13626;
	and.b64  	%rd13673, %rd13627, %rd13672;
	xor.b64  	%rd13674, %rd13673, %rd13625;
	not.b64 	%rd13675, %rd13627;
	and.b64  	%rd13676, %rd13628, %rd13675;
	xor.b64  	%rd13677, %rd13676, %rd13626;
	not.b64 	%rd13678, %rd13628;
	and.b64  	%rd13679, %rd13624, %rd13678;
	xor.b64  	%rd13680, %rd13679, %rd13627;
	not.b64 	%rd13681, %rd13624;
	and.b64  	%rd13682, %rd13625, %rd13681;
	xor.b64  	%rd13683, %rd13682, %rd13628;
	not.b64 	%rd13684, %rd13630;
	and.b64  	%rd13685, %rd13631, %rd13684;
	xor.b64  	%rd13686, %rd13685, %rd13629;
	not.b64 	%rd13687, %rd13631;
	and.b64  	%rd13688, %rd13632, %rd13687;
	xor.b64  	%rd13689, %rd13688, %rd13630;
	not.b64 	%rd13690, %rd13632;
	and.b64  	%rd13691, %rd13633, %rd13690;
	xor.b64  	%rd13692, %rd13691, %rd13631;
	not.b64 	%rd13693, %rd13633;
	and.b64  	%rd13694, %rd13629, %rd13693;
	xor.b64  	%rd13695, %rd13694, %rd13632;
	not.b64 	%rd13696, %rd13629;
	and.b64  	%rd13697, %rd13630, %rd13696;
	xor.b64  	%rd13698, %rd13697, %rd13633;
	not.b64 	%rd13699, %rd13635;
	and.b64  	%rd13700, %rd13636, %rd13699;
	xor.b64  	%rd13701, %rd13700, %rd13634;
	not.b64 	%rd13702, %rd13636;
	and.b64  	%rd13703, %rd13637, %rd13702;
	xor.b64  	%rd13704, %rd13703, %rd13635;
	not.b64 	%rd13705, %rd13637;
	and.b64  	%rd13706, %rd13638, %rd13705;
	xor.b64  	%rd13707, %rd13706, %rd13636;
	not.b64 	%rd13708, %rd13638;
	and.b64  	%rd13709, %rd13634, %rd13708;
	xor.b64  	%rd13710, %rd13709, %rd13637;
	not.b64 	%rd13711, %rd13634;
	and.b64  	%rd13712, %rd13635, %rd13711;
	xor.b64  	%rd13713, %rd13712, %rd13638;
	xor.b64  	%rd13714, %rd13641, %rd26;
	xor.b64  	%rd13715, %rd13656, %rd13714;
	xor.b64  	%rd13716, %rd13715, %rd13671;
	xor.b64  	%rd13717, %rd13716, %rd13686;
	xor.b64  	%rd13718, %rd13717, %rd13701;
	xor.b64  	%rd13719, %rd13659, %rd13644;
	xor.b64  	%rd13720, %rd13719, %rd13674;
	xor.b64  	%rd13721, %rd13720, %rd13689;
	xor.b64  	%rd13722, %rd13721, %rd13704;
	xor.b64  	%rd13723, %rd13662, %rd13647;
	xor.b64  	%rd13724, %rd13723, %rd13677;
	xor.b64  	%rd13725, %rd13724, %rd13692;
	xor.b64  	%rd13726, %rd13725, %rd13707;
	xor.b64  	%rd13727, %rd13665, %rd13650;
	xor.b64  	%rd13728, %rd13727, %rd13680;
	xor.b64  	%rd13729, %rd13728, %rd13695;
	xor.b64  	%rd13730, %rd13729, %rd13710;
	xor.b64  	%rd13731, %rd13668, %rd13653;
	xor.b64  	%rd13732, %rd13731, %rd13683;
	xor.b64  	%rd13733, %rd13732, %rd13698;
	xor.b64  	%rd13734, %rd13733, %rd13713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9711}, %rd13722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd13722;
	}
	shf.l.wrap.b32 	%r9713, %r9712, %r9711, 1;
	shf.l.wrap.b32 	%r9714, %r9711, %r9712, 1;
	mov.b64 	%rd13735, {%r9714, %r9713};
	xor.b64  	%rd13736, %rd13734, %rd13735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9715}, %rd13726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9716,%dummy}, %rd13726;
	}
	shf.l.wrap.b32 	%r9717, %r9716, %r9715, 1;
	shf.l.wrap.b32 	%r9718, %r9715, %r9716, 1;
	mov.b64 	%rd13737, {%r9718, %r9717};
	xor.b64  	%rd13738, %rd13737, %rd13718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9719}, %rd13730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd13730;
	}
	shf.l.wrap.b32 	%r9721, %r9720, %r9719, 1;
	shf.l.wrap.b32 	%r9722, %r9719, %r9720, 1;
	mov.b64 	%rd13739, {%r9722, %r9721};
	xor.b64  	%rd13740, %rd13739, %rd13722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9723}, %rd13734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9724,%dummy}, %rd13734;
	}
	shf.l.wrap.b32 	%r9725, %r9724, %r9723, 1;
	shf.l.wrap.b32 	%r9726, %r9723, %r9724, 1;
	mov.b64 	%rd13741, {%r9726, %r9725};
	xor.b64  	%rd13742, %rd13741, %rd13726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9727}, %rd13718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9728,%dummy}, %rd13718;
	}
	shf.l.wrap.b32 	%r9729, %r9728, %r9727, 1;
	shf.l.wrap.b32 	%r9730, %r9727, %r9728, 1;
	mov.b64 	%rd13743, {%r9730, %r9729};
	xor.b64  	%rd13744, %rd13730, %rd13743;
	xor.b64  	%rd13745, %rd13736, %rd13714;
	xor.b64  	%rd13746, %rd13738, %rd13644;
	xor.b64  	%rd13747, %rd13740, %rd13647;
	xor.b64  	%rd13748, %rd13742, %rd13650;
	xor.b64  	%rd13749, %rd13744, %rd13653;
	xor.b64  	%rd13750, %rd13736, %rd13656;
	xor.b64  	%rd13751, %rd13738, %rd13659;
	xor.b64  	%rd13752, %rd13740, %rd13662;
	xor.b64  	%rd13753, %rd13742, %rd13665;
	xor.b64  	%rd13754, %rd13744, %rd13668;
	xor.b64  	%rd13755, %rd13736, %rd13671;
	xor.b64  	%rd13756, %rd13738, %rd13674;
	xor.b64  	%rd13757, %rd13740, %rd13677;
	xor.b64  	%rd13758, %rd13742, %rd13680;
	xor.b64  	%rd13759, %rd13744, %rd13683;
	xor.b64  	%rd13760, %rd13736, %rd13686;
	xor.b64  	%rd13761, %rd13738, %rd13689;
	xor.b64  	%rd13762, %rd13740, %rd13692;
	xor.b64  	%rd13763, %rd13742, %rd13695;
	xor.b64  	%rd13764, %rd13744, %rd13698;
	xor.b64  	%rd13765, %rd13736, %rd13701;
	xor.b64  	%rd13766, %rd13738, %rd13704;
	xor.b64  	%rd13767, %rd13740, %rd13707;
	xor.b64  	%rd13768, %rd13742, %rd13710;
	xor.b64  	%rd13769, %rd13744, %rd13713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9731,%dummy}, %rd13751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9732}, %rd13751;
	}
	shf.r.wrap.b32 	%r9733, %r9732, %r9731, 20;
	shf.r.wrap.b32 	%r9734, %r9731, %r9732, 20;
	mov.b64 	%rd13770, {%r9734, %r9733};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9735,%dummy}, %rd13757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9736}, %rd13757;
	}
	shf.r.wrap.b32 	%r9737, %r9736, %r9735, 21;
	shf.r.wrap.b32 	%r9738, %r9735, %r9736, 21;
	mov.b64 	%rd13771, {%r9738, %r9737};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9739}, %rd13763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9740,%dummy}, %rd13763;
	}
	shf.l.wrap.b32 	%r9741, %r9740, %r9739, 21;
	shf.l.wrap.b32 	%r9742, %r9739, %r9740, 21;
	mov.b64 	%rd13772, {%r9742, %r9741};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9743}, %rd13769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd13769;
	}
	shf.l.wrap.b32 	%r9745, %r9744, %r9743, 14;
	shf.l.wrap.b32 	%r9746, %r9743, %r9744, 14;
	mov.b64 	%rd13773, {%r9746, %r9745};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9747}, %rd13748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9748,%dummy}, %rd13748;
	}
	shf.l.wrap.b32 	%r9749, %r9748, %r9747, 28;
	shf.l.wrap.b32 	%r9750, %r9747, %r9748, 28;
	mov.b64 	%rd13774, {%r9750, %r9749};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9751}, %rd13754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9752,%dummy}, %rd13754;
	}
	shf.l.wrap.b32 	%r9753, %r9752, %r9751, 20;
	shf.l.wrap.b32 	%r9754, %r9751, %r9752, 20;
	mov.b64 	%rd13775, {%r9754, %r9753};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9755}, %rd13755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9756,%dummy}, %rd13755;
	}
	shf.l.wrap.b32 	%r9757, %r9756, %r9755, 3;
	shf.l.wrap.b32 	%r9758, %r9755, %r9756, 3;
	mov.b64 	%rd13776, {%r9758, %r9757};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9759,%dummy}, %rd13761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9760}, %rd13761;
	}
	shf.r.wrap.b32 	%r9761, %r9760, %r9759, 19;
	shf.r.wrap.b32 	%r9762, %r9759, %r9760, 19;
	mov.b64 	%rd13777, {%r9762, %r9761};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9763,%dummy}, %rd13767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9764}, %rd13767;
	}
	shf.r.wrap.b32 	%r9765, %r9764, %r9763, 3;
	shf.r.wrap.b32 	%r9766, %r9763, %r9764, 3;
	mov.b64 	%rd13778, {%r9766, %r9765};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9767}, %rd13746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9768,%dummy}, %rd13746;
	}
	shf.l.wrap.b32 	%r9769, %r9768, %r9767, 1;
	shf.l.wrap.b32 	%r9770, %r9767, %r9768, 1;
	mov.b64 	%rd13779, {%r9770, %r9769};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9771}, %rd13752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9772,%dummy}, %rd13752;
	}
	shf.l.wrap.b32 	%r9773, %r9772, %r9771, 6;
	shf.l.wrap.b32 	%r9774, %r9771, %r9772, 6;
	mov.b64 	%rd13780, {%r9774, %r9773};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9775}, %rd13758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9776,%dummy}, %rd13758;
	}
	shf.l.wrap.b32 	%r9777, %r9776, %r9775, 25;
	shf.l.wrap.b32 	%r9778, %r9775, %r9776, 25;
	mov.b64 	%rd13781, {%r9778, %r9777};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9779}, %rd13764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9780,%dummy}, %rd13764;
	}
	shf.l.wrap.b32 	%r9781, %r9780, %r9779, 8;
	shf.l.wrap.b32 	%r9782, %r9779, %r9780, 8;
	mov.b64 	%rd13782, {%r9782, %r9781};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9783}, %rd13765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9784,%dummy}, %rd13765;
	}
	shf.l.wrap.b32 	%r9785, %r9784, %r9783, 18;
	shf.l.wrap.b32 	%r9786, %r9783, %r9784, 18;
	mov.b64 	%rd13783, {%r9786, %r9785};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9787}, %rd13749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9788,%dummy}, %rd13749;
	}
	shf.l.wrap.b32 	%r9789, %r9788, %r9787, 27;
	shf.l.wrap.b32 	%r9790, %r9787, %r9788, 27;
	mov.b64 	%rd13784, {%r9790, %r9789};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9791,%dummy}, %rd13750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9792}, %rd13750;
	}
	shf.r.wrap.b32 	%r9793, %r9792, %r9791, 28;
	shf.r.wrap.b32 	%r9794, %r9791, %r9792, 28;
	mov.b64 	%rd13785, {%r9794, %r9793};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9795}, %rd13756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9796,%dummy}, %rd13756;
	}
	shf.l.wrap.b32 	%r9797, %r9796, %r9795, 10;
	shf.l.wrap.b32 	%r9798, %r9795, %r9796, 10;
	mov.b64 	%rd13786, {%r9798, %r9797};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9799}, %rd13762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9800,%dummy}, %rd13762;
	}
	shf.l.wrap.b32 	%r9801, %r9800, %r9799, 15;
	shf.l.wrap.b32 	%r9802, %r9799, %r9800, 15;
	mov.b64 	%rd13787, {%r9802, %r9801};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9803,%dummy}, %rd13768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9804}, %rd13768;
	}
	shf.r.wrap.b32 	%r9805, %r9804, %r9803, 8;
	shf.r.wrap.b32 	%r9806, %r9803, %r9804, 8;
	mov.b64 	%rd13788, {%r9806, %r9805};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9807,%dummy}, %rd13747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9808}, %rd13747;
	}
	shf.r.wrap.b32 	%r9809, %r9808, %r9807, 2;
	shf.r.wrap.b32 	%r9810, %r9807, %r9808, 2;
	mov.b64 	%rd13789, {%r9810, %r9809};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9811,%dummy}, %rd13753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9812}, %rd13753;
	}
	shf.r.wrap.b32 	%r9813, %r9812, %r9811, 9;
	shf.r.wrap.b32 	%r9814, %r9811, %r9812, 9;
	mov.b64 	%rd13790, {%r9814, %r9813};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9815,%dummy}, %rd13759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9816}, %rd13759;
	}
	shf.r.wrap.b32 	%r9817, %r9816, %r9815, 25;
	shf.r.wrap.b32 	%r9818, %r9815, %r9816, 25;
	mov.b64 	%rd13791, {%r9818, %r9817};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9819,%dummy}, %rd13760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9820}, %rd13760;
	}
	shf.r.wrap.b32 	%r9821, %r9820, %r9819, 23;
	shf.r.wrap.b32 	%r9822, %r9819, %r9820, 23;
	mov.b64 	%rd13792, {%r9822, %r9821};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9823}, %rd13766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9824,%dummy}, %rd13766;
	}
	shf.l.wrap.b32 	%r9825, %r9824, %r9823, 2;
	shf.l.wrap.b32 	%r9826, %r9823, %r9824, 2;
	mov.b64 	%rd13793, {%r9826, %r9825};
	not.b64 	%rd13794, %rd13770;
	and.b64  	%rd13795, %rd13771, %rd13794;
	xor.b64  	%rd13796, %rd13795, %rd13745;
	not.b64 	%rd13797, %rd13771;
	and.b64  	%rd13798, %rd13772, %rd13797;
	xor.b64  	%rd13799, %rd13798, %rd13770;
	not.b64 	%rd13800, %rd13772;
	and.b64  	%rd13801, %rd13773, %rd13800;
	xor.b64  	%rd13802, %rd13801, %rd13771;
	not.b64 	%rd13803, %rd13773;
	and.b64  	%rd13804, %rd13745, %rd13803;
	xor.b64  	%rd13805, %rd13804, %rd13772;
	not.b64 	%rd13806, %rd13745;
	and.b64  	%rd13807, %rd13770, %rd13806;
	xor.b64  	%rd13808, %rd13807, %rd13773;
	not.b64 	%rd13809, %rd13775;
	and.b64  	%rd13810, %rd13776, %rd13809;
	xor.b64  	%rd13811, %rd13810, %rd13774;
	not.b64 	%rd13812, %rd13776;
	and.b64  	%rd13813, %rd13777, %rd13812;
	xor.b64  	%rd13814, %rd13813, %rd13775;
	not.b64 	%rd13815, %rd13777;
	and.b64  	%rd13816, %rd13778, %rd13815;
	xor.b64  	%rd13817, %rd13816, %rd13776;
	not.b64 	%rd13818, %rd13778;
	and.b64  	%rd13819, %rd13774, %rd13818;
	xor.b64  	%rd13820, %rd13819, %rd13777;
	not.b64 	%rd13821, %rd13774;
	and.b64  	%rd13822, %rd13775, %rd13821;
	xor.b64  	%rd13823, %rd13822, %rd13778;
	not.b64 	%rd13824, %rd13780;
	and.b64  	%rd13825, %rd13781, %rd13824;
	xor.b64  	%rd13826, %rd13825, %rd13779;
	not.b64 	%rd13827, %rd13781;
	and.b64  	%rd13828, %rd13782, %rd13827;
	xor.b64  	%rd13829, %rd13828, %rd13780;
	not.b64 	%rd13830, %rd13782;
	and.b64  	%rd13831, %rd13783, %rd13830;
	xor.b64  	%rd13832, %rd13831, %rd13781;
	not.b64 	%rd13833, %rd13783;
	and.b64  	%rd13834, %rd13779, %rd13833;
	xor.b64  	%rd13835, %rd13834, %rd13782;
	not.b64 	%rd13836, %rd13779;
	and.b64  	%rd13837, %rd13780, %rd13836;
	xor.b64  	%rd13838, %rd13837, %rd13783;
	not.b64 	%rd13839, %rd13785;
	and.b64  	%rd13840, %rd13786, %rd13839;
	xor.b64  	%rd13841, %rd13840, %rd13784;
	not.b64 	%rd13842, %rd13786;
	and.b64  	%rd13843, %rd13787, %rd13842;
	xor.b64  	%rd13844, %rd13843, %rd13785;
	not.b64 	%rd13845, %rd13787;
	and.b64  	%rd13846, %rd13788, %rd13845;
	xor.b64  	%rd13847, %rd13846, %rd13786;
	not.b64 	%rd13848, %rd13788;
	and.b64  	%rd13849, %rd13784, %rd13848;
	xor.b64  	%rd13850, %rd13849, %rd13787;
	not.b64 	%rd13851, %rd13784;
	and.b64  	%rd13852, %rd13785, %rd13851;
	xor.b64  	%rd13853, %rd13852, %rd13788;
	not.b64 	%rd13854, %rd13790;
	and.b64  	%rd13855, %rd13791, %rd13854;
	xor.b64  	%rd13856, %rd13855, %rd13789;
	not.b64 	%rd13857, %rd13791;
	and.b64  	%rd13858, %rd13792, %rd13857;
	xor.b64  	%rd13859, %rd13858, %rd13790;
	not.b64 	%rd13860, %rd13792;
	and.b64  	%rd13861, %rd13793, %rd13860;
	xor.b64  	%rd13862, %rd13861, %rd13791;
	not.b64 	%rd13863, %rd13793;
	and.b64  	%rd13864, %rd13789, %rd13863;
	xor.b64  	%rd13865, %rd13864, %rd13792;
	not.b64 	%rd13866, %rd13789;
	and.b64  	%rd13867, %rd13790, %rd13866;
	xor.b64  	%rd13868, %rd13867, %rd13793;
	xor.b64  	%rd13869, %rd13796, %rd27;
	xor.b64  	%rd13870, %rd13811, %rd13869;
	xor.b64  	%rd13871, %rd13870, %rd13826;
	xor.b64  	%rd13872, %rd13871, %rd13841;
	xor.b64  	%rd13873, %rd13872, %rd13856;
	xor.b64  	%rd13874, %rd13814, %rd13799;
	xor.b64  	%rd13875, %rd13874, %rd13829;
	xor.b64  	%rd13876, %rd13875, %rd13844;
	xor.b64  	%rd13877, %rd13876, %rd13859;
	xor.b64  	%rd13878, %rd13817, %rd13802;
	xor.b64  	%rd13879, %rd13878, %rd13832;
	xor.b64  	%rd13880, %rd13879, %rd13847;
	xor.b64  	%rd13881, %rd13880, %rd13862;
	xor.b64  	%rd13882, %rd13820, %rd13805;
	xor.b64  	%rd13883, %rd13882, %rd13835;
	xor.b64  	%rd13884, %rd13883, %rd13850;
	xor.b64  	%rd13885, %rd13884, %rd13865;
	xor.b64  	%rd13886, %rd13823, %rd13808;
	xor.b64  	%rd13887, %rd13886, %rd13838;
	xor.b64  	%rd13888, %rd13887, %rd13853;
	xor.b64  	%rd13889, %rd13888, %rd13868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9827}, %rd13877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9828,%dummy}, %rd13877;
	}
	shf.l.wrap.b32 	%r9829, %r9828, %r9827, 1;
	shf.l.wrap.b32 	%r9830, %r9827, %r9828, 1;
	mov.b64 	%rd13890, {%r9830, %r9829};
	xor.b64  	%rd13891, %rd13889, %rd13890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9831}, %rd13881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9832,%dummy}, %rd13881;
	}
	shf.l.wrap.b32 	%r9833, %r9832, %r9831, 1;
	shf.l.wrap.b32 	%r9834, %r9831, %r9832, 1;
	mov.b64 	%rd13892, {%r9834, %r9833};
	xor.b64  	%rd13893, %rd13892, %rd13873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9835}, %rd13885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9836,%dummy}, %rd13885;
	}
	shf.l.wrap.b32 	%r9837, %r9836, %r9835, 1;
	shf.l.wrap.b32 	%r9838, %r9835, %r9836, 1;
	mov.b64 	%rd13894, {%r9838, %r9837};
	xor.b64  	%rd13895, %rd13894, %rd13877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9839}, %rd13889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9840,%dummy}, %rd13889;
	}
	shf.l.wrap.b32 	%r9841, %r9840, %r9839, 1;
	shf.l.wrap.b32 	%r9842, %r9839, %r9840, 1;
	mov.b64 	%rd13896, {%r9842, %r9841};
	xor.b64  	%rd13897, %rd13896, %rd13881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9843}, %rd13873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9844,%dummy}, %rd13873;
	}
	shf.l.wrap.b32 	%r9845, %r9844, %r9843, 1;
	shf.l.wrap.b32 	%r9846, %r9843, %r9844, 1;
	mov.b64 	%rd13898, {%r9846, %r9845};
	xor.b64  	%rd13899, %rd13885, %rd13898;
	xor.b64  	%rd13900, %rd13891, %rd13869;
	xor.b64  	%rd13901, %rd13893, %rd13799;
	xor.b64  	%rd13902, %rd13895, %rd13802;
	xor.b64  	%rd13903, %rd13897, %rd13805;
	xor.b64  	%rd13904, %rd13899, %rd13808;
	xor.b64  	%rd13905, %rd13891, %rd13811;
	xor.b64  	%rd13906, %rd13893, %rd13814;
	xor.b64  	%rd13907, %rd13895, %rd13817;
	xor.b64  	%rd13908, %rd13897, %rd13820;
	xor.b64  	%rd13909, %rd13899, %rd13823;
	xor.b64  	%rd13910, %rd13891, %rd13826;
	xor.b64  	%rd13911, %rd13893, %rd13829;
	xor.b64  	%rd13912, %rd13895, %rd13832;
	xor.b64  	%rd13913, %rd13897, %rd13835;
	xor.b64  	%rd13914, %rd13899, %rd13838;
	xor.b64  	%rd13915, %rd13891, %rd13841;
	xor.b64  	%rd13916, %rd13893, %rd13844;
	xor.b64  	%rd13917, %rd13895, %rd13847;
	xor.b64  	%rd13918, %rd13897, %rd13850;
	xor.b64  	%rd13919, %rd13899, %rd13853;
	xor.b64  	%rd13920, %rd13891, %rd13856;
	xor.b64  	%rd13921, %rd13893, %rd13859;
	xor.b64  	%rd13922, %rd13895, %rd13862;
	xor.b64  	%rd13923, %rd13897, %rd13865;
	xor.b64  	%rd13924, %rd13899, %rd13868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9847,%dummy}, %rd13906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9848}, %rd13906;
	}
	shf.r.wrap.b32 	%r9849, %r9848, %r9847, 20;
	shf.r.wrap.b32 	%r9850, %r9847, %r9848, 20;
	mov.b64 	%rd13925, {%r9850, %r9849};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9851,%dummy}, %rd13912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9852}, %rd13912;
	}
	shf.r.wrap.b32 	%r9853, %r9852, %r9851, 21;
	shf.r.wrap.b32 	%r9854, %r9851, %r9852, 21;
	mov.b64 	%rd13926, {%r9854, %r9853};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9855}, %rd13918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9856,%dummy}, %rd13918;
	}
	shf.l.wrap.b32 	%r9857, %r9856, %r9855, 21;
	shf.l.wrap.b32 	%r9858, %r9855, %r9856, 21;
	mov.b64 	%rd13927, {%r9858, %r9857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9859}, %rd13924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9860,%dummy}, %rd13924;
	}
	shf.l.wrap.b32 	%r9861, %r9860, %r9859, 14;
	shf.l.wrap.b32 	%r9862, %r9859, %r9860, 14;
	mov.b64 	%rd13928, {%r9862, %r9861};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9863}, %rd13903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd13903;
	}
	shf.l.wrap.b32 	%r9865, %r9864, %r9863, 28;
	shf.l.wrap.b32 	%r9866, %r9863, %r9864, 28;
	mov.b64 	%rd13929, {%r9866, %r9865};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9867}, %rd13909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9868,%dummy}, %rd13909;
	}
	shf.l.wrap.b32 	%r9869, %r9868, %r9867, 20;
	shf.l.wrap.b32 	%r9870, %r9867, %r9868, 20;
	mov.b64 	%rd13930, {%r9870, %r9869};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9871}, %rd13910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9872,%dummy}, %rd13910;
	}
	shf.l.wrap.b32 	%r9873, %r9872, %r9871, 3;
	shf.l.wrap.b32 	%r9874, %r9871, %r9872, 3;
	mov.b64 	%rd13931, {%r9874, %r9873};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9875,%dummy}, %rd13916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9876}, %rd13916;
	}
	shf.r.wrap.b32 	%r9877, %r9876, %r9875, 19;
	shf.r.wrap.b32 	%r9878, %r9875, %r9876, 19;
	mov.b64 	%rd13932, {%r9878, %r9877};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9879,%dummy}, %rd13922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9880}, %rd13922;
	}
	shf.r.wrap.b32 	%r9881, %r9880, %r9879, 3;
	shf.r.wrap.b32 	%r9882, %r9879, %r9880, 3;
	mov.b64 	%rd13933, {%r9882, %r9881};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9883}, %rd13901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9884,%dummy}, %rd13901;
	}
	shf.l.wrap.b32 	%r9885, %r9884, %r9883, 1;
	shf.l.wrap.b32 	%r9886, %r9883, %r9884, 1;
	mov.b64 	%rd13934, {%r9886, %r9885};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9887}, %rd13907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9888,%dummy}, %rd13907;
	}
	shf.l.wrap.b32 	%r9889, %r9888, %r9887, 6;
	shf.l.wrap.b32 	%r9890, %r9887, %r9888, 6;
	mov.b64 	%rd13935, {%r9890, %r9889};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9891}, %rd13913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9892,%dummy}, %rd13913;
	}
	shf.l.wrap.b32 	%r9893, %r9892, %r9891, 25;
	shf.l.wrap.b32 	%r9894, %r9891, %r9892, 25;
	mov.b64 	%rd13936, {%r9894, %r9893};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd13919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9896,%dummy}, %rd13919;
	}
	shf.l.wrap.b32 	%r9897, %r9896, %r9895, 8;
	shf.l.wrap.b32 	%r9898, %r9895, %r9896, 8;
	mov.b64 	%rd13937, {%r9898, %r9897};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9899}, %rd13920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9900,%dummy}, %rd13920;
	}
	shf.l.wrap.b32 	%r9901, %r9900, %r9899, 18;
	shf.l.wrap.b32 	%r9902, %r9899, %r9900, 18;
	mov.b64 	%rd13938, {%r9902, %r9901};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9903}, %rd13904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9904,%dummy}, %rd13904;
	}
	shf.l.wrap.b32 	%r9905, %r9904, %r9903, 27;
	shf.l.wrap.b32 	%r9906, %r9903, %r9904, 27;
	mov.b64 	%rd13939, {%r9906, %r9905};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9907,%dummy}, %rd13905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9908}, %rd13905;
	}
	shf.r.wrap.b32 	%r9909, %r9908, %r9907, 28;
	shf.r.wrap.b32 	%r9910, %r9907, %r9908, 28;
	mov.b64 	%rd13940, {%r9910, %r9909};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9911}, %rd13911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9912,%dummy}, %rd13911;
	}
	shf.l.wrap.b32 	%r9913, %r9912, %r9911, 10;
	shf.l.wrap.b32 	%r9914, %r9911, %r9912, 10;
	mov.b64 	%rd13941, {%r9914, %r9913};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9915}, %rd13917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9916,%dummy}, %rd13917;
	}
	shf.l.wrap.b32 	%r9917, %r9916, %r9915, 15;
	shf.l.wrap.b32 	%r9918, %r9915, %r9916, 15;
	mov.b64 	%rd13942, {%r9918, %r9917};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9919,%dummy}, %rd13923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9920}, %rd13923;
	}
	shf.r.wrap.b32 	%r9921, %r9920, %r9919, 8;
	shf.r.wrap.b32 	%r9922, %r9919, %r9920, 8;
	mov.b64 	%rd13943, {%r9922, %r9921};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9923,%dummy}, %rd13902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9924}, %rd13902;
	}
	shf.r.wrap.b32 	%r9925, %r9924, %r9923, 2;
	shf.r.wrap.b32 	%r9926, %r9923, %r9924, 2;
	mov.b64 	%rd13944, {%r9926, %r9925};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9927,%dummy}, %rd13908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9928}, %rd13908;
	}
	shf.r.wrap.b32 	%r9929, %r9928, %r9927, 9;
	shf.r.wrap.b32 	%r9930, %r9927, %r9928, 9;
	mov.b64 	%rd13945, {%r9930, %r9929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9931,%dummy}, %rd13914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9932}, %rd13914;
	}
	shf.r.wrap.b32 	%r9933, %r9932, %r9931, 25;
	shf.r.wrap.b32 	%r9934, %r9931, %r9932, 25;
	mov.b64 	%rd13946, {%r9934, %r9933};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9935,%dummy}, %rd13915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9936}, %rd13915;
	}
	shf.r.wrap.b32 	%r9937, %r9936, %r9935, 23;
	shf.r.wrap.b32 	%r9938, %r9935, %r9936, 23;
	mov.b64 	%rd13947, {%r9938, %r9937};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9939}, %rd13921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9940,%dummy}, %rd13921;
	}
	shf.l.wrap.b32 	%r9941, %r9940, %r9939, 2;
	shf.l.wrap.b32 	%r9942, %r9939, %r9940, 2;
	mov.b64 	%rd13948, {%r9942, %r9941};
	not.b64 	%rd13949, %rd13925;
	and.b64  	%rd13950, %rd13926, %rd13949;
	xor.b64  	%rd13951, %rd13950, %rd13900;
	not.b64 	%rd13952, %rd13926;
	and.b64  	%rd13953, %rd13927, %rd13952;
	xor.b64  	%rd13954, %rd13953, %rd13925;
	not.b64 	%rd13955, %rd13927;
	and.b64  	%rd13956, %rd13928, %rd13955;
	xor.b64  	%rd13957, %rd13956, %rd13926;
	not.b64 	%rd13958, %rd13928;
	and.b64  	%rd13959, %rd13900, %rd13958;
	xor.b64  	%rd13960, %rd13959, %rd13927;
	not.b64 	%rd13961, %rd13900;
	and.b64  	%rd13962, %rd13925, %rd13961;
	xor.b64  	%rd13963, %rd13962, %rd13928;
	not.b64 	%rd13964, %rd13930;
	and.b64  	%rd13965, %rd13931, %rd13964;
	xor.b64  	%rd13966, %rd13965, %rd13929;
	not.b64 	%rd13967, %rd13931;
	and.b64  	%rd13968, %rd13932, %rd13967;
	xor.b64  	%rd13969, %rd13968, %rd13930;
	not.b64 	%rd13970, %rd13932;
	and.b64  	%rd13971, %rd13933, %rd13970;
	xor.b64  	%rd13972, %rd13971, %rd13931;
	not.b64 	%rd13973, %rd13933;
	and.b64  	%rd13974, %rd13929, %rd13973;
	xor.b64  	%rd13975, %rd13974, %rd13932;
	not.b64 	%rd13976, %rd13929;
	and.b64  	%rd13977, %rd13930, %rd13976;
	xor.b64  	%rd13978, %rd13977, %rd13933;
	not.b64 	%rd13979, %rd13935;
	and.b64  	%rd13980, %rd13936, %rd13979;
	xor.b64  	%rd13981, %rd13980, %rd13934;
	not.b64 	%rd13982, %rd13936;
	and.b64  	%rd13983, %rd13937, %rd13982;
	xor.b64  	%rd13984, %rd13983, %rd13935;
	not.b64 	%rd13985, %rd13937;
	and.b64  	%rd13986, %rd13938, %rd13985;
	xor.b64  	%rd13987, %rd13986, %rd13936;
	not.b64 	%rd13988, %rd13938;
	and.b64  	%rd13989, %rd13934, %rd13988;
	xor.b64  	%rd13990, %rd13989, %rd13937;
	not.b64 	%rd13991, %rd13934;
	and.b64  	%rd13992, %rd13935, %rd13991;
	xor.b64  	%rd13993, %rd13992, %rd13938;
	not.b64 	%rd13994, %rd13940;
	and.b64  	%rd13995, %rd13941, %rd13994;
	xor.b64  	%rd13996, %rd13995, %rd13939;
	not.b64 	%rd13997, %rd13941;
	and.b64  	%rd13998, %rd13942, %rd13997;
	xor.b64  	%rd13999, %rd13998, %rd13940;
	not.b64 	%rd14000, %rd13942;
	and.b64  	%rd14001, %rd13943, %rd14000;
	xor.b64  	%rd14002, %rd14001, %rd13941;
	not.b64 	%rd14003, %rd13943;
	and.b64  	%rd14004, %rd13939, %rd14003;
	xor.b64  	%rd14005, %rd14004, %rd13942;
	not.b64 	%rd14006, %rd13939;
	and.b64  	%rd14007, %rd13940, %rd14006;
	xor.b64  	%rd14008, %rd14007, %rd13943;
	not.b64 	%rd14009, %rd13945;
	and.b64  	%rd14010, %rd13946, %rd14009;
	xor.b64  	%rd14011, %rd14010, %rd13944;
	not.b64 	%rd14012, %rd13946;
	and.b64  	%rd14013, %rd13947, %rd14012;
	xor.b64  	%rd14014, %rd14013, %rd13945;
	not.b64 	%rd14015, %rd13947;
	and.b64  	%rd14016, %rd13948, %rd14015;
	xor.b64  	%rd14017, %rd14016, %rd13946;
	not.b64 	%rd14018, %rd13948;
	and.b64  	%rd14019, %rd13944, %rd14018;
	xor.b64  	%rd14020, %rd14019, %rd13947;
	not.b64 	%rd14021, %rd13944;
	and.b64  	%rd14022, %rd13945, %rd14021;
	xor.b64  	%rd14023, %rd14022, %rd13948;
	xor.b64  	%rd14024, %rd13951, %rd28;
	xor.b64  	%rd14025, %rd13966, %rd14024;
	xor.b64  	%rd14026, %rd14025, %rd13981;
	xor.b64  	%rd14027, %rd14026, %rd13996;
	xor.b64  	%rd14028, %rd14027, %rd14011;
	xor.b64  	%rd14029, %rd13969, %rd13954;
	xor.b64  	%rd14030, %rd14029, %rd13984;
	xor.b64  	%rd14031, %rd14030, %rd13999;
	xor.b64  	%rd14032, %rd14031, %rd14014;
	xor.b64  	%rd14033, %rd13972, %rd13957;
	xor.b64  	%rd14034, %rd14033, %rd13987;
	xor.b64  	%rd14035, %rd14034, %rd14002;
	xor.b64  	%rd14036, %rd14035, %rd14017;
	xor.b64  	%rd14037, %rd13975, %rd13960;
	xor.b64  	%rd14038, %rd14037, %rd13990;
	xor.b64  	%rd14039, %rd14038, %rd14005;
	xor.b64  	%rd14040, %rd14039, %rd14020;
	xor.b64  	%rd14041, %rd13978, %rd13963;
	xor.b64  	%rd14042, %rd14041, %rd13993;
	xor.b64  	%rd14043, %rd14042, %rd14008;
	xor.b64  	%rd14044, %rd14043, %rd14023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd14032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9944,%dummy}, %rd14032;
	}
	shf.l.wrap.b32 	%r9945, %r9944, %r9943, 1;
	shf.l.wrap.b32 	%r9946, %r9943, %r9944, 1;
	mov.b64 	%rd14045, {%r9946, %r9945};
	xor.b64  	%rd14046, %rd14044, %rd14045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9947}, %rd14036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9948,%dummy}, %rd14036;
	}
	shf.l.wrap.b32 	%r9949, %r9948, %r9947, 1;
	shf.l.wrap.b32 	%r9950, %r9947, %r9948, 1;
	mov.b64 	%rd14047, {%r9950, %r9949};
	xor.b64  	%rd14048, %rd14047, %rd14028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9951}, %rd14040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9952,%dummy}, %rd14040;
	}
	shf.l.wrap.b32 	%r9953, %r9952, %r9951, 1;
	shf.l.wrap.b32 	%r9954, %r9951, %r9952, 1;
	mov.b64 	%rd14049, {%r9954, %r9953};
	xor.b64  	%rd14050, %rd14049, %rd14032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9955}, %rd14044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9956,%dummy}, %rd14044;
	}
	shf.l.wrap.b32 	%r9957, %r9956, %r9955, 1;
	shf.l.wrap.b32 	%r9958, %r9955, %r9956, 1;
	mov.b64 	%rd14051, {%r9958, %r9957};
	xor.b64  	%rd14052, %rd14051, %rd14036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9959}, %rd14028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9960,%dummy}, %rd14028;
	}
	shf.l.wrap.b32 	%r9961, %r9960, %r9959, 1;
	shf.l.wrap.b32 	%r9962, %r9959, %r9960, 1;
	mov.b64 	%rd14053, {%r9962, %r9961};
	xor.b64  	%rd14054, %rd14040, %rd14053;
	xor.b64  	%rd14055, %rd14046, %rd14024;
	xor.b64  	%rd14056, %rd14048, %rd13954;
	xor.b64  	%rd14057, %rd14050, %rd13957;
	xor.b64  	%rd14058, %rd14052, %rd13960;
	xor.b64  	%rd14059, %rd14054, %rd13963;
	xor.b64  	%rd14060, %rd14046, %rd13966;
	xor.b64  	%rd14061, %rd14048, %rd13969;
	xor.b64  	%rd14062, %rd14050, %rd13972;
	xor.b64  	%rd14063, %rd14052, %rd13975;
	xor.b64  	%rd14064, %rd14054, %rd13978;
	xor.b64  	%rd14065, %rd14046, %rd13981;
	xor.b64  	%rd14066, %rd14048, %rd13984;
	xor.b64  	%rd14067, %rd14050, %rd13987;
	xor.b64  	%rd14068, %rd14052, %rd13990;
	xor.b64  	%rd14069, %rd14054, %rd13993;
	xor.b64  	%rd14070, %rd14046, %rd13996;
	xor.b64  	%rd14071, %rd14048, %rd13999;
	xor.b64  	%rd14072, %rd14050, %rd14002;
	xor.b64  	%rd14073, %rd14052, %rd14005;
	xor.b64  	%rd14074, %rd14054, %rd14008;
	xor.b64  	%rd14075, %rd14046, %rd14011;
	xor.b64  	%rd14076, %rd14048, %rd14014;
	xor.b64  	%rd14077, %rd14050, %rd14017;
	xor.b64  	%rd14078, %rd14052, %rd14020;
	xor.b64  	%rd14079, %rd14054, %rd14023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9963,%dummy}, %rd14061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9964}, %rd14061;
	}
	shf.r.wrap.b32 	%r9965, %r9964, %r9963, 20;
	shf.r.wrap.b32 	%r9966, %r9963, %r9964, 20;
	mov.b64 	%rd14080, {%r9966, %r9965};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9967,%dummy}, %rd14067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9968}, %rd14067;
	}
	shf.r.wrap.b32 	%r9969, %r9968, %r9967, 21;
	shf.r.wrap.b32 	%r9970, %r9967, %r9968, 21;
	mov.b64 	%rd14081, {%r9970, %r9969};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9971}, %rd14073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9972,%dummy}, %rd14073;
	}
	shf.l.wrap.b32 	%r9973, %r9972, %r9971, 21;
	shf.l.wrap.b32 	%r9974, %r9971, %r9972, 21;
	mov.b64 	%rd14082, {%r9974, %r9973};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9975}, %rd14079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9976,%dummy}, %rd14079;
	}
	shf.l.wrap.b32 	%r9977, %r9976, %r9975, 14;
	shf.l.wrap.b32 	%r9978, %r9975, %r9976, 14;
	mov.b64 	%rd14083, {%r9978, %r9977};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9979}, %rd14058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9980,%dummy}, %rd14058;
	}
	shf.l.wrap.b32 	%r9981, %r9980, %r9979, 28;
	shf.l.wrap.b32 	%r9982, %r9979, %r9980, 28;
	mov.b64 	%rd14084, {%r9982, %r9981};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9983}, %rd14064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9984,%dummy}, %rd14064;
	}
	shf.l.wrap.b32 	%r9985, %r9984, %r9983, 20;
	shf.l.wrap.b32 	%r9986, %r9983, %r9984, 20;
	mov.b64 	%rd14085, {%r9986, %r9985};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9987}, %rd14065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9988,%dummy}, %rd14065;
	}
	shf.l.wrap.b32 	%r9989, %r9988, %r9987, 3;
	shf.l.wrap.b32 	%r9990, %r9987, %r9988, 3;
	mov.b64 	%rd14086, {%r9990, %r9989};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd14071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd14071;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 19;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 19;
	mov.b64 	%rd14087, {%r9994, %r9993};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9995,%dummy}, %rd14077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9996}, %rd14077;
	}
	shf.r.wrap.b32 	%r9997, %r9996, %r9995, 3;
	shf.r.wrap.b32 	%r9998, %r9995, %r9996, 3;
	mov.b64 	%rd14088, {%r9998, %r9997};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9999}, %rd14056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10000,%dummy}, %rd14056;
	}
	shf.l.wrap.b32 	%r10001, %r10000, %r9999, 1;
	shf.l.wrap.b32 	%r10002, %r9999, %r10000, 1;
	mov.b64 	%rd14089, {%r10002, %r10001};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10003}, %rd14062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10004,%dummy}, %rd14062;
	}
	shf.l.wrap.b32 	%r10005, %r10004, %r10003, 6;
	shf.l.wrap.b32 	%r10006, %r10003, %r10004, 6;
	mov.b64 	%rd14090, {%r10006, %r10005};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10007}, %rd14068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10008,%dummy}, %rd14068;
	}
	shf.l.wrap.b32 	%r10009, %r10008, %r10007, 25;
	shf.l.wrap.b32 	%r10010, %r10007, %r10008, 25;
	mov.b64 	%rd14091, {%r10010, %r10009};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10011}, %rd14074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10012,%dummy}, %rd14074;
	}
	shf.l.wrap.b32 	%r10013, %r10012, %r10011, 8;
	shf.l.wrap.b32 	%r10014, %r10011, %r10012, 8;
	mov.b64 	%rd14092, {%r10014, %r10013};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10015}, %rd14075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10016,%dummy}, %rd14075;
	}
	shf.l.wrap.b32 	%r10017, %r10016, %r10015, 18;
	shf.l.wrap.b32 	%r10018, %r10015, %r10016, 18;
	mov.b64 	%rd14093, {%r10018, %r10017};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10019}, %rd14059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10020,%dummy}, %rd14059;
	}
	shf.l.wrap.b32 	%r10021, %r10020, %r10019, 27;
	shf.l.wrap.b32 	%r10022, %r10019, %r10020, 27;
	mov.b64 	%rd14094, {%r10022, %r10021};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10023,%dummy}, %rd14060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10024}, %rd14060;
	}
	shf.r.wrap.b32 	%r10025, %r10024, %r10023, 28;
	shf.r.wrap.b32 	%r10026, %r10023, %r10024, 28;
	mov.b64 	%rd14095, {%r10026, %r10025};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10027}, %rd14066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10028,%dummy}, %rd14066;
	}
	shf.l.wrap.b32 	%r10029, %r10028, %r10027, 10;
	shf.l.wrap.b32 	%r10030, %r10027, %r10028, 10;
	mov.b64 	%rd14096, {%r10030, %r10029};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10031}, %rd14072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10032,%dummy}, %rd14072;
	}
	shf.l.wrap.b32 	%r10033, %r10032, %r10031, 15;
	shf.l.wrap.b32 	%r10034, %r10031, %r10032, 15;
	mov.b64 	%rd14097, {%r10034, %r10033};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10035,%dummy}, %rd14078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10036}, %rd14078;
	}
	shf.r.wrap.b32 	%r10037, %r10036, %r10035, 8;
	shf.r.wrap.b32 	%r10038, %r10035, %r10036, 8;
	mov.b64 	%rd14098, {%r10038, %r10037};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10039,%dummy}, %rd14057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10040}, %rd14057;
	}
	shf.r.wrap.b32 	%r10041, %r10040, %r10039, 2;
	shf.r.wrap.b32 	%r10042, %r10039, %r10040, 2;
	mov.b64 	%rd14099, {%r10042, %r10041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10043,%dummy}, %rd14063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10044}, %rd14063;
	}
	shf.r.wrap.b32 	%r10045, %r10044, %r10043, 9;
	shf.r.wrap.b32 	%r10046, %r10043, %r10044, 9;
	mov.b64 	%rd14100, {%r10046, %r10045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10047,%dummy}, %rd14069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10048}, %rd14069;
	}
	shf.r.wrap.b32 	%r10049, %r10048, %r10047, 25;
	shf.r.wrap.b32 	%r10050, %r10047, %r10048, 25;
	mov.b64 	%rd14101, {%r10050, %r10049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10051,%dummy}, %rd14070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10052}, %rd14070;
	}
	shf.r.wrap.b32 	%r10053, %r10052, %r10051, 23;
	shf.r.wrap.b32 	%r10054, %r10051, %r10052, 23;
	mov.b64 	%rd14102, {%r10054, %r10053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10055}, %rd14076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10056,%dummy}, %rd14076;
	}
	shf.l.wrap.b32 	%r10057, %r10056, %r10055, 2;
	shf.l.wrap.b32 	%r10058, %r10055, %r10056, 2;
	mov.b64 	%rd14103, {%r10058, %r10057};
	not.b64 	%rd14104, %rd14080;
	and.b64  	%rd14105, %rd14081, %rd14104;
	xor.b64  	%rd14106, %rd14105, %rd14055;
	not.b64 	%rd14107, %rd14081;
	and.b64  	%rd14108, %rd14082, %rd14107;
	xor.b64  	%rd14109, %rd14108, %rd14080;
	not.b64 	%rd14110, %rd14082;
	and.b64  	%rd14111, %rd14083, %rd14110;
	xor.b64  	%rd14112, %rd14111, %rd14081;
	not.b64 	%rd14113, %rd14083;
	and.b64  	%rd14114, %rd14055, %rd14113;
	xor.b64  	%rd14115, %rd14114, %rd14082;
	not.b64 	%rd14116, %rd14055;
	and.b64  	%rd14117, %rd14080, %rd14116;
	xor.b64  	%rd14118, %rd14117, %rd14083;
	not.b64 	%rd14119, %rd14085;
	and.b64  	%rd14120, %rd14086, %rd14119;
	xor.b64  	%rd14121, %rd14120, %rd14084;
	not.b64 	%rd14122, %rd14086;
	and.b64  	%rd14123, %rd14087, %rd14122;
	xor.b64  	%rd14124, %rd14123, %rd14085;
	not.b64 	%rd14125, %rd14087;
	and.b64  	%rd14126, %rd14088, %rd14125;
	xor.b64  	%rd14127, %rd14126, %rd14086;
	not.b64 	%rd14128, %rd14088;
	and.b64  	%rd14129, %rd14084, %rd14128;
	xor.b64  	%rd14130, %rd14129, %rd14087;
	not.b64 	%rd14131, %rd14084;
	and.b64  	%rd14132, %rd14085, %rd14131;
	xor.b64  	%rd14133, %rd14132, %rd14088;
	not.b64 	%rd14134, %rd14090;
	and.b64  	%rd14135, %rd14091, %rd14134;
	xor.b64  	%rd14136, %rd14135, %rd14089;
	not.b64 	%rd14137, %rd14091;
	and.b64  	%rd14138, %rd14092, %rd14137;
	xor.b64  	%rd14139, %rd14138, %rd14090;
	not.b64 	%rd14140, %rd14092;
	and.b64  	%rd14141, %rd14093, %rd14140;
	xor.b64  	%rd14142, %rd14141, %rd14091;
	not.b64 	%rd14143, %rd14093;
	and.b64  	%rd14144, %rd14089, %rd14143;
	xor.b64  	%rd14145, %rd14144, %rd14092;
	not.b64 	%rd14146, %rd14089;
	and.b64  	%rd14147, %rd14090, %rd14146;
	xor.b64  	%rd14148, %rd14147, %rd14093;
	not.b64 	%rd14149, %rd14095;
	and.b64  	%rd14150, %rd14096, %rd14149;
	xor.b64  	%rd14151, %rd14150, %rd14094;
	not.b64 	%rd14152, %rd14096;
	and.b64  	%rd14153, %rd14097, %rd14152;
	xor.b64  	%rd14154, %rd14153, %rd14095;
	not.b64 	%rd14155, %rd14097;
	and.b64  	%rd14156, %rd14098, %rd14155;
	xor.b64  	%rd14157, %rd14156, %rd14096;
	not.b64 	%rd14158, %rd14098;
	and.b64  	%rd14159, %rd14094, %rd14158;
	xor.b64  	%rd14160, %rd14159, %rd14097;
	not.b64 	%rd14161, %rd14094;
	and.b64  	%rd14162, %rd14095, %rd14161;
	xor.b64  	%rd14163, %rd14162, %rd14098;
	not.b64 	%rd14164, %rd14100;
	and.b64  	%rd14165, %rd14101, %rd14164;
	xor.b64  	%rd14166, %rd14165, %rd14099;
	not.b64 	%rd14167, %rd14101;
	and.b64  	%rd14168, %rd14102, %rd14167;
	xor.b64  	%rd14169, %rd14168, %rd14100;
	not.b64 	%rd14170, %rd14102;
	and.b64  	%rd14171, %rd14103, %rd14170;
	xor.b64  	%rd14172, %rd14171, %rd14101;
	not.b64 	%rd14173, %rd14103;
	and.b64  	%rd14174, %rd14099, %rd14173;
	xor.b64  	%rd14175, %rd14174, %rd14102;
	not.b64 	%rd14176, %rd14099;
	and.b64  	%rd14177, %rd14100, %rd14176;
	xor.b64  	%rd14178, %rd14177, %rd14103;
	xor.b64  	%rd14179, %rd14106, %rd29;
	xor.b64  	%rd14180, %rd14121, %rd14179;
	xor.b64  	%rd14181, %rd14180, %rd14136;
	xor.b64  	%rd14182, %rd14181, %rd14151;
	xor.b64  	%rd14183, %rd14182, %rd14166;
	xor.b64  	%rd14184, %rd14124, %rd14109;
	xor.b64  	%rd14185, %rd14184, %rd14139;
	xor.b64  	%rd14186, %rd14185, %rd14154;
	xor.b64  	%rd14187, %rd14186, %rd14169;
	xor.b64  	%rd14188, %rd14127, %rd14112;
	xor.b64  	%rd14189, %rd14188, %rd14142;
	xor.b64  	%rd14190, %rd14189, %rd14157;
	xor.b64  	%rd14191, %rd14190, %rd14172;
	xor.b64  	%rd14192, %rd14130, %rd14115;
	xor.b64  	%rd14193, %rd14192, %rd14145;
	xor.b64  	%rd14194, %rd14193, %rd14160;
	xor.b64  	%rd14195, %rd14194, %rd14175;
	xor.b64  	%rd14196, %rd14133, %rd14118;
	xor.b64  	%rd14197, %rd14196, %rd14148;
	xor.b64  	%rd14198, %rd14197, %rd14163;
	xor.b64  	%rd14199, %rd14198, %rd14178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10059}, %rd14187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10060,%dummy}, %rd14187;
	}
	shf.l.wrap.b32 	%r10061, %r10060, %r10059, 1;
	shf.l.wrap.b32 	%r10062, %r10059, %r10060, 1;
	mov.b64 	%rd14200, {%r10062, %r10061};
	xor.b64  	%rd14201, %rd14199, %rd14200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10063}, %rd14191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10064,%dummy}, %rd14191;
	}
	shf.l.wrap.b32 	%r10065, %r10064, %r10063, 1;
	shf.l.wrap.b32 	%r10066, %r10063, %r10064, 1;
	mov.b64 	%rd14202, {%r10066, %r10065};
	xor.b64  	%rd14203, %rd14202, %rd14183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10067}, %rd14195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10068,%dummy}, %rd14195;
	}
	shf.l.wrap.b32 	%r10069, %r10068, %r10067, 1;
	shf.l.wrap.b32 	%r10070, %r10067, %r10068, 1;
	mov.b64 	%rd14204, {%r10070, %r10069};
	xor.b64  	%rd14205, %rd14204, %rd14187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10071}, %rd14199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10072,%dummy}, %rd14199;
	}
	shf.l.wrap.b32 	%r10073, %r10072, %r10071, 1;
	shf.l.wrap.b32 	%r10074, %r10071, %r10072, 1;
	mov.b64 	%rd14206, {%r10074, %r10073};
	xor.b64  	%rd14207, %rd14206, %rd14191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10075}, %rd14183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10076,%dummy}, %rd14183;
	}
	shf.l.wrap.b32 	%r10077, %r10076, %r10075, 1;
	shf.l.wrap.b32 	%r10078, %r10075, %r10076, 1;
	mov.b64 	%rd14208, {%r10078, %r10077};
	xor.b64  	%rd14209, %rd14195, %rd14208;
	xor.b64  	%rd14210, %rd14201, %rd14179;
	xor.b64  	%rd14211, %rd14203, %rd14109;
	xor.b64  	%rd14212, %rd14205, %rd14112;
	xor.b64  	%rd14213, %rd14207, %rd14115;
	xor.b64  	%rd14214, %rd14209, %rd14118;
	xor.b64  	%rd14215, %rd14201, %rd14121;
	xor.b64  	%rd14216, %rd14203, %rd14124;
	xor.b64  	%rd14217, %rd14205, %rd14127;
	xor.b64  	%rd14218, %rd14207, %rd14130;
	xor.b64  	%rd14219, %rd14209, %rd14133;
	xor.b64  	%rd14220, %rd14201, %rd14136;
	xor.b64  	%rd14221, %rd14203, %rd14139;
	xor.b64  	%rd14222, %rd14205, %rd14142;
	xor.b64  	%rd14223, %rd14207, %rd14145;
	xor.b64  	%rd14224, %rd14209, %rd14148;
	xor.b64  	%rd14225, %rd14201, %rd14151;
	xor.b64  	%rd14226, %rd14203, %rd14154;
	xor.b64  	%rd14227, %rd14205, %rd14157;
	xor.b64  	%rd14228, %rd14207, %rd14160;
	xor.b64  	%rd14229, %rd14209, %rd14163;
	xor.b64  	%rd14230, %rd14201, %rd14166;
	xor.b64  	%rd14231, %rd14203, %rd14169;
	xor.b64  	%rd14232, %rd14205, %rd14172;
	xor.b64  	%rd14233, %rd14207, %rd14175;
	xor.b64  	%rd14234, %rd14209, %rd14178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10079,%dummy}, %rd14216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10080}, %rd14216;
	}
	shf.r.wrap.b32 	%r10081, %r10080, %r10079, 20;
	shf.r.wrap.b32 	%r10082, %r10079, %r10080, 20;
	mov.b64 	%rd14235, {%r10082, %r10081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10083,%dummy}, %rd14222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10084}, %rd14222;
	}
	shf.r.wrap.b32 	%r10085, %r10084, %r10083, 21;
	shf.r.wrap.b32 	%r10086, %r10083, %r10084, 21;
	mov.b64 	%rd14236, {%r10086, %r10085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10087}, %rd14228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10088,%dummy}, %rd14228;
	}
	shf.l.wrap.b32 	%r10089, %r10088, %r10087, 21;
	shf.l.wrap.b32 	%r10090, %r10087, %r10088, 21;
	mov.b64 	%rd14237, {%r10090, %r10089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10091}, %rd14234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10092,%dummy}, %rd14234;
	}
	shf.l.wrap.b32 	%r10093, %r10092, %r10091, 14;
	shf.l.wrap.b32 	%r10094, %r10091, %r10092, 14;
	mov.b64 	%rd14238, {%r10094, %r10093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10095}, %rd14213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10096,%dummy}, %rd14213;
	}
	shf.l.wrap.b32 	%r10097, %r10096, %r10095, 28;
	shf.l.wrap.b32 	%r10098, %r10095, %r10096, 28;
	mov.b64 	%rd14239, {%r10098, %r10097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10099}, %rd14219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10100,%dummy}, %rd14219;
	}
	shf.l.wrap.b32 	%r10101, %r10100, %r10099, 20;
	shf.l.wrap.b32 	%r10102, %r10099, %r10100, 20;
	mov.b64 	%rd14240, {%r10102, %r10101};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10103}, %rd14220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10104,%dummy}, %rd14220;
	}
	shf.l.wrap.b32 	%r10105, %r10104, %r10103, 3;
	shf.l.wrap.b32 	%r10106, %r10103, %r10104, 3;
	mov.b64 	%rd14241, {%r10106, %r10105};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10107,%dummy}, %rd14226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10108}, %rd14226;
	}
	shf.r.wrap.b32 	%r10109, %r10108, %r10107, 19;
	shf.r.wrap.b32 	%r10110, %r10107, %r10108, 19;
	mov.b64 	%rd14242, {%r10110, %r10109};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10111,%dummy}, %rd14232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10112}, %rd14232;
	}
	shf.r.wrap.b32 	%r10113, %r10112, %r10111, 3;
	shf.r.wrap.b32 	%r10114, %r10111, %r10112, 3;
	mov.b64 	%rd14243, {%r10114, %r10113};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10115}, %rd14211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10116,%dummy}, %rd14211;
	}
	shf.l.wrap.b32 	%r10117, %r10116, %r10115, 1;
	shf.l.wrap.b32 	%r10118, %r10115, %r10116, 1;
	mov.b64 	%rd14244, {%r10118, %r10117};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10119}, %rd14217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10120,%dummy}, %rd14217;
	}
	shf.l.wrap.b32 	%r10121, %r10120, %r10119, 6;
	shf.l.wrap.b32 	%r10122, %r10119, %r10120, 6;
	mov.b64 	%rd14245, {%r10122, %r10121};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10123}, %rd14223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10124,%dummy}, %rd14223;
	}
	shf.l.wrap.b32 	%r10125, %r10124, %r10123, 25;
	shf.l.wrap.b32 	%r10126, %r10123, %r10124, 25;
	mov.b64 	%rd14246, {%r10126, %r10125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10127}, %rd14229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10128,%dummy}, %rd14229;
	}
	shf.l.wrap.b32 	%r10129, %r10128, %r10127, 8;
	shf.l.wrap.b32 	%r10130, %r10127, %r10128, 8;
	mov.b64 	%rd14247, {%r10130, %r10129};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10131}, %rd14230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10132,%dummy}, %rd14230;
	}
	shf.l.wrap.b32 	%r10133, %r10132, %r10131, 18;
	shf.l.wrap.b32 	%r10134, %r10131, %r10132, 18;
	mov.b64 	%rd14248, {%r10134, %r10133};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10135}, %rd14214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10136,%dummy}, %rd14214;
	}
	shf.l.wrap.b32 	%r10137, %r10136, %r10135, 27;
	shf.l.wrap.b32 	%r10138, %r10135, %r10136, 27;
	mov.b64 	%rd14249, {%r10138, %r10137};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10139,%dummy}, %rd14215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10140}, %rd14215;
	}
	shf.r.wrap.b32 	%r10141, %r10140, %r10139, 28;
	shf.r.wrap.b32 	%r10142, %r10139, %r10140, 28;
	mov.b64 	%rd14250, {%r10142, %r10141};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10143}, %rd14221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10144,%dummy}, %rd14221;
	}
	shf.l.wrap.b32 	%r10145, %r10144, %r10143, 10;
	shf.l.wrap.b32 	%r10146, %r10143, %r10144, 10;
	mov.b64 	%rd14251, {%r10146, %r10145};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10147}, %rd14227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10148,%dummy}, %rd14227;
	}
	shf.l.wrap.b32 	%r10149, %r10148, %r10147, 15;
	shf.l.wrap.b32 	%r10150, %r10147, %r10148, 15;
	mov.b64 	%rd14252, {%r10150, %r10149};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10151,%dummy}, %rd14233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10152}, %rd14233;
	}
	shf.r.wrap.b32 	%r10153, %r10152, %r10151, 8;
	shf.r.wrap.b32 	%r10154, %r10151, %r10152, 8;
	mov.b64 	%rd14253, {%r10154, %r10153};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10155,%dummy}, %rd14212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10156}, %rd14212;
	}
	shf.r.wrap.b32 	%r10157, %r10156, %r10155, 2;
	shf.r.wrap.b32 	%r10158, %r10155, %r10156, 2;
	mov.b64 	%rd14254, {%r10158, %r10157};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10159,%dummy}, %rd14218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10160}, %rd14218;
	}
	shf.r.wrap.b32 	%r10161, %r10160, %r10159, 9;
	shf.r.wrap.b32 	%r10162, %r10159, %r10160, 9;
	mov.b64 	%rd14255, {%r10162, %r10161};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10163,%dummy}, %rd14224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10164}, %rd14224;
	}
	shf.r.wrap.b32 	%r10165, %r10164, %r10163, 25;
	shf.r.wrap.b32 	%r10166, %r10163, %r10164, 25;
	mov.b64 	%rd14256, {%r10166, %r10165};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10167,%dummy}, %rd14225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10168}, %rd14225;
	}
	shf.r.wrap.b32 	%r10169, %r10168, %r10167, 23;
	shf.r.wrap.b32 	%r10170, %r10167, %r10168, 23;
	mov.b64 	%rd14257, {%r10170, %r10169};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10171}, %rd14231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10172,%dummy}, %rd14231;
	}
	shf.l.wrap.b32 	%r10173, %r10172, %r10171, 2;
	shf.l.wrap.b32 	%r10174, %r10171, %r10172, 2;
	mov.b64 	%rd14258, {%r10174, %r10173};
	not.b64 	%rd14259, %rd14235;
	and.b64  	%rd14260, %rd14236, %rd14259;
	xor.b64  	%rd14261, %rd14260, %rd14210;
	not.b64 	%rd14262, %rd14236;
	and.b64  	%rd14263, %rd14237, %rd14262;
	xor.b64  	%rd14264, %rd14263, %rd14235;
	not.b64 	%rd14265, %rd14237;
	and.b64  	%rd14266, %rd14238, %rd14265;
	xor.b64  	%rd14267, %rd14266, %rd14236;
	not.b64 	%rd14268, %rd14238;
	and.b64  	%rd14269, %rd14210, %rd14268;
	xor.b64  	%rd14270, %rd14269, %rd14237;
	not.b64 	%rd14271, %rd14210;
	and.b64  	%rd14272, %rd14235, %rd14271;
	xor.b64  	%rd14273, %rd14272, %rd14238;
	not.b64 	%rd14274, %rd14240;
	and.b64  	%rd14275, %rd14241, %rd14274;
	xor.b64  	%rd14276, %rd14275, %rd14239;
	not.b64 	%rd14277, %rd14241;
	and.b64  	%rd14278, %rd14242, %rd14277;
	xor.b64  	%rd14279, %rd14278, %rd14240;
	not.b64 	%rd14280, %rd14242;
	and.b64  	%rd14281, %rd14243, %rd14280;
	xor.b64  	%rd14282, %rd14281, %rd14241;
	not.b64 	%rd14283, %rd14243;
	and.b64  	%rd14284, %rd14239, %rd14283;
	xor.b64  	%rd14285, %rd14284, %rd14242;
	not.b64 	%rd14286, %rd14239;
	and.b64  	%rd14287, %rd14240, %rd14286;
	xor.b64  	%rd14288, %rd14287, %rd14243;
	not.b64 	%rd14289, %rd14245;
	and.b64  	%rd14290, %rd14246, %rd14289;
	xor.b64  	%rd14291, %rd14290, %rd14244;
	not.b64 	%rd14292, %rd14246;
	and.b64  	%rd14293, %rd14247, %rd14292;
	xor.b64  	%rd14294, %rd14293, %rd14245;
	not.b64 	%rd14295, %rd14247;
	and.b64  	%rd14296, %rd14248, %rd14295;
	xor.b64  	%rd14297, %rd14296, %rd14246;
	not.b64 	%rd14298, %rd14248;
	and.b64  	%rd14299, %rd14244, %rd14298;
	xor.b64  	%rd14300, %rd14299, %rd14247;
	not.b64 	%rd14301, %rd14244;
	and.b64  	%rd14302, %rd14245, %rd14301;
	xor.b64  	%rd14303, %rd14302, %rd14248;
	not.b64 	%rd14304, %rd14250;
	and.b64  	%rd14305, %rd14251, %rd14304;
	xor.b64  	%rd14306, %rd14305, %rd14249;
	not.b64 	%rd14307, %rd14251;
	and.b64  	%rd14308, %rd14252, %rd14307;
	xor.b64  	%rd14309, %rd14308, %rd14250;
	not.b64 	%rd14310, %rd14252;
	and.b64  	%rd14311, %rd14253, %rd14310;
	xor.b64  	%rd14312, %rd14311, %rd14251;
	not.b64 	%rd14313, %rd14253;
	and.b64  	%rd14314, %rd14249, %rd14313;
	xor.b64  	%rd14315, %rd14314, %rd14252;
	not.b64 	%rd14316, %rd14249;
	and.b64  	%rd14317, %rd14250, %rd14316;
	xor.b64  	%rd14318, %rd14317, %rd14253;
	not.b64 	%rd14319, %rd14255;
	and.b64  	%rd14320, %rd14256, %rd14319;
	xor.b64  	%rd14321, %rd14320, %rd14254;
	not.b64 	%rd14322, %rd14256;
	and.b64  	%rd14323, %rd14257, %rd14322;
	xor.b64  	%rd14324, %rd14323, %rd14255;
	not.b64 	%rd14325, %rd14257;
	and.b64  	%rd14326, %rd14258, %rd14325;
	xor.b64  	%rd14327, %rd14326, %rd14256;
	not.b64 	%rd14328, %rd14258;
	and.b64  	%rd14329, %rd14254, %rd14328;
	xor.b64  	%rd14330, %rd14329, %rd14257;
	not.b64 	%rd14331, %rd14254;
	and.b64  	%rd14332, %rd14255, %rd14331;
	xor.b64  	%rd14333, %rd14332, %rd14258;
	xor.b64  	%rd14334, %rd14261, %rd30;
	xor.b64  	%rd14335, %rd14276, %rd14334;
	xor.b64  	%rd14336, %rd14335, %rd14291;
	xor.b64  	%rd14337, %rd14336, %rd14306;
	xor.b64  	%rd14338, %rd14337, %rd14321;
	xor.b64  	%rd14339, %rd14279, %rd14264;
	xor.b64  	%rd14340, %rd14339, %rd14294;
	xor.b64  	%rd14341, %rd14340, %rd14309;
	xor.b64  	%rd14342, %rd14341, %rd14324;
	xor.b64  	%rd14343, %rd14282, %rd14267;
	xor.b64  	%rd14344, %rd14343, %rd14297;
	xor.b64  	%rd14345, %rd14344, %rd14312;
	xor.b64  	%rd14346, %rd14345, %rd14327;
	xor.b64  	%rd14347, %rd14285, %rd14270;
	xor.b64  	%rd14348, %rd14347, %rd14300;
	xor.b64  	%rd14349, %rd14348, %rd14315;
	xor.b64  	%rd14350, %rd14349, %rd14330;
	xor.b64  	%rd14351, %rd14288, %rd14273;
	xor.b64  	%rd14352, %rd14351, %rd14303;
	xor.b64  	%rd14353, %rd14352, %rd14318;
	xor.b64  	%rd14354, %rd14353, %rd14333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10175}, %rd14342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10176,%dummy}, %rd14342;
	}
	shf.l.wrap.b32 	%r10177, %r10176, %r10175, 1;
	shf.l.wrap.b32 	%r10178, %r10175, %r10176, 1;
	mov.b64 	%rd14355, {%r10178, %r10177};
	xor.b64  	%rd14356, %rd14354, %rd14355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10179}, %rd14346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10180,%dummy}, %rd14346;
	}
	shf.l.wrap.b32 	%r10181, %r10180, %r10179, 1;
	shf.l.wrap.b32 	%r10182, %r10179, %r10180, 1;
	mov.b64 	%rd14357, {%r10182, %r10181};
	xor.b64  	%rd14358, %rd14357, %rd14338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10183}, %rd14350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10184,%dummy}, %rd14350;
	}
	shf.l.wrap.b32 	%r10185, %r10184, %r10183, 1;
	shf.l.wrap.b32 	%r10186, %r10183, %r10184, 1;
	mov.b64 	%rd14359, {%r10186, %r10185};
	xor.b64  	%rd14360, %rd14359, %rd14342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10187}, %rd14354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10188,%dummy}, %rd14354;
	}
	shf.l.wrap.b32 	%r10189, %r10188, %r10187, 1;
	shf.l.wrap.b32 	%r10190, %r10187, %r10188, 1;
	mov.b64 	%rd14361, {%r10190, %r10189};
	xor.b64  	%rd14362, %rd14361, %rd14346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10191}, %rd14338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10192,%dummy}, %rd14338;
	}
	shf.l.wrap.b32 	%r10193, %r10192, %r10191, 1;
	shf.l.wrap.b32 	%r10194, %r10191, %r10192, 1;
	mov.b64 	%rd14363, {%r10194, %r10193};
	xor.b64  	%rd14364, %rd14350, %rd14363;
	xor.b64  	%rd14365, %rd14356, %rd14334;
	xor.b64  	%rd14366, %rd14358, %rd14264;
	xor.b64  	%rd14367, %rd14360, %rd14267;
	xor.b64  	%rd14368, %rd14362, %rd14270;
	xor.b64  	%rd14369, %rd14364, %rd14273;
	xor.b64  	%rd14370, %rd14356, %rd14276;
	xor.b64  	%rd14371, %rd14358, %rd14279;
	xor.b64  	%rd14372, %rd14360, %rd14282;
	xor.b64  	%rd14373, %rd14362, %rd14285;
	xor.b64  	%rd14374, %rd14364, %rd14288;
	xor.b64  	%rd14375, %rd14356, %rd14291;
	xor.b64  	%rd14376, %rd14358, %rd14294;
	xor.b64  	%rd14377, %rd14360, %rd14297;
	xor.b64  	%rd14378, %rd14362, %rd14300;
	xor.b64  	%rd14379, %rd14364, %rd14303;
	xor.b64  	%rd14380, %rd14356, %rd14306;
	xor.b64  	%rd14381, %rd14358, %rd14309;
	xor.b64  	%rd14382, %rd14360, %rd14312;
	xor.b64  	%rd14383, %rd14362, %rd14315;
	xor.b64  	%rd14384, %rd14364, %rd14318;
	xor.b64  	%rd14385, %rd14356, %rd14321;
	xor.b64  	%rd14386, %rd14358, %rd14324;
	xor.b64  	%rd14387, %rd14360, %rd14327;
	xor.b64  	%rd14388, %rd14362, %rd14330;
	xor.b64  	%rd14389, %rd14364, %rd14333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10195,%dummy}, %rd14371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10196}, %rd14371;
	}
	shf.r.wrap.b32 	%r10197, %r10196, %r10195, 20;
	shf.r.wrap.b32 	%r10198, %r10195, %r10196, 20;
	mov.b64 	%rd14390, {%r10198, %r10197};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10199,%dummy}, %rd14377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10200}, %rd14377;
	}
	shf.r.wrap.b32 	%r10201, %r10200, %r10199, 21;
	shf.r.wrap.b32 	%r10202, %r10199, %r10200, 21;
	mov.b64 	%rd14391, {%r10202, %r10201};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10203}, %rd14383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10204,%dummy}, %rd14383;
	}
	shf.l.wrap.b32 	%r10205, %r10204, %r10203, 21;
	shf.l.wrap.b32 	%r10206, %r10203, %r10204, 21;
	mov.b64 	%rd14392, {%r10206, %r10205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10207}, %rd14389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10208,%dummy}, %rd14389;
	}
	shf.l.wrap.b32 	%r10209, %r10208, %r10207, 14;
	shf.l.wrap.b32 	%r10210, %r10207, %r10208, 14;
	mov.b64 	%rd14393, {%r10210, %r10209};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10211}, %rd14368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10212,%dummy}, %rd14368;
	}
	shf.l.wrap.b32 	%r10213, %r10212, %r10211, 28;
	shf.l.wrap.b32 	%r10214, %r10211, %r10212, 28;
	mov.b64 	%rd14394, {%r10214, %r10213};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10215}, %rd14374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10216,%dummy}, %rd14374;
	}
	shf.l.wrap.b32 	%r10217, %r10216, %r10215, 20;
	shf.l.wrap.b32 	%r10218, %r10215, %r10216, 20;
	mov.b64 	%rd14395, {%r10218, %r10217};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10219}, %rd14375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10220,%dummy}, %rd14375;
	}
	shf.l.wrap.b32 	%r10221, %r10220, %r10219, 3;
	shf.l.wrap.b32 	%r10222, %r10219, %r10220, 3;
	mov.b64 	%rd14396, {%r10222, %r10221};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10223,%dummy}, %rd14381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10224}, %rd14381;
	}
	shf.r.wrap.b32 	%r10225, %r10224, %r10223, 19;
	shf.r.wrap.b32 	%r10226, %r10223, %r10224, 19;
	mov.b64 	%rd14397, {%r10226, %r10225};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10227,%dummy}, %rd14387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10228}, %rd14387;
	}
	shf.r.wrap.b32 	%r10229, %r10228, %r10227, 3;
	shf.r.wrap.b32 	%r10230, %r10227, %r10228, 3;
	mov.b64 	%rd14398, {%r10230, %r10229};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10231}, %rd14366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10232,%dummy}, %rd14366;
	}
	shf.l.wrap.b32 	%r10233, %r10232, %r10231, 1;
	shf.l.wrap.b32 	%r10234, %r10231, %r10232, 1;
	mov.b64 	%rd14399, {%r10234, %r10233};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10235}, %rd14372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10236,%dummy}, %rd14372;
	}
	shf.l.wrap.b32 	%r10237, %r10236, %r10235, 6;
	shf.l.wrap.b32 	%r10238, %r10235, %r10236, 6;
	mov.b64 	%rd14400, {%r10238, %r10237};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10239}, %rd14378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10240,%dummy}, %rd14378;
	}
	shf.l.wrap.b32 	%r10241, %r10240, %r10239, 25;
	shf.l.wrap.b32 	%r10242, %r10239, %r10240, 25;
	mov.b64 	%rd14401, {%r10242, %r10241};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10243}, %rd14384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10244,%dummy}, %rd14384;
	}
	shf.l.wrap.b32 	%r10245, %r10244, %r10243, 8;
	shf.l.wrap.b32 	%r10246, %r10243, %r10244, 8;
	mov.b64 	%rd14402, {%r10246, %r10245};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10247}, %rd14385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10248,%dummy}, %rd14385;
	}
	shf.l.wrap.b32 	%r10249, %r10248, %r10247, 18;
	shf.l.wrap.b32 	%r10250, %r10247, %r10248, 18;
	mov.b64 	%rd14403, {%r10250, %r10249};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10251}, %rd14369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10252,%dummy}, %rd14369;
	}
	shf.l.wrap.b32 	%r10253, %r10252, %r10251, 27;
	shf.l.wrap.b32 	%r10254, %r10251, %r10252, 27;
	mov.b64 	%rd14404, {%r10254, %r10253};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10255,%dummy}, %rd14370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10256}, %rd14370;
	}
	shf.r.wrap.b32 	%r10257, %r10256, %r10255, 28;
	shf.r.wrap.b32 	%r10258, %r10255, %r10256, 28;
	mov.b64 	%rd14405, {%r10258, %r10257};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10259}, %rd14376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10260,%dummy}, %rd14376;
	}
	shf.l.wrap.b32 	%r10261, %r10260, %r10259, 10;
	shf.l.wrap.b32 	%r10262, %r10259, %r10260, 10;
	mov.b64 	%rd14406, {%r10262, %r10261};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10263}, %rd14382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10264,%dummy}, %rd14382;
	}
	shf.l.wrap.b32 	%r10265, %r10264, %r10263, 15;
	shf.l.wrap.b32 	%r10266, %r10263, %r10264, 15;
	mov.b64 	%rd14407, {%r10266, %r10265};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10267,%dummy}, %rd14388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10268}, %rd14388;
	}
	shf.r.wrap.b32 	%r10269, %r10268, %r10267, 8;
	shf.r.wrap.b32 	%r10270, %r10267, %r10268, 8;
	mov.b64 	%rd14408, {%r10270, %r10269};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10271,%dummy}, %rd14367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10272}, %rd14367;
	}
	shf.r.wrap.b32 	%r10273, %r10272, %r10271, 2;
	shf.r.wrap.b32 	%r10274, %r10271, %r10272, 2;
	mov.b64 	%rd14409, {%r10274, %r10273};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10275,%dummy}, %rd14373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10276}, %rd14373;
	}
	shf.r.wrap.b32 	%r10277, %r10276, %r10275, 9;
	shf.r.wrap.b32 	%r10278, %r10275, %r10276, 9;
	mov.b64 	%rd14410, {%r10278, %r10277};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10279,%dummy}, %rd14379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10280}, %rd14379;
	}
	shf.r.wrap.b32 	%r10281, %r10280, %r10279, 25;
	shf.r.wrap.b32 	%r10282, %r10279, %r10280, 25;
	mov.b64 	%rd14411, {%r10282, %r10281};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10283,%dummy}, %rd14380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10284}, %rd14380;
	}
	shf.r.wrap.b32 	%r10285, %r10284, %r10283, 23;
	shf.r.wrap.b32 	%r10286, %r10283, %r10284, 23;
	mov.b64 	%rd14412, {%r10286, %r10285};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10287}, %rd14386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10288,%dummy}, %rd14386;
	}
	shf.l.wrap.b32 	%r10289, %r10288, %r10287, 2;
	shf.l.wrap.b32 	%r10290, %r10287, %r10288, 2;
	mov.b64 	%rd14413, {%r10290, %r10289};
	not.b64 	%rd14414, %rd14390;
	and.b64  	%rd14415, %rd14391, %rd14414;
	xor.b64  	%rd14416, %rd14415, %rd14365;
	not.b64 	%rd14417, %rd14391;
	and.b64  	%rd14418, %rd14392, %rd14417;
	xor.b64  	%rd14419, %rd14418, %rd14390;
	not.b64 	%rd14420, %rd14392;
	and.b64  	%rd14421, %rd14393, %rd14420;
	xor.b64  	%rd14422, %rd14421, %rd14391;
	not.b64 	%rd14423, %rd14393;
	and.b64  	%rd14424, %rd14365, %rd14423;
	xor.b64  	%rd14425, %rd14424, %rd14392;
	not.b64 	%rd14426, %rd14365;
	and.b64  	%rd14427, %rd14390, %rd14426;
	xor.b64  	%rd14428, %rd14427, %rd14393;
	not.b64 	%rd14429, %rd14395;
	and.b64  	%rd14430, %rd14396, %rd14429;
	xor.b64  	%rd14431, %rd14430, %rd14394;
	not.b64 	%rd14432, %rd14396;
	and.b64  	%rd14433, %rd14397, %rd14432;
	xor.b64  	%rd14434, %rd14433, %rd14395;
	not.b64 	%rd14435, %rd14397;
	and.b64  	%rd14436, %rd14398, %rd14435;
	xor.b64  	%rd14437, %rd14436, %rd14396;
	not.b64 	%rd14438, %rd14398;
	and.b64  	%rd14439, %rd14394, %rd14438;
	xor.b64  	%rd14440, %rd14439, %rd14397;
	not.b64 	%rd14441, %rd14394;
	and.b64  	%rd14442, %rd14395, %rd14441;
	xor.b64  	%rd14443, %rd14442, %rd14398;
	not.b64 	%rd14444, %rd14400;
	and.b64  	%rd14445, %rd14401, %rd14444;
	xor.b64  	%rd14446, %rd14445, %rd14399;
	not.b64 	%rd14447, %rd14401;
	and.b64  	%rd14448, %rd14402, %rd14447;
	xor.b64  	%rd14449, %rd14448, %rd14400;
	not.b64 	%rd14450, %rd14402;
	and.b64  	%rd14451, %rd14403, %rd14450;
	xor.b64  	%rd14452, %rd14451, %rd14401;
	not.b64 	%rd14453, %rd14403;
	and.b64  	%rd14454, %rd14399, %rd14453;
	xor.b64  	%rd14455, %rd14454, %rd14402;
	not.b64 	%rd14456, %rd14399;
	and.b64  	%rd14457, %rd14400, %rd14456;
	xor.b64  	%rd14458, %rd14457, %rd14403;
	not.b64 	%rd14459, %rd14405;
	and.b64  	%rd14460, %rd14406, %rd14459;
	xor.b64  	%rd14461, %rd14460, %rd14404;
	not.b64 	%rd14462, %rd14406;
	and.b64  	%rd14463, %rd14407, %rd14462;
	xor.b64  	%rd14464, %rd14463, %rd14405;
	not.b64 	%rd14465, %rd14407;
	and.b64  	%rd14466, %rd14408, %rd14465;
	xor.b64  	%rd14467, %rd14466, %rd14406;
	not.b64 	%rd14468, %rd14408;
	and.b64  	%rd14469, %rd14404, %rd14468;
	xor.b64  	%rd14470, %rd14469, %rd14407;
	not.b64 	%rd14471, %rd14404;
	and.b64  	%rd14472, %rd14405, %rd14471;
	xor.b64  	%rd14473, %rd14472, %rd14408;
	not.b64 	%rd14474, %rd14410;
	and.b64  	%rd14475, %rd14411, %rd14474;
	xor.b64  	%rd14476, %rd14475, %rd14409;
	not.b64 	%rd14477, %rd14411;
	and.b64  	%rd14478, %rd14412, %rd14477;
	xor.b64  	%rd14479, %rd14478, %rd14410;
	not.b64 	%rd14480, %rd14412;
	and.b64  	%rd14481, %rd14413, %rd14480;
	xor.b64  	%rd14482, %rd14481, %rd14411;
	not.b64 	%rd14483, %rd14413;
	and.b64  	%rd14484, %rd14409, %rd14483;
	xor.b64  	%rd14485, %rd14484, %rd14412;
	not.b64 	%rd14486, %rd14409;
	and.b64  	%rd14487, %rd14410, %rd14486;
	xor.b64  	%rd14488, %rd14487, %rd14413;
	xor.b64  	%rd14489, %rd14416, %rd31;
	xor.b64  	%rd14490, %rd14431, %rd14489;
	xor.b64  	%rd14491, %rd14490, %rd14446;
	xor.b64  	%rd14492, %rd14491, %rd14461;
	xor.b64  	%rd14493, %rd14492, %rd14476;
	xor.b64  	%rd14494, %rd14434, %rd14419;
	xor.b64  	%rd14495, %rd14494, %rd14449;
	xor.b64  	%rd14496, %rd14495, %rd14464;
	xor.b64  	%rd14497, %rd14496, %rd14479;
	xor.b64  	%rd14498, %rd14437, %rd14422;
	xor.b64  	%rd14499, %rd14498, %rd14452;
	xor.b64  	%rd14500, %rd14499, %rd14467;
	xor.b64  	%rd14501, %rd14500, %rd14482;
	xor.b64  	%rd14502, %rd14440, %rd14425;
	xor.b64  	%rd14503, %rd14502, %rd14455;
	xor.b64  	%rd14504, %rd14503, %rd14470;
	xor.b64  	%rd14505, %rd14504, %rd14485;
	xor.b64  	%rd14506, %rd14443, %rd14428;
	xor.b64  	%rd14507, %rd14506, %rd14458;
	xor.b64  	%rd14508, %rd14507, %rd14473;
	xor.b64  	%rd14509, %rd14508, %rd14488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10291}, %rd14497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10292,%dummy}, %rd14497;
	}
	shf.l.wrap.b32 	%r10293, %r10292, %r10291, 1;
	shf.l.wrap.b32 	%r10294, %r10291, %r10292, 1;
	mov.b64 	%rd14510, {%r10294, %r10293};
	xor.b64  	%rd14511, %rd14509, %rd14510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10295}, %rd14501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10296,%dummy}, %rd14501;
	}
	shf.l.wrap.b32 	%r10297, %r10296, %r10295, 1;
	shf.l.wrap.b32 	%r10298, %r10295, %r10296, 1;
	mov.b64 	%rd14512, {%r10298, %r10297};
	xor.b64  	%rd14513, %rd14512, %rd14493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10299}, %rd14505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10300,%dummy}, %rd14505;
	}
	shf.l.wrap.b32 	%r10301, %r10300, %r10299, 1;
	shf.l.wrap.b32 	%r10302, %r10299, %r10300, 1;
	mov.b64 	%rd14514, {%r10302, %r10301};
	xor.b64  	%rd14515, %rd14514, %rd14497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10303}, %rd14509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10304,%dummy}, %rd14509;
	}
	shf.l.wrap.b32 	%r10305, %r10304, %r10303, 1;
	shf.l.wrap.b32 	%r10306, %r10303, %r10304, 1;
	mov.b64 	%rd14516, {%r10306, %r10305};
	xor.b64  	%rd14517, %rd14516, %rd14501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10307}, %rd14493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10308,%dummy}, %rd14493;
	}
	shf.l.wrap.b32 	%r10309, %r10308, %r10307, 1;
	shf.l.wrap.b32 	%r10310, %r10307, %r10308, 1;
	mov.b64 	%rd14518, {%r10310, %r10309};
	xor.b64  	%rd14519, %rd14505, %rd14518;
	xor.b64  	%rd14520, %rd14511, %rd14489;
	xor.b64  	%rd14521, %rd14513, %rd14419;
	xor.b64  	%rd14522, %rd14515, %rd14422;
	xor.b64  	%rd14523, %rd14517, %rd14425;
	xor.b64  	%rd14524, %rd14519, %rd14428;
	xor.b64  	%rd14525, %rd14511, %rd14431;
	xor.b64  	%rd14526, %rd14513, %rd14434;
	xor.b64  	%rd14527, %rd14515, %rd14437;
	xor.b64  	%rd14528, %rd14517, %rd14440;
	xor.b64  	%rd14529, %rd14519, %rd14443;
	xor.b64  	%rd14530, %rd14511, %rd14446;
	xor.b64  	%rd14531, %rd14513, %rd14449;
	xor.b64  	%rd14532, %rd14515, %rd14452;
	xor.b64  	%rd14533, %rd14517, %rd14455;
	xor.b64  	%rd14534, %rd14519, %rd14458;
	xor.b64  	%rd14535, %rd14511, %rd14461;
	xor.b64  	%rd14536, %rd14513, %rd14464;
	xor.b64  	%rd14537, %rd14515, %rd14467;
	xor.b64  	%rd14538, %rd14517, %rd14470;
	xor.b64  	%rd14539, %rd14519, %rd14473;
	xor.b64  	%rd14540, %rd14511, %rd14476;
	xor.b64  	%rd14541, %rd14513, %rd14479;
	xor.b64  	%rd14542, %rd14515, %rd14482;
	xor.b64  	%rd14543, %rd14517, %rd14485;
	xor.b64  	%rd14544, %rd14519, %rd14488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10311,%dummy}, %rd14526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10312}, %rd14526;
	}
	shf.r.wrap.b32 	%r10313, %r10312, %r10311, 20;
	shf.r.wrap.b32 	%r10314, %r10311, %r10312, 20;
	mov.b64 	%rd14545, {%r10314, %r10313};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10315,%dummy}, %rd14532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10316}, %rd14532;
	}
	shf.r.wrap.b32 	%r10317, %r10316, %r10315, 21;
	shf.r.wrap.b32 	%r10318, %r10315, %r10316, 21;
	mov.b64 	%rd14546, {%r10318, %r10317};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10319}, %rd14538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10320,%dummy}, %rd14538;
	}
	shf.l.wrap.b32 	%r10321, %r10320, %r10319, 21;
	shf.l.wrap.b32 	%r10322, %r10319, %r10320, 21;
	mov.b64 	%rd14547, {%r10322, %r10321};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10323}, %rd14544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10324,%dummy}, %rd14544;
	}
	shf.l.wrap.b32 	%r10325, %r10324, %r10323, 14;
	shf.l.wrap.b32 	%r10326, %r10323, %r10324, 14;
	mov.b64 	%rd14548, {%r10326, %r10325};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10327}, %rd14523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10328,%dummy}, %rd14523;
	}
	shf.l.wrap.b32 	%r10329, %r10328, %r10327, 28;
	shf.l.wrap.b32 	%r10330, %r10327, %r10328, 28;
	mov.b64 	%rd14549, {%r10330, %r10329};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10331}, %rd14529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10332,%dummy}, %rd14529;
	}
	shf.l.wrap.b32 	%r10333, %r10332, %r10331, 20;
	shf.l.wrap.b32 	%r10334, %r10331, %r10332, 20;
	mov.b64 	%rd14550, {%r10334, %r10333};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10335}, %rd14530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10336,%dummy}, %rd14530;
	}
	shf.l.wrap.b32 	%r10337, %r10336, %r10335, 3;
	shf.l.wrap.b32 	%r10338, %r10335, %r10336, 3;
	mov.b64 	%rd14551, {%r10338, %r10337};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10339,%dummy}, %rd14536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10340}, %rd14536;
	}
	shf.r.wrap.b32 	%r10341, %r10340, %r10339, 19;
	shf.r.wrap.b32 	%r10342, %r10339, %r10340, 19;
	mov.b64 	%rd14552, {%r10342, %r10341};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10343,%dummy}, %rd14542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10344}, %rd14542;
	}
	shf.r.wrap.b32 	%r10345, %r10344, %r10343, 3;
	shf.r.wrap.b32 	%r10346, %r10343, %r10344, 3;
	mov.b64 	%rd14553, {%r10346, %r10345};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10347}, %rd14521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10348,%dummy}, %rd14521;
	}
	shf.l.wrap.b32 	%r10349, %r10348, %r10347, 1;
	shf.l.wrap.b32 	%r10350, %r10347, %r10348, 1;
	mov.b64 	%rd14554, {%r10350, %r10349};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10351}, %rd14527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10352,%dummy}, %rd14527;
	}
	shf.l.wrap.b32 	%r10353, %r10352, %r10351, 6;
	shf.l.wrap.b32 	%r10354, %r10351, %r10352, 6;
	mov.b64 	%rd14555, {%r10354, %r10353};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10355}, %rd14533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10356,%dummy}, %rd14533;
	}
	shf.l.wrap.b32 	%r10357, %r10356, %r10355, 25;
	shf.l.wrap.b32 	%r10358, %r10355, %r10356, 25;
	mov.b64 	%rd14556, {%r10358, %r10357};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10359}, %rd14539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10360,%dummy}, %rd14539;
	}
	shf.l.wrap.b32 	%r10361, %r10360, %r10359, 8;
	shf.l.wrap.b32 	%r10362, %r10359, %r10360, 8;
	mov.b64 	%rd14557, {%r10362, %r10361};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10363}, %rd14540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10364,%dummy}, %rd14540;
	}
	shf.l.wrap.b32 	%r10365, %r10364, %r10363, 18;
	shf.l.wrap.b32 	%r10366, %r10363, %r10364, 18;
	mov.b64 	%rd14558, {%r10366, %r10365};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10367}, %rd14524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10368,%dummy}, %rd14524;
	}
	shf.l.wrap.b32 	%r10369, %r10368, %r10367, 27;
	shf.l.wrap.b32 	%r10370, %r10367, %r10368, 27;
	mov.b64 	%rd14559, {%r10370, %r10369};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10371,%dummy}, %rd14525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10372}, %rd14525;
	}
	shf.r.wrap.b32 	%r10373, %r10372, %r10371, 28;
	shf.r.wrap.b32 	%r10374, %r10371, %r10372, 28;
	mov.b64 	%rd14560, {%r10374, %r10373};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10375}, %rd14531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10376,%dummy}, %rd14531;
	}
	shf.l.wrap.b32 	%r10377, %r10376, %r10375, 10;
	shf.l.wrap.b32 	%r10378, %r10375, %r10376, 10;
	mov.b64 	%rd14561, {%r10378, %r10377};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10379}, %rd14537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10380,%dummy}, %rd14537;
	}
	shf.l.wrap.b32 	%r10381, %r10380, %r10379, 15;
	shf.l.wrap.b32 	%r10382, %r10379, %r10380, 15;
	mov.b64 	%rd14562, {%r10382, %r10381};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10383,%dummy}, %rd14543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10384}, %rd14543;
	}
	shf.r.wrap.b32 	%r10385, %r10384, %r10383, 8;
	shf.r.wrap.b32 	%r10386, %r10383, %r10384, 8;
	mov.b64 	%rd14563, {%r10386, %r10385};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10387,%dummy}, %rd14522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10388}, %rd14522;
	}
	shf.r.wrap.b32 	%r10389, %r10388, %r10387, 2;
	shf.r.wrap.b32 	%r10390, %r10387, %r10388, 2;
	mov.b64 	%rd14564, {%r10390, %r10389};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10391,%dummy}, %rd14528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10392}, %rd14528;
	}
	shf.r.wrap.b32 	%r10393, %r10392, %r10391, 9;
	shf.r.wrap.b32 	%r10394, %r10391, %r10392, 9;
	mov.b64 	%rd14565, {%r10394, %r10393};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10395,%dummy}, %rd14534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10396}, %rd14534;
	}
	shf.r.wrap.b32 	%r10397, %r10396, %r10395, 25;
	shf.r.wrap.b32 	%r10398, %r10395, %r10396, 25;
	mov.b64 	%rd14566, {%r10398, %r10397};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10399,%dummy}, %rd14535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10400}, %rd14535;
	}
	shf.r.wrap.b32 	%r10401, %r10400, %r10399, 23;
	shf.r.wrap.b32 	%r10402, %r10399, %r10400, 23;
	mov.b64 	%rd14567, {%r10402, %r10401};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10403}, %rd14541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10404,%dummy}, %rd14541;
	}
	shf.l.wrap.b32 	%r10405, %r10404, %r10403, 2;
	shf.l.wrap.b32 	%r10406, %r10403, %r10404, 2;
	mov.b64 	%rd14568, {%r10406, %r10405};
	not.b64 	%rd14569, %rd14545;
	and.b64  	%rd14570, %rd14546, %rd14569;
	xor.b64  	%rd14571, %rd14570, %rd14520;
	not.b64 	%rd14572, %rd14546;
	and.b64  	%rd14573, %rd14547, %rd14572;
	xor.b64  	%rd14574, %rd14573, %rd14545;
	not.b64 	%rd14575, %rd14547;
	and.b64  	%rd14576, %rd14548, %rd14575;
	xor.b64  	%rd14577, %rd14576, %rd14546;
	not.b64 	%rd14578, %rd14548;
	and.b64  	%rd14579, %rd14520, %rd14578;
	xor.b64  	%rd14580, %rd14579, %rd14547;
	not.b64 	%rd14581, %rd14520;
	and.b64  	%rd14582, %rd14545, %rd14581;
	xor.b64  	%rd14583, %rd14582, %rd14548;
	not.b64 	%rd14584, %rd14550;
	and.b64  	%rd14585, %rd14551, %rd14584;
	xor.b64  	%rd14586, %rd14585, %rd14549;
	not.b64 	%rd14587, %rd14551;
	and.b64  	%rd14588, %rd14552, %rd14587;
	xor.b64  	%rd14589, %rd14588, %rd14550;
	not.b64 	%rd14590, %rd14552;
	and.b64  	%rd14591, %rd14553, %rd14590;
	xor.b64  	%rd14592, %rd14591, %rd14551;
	not.b64 	%rd14593, %rd14553;
	and.b64  	%rd14594, %rd14549, %rd14593;
	xor.b64  	%rd14595, %rd14594, %rd14552;
	not.b64 	%rd14596, %rd14549;
	and.b64  	%rd14597, %rd14550, %rd14596;
	xor.b64  	%rd14598, %rd14597, %rd14553;
	not.b64 	%rd14599, %rd14555;
	and.b64  	%rd14600, %rd14556, %rd14599;
	xor.b64  	%rd14601, %rd14600, %rd14554;
	not.b64 	%rd14602, %rd14556;
	and.b64  	%rd14603, %rd14557, %rd14602;
	xor.b64  	%rd14604, %rd14603, %rd14555;
	not.b64 	%rd14605, %rd14557;
	and.b64  	%rd14606, %rd14558, %rd14605;
	xor.b64  	%rd14607, %rd14606, %rd14556;
	not.b64 	%rd14608, %rd14558;
	and.b64  	%rd14609, %rd14554, %rd14608;
	xor.b64  	%rd14610, %rd14609, %rd14557;
	not.b64 	%rd14611, %rd14554;
	and.b64  	%rd14612, %rd14555, %rd14611;
	xor.b64  	%rd14613, %rd14612, %rd14558;
	not.b64 	%rd14614, %rd14560;
	and.b64  	%rd14615, %rd14561, %rd14614;
	xor.b64  	%rd14616, %rd14615, %rd14559;
	not.b64 	%rd14617, %rd14561;
	and.b64  	%rd14618, %rd14562, %rd14617;
	xor.b64  	%rd14619, %rd14618, %rd14560;
	not.b64 	%rd14620, %rd14562;
	and.b64  	%rd14621, %rd14563, %rd14620;
	xor.b64  	%rd14622, %rd14621, %rd14561;
	not.b64 	%rd14623, %rd14563;
	and.b64  	%rd14624, %rd14559, %rd14623;
	xor.b64  	%rd14625, %rd14624, %rd14562;
	not.b64 	%rd14626, %rd14559;
	and.b64  	%rd14627, %rd14560, %rd14626;
	xor.b64  	%rd14628, %rd14627, %rd14563;
	not.b64 	%rd14629, %rd14565;
	and.b64  	%rd14630, %rd14566, %rd14629;
	xor.b64  	%rd14631, %rd14630, %rd14564;
	not.b64 	%rd14632, %rd14566;
	and.b64  	%rd14633, %rd14567, %rd14632;
	xor.b64  	%rd14634, %rd14633, %rd14565;
	not.b64 	%rd14635, %rd14567;
	and.b64  	%rd14636, %rd14568, %rd14635;
	xor.b64  	%rd14637, %rd14636, %rd14566;
	not.b64 	%rd14638, %rd14568;
	and.b64  	%rd14639, %rd14564, %rd14638;
	xor.b64  	%rd14640, %rd14639, %rd14567;
	not.b64 	%rd14641, %rd14564;
	and.b64  	%rd14642, %rd14565, %rd14641;
	xor.b64  	%rd14643, %rd14642, %rd14568;
	xor.b64  	%rd14644, %rd14571, %rd32;
	xor.b64  	%rd14645, %rd14586, %rd14644;
	xor.b64  	%rd14646, %rd14645, %rd14601;
	xor.b64  	%rd14647, %rd14646, %rd14616;
	xor.b64  	%rd14648, %rd14647, %rd14631;
	xor.b64  	%rd14649, %rd14589, %rd14574;
	xor.b64  	%rd14650, %rd14649, %rd14604;
	xor.b64  	%rd14651, %rd14650, %rd14619;
	xor.b64  	%rd14652, %rd14651, %rd14634;
	xor.b64  	%rd14653, %rd14592, %rd14577;
	xor.b64  	%rd14654, %rd14653, %rd14607;
	xor.b64  	%rd14655, %rd14654, %rd14622;
	xor.b64  	%rd14656, %rd14655, %rd14637;
	xor.b64  	%rd14657, %rd14595, %rd14580;
	xor.b64  	%rd14658, %rd14657, %rd14610;
	xor.b64  	%rd14659, %rd14658, %rd14625;
	xor.b64  	%rd14660, %rd14659, %rd14640;
	xor.b64  	%rd14661, %rd14598, %rd14583;
	xor.b64  	%rd14662, %rd14661, %rd14613;
	xor.b64  	%rd14663, %rd14662, %rd14628;
	xor.b64  	%rd14664, %rd14663, %rd14643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10407}, %rd14652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10408,%dummy}, %rd14652;
	}
	shf.l.wrap.b32 	%r10409, %r10408, %r10407, 1;
	shf.l.wrap.b32 	%r10410, %r10407, %r10408, 1;
	mov.b64 	%rd14665, {%r10410, %r10409};
	xor.b64  	%rd14666, %rd14664, %rd14665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10411}, %rd14656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10412,%dummy}, %rd14656;
	}
	shf.l.wrap.b32 	%r10413, %r10412, %r10411, 1;
	shf.l.wrap.b32 	%r10414, %r10411, %r10412, 1;
	mov.b64 	%rd14667, {%r10414, %r10413};
	xor.b64  	%rd14668, %rd14667, %rd14648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10415}, %rd14660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10416,%dummy}, %rd14660;
	}
	shf.l.wrap.b32 	%r10417, %r10416, %r10415, 1;
	shf.l.wrap.b32 	%r10418, %r10415, %r10416, 1;
	mov.b64 	%rd14669, {%r10418, %r10417};
	xor.b64  	%rd14670, %rd14669, %rd14652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10419}, %rd14664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10420,%dummy}, %rd14664;
	}
	shf.l.wrap.b32 	%r10421, %r10420, %r10419, 1;
	shf.l.wrap.b32 	%r10422, %r10419, %r10420, 1;
	mov.b64 	%rd14671, {%r10422, %r10421};
	xor.b64  	%rd14672, %rd14671, %rd14656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10423}, %rd14648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10424,%dummy}, %rd14648;
	}
	shf.l.wrap.b32 	%r10425, %r10424, %r10423, 1;
	shf.l.wrap.b32 	%r10426, %r10423, %r10424, 1;
	mov.b64 	%rd14673, {%r10426, %r10425};
	xor.b64  	%rd14674, %rd14660, %rd14673;
	xor.b64  	%rd14675, %rd14666, %rd14644;
	xor.b64  	%rd14676, %rd14668, %rd14574;
	xor.b64  	%rd14677, %rd14670, %rd14577;
	xor.b64  	%rd14678, %rd14672, %rd14580;
	xor.b64  	%rd14679, %rd14674, %rd14583;
	xor.b64  	%rd14680, %rd14666, %rd14586;
	xor.b64  	%rd14681, %rd14668, %rd14589;
	xor.b64  	%rd14682, %rd14670, %rd14592;
	xor.b64  	%rd14683, %rd14672, %rd14595;
	xor.b64  	%rd14684, %rd14674, %rd14598;
	xor.b64  	%rd14685, %rd14666, %rd14601;
	xor.b64  	%rd14686, %rd14668, %rd14604;
	xor.b64  	%rd14687, %rd14670, %rd14607;
	xor.b64  	%rd14688, %rd14672, %rd14610;
	xor.b64  	%rd14689, %rd14674, %rd14613;
	xor.b64  	%rd14690, %rd14666, %rd14616;
	xor.b64  	%rd14691, %rd14668, %rd14619;
	xor.b64  	%rd14692, %rd14670, %rd14622;
	xor.b64  	%rd14693, %rd14672, %rd14625;
	xor.b64  	%rd14694, %rd14674, %rd14628;
	xor.b64  	%rd14695, %rd14666, %rd14631;
	xor.b64  	%rd14696, %rd14668, %rd14634;
	xor.b64  	%rd14697, %rd14670, %rd14637;
	xor.b64  	%rd14698, %rd14672, %rd14640;
	xor.b64  	%rd14699, %rd14674, %rd14643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10427,%dummy}, %rd14681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10428}, %rd14681;
	}
	shf.r.wrap.b32 	%r10429, %r10428, %r10427, 20;
	shf.r.wrap.b32 	%r10430, %r10427, %r10428, 20;
	mov.b64 	%rd14700, {%r10430, %r10429};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10431,%dummy}, %rd14687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10432}, %rd14687;
	}
	shf.r.wrap.b32 	%r10433, %r10432, %r10431, 21;
	shf.r.wrap.b32 	%r10434, %r10431, %r10432, 21;
	mov.b64 	%rd14701, {%r10434, %r10433};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10435}, %rd14693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10436,%dummy}, %rd14693;
	}
	shf.l.wrap.b32 	%r10437, %r10436, %r10435, 21;
	shf.l.wrap.b32 	%r10438, %r10435, %r10436, 21;
	mov.b64 	%rd14702, {%r10438, %r10437};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10439}, %rd14699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10440,%dummy}, %rd14699;
	}
	shf.l.wrap.b32 	%r10441, %r10440, %r10439, 14;
	shf.l.wrap.b32 	%r10442, %r10439, %r10440, 14;
	mov.b64 	%rd14703, {%r10442, %r10441};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10443}, %rd14678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10444,%dummy}, %rd14678;
	}
	shf.l.wrap.b32 	%r10445, %r10444, %r10443, 28;
	shf.l.wrap.b32 	%r10446, %r10443, %r10444, 28;
	mov.b64 	%rd14704, {%r10446, %r10445};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10447}, %rd14684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10448,%dummy}, %rd14684;
	}
	shf.l.wrap.b32 	%r10449, %r10448, %r10447, 20;
	shf.l.wrap.b32 	%r10450, %r10447, %r10448, 20;
	mov.b64 	%rd14705, {%r10450, %r10449};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10451}, %rd14685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10452,%dummy}, %rd14685;
	}
	shf.l.wrap.b32 	%r10453, %r10452, %r10451, 3;
	shf.l.wrap.b32 	%r10454, %r10451, %r10452, 3;
	mov.b64 	%rd14706, {%r10454, %r10453};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10455,%dummy}, %rd14691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10456}, %rd14691;
	}
	shf.r.wrap.b32 	%r10457, %r10456, %r10455, 19;
	shf.r.wrap.b32 	%r10458, %r10455, %r10456, 19;
	mov.b64 	%rd14707, {%r10458, %r10457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10459,%dummy}, %rd14697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10460}, %rd14697;
	}
	shf.r.wrap.b32 	%r10461, %r10460, %r10459, 3;
	shf.r.wrap.b32 	%r10462, %r10459, %r10460, 3;
	mov.b64 	%rd14708, {%r10462, %r10461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10463}, %rd14676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10464,%dummy}, %rd14676;
	}
	shf.l.wrap.b32 	%r10465, %r10464, %r10463, 1;
	shf.l.wrap.b32 	%r10466, %r10463, %r10464, 1;
	mov.b64 	%rd14709, {%r10466, %r10465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10467}, %rd14682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10468,%dummy}, %rd14682;
	}
	shf.l.wrap.b32 	%r10469, %r10468, %r10467, 6;
	shf.l.wrap.b32 	%r10470, %r10467, %r10468, 6;
	mov.b64 	%rd14710, {%r10470, %r10469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10471}, %rd14688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10472,%dummy}, %rd14688;
	}
	shf.l.wrap.b32 	%r10473, %r10472, %r10471, 25;
	shf.l.wrap.b32 	%r10474, %r10471, %r10472, 25;
	mov.b64 	%rd14711, {%r10474, %r10473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10475}, %rd14694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10476,%dummy}, %rd14694;
	}
	shf.l.wrap.b32 	%r10477, %r10476, %r10475, 8;
	shf.l.wrap.b32 	%r10478, %r10475, %r10476, 8;
	mov.b64 	%rd14712, {%r10478, %r10477};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10479}, %rd14695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10480,%dummy}, %rd14695;
	}
	shf.l.wrap.b32 	%r10481, %r10480, %r10479, 18;
	shf.l.wrap.b32 	%r10482, %r10479, %r10480, 18;
	mov.b64 	%rd14713, {%r10482, %r10481};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10483}, %rd14679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10484,%dummy}, %rd14679;
	}
	shf.l.wrap.b32 	%r10485, %r10484, %r10483, 27;
	shf.l.wrap.b32 	%r10486, %r10483, %r10484, 27;
	mov.b64 	%rd14714, {%r10486, %r10485};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10487,%dummy}, %rd14680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10488}, %rd14680;
	}
	shf.r.wrap.b32 	%r10489, %r10488, %r10487, 28;
	shf.r.wrap.b32 	%r10490, %r10487, %r10488, 28;
	mov.b64 	%rd14715, {%r10490, %r10489};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10491}, %rd14686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10492,%dummy}, %rd14686;
	}
	shf.l.wrap.b32 	%r10493, %r10492, %r10491, 10;
	shf.l.wrap.b32 	%r10494, %r10491, %r10492, 10;
	mov.b64 	%rd14716, {%r10494, %r10493};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10495}, %rd14692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10496,%dummy}, %rd14692;
	}
	shf.l.wrap.b32 	%r10497, %r10496, %r10495, 15;
	shf.l.wrap.b32 	%r10498, %r10495, %r10496, 15;
	mov.b64 	%rd14717, {%r10498, %r10497};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10499,%dummy}, %rd14698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10500}, %rd14698;
	}
	shf.r.wrap.b32 	%r10501, %r10500, %r10499, 8;
	shf.r.wrap.b32 	%r10502, %r10499, %r10500, 8;
	mov.b64 	%rd14718, {%r10502, %r10501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10503,%dummy}, %rd14677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10504}, %rd14677;
	}
	shf.r.wrap.b32 	%r10505, %r10504, %r10503, 2;
	shf.r.wrap.b32 	%r10506, %r10503, %r10504, 2;
	mov.b64 	%rd14719, {%r10506, %r10505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10507,%dummy}, %rd14683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10508}, %rd14683;
	}
	shf.r.wrap.b32 	%r10509, %r10508, %r10507, 9;
	shf.r.wrap.b32 	%r10510, %r10507, %r10508, 9;
	mov.b64 	%rd14720, {%r10510, %r10509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10511,%dummy}, %rd14689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10512}, %rd14689;
	}
	shf.r.wrap.b32 	%r10513, %r10512, %r10511, 25;
	shf.r.wrap.b32 	%r10514, %r10511, %r10512, 25;
	mov.b64 	%rd14721, {%r10514, %r10513};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10515,%dummy}, %rd14690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10516}, %rd14690;
	}
	shf.r.wrap.b32 	%r10517, %r10516, %r10515, 23;
	shf.r.wrap.b32 	%r10518, %r10515, %r10516, 23;
	mov.b64 	%rd14722, {%r10518, %r10517};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10519}, %rd14696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10520,%dummy}, %rd14696;
	}
	shf.l.wrap.b32 	%r10521, %r10520, %r10519, 2;
	shf.l.wrap.b32 	%r10522, %r10519, %r10520, 2;
	mov.b64 	%rd14723, {%r10522, %r10521};
	not.b64 	%rd14724, %rd14700;
	and.b64  	%rd14725, %rd14701, %rd14724;
	xor.b64  	%rd14726, %rd14725, %rd14675;
	not.b64 	%rd14727, %rd14701;
	and.b64  	%rd14728, %rd14702, %rd14727;
	xor.b64  	%rd14729, %rd14728, %rd14700;
	not.b64 	%rd14730, %rd14702;
	and.b64  	%rd14731, %rd14703, %rd14730;
	xor.b64  	%rd14732, %rd14731, %rd14701;
	not.b64 	%rd14733, %rd14703;
	and.b64  	%rd14734, %rd14675, %rd14733;
	xor.b64  	%rd14735, %rd14734, %rd14702;
	not.b64 	%rd14736, %rd14675;
	and.b64  	%rd14737, %rd14700, %rd14736;
	xor.b64  	%rd14738, %rd14737, %rd14703;
	not.b64 	%rd14739, %rd14705;
	and.b64  	%rd14740, %rd14706, %rd14739;
	xor.b64  	%rd14741, %rd14740, %rd14704;
	not.b64 	%rd14742, %rd14706;
	and.b64  	%rd14743, %rd14707, %rd14742;
	xor.b64  	%rd14744, %rd14743, %rd14705;
	not.b64 	%rd14745, %rd14707;
	and.b64  	%rd14746, %rd14708, %rd14745;
	xor.b64  	%rd14747, %rd14746, %rd14706;
	not.b64 	%rd14748, %rd14708;
	and.b64  	%rd14749, %rd14704, %rd14748;
	xor.b64  	%rd14750, %rd14749, %rd14707;
	not.b64 	%rd14751, %rd14704;
	and.b64  	%rd14752, %rd14705, %rd14751;
	xor.b64  	%rd14753, %rd14752, %rd14708;
	not.b64 	%rd14754, %rd14710;
	and.b64  	%rd14755, %rd14711, %rd14754;
	xor.b64  	%rd14756, %rd14755, %rd14709;
	not.b64 	%rd14757, %rd14711;
	and.b64  	%rd14758, %rd14712, %rd14757;
	xor.b64  	%rd14759, %rd14758, %rd14710;
	not.b64 	%rd14760, %rd14712;
	and.b64  	%rd14761, %rd14713, %rd14760;
	xor.b64  	%rd14762, %rd14761, %rd14711;
	not.b64 	%rd14763, %rd14713;
	and.b64  	%rd14764, %rd14709, %rd14763;
	xor.b64  	%rd14765, %rd14764, %rd14712;
	not.b64 	%rd14766, %rd14709;
	and.b64  	%rd14767, %rd14710, %rd14766;
	xor.b64  	%rd14768, %rd14767, %rd14713;
	not.b64 	%rd14769, %rd14715;
	and.b64  	%rd14770, %rd14716, %rd14769;
	xor.b64  	%rd14771, %rd14770, %rd14714;
	not.b64 	%rd14772, %rd14716;
	and.b64  	%rd14773, %rd14717, %rd14772;
	xor.b64  	%rd14774, %rd14773, %rd14715;
	not.b64 	%rd14775, %rd14717;
	and.b64  	%rd14776, %rd14718, %rd14775;
	xor.b64  	%rd14777, %rd14776, %rd14716;
	not.b64 	%rd14778, %rd14718;
	and.b64  	%rd14779, %rd14714, %rd14778;
	xor.b64  	%rd14780, %rd14779, %rd14717;
	not.b64 	%rd14781, %rd14714;
	and.b64  	%rd14782, %rd14715, %rd14781;
	xor.b64  	%rd14783, %rd14782, %rd14718;
	not.b64 	%rd14784, %rd14720;
	and.b64  	%rd14785, %rd14721, %rd14784;
	xor.b64  	%rd14786, %rd14785, %rd14719;
	not.b64 	%rd14787, %rd14721;
	and.b64  	%rd14788, %rd14722, %rd14787;
	xor.b64  	%rd14789, %rd14788, %rd14720;
	not.b64 	%rd14790, %rd14722;
	and.b64  	%rd14791, %rd14723, %rd14790;
	xor.b64  	%rd14792, %rd14791, %rd14721;
	not.b64 	%rd14793, %rd14723;
	and.b64  	%rd14794, %rd14719, %rd14793;
	xor.b64  	%rd14795, %rd14794, %rd14722;
	not.b64 	%rd14796, %rd14719;
	and.b64  	%rd14797, %rd14720, %rd14796;
	xor.b64  	%rd14798, %rd14797, %rd14723;
	xor.b64  	%rd14799, %rd14726, %rd33;
	xor.b64  	%rd14800, %rd14741, %rd14799;
	xor.b64  	%rd14801, %rd14800, %rd14756;
	xor.b64  	%rd14802, %rd14801, %rd14771;
	xor.b64  	%rd14803, %rd14802, %rd14786;
	xor.b64  	%rd14804, %rd14744, %rd14729;
	xor.b64  	%rd14805, %rd14804, %rd14759;
	xor.b64  	%rd14806, %rd14805, %rd14774;
	xor.b64  	%rd14807, %rd14806, %rd14789;
	xor.b64  	%rd14808, %rd14747, %rd14732;
	xor.b64  	%rd14809, %rd14808, %rd14762;
	xor.b64  	%rd14810, %rd14809, %rd14777;
	xor.b64  	%rd14811, %rd14810, %rd14792;
	xor.b64  	%rd14812, %rd14750, %rd14735;
	xor.b64  	%rd14813, %rd14812, %rd14765;
	xor.b64  	%rd14814, %rd14813, %rd14780;
	xor.b64  	%rd14815, %rd14814, %rd14795;
	xor.b64  	%rd14816, %rd14753, %rd14738;
	xor.b64  	%rd14817, %rd14816, %rd14768;
	xor.b64  	%rd14818, %rd14817, %rd14783;
	xor.b64  	%rd14819, %rd14818, %rd14798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10523}, %rd14807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10524,%dummy}, %rd14807;
	}
	shf.l.wrap.b32 	%r10525, %r10524, %r10523, 1;
	shf.l.wrap.b32 	%r10526, %r10523, %r10524, 1;
	mov.b64 	%rd14820, {%r10526, %r10525};
	xor.b64  	%rd14821, %rd14819, %rd14820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10527}, %rd14811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10528,%dummy}, %rd14811;
	}
	shf.l.wrap.b32 	%r10529, %r10528, %r10527, 1;
	shf.l.wrap.b32 	%r10530, %r10527, %r10528, 1;
	mov.b64 	%rd14822, {%r10530, %r10529};
	xor.b64  	%rd14823, %rd14822, %rd14803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10531}, %rd14815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10532,%dummy}, %rd14815;
	}
	shf.l.wrap.b32 	%r10533, %r10532, %r10531, 1;
	shf.l.wrap.b32 	%r10534, %r10531, %r10532, 1;
	mov.b64 	%rd14824, {%r10534, %r10533};
	xor.b64  	%rd14825, %rd14824, %rd14807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10535}, %rd14819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10536,%dummy}, %rd14819;
	}
	shf.l.wrap.b32 	%r10537, %r10536, %r10535, 1;
	shf.l.wrap.b32 	%r10538, %r10535, %r10536, 1;
	mov.b64 	%rd14826, {%r10538, %r10537};
	xor.b64  	%rd14827, %rd14826, %rd14811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10539}, %rd14803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10540,%dummy}, %rd14803;
	}
	shf.l.wrap.b32 	%r10541, %r10540, %r10539, 1;
	shf.l.wrap.b32 	%r10542, %r10539, %r10540, 1;
	mov.b64 	%rd14828, {%r10542, %r10541};
	xor.b64  	%rd14829, %rd14815, %rd14828;
	xor.b64  	%rd14830, %rd14821, %rd14799;
	xor.b64  	%rd14831, %rd14823, %rd14729;
	xor.b64  	%rd14832, %rd14825, %rd14732;
	xor.b64  	%rd14833, %rd14827, %rd14735;
	xor.b64  	%rd14834, %rd14829, %rd14738;
	xor.b64  	%rd14835, %rd14821, %rd14741;
	xor.b64  	%rd14836, %rd14823, %rd14744;
	xor.b64  	%rd14837, %rd14825, %rd14747;
	xor.b64  	%rd14838, %rd14827, %rd14750;
	xor.b64  	%rd14839, %rd14829, %rd14753;
	xor.b64  	%rd14840, %rd14821, %rd14756;
	xor.b64  	%rd14841, %rd14823, %rd14759;
	xor.b64  	%rd14842, %rd14825, %rd14762;
	xor.b64  	%rd14843, %rd14827, %rd14765;
	xor.b64  	%rd14844, %rd14829, %rd14768;
	xor.b64  	%rd14845, %rd14821, %rd14771;
	xor.b64  	%rd14846, %rd14823, %rd14774;
	xor.b64  	%rd14847, %rd14825, %rd14777;
	xor.b64  	%rd14848, %rd14827, %rd14780;
	xor.b64  	%rd14849, %rd14829, %rd14783;
	xor.b64  	%rd14850, %rd14821, %rd14786;
	xor.b64  	%rd14851, %rd14823, %rd14789;
	xor.b64  	%rd14852, %rd14825, %rd14792;
	xor.b64  	%rd14853, %rd14827, %rd14795;
	xor.b64  	%rd14854, %rd14829, %rd14798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10543,%dummy}, %rd14836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10544}, %rd14836;
	}
	shf.r.wrap.b32 	%r10545, %r10544, %r10543, 20;
	shf.r.wrap.b32 	%r10546, %r10543, %r10544, 20;
	mov.b64 	%rd14855, {%r10546, %r10545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10547,%dummy}, %rd14842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10548}, %rd14842;
	}
	shf.r.wrap.b32 	%r10549, %r10548, %r10547, 21;
	shf.r.wrap.b32 	%r10550, %r10547, %r10548, 21;
	mov.b64 	%rd14856, {%r10550, %r10549};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10551}, %rd14848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10552,%dummy}, %rd14848;
	}
	shf.l.wrap.b32 	%r10553, %r10552, %r10551, 21;
	shf.l.wrap.b32 	%r10554, %r10551, %r10552, 21;
	mov.b64 	%rd14857, {%r10554, %r10553};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10555}, %rd14854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10556,%dummy}, %rd14854;
	}
	shf.l.wrap.b32 	%r10557, %r10556, %r10555, 14;
	shf.l.wrap.b32 	%r10558, %r10555, %r10556, 14;
	mov.b64 	%rd14858, {%r10558, %r10557};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10559}, %rd14833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10560,%dummy}, %rd14833;
	}
	shf.l.wrap.b32 	%r10561, %r10560, %r10559, 28;
	shf.l.wrap.b32 	%r10562, %r10559, %r10560, 28;
	mov.b64 	%rd14859, {%r10562, %r10561};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10563}, %rd14839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10564,%dummy}, %rd14839;
	}
	shf.l.wrap.b32 	%r10565, %r10564, %r10563, 20;
	shf.l.wrap.b32 	%r10566, %r10563, %r10564, 20;
	mov.b64 	%rd14860, {%r10566, %r10565};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10567}, %rd14840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10568,%dummy}, %rd14840;
	}
	shf.l.wrap.b32 	%r10569, %r10568, %r10567, 3;
	shf.l.wrap.b32 	%r10570, %r10567, %r10568, 3;
	mov.b64 	%rd14861, {%r10570, %r10569};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10571,%dummy}, %rd14846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10572}, %rd14846;
	}
	shf.r.wrap.b32 	%r10573, %r10572, %r10571, 19;
	shf.r.wrap.b32 	%r10574, %r10571, %r10572, 19;
	mov.b64 	%rd14862, {%r10574, %r10573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10575,%dummy}, %rd14852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10576}, %rd14852;
	}
	shf.r.wrap.b32 	%r10577, %r10576, %r10575, 3;
	shf.r.wrap.b32 	%r10578, %r10575, %r10576, 3;
	mov.b64 	%rd14863, {%r10578, %r10577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10579}, %rd14831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10580,%dummy}, %rd14831;
	}
	shf.l.wrap.b32 	%r10581, %r10580, %r10579, 1;
	shf.l.wrap.b32 	%r10582, %r10579, %r10580, 1;
	mov.b64 	%rd14864, {%r10582, %r10581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10583}, %rd14837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10584,%dummy}, %rd14837;
	}
	shf.l.wrap.b32 	%r10585, %r10584, %r10583, 6;
	shf.l.wrap.b32 	%r10586, %r10583, %r10584, 6;
	mov.b64 	%rd14865, {%r10586, %r10585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10587}, %rd14843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10588,%dummy}, %rd14843;
	}
	shf.l.wrap.b32 	%r10589, %r10588, %r10587, 25;
	shf.l.wrap.b32 	%r10590, %r10587, %r10588, 25;
	mov.b64 	%rd14866, {%r10590, %r10589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10591}, %rd14849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10592,%dummy}, %rd14849;
	}
	shf.l.wrap.b32 	%r10593, %r10592, %r10591, 8;
	shf.l.wrap.b32 	%r10594, %r10591, %r10592, 8;
	mov.b64 	%rd14867, {%r10594, %r10593};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10595}, %rd14850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10596,%dummy}, %rd14850;
	}
	shf.l.wrap.b32 	%r10597, %r10596, %r10595, 18;
	shf.l.wrap.b32 	%r10598, %r10595, %r10596, 18;
	mov.b64 	%rd14868, {%r10598, %r10597};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd14834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10600,%dummy}, %rd14834;
	}
	shf.l.wrap.b32 	%r10601, %r10600, %r10599, 27;
	shf.l.wrap.b32 	%r10602, %r10599, %r10600, 27;
	mov.b64 	%rd14869, {%r10602, %r10601};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10603,%dummy}, %rd14835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10604}, %rd14835;
	}
	shf.r.wrap.b32 	%r10605, %r10604, %r10603, 28;
	shf.r.wrap.b32 	%r10606, %r10603, %r10604, 28;
	mov.b64 	%rd14870, {%r10606, %r10605};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd14841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10608,%dummy}, %rd14841;
	}
	shf.l.wrap.b32 	%r10609, %r10608, %r10607, 10;
	shf.l.wrap.b32 	%r10610, %r10607, %r10608, 10;
	mov.b64 	%rd14871, {%r10610, %r10609};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10611}, %rd14847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10612,%dummy}, %rd14847;
	}
	shf.l.wrap.b32 	%r10613, %r10612, %r10611, 15;
	shf.l.wrap.b32 	%r10614, %r10611, %r10612, 15;
	mov.b64 	%rd14872, {%r10614, %r10613};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10615,%dummy}, %rd14853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10616}, %rd14853;
	}
	shf.r.wrap.b32 	%r10617, %r10616, %r10615, 8;
	shf.r.wrap.b32 	%r10618, %r10615, %r10616, 8;
	mov.b64 	%rd14873, {%r10618, %r10617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10619,%dummy}, %rd14832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10620}, %rd14832;
	}
	shf.r.wrap.b32 	%r10621, %r10620, %r10619, 2;
	shf.r.wrap.b32 	%r10622, %r10619, %r10620, 2;
	mov.b64 	%rd14874, {%r10622, %r10621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10623,%dummy}, %rd14838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10624}, %rd14838;
	}
	shf.r.wrap.b32 	%r10625, %r10624, %r10623, 9;
	shf.r.wrap.b32 	%r10626, %r10623, %r10624, 9;
	mov.b64 	%rd14875, {%r10626, %r10625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10627,%dummy}, %rd14844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10628}, %rd14844;
	}
	shf.r.wrap.b32 	%r10629, %r10628, %r10627, 25;
	shf.r.wrap.b32 	%r10630, %r10627, %r10628, 25;
	mov.b64 	%rd14876, {%r10630, %r10629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10631,%dummy}, %rd14845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10632}, %rd14845;
	}
	shf.r.wrap.b32 	%r10633, %r10632, %r10631, 23;
	shf.r.wrap.b32 	%r10634, %r10631, %r10632, 23;
	mov.b64 	%rd14877, {%r10634, %r10633};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10635}, %rd14851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd14851;
	}
	shf.l.wrap.b32 	%r10637, %r10636, %r10635, 2;
	shf.l.wrap.b32 	%r10638, %r10635, %r10636, 2;
	mov.b64 	%rd14878, {%r10638, %r10637};
	not.b64 	%rd14879, %rd14855;
	and.b64  	%rd14880, %rd14856, %rd14879;
	xor.b64  	%rd14881, %rd14880, %rd14830;
	not.b64 	%rd14882, %rd14856;
	and.b64  	%rd14883, %rd14857, %rd14882;
	xor.b64  	%rd14884, %rd14883, %rd14855;
	not.b64 	%rd14885, %rd14857;
	and.b64  	%rd14886, %rd14858, %rd14885;
	xor.b64  	%rd14887, %rd14886, %rd14856;
	not.b64 	%rd14888, %rd14858;
	and.b64  	%rd14889, %rd14830, %rd14888;
	xor.b64  	%rd14890, %rd14889, %rd14857;
	not.b64 	%rd14891, %rd14830;
	and.b64  	%rd14892, %rd14855, %rd14891;
	xor.b64  	%rd14893, %rd14892, %rd14858;
	not.b64 	%rd14894, %rd14860;
	and.b64  	%rd14895, %rd14861, %rd14894;
	xor.b64  	%rd14896, %rd14895, %rd14859;
	not.b64 	%rd14897, %rd14861;
	and.b64  	%rd14898, %rd14862, %rd14897;
	xor.b64  	%rd14899, %rd14898, %rd14860;
	not.b64 	%rd14900, %rd14862;
	and.b64  	%rd14901, %rd14863, %rd14900;
	xor.b64  	%rd14902, %rd14901, %rd14861;
	not.b64 	%rd14903, %rd14863;
	and.b64  	%rd14904, %rd14859, %rd14903;
	xor.b64  	%rd14905, %rd14904, %rd14862;
	not.b64 	%rd14906, %rd14859;
	and.b64  	%rd14907, %rd14860, %rd14906;
	xor.b64  	%rd14908, %rd14907, %rd14863;
	not.b64 	%rd14909, %rd14865;
	and.b64  	%rd14910, %rd14866, %rd14909;
	xor.b64  	%rd14911, %rd14910, %rd14864;
	not.b64 	%rd14912, %rd14866;
	and.b64  	%rd14913, %rd14867, %rd14912;
	xor.b64  	%rd14914, %rd14913, %rd14865;
	not.b64 	%rd14915, %rd14867;
	and.b64  	%rd14916, %rd14868, %rd14915;
	xor.b64  	%rd14917, %rd14916, %rd14866;
	not.b64 	%rd14918, %rd14868;
	and.b64  	%rd14919, %rd14864, %rd14918;
	xor.b64  	%rd14920, %rd14919, %rd14867;
	not.b64 	%rd14921, %rd14864;
	and.b64  	%rd14922, %rd14865, %rd14921;
	xor.b64  	%rd14923, %rd14922, %rd14868;
	not.b64 	%rd14924, %rd14870;
	and.b64  	%rd14925, %rd14871, %rd14924;
	xor.b64  	%rd14926, %rd14925, %rd14869;
	not.b64 	%rd14927, %rd14871;
	and.b64  	%rd14928, %rd14872, %rd14927;
	xor.b64  	%rd14929, %rd14928, %rd14870;
	not.b64 	%rd14930, %rd14872;
	and.b64  	%rd14931, %rd14873, %rd14930;
	xor.b64  	%rd14932, %rd14931, %rd14871;
	not.b64 	%rd14933, %rd14873;
	and.b64  	%rd14934, %rd14869, %rd14933;
	xor.b64  	%rd14935, %rd14934, %rd14872;
	not.b64 	%rd14936, %rd14869;
	and.b64  	%rd14937, %rd14870, %rd14936;
	xor.b64  	%rd14938, %rd14937, %rd14873;
	not.b64 	%rd14939, %rd14875;
	and.b64  	%rd14940, %rd14876, %rd14939;
	xor.b64  	%rd14941, %rd14940, %rd14874;
	not.b64 	%rd14942, %rd14876;
	and.b64  	%rd14943, %rd14877, %rd14942;
	xor.b64  	%rd14944, %rd14943, %rd14875;
	not.b64 	%rd14945, %rd14877;
	and.b64  	%rd14946, %rd14878, %rd14945;
	xor.b64  	%rd14947, %rd14946, %rd14876;
	not.b64 	%rd14948, %rd14878;
	and.b64  	%rd14949, %rd14874, %rd14948;
	xor.b64  	%rd14950, %rd14949, %rd14877;
	not.b64 	%rd14951, %rd14874;
	and.b64  	%rd14952, %rd14875, %rd14951;
	xor.b64  	%rd14953, %rd14952, %rd14878;
	xor.b64  	%rd14954, %rd14881, %rd34;
	xor.b64  	%rd14955, %rd14896, %rd14954;
	xor.b64  	%rd14956, %rd14955, %rd14911;
	xor.b64  	%rd14957, %rd14956, %rd14926;
	xor.b64  	%rd14958, %rd14957, %rd14941;
	xor.b64  	%rd14959, %rd14899, %rd14884;
	xor.b64  	%rd14960, %rd14959, %rd14914;
	xor.b64  	%rd14961, %rd14960, %rd14929;
	xor.b64  	%rd14962, %rd14961, %rd14944;
	xor.b64  	%rd14963, %rd14902, %rd14887;
	xor.b64  	%rd14964, %rd14963, %rd14917;
	xor.b64  	%rd14965, %rd14964, %rd14932;
	xor.b64  	%rd14966, %rd14965, %rd14947;
	xor.b64  	%rd14967, %rd14905, %rd14890;
	xor.b64  	%rd14968, %rd14967, %rd14920;
	xor.b64  	%rd14969, %rd14968, %rd14935;
	xor.b64  	%rd14970, %rd14969, %rd14950;
	xor.b64  	%rd14971, %rd14908, %rd14893;
	xor.b64  	%rd14972, %rd14971, %rd14923;
	xor.b64  	%rd14973, %rd14972, %rd14938;
	xor.b64  	%rd14974, %rd14973, %rd14953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10639}, %rd14962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10640,%dummy}, %rd14962;
	}
	shf.l.wrap.b32 	%r10641, %r10640, %r10639, 1;
	shf.l.wrap.b32 	%r10642, %r10639, %r10640, 1;
	mov.b64 	%rd14975, {%r10642, %r10641};
	xor.b64  	%rd14976, %rd14974, %rd14975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10643}, %rd14966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10644,%dummy}, %rd14966;
	}
	shf.l.wrap.b32 	%r10645, %r10644, %r10643, 1;
	shf.l.wrap.b32 	%r10646, %r10643, %r10644, 1;
	mov.b64 	%rd14977, {%r10646, %r10645};
	xor.b64  	%rd14978, %rd14977, %rd14958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10647}, %rd14970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10648,%dummy}, %rd14970;
	}
	shf.l.wrap.b32 	%r10649, %r10648, %r10647, 1;
	shf.l.wrap.b32 	%r10650, %r10647, %r10648, 1;
	mov.b64 	%rd14979, {%r10650, %r10649};
	xor.b64  	%rd14980, %rd14979, %rd14962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10651}, %rd14974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10652,%dummy}, %rd14974;
	}
	shf.l.wrap.b32 	%r10653, %r10652, %r10651, 1;
	shf.l.wrap.b32 	%r10654, %r10651, %r10652, 1;
	mov.b64 	%rd14981, {%r10654, %r10653};
	xor.b64  	%rd14982, %rd14981, %rd14966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd14958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10656,%dummy}, %rd14958;
	}
	shf.l.wrap.b32 	%r10657, %r10656, %r10655, 1;
	shf.l.wrap.b32 	%r10658, %r10655, %r10656, 1;
	mov.b64 	%rd14983, {%r10658, %r10657};
	xor.b64  	%rd14984, %rd14970, %rd14983;
	xor.b64  	%rd14985, %rd14976, %rd14954;
	xor.b64  	%rd14986, %rd14978, %rd14884;
	xor.b64  	%rd14987, %rd14980, %rd14887;
	xor.b64  	%rd14988, %rd14982, %rd14890;
	xor.b64  	%rd14989, %rd14984, %rd14893;
	xor.b64  	%rd14990, %rd14976, %rd14896;
	xor.b64  	%rd14991, %rd14978, %rd14899;
	xor.b64  	%rd14992, %rd14980, %rd14902;
	xor.b64  	%rd14993, %rd14982, %rd14905;
	xor.b64  	%rd14994, %rd14984, %rd14908;
	xor.b64  	%rd14995, %rd14976, %rd14911;
	xor.b64  	%rd14996, %rd14978, %rd14914;
	xor.b64  	%rd14997, %rd14980, %rd14917;
	xor.b64  	%rd14998, %rd14982, %rd14920;
	xor.b64  	%rd14999, %rd14984, %rd14923;
	xor.b64  	%rd15000, %rd14976, %rd14926;
	xor.b64  	%rd15001, %rd14978, %rd14929;
	xor.b64  	%rd15002, %rd14980, %rd14932;
	xor.b64  	%rd15003, %rd14982, %rd14935;
	xor.b64  	%rd15004, %rd14984, %rd14938;
	xor.b64  	%rd15005, %rd14976, %rd14941;
	xor.b64  	%rd15006, %rd14978, %rd14944;
	xor.b64  	%rd15007, %rd14980, %rd14947;
	xor.b64  	%rd15008, %rd14982, %rd14950;
	xor.b64  	%rd15009, %rd14984, %rd14953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10659,%dummy}, %rd14991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10660}, %rd14991;
	}
	shf.r.wrap.b32 	%r10661, %r10660, %r10659, 20;
	shf.r.wrap.b32 	%r10662, %r10659, %r10660, 20;
	mov.b64 	%rd15010, {%r10662, %r10661};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10663,%dummy}, %rd14997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10664}, %rd14997;
	}
	shf.r.wrap.b32 	%r10665, %r10664, %r10663, 21;
	shf.r.wrap.b32 	%r10666, %r10663, %r10664, 21;
	mov.b64 	%rd15011, {%r10666, %r10665};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10667}, %rd15003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10668,%dummy}, %rd15003;
	}
	shf.l.wrap.b32 	%r10669, %r10668, %r10667, 21;
	shf.l.wrap.b32 	%r10670, %r10667, %r10668, 21;
	mov.b64 	%rd15012, {%r10670, %r10669};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10671}, %rd15009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10672,%dummy}, %rd15009;
	}
	shf.l.wrap.b32 	%r10673, %r10672, %r10671, 14;
	shf.l.wrap.b32 	%r10674, %r10671, %r10672, 14;
	mov.b64 	%rd15013, {%r10674, %r10673};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10675}, %rd14988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10676,%dummy}, %rd14988;
	}
	shf.l.wrap.b32 	%r10677, %r10676, %r10675, 28;
	shf.l.wrap.b32 	%r10678, %r10675, %r10676, 28;
	mov.b64 	%rd15014, {%r10678, %r10677};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd14994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10680,%dummy}, %rd14994;
	}
	shf.l.wrap.b32 	%r10681, %r10680, %r10679, 20;
	shf.l.wrap.b32 	%r10682, %r10679, %r10680, 20;
	mov.b64 	%rd15015, {%r10682, %r10681};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10683}, %rd14995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10684,%dummy}, %rd14995;
	}
	shf.l.wrap.b32 	%r10685, %r10684, %r10683, 3;
	shf.l.wrap.b32 	%r10686, %r10683, %r10684, 3;
	mov.b64 	%rd15016, {%r10686, %r10685};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10687,%dummy}, %rd15001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10688}, %rd15001;
	}
	shf.r.wrap.b32 	%r10689, %r10688, %r10687, 19;
	shf.r.wrap.b32 	%r10690, %r10687, %r10688, 19;
	mov.b64 	%rd15017, {%r10690, %r10689};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10691,%dummy}, %rd15007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10692}, %rd15007;
	}
	shf.r.wrap.b32 	%r10693, %r10692, %r10691, 3;
	shf.r.wrap.b32 	%r10694, %r10691, %r10692, 3;
	mov.b64 	%rd15018, {%r10694, %r10693};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10695}, %rd14986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10696,%dummy}, %rd14986;
	}
	shf.l.wrap.b32 	%r10697, %r10696, %r10695, 1;
	shf.l.wrap.b32 	%r10698, %r10695, %r10696, 1;
	mov.b64 	%rd15019, {%r10698, %r10697};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10699}, %rd14992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10700,%dummy}, %rd14992;
	}
	shf.l.wrap.b32 	%r10701, %r10700, %r10699, 6;
	shf.l.wrap.b32 	%r10702, %r10699, %r10700, 6;
	mov.b64 	%rd15020, {%r10702, %r10701};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd14998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10704,%dummy}, %rd14998;
	}
	shf.l.wrap.b32 	%r10705, %r10704, %r10703, 25;
	shf.l.wrap.b32 	%r10706, %r10703, %r10704, 25;
	mov.b64 	%rd15021, {%r10706, %r10705};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10707}, %rd15004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10708,%dummy}, %rd15004;
	}
	shf.l.wrap.b32 	%r10709, %r10708, %r10707, 8;
	shf.l.wrap.b32 	%r10710, %r10707, %r10708, 8;
	mov.b64 	%rd15022, {%r10710, %r10709};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10711}, %rd15005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10712,%dummy}, %rd15005;
	}
	shf.l.wrap.b32 	%r10713, %r10712, %r10711, 18;
	shf.l.wrap.b32 	%r10714, %r10711, %r10712, 18;
	mov.b64 	%rd15023, {%r10714, %r10713};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10715}, %rd14989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10716,%dummy}, %rd14989;
	}
	shf.l.wrap.b32 	%r10717, %r10716, %r10715, 27;
	shf.l.wrap.b32 	%r10718, %r10715, %r10716, 27;
	mov.b64 	%rd15024, {%r10718, %r10717};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10719,%dummy}, %rd14990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10720}, %rd14990;
	}
	shf.r.wrap.b32 	%r10721, %r10720, %r10719, 28;
	shf.r.wrap.b32 	%r10722, %r10719, %r10720, 28;
	mov.b64 	%rd15025, {%r10722, %r10721};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10723}, %rd14996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10724,%dummy}, %rd14996;
	}
	shf.l.wrap.b32 	%r10725, %r10724, %r10723, 10;
	shf.l.wrap.b32 	%r10726, %r10723, %r10724, 10;
	mov.b64 	%rd15026, {%r10726, %r10725};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10727}, %rd15002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10728,%dummy}, %rd15002;
	}
	shf.l.wrap.b32 	%r10729, %r10728, %r10727, 15;
	shf.l.wrap.b32 	%r10730, %r10727, %r10728, 15;
	mov.b64 	%rd15027, {%r10730, %r10729};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10731,%dummy}, %rd15008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10732}, %rd15008;
	}
	shf.r.wrap.b32 	%r10733, %r10732, %r10731, 8;
	shf.r.wrap.b32 	%r10734, %r10731, %r10732, 8;
	mov.b64 	%rd15028, {%r10734, %r10733};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10735,%dummy}, %rd14987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10736}, %rd14987;
	}
	shf.r.wrap.b32 	%r10737, %r10736, %r10735, 2;
	shf.r.wrap.b32 	%r10738, %r10735, %r10736, 2;
	mov.b64 	%rd15029, {%r10738, %r10737};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10739,%dummy}, %rd14993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10740}, %rd14993;
	}
	shf.r.wrap.b32 	%r10741, %r10740, %r10739, 9;
	shf.r.wrap.b32 	%r10742, %r10739, %r10740, 9;
	mov.b64 	%rd15030, {%r10742, %r10741};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10743,%dummy}, %rd14999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10744}, %rd14999;
	}
	shf.r.wrap.b32 	%r10745, %r10744, %r10743, 25;
	shf.r.wrap.b32 	%r10746, %r10743, %r10744, 25;
	mov.b64 	%rd15031, {%r10746, %r10745};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10747,%dummy}, %rd15000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10748}, %rd15000;
	}
	shf.r.wrap.b32 	%r10749, %r10748, %r10747, 23;
	shf.r.wrap.b32 	%r10750, %r10747, %r10748, 23;
	mov.b64 	%rd15032, {%r10750, %r10749};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10751}, %rd15006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10752,%dummy}, %rd15006;
	}
	shf.l.wrap.b32 	%r10753, %r10752, %r10751, 2;
	shf.l.wrap.b32 	%r10754, %r10751, %r10752, 2;
	mov.b64 	%rd15033, {%r10754, %r10753};
	not.b64 	%rd15034, %rd15010;
	and.b64  	%rd15035, %rd15011, %rd15034;
	xor.b64  	%rd15036, %rd15035, %rd14985;
	not.b64 	%rd15037, %rd15011;
	and.b64  	%rd15038, %rd15012, %rd15037;
	xor.b64  	%rd15039, %rd15038, %rd15010;
	not.b64 	%rd15040, %rd15012;
	and.b64  	%rd15041, %rd15013, %rd15040;
	xor.b64  	%rd15042, %rd15041, %rd15011;
	not.b64 	%rd15043, %rd15013;
	and.b64  	%rd15044, %rd14985, %rd15043;
	xor.b64  	%rd15045, %rd15044, %rd15012;
	not.b64 	%rd15046, %rd14985;
	and.b64  	%rd15047, %rd15010, %rd15046;
	xor.b64  	%rd15048, %rd15047, %rd15013;
	not.b64 	%rd15049, %rd15015;
	and.b64  	%rd15050, %rd15016, %rd15049;
	xor.b64  	%rd15051, %rd15050, %rd15014;
	not.b64 	%rd15052, %rd15016;
	and.b64  	%rd15053, %rd15017, %rd15052;
	xor.b64  	%rd15054, %rd15053, %rd15015;
	not.b64 	%rd15055, %rd15017;
	and.b64  	%rd15056, %rd15018, %rd15055;
	xor.b64  	%rd15057, %rd15056, %rd15016;
	not.b64 	%rd15058, %rd15018;
	and.b64  	%rd15059, %rd15014, %rd15058;
	xor.b64  	%rd15060, %rd15059, %rd15017;
	not.b64 	%rd15061, %rd15014;
	and.b64  	%rd15062, %rd15015, %rd15061;
	xor.b64  	%rd15063, %rd15062, %rd15018;
	not.b64 	%rd15064, %rd15020;
	and.b64  	%rd15065, %rd15021, %rd15064;
	xor.b64  	%rd15066, %rd15065, %rd15019;
	not.b64 	%rd15067, %rd15021;
	and.b64  	%rd15068, %rd15022, %rd15067;
	xor.b64  	%rd15069, %rd15068, %rd15020;
	not.b64 	%rd15070, %rd15022;
	and.b64  	%rd15071, %rd15023, %rd15070;
	xor.b64  	%rd15072, %rd15071, %rd15021;
	not.b64 	%rd15073, %rd15023;
	and.b64  	%rd15074, %rd15019, %rd15073;
	xor.b64  	%rd15075, %rd15074, %rd15022;
	not.b64 	%rd15076, %rd15019;
	and.b64  	%rd15077, %rd15020, %rd15076;
	xor.b64  	%rd15078, %rd15077, %rd15023;
	not.b64 	%rd15079, %rd15025;
	and.b64  	%rd15080, %rd15026, %rd15079;
	xor.b64  	%rd15081, %rd15080, %rd15024;
	not.b64 	%rd15082, %rd15026;
	and.b64  	%rd15083, %rd15027, %rd15082;
	xor.b64  	%rd15084, %rd15083, %rd15025;
	not.b64 	%rd15085, %rd15027;
	and.b64  	%rd15086, %rd15028, %rd15085;
	xor.b64  	%rd15087, %rd15086, %rd15026;
	not.b64 	%rd15088, %rd15028;
	and.b64  	%rd15089, %rd15024, %rd15088;
	xor.b64  	%rd15090, %rd15089, %rd15027;
	not.b64 	%rd15091, %rd15024;
	and.b64  	%rd15092, %rd15025, %rd15091;
	xor.b64  	%rd15093, %rd15092, %rd15028;
	not.b64 	%rd15094, %rd15030;
	and.b64  	%rd15095, %rd15031, %rd15094;
	xor.b64  	%rd15096, %rd15095, %rd15029;
	not.b64 	%rd15097, %rd15031;
	and.b64  	%rd15098, %rd15032, %rd15097;
	xor.b64  	%rd15099, %rd15098, %rd15030;
	not.b64 	%rd15100, %rd15032;
	and.b64  	%rd15101, %rd15033, %rd15100;
	xor.b64  	%rd15102, %rd15101, %rd15031;
	not.b64 	%rd15103, %rd15033;
	and.b64  	%rd15104, %rd15029, %rd15103;
	xor.b64  	%rd15105, %rd15104, %rd15032;
	not.b64 	%rd15106, %rd15029;
	and.b64  	%rd15107, %rd15030, %rd15106;
	xor.b64  	%rd15108, %rd15107, %rd15033;
	xor.b64  	%rd15109, %rd15036, %rd35;
	xor.b64  	%rd15110, %rd15051, %rd15109;
	xor.b64  	%rd15111, %rd15110, %rd15066;
	xor.b64  	%rd15112, %rd15111, %rd15081;
	xor.b64  	%rd15113, %rd15112, %rd15096;
	xor.b64  	%rd15114, %rd15054, %rd15039;
	xor.b64  	%rd15115, %rd15114, %rd15069;
	xor.b64  	%rd15116, %rd15115, %rd15084;
	xor.b64  	%rd15117, %rd15116, %rd15099;
	xor.b64  	%rd15118, %rd15057, %rd15042;
	xor.b64  	%rd15119, %rd15118, %rd15072;
	xor.b64  	%rd15120, %rd15119, %rd15087;
	xor.b64  	%rd15121, %rd15120, %rd15102;
	xor.b64  	%rd15122, %rd15060, %rd15045;
	xor.b64  	%rd15123, %rd15122, %rd15075;
	xor.b64  	%rd15124, %rd15123, %rd15090;
	xor.b64  	%rd15125, %rd15124, %rd15105;
	xor.b64  	%rd15126, %rd15063, %rd15048;
	xor.b64  	%rd15127, %rd15126, %rd15078;
	xor.b64  	%rd15128, %rd15127, %rd15093;
	xor.b64  	%rd15129, %rd15128, %rd15108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10755}, %rd15117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10756,%dummy}, %rd15117;
	}
	shf.l.wrap.b32 	%r10757, %r10756, %r10755, 1;
	shf.l.wrap.b32 	%r10758, %r10755, %r10756, 1;
	mov.b64 	%rd15130, {%r10758, %r10757};
	xor.b64  	%rd15131, %rd15129, %rd15130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10759}, %rd15121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10760,%dummy}, %rd15121;
	}
	shf.l.wrap.b32 	%r10761, %r10760, %r10759, 1;
	shf.l.wrap.b32 	%r10762, %r10759, %r10760, 1;
	mov.b64 	%rd15132, {%r10762, %r10761};
	xor.b64  	%rd15133, %rd15132, %rd15113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10763}, %rd15125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10764,%dummy}, %rd15125;
	}
	shf.l.wrap.b32 	%r10765, %r10764, %r10763, 1;
	shf.l.wrap.b32 	%r10766, %r10763, %r10764, 1;
	mov.b64 	%rd15134, {%r10766, %r10765};
	xor.b64  	%rd15135, %rd15134, %rd15117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10767}, %rd15129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10768,%dummy}, %rd15129;
	}
	shf.l.wrap.b32 	%r10769, %r10768, %r10767, 1;
	shf.l.wrap.b32 	%r10770, %r10767, %r10768, 1;
	mov.b64 	%rd15136, {%r10770, %r10769};
	xor.b64  	%rd15137, %rd15136, %rd15121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10771}, %rd15113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10772,%dummy}, %rd15113;
	}
	shf.l.wrap.b32 	%r10773, %r10772, %r10771, 1;
	shf.l.wrap.b32 	%r10774, %r10771, %r10772, 1;
	mov.b64 	%rd15138, {%r10774, %r10773};
	xor.b64  	%rd15139, %rd15125, %rd15138;
	xor.b64  	%rd15140, %rd15131, %rd15109;
	xor.b64  	%rd15141, %rd15133, %rd15039;
	xor.b64  	%rd15142, %rd15135, %rd15042;
	xor.b64  	%rd15143, %rd15137, %rd15045;
	xor.b64  	%rd15144, %rd15139, %rd15048;
	xor.b64  	%rd15145, %rd15131, %rd15051;
	xor.b64  	%rd15146, %rd15133, %rd15054;
	xor.b64  	%rd15147, %rd15135, %rd15057;
	xor.b64  	%rd15148, %rd15137, %rd15060;
	xor.b64  	%rd15149, %rd15139, %rd15063;
	xor.b64  	%rd15150, %rd15131, %rd15066;
	xor.b64  	%rd15151, %rd15133, %rd15069;
	xor.b64  	%rd15152, %rd15135, %rd15072;
	xor.b64  	%rd15153, %rd15137, %rd15075;
	xor.b64  	%rd15154, %rd15139, %rd15078;
	xor.b64  	%rd15155, %rd15131, %rd15081;
	xor.b64  	%rd15156, %rd15133, %rd15084;
	xor.b64  	%rd15157, %rd15135, %rd15087;
	xor.b64  	%rd15158, %rd15137, %rd15090;
	xor.b64  	%rd15159, %rd15139, %rd15093;
	xor.b64  	%rd15160, %rd15131, %rd15096;
	xor.b64  	%rd15161, %rd15133, %rd15099;
	xor.b64  	%rd15162, %rd15135, %rd15102;
	xor.b64  	%rd15163, %rd15137, %rd15105;
	xor.b64  	%rd15164, %rd15139, %rd15108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10775,%dummy}, %rd15146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10776}, %rd15146;
	}
	shf.r.wrap.b32 	%r10777, %r10776, %r10775, 20;
	shf.r.wrap.b32 	%r10778, %r10775, %r10776, 20;
	mov.b64 	%rd15165, {%r10778, %r10777};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10779,%dummy}, %rd15152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10780}, %rd15152;
	}
	shf.r.wrap.b32 	%r10781, %r10780, %r10779, 21;
	shf.r.wrap.b32 	%r10782, %r10779, %r10780, 21;
	mov.b64 	%rd15166, {%r10782, %r10781};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd15158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10784,%dummy}, %rd15158;
	}
	shf.l.wrap.b32 	%r10785, %r10784, %r10783, 21;
	shf.l.wrap.b32 	%r10786, %r10783, %r10784, 21;
	mov.b64 	%rd15167, {%r10786, %r10785};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10787}, %rd15164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10788,%dummy}, %rd15164;
	}
	shf.l.wrap.b32 	%r10789, %r10788, %r10787, 14;
	shf.l.wrap.b32 	%r10790, %r10787, %r10788, 14;
	mov.b64 	%rd15168, {%r10790, %r10789};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10791}, %rd15143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10792,%dummy}, %rd15143;
	}
	shf.l.wrap.b32 	%r10793, %r10792, %r10791, 28;
	shf.l.wrap.b32 	%r10794, %r10791, %r10792, 28;
	mov.b64 	%rd15169, {%r10794, %r10793};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10795}, %rd15149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10796,%dummy}, %rd15149;
	}
	shf.l.wrap.b32 	%r10797, %r10796, %r10795, 20;
	shf.l.wrap.b32 	%r10798, %r10795, %r10796, 20;
	mov.b64 	%rd15170, {%r10798, %r10797};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10799}, %rd15150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10800,%dummy}, %rd15150;
	}
	shf.l.wrap.b32 	%r10801, %r10800, %r10799, 3;
	shf.l.wrap.b32 	%r10802, %r10799, %r10800, 3;
	mov.b64 	%rd15171, {%r10802, %r10801};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10803,%dummy}, %rd15156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10804}, %rd15156;
	}
	shf.r.wrap.b32 	%r10805, %r10804, %r10803, 19;
	shf.r.wrap.b32 	%r10806, %r10803, %r10804, 19;
	mov.b64 	%rd15172, {%r10806, %r10805};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10807,%dummy}, %rd15162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10808}, %rd15162;
	}
	shf.r.wrap.b32 	%r10809, %r10808, %r10807, 3;
	shf.r.wrap.b32 	%r10810, %r10807, %r10808, 3;
	mov.b64 	%rd15173, {%r10810, %r10809};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10811}, %rd15141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10812,%dummy}, %rd15141;
	}
	shf.l.wrap.b32 	%r10813, %r10812, %r10811, 1;
	shf.l.wrap.b32 	%r10814, %r10811, %r10812, 1;
	mov.b64 	%rd15174, {%r10814, %r10813};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10815}, %rd15147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10816,%dummy}, %rd15147;
	}
	shf.l.wrap.b32 	%r10817, %r10816, %r10815, 6;
	shf.l.wrap.b32 	%r10818, %r10815, %r10816, 6;
	mov.b64 	%rd15175, {%r10818, %r10817};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10819}, %rd15153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10820,%dummy}, %rd15153;
	}
	shf.l.wrap.b32 	%r10821, %r10820, %r10819, 25;
	shf.l.wrap.b32 	%r10822, %r10819, %r10820, 25;
	mov.b64 	%rd15176, {%r10822, %r10821};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10823}, %rd15159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10824,%dummy}, %rd15159;
	}
	shf.l.wrap.b32 	%r10825, %r10824, %r10823, 8;
	shf.l.wrap.b32 	%r10826, %r10823, %r10824, 8;
	mov.b64 	%rd15177, {%r10826, %r10825};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10827}, %rd15160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10828,%dummy}, %rd15160;
	}
	shf.l.wrap.b32 	%r10829, %r10828, %r10827, 18;
	shf.l.wrap.b32 	%r10830, %r10827, %r10828, 18;
	mov.b64 	%rd15178, {%r10830, %r10829};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10831}, %rd15144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10832,%dummy}, %rd15144;
	}
	shf.l.wrap.b32 	%r10833, %r10832, %r10831, 27;
	shf.l.wrap.b32 	%r10834, %r10831, %r10832, 27;
	mov.b64 	%rd15179, {%r10834, %r10833};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10835,%dummy}, %rd15145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10836}, %rd15145;
	}
	shf.r.wrap.b32 	%r10837, %r10836, %r10835, 28;
	shf.r.wrap.b32 	%r10838, %r10835, %r10836, 28;
	mov.b64 	%rd15180, {%r10838, %r10837};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10839}, %rd15151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10840,%dummy}, %rd15151;
	}
	shf.l.wrap.b32 	%r10841, %r10840, %r10839, 10;
	shf.l.wrap.b32 	%r10842, %r10839, %r10840, 10;
	mov.b64 	%rd15181, {%r10842, %r10841};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10843}, %rd15157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10844,%dummy}, %rd15157;
	}
	shf.l.wrap.b32 	%r10845, %r10844, %r10843, 15;
	shf.l.wrap.b32 	%r10846, %r10843, %r10844, 15;
	mov.b64 	%rd15182, {%r10846, %r10845};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10847,%dummy}, %rd15163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10848}, %rd15163;
	}
	shf.r.wrap.b32 	%r10849, %r10848, %r10847, 8;
	shf.r.wrap.b32 	%r10850, %r10847, %r10848, 8;
	mov.b64 	%rd15183, {%r10850, %r10849};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10851,%dummy}, %rd15142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10852}, %rd15142;
	}
	shf.r.wrap.b32 	%r10853, %r10852, %r10851, 2;
	shf.r.wrap.b32 	%r10854, %r10851, %r10852, 2;
	mov.b64 	%rd15184, {%r10854, %r10853};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10855,%dummy}, %rd15148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10856}, %rd15148;
	}
	shf.r.wrap.b32 	%r10857, %r10856, %r10855, 9;
	shf.r.wrap.b32 	%r10858, %r10855, %r10856, 9;
	mov.b64 	%rd15185, {%r10858, %r10857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10859,%dummy}, %rd15154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10860}, %rd15154;
	}
	shf.r.wrap.b32 	%r10861, %r10860, %r10859, 25;
	shf.r.wrap.b32 	%r10862, %r10859, %r10860, 25;
	mov.b64 	%rd15186, {%r10862, %r10861};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10863,%dummy}, %rd15155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10864}, %rd15155;
	}
	shf.r.wrap.b32 	%r10865, %r10864, %r10863, 23;
	shf.r.wrap.b32 	%r10866, %r10863, %r10864, 23;
	mov.b64 	%rd15187, {%r10866, %r10865};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10867}, %rd15161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10868,%dummy}, %rd15161;
	}
	shf.l.wrap.b32 	%r10869, %r10868, %r10867, 2;
	shf.l.wrap.b32 	%r10870, %r10867, %r10868, 2;
	mov.b64 	%rd15188, {%r10870, %r10869};
	not.b64 	%rd15189, %rd15165;
	and.b64  	%rd15190, %rd15166, %rd15189;
	xor.b64  	%rd15191, %rd15190, %rd15140;
	not.b64 	%rd15192, %rd15166;
	and.b64  	%rd15193, %rd15167, %rd15192;
	xor.b64  	%rd15194, %rd15193, %rd15165;
	not.b64 	%rd15195, %rd15167;
	and.b64  	%rd15196, %rd15168, %rd15195;
	xor.b64  	%rd15197, %rd15196, %rd15166;
	not.b64 	%rd15198, %rd15168;
	and.b64  	%rd15199, %rd15140, %rd15198;
	xor.b64  	%rd15200, %rd15199, %rd15167;
	not.b64 	%rd15201, %rd15140;
	and.b64  	%rd15202, %rd15165, %rd15201;
	xor.b64  	%rd15203, %rd15202, %rd15168;
	not.b64 	%rd15204, %rd15170;
	and.b64  	%rd15205, %rd15171, %rd15204;
	xor.b64  	%rd15206, %rd15205, %rd15169;
	not.b64 	%rd15207, %rd15171;
	and.b64  	%rd15208, %rd15172, %rd15207;
	xor.b64  	%rd15209, %rd15208, %rd15170;
	not.b64 	%rd15210, %rd15172;
	and.b64  	%rd15211, %rd15173, %rd15210;
	xor.b64  	%rd15212, %rd15211, %rd15171;
	not.b64 	%rd15213, %rd15173;
	and.b64  	%rd15214, %rd15169, %rd15213;
	xor.b64  	%rd15215, %rd15214, %rd15172;
	not.b64 	%rd15216, %rd15169;
	and.b64  	%rd15217, %rd15170, %rd15216;
	xor.b64  	%rd15218, %rd15217, %rd15173;
	not.b64 	%rd15219, %rd15175;
	and.b64  	%rd15220, %rd15176, %rd15219;
	xor.b64  	%rd15221, %rd15220, %rd15174;
	not.b64 	%rd15222, %rd15176;
	and.b64  	%rd15223, %rd15177, %rd15222;
	xor.b64  	%rd15224, %rd15223, %rd15175;
	not.b64 	%rd15225, %rd15177;
	and.b64  	%rd15226, %rd15178, %rd15225;
	xor.b64  	%rd15227, %rd15226, %rd15176;
	not.b64 	%rd15228, %rd15178;
	and.b64  	%rd15229, %rd15174, %rd15228;
	xor.b64  	%rd15230, %rd15229, %rd15177;
	not.b64 	%rd15231, %rd15174;
	and.b64  	%rd15232, %rd15175, %rd15231;
	xor.b64  	%rd15233, %rd15232, %rd15178;
	not.b64 	%rd15234, %rd15180;
	and.b64  	%rd15235, %rd15181, %rd15234;
	xor.b64  	%rd15236, %rd15235, %rd15179;
	not.b64 	%rd15237, %rd15181;
	and.b64  	%rd15238, %rd15182, %rd15237;
	xor.b64  	%rd15239, %rd15238, %rd15180;
	not.b64 	%rd15240, %rd15182;
	and.b64  	%rd15241, %rd15183, %rd15240;
	xor.b64  	%rd15242, %rd15241, %rd15181;
	not.b64 	%rd15243, %rd15183;
	and.b64  	%rd15244, %rd15179, %rd15243;
	xor.b64  	%rd15245, %rd15244, %rd15182;
	not.b64 	%rd15246, %rd15179;
	and.b64  	%rd15247, %rd15180, %rd15246;
	xor.b64  	%rd15248, %rd15247, %rd15183;
	not.b64 	%rd15249, %rd15185;
	and.b64  	%rd15250, %rd15186, %rd15249;
	xor.b64  	%rd15251, %rd15250, %rd15184;
	not.b64 	%rd15252, %rd15186;
	and.b64  	%rd15253, %rd15187, %rd15252;
	xor.b64  	%rd15254, %rd15253, %rd15185;
	not.b64 	%rd15255, %rd15187;
	and.b64  	%rd15256, %rd15188, %rd15255;
	xor.b64  	%rd15257, %rd15256, %rd15186;
	not.b64 	%rd15258, %rd15188;
	and.b64  	%rd15259, %rd15184, %rd15258;
	xor.b64  	%rd15260, %rd15259, %rd15187;
	not.b64 	%rd15261, %rd15184;
	and.b64  	%rd15262, %rd15185, %rd15261;
	xor.b64  	%rd15263, %rd15262, %rd15188;
	xor.b64  	%rd15264, %rd15191, %rd36;
	xor.b64  	%rd15265, %rd15206, %rd15264;
	xor.b64  	%rd15266, %rd15265, %rd15221;
	xor.b64  	%rd15267, %rd15266, %rd15236;
	xor.b64  	%rd15268, %rd15267, %rd15251;
	xor.b64  	%rd15269, %rd15209, %rd15194;
	xor.b64  	%rd15270, %rd15269, %rd15224;
	xor.b64  	%rd15271, %rd15270, %rd15239;
	xor.b64  	%rd15272, %rd15271, %rd15254;
	xor.b64  	%rd15273, %rd15212, %rd15197;
	xor.b64  	%rd15274, %rd15273, %rd15227;
	xor.b64  	%rd15275, %rd15274, %rd15242;
	xor.b64  	%rd15276, %rd15275, %rd15257;
	xor.b64  	%rd15277, %rd15215, %rd15200;
	xor.b64  	%rd15278, %rd15277, %rd15230;
	xor.b64  	%rd15279, %rd15278, %rd15245;
	xor.b64  	%rd15280, %rd15279, %rd15260;
	xor.b64  	%rd15281, %rd15218, %rd15203;
	xor.b64  	%rd15282, %rd15281, %rd15233;
	xor.b64  	%rd15283, %rd15282, %rd15248;
	xor.b64  	%rd15284, %rd15283, %rd15263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10871}, %rd15272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10872,%dummy}, %rd15272;
	}
	shf.l.wrap.b32 	%r10873, %r10872, %r10871, 1;
	shf.l.wrap.b32 	%r10874, %r10871, %r10872, 1;
	mov.b64 	%rd15285, {%r10874, %r10873};
	xor.b64  	%rd15286, %rd15284, %rd15285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10875}, %rd15276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10876,%dummy}, %rd15276;
	}
	shf.l.wrap.b32 	%r10877, %r10876, %r10875, 1;
	shf.l.wrap.b32 	%r10878, %r10875, %r10876, 1;
	mov.b64 	%rd15287, {%r10878, %r10877};
	xor.b64  	%rd15288, %rd15287, %rd15268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10879}, %rd15280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10880,%dummy}, %rd15280;
	}
	shf.l.wrap.b32 	%r10881, %r10880, %r10879, 1;
	shf.l.wrap.b32 	%r10882, %r10879, %r10880, 1;
	mov.b64 	%rd15289, {%r10882, %r10881};
	xor.b64  	%rd15290, %rd15289, %rd15272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10883}, %rd15284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10884,%dummy}, %rd15284;
	}
	shf.l.wrap.b32 	%r10885, %r10884, %r10883, 1;
	shf.l.wrap.b32 	%r10886, %r10883, %r10884, 1;
	mov.b64 	%rd15291, {%r10886, %r10885};
	xor.b64  	%rd15292, %rd15291, %rd15276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10887}, %rd15268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10888,%dummy}, %rd15268;
	}
	shf.l.wrap.b32 	%r10889, %r10888, %r10887, 1;
	shf.l.wrap.b32 	%r10890, %r10887, %r10888, 1;
	mov.b64 	%rd15293, {%r10890, %r10889};
	xor.b64  	%rd15294, %rd15280, %rd15293;
	xor.b64  	%rd15295, %rd15286, %rd15264;
	xor.b64  	%rd15296, %rd15288, %rd15194;
	xor.b64  	%rd15297, %rd15290, %rd15197;
	xor.b64  	%rd15298, %rd15292, %rd15200;
	xor.b64  	%rd15299, %rd15294, %rd15203;
	xor.b64  	%rd15300, %rd15286, %rd15206;
	xor.b64  	%rd15301, %rd15288, %rd15209;
	xor.b64  	%rd15302, %rd15290, %rd15212;
	xor.b64  	%rd15303, %rd15292, %rd15215;
	xor.b64  	%rd15304, %rd15294, %rd15218;
	xor.b64  	%rd15305, %rd15286, %rd15221;
	xor.b64  	%rd15306, %rd15288, %rd15224;
	xor.b64  	%rd15307, %rd15290, %rd15227;
	xor.b64  	%rd15308, %rd15292, %rd15230;
	xor.b64  	%rd15309, %rd15294, %rd15233;
	xor.b64  	%rd15310, %rd15286, %rd15236;
	xor.b64  	%rd15311, %rd15288, %rd15239;
	xor.b64  	%rd15312, %rd15290, %rd15242;
	xor.b64  	%rd15313, %rd15292, %rd15245;
	xor.b64  	%rd15314, %rd15294, %rd15248;
	xor.b64  	%rd15315, %rd15286, %rd15251;
	xor.b64  	%rd15316, %rd15288, %rd15254;
	xor.b64  	%rd15317, %rd15290, %rd15257;
	xor.b64  	%rd15318, %rd15292, %rd15260;
	xor.b64  	%rd15319, %rd15294, %rd15263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10891,%dummy}, %rd15301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10892}, %rd15301;
	}
	shf.r.wrap.b32 	%r10893, %r10892, %r10891, 20;
	shf.r.wrap.b32 	%r10894, %r10891, %r10892, 20;
	mov.b64 	%rd15320, {%r10894, %r10893};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10895,%dummy}, %rd15307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10896}, %rd15307;
	}
	shf.r.wrap.b32 	%r10897, %r10896, %r10895, 21;
	shf.r.wrap.b32 	%r10898, %r10895, %r10896, 21;
	mov.b64 	%rd15321, {%r10898, %r10897};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10899}, %rd15313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10900,%dummy}, %rd15313;
	}
	shf.l.wrap.b32 	%r10901, %r10900, %r10899, 21;
	shf.l.wrap.b32 	%r10902, %r10899, %r10900, 21;
	mov.b64 	%rd15322, {%r10902, %r10901};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10903}, %rd15319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10904,%dummy}, %rd15319;
	}
	shf.l.wrap.b32 	%r10905, %r10904, %r10903, 14;
	shf.l.wrap.b32 	%r10906, %r10903, %r10904, 14;
	mov.b64 	%rd15323, {%r10906, %r10905};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10907}, %rd15298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10908,%dummy}, %rd15298;
	}
	shf.l.wrap.b32 	%r10909, %r10908, %r10907, 28;
	shf.l.wrap.b32 	%r10910, %r10907, %r10908, 28;
	mov.b64 	%rd15324, {%r10910, %r10909};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10911}, %rd15304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10912,%dummy}, %rd15304;
	}
	shf.l.wrap.b32 	%r10913, %r10912, %r10911, 20;
	shf.l.wrap.b32 	%r10914, %r10911, %r10912, 20;
	mov.b64 	%rd15325, {%r10914, %r10913};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10915}, %rd15305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10916,%dummy}, %rd15305;
	}
	shf.l.wrap.b32 	%r10917, %r10916, %r10915, 3;
	shf.l.wrap.b32 	%r10918, %r10915, %r10916, 3;
	mov.b64 	%rd15326, {%r10918, %r10917};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10919,%dummy}, %rd15311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10920}, %rd15311;
	}
	shf.r.wrap.b32 	%r10921, %r10920, %r10919, 19;
	shf.r.wrap.b32 	%r10922, %r10919, %r10920, 19;
	mov.b64 	%rd15327, {%r10922, %r10921};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10923,%dummy}, %rd15317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10924}, %rd15317;
	}
	shf.r.wrap.b32 	%r10925, %r10924, %r10923, 3;
	shf.r.wrap.b32 	%r10926, %r10923, %r10924, 3;
	mov.b64 	%rd15328, {%r10926, %r10925};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10927}, %rd15296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10928,%dummy}, %rd15296;
	}
	shf.l.wrap.b32 	%r10929, %r10928, %r10927, 1;
	shf.l.wrap.b32 	%r10930, %r10927, %r10928, 1;
	mov.b64 	%rd15329, {%r10930, %r10929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10931}, %rd15302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10932,%dummy}, %rd15302;
	}
	shf.l.wrap.b32 	%r10933, %r10932, %r10931, 6;
	shf.l.wrap.b32 	%r10934, %r10931, %r10932, 6;
	mov.b64 	%rd15330, {%r10934, %r10933};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10935}, %rd15308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10936,%dummy}, %rd15308;
	}
	shf.l.wrap.b32 	%r10937, %r10936, %r10935, 25;
	shf.l.wrap.b32 	%r10938, %r10935, %r10936, 25;
	mov.b64 	%rd15331, {%r10938, %r10937};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10939}, %rd15314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10940,%dummy}, %rd15314;
	}
	shf.l.wrap.b32 	%r10941, %r10940, %r10939, 8;
	shf.l.wrap.b32 	%r10942, %r10939, %r10940, 8;
	mov.b64 	%rd15332, {%r10942, %r10941};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10943}, %rd15315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10944,%dummy}, %rd15315;
	}
	shf.l.wrap.b32 	%r10945, %r10944, %r10943, 18;
	shf.l.wrap.b32 	%r10946, %r10943, %r10944, 18;
	mov.b64 	%rd15333, {%r10946, %r10945};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10947}, %rd15299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10948,%dummy}, %rd15299;
	}
	shf.l.wrap.b32 	%r10949, %r10948, %r10947, 27;
	shf.l.wrap.b32 	%r10950, %r10947, %r10948, 27;
	mov.b64 	%rd15334, {%r10950, %r10949};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10951,%dummy}, %rd15300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10952}, %rd15300;
	}
	shf.r.wrap.b32 	%r10953, %r10952, %r10951, 28;
	shf.r.wrap.b32 	%r10954, %r10951, %r10952, 28;
	mov.b64 	%rd15335, {%r10954, %r10953};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10955}, %rd15306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10956,%dummy}, %rd15306;
	}
	shf.l.wrap.b32 	%r10957, %r10956, %r10955, 10;
	shf.l.wrap.b32 	%r10958, %r10955, %r10956, 10;
	mov.b64 	%rd15336, {%r10958, %r10957};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10959}, %rd15312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10960,%dummy}, %rd15312;
	}
	shf.l.wrap.b32 	%r10961, %r10960, %r10959, 15;
	shf.l.wrap.b32 	%r10962, %r10959, %r10960, 15;
	mov.b64 	%rd15337, {%r10962, %r10961};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10963,%dummy}, %rd15318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10964}, %rd15318;
	}
	shf.r.wrap.b32 	%r10965, %r10964, %r10963, 8;
	shf.r.wrap.b32 	%r10966, %r10963, %r10964, 8;
	mov.b64 	%rd15338, {%r10966, %r10965};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10967,%dummy}, %rd15297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10968}, %rd15297;
	}
	shf.r.wrap.b32 	%r10969, %r10968, %r10967, 2;
	shf.r.wrap.b32 	%r10970, %r10967, %r10968, 2;
	mov.b64 	%rd15339, {%r10970, %r10969};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10971,%dummy}, %rd15303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10972}, %rd15303;
	}
	shf.r.wrap.b32 	%r10973, %r10972, %r10971, 9;
	shf.r.wrap.b32 	%r10974, %r10971, %r10972, 9;
	mov.b64 	%rd15340, {%r10974, %r10973};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10975,%dummy}, %rd15309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10976}, %rd15309;
	}
	shf.r.wrap.b32 	%r10977, %r10976, %r10975, 25;
	shf.r.wrap.b32 	%r10978, %r10975, %r10976, 25;
	mov.b64 	%rd15341, {%r10978, %r10977};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10979,%dummy}, %rd15310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10980}, %rd15310;
	}
	shf.r.wrap.b32 	%r10981, %r10980, %r10979, 23;
	shf.r.wrap.b32 	%r10982, %r10979, %r10980, 23;
	mov.b64 	%rd15342, {%r10982, %r10981};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10983}, %rd15316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10984,%dummy}, %rd15316;
	}
	shf.l.wrap.b32 	%r10985, %r10984, %r10983, 2;
	shf.l.wrap.b32 	%r10986, %r10983, %r10984, 2;
	mov.b64 	%rd15343, {%r10986, %r10985};
	not.b64 	%rd15344, %rd15320;
	and.b64  	%rd15345, %rd15321, %rd15344;
	xor.b64  	%rd15346, %rd15345, %rd15295;
	not.b64 	%rd15347, %rd15321;
	and.b64  	%rd15348, %rd15322, %rd15347;
	xor.b64  	%rd15349, %rd15348, %rd15320;
	not.b64 	%rd15350, %rd15322;
	and.b64  	%rd15351, %rd15323, %rd15350;
	xor.b64  	%rd15352, %rd15351, %rd15321;
	not.b64 	%rd15353, %rd15323;
	and.b64  	%rd15354, %rd15295, %rd15353;
	xor.b64  	%rd15355, %rd15354, %rd15322;
	not.b64 	%rd15356, %rd15295;
	and.b64  	%rd15357, %rd15320, %rd15356;
	xor.b64  	%rd15358, %rd15357, %rd15323;
	not.b64 	%rd15359, %rd15325;
	and.b64  	%rd15360, %rd15326, %rd15359;
	xor.b64  	%rd15361, %rd15360, %rd15324;
	not.b64 	%rd15362, %rd15326;
	and.b64  	%rd15363, %rd15327, %rd15362;
	xor.b64  	%rd15364, %rd15363, %rd15325;
	not.b64 	%rd15365, %rd15327;
	and.b64  	%rd15366, %rd15328, %rd15365;
	xor.b64  	%rd15367, %rd15366, %rd15326;
	not.b64 	%rd15368, %rd15328;
	and.b64  	%rd15369, %rd15324, %rd15368;
	xor.b64  	%rd15370, %rd15369, %rd15327;
	not.b64 	%rd15371, %rd15324;
	and.b64  	%rd15372, %rd15325, %rd15371;
	xor.b64  	%rd15373, %rd15372, %rd15328;
	not.b64 	%rd15374, %rd15330;
	and.b64  	%rd15375, %rd15331, %rd15374;
	xor.b64  	%rd15376, %rd15375, %rd15329;
	not.b64 	%rd15377, %rd15331;
	and.b64  	%rd15378, %rd15332, %rd15377;
	xor.b64  	%rd15379, %rd15378, %rd15330;
	not.b64 	%rd15380, %rd15332;
	and.b64  	%rd15381, %rd15333, %rd15380;
	xor.b64  	%rd15382, %rd15381, %rd15331;
	not.b64 	%rd15383, %rd15333;
	and.b64  	%rd15384, %rd15329, %rd15383;
	xor.b64  	%rd15385, %rd15384, %rd15332;
	not.b64 	%rd15386, %rd15329;
	and.b64  	%rd15387, %rd15330, %rd15386;
	xor.b64  	%rd15388, %rd15387, %rd15333;
	not.b64 	%rd15389, %rd15335;
	and.b64  	%rd15390, %rd15336, %rd15389;
	xor.b64  	%rd15391, %rd15390, %rd15334;
	not.b64 	%rd15392, %rd15336;
	and.b64  	%rd15393, %rd15337, %rd15392;
	xor.b64  	%rd15394, %rd15393, %rd15335;
	not.b64 	%rd15395, %rd15337;
	and.b64  	%rd15396, %rd15338, %rd15395;
	xor.b64  	%rd15397, %rd15396, %rd15336;
	not.b64 	%rd15398, %rd15338;
	and.b64  	%rd15399, %rd15334, %rd15398;
	xor.b64  	%rd15400, %rd15399, %rd15337;
	not.b64 	%rd15401, %rd15334;
	and.b64  	%rd15402, %rd15335, %rd15401;
	xor.b64  	%rd15403, %rd15402, %rd15338;
	not.b64 	%rd15404, %rd15340;
	and.b64  	%rd15405, %rd15341, %rd15404;
	xor.b64  	%rd15406, %rd15405, %rd15339;
	not.b64 	%rd15407, %rd15341;
	and.b64  	%rd15408, %rd15342, %rd15407;
	xor.b64  	%rd15409, %rd15408, %rd15340;
	not.b64 	%rd15410, %rd15342;
	and.b64  	%rd15411, %rd15343, %rd15410;
	xor.b64  	%rd15412, %rd15411, %rd15341;
	not.b64 	%rd15413, %rd15343;
	and.b64  	%rd15414, %rd15339, %rd15413;
	xor.b64  	%rd15415, %rd15414, %rd15342;
	not.b64 	%rd15416, %rd15339;
	and.b64  	%rd15417, %rd15340, %rd15416;
	xor.b64  	%rd15418, %rd15417, %rd15343;
	xor.b64  	%rd15419, %rd15346, %rd37;
	xor.b64  	%rd15420, %rd15361, %rd15419;
	xor.b64  	%rd15421, %rd15420, %rd15376;
	xor.b64  	%rd15422, %rd15421, %rd15391;
	xor.b64  	%rd15423, %rd15422, %rd15406;
	xor.b64  	%rd15424, %rd15364, %rd15349;
	xor.b64  	%rd15425, %rd15424, %rd15379;
	xor.b64  	%rd15426, %rd15425, %rd15394;
	xor.b64  	%rd15427, %rd15426, %rd15409;
	xor.b64  	%rd15428, %rd15367, %rd15352;
	xor.b64  	%rd15429, %rd15428, %rd15382;
	xor.b64  	%rd15430, %rd15429, %rd15397;
	xor.b64  	%rd15431, %rd15430, %rd15412;
	xor.b64  	%rd15432, %rd15370, %rd15355;
	xor.b64  	%rd15433, %rd15432, %rd15385;
	xor.b64  	%rd15434, %rd15433, %rd15400;
	xor.b64  	%rd15435, %rd15434, %rd15415;
	xor.b64  	%rd15436, %rd15373, %rd15358;
	xor.b64  	%rd15437, %rd15436, %rd15388;
	xor.b64  	%rd15438, %rd15437, %rd15403;
	xor.b64  	%rd15439, %rd15438, %rd15418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10987}, %rd15427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10988,%dummy}, %rd15427;
	}
	shf.l.wrap.b32 	%r10989, %r10988, %r10987, 1;
	shf.l.wrap.b32 	%r10990, %r10987, %r10988, 1;
	mov.b64 	%rd15440, {%r10990, %r10989};
	xor.b64  	%rd15441, %rd15439, %rd15440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10991}, %rd15431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10992,%dummy}, %rd15431;
	}
	shf.l.wrap.b32 	%r10993, %r10992, %r10991, 1;
	shf.l.wrap.b32 	%r10994, %r10991, %r10992, 1;
	mov.b64 	%rd15442, {%r10994, %r10993};
	xor.b64  	%rd15443, %rd15442, %rd15423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10995}, %rd15435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10996,%dummy}, %rd15435;
	}
	shf.l.wrap.b32 	%r10997, %r10996, %r10995, 1;
	shf.l.wrap.b32 	%r10998, %r10995, %r10996, 1;
	mov.b64 	%rd15444, {%r10998, %r10997};
	xor.b64  	%rd15445, %rd15444, %rd15427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10999}, %rd15439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11000,%dummy}, %rd15439;
	}
	shf.l.wrap.b32 	%r11001, %r11000, %r10999, 1;
	shf.l.wrap.b32 	%r11002, %r10999, %r11000, 1;
	mov.b64 	%rd15446, {%r11002, %r11001};
	xor.b64  	%rd15447, %rd15446, %rd15431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11003}, %rd15423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11004,%dummy}, %rd15423;
	}
	shf.l.wrap.b32 	%r11005, %r11004, %r11003, 1;
	shf.l.wrap.b32 	%r11006, %r11003, %r11004, 1;
	mov.b64 	%rd15448, {%r11006, %r11005};
	xor.b64  	%rd15449, %rd15435, %rd15448;
	xor.b64  	%rd15450, %rd15441, %rd15419;
	xor.b64  	%rd15451, %rd15443, %rd15349;
	xor.b64  	%rd15452, %rd15445, %rd15352;
	xor.b64  	%rd15453, %rd15447, %rd15355;
	xor.b64  	%rd15454, %rd15449, %rd15358;
	xor.b64  	%rd15455, %rd15441, %rd15361;
	xor.b64  	%rd15456, %rd15443, %rd15364;
	xor.b64  	%rd15457, %rd15445, %rd15367;
	xor.b64  	%rd15458, %rd15447, %rd15370;
	xor.b64  	%rd15459, %rd15449, %rd15373;
	xor.b64  	%rd15460, %rd15441, %rd15376;
	xor.b64  	%rd15461, %rd15443, %rd15379;
	xor.b64  	%rd15462, %rd15445, %rd15382;
	xor.b64  	%rd15463, %rd15447, %rd15385;
	xor.b64  	%rd15464, %rd15449, %rd15388;
	xor.b64  	%rd15465, %rd15441, %rd15391;
	xor.b64  	%rd15466, %rd15443, %rd15394;
	xor.b64  	%rd15467, %rd15445, %rd15397;
	xor.b64  	%rd15468, %rd15447, %rd15400;
	xor.b64  	%rd15469, %rd15449, %rd15403;
	xor.b64  	%rd15470, %rd15441, %rd15406;
	xor.b64  	%rd15471, %rd15443, %rd15409;
	xor.b64  	%rd15472, %rd15445, %rd15412;
	xor.b64  	%rd15473, %rd15447, %rd15415;
	xor.b64  	%rd15474, %rd15449, %rd15418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11007,%dummy}, %rd15456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11008}, %rd15456;
	}
	shf.r.wrap.b32 	%r11009, %r11008, %r11007, 20;
	shf.r.wrap.b32 	%r11010, %r11007, %r11008, 20;
	mov.b64 	%rd15475, {%r11010, %r11009};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11011,%dummy}, %rd15462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11012}, %rd15462;
	}
	shf.r.wrap.b32 	%r11013, %r11012, %r11011, 21;
	shf.r.wrap.b32 	%r11014, %r11011, %r11012, 21;
	mov.b64 	%rd15476, {%r11014, %r11013};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11015}, %rd15468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11016,%dummy}, %rd15468;
	}
	shf.l.wrap.b32 	%r11017, %r11016, %r11015, 21;
	shf.l.wrap.b32 	%r11018, %r11015, %r11016, 21;
	mov.b64 	%rd15477, {%r11018, %r11017};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11019}, %rd15474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11020,%dummy}, %rd15474;
	}
	shf.l.wrap.b32 	%r11021, %r11020, %r11019, 14;
	shf.l.wrap.b32 	%r11022, %r11019, %r11020, 14;
	mov.b64 	%rd15478, {%r11022, %r11021};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11023}, %rd15453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11024,%dummy}, %rd15453;
	}
	shf.l.wrap.b32 	%r11025, %r11024, %r11023, 28;
	shf.l.wrap.b32 	%r11026, %r11023, %r11024, 28;
	mov.b64 	%rd15479, {%r11026, %r11025};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11027}, %rd15459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11028,%dummy}, %rd15459;
	}
	shf.l.wrap.b32 	%r11029, %r11028, %r11027, 20;
	shf.l.wrap.b32 	%r11030, %r11027, %r11028, 20;
	mov.b64 	%rd15480, {%r11030, %r11029};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11031}, %rd15460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11032,%dummy}, %rd15460;
	}
	shf.l.wrap.b32 	%r11033, %r11032, %r11031, 3;
	shf.l.wrap.b32 	%r11034, %r11031, %r11032, 3;
	mov.b64 	%rd15481, {%r11034, %r11033};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11035,%dummy}, %rd15466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11036}, %rd15466;
	}
	shf.r.wrap.b32 	%r11037, %r11036, %r11035, 19;
	shf.r.wrap.b32 	%r11038, %r11035, %r11036, 19;
	mov.b64 	%rd15482, {%r11038, %r11037};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11039,%dummy}, %rd15472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11040}, %rd15472;
	}
	shf.r.wrap.b32 	%r11041, %r11040, %r11039, 3;
	shf.r.wrap.b32 	%r11042, %r11039, %r11040, 3;
	mov.b64 	%rd15483, {%r11042, %r11041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11043}, %rd15451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11044,%dummy}, %rd15451;
	}
	shf.l.wrap.b32 	%r11045, %r11044, %r11043, 1;
	shf.l.wrap.b32 	%r11046, %r11043, %r11044, 1;
	mov.b64 	%rd15484, {%r11046, %r11045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11047}, %rd15457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11048,%dummy}, %rd15457;
	}
	shf.l.wrap.b32 	%r11049, %r11048, %r11047, 6;
	shf.l.wrap.b32 	%r11050, %r11047, %r11048, 6;
	mov.b64 	%rd15485, {%r11050, %r11049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11051}, %rd15463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11052,%dummy}, %rd15463;
	}
	shf.l.wrap.b32 	%r11053, %r11052, %r11051, 25;
	shf.l.wrap.b32 	%r11054, %r11051, %r11052, 25;
	mov.b64 	%rd15486, {%r11054, %r11053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11055}, %rd15469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11056,%dummy}, %rd15469;
	}
	shf.l.wrap.b32 	%r11057, %r11056, %r11055, 8;
	shf.l.wrap.b32 	%r11058, %r11055, %r11056, 8;
	mov.b64 	%rd15487, {%r11058, %r11057};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11059}, %rd15470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11060,%dummy}, %rd15470;
	}
	shf.l.wrap.b32 	%r11061, %r11060, %r11059, 18;
	shf.l.wrap.b32 	%r11062, %r11059, %r11060, 18;
	mov.b64 	%rd15488, {%r11062, %r11061};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11063}, %rd15454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11064,%dummy}, %rd15454;
	}
	shf.l.wrap.b32 	%r11065, %r11064, %r11063, 27;
	shf.l.wrap.b32 	%r11066, %r11063, %r11064, 27;
	mov.b64 	%rd15489, {%r11066, %r11065};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11067,%dummy}, %rd15455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11068}, %rd15455;
	}
	shf.r.wrap.b32 	%r11069, %r11068, %r11067, 28;
	shf.r.wrap.b32 	%r11070, %r11067, %r11068, 28;
	mov.b64 	%rd15490, {%r11070, %r11069};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd15461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11072,%dummy}, %rd15461;
	}
	shf.l.wrap.b32 	%r11073, %r11072, %r11071, 10;
	shf.l.wrap.b32 	%r11074, %r11071, %r11072, 10;
	mov.b64 	%rd15491, {%r11074, %r11073};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11075}, %rd15467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11076,%dummy}, %rd15467;
	}
	shf.l.wrap.b32 	%r11077, %r11076, %r11075, 15;
	shf.l.wrap.b32 	%r11078, %r11075, %r11076, 15;
	mov.b64 	%rd15492, {%r11078, %r11077};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11079,%dummy}, %rd15473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11080}, %rd15473;
	}
	shf.r.wrap.b32 	%r11081, %r11080, %r11079, 8;
	shf.r.wrap.b32 	%r11082, %r11079, %r11080, 8;
	mov.b64 	%rd15493, {%r11082, %r11081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11083,%dummy}, %rd15452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11084}, %rd15452;
	}
	shf.r.wrap.b32 	%r11085, %r11084, %r11083, 2;
	shf.r.wrap.b32 	%r11086, %r11083, %r11084, 2;
	mov.b64 	%rd15494, {%r11086, %r11085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11087,%dummy}, %rd15458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11088}, %rd15458;
	}
	shf.r.wrap.b32 	%r11089, %r11088, %r11087, 9;
	shf.r.wrap.b32 	%r11090, %r11087, %r11088, 9;
	mov.b64 	%rd15495, {%r11090, %r11089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11091,%dummy}, %rd15464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11092}, %rd15464;
	}
	shf.r.wrap.b32 	%r11093, %r11092, %r11091, 25;
	shf.r.wrap.b32 	%r11094, %r11091, %r11092, 25;
	mov.b64 	%rd15496, {%r11094, %r11093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11095,%dummy}, %rd15465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11096}, %rd15465;
	}
	shf.r.wrap.b32 	%r11097, %r11096, %r11095, 23;
	shf.r.wrap.b32 	%r11098, %r11095, %r11096, 23;
	mov.b64 	%rd15497, {%r11098, %r11097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11099}, %rd15471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11100,%dummy}, %rd15471;
	}
	shf.l.wrap.b32 	%r11101, %r11100, %r11099, 2;
	shf.l.wrap.b32 	%r11102, %r11099, %r11100, 2;
	mov.b64 	%rd15498, {%r11102, %r11101};
	not.b64 	%rd15499, %rd15475;
	and.b64  	%rd15500, %rd15476, %rd15499;
	xor.b64  	%rd15501, %rd15500, %rd15450;
	not.b64 	%rd15502, %rd15476;
	and.b64  	%rd15503, %rd15477, %rd15502;
	xor.b64  	%rd15504, %rd15503, %rd15475;
	not.b64 	%rd15505, %rd15477;
	and.b64  	%rd15506, %rd15478, %rd15505;
	xor.b64  	%rd15507, %rd15506, %rd15476;
	not.b64 	%rd15508, %rd15478;
	and.b64  	%rd15509, %rd15450, %rd15508;
	xor.b64  	%rd15510, %rd15509, %rd15477;
	not.b64 	%rd15511, %rd15450;
	and.b64  	%rd15512, %rd15475, %rd15511;
	xor.b64  	%rd15513, %rd15512, %rd15478;
	not.b64 	%rd15514, %rd15480;
	and.b64  	%rd15515, %rd15481, %rd15514;
	xor.b64  	%rd15516, %rd15515, %rd15479;
	not.b64 	%rd15517, %rd15481;
	and.b64  	%rd15518, %rd15482, %rd15517;
	xor.b64  	%rd15519, %rd15518, %rd15480;
	not.b64 	%rd15520, %rd15482;
	and.b64  	%rd15521, %rd15483, %rd15520;
	xor.b64  	%rd15522, %rd15521, %rd15481;
	not.b64 	%rd15523, %rd15483;
	and.b64  	%rd15524, %rd15479, %rd15523;
	xor.b64  	%rd15525, %rd15524, %rd15482;
	not.b64 	%rd15526, %rd15479;
	and.b64  	%rd15527, %rd15480, %rd15526;
	xor.b64  	%rd15528, %rd15527, %rd15483;
	not.b64 	%rd15529, %rd15485;
	and.b64  	%rd15530, %rd15486, %rd15529;
	xor.b64  	%rd15531, %rd15530, %rd15484;
	not.b64 	%rd15532, %rd15486;
	and.b64  	%rd15533, %rd15487, %rd15532;
	xor.b64  	%rd15534, %rd15533, %rd15485;
	not.b64 	%rd15535, %rd15487;
	and.b64  	%rd15536, %rd15488, %rd15535;
	xor.b64  	%rd15537, %rd15536, %rd15486;
	not.b64 	%rd15538, %rd15488;
	and.b64  	%rd15539, %rd15484, %rd15538;
	xor.b64  	%rd15540, %rd15539, %rd15487;
	not.b64 	%rd15541, %rd15484;
	and.b64  	%rd15542, %rd15485, %rd15541;
	xor.b64  	%rd15543, %rd15542, %rd15488;
	not.b64 	%rd15544, %rd15490;
	and.b64  	%rd15545, %rd15491, %rd15544;
	xor.b64  	%rd15546, %rd15545, %rd15489;
	not.b64 	%rd15547, %rd15491;
	and.b64  	%rd15548, %rd15492, %rd15547;
	xor.b64  	%rd15549, %rd15548, %rd15490;
	not.b64 	%rd15550, %rd15492;
	and.b64  	%rd15551, %rd15493, %rd15550;
	xor.b64  	%rd15552, %rd15551, %rd15491;
	not.b64 	%rd15553, %rd15493;
	and.b64  	%rd15554, %rd15489, %rd15553;
	xor.b64  	%rd15555, %rd15554, %rd15492;
	not.b64 	%rd15556, %rd15489;
	and.b64  	%rd15557, %rd15490, %rd15556;
	xor.b64  	%rd15558, %rd15557, %rd15493;
	not.b64 	%rd15559, %rd15495;
	and.b64  	%rd15560, %rd15496, %rd15559;
	xor.b64  	%rd15561, %rd15560, %rd15494;
	not.b64 	%rd15562, %rd15496;
	and.b64  	%rd15563, %rd15497, %rd15562;
	xor.b64  	%rd15564, %rd15563, %rd15495;
	not.b64 	%rd15565, %rd15497;
	and.b64  	%rd15566, %rd15498, %rd15565;
	xor.b64  	%rd15567, %rd15566, %rd15496;
	not.b64 	%rd15568, %rd15498;
	and.b64  	%rd15569, %rd15494, %rd15568;
	xor.b64  	%rd15570, %rd15569, %rd15497;
	not.b64 	%rd15571, %rd15494;
	and.b64  	%rd15572, %rd15495, %rd15571;
	xor.b64  	%rd15573, %rd15572, %rd15498;
	xor.b64  	%rd15574, %rd15501, %rd38;
	xor.b64  	%rd15575, %rd15516, %rd15574;
	xor.b64  	%rd15576, %rd15575, %rd15531;
	xor.b64  	%rd15577, %rd15576, %rd15546;
	xor.b64  	%rd15578, %rd15577, %rd15561;
	xor.b64  	%rd15579, %rd15519, %rd15504;
	xor.b64  	%rd15580, %rd15579, %rd15534;
	xor.b64  	%rd15581, %rd15580, %rd15549;
	xor.b64  	%rd15582, %rd15581, %rd15564;
	xor.b64  	%rd15583, %rd15522, %rd15507;
	xor.b64  	%rd15584, %rd15583, %rd15537;
	xor.b64  	%rd15585, %rd15584, %rd15552;
	xor.b64  	%rd15586, %rd15585, %rd15567;
	xor.b64  	%rd15587, %rd15525, %rd15510;
	xor.b64  	%rd15588, %rd15587, %rd15540;
	xor.b64  	%rd15589, %rd15588, %rd15555;
	xor.b64  	%rd15590, %rd15589, %rd15570;
	xor.b64  	%rd15591, %rd15528, %rd15513;
	xor.b64  	%rd15592, %rd15591, %rd15543;
	xor.b64  	%rd15593, %rd15592, %rd15558;
	xor.b64  	%rd15594, %rd15593, %rd15573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11103}, %rd15582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11104,%dummy}, %rd15582;
	}
	shf.l.wrap.b32 	%r11105, %r11104, %r11103, 1;
	shf.l.wrap.b32 	%r11106, %r11103, %r11104, 1;
	mov.b64 	%rd15595, {%r11106, %r11105};
	xor.b64  	%rd15596, %rd15594, %rd15595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11107}, %rd15586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11108,%dummy}, %rd15586;
	}
	shf.l.wrap.b32 	%r11109, %r11108, %r11107, 1;
	shf.l.wrap.b32 	%r11110, %r11107, %r11108, 1;
	mov.b64 	%rd15597, {%r11110, %r11109};
	xor.b64  	%rd15598, %rd15597, %rd15578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11111}, %rd15590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11112,%dummy}, %rd15590;
	}
	shf.l.wrap.b32 	%r11113, %r11112, %r11111, 1;
	shf.l.wrap.b32 	%r11114, %r11111, %r11112, 1;
	mov.b64 	%rd15599, {%r11114, %r11113};
	xor.b64  	%rd15600, %rd15599, %rd15582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11115}, %rd15594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11116,%dummy}, %rd15594;
	}
	shf.l.wrap.b32 	%r11117, %r11116, %r11115, 1;
	shf.l.wrap.b32 	%r11118, %r11115, %r11116, 1;
	mov.b64 	%rd15601, {%r11118, %r11117};
	xor.b64  	%rd15602, %rd15601, %rd15586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd15578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11120,%dummy}, %rd15578;
	}
	shf.l.wrap.b32 	%r11121, %r11120, %r11119, 1;
	shf.l.wrap.b32 	%r11122, %r11119, %r11120, 1;
	mov.b64 	%rd15603, {%r11122, %r11121};
	xor.b64  	%rd15604, %rd15590, %rd15603;
	xor.b64  	%rd15605, %rd15596, %rd15574;
	xor.b64  	%rd15606, %rd15598, %rd15504;
	xor.b64  	%rd15607, %rd15600, %rd15507;
	xor.b64  	%rd15608, %rd15602, %rd15510;
	xor.b64  	%rd15609, %rd15604, %rd15513;
	xor.b64  	%rd15610, %rd15596, %rd15516;
	xor.b64  	%rd15611, %rd15598, %rd15519;
	xor.b64  	%rd15612, %rd15600, %rd15522;
	xor.b64  	%rd15613, %rd15602, %rd15525;
	xor.b64  	%rd15614, %rd15604, %rd15528;
	xor.b64  	%rd15615, %rd15596, %rd15531;
	xor.b64  	%rd15616, %rd15598, %rd15534;
	xor.b64  	%rd15617, %rd15600, %rd15537;
	xor.b64  	%rd15618, %rd15602, %rd15540;
	xor.b64  	%rd15619, %rd15604, %rd15543;
	xor.b64  	%rd15620, %rd15596, %rd15546;
	xor.b64  	%rd15621, %rd15598, %rd15549;
	xor.b64  	%rd15622, %rd15600, %rd15552;
	xor.b64  	%rd15623, %rd15602, %rd15555;
	xor.b64  	%rd15624, %rd15604, %rd15558;
	xor.b64  	%rd15625, %rd15596, %rd15561;
	xor.b64  	%rd15626, %rd15598, %rd15564;
	xor.b64  	%rd15627, %rd15600, %rd15567;
	xor.b64  	%rd15628, %rd15602, %rd15570;
	xor.b64  	%rd15629, %rd15604, %rd15573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11123,%dummy}, %rd15611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11124}, %rd15611;
	}
	shf.r.wrap.b32 	%r11125, %r11124, %r11123, 20;
	shf.r.wrap.b32 	%r11126, %r11123, %r11124, 20;
	mov.b64 	%rd15630, {%r11126, %r11125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11127,%dummy}, %rd15617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11128}, %rd15617;
	}
	shf.r.wrap.b32 	%r11129, %r11128, %r11127, 21;
	shf.r.wrap.b32 	%r11130, %r11127, %r11128, 21;
	mov.b64 	%rd15631, {%r11130, %r11129};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11131}, %rd15623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11132,%dummy}, %rd15623;
	}
	shf.l.wrap.b32 	%r11133, %r11132, %r11131, 21;
	shf.l.wrap.b32 	%r11134, %r11131, %r11132, 21;
	mov.b64 	%rd15632, {%r11134, %r11133};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11135}, %rd15629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11136,%dummy}, %rd15629;
	}
	shf.l.wrap.b32 	%r11137, %r11136, %r11135, 14;
	shf.l.wrap.b32 	%r11138, %r11135, %r11136, 14;
	mov.b64 	%rd15633, {%r11138, %r11137};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11139}, %rd15608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11140,%dummy}, %rd15608;
	}
	shf.l.wrap.b32 	%r11141, %r11140, %r11139, 28;
	shf.l.wrap.b32 	%r11142, %r11139, %r11140, 28;
	mov.b64 	%rd15634, {%r11142, %r11141};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11143}, %rd15614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11144,%dummy}, %rd15614;
	}
	shf.l.wrap.b32 	%r11145, %r11144, %r11143, 20;
	shf.l.wrap.b32 	%r11146, %r11143, %r11144, 20;
	mov.b64 	%rd15635, {%r11146, %r11145};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11147}, %rd15615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11148,%dummy}, %rd15615;
	}
	shf.l.wrap.b32 	%r11149, %r11148, %r11147, 3;
	shf.l.wrap.b32 	%r11150, %r11147, %r11148, 3;
	mov.b64 	%rd15636, {%r11150, %r11149};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11151,%dummy}, %rd15621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11152}, %rd15621;
	}
	shf.r.wrap.b32 	%r11153, %r11152, %r11151, 19;
	shf.r.wrap.b32 	%r11154, %r11151, %r11152, 19;
	mov.b64 	%rd15637, {%r11154, %r11153};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11155,%dummy}, %rd15627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11156}, %rd15627;
	}
	shf.r.wrap.b32 	%r11157, %r11156, %r11155, 3;
	shf.r.wrap.b32 	%r11158, %r11155, %r11156, 3;
	mov.b64 	%rd15638, {%r11158, %r11157};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11159}, %rd15606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11160,%dummy}, %rd15606;
	}
	shf.l.wrap.b32 	%r11161, %r11160, %r11159, 1;
	shf.l.wrap.b32 	%r11162, %r11159, %r11160, 1;
	mov.b64 	%rd15639, {%r11162, %r11161};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11163}, %rd15612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11164,%dummy}, %rd15612;
	}
	shf.l.wrap.b32 	%r11165, %r11164, %r11163, 6;
	shf.l.wrap.b32 	%r11166, %r11163, %r11164, 6;
	mov.b64 	%rd15640, {%r11166, %r11165};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11167}, %rd15618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11168,%dummy}, %rd15618;
	}
	shf.l.wrap.b32 	%r11169, %r11168, %r11167, 25;
	shf.l.wrap.b32 	%r11170, %r11167, %r11168, 25;
	mov.b64 	%rd15641, {%r11170, %r11169};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11171}, %rd15624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11172,%dummy}, %rd15624;
	}
	shf.l.wrap.b32 	%r11173, %r11172, %r11171, 8;
	shf.l.wrap.b32 	%r11174, %r11171, %r11172, 8;
	mov.b64 	%rd15642, {%r11174, %r11173};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11175}, %rd15625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11176,%dummy}, %rd15625;
	}
	shf.l.wrap.b32 	%r11177, %r11176, %r11175, 18;
	shf.l.wrap.b32 	%r11178, %r11175, %r11176, 18;
	mov.b64 	%rd15643, {%r11178, %r11177};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd15609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11180,%dummy}, %rd15609;
	}
	shf.l.wrap.b32 	%r11181, %r11180, %r11179, 27;
	shf.l.wrap.b32 	%r11182, %r11179, %r11180, 27;
	mov.b64 	%rd15644, {%r11182, %r11181};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11183,%dummy}, %rd15610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11184}, %rd15610;
	}
	shf.r.wrap.b32 	%r11185, %r11184, %r11183, 28;
	shf.r.wrap.b32 	%r11186, %r11183, %r11184, 28;
	mov.b64 	%rd15645, {%r11186, %r11185};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11187}, %rd15616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11188,%dummy}, %rd15616;
	}
	shf.l.wrap.b32 	%r11189, %r11188, %r11187, 10;
	shf.l.wrap.b32 	%r11190, %r11187, %r11188, 10;
	mov.b64 	%rd15646, {%r11190, %r11189};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11191}, %rd15622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11192,%dummy}, %rd15622;
	}
	shf.l.wrap.b32 	%r11193, %r11192, %r11191, 15;
	shf.l.wrap.b32 	%r11194, %r11191, %r11192, 15;
	mov.b64 	%rd15647, {%r11194, %r11193};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11195,%dummy}, %rd15628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11196}, %rd15628;
	}
	shf.r.wrap.b32 	%r11197, %r11196, %r11195, 8;
	shf.r.wrap.b32 	%r11198, %r11195, %r11196, 8;
	mov.b64 	%rd15648, {%r11198, %r11197};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11199,%dummy}, %rd15607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11200}, %rd15607;
	}
	shf.r.wrap.b32 	%r11201, %r11200, %r11199, 2;
	shf.r.wrap.b32 	%r11202, %r11199, %r11200, 2;
	mov.b64 	%rd15649, {%r11202, %r11201};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11203,%dummy}, %rd15613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11204}, %rd15613;
	}
	shf.r.wrap.b32 	%r11205, %r11204, %r11203, 9;
	shf.r.wrap.b32 	%r11206, %r11203, %r11204, 9;
	mov.b64 	%rd15650, {%r11206, %r11205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11207,%dummy}, %rd15619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11208}, %rd15619;
	}
	shf.r.wrap.b32 	%r11209, %r11208, %r11207, 25;
	shf.r.wrap.b32 	%r11210, %r11207, %r11208, 25;
	mov.b64 	%rd15651, {%r11210, %r11209};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11211,%dummy}, %rd15620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11212}, %rd15620;
	}
	shf.r.wrap.b32 	%r11213, %r11212, %r11211, 23;
	shf.r.wrap.b32 	%r11214, %r11211, %r11212, 23;
	mov.b64 	%rd15652, {%r11214, %r11213};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11215}, %rd15626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11216,%dummy}, %rd15626;
	}
	shf.l.wrap.b32 	%r11217, %r11216, %r11215, 2;
	shf.l.wrap.b32 	%r11218, %r11215, %r11216, 2;
	mov.b64 	%rd15653, {%r11218, %r11217};
	not.b64 	%rd15654, %rd15630;
	and.b64  	%rd15655, %rd15631, %rd15654;
	xor.b64  	%rd15656, %rd15655, %rd15605;
	not.b64 	%rd15657, %rd15631;
	and.b64  	%rd15658, %rd15632, %rd15657;
	xor.b64  	%rd15659, %rd15658, %rd15630;
	st.local.u64 	[%rd2+8], %rd15659;
	not.b64 	%rd15660, %rd15632;
	and.b64  	%rd15661, %rd15633, %rd15660;
	xor.b64  	%rd15662, %rd15661, %rd15631;
	st.local.u64 	[%rd2+16], %rd15662;
	not.b64 	%rd15663, %rd15633;
	and.b64  	%rd15664, %rd15605, %rd15663;
	xor.b64  	%rd15665, %rd15664, %rd15632;
	st.local.u64 	[%rd2+24], %rd15665;
	not.b64 	%rd15666, %rd15605;
	and.b64  	%rd15667, %rd15630, %rd15666;
	xor.b64  	%rd15668, %rd15667, %rd15633;
	st.local.u64 	[%rd2+32], %rd15668;
	not.b64 	%rd15669, %rd15635;
	and.b64  	%rd15670, %rd15636, %rd15669;
	xor.b64  	%rd15671, %rd15670, %rd15634;
	st.local.u64 	[%rd2+40], %rd15671;
	not.b64 	%rd15672, %rd15636;
	and.b64  	%rd15673, %rd15637, %rd15672;
	xor.b64  	%rd15674, %rd15673, %rd15635;
	st.local.u64 	[%rd2+48], %rd15674;
	not.b64 	%rd15675, %rd15637;
	and.b64  	%rd15676, %rd15638, %rd15675;
	xor.b64  	%rd15677, %rd15676, %rd15636;
	st.local.u64 	[%rd2+56], %rd15677;
	not.b64 	%rd15678, %rd15638;
	and.b64  	%rd15679, %rd15634, %rd15678;
	xor.b64  	%rd15680, %rd15679, %rd15637;
	st.local.u64 	[%rd2+64], %rd15680;
	not.b64 	%rd15681, %rd15634;
	and.b64  	%rd15682, %rd15635, %rd15681;
	xor.b64  	%rd15683, %rd15682, %rd15638;
	st.local.u64 	[%rd2+72], %rd15683;
	not.b64 	%rd15684, %rd15640;
	and.b64  	%rd15685, %rd15641, %rd15684;
	xor.b64  	%rd15686, %rd15685, %rd15639;
	st.local.u64 	[%rd2+80], %rd15686;
	not.b64 	%rd15687, %rd15641;
	and.b64  	%rd15688, %rd15642, %rd15687;
	xor.b64  	%rd15689, %rd15688, %rd15640;
	st.local.u64 	[%rd2+88], %rd15689;
	not.b64 	%rd15690, %rd15642;
	and.b64  	%rd15691, %rd15643, %rd15690;
	xor.b64  	%rd15692, %rd15691, %rd15641;
	st.local.u64 	[%rd2+96], %rd15692;
	not.b64 	%rd15693, %rd15643;
	and.b64  	%rd15694, %rd15639, %rd15693;
	xor.b64  	%rd15695, %rd15694, %rd15642;
	st.local.u64 	[%rd2+104], %rd15695;
	not.b64 	%rd15696, %rd15639;
	and.b64  	%rd15697, %rd15640, %rd15696;
	xor.b64  	%rd15698, %rd15697, %rd15643;
	st.local.u64 	[%rd2+112], %rd15698;
	not.b64 	%rd15699, %rd15645;
	and.b64  	%rd15700, %rd15646, %rd15699;
	xor.b64  	%rd15701, %rd15700, %rd15644;
	st.local.u64 	[%rd2+120], %rd15701;
	not.b64 	%rd15702, %rd15646;
	and.b64  	%rd15703, %rd15647, %rd15702;
	xor.b64  	%rd15704, %rd15703, %rd15645;
	st.local.u64 	[%rd2+128], %rd15704;
	not.b64 	%rd15705, %rd15647;
	and.b64  	%rd15706, %rd15648, %rd15705;
	xor.b64  	%rd15707, %rd15706, %rd15646;
	st.local.u64 	[%rd2+136], %rd15707;
	not.b64 	%rd15708, %rd15648;
	and.b64  	%rd15709, %rd15644, %rd15708;
	xor.b64  	%rd15710, %rd15709, %rd15647;
	st.local.u64 	[%rd2+144], %rd15710;
	not.b64 	%rd15711, %rd15644;
	and.b64  	%rd15712, %rd15645, %rd15711;
	xor.b64  	%rd15713, %rd15712, %rd15648;
	st.local.u64 	[%rd2+152], %rd15713;
	not.b64 	%rd15714, %rd15650;
	and.b64  	%rd15715, %rd15651, %rd15714;
	xor.b64  	%rd15716, %rd15715, %rd15649;
	st.local.u64 	[%rd2+160], %rd15716;
	not.b64 	%rd15717, %rd15651;
	and.b64  	%rd15718, %rd15652, %rd15717;
	xor.b64  	%rd15719, %rd15718, %rd15650;
	st.local.u64 	[%rd2+168], %rd15719;
	not.b64 	%rd15720, %rd15652;
	and.b64  	%rd15721, %rd15653, %rd15720;
	xor.b64  	%rd15722, %rd15721, %rd15651;
	st.local.u64 	[%rd2+176], %rd15722;
	not.b64 	%rd15723, %rd15653;
	and.b64  	%rd15724, %rd15649, %rd15723;
	xor.b64  	%rd15725, %rd15724, %rd15652;
	st.local.u64 	[%rd2+184], %rd15725;
	not.b64 	%rd15726, %rd15649;
	and.b64  	%rd15727, %rd15650, %rd15726;
	xor.b64  	%rd15728, %rd15727, %rd15653;
	st.local.u64 	[%rd2+192], %rd15728;
	xor.b64  	%rd15729, %rd15656, %rd39;
	st.local.u64 	[%rd2], %rd15729;
	shr.u64 	%rd130, %rd7995, 6;
	setp.eq.s64 	%p39, %rd130, 0;
	@%p39 bra 	$L__BB1_52;

	add.s64 	%rd15730, %rd130, -1;
	and.b64  	%rd19862, %rd130, 3;
	setp.lt.u64 	%p40, %rd15730, 3;
	mov.u32 	%r14037, 0;
	@%p40 bra 	$L__BB1_50;

	sub.s64 	%rd19861, %rd130, %rd19862;

$L__BB1_49:
	mul.wide.s32 	%rd15731, %r14037, 8;
	add.s64 	%rd15732, %rd2, %rd15731;
	ld.local.u8 	%rd15733, [%rd15732];
	ld.local.u8 	%rd15734, [%rd15732+1];
	bfi.b64 	%rd15735, %rd15734, %rd15733, 8, 8;
	ld.local.u8 	%rd15736, [%rd15732+2];
	ld.local.u8 	%rd15737, [%rd15732+3];
	bfi.b64 	%rd15738, %rd15737, %rd15736, 8, 8;
	bfi.b64 	%rd15739, %rd15738, %rd15735, 16, 16;
	ld.local.u8 	%rd15740, [%rd15732+4];
	ld.local.u8 	%rd15741, [%rd15732+5];
	bfi.b64 	%rd15742, %rd15741, %rd15740, 8, 8;
	ld.local.u8 	%rd15743, [%rd15732+6];
	ld.local.u8 	%rd15744, [%rd15732+7];
	bfi.b64 	%rd15745, %rd15744, %rd15743, 8, 8;
	bfi.b64 	%rd15746, %rd15745, %rd15742, 16, 16;
	bfi.b64 	%rd15747, %rd15746, %rd15739, 32, 32;
	st.local.u8 	[%rd15732+200], %rd15735;
	shr.u64 	%rd15748, %rd15735, 8;
	st.local.u8 	[%rd15732+201], %rd15748;
	shr.u64 	%rd15749, %rd15739, 24;
	st.local.u8 	[%rd15732+203], %rd15749;
	shr.u64 	%rd15750, %rd15739, 16;
	st.local.u8 	[%rd15732+202], %rd15750;
	shr.u64 	%rd15751, %rd15747, 56;
	st.local.u8 	[%rd15732+207], %rd15751;
	shr.u64 	%rd15752, %rd15747, 48;
	st.local.u8 	[%rd15732+206], %rd15752;
	shr.u64 	%rd15753, %rd15747, 40;
	st.local.u8 	[%rd15732+205], %rd15753;
	shr.u64 	%rd15754, %rd15747, 32;
	st.local.u8 	[%rd15732+204], %rd15754;
	ld.local.u8 	%rd15755, [%rd15732+8];
	ld.local.u8 	%rd15756, [%rd15732+9];
	bfi.b64 	%rd15757, %rd15756, %rd15755, 8, 8;
	ld.local.u8 	%rd15758, [%rd15732+10];
	ld.local.u8 	%rd15759, [%rd15732+11];
	bfi.b64 	%rd15760, %rd15759, %rd15758, 8, 8;
	bfi.b64 	%rd15761, %rd15760, %rd15757, 16, 16;
	ld.local.u8 	%rd15762, [%rd15732+12];
	ld.local.u8 	%rd15763, [%rd15732+13];
	bfi.b64 	%rd15764, %rd15763, %rd15762, 8, 8;
	ld.local.u8 	%rd15765, [%rd15732+14];
	ld.local.u8 	%rd15766, [%rd15732+15];
	bfi.b64 	%rd15767, %rd15766, %rd15765, 8, 8;
	bfi.b64 	%rd15768, %rd15767, %rd15764, 16, 16;
	bfi.b64 	%rd15769, %rd15768, %rd15761, 32, 32;
	st.local.u8 	[%rd15732+208], %rd15757;
	shr.u64 	%rd15770, %rd15757, 8;
	st.local.u8 	[%rd15732+209], %rd15770;
	shr.u64 	%rd15771, %rd15761, 24;
	st.local.u8 	[%rd15732+211], %rd15771;
	shr.u64 	%rd15772, %rd15761, 16;
	st.local.u8 	[%rd15732+210], %rd15772;
	shr.u64 	%rd15773, %rd15769, 56;
	st.local.u8 	[%rd15732+215], %rd15773;
	shr.u64 	%rd15774, %rd15769, 48;
	st.local.u8 	[%rd15732+214], %rd15774;
	shr.u64 	%rd15775, %rd15769, 40;
	st.local.u8 	[%rd15732+213], %rd15775;
	shr.u64 	%rd15776, %rd15769, 32;
	st.local.u8 	[%rd15732+212], %rd15776;
	ld.local.u8 	%rd15777, [%rd15732+16];
	ld.local.u8 	%rd15778, [%rd15732+17];
	bfi.b64 	%rd15779, %rd15778, %rd15777, 8, 8;
	ld.local.u8 	%rd15780, [%rd15732+18];
	ld.local.u8 	%rd15781, [%rd15732+19];
	bfi.b64 	%rd15782, %rd15781, %rd15780, 8, 8;
	bfi.b64 	%rd15783, %rd15782, %rd15779, 16, 16;
	ld.local.u8 	%rd15784, [%rd15732+20];
	ld.local.u8 	%rd15785, [%rd15732+21];
	bfi.b64 	%rd15786, %rd15785, %rd15784, 8, 8;
	ld.local.u8 	%rd15787, [%rd15732+22];
	ld.local.u8 	%rd15788, [%rd15732+23];
	bfi.b64 	%rd15789, %rd15788, %rd15787, 8, 8;
	bfi.b64 	%rd15790, %rd15789, %rd15786, 16, 16;
	bfi.b64 	%rd15791, %rd15790, %rd15783, 32, 32;
	st.local.u8 	[%rd15732+216], %rd15779;
	shr.u64 	%rd15792, %rd15779, 8;
	st.local.u8 	[%rd15732+217], %rd15792;
	shr.u64 	%rd15793, %rd15783, 24;
	st.local.u8 	[%rd15732+219], %rd15793;
	shr.u64 	%rd15794, %rd15783, 16;
	st.local.u8 	[%rd15732+218], %rd15794;
	shr.u64 	%rd15795, %rd15791, 56;
	st.local.u8 	[%rd15732+223], %rd15795;
	shr.u64 	%rd15796, %rd15791, 48;
	st.local.u8 	[%rd15732+222], %rd15796;
	shr.u64 	%rd15797, %rd15791, 40;
	st.local.u8 	[%rd15732+221], %rd15797;
	shr.u64 	%rd15798, %rd15791, 32;
	st.local.u8 	[%rd15732+220], %rd15798;
	ld.local.u8 	%rd15799, [%rd15732+24];
	ld.local.u8 	%rd15800, [%rd15732+25];
	bfi.b64 	%rd15801, %rd15800, %rd15799, 8, 8;
	ld.local.u8 	%rd15802, [%rd15732+26];
	ld.local.u8 	%rd15803, [%rd15732+27];
	bfi.b64 	%rd15804, %rd15803, %rd15802, 8, 8;
	bfi.b64 	%rd15805, %rd15804, %rd15801, 16, 16;
	ld.local.u8 	%rd15806, [%rd15732+28];
	ld.local.u8 	%rd15807, [%rd15732+29];
	bfi.b64 	%rd15808, %rd15807, %rd15806, 8, 8;
	ld.local.u8 	%rd15809, [%rd15732+30];
	ld.local.u8 	%rd15810, [%rd15732+31];
	bfi.b64 	%rd15811, %rd15810, %rd15809, 8, 8;
	bfi.b64 	%rd15812, %rd15811, %rd15808, 16, 16;
	bfi.b64 	%rd15813, %rd15812, %rd15805, 32, 32;
	st.local.u8 	[%rd15732+224], %rd15801;
	shr.u64 	%rd15814, %rd15801, 8;
	st.local.u8 	[%rd15732+225], %rd15814;
	shr.u64 	%rd15815, %rd15805, 24;
	st.local.u8 	[%rd15732+227], %rd15815;
	shr.u64 	%rd15816, %rd15805, 16;
	st.local.u8 	[%rd15732+226], %rd15816;
	shr.u64 	%rd15817, %rd15813, 56;
	st.local.u8 	[%rd15732+231], %rd15817;
	shr.u64 	%rd15818, %rd15813, 48;
	st.local.u8 	[%rd15732+230], %rd15818;
	shr.u64 	%rd15819, %rd15813, 40;
	st.local.u8 	[%rd15732+229], %rd15819;
	shr.u64 	%rd15820, %rd15813, 32;
	st.local.u8 	[%rd15732+228], %rd15820;
	add.s32 	%r14037, %r14037, 4;
	add.s64 	%rd19861, %rd19861, -4;
	setp.ne.s64 	%p41, %rd19861, 0;
	@%p41 bra 	$L__BB1_49;

$L__BB1_50:
	setp.eq.s64 	%p42, %rd19862, 0;
	@%p42 bra 	$L__BB1_52;

$L__BB1_51:
	.pragma "nounroll";
	mul.wide.s32 	%rd15821, %r14037, 8;
	add.s64 	%rd15822, %rd2, %rd15821;
	ld.local.u8 	%rd15823, [%rd15822];
	ld.local.u8 	%rd15824, [%rd15822+1];
	bfi.b64 	%rd15825, %rd15824, %rd15823, 8, 8;
	ld.local.u8 	%rd15826, [%rd15822+2];
	ld.local.u8 	%rd15827, [%rd15822+3];
	bfi.b64 	%rd15828, %rd15827, %rd15826, 8, 8;
	bfi.b64 	%rd15829, %rd15828, %rd15825, 16, 16;
	ld.local.u8 	%rd15830, [%rd15822+4];
	ld.local.u8 	%rd15831, [%rd15822+5];
	bfi.b64 	%rd15832, %rd15831, %rd15830, 8, 8;
	ld.local.u8 	%rd15833, [%rd15822+6];
	ld.local.u8 	%rd15834, [%rd15822+7];
	bfi.b64 	%rd15835, %rd15834, %rd15833, 8, 8;
	bfi.b64 	%rd15836, %rd15835, %rd15832, 16, 16;
	bfi.b64 	%rd15837, %rd15836, %rd15829, 32, 32;
	shl.b32 	%r11221, %r14037, 3;
	cvt.s64.s32 	%rd15838, %r11221;
	add.s64 	%rd15839, %rd2, %rd15838;
	st.local.u8 	[%rd15839+200], %rd15825;
	shr.u64 	%rd15840, %rd15825, 8;
	st.local.u8 	[%rd15839+201], %rd15840;
	shr.u64 	%rd15841, %rd15829, 24;
	st.local.u8 	[%rd15839+203], %rd15841;
	shr.u64 	%rd15842, %rd15829, 16;
	st.local.u8 	[%rd15839+202], %rd15842;
	shr.u64 	%rd15843, %rd15837, 56;
	st.local.u8 	[%rd15839+207], %rd15843;
	shr.u64 	%rd15844, %rd15837, 48;
	st.local.u8 	[%rd15839+206], %rd15844;
	shr.u64 	%rd15845, %rd15837, 40;
	st.local.u8 	[%rd15839+205], %rd15845;
	shr.u64 	%rd15846, %rd15837, 32;
	st.local.u8 	[%rd15839+204], %rd15846;
	add.s32 	%r14037, %r14037, 1;
	add.s64 	%rd19862, %rd19862, -1;
	setp.ne.s64 	%p43, %rd19862, 0;
	@%p43 bra 	$L__BB1_51;

$L__BB1_52:
	st.local.u64 	[%rd2+392], %rd7995;
	ld.const.u64 	%rd137, [digestbitlen];
	setp.eq.s64 	%p44, %rd137, 0;
	@%p44 bra 	$L__BB1_73;

	mov.u64 	%rd19864, 0;
	mov.u64 	%rd19866, %rd7995;

$L__BB1_54:
	setp.ne.s64 	%p45, %rd19866, 0;
	@%p45 bra 	$L__BB1_64;

	ld.const.u64 	%rd19819, [CUDA_KECCAK_CONSTS+88];
	ld.const.u64 	%rd19818, [CUDA_KECCAK_CONSTS+80];
	ld.const.u64 	%rd19817, [CUDA_KECCAK_CONSTS+72];
	ld.const.u64 	%rd19816, [CUDA_KECCAK_CONSTS+64];
	ld.const.u64 	%rd19815, [CUDA_KECCAK_CONSTS+56];
	ld.const.u64 	%rd19814, [CUDA_KECCAK_CONSTS+48];
	ld.const.u64 	%rd19813, [CUDA_KECCAK_CONSTS+40];
	ld.const.u64 	%rd19812, [CUDA_KECCAK_CONSTS+32];
	ld.const.u64 	%rd19811, [CUDA_KECCAK_CONSTS+24];
	ld.const.u64 	%rd19810, [CUDA_KECCAK_CONSTS+16];
	ld.const.u64 	%rd19809, [CUDA_KECCAK_CONSTS+8];
	ld.const.u64 	%rd19808, [CUDA_KECCAK_CONSTS];
	ld.local.u64 	%rd15849, [%rd2+40];
	ld.local.u64 	%rd15850, [%rd2];
	xor.b64  	%rd15851, %rd15849, %rd15850;
	ld.local.u64 	%rd15852, [%rd2+80];
	xor.b64  	%rd15853, %rd15851, %rd15852;
	ld.local.u64 	%rd15854, [%rd2+120];
	xor.b64  	%rd15855, %rd15853, %rd15854;
	ld.local.u64 	%rd15856, [%rd2+160];
	xor.b64  	%rd15857, %rd15855, %rd15856;
	ld.local.u64 	%rd15858, [%rd2+48];
	ld.local.u64 	%rd15859, [%rd2+8];
	xor.b64  	%rd15860, %rd15858, %rd15859;
	ld.local.u64 	%rd15861, [%rd2+88];
	xor.b64  	%rd15862, %rd15860, %rd15861;
	ld.local.u64 	%rd15863, [%rd2+128];
	xor.b64  	%rd15864, %rd15862, %rd15863;
	ld.local.u64 	%rd15865, [%rd2+168];
	xor.b64  	%rd15866, %rd15864, %rd15865;
	ld.local.u64 	%rd15867, [%rd2+56];
	ld.local.u64 	%rd15868, [%rd2+16];
	xor.b64  	%rd15869, %rd15867, %rd15868;
	ld.local.u64 	%rd15870, [%rd2+96];
	xor.b64  	%rd15871, %rd15869, %rd15870;
	ld.local.u64 	%rd15872, [%rd2+136];
	xor.b64  	%rd15873, %rd15871, %rd15872;
	ld.local.u64 	%rd15874, [%rd2+176];
	xor.b64  	%rd15875, %rd15873, %rd15874;
	ld.local.u64 	%rd15876, [%rd2+64];
	ld.local.u64 	%rd15877, [%rd2+24];
	xor.b64  	%rd15878, %rd15876, %rd15877;
	ld.local.u64 	%rd15879, [%rd2+104];
	xor.b64  	%rd15880, %rd15878, %rd15879;
	ld.local.u64 	%rd15881, [%rd2+144];
	xor.b64  	%rd15882, %rd15880, %rd15881;
	ld.local.u64 	%rd15883, [%rd2+184];
	xor.b64  	%rd15884, %rd15882, %rd15883;
	ld.local.u64 	%rd15885, [%rd2+72];
	ld.local.u64 	%rd15886, [%rd2+32];
	xor.b64  	%rd15887, %rd15885, %rd15886;
	ld.local.u64 	%rd15888, [%rd2+112];
	xor.b64  	%rd15889, %rd15887, %rd15888;
	ld.local.u64 	%rd15890, [%rd2+152];
	xor.b64  	%rd15891, %rd15889, %rd15890;
	ld.local.u64 	%rd15892, [%rd2+192];
	xor.b64  	%rd15893, %rd15891, %rd15892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11222}, %rd15866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11223,%dummy}, %rd15866;
	}
	shf.l.wrap.b32 	%r11224, %r11223, %r11222, 1;
	shf.l.wrap.b32 	%r11225, %r11222, %r11223, 1;
	mov.b64 	%rd15894, {%r11225, %r11224};
	xor.b64  	%rd15895, %rd15893, %rd15894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11226}, %rd15875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11227,%dummy}, %rd15875;
	}
	shf.l.wrap.b32 	%r11228, %r11227, %r11226, 1;
	shf.l.wrap.b32 	%r11229, %r11226, %r11227, 1;
	mov.b64 	%rd15896, {%r11229, %r11228};
	xor.b64  	%rd15897, %rd15896, %rd15857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11230}, %rd15884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11231,%dummy}, %rd15884;
	}
	shf.l.wrap.b32 	%r11232, %r11231, %r11230, 1;
	shf.l.wrap.b32 	%r11233, %r11230, %r11231, 1;
	mov.b64 	%rd15898, {%r11233, %r11232};
	xor.b64  	%rd15899, %rd15898, %rd15866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11234}, %rd15893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11235,%dummy}, %rd15893;
	}
	shf.l.wrap.b32 	%r11236, %r11235, %r11234, 1;
	shf.l.wrap.b32 	%r11237, %r11234, %r11235, 1;
	mov.b64 	%rd15900, {%r11237, %r11236};
	xor.b64  	%rd15901, %rd15900, %rd15875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11238}, %rd15857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11239,%dummy}, %rd15857;
	}
	shf.l.wrap.b32 	%r11240, %r11239, %r11238, 1;
	shf.l.wrap.b32 	%r11241, %r11238, %r11239, 1;
	mov.b64 	%rd15902, {%r11241, %r11240};
	xor.b64  	%rd15903, %rd15884, %rd15902;
	xor.b64  	%rd15904, %rd15895, %rd15850;
	xor.b64  	%rd15905, %rd15897, %rd15859;
	xor.b64  	%rd15906, %rd15899, %rd15868;
	xor.b64  	%rd15907, %rd15901, %rd15877;
	xor.b64  	%rd15908, %rd15903, %rd15886;
	xor.b64  	%rd15909, %rd15895, %rd15849;
	xor.b64  	%rd15910, %rd15897, %rd15858;
	xor.b64  	%rd15911, %rd15899, %rd15867;
	xor.b64  	%rd15912, %rd15901, %rd15876;
	xor.b64  	%rd15913, %rd15903, %rd15885;
	xor.b64  	%rd15914, %rd15895, %rd15852;
	xor.b64  	%rd15915, %rd15897, %rd15861;
	xor.b64  	%rd15916, %rd15899, %rd15870;
	xor.b64  	%rd15917, %rd15901, %rd15879;
	xor.b64  	%rd15918, %rd15903, %rd15888;
	xor.b64  	%rd15919, %rd15895, %rd15854;
	xor.b64  	%rd15920, %rd15897, %rd15863;
	xor.b64  	%rd15921, %rd15899, %rd15872;
	xor.b64  	%rd15922, %rd15901, %rd15881;
	xor.b64  	%rd15923, %rd15903, %rd15890;
	xor.b64  	%rd15924, %rd15895, %rd15856;
	xor.b64  	%rd15925, %rd15897, %rd15865;
	xor.b64  	%rd15926, %rd15899, %rd15874;
	xor.b64  	%rd15927, %rd15901, %rd15883;
	xor.b64  	%rd15928, %rd15903, %rd15892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11242,%dummy}, %rd15910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11243}, %rd15910;
	}
	shf.r.wrap.b32 	%r11244, %r11243, %r11242, 20;
	shf.r.wrap.b32 	%r11245, %r11242, %r11243, 20;
	mov.b64 	%rd15929, {%r11245, %r11244};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11246,%dummy}, %rd15916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11247}, %rd15916;
	}
	shf.r.wrap.b32 	%r11248, %r11247, %r11246, 21;
	shf.r.wrap.b32 	%r11249, %r11246, %r11247, 21;
	mov.b64 	%rd15930, {%r11249, %r11248};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11250}, %rd15922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11251,%dummy}, %rd15922;
	}
	shf.l.wrap.b32 	%r11252, %r11251, %r11250, 21;
	shf.l.wrap.b32 	%r11253, %r11250, %r11251, 21;
	mov.b64 	%rd15931, {%r11253, %r11252};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11254}, %rd15928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11255,%dummy}, %rd15928;
	}
	shf.l.wrap.b32 	%r11256, %r11255, %r11254, 14;
	shf.l.wrap.b32 	%r11257, %r11254, %r11255, 14;
	mov.b64 	%rd15932, {%r11257, %r11256};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11258}, %rd15907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11259,%dummy}, %rd15907;
	}
	shf.l.wrap.b32 	%r11260, %r11259, %r11258, 28;
	shf.l.wrap.b32 	%r11261, %r11258, %r11259, 28;
	mov.b64 	%rd15933, {%r11261, %r11260};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11262}, %rd15913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11263,%dummy}, %rd15913;
	}
	shf.l.wrap.b32 	%r11264, %r11263, %r11262, 20;
	shf.l.wrap.b32 	%r11265, %r11262, %r11263, 20;
	mov.b64 	%rd15934, {%r11265, %r11264};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11266}, %rd15914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11267,%dummy}, %rd15914;
	}
	shf.l.wrap.b32 	%r11268, %r11267, %r11266, 3;
	shf.l.wrap.b32 	%r11269, %r11266, %r11267, 3;
	mov.b64 	%rd15935, {%r11269, %r11268};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11270,%dummy}, %rd15920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11271}, %rd15920;
	}
	shf.r.wrap.b32 	%r11272, %r11271, %r11270, 19;
	shf.r.wrap.b32 	%r11273, %r11270, %r11271, 19;
	mov.b64 	%rd15936, {%r11273, %r11272};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11274,%dummy}, %rd15926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11275}, %rd15926;
	}
	shf.r.wrap.b32 	%r11276, %r11275, %r11274, 3;
	shf.r.wrap.b32 	%r11277, %r11274, %r11275, 3;
	mov.b64 	%rd15937, {%r11277, %r11276};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11278}, %rd15905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11279,%dummy}, %rd15905;
	}
	shf.l.wrap.b32 	%r11280, %r11279, %r11278, 1;
	shf.l.wrap.b32 	%r11281, %r11278, %r11279, 1;
	mov.b64 	%rd15938, {%r11281, %r11280};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11282}, %rd15911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11283,%dummy}, %rd15911;
	}
	shf.l.wrap.b32 	%r11284, %r11283, %r11282, 6;
	shf.l.wrap.b32 	%r11285, %r11282, %r11283, 6;
	mov.b64 	%rd15939, {%r11285, %r11284};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11286}, %rd15917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11287,%dummy}, %rd15917;
	}
	shf.l.wrap.b32 	%r11288, %r11287, %r11286, 25;
	shf.l.wrap.b32 	%r11289, %r11286, %r11287, 25;
	mov.b64 	%rd15940, {%r11289, %r11288};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11290}, %rd15923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11291,%dummy}, %rd15923;
	}
	shf.l.wrap.b32 	%r11292, %r11291, %r11290, 8;
	shf.l.wrap.b32 	%r11293, %r11290, %r11291, 8;
	mov.b64 	%rd15941, {%r11293, %r11292};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11294}, %rd15924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11295,%dummy}, %rd15924;
	}
	shf.l.wrap.b32 	%r11296, %r11295, %r11294, 18;
	shf.l.wrap.b32 	%r11297, %r11294, %r11295, 18;
	mov.b64 	%rd15942, {%r11297, %r11296};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11298}, %rd15908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11299,%dummy}, %rd15908;
	}
	shf.l.wrap.b32 	%r11300, %r11299, %r11298, 27;
	shf.l.wrap.b32 	%r11301, %r11298, %r11299, 27;
	mov.b64 	%rd15943, {%r11301, %r11300};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11302,%dummy}, %rd15909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11303}, %rd15909;
	}
	shf.r.wrap.b32 	%r11304, %r11303, %r11302, 28;
	shf.r.wrap.b32 	%r11305, %r11302, %r11303, 28;
	mov.b64 	%rd15944, {%r11305, %r11304};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11306}, %rd15915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11307,%dummy}, %rd15915;
	}
	shf.l.wrap.b32 	%r11308, %r11307, %r11306, 10;
	shf.l.wrap.b32 	%r11309, %r11306, %r11307, 10;
	mov.b64 	%rd15945, {%r11309, %r11308};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11310}, %rd15921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11311,%dummy}, %rd15921;
	}
	shf.l.wrap.b32 	%r11312, %r11311, %r11310, 15;
	shf.l.wrap.b32 	%r11313, %r11310, %r11311, 15;
	mov.b64 	%rd15946, {%r11313, %r11312};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11314,%dummy}, %rd15927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11315}, %rd15927;
	}
	shf.r.wrap.b32 	%r11316, %r11315, %r11314, 8;
	shf.r.wrap.b32 	%r11317, %r11314, %r11315, 8;
	mov.b64 	%rd15947, {%r11317, %r11316};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11318,%dummy}, %rd15906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11319}, %rd15906;
	}
	shf.r.wrap.b32 	%r11320, %r11319, %r11318, 2;
	shf.r.wrap.b32 	%r11321, %r11318, %r11319, 2;
	mov.b64 	%rd15948, {%r11321, %r11320};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11322,%dummy}, %rd15912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11323}, %rd15912;
	}
	shf.r.wrap.b32 	%r11324, %r11323, %r11322, 9;
	shf.r.wrap.b32 	%r11325, %r11322, %r11323, 9;
	mov.b64 	%rd15949, {%r11325, %r11324};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11326,%dummy}, %rd15918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11327}, %rd15918;
	}
	shf.r.wrap.b32 	%r11328, %r11327, %r11326, 25;
	shf.r.wrap.b32 	%r11329, %r11326, %r11327, 25;
	mov.b64 	%rd15950, {%r11329, %r11328};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11330,%dummy}, %rd15919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11331}, %rd15919;
	}
	shf.r.wrap.b32 	%r11332, %r11331, %r11330, 23;
	shf.r.wrap.b32 	%r11333, %r11330, %r11331, 23;
	mov.b64 	%rd15951, {%r11333, %r11332};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11334}, %rd15925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11335,%dummy}, %rd15925;
	}
	shf.l.wrap.b32 	%r11336, %r11335, %r11334, 2;
	shf.l.wrap.b32 	%r11337, %r11334, %r11335, 2;
	mov.b64 	%rd15952, {%r11337, %r11336};
	not.b64 	%rd15953, %rd15929;
	and.b64  	%rd15954, %rd15930, %rd15953;
	xor.b64  	%rd15955, %rd15954, %rd15904;
	not.b64 	%rd15956, %rd15930;
	and.b64  	%rd15957, %rd15931, %rd15956;
	xor.b64  	%rd15958, %rd15957, %rd15929;
	not.b64 	%rd15959, %rd15931;
	and.b64  	%rd15960, %rd15932, %rd15959;
	xor.b64  	%rd15961, %rd15960, %rd15930;
	not.b64 	%rd15962, %rd15932;
	and.b64  	%rd15963, %rd15904, %rd15962;
	xor.b64  	%rd15964, %rd15963, %rd15931;
	not.b64 	%rd15965, %rd15904;
	and.b64  	%rd15966, %rd15929, %rd15965;
	xor.b64  	%rd15967, %rd15966, %rd15932;
	not.b64 	%rd15968, %rd15934;
	and.b64  	%rd15969, %rd15935, %rd15968;
	xor.b64  	%rd15970, %rd15969, %rd15933;
	not.b64 	%rd15971, %rd15935;
	and.b64  	%rd15972, %rd15936, %rd15971;
	xor.b64  	%rd15973, %rd15972, %rd15934;
	not.b64 	%rd15974, %rd15936;
	and.b64  	%rd15975, %rd15937, %rd15974;
	xor.b64  	%rd15976, %rd15975, %rd15935;
	not.b64 	%rd15977, %rd15937;
	and.b64  	%rd15978, %rd15933, %rd15977;
	xor.b64  	%rd15979, %rd15978, %rd15936;
	not.b64 	%rd15980, %rd15933;
	and.b64  	%rd15981, %rd15934, %rd15980;
	xor.b64  	%rd15982, %rd15981, %rd15937;
	not.b64 	%rd15983, %rd15939;
	and.b64  	%rd15984, %rd15940, %rd15983;
	xor.b64  	%rd15985, %rd15984, %rd15938;
	not.b64 	%rd15986, %rd15940;
	and.b64  	%rd15987, %rd15941, %rd15986;
	xor.b64  	%rd15988, %rd15987, %rd15939;
	not.b64 	%rd15989, %rd15941;
	and.b64  	%rd15990, %rd15942, %rd15989;
	xor.b64  	%rd15991, %rd15990, %rd15940;
	not.b64 	%rd15992, %rd15942;
	and.b64  	%rd15993, %rd15938, %rd15992;
	xor.b64  	%rd15994, %rd15993, %rd15941;
	not.b64 	%rd15995, %rd15938;
	and.b64  	%rd15996, %rd15939, %rd15995;
	xor.b64  	%rd15997, %rd15996, %rd15942;
	not.b64 	%rd15998, %rd15944;
	and.b64  	%rd15999, %rd15945, %rd15998;
	xor.b64  	%rd16000, %rd15999, %rd15943;
	not.b64 	%rd16001, %rd15945;
	and.b64  	%rd16002, %rd15946, %rd16001;
	xor.b64  	%rd16003, %rd16002, %rd15944;
	not.b64 	%rd16004, %rd15946;
	and.b64  	%rd16005, %rd15947, %rd16004;
	xor.b64  	%rd16006, %rd16005, %rd15945;
	not.b64 	%rd16007, %rd15947;
	and.b64  	%rd16008, %rd15943, %rd16007;
	xor.b64  	%rd16009, %rd16008, %rd15946;
	not.b64 	%rd16010, %rd15943;
	and.b64  	%rd16011, %rd15944, %rd16010;
	xor.b64  	%rd16012, %rd16011, %rd15947;
	not.b64 	%rd16013, %rd15949;
	and.b64  	%rd16014, %rd15950, %rd16013;
	xor.b64  	%rd16015, %rd16014, %rd15948;
	not.b64 	%rd16016, %rd15950;
	and.b64  	%rd16017, %rd15951, %rd16016;
	xor.b64  	%rd16018, %rd16017, %rd15949;
	not.b64 	%rd16019, %rd15951;
	and.b64  	%rd16020, %rd15952, %rd16019;
	xor.b64  	%rd16021, %rd16020, %rd15950;
	not.b64 	%rd16022, %rd15952;
	and.b64  	%rd16023, %rd15948, %rd16022;
	xor.b64  	%rd16024, %rd16023, %rd15951;
	not.b64 	%rd16025, %rd15948;
	and.b64  	%rd16026, %rd15949, %rd16025;
	xor.b64  	%rd16027, %rd16026, %rd15952;
	xor.b64  	%rd16028, %rd15955, %rd19808;
	xor.b64  	%rd16029, %rd15970, %rd16028;
	xor.b64  	%rd16030, %rd16029, %rd15985;
	xor.b64  	%rd16031, %rd16030, %rd16000;
	xor.b64  	%rd16032, %rd16031, %rd16015;
	xor.b64  	%rd16033, %rd15973, %rd15958;
	xor.b64  	%rd16034, %rd16033, %rd15988;
	xor.b64  	%rd16035, %rd16034, %rd16003;
	xor.b64  	%rd16036, %rd16035, %rd16018;
	xor.b64  	%rd16037, %rd15976, %rd15961;
	xor.b64  	%rd16038, %rd16037, %rd15991;
	xor.b64  	%rd16039, %rd16038, %rd16006;
	xor.b64  	%rd16040, %rd16039, %rd16021;
	xor.b64  	%rd16041, %rd15979, %rd15964;
	xor.b64  	%rd16042, %rd16041, %rd15994;
	xor.b64  	%rd16043, %rd16042, %rd16009;
	xor.b64  	%rd16044, %rd16043, %rd16024;
	xor.b64  	%rd16045, %rd15982, %rd15967;
	xor.b64  	%rd16046, %rd16045, %rd15997;
	xor.b64  	%rd16047, %rd16046, %rd16012;
	xor.b64  	%rd16048, %rd16047, %rd16027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11338}, %rd16036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11339,%dummy}, %rd16036;
	}
	shf.l.wrap.b32 	%r11340, %r11339, %r11338, 1;
	shf.l.wrap.b32 	%r11341, %r11338, %r11339, 1;
	mov.b64 	%rd16049, {%r11341, %r11340};
	xor.b64  	%rd16050, %rd16048, %rd16049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11342}, %rd16040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11343,%dummy}, %rd16040;
	}
	shf.l.wrap.b32 	%r11344, %r11343, %r11342, 1;
	shf.l.wrap.b32 	%r11345, %r11342, %r11343, 1;
	mov.b64 	%rd16051, {%r11345, %r11344};
	xor.b64  	%rd16052, %rd16051, %rd16032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11346}, %rd16044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11347,%dummy}, %rd16044;
	}
	shf.l.wrap.b32 	%r11348, %r11347, %r11346, 1;
	shf.l.wrap.b32 	%r11349, %r11346, %r11347, 1;
	mov.b64 	%rd16053, {%r11349, %r11348};
	xor.b64  	%rd16054, %rd16053, %rd16036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11350}, %rd16048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11351,%dummy}, %rd16048;
	}
	shf.l.wrap.b32 	%r11352, %r11351, %r11350, 1;
	shf.l.wrap.b32 	%r11353, %r11350, %r11351, 1;
	mov.b64 	%rd16055, {%r11353, %r11352};
	xor.b64  	%rd16056, %rd16055, %rd16040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11354}, %rd16032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11355,%dummy}, %rd16032;
	}
	shf.l.wrap.b32 	%r11356, %r11355, %r11354, 1;
	shf.l.wrap.b32 	%r11357, %r11354, %r11355, 1;
	mov.b64 	%rd16057, {%r11357, %r11356};
	xor.b64  	%rd16058, %rd16044, %rd16057;
	xor.b64  	%rd16059, %rd16050, %rd16028;
	xor.b64  	%rd16060, %rd16052, %rd15958;
	xor.b64  	%rd16061, %rd16054, %rd15961;
	xor.b64  	%rd16062, %rd16056, %rd15964;
	xor.b64  	%rd16063, %rd16058, %rd15967;
	xor.b64  	%rd16064, %rd16050, %rd15970;
	xor.b64  	%rd16065, %rd16052, %rd15973;
	xor.b64  	%rd16066, %rd16054, %rd15976;
	xor.b64  	%rd16067, %rd16056, %rd15979;
	xor.b64  	%rd16068, %rd16058, %rd15982;
	xor.b64  	%rd16069, %rd16050, %rd15985;
	xor.b64  	%rd16070, %rd16052, %rd15988;
	xor.b64  	%rd16071, %rd16054, %rd15991;
	xor.b64  	%rd16072, %rd16056, %rd15994;
	xor.b64  	%rd16073, %rd16058, %rd15997;
	xor.b64  	%rd16074, %rd16050, %rd16000;
	xor.b64  	%rd16075, %rd16052, %rd16003;
	xor.b64  	%rd16076, %rd16054, %rd16006;
	xor.b64  	%rd16077, %rd16056, %rd16009;
	xor.b64  	%rd16078, %rd16058, %rd16012;
	xor.b64  	%rd16079, %rd16050, %rd16015;
	xor.b64  	%rd16080, %rd16052, %rd16018;
	xor.b64  	%rd16081, %rd16054, %rd16021;
	xor.b64  	%rd16082, %rd16056, %rd16024;
	xor.b64  	%rd16083, %rd16058, %rd16027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11358,%dummy}, %rd16065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11359}, %rd16065;
	}
	shf.r.wrap.b32 	%r11360, %r11359, %r11358, 20;
	shf.r.wrap.b32 	%r11361, %r11358, %r11359, 20;
	mov.b64 	%rd16084, {%r11361, %r11360};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11362,%dummy}, %rd16071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11363}, %rd16071;
	}
	shf.r.wrap.b32 	%r11364, %r11363, %r11362, 21;
	shf.r.wrap.b32 	%r11365, %r11362, %r11363, 21;
	mov.b64 	%rd16085, {%r11365, %r11364};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11366}, %rd16077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11367,%dummy}, %rd16077;
	}
	shf.l.wrap.b32 	%r11368, %r11367, %r11366, 21;
	shf.l.wrap.b32 	%r11369, %r11366, %r11367, 21;
	mov.b64 	%rd16086, {%r11369, %r11368};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11370}, %rd16083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11371,%dummy}, %rd16083;
	}
	shf.l.wrap.b32 	%r11372, %r11371, %r11370, 14;
	shf.l.wrap.b32 	%r11373, %r11370, %r11371, 14;
	mov.b64 	%rd16087, {%r11373, %r11372};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11374}, %rd16062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11375,%dummy}, %rd16062;
	}
	shf.l.wrap.b32 	%r11376, %r11375, %r11374, 28;
	shf.l.wrap.b32 	%r11377, %r11374, %r11375, 28;
	mov.b64 	%rd16088, {%r11377, %r11376};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11378}, %rd16068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11379,%dummy}, %rd16068;
	}
	shf.l.wrap.b32 	%r11380, %r11379, %r11378, 20;
	shf.l.wrap.b32 	%r11381, %r11378, %r11379, 20;
	mov.b64 	%rd16089, {%r11381, %r11380};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11382}, %rd16069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11383,%dummy}, %rd16069;
	}
	shf.l.wrap.b32 	%r11384, %r11383, %r11382, 3;
	shf.l.wrap.b32 	%r11385, %r11382, %r11383, 3;
	mov.b64 	%rd16090, {%r11385, %r11384};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11386,%dummy}, %rd16075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11387}, %rd16075;
	}
	shf.r.wrap.b32 	%r11388, %r11387, %r11386, 19;
	shf.r.wrap.b32 	%r11389, %r11386, %r11387, 19;
	mov.b64 	%rd16091, {%r11389, %r11388};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11390,%dummy}, %rd16081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11391}, %rd16081;
	}
	shf.r.wrap.b32 	%r11392, %r11391, %r11390, 3;
	shf.r.wrap.b32 	%r11393, %r11390, %r11391, 3;
	mov.b64 	%rd16092, {%r11393, %r11392};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11394}, %rd16060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11395,%dummy}, %rd16060;
	}
	shf.l.wrap.b32 	%r11396, %r11395, %r11394, 1;
	shf.l.wrap.b32 	%r11397, %r11394, %r11395, 1;
	mov.b64 	%rd16093, {%r11397, %r11396};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11398}, %rd16066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11399,%dummy}, %rd16066;
	}
	shf.l.wrap.b32 	%r11400, %r11399, %r11398, 6;
	shf.l.wrap.b32 	%r11401, %r11398, %r11399, 6;
	mov.b64 	%rd16094, {%r11401, %r11400};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11402}, %rd16072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11403,%dummy}, %rd16072;
	}
	shf.l.wrap.b32 	%r11404, %r11403, %r11402, 25;
	shf.l.wrap.b32 	%r11405, %r11402, %r11403, 25;
	mov.b64 	%rd16095, {%r11405, %r11404};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11406}, %rd16078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11407,%dummy}, %rd16078;
	}
	shf.l.wrap.b32 	%r11408, %r11407, %r11406, 8;
	shf.l.wrap.b32 	%r11409, %r11406, %r11407, 8;
	mov.b64 	%rd16096, {%r11409, %r11408};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11410}, %rd16079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11411,%dummy}, %rd16079;
	}
	shf.l.wrap.b32 	%r11412, %r11411, %r11410, 18;
	shf.l.wrap.b32 	%r11413, %r11410, %r11411, 18;
	mov.b64 	%rd16097, {%r11413, %r11412};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11414}, %rd16063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11415,%dummy}, %rd16063;
	}
	shf.l.wrap.b32 	%r11416, %r11415, %r11414, 27;
	shf.l.wrap.b32 	%r11417, %r11414, %r11415, 27;
	mov.b64 	%rd16098, {%r11417, %r11416};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11418,%dummy}, %rd16064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11419}, %rd16064;
	}
	shf.r.wrap.b32 	%r11420, %r11419, %r11418, 28;
	shf.r.wrap.b32 	%r11421, %r11418, %r11419, 28;
	mov.b64 	%rd16099, {%r11421, %r11420};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11422}, %rd16070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11423,%dummy}, %rd16070;
	}
	shf.l.wrap.b32 	%r11424, %r11423, %r11422, 10;
	shf.l.wrap.b32 	%r11425, %r11422, %r11423, 10;
	mov.b64 	%rd16100, {%r11425, %r11424};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11426}, %rd16076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11427,%dummy}, %rd16076;
	}
	shf.l.wrap.b32 	%r11428, %r11427, %r11426, 15;
	shf.l.wrap.b32 	%r11429, %r11426, %r11427, 15;
	mov.b64 	%rd16101, {%r11429, %r11428};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11430,%dummy}, %rd16082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11431}, %rd16082;
	}
	shf.r.wrap.b32 	%r11432, %r11431, %r11430, 8;
	shf.r.wrap.b32 	%r11433, %r11430, %r11431, 8;
	mov.b64 	%rd16102, {%r11433, %r11432};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11434,%dummy}, %rd16061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11435}, %rd16061;
	}
	shf.r.wrap.b32 	%r11436, %r11435, %r11434, 2;
	shf.r.wrap.b32 	%r11437, %r11434, %r11435, 2;
	mov.b64 	%rd16103, {%r11437, %r11436};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11438,%dummy}, %rd16067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11439}, %rd16067;
	}
	shf.r.wrap.b32 	%r11440, %r11439, %r11438, 9;
	shf.r.wrap.b32 	%r11441, %r11438, %r11439, 9;
	mov.b64 	%rd16104, {%r11441, %r11440};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11442,%dummy}, %rd16073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11443}, %rd16073;
	}
	shf.r.wrap.b32 	%r11444, %r11443, %r11442, 25;
	shf.r.wrap.b32 	%r11445, %r11442, %r11443, 25;
	mov.b64 	%rd16105, {%r11445, %r11444};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11446,%dummy}, %rd16074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11447}, %rd16074;
	}
	shf.r.wrap.b32 	%r11448, %r11447, %r11446, 23;
	shf.r.wrap.b32 	%r11449, %r11446, %r11447, 23;
	mov.b64 	%rd16106, {%r11449, %r11448};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11450}, %rd16080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11451,%dummy}, %rd16080;
	}
	shf.l.wrap.b32 	%r11452, %r11451, %r11450, 2;
	shf.l.wrap.b32 	%r11453, %r11450, %r11451, 2;
	mov.b64 	%rd16107, {%r11453, %r11452};
	not.b64 	%rd16108, %rd16084;
	and.b64  	%rd16109, %rd16085, %rd16108;
	xor.b64  	%rd16110, %rd16109, %rd16059;
	not.b64 	%rd16111, %rd16085;
	and.b64  	%rd16112, %rd16086, %rd16111;
	xor.b64  	%rd16113, %rd16112, %rd16084;
	not.b64 	%rd16114, %rd16086;
	and.b64  	%rd16115, %rd16087, %rd16114;
	xor.b64  	%rd16116, %rd16115, %rd16085;
	not.b64 	%rd16117, %rd16087;
	and.b64  	%rd16118, %rd16059, %rd16117;
	xor.b64  	%rd16119, %rd16118, %rd16086;
	not.b64 	%rd16120, %rd16059;
	and.b64  	%rd16121, %rd16084, %rd16120;
	xor.b64  	%rd16122, %rd16121, %rd16087;
	not.b64 	%rd16123, %rd16089;
	and.b64  	%rd16124, %rd16090, %rd16123;
	xor.b64  	%rd16125, %rd16124, %rd16088;
	not.b64 	%rd16126, %rd16090;
	and.b64  	%rd16127, %rd16091, %rd16126;
	xor.b64  	%rd16128, %rd16127, %rd16089;
	not.b64 	%rd16129, %rd16091;
	and.b64  	%rd16130, %rd16092, %rd16129;
	xor.b64  	%rd16131, %rd16130, %rd16090;
	not.b64 	%rd16132, %rd16092;
	and.b64  	%rd16133, %rd16088, %rd16132;
	xor.b64  	%rd16134, %rd16133, %rd16091;
	not.b64 	%rd16135, %rd16088;
	and.b64  	%rd16136, %rd16089, %rd16135;
	xor.b64  	%rd16137, %rd16136, %rd16092;
	not.b64 	%rd16138, %rd16094;
	and.b64  	%rd16139, %rd16095, %rd16138;
	xor.b64  	%rd16140, %rd16139, %rd16093;
	not.b64 	%rd16141, %rd16095;
	and.b64  	%rd16142, %rd16096, %rd16141;
	xor.b64  	%rd16143, %rd16142, %rd16094;
	not.b64 	%rd16144, %rd16096;
	and.b64  	%rd16145, %rd16097, %rd16144;
	xor.b64  	%rd16146, %rd16145, %rd16095;
	not.b64 	%rd16147, %rd16097;
	and.b64  	%rd16148, %rd16093, %rd16147;
	xor.b64  	%rd16149, %rd16148, %rd16096;
	not.b64 	%rd16150, %rd16093;
	and.b64  	%rd16151, %rd16094, %rd16150;
	xor.b64  	%rd16152, %rd16151, %rd16097;
	not.b64 	%rd16153, %rd16099;
	and.b64  	%rd16154, %rd16100, %rd16153;
	xor.b64  	%rd16155, %rd16154, %rd16098;
	not.b64 	%rd16156, %rd16100;
	and.b64  	%rd16157, %rd16101, %rd16156;
	xor.b64  	%rd16158, %rd16157, %rd16099;
	not.b64 	%rd16159, %rd16101;
	and.b64  	%rd16160, %rd16102, %rd16159;
	xor.b64  	%rd16161, %rd16160, %rd16100;
	not.b64 	%rd16162, %rd16102;
	and.b64  	%rd16163, %rd16098, %rd16162;
	xor.b64  	%rd16164, %rd16163, %rd16101;
	not.b64 	%rd16165, %rd16098;
	and.b64  	%rd16166, %rd16099, %rd16165;
	xor.b64  	%rd16167, %rd16166, %rd16102;
	not.b64 	%rd16168, %rd16104;
	and.b64  	%rd16169, %rd16105, %rd16168;
	xor.b64  	%rd16170, %rd16169, %rd16103;
	not.b64 	%rd16171, %rd16105;
	and.b64  	%rd16172, %rd16106, %rd16171;
	xor.b64  	%rd16173, %rd16172, %rd16104;
	not.b64 	%rd16174, %rd16106;
	and.b64  	%rd16175, %rd16107, %rd16174;
	xor.b64  	%rd16176, %rd16175, %rd16105;
	not.b64 	%rd16177, %rd16107;
	and.b64  	%rd16178, %rd16103, %rd16177;
	xor.b64  	%rd16179, %rd16178, %rd16106;
	not.b64 	%rd16180, %rd16103;
	and.b64  	%rd16181, %rd16104, %rd16180;
	xor.b64  	%rd16182, %rd16181, %rd16107;
	xor.b64  	%rd16183, %rd16110, %rd19809;
	xor.b64  	%rd16184, %rd16125, %rd16183;
	xor.b64  	%rd16185, %rd16184, %rd16140;
	xor.b64  	%rd16186, %rd16185, %rd16155;
	xor.b64  	%rd16187, %rd16186, %rd16170;
	xor.b64  	%rd16188, %rd16128, %rd16113;
	xor.b64  	%rd16189, %rd16188, %rd16143;
	xor.b64  	%rd16190, %rd16189, %rd16158;
	xor.b64  	%rd16191, %rd16190, %rd16173;
	xor.b64  	%rd16192, %rd16131, %rd16116;
	xor.b64  	%rd16193, %rd16192, %rd16146;
	xor.b64  	%rd16194, %rd16193, %rd16161;
	xor.b64  	%rd16195, %rd16194, %rd16176;
	xor.b64  	%rd16196, %rd16134, %rd16119;
	xor.b64  	%rd16197, %rd16196, %rd16149;
	xor.b64  	%rd16198, %rd16197, %rd16164;
	xor.b64  	%rd16199, %rd16198, %rd16179;
	xor.b64  	%rd16200, %rd16137, %rd16122;
	xor.b64  	%rd16201, %rd16200, %rd16152;
	xor.b64  	%rd16202, %rd16201, %rd16167;
	xor.b64  	%rd16203, %rd16202, %rd16182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11454}, %rd16191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11455,%dummy}, %rd16191;
	}
	shf.l.wrap.b32 	%r11456, %r11455, %r11454, 1;
	shf.l.wrap.b32 	%r11457, %r11454, %r11455, 1;
	mov.b64 	%rd16204, {%r11457, %r11456};
	xor.b64  	%rd16205, %rd16203, %rd16204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11458}, %rd16195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11459,%dummy}, %rd16195;
	}
	shf.l.wrap.b32 	%r11460, %r11459, %r11458, 1;
	shf.l.wrap.b32 	%r11461, %r11458, %r11459, 1;
	mov.b64 	%rd16206, {%r11461, %r11460};
	xor.b64  	%rd16207, %rd16206, %rd16187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11462}, %rd16199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11463,%dummy}, %rd16199;
	}
	shf.l.wrap.b32 	%r11464, %r11463, %r11462, 1;
	shf.l.wrap.b32 	%r11465, %r11462, %r11463, 1;
	mov.b64 	%rd16208, {%r11465, %r11464};
	xor.b64  	%rd16209, %rd16208, %rd16191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11466}, %rd16203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11467,%dummy}, %rd16203;
	}
	shf.l.wrap.b32 	%r11468, %r11467, %r11466, 1;
	shf.l.wrap.b32 	%r11469, %r11466, %r11467, 1;
	mov.b64 	%rd16210, {%r11469, %r11468};
	xor.b64  	%rd16211, %rd16210, %rd16195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11470}, %rd16187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11471,%dummy}, %rd16187;
	}
	shf.l.wrap.b32 	%r11472, %r11471, %r11470, 1;
	shf.l.wrap.b32 	%r11473, %r11470, %r11471, 1;
	mov.b64 	%rd16212, {%r11473, %r11472};
	xor.b64  	%rd16213, %rd16199, %rd16212;
	xor.b64  	%rd16214, %rd16205, %rd16183;
	xor.b64  	%rd16215, %rd16207, %rd16113;
	xor.b64  	%rd16216, %rd16209, %rd16116;
	xor.b64  	%rd16217, %rd16211, %rd16119;
	xor.b64  	%rd16218, %rd16213, %rd16122;
	xor.b64  	%rd16219, %rd16205, %rd16125;
	xor.b64  	%rd16220, %rd16207, %rd16128;
	xor.b64  	%rd16221, %rd16209, %rd16131;
	xor.b64  	%rd16222, %rd16211, %rd16134;
	xor.b64  	%rd16223, %rd16213, %rd16137;
	xor.b64  	%rd16224, %rd16205, %rd16140;
	xor.b64  	%rd16225, %rd16207, %rd16143;
	xor.b64  	%rd16226, %rd16209, %rd16146;
	xor.b64  	%rd16227, %rd16211, %rd16149;
	xor.b64  	%rd16228, %rd16213, %rd16152;
	xor.b64  	%rd16229, %rd16205, %rd16155;
	xor.b64  	%rd16230, %rd16207, %rd16158;
	xor.b64  	%rd16231, %rd16209, %rd16161;
	xor.b64  	%rd16232, %rd16211, %rd16164;
	xor.b64  	%rd16233, %rd16213, %rd16167;
	xor.b64  	%rd16234, %rd16205, %rd16170;
	xor.b64  	%rd16235, %rd16207, %rd16173;
	xor.b64  	%rd16236, %rd16209, %rd16176;
	xor.b64  	%rd16237, %rd16211, %rd16179;
	xor.b64  	%rd16238, %rd16213, %rd16182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11474,%dummy}, %rd16220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11475}, %rd16220;
	}
	shf.r.wrap.b32 	%r11476, %r11475, %r11474, 20;
	shf.r.wrap.b32 	%r11477, %r11474, %r11475, 20;
	mov.b64 	%rd16239, {%r11477, %r11476};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11478,%dummy}, %rd16226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11479}, %rd16226;
	}
	shf.r.wrap.b32 	%r11480, %r11479, %r11478, 21;
	shf.r.wrap.b32 	%r11481, %r11478, %r11479, 21;
	mov.b64 	%rd16240, {%r11481, %r11480};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11482}, %rd16232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11483,%dummy}, %rd16232;
	}
	shf.l.wrap.b32 	%r11484, %r11483, %r11482, 21;
	shf.l.wrap.b32 	%r11485, %r11482, %r11483, 21;
	mov.b64 	%rd16241, {%r11485, %r11484};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11486}, %rd16238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11487,%dummy}, %rd16238;
	}
	shf.l.wrap.b32 	%r11488, %r11487, %r11486, 14;
	shf.l.wrap.b32 	%r11489, %r11486, %r11487, 14;
	mov.b64 	%rd16242, {%r11489, %r11488};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11490}, %rd16217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11491,%dummy}, %rd16217;
	}
	shf.l.wrap.b32 	%r11492, %r11491, %r11490, 28;
	shf.l.wrap.b32 	%r11493, %r11490, %r11491, 28;
	mov.b64 	%rd16243, {%r11493, %r11492};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11494}, %rd16223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11495,%dummy}, %rd16223;
	}
	shf.l.wrap.b32 	%r11496, %r11495, %r11494, 20;
	shf.l.wrap.b32 	%r11497, %r11494, %r11495, 20;
	mov.b64 	%rd16244, {%r11497, %r11496};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11498}, %rd16224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11499,%dummy}, %rd16224;
	}
	shf.l.wrap.b32 	%r11500, %r11499, %r11498, 3;
	shf.l.wrap.b32 	%r11501, %r11498, %r11499, 3;
	mov.b64 	%rd16245, {%r11501, %r11500};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11502,%dummy}, %rd16230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11503}, %rd16230;
	}
	shf.r.wrap.b32 	%r11504, %r11503, %r11502, 19;
	shf.r.wrap.b32 	%r11505, %r11502, %r11503, 19;
	mov.b64 	%rd16246, {%r11505, %r11504};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11506,%dummy}, %rd16236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11507}, %rd16236;
	}
	shf.r.wrap.b32 	%r11508, %r11507, %r11506, 3;
	shf.r.wrap.b32 	%r11509, %r11506, %r11507, 3;
	mov.b64 	%rd16247, {%r11509, %r11508};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11510}, %rd16215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11511,%dummy}, %rd16215;
	}
	shf.l.wrap.b32 	%r11512, %r11511, %r11510, 1;
	shf.l.wrap.b32 	%r11513, %r11510, %r11511, 1;
	mov.b64 	%rd16248, {%r11513, %r11512};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11514}, %rd16221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11515,%dummy}, %rd16221;
	}
	shf.l.wrap.b32 	%r11516, %r11515, %r11514, 6;
	shf.l.wrap.b32 	%r11517, %r11514, %r11515, 6;
	mov.b64 	%rd16249, {%r11517, %r11516};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11518}, %rd16227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11519,%dummy}, %rd16227;
	}
	shf.l.wrap.b32 	%r11520, %r11519, %r11518, 25;
	shf.l.wrap.b32 	%r11521, %r11518, %r11519, 25;
	mov.b64 	%rd16250, {%r11521, %r11520};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11522}, %rd16233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11523,%dummy}, %rd16233;
	}
	shf.l.wrap.b32 	%r11524, %r11523, %r11522, 8;
	shf.l.wrap.b32 	%r11525, %r11522, %r11523, 8;
	mov.b64 	%rd16251, {%r11525, %r11524};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11526}, %rd16234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11527,%dummy}, %rd16234;
	}
	shf.l.wrap.b32 	%r11528, %r11527, %r11526, 18;
	shf.l.wrap.b32 	%r11529, %r11526, %r11527, 18;
	mov.b64 	%rd16252, {%r11529, %r11528};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11530}, %rd16218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11531,%dummy}, %rd16218;
	}
	shf.l.wrap.b32 	%r11532, %r11531, %r11530, 27;
	shf.l.wrap.b32 	%r11533, %r11530, %r11531, 27;
	mov.b64 	%rd16253, {%r11533, %r11532};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11534,%dummy}, %rd16219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11535}, %rd16219;
	}
	shf.r.wrap.b32 	%r11536, %r11535, %r11534, 28;
	shf.r.wrap.b32 	%r11537, %r11534, %r11535, 28;
	mov.b64 	%rd16254, {%r11537, %r11536};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11538}, %rd16225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11539,%dummy}, %rd16225;
	}
	shf.l.wrap.b32 	%r11540, %r11539, %r11538, 10;
	shf.l.wrap.b32 	%r11541, %r11538, %r11539, 10;
	mov.b64 	%rd16255, {%r11541, %r11540};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11542}, %rd16231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11543,%dummy}, %rd16231;
	}
	shf.l.wrap.b32 	%r11544, %r11543, %r11542, 15;
	shf.l.wrap.b32 	%r11545, %r11542, %r11543, 15;
	mov.b64 	%rd16256, {%r11545, %r11544};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11546,%dummy}, %rd16237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11547}, %rd16237;
	}
	shf.r.wrap.b32 	%r11548, %r11547, %r11546, 8;
	shf.r.wrap.b32 	%r11549, %r11546, %r11547, 8;
	mov.b64 	%rd16257, {%r11549, %r11548};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11550,%dummy}, %rd16216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11551}, %rd16216;
	}
	shf.r.wrap.b32 	%r11552, %r11551, %r11550, 2;
	shf.r.wrap.b32 	%r11553, %r11550, %r11551, 2;
	mov.b64 	%rd16258, {%r11553, %r11552};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11554,%dummy}, %rd16222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11555}, %rd16222;
	}
	shf.r.wrap.b32 	%r11556, %r11555, %r11554, 9;
	shf.r.wrap.b32 	%r11557, %r11554, %r11555, 9;
	mov.b64 	%rd16259, {%r11557, %r11556};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11558,%dummy}, %rd16228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11559}, %rd16228;
	}
	shf.r.wrap.b32 	%r11560, %r11559, %r11558, 25;
	shf.r.wrap.b32 	%r11561, %r11558, %r11559, 25;
	mov.b64 	%rd16260, {%r11561, %r11560};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11562,%dummy}, %rd16229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11563}, %rd16229;
	}
	shf.r.wrap.b32 	%r11564, %r11563, %r11562, 23;
	shf.r.wrap.b32 	%r11565, %r11562, %r11563, 23;
	mov.b64 	%rd16261, {%r11565, %r11564};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11566}, %rd16235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11567,%dummy}, %rd16235;
	}
	shf.l.wrap.b32 	%r11568, %r11567, %r11566, 2;
	shf.l.wrap.b32 	%r11569, %r11566, %r11567, 2;
	mov.b64 	%rd16262, {%r11569, %r11568};
	not.b64 	%rd16263, %rd16239;
	and.b64  	%rd16264, %rd16240, %rd16263;
	xor.b64  	%rd16265, %rd16264, %rd16214;
	not.b64 	%rd16266, %rd16240;
	and.b64  	%rd16267, %rd16241, %rd16266;
	xor.b64  	%rd16268, %rd16267, %rd16239;
	not.b64 	%rd16269, %rd16241;
	and.b64  	%rd16270, %rd16242, %rd16269;
	xor.b64  	%rd16271, %rd16270, %rd16240;
	not.b64 	%rd16272, %rd16242;
	and.b64  	%rd16273, %rd16214, %rd16272;
	xor.b64  	%rd16274, %rd16273, %rd16241;
	not.b64 	%rd16275, %rd16214;
	and.b64  	%rd16276, %rd16239, %rd16275;
	xor.b64  	%rd16277, %rd16276, %rd16242;
	not.b64 	%rd16278, %rd16244;
	and.b64  	%rd16279, %rd16245, %rd16278;
	xor.b64  	%rd16280, %rd16279, %rd16243;
	not.b64 	%rd16281, %rd16245;
	and.b64  	%rd16282, %rd16246, %rd16281;
	xor.b64  	%rd16283, %rd16282, %rd16244;
	not.b64 	%rd16284, %rd16246;
	and.b64  	%rd16285, %rd16247, %rd16284;
	xor.b64  	%rd16286, %rd16285, %rd16245;
	not.b64 	%rd16287, %rd16247;
	and.b64  	%rd16288, %rd16243, %rd16287;
	xor.b64  	%rd16289, %rd16288, %rd16246;
	not.b64 	%rd16290, %rd16243;
	and.b64  	%rd16291, %rd16244, %rd16290;
	xor.b64  	%rd16292, %rd16291, %rd16247;
	not.b64 	%rd16293, %rd16249;
	and.b64  	%rd16294, %rd16250, %rd16293;
	xor.b64  	%rd16295, %rd16294, %rd16248;
	not.b64 	%rd16296, %rd16250;
	and.b64  	%rd16297, %rd16251, %rd16296;
	xor.b64  	%rd16298, %rd16297, %rd16249;
	not.b64 	%rd16299, %rd16251;
	and.b64  	%rd16300, %rd16252, %rd16299;
	xor.b64  	%rd16301, %rd16300, %rd16250;
	not.b64 	%rd16302, %rd16252;
	and.b64  	%rd16303, %rd16248, %rd16302;
	xor.b64  	%rd16304, %rd16303, %rd16251;
	not.b64 	%rd16305, %rd16248;
	and.b64  	%rd16306, %rd16249, %rd16305;
	xor.b64  	%rd16307, %rd16306, %rd16252;
	not.b64 	%rd16308, %rd16254;
	and.b64  	%rd16309, %rd16255, %rd16308;
	xor.b64  	%rd16310, %rd16309, %rd16253;
	not.b64 	%rd16311, %rd16255;
	and.b64  	%rd16312, %rd16256, %rd16311;
	xor.b64  	%rd16313, %rd16312, %rd16254;
	not.b64 	%rd16314, %rd16256;
	and.b64  	%rd16315, %rd16257, %rd16314;
	xor.b64  	%rd16316, %rd16315, %rd16255;
	not.b64 	%rd16317, %rd16257;
	and.b64  	%rd16318, %rd16253, %rd16317;
	xor.b64  	%rd16319, %rd16318, %rd16256;
	not.b64 	%rd16320, %rd16253;
	and.b64  	%rd16321, %rd16254, %rd16320;
	xor.b64  	%rd16322, %rd16321, %rd16257;
	not.b64 	%rd16323, %rd16259;
	and.b64  	%rd16324, %rd16260, %rd16323;
	xor.b64  	%rd16325, %rd16324, %rd16258;
	not.b64 	%rd16326, %rd16260;
	and.b64  	%rd16327, %rd16261, %rd16326;
	xor.b64  	%rd16328, %rd16327, %rd16259;
	not.b64 	%rd16329, %rd16261;
	and.b64  	%rd16330, %rd16262, %rd16329;
	xor.b64  	%rd16331, %rd16330, %rd16260;
	not.b64 	%rd16332, %rd16262;
	and.b64  	%rd16333, %rd16258, %rd16332;
	xor.b64  	%rd16334, %rd16333, %rd16261;
	not.b64 	%rd16335, %rd16258;
	and.b64  	%rd16336, %rd16259, %rd16335;
	xor.b64  	%rd16337, %rd16336, %rd16262;
	xor.b64  	%rd16338, %rd16265, %rd19810;
	xor.b64  	%rd16339, %rd16280, %rd16338;
	xor.b64  	%rd16340, %rd16339, %rd16295;
	xor.b64  	%rd16341, %rd16340, %rd16310;
	xor.b64  	%rd16342, %rd16341, %rd16325;
	xor.b64  	%rd16343, %rd16283, %rd16268;
	xor.b64  	%rd16344, %rd16343, %rd16298;
	xor.b64  	%rd16345, %rd16344, %rd16313;
	xor.b64  	%rd16346, %rd16345, %rd16328;
	xor.b64  	%rd16347, %rd16286, %rd16271;
	xor.b64  	%rd16348, %rd16347, %rd16301;
	xor.b64  	%rd16349, %rd16348, %rd16316;
	xor.b64  	%rd16350, %rd16349, %rd16331;
	xor.b64  	%rd16351, %rd16289, %rd16274;
	xor.b64  	%rd16352, %rd16351, %rd16304;
	xor.b64  	%rd16353, %rd16352, %rd16319;
	xor.b64  	%rd16354, %rd16353, %rd16334;
	xor.b64  	%rd16355, %rd16292, %rd16277;
	xor.b64  	%rd16356, %rd16355, %rd16307;
	xor.b64  	%rd16357, %rd16356, %rd16322;
	xor.b64  	%rd16358, %rd16357, %rd16337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11570}, %rd16346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11571,%dummy}, %rd16346;
	}
	shf.l.wrap.b32 	%r11572, %r11571, %r11570, 1;
	shf.l.wrap.b32 	%r11573, %r11570, %r11571, 1;
	mov.b64 	%rd16359, {%r11573, %r11572};
	xor.b64  	%rd16360, %rd16358, %rd16359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11574}, %rd16350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11575,%dummy}, %rd16350;
	}
	shf.l.wrap.b32 	%r11576, %r11575, %r11574, 1;
	shf.l.wrap.b32 	%r11577, %r11574, %r11575, 1;
	mov.b64 	%rd16361, {%r11577, %r11576};
	xor.b64  	%rd16362, %rd16361, %rd16342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11578}, %rd16354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11579,%dummy}, %rd16354;
	}
	shf.l.wrap.b32 	%r11580, %r11579, %r11578, 1;
	shf.l.wrap.b32 	%r11581, %r11578, %r11579, 1;
	mov.b64 	%rd16363, {%r11581, %r11580};
	xor.b64  	%rd16364, %rd16363, %rd16346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11582}, %rd16358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11583,%dummy}, %rd16358;
	}
	shf.l.wrap.b32 	%r11584, %r11583, %r11582, 1;
	shf.l.wrap.b32 	%r11585, %r11582, %r11583, 1;
	mov.b64 	%rd16365, {%r11585, %r11584};
	xor.b64  	%rd16366, %rd16365, %rd16350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11586}, %rd16342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11587,%dummy}, %rd16342;
	}
	shf.l.wrap.b32 	%r11588, %r11587, %r11586, 1;
	shf.l.wrap.b32 	%r11589, %r11586, %r11587, 1;
	mov.b64 	%rd16367, {%r11589, %r11588};
	xor.b64  	%rd16368, %rd16354, %rd16367;
	xor.b64  	%rd16369, %rd16360, %rd16338;
	xor.b64  	%rd16370, %rd16362, %rd16268;
	xor.b64  	%rd16371, %rd16364, %rd16271;
	xor.b64  	%rd16372, %rd16366, %rd16274;
	xor.b64  	%rd16373, %rd16368, %rd16277;
	xor.b64  	%rd16374, %rd16360, %rd16280;
	xor.b64  	%rd16375, %rd16362, %rd16283;
	xor.b64  	%rd16376, %rd16364, %rd16286;
	xor.b64  	%rd16377, %rd16366, %rd16289;
	xor.b64  	%rd16378, %rd16368, %rd16292;
	xor.b64  	%rd16379, %rd16360, %rd16295;
	xor.b64  	%rd16380, %rd16362, %rd16298;
	xor.b64  	%rd16381, %rd16364, %rd16301;
	xor.b64  	%rd16382, %rd16366, %rd16304;
	xor.b64  	%rd16383, %rd16368, %rd16307;
	xor.b64  	%rd16384, %rd16360, %rd16310;
	xor.b64  	%rd16385, %rd16362, %rd16313;
	xor.b64  	%rd16386, %rd16364, %rd16316;
	xor.b64  	%rd16387, %rd16366, %rd16319;
	xor.b64  	%rd16388, %rd16368, %rd16322;
	xor.b64  	%rd16389, %rd16360, %rd16325;
	xor.b64  	%rd16390, %rd16362, %rd16328;
	xor.b64  	%rd16391, %rd16364, %rd16331;
	xor.b64  	%rd16392, %rd16366, %rd16334;
	xor.b64  	%rd16393, %rd16368, %rd16337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11590,%dummy}, %rd16375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11591}, %rd16375;
	}
	shf.r.wrap.b32 	%r11592, %r11591, %r11590, 20;
	shf.r.wrap.b32 	%r11593, %r11590, %r11591, 20;
	mov.b64 	%rd16394, {%r11593, %r11592};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11594,%dummy}, %rd16381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11595}, %rd16381;
	}
	shf.r.wrap.b32 	%r11596, %r11595, %r11594, 21;
	shf.r.wrap.b32 	%r11597, %r11594, %r11595, 21;
	mov.b64 	%rd16395, {%r11597, %r11596};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11598}, %rd16387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11599,%dummy}, %rd16387;
	}
	shf.l.wrap.b32 	%r11600, %r11599, %r11598, 21;
	shf.l.wrap.b32 	%r11601, %r11598, %r11599, 21;
	mov.b64 	%rd16396, {%r11601, %r11600};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11602}, %rd16393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11603,%dummy}, %rd16393;
	}
	shf.l.wrap.b32 	%r11604, %r11603, %r11602, 14;
	shf.l.wrap.b32 	%r11605, %r11602, %r11603, 14;
	mov.b64 	%rd16397, {%r11605, %r11604};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11606}, %rd16372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11607,%dummy}, %rd16372;
	}
	shf.l.wrap.b32 	%r11608, %r11607, %r11606, 28;
	shf.l.wrap.b32 	%r11609, %r11606, %r11607, 28;
	mov.b64 	%rd16398, {%r11609, %r11608};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11610}, %rd16378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11611,%dummy}, %rd16378;
	}
	shf.l.wrap.b32 	%r11612, %r11611, %r11610, 20;
	shf.l.wrap.b32 	%r11613, %r11610, %r11611, 20;
	mov.b64 	%rd16399, {%r11613, %r11612};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11614}, %rd16379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11615,%dummy}, %rd16379;
	}
	shf.l.wrap.b32 	%r11616, %r11615, %r11614, 3;
	shf.l.wrap.b32 	%r11617, %r11614, %r11615, 3;
	mov.b64 	%rd16400, {%r11617, %r11616};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11618,%dummy}, %rd16385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11619}, %rd16385;
	}
	shf.r.wrap.b32 	%r11620, %r11619, %r11618, 19;
	shf.r.wrap.b32 	%r11621, %r11618, %r11619, 19;
	mov.b64 	%rd16401, {%r11621, %r11620};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11622,%dummy}, %rd16391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11623}, %rd16391;
	}
	shf.r.wrap.b32 	%r11624, %r11623, %r11622, 3;
	shf.r.wrap.b32 	%r11625, %r11622, %r11623, 3;
	mov.b64 	%rd16402, {%r11625, %r11624};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11626}, %rd16370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11627,%dummy}, %rd16370;
	}
	shf.l.wrap.b32 	%r11628, %r11627, %r11626, 1;
	shf.l.wrap.b32 	%r11629, %r11626, %r11627, 1;
	mov.b64 	%rd16403, {%r11629, %r11628};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11630}, %rd16376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11631,%dummy}, %rd16376;
	}
	shf.l.wrap.b32 	%r11632, %r11631, %r11630, 6;
	shf.l.wrap.b32 	%r11633, %r11630, %r11631, 6;
	mov.b64 	%rd16404, {%r11633, %r11632};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11634}, %rd16382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11635,%dummy}, %rd16382;
	}
	shf.l.wrap.b32 	%r11636, %r11635, %r11634, 25;
	shf.l.wrap.b32 	%r11637, %r11634, %r11635, 25;
	mov.b64 	%rd16405, {%r11637, %r11636};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11638}, %rd16388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11639,%dummy}, %rd16388;
	}
	shf.l.wrap.b32 	%r11640, %r11639, %r11638, 8;
	shf.l.wrap.b32 	%r11641, %r11638, %r11639, 8;
	mov.b64 	%rd16406, {%r11641, %r11640};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11642}, %rd16389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11643,%dummy}, %rd16389;
	}
	shf.l.wrap.b32 	%r11644, %r11643, %r11642, 18;
	shf.l.wrap.b32 	%r11645, %r11642, %r11643, 18;
	mov.b64 	%rd16407, {%r11645, %r11644};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11646}, %rd16373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11647,%dummy}, %rd16373;
	}
	shf.l.wrap.b32 	%r11648, %r11647, %r11646, 27;
	shf.l.wrap.b32 	%r11649, %r11646, %r11647, 27;
	mov.b64 	%rd16408, {%r11649, %r11648};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11650,%dummy}, %rd16374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11651}, %rd16374;
	}
	shf.r.wrap.b32 	%r11652, %r11651, %r11650, 28;
	shf.r.wrap.b32 	%r11653, %r11650, %r11651, 28;
	mov.b64 	%rd16409, {%r11653, %r11652};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11654}, %rd16380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11655,%dummy}, %rd16380;
	}
	shf.l.wrap.b32 	%r11656, %r11655, %r11654, 10;
	shf.l.wrap.b32 	%r11657, %r11654, %r11655, 10;
	mov.b64 	%rd16410, {%r11657, %r11656};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11658}, %rd16386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11659,%dummy}, %rd16386;
	}
	shf.l.wrap.b32 	%r11660, %r11659, %r11658, 15;
	shf.l.wrap.b32 	%r11661, %r11658, %r11659, 15;
	mov.b64 	%rd16411, {%r11661, %r11660};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11662,%dummy}, %rd16392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11663}, %rd16392;
	}
	shf.r.wrap.b32 	%r11664, %r11663, %r11662, 8;
	shf.r.wrap.b32 	%r11665, %r11662, %r11663, 8;
	mov.b64 	%rd16412, {%r11665, %r11664};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11666,%dummy}, %rd16371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11667}, %rd16371;
	}
	shf.r.wrap.b32 	%r11668, %r11667, %r11666, 2;
	shf.r.wrap.b32 	%r11669, %r11666, %r11667, 2;
	mov.b64 	%rd16413, {%r11669, %r11668};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11670,%dummy}, %rd16377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11671}, %rd16377;
	}
	shf.r.wrap.b32 	%r11672, %r11671, %r11670, 9;
	shf.r.wrap.b32 	%r11673, %r11670, %r11671, 9;
	mov.b64 	%rd16414, {%r11673, %r11672};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11674,%dummy}, %rd16383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11675}, %rd16383;
	}
	shf.r.wrap.b32 	%r11676, %r11675, %r11674, 25;
	shf.r.wrap.b32 	%r11677, %r11674, %r11675, 25;
	mov.b64 	%rd16415, {%r11677, %r11676};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11678,%dummy}, %rd16384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11679}, %rd16384;
	}
	shf.r.wrap.b32 	%r11680, %r11679, %r11678, 23;
	shf.r.wrap.b32 	%r11681, %r11678, %r11679, 23;
	mov.b64 	%rd16416, {%r11681, %r11680};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11682}, %rd16390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11683,%dummy}, %rd16390;
	}
	shf.l.wrap.b32 	%r11684, %r11683, %r11682, 2;
	shf.l.wrap.b32 	%r11685, %r11682, %r11683, 2;
	mov.b64 	%rd16417, {%r11685, %r11684};
	not.b64 	%rd16418, %rd16394;
	and.b64  	%rd16419, %rd16395, %rd16418;
	xor.b64  	%rd16420, %rd16419, %rd16369;
	not.b64 	%rd16421, %rd16395;
	and.b64  	%rd16422, %rd16396, %rd16421;
	xor.b64  	%rd16423, %rd16422, %rd16394;
	not.b64 	%rd16424, %rd16396;
	and.b64  	%rd16425, %rd16397, %rd16424;
	xor.b64  	%rd16426, %rd16425, %rd16395;
	not.b64 	%rd16427, %rd16397;
	and.b64  	%rd16428, %rd16369, %rd16427;
	xor.b64  	%rd16429, %rd16428, %rd16396;
	not.b64 	%rd16430, %rd16369;
	and.b64  	%rd16431, %rd16394, %rd16430;
	xor.b64  	%rd16432, %rd16431, %rd16397;
	not.b64 	%rd16433, %rd16399;
	and.b64  	%rd16434, %rd16400, %rd16433;
	xor.b64  	%rd16435, %rd16434, %rd16398;
	not.b64 	%rd16436, %rd16400;
	and.b64  	%rd16437, %rd16401, %rd16436;
	xor.b64  	%rd16438, %rd16437, %rd16399;
	not.b64 	%rd16439, %rd16401;
	and.b64  	%rd16440, %rd16402, %rd16439;
	xor.b64  	%rd16441, %rd16440, %rd16400;
	not.b64 	%rd16442, %rd16402;
	and.b64  	%rd16443, %rd16398, %rd16442;
	xor.b64  	%rd16444, %rd16443, %rd16401;
	not.b64 	%rd16445, %rd16398;
	and.b64  	%rd16446, %rd16399, %rd16445;
	xor.b64  	%rd16447, %rd16446, %rd16402;
	not.b64 	%rd16448, %rd16404;
	and.b64  	%rd16449, %rd16405, %rd16448;
	xor.b64  	%rd16450, %rd16449, %rd16403;
	not.b64 	%rd16451, %rd16405;
	and.b64  	%rd16452, %rd16406, %rd16451;
	xor.b64  	%rd16453, %rd16452, %rd16404;
	not.b64 	%rd16454, %rd16406;
	and.b64  	%rd16455, %rd16407, %rd16454;
	xor.b64  	%rd16456, %rd16455, %rd16405;
	not.b64 	%rd16457, %rd16407;
	and.b64  	%rd16458, %rd16403, %rd16457;
	xor.b64  	%rd16459, %rd16458, %rd16406;
	not.b64 	%rd16460, %rd16403;
	and.b64  	%rd16461, %rd16404, %rd16460;
	xor.b64  	%rd16462, %rd16461, %rd16407;
	not.b64 	%rd16463, %rd16409;
	and.b64  	%rd16464, %rd16410, %rd16463;
	xor.b64  	%rd16465, %rd16464, %rd16408;
	not.b64 	%rd16466, %rd16410;
	and.b64  	%rd16467, %rd16411, %rd16466;
	xor.b64  	%rd16468, %rd16467, %rd16409;
	not.b64 	%rd16469, %rd16411;
	and.b64  	%rd16470, %rd16412, %rd16469;
	xor.b64  	%rd16471, %rd16470, %rd16410;
	not.b64 	%rd16472, %rd16412;
	and.b64  	%rd16473, %rd16408, %rd16472;
	xor.b64  	%rd16474, %rd16473, %rd16411;
	not.b64 	%rd16475, %rd16408;
	and.b64  	%rd16476, %rd16409, %rd16475;
	xor.b64  	%rd16477, %rd16476, %rd16412;
	not.b64 	%rd16478, %rd16414;
	and.b64  	%rd16479, %rd16415, %rd16478;
	xor.b64  	%rd16480, %rd16479, %rd16413;
	not.b64 	%rd16481, %rd16415;
	and.b64  	%rd16482, %rd16416, %rd16481;
	xor.b64  	%rd16483, %rd16482, %rd16414;
	not.b64 	%rd16484, %rd16416;
	and.b64  	%rd16485, %rd16417, %rd16484;
	xor.b64  	%rd16486, %rd16485, %rd16415;
	not.b64 	%rd16487, %rd16417;
	and.b64  	%rd16488, %rd16413, %rd16487;
	xor.b64  	%rd16489, %rd16488, %rd16416;
	not.b64 	%rd16490, %rd16413;
	and.b64  	%rd16491, %rd16414, %rd16490;
	xor.b64  	%rd16492, %rd16491, %rd16417;
	xor.b64  	%rd16493, %rd16420, %rd19811;
	xor.b64  	%rd16494, %rd16435, %rd16493;
	xor.b64  	%rd16495, %rd16494, %rd16450;
	xor.b64  	%rd16496, %rd16495, %rd16465;
	xor.b64  	%rd16497, %rd16496, %rd16480;
	xor.b64  	%rd16498, %rd16438, %rd16423;
	xor.b64  	%rd16499, %rd16498, %rd16453;
	xor.b64  	%rd16500, %rd16499, %rd16468;
	xor.b64  	%rd16501, %rd16500, %rd16483;
	xor.b64  	%rd16502, %rd16441, %rd16426;
	xor.b64  	%rd16503, %rd16502, %rd16456;
	xor.b64  	%rd16504, %rd16503, %rd16471;
	xor.b64  	%rd16505, %rd16504, %rd16486;
	xor.b64  	%rd16506, %rd16444, %rd16429;
	xor.b64  	%rd16507, %rd16506, %rd16459;
	xor.b64  	%rd16508, %rd16507, %rd16474;
	xor.b64  	%rd16509, %rd16508, %rd16489;
	xor.b64  	%rd16510, %rd16447, %rd16432;
	xor.b64  	%rd16511, %rd16510, %rd16462;
	xor.b64  	%rd16512, %rd16511, %rd16477;
	xor.b64  	%rd16513, %rd16512, %rd16492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11686}, %rd16501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11687,%dummy}, %rd16501;
	}
	shf.l.wrap.b32 	%r11688, %r11687, %r11686, 1;
	shf.l.wrap.b32 	%r11689, %r11686, %r11687, 1;
	mov.b64 	%rd16514, {%r11689, %r11688};
	xor.b64  	%rd16515, %rd16513, %rd16514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11690}, %rd16505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11691,%dummy}, %rd16505;
	}
	shf.l.wrap.b32 	%r11692, %r11691, %r11690, 1;
	shf.l.wrap.b32 	%r11693, %r11690, %r11691, 1;
	mov.b64 	%rd16516, {%r11693, %r11692};
	xor.b64  	%rd16517, %rd16516, %rd16497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11694}, %rd16509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11695,%dummy}, %rd16509;
	}
	shf.l.wrap.b32 	%r11696, %r11695, %r11694, 1;
	shf.l.wrap.b32 	%r11697, %r11694, %r11695, 1;
	mov.b64 	%rd16518, {%r11697, %r11696};
	xor.b64  	%rd16519, %rd16518, %rd16501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11698}, %rd16513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11699,%dummy}, %rd16513;
	}
	shf.l.wrap.b32 	%r11700, %r11699, %r11698, 1;
	shf.l.wrap.b32 	%r11701, %r11698, %r11699, 1;
	mov.b64 	%rd16520, {%r11701, %r11700};
	xor.b64  	%rd16521, %rd16520, %rd16505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11702}, %rd16497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11703,%dummy}, %rd16497;
	}
	shf.l.wrap.b32 	%r11704, %r11703, %r11702, 1;
	shf.l.wrap.b32 	%r11705, %r11702, %r11703, 1;
	mov.b64 	%rd16522, {%r11705, %r11704};
	xor.b64  	%rd16523, %rd16509, %rd16522;
	xor.b64  	%rd16524, %rd16515, %rd16493;
	xor.b64  	%rd16525, %rd16517, %rd16423;
	xor.b64  	%rd16526, %rd16519, %rd16426;
	xor.b64  	%rd16527, %rd16521, %rd16429;
	xor.b64  	%rd16528, %rd16523, %rd16432;
	xor.b64  	%rd16529, %rd16515, %rd16435;
	xor.b64  	%rd16530, %rd16517, %rd16438;
	xor.b64  	%rd16531, %rd16519, %rd16441;
	xor.b64  	%rd16532, %rd16521, %rd16444;
	xor.b64  	%rd16533, %rd16523, %rd16447;
	xor.b64  	%rd16534, %rd16515, %rd16450;
	xor.b64  	%rd16535, %rd16517, %rd16453;
	xor.b64  	%rd16536, %rd16519, %rd16456;
	xor.b64  	%rd16537, %rd16521, %rd16459;
	xor.b64  	%rd16538, %rd16523, %rd16462;
	xor.b64  	%rd16539, %rd16515, %rd16465;
	xor.b64  	%rd16540, %rd16517, %rd16468;
	xor.b64  	%rd16541, %rd16519, %rd16471;
	xor.b64  	%rd16542, %rd16521, %rd16474;
	xor.b64  	%rd16543, %rd16523, %rd16477;
	xor.b64  	%rd16544, %rd16515, %rd16480;
	xor.b64  	%rd16545, %rd16517, %rd16483;
	xor.b64  	%rd16546, %rd16519, %rd16486;
	xor.b64  	%rd16547, %rd16521, %rd16489;
	xor.b64  	%rd16548, %rd16523, %rd16492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11706,%dummy}, %rd16530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11707}, %rd16530;
	}
	shf.r.wrap.b32 	%r11708, %r11707, %r11706, 20;
	shf.r.wrap.b32 	%r11709, %r11706, %r11707, 20;
	mov.b64 	%rd16549, {%r11709, %r11708};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11710,%dummy}, %rd16536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11711}, %rd16536;
	}
	shf.r.wrap.b32 	%r11712, %r11711, %r11710, 21;
	shf.r.wrap.b32 	%r11713, %r11710, %r11711, 21;
	mov.b64 	%rd16550, {%r11713, %r11712};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11714}, %rd16542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11715,%dummy}, %rd16542;
	}
	shf.l.wrap.b32 	%r11716, %r11715, %r11714, 21;
	shf.l.wrap.b32 	%r11717, %r11714, %r11715, 21;
	mov.b64 	%rd16551, {%r11717, %r11716};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11718}, %rd16548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11719,%dummy}, %rd16548;
	}
	shf.l.wrap.b32 	%r11720, %r11719, %r11718, 14;
	shf.l.wrap.b32 	%r11721, %r11718, %r11719, 14;
	mov.b64 	%rd16552, {%r11721, %r11720};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11722}, %rd16527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11723,%dummy}, %rd16527;
	}
	shf.l.wrap.b32 	%r11724, %r11723, %r11722, 28;
	shf.l.wrap.b32 	%r11725, %r11722, %r11723, 28;
	mov.b64 	%rd16553, {%r11725, %r11724};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11726}, %rd16533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11727,%dummy}, %rd16533;
	}
	shf.l.wrap.b32 	%r11728, %r11727, %r11726, 20;
	shf.l.wrap.b32 	%r11729, %r11726, %r11727, 20;
	mov.b64 	%rd16554, {%r11729, %r11728};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11730}, %rd16534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11731,%dummy}, %rd16534;
	}
	shf.l.wrap.b32 	%r11732, %r11731, %r11730, 3;
	shf.l.wrap.b32 	%r11733, %r11730, %r11731, 3;
	mov.b64 	%rd16555, {%r11733, %r11732};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11734,%dummy}, %rd16540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11735}, %rd16540;
	}
	shf.r.wrap.b32 	%r11736, %r11735, %r11734, 19;
	shf.r.wrap.b32 	%r11737, %r11734, %r11735, 19;
	mov.b64 	%rd16556, {%r11737, %r11736};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11738,%dummy}, %rd16546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11739}, %rd16546;
	}
	shf.r.wrap.b32 	%r11740, %r11739, %r11738, 3;
	shf.r.wrap.b32 	%r11741, %r11738, %r11739, 3;
	mov.b64 	%rd16557, {%r11741, %r11740};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11742}, %rd16525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11743,%dummy}, %rd16525;
	}
	shf.l.wrap.b32 	%r11744, %r11743, %r11742, 1;
	shf.l.wrap.b32 	%r11745, %r11742, %r11743, 1;
	mov.b64 	%rd16558, {%r11745, %r11744};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11746}, %rd16531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11747,%dummy}, %rd16531;
	}
	shf.l.wrap.b32 	%r11748, %r11747, %r11746, 6;
	shf.l.wrap.b32 	%r11749, %r11746, %r11747, 6;
	mov.b64 	%rd16559, {%r11749, %r11748};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11750}, %rd16537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11751,%dummy}, %rd16537;
	}
	shf.l.wrap.b32 	%r11752, %r11751, %r11750, 25;
	shf.l.wrap.b32 	%r11753, %r11750, %r11751, 25;
	mov.b64 	%rd16560, {%r11753, %r11752};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11754}, %rd16543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11755,%dummy}, %rd16543;
	}
	shf.l.wrap.b32 	%r11756, %r11755, %r11754, 8;
	shf.l.wrap.b32 	%r11757, %r11754, %r11755, 8;
	mov.b64 	%rd16561, {%r11757, %r11756};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11758}, %rd16544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11759,%dummy}, %rd16544;
	}
	shf.l.wrap.b32 	%r11760, %r11759, %r11758, 18;
	shf.l.wrap.b32 	%r11761, %r11758, %r11759, 18;
	mov.b64 	%rd16562, {%r11761, %r11760};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11762}, %rd16528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11763,%dummy}, %rd16528;
	}
	shf.l.wrap.b32 	%r11764, %r11763, %r11762, 27;
	shf.l.wrap.b32 	%r11765, %r11762, %r11763, 27;
	mov.b64 	%rd16563, {%r11765, %r11764};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11766,%dummy}, %rd16529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11767}, %rd16529;
	}
	shf.r.wrap.b32 	%r11768, %r11767, %r11766, 28;
	shf.r.wrap.b32 	%r11769, %r11766, %r11767, 28;
	mov.b64 	%rd16564, {%r11769, %r11768};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11770}, %rd16535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11771,%dummy}, %rd16535;
	}
	shf.l.wrap.b32 	%r11772, %r11771, %r11770, 10;
	shf.l.wrap.b32 	%r11773, %r11770, %r11771, 10;
	mov.b64 	%rd16565, {%r11773, %r11772};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11774}, %rd16541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11775,%dummy}, %rd16541;
	}
	shf.l.wrap.b32 	%r11776, %r11775, %r11774, 15;
	shf.l.wrap.b32 	%r11777, %r11774, %r11775, 15;
	mov.b64 	%rd16566, {%r11777, %r11776};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11778,%dummy}, %rd16547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11779}, %rd16547;
	}
	shf.r.wrap.b32 	%r11780, %r11779, %r11778, 8;
	shf.r.wrap.b32 	%r11781, %r11778, %r11779, 8;
	mov.b64 	%rd16567, {%r11781, %r11780};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11782,%dummy}, %rd16526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11783}, %rd16526;
	}
	shf.r.wrap.b32 	%r11784, %r11783, %r11782, 2;
	shf.r.wrap.b32 	%r11785, %r11782, %r11783, 2;
	mov.b64 	%rd16568, {%r11785, %r11784};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11786,%dummy}, %rd16532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11787}, %rd16532;
	}
	shf.r.wrap.b32 	%r11788, %r11787, %r11786, 9;
	shf.r.wrap.b32 	%r11789, %r11786, %r11787, 9;
	mov.b64 	%rd16569, {%r11789, %r11788};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11790,%dummy}, %rd16538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11791}, %rd16538;
	}
	shf.r.wrap.b32 	%r11792, %r11791, %r11790, 25;
	shf.r.wrap.b32 	%r11793, %r11790, %r11791, 25;
	mov.b64 	%rd16570, {%r11793, %r11792};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11794,%dummy}, %rd16539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11795}, %rd16539;
	}
	shf.r.wrap.b32 	%r11796, %r11795, %r11794, 23;
	shf.r.wrap.b32 	%r11797, %r11794, %r11795, 23;
	mov.b64 	%rd16571, {%r11797, %r11796};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11798}, %rd16545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11799,%dummy}, %rd16545;
	}
	shf.l.wrap.b32 	%r11800, %r11799, %r11798, 2;
	shf.l.wrap.b32 	%r11801, %r11798, %r11799, 2;
	mov.b64 	%rd16572, {%r11801, %r11800};
	not.b64 	%rd16573, %rd16549;
	and.b64  	%rd16574, %rd16550, %rd16573;
	xor.b64  	%rd16575, %rd16574, %rd16524;
	not.b64 	%rd16576, %rd16550;
	and.b64  	%rd16577, %rd16551, %rd16576;
	xor.b64  	%rd16578, %rd16577, %rd16549;
	not.b64 	%rd16579, %rd16551;
	and.b64  	%rd16580, %rd16552, %rd16579;
	xor.b64  	%rd16581, %rd16580, %rd16550;
	not.b64 	%rd16582, %rd16552;
	and.b64  	%rd16583, %rd16524, %rd16582;
	xor.b64  	%rd16584, %rd16583, %rd16551;
	not.b64 	%rd16585, %rd16524;
	and.b64  	%rd16586, %rd16549, %rd16585;
	xor.b64  	%rd16587, %rd16586, %rd16552;
	not.b64 	%rd16588, %rd16554;
	and.b64  	%rd16589, %rd16555, %rd16588;
	xor.b64  	%rd16590, %rd16589, %rd16553;
	not.b64 	%rd16591, %rd16555;
	and.b64  	%rd16592, %rd16556, %rd16591;
	xor.b64  	%rd16593, %rd16592, %rd16554;
	not.b64 	%rd16594, %rd16556;
	and.b64  	%rd16595, %rd16557, %rd16594;
	xor.b64  	%rd16596, %rd16595, %rd16555;
	not.b64 	%rd16597, %rd16557;
	and.b64  	%rd16598, %rd16553, %rd16597;
	xor.b64  	%rd16599, %rd16598, %rd16556;
	not.b64 	%rd16600, %rd16553;
	and.b64  	%rd16601, %rd16554, %rd16600;
	xor.b64  	%rd16602, %rd16601, %rd16557;
	not.b64 	%rd16603, %rd16559;
	and.b64  	%rd16604, %rd16560, %rd16603;
	xor.b64  	%rd16605, %rd16604, %rd16558;
	not.b64 	%rd16606, %rd16560;
	and.b64  	%rd16607, %rd16561, %rd16606;
	xor.b64  	%rd16608, %rd16607, %rd16559;
	not.b64 	%rd16609, %rd16561;
	and.b64  	%rd16610, %rd16562, %rd16609;
	xor.b64  	%rd16611, %rd16610, %rd16560;
	not.b64 	%rd16612, %rd16562;
	and.b64  	%rd16613, %rd16558, %rd16612;
	xor.b64  	%rd16614, %rd16613, %rd16561;
	not.b64 	%rd16615, %rd16558;
	and.b64  	%rd16616, %rd16559, %rd16615;
	xor.b64  	%rd16617, %rd16616, %rd16562;
	not.b64 	%rd16618, %rd16564;
	and.b64  	%rd16619, %rd16565, %rd16618;
	xor.b64  	%rd16620, %rd16619, %rd16563;
	not.b64 	%rd16621, %rd16565;
	and.b64  	%rd16622, %rd16566, %rd16621;
	xor.b64  	%rd16623, %rd16622, %rd16564;
	not.b64 	%rd16624, %rd16566;
	and.b64  	%rd16625, %rd16567, %rd16624;
	xor.b64  	%rd16626, %rd16625, %rd16565;
	not.b64 	%rd16627, %rd16567;
	and.b64  	%rd16628, %rd16563, %rd16627;
	xor.b64  	%rd16629, %rd16628, %rd16566;
	not.b64 	%rd16630, %rd16563;
	and.b64  	%rd16631, %rd16564, %rd16630;
	xor.b64  	%rd16632, %rd16631, %rd16567;
	not.b64 	%rd16633, %rd16569;
	and.b64  	%rd16634, %rd16570, %rd16633;
	xor.b64  	%rd16635, %rd16634, %rd16568;
	not.b64 	%rd16636, %rd16570;
	and.b64  	%rd16637, %rd16571, %rd16636;
	xor.b64  	%rd16638, %rd16637, %rd16569;
	not.b64 	%rd16639, %rd16571;
	and.b64  	%rd16640, %rd16572, %rd16639;
	xor.b64  	%rd16641, %rd16640, %rd16570;
	not.b64 	%rd16642, %rd16572;
	and.b64  	%rd16643, %rd16568, %rd16642;
	xor.b64  	%rd16644, %rd16643, %rd16571;
	not.b64 	%rd16645, %rd16568;
	and.b64  	%rd16646, %rd16569, %rd16645;
	xor.b64  	%rd16647, %rd16646, %rd16572;
	xor.b64  	%rd16648, %rd16575, %rd19812;
	xor.b64  	%rd16649, %rd16590, %rd16648;
	xor.b64  	%rd16650, %rd16649, %rd16605;
	xor.b64  	%rd16651, %rd16650, %rd16620;
	xor.b64  	%rd16652, %rd16651, %rd16635;
	xor.b64  	%rd16653, %rd16593, %rd16578;
	xor.b64  	%rd16654, %rd16653, %rd16608;
	xor.b64  	%rd16655, %rd16654, %rd16623;
	xor.b64  	%rd16656, %rd16655, %rd16638;
	xor.b64  	%rd16657, %rd16596, %rd16581;
	xor.b64  	%rd16658, %rd16657, %rd16611;
	xor.b64  	%rd16659, %rd16658, %rd16626;
	xor.b64  	%rd16660, %rd16659, %rd16641;
	xor.b64  	%rd16661, %rd16599, %rd16584;
	xor.b64  	%rd16662, %rd16661, %rd16614;
	xor.b64  	%rd16663, %rd16662, %rd16629;
	xor.b64  	%rd16664, %rd16663, %rd16644;
	xor.b64  	%rd16665, %rd16602, %rd16587;
	xor.b64  	%rd16666, %rd16665, %rd16617;
	xor.b64  	%rd16667, %rd16666, %rd16632;
	xor.b64  	%rd16668, %rd16667, %rd16647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11802}, %rd16656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11803,%dummy}, %rd16656;
	}
	shf.l.wrap.b32 	%r11804, %r11803, %r11802, 1;
	shf.l.wrap.b32 	%r11805, %r11802, %r11803, 1;
	mov.b64 	%rd16669, {%r11805, %r11804};
	xor.b64  	%rd16670, %rd16668, %rd16669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11806}, %rd16660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11807,%dummy}, %rd16660;
	}
	shf.l.wrap.b32 	%r11808, %r11807, %r11806, 1;
	shf.l.wrap.b32 	%r11809, %r11806, %r11807, 1;
	mov.b64 	%rd16671, {%r11809, %r11808};
	xor.b64  	%rd16672, %rd16671, %rd16652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11810}, %rd16664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11811,%dummy}, %rd16664;
	}
	shf.l.wrap.b32 	%r11812, %r11811, %r11810, 1;
	shf.l.wrap.b32 	%r11813, %r11810, %r11811, 1;
	mov.b64 	%rd16673, {%r11813, %r11812};
	xor.b64  	%rd16674, %rd16673, %rd16656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11814}, %rd16668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11815,%dummy}, %rd16668;
	}
	shf.l.wrap.b32 	%r11816, %r11815, %r11814, 1;
	shf.l.wrap.b32 	%r11817, %r11814, %r11815, 1;
	mov.b64 	%rd16675, {%r11817, %r11816};
	xor.b64  	%rd16676, %rd16675, %rd16660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11818}, %rd16652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11819,%dummy}, %rd16652;
	}
	shf.l.wrap.b32 	%r11820, %r11819, %r11818, 1;
	shf.l.wrap.b32 	%r11821, %r11818, %r11819, 1;
	mov.b64 	%rd16677, {%r11821, %r11820};
	xor.b64  	%rd16678, %rd16664, %rd16677;
	xor.b64  	%rd16679, %rd16670, %rd16648;
	xor.b64  	%rd16680, %rd16672, %rd16578;
	xor.b64  	%rd16681, %rd16674, %rd16581;
	xor.b64  	%rd16682, %rd16676, %rd16584;
	xor.b64  	%rd16683, %rd16678, %rd16587;
	xor.b64  	%rd16684, %rd16670, %rd16590;
	xor.b64  	%rd16685, %rd16672, %rd16593;
	xor.b64  	%rd16686, %rd16674, %rd16596;
	xor.b64  	%rd16687, %rd16676, %rd16599;
	xor.b64  	%rd16688, %rd16678, %rd16602;
	xor.b64  	%rd16689, %rd16670, %rd16605;
	xor.b64  	%rd16690, %rd16672, %rd16608;
	xor.b64  	%rd16691, %rd16674, %rd16611;
	xor.b64  	%rd16692, %rd16676, %rd16614;
	xor.b64  	%rd16693, %rd16678, %rd16617;
	xor.b64  	%rd16694, %rd16670, %rd16620;
	xor.b64  	%rd16695, %rd16672, %rd16623;
	xor.b64  	%rd16696, %rd16674, %rd16626;
	xor.b64  	%rd16697, %rd16676, %rd16629;
	xor.b64  	%rd16698, %rd16678, %rd16632;
	xor.b64  	%rd16699, %rd16670, %rd16635;
	xor.b64  	%rd16700, %rd16672, %rd16638;
	xor.b64  	%rd16701, %rd16674, %rd16641;
	xor.b64  	%rd16702, %rd16676, %rd16644;
	xor.b64  	%rd16703, %rd16678, %rd16647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11822,%dummy}, %rd16685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11823}, %rd16685;
	}
	shf.r.wrap.b32 	%r11824, %r11823, %r11822, 20;
	shf.r.wrap.b32 	%r11825, %r11822, %r11823, 20;
	mov.b64 	%rd16704, {%r11825, %r11824};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11826,%dummy}, %rd16691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11827}, %rd16691;
	}
	shf.r.wrap.b32 	%r11828, %r11827, %r11826, 21;
	shf.r.wrap.b32 	%r11829, %r11826, %r11827, 21;
	mov.b64 	%rd16705, {%r11829, %r11828};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11830}, %rd16697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11831,%dummy}, %rd16697;
	}
	shf.l.wrap.b32 	%r11832, %r11831, %r11830, 21;
	shf.l.wrap.b32 	%r11833, %r11830, %r11831, 21;
	mov.b64 	%rd16706, {%r11833, %r11832};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11834}, %rd16703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11835,%dummy}, %rd16703;
	}
	shf.l.wrap.b32 	%r11836, %r11835, %r11834, 14;
	shf.l.wrap.b32 	%r11837, %r11834, %r11835, 14;
	mov.b64 	%rd16707, {%r11837, %r11836};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11838}, %rd16682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11839,%dummy}, %rd16682;
	}
	shf.l.wrap.b32 	%r11840, %r11839, %r11838, 28;
	shf.l.wrap.b32 	%r11841, %r11838, %r11839, 28;
	mov.b64 	%rd16708, {%r11841, %r11840};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11842}, %rd16688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11843,%dummy}, %rd16688;
	}
	shf.l.wrap.b32 	%r11844, %r11843, %r11842, 20;
	shf.l.wrap.b32 	%r11845, %r11842, %r11843, 20;
	mov.b64 	%rd16709, {%r11845, %r11844};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11846}, %rd16689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11847,%dummy}, %rd16689;
	}
	shf.l.wrap.b32 	%r11848, %r11847, %r11846, 3;
	shf.l.wrap.b32 	%r11849, %r11846, %r11847, 3;
	mov.b64 	%rd16710, {%r11849, %r11848};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11850,%dummy}, %rd16695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11851}, %rd16695;
	}
	shf.r.wrap.b32 	%r11852, %r11851, %r11850, 19;
	shf.r.wrap.b32 	%r11853, %r11850, %r11851, 19;
	mov.b64 	%rd16711, {%r11853, %r11852};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11854,%dummy}, %rd16701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11855}, %rd16701;
	}
	shf.r.wrap.b32 	%r11856, %r11855, %r11854, 3;
	shf.r.wrap.b32 	%r11857, %r11854, %r11855, 3;
	mov.b64 	%rd16712, {%r11857, %r11856};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11858}, %rd16680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11859,%dummy}, %rd16680;
	}
	shf.l.wrap.b32 	%r11860, %r11859, %r11858, 1;
	shf.l.wrap.b32 	%r11861, %r11858, %r11859, 1;
	mov.b64 	%rd16713, {%r11861, %r11860};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11862}, %rd16686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11863,%dummy}, %rd16686;
	}
	shf.l.wrap.b32 	%r11864, %r11863, %r11862, 6;
	shf.l.wrap.b32 	%r11865, %r11862, %r11863, 6;
	mov.b64 	%rd16714, {%r11865, %r11864};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11866}, %rd16692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11867,%dummy}, %rd16692;
	}
	shf.l.wrap.b32 	%r11868, %r11867, %r11866, 25;
	shf.l.wrap.b32 	%r11869, %r11866, %r11867, 25;
	mov.b64 	%rd16715, {%r11869, %r11868};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11870}, %rd16698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11871,%dummy}, %rd16698;
	}
	shf.l.wrap.b32 	%r11872, %r11871, %r11870, 8;
	shf.l.wrap.b32 	%r11873, %r11870, %r11871, 8;
	mov.b64 	%rd16716, {%r11873, %r11872};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11874}, %rd16699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11875,%dummy}, %rd16699;
	}
	shf.l.wrap.b32 	%r11876, %r11875, %r11874, 18;
	shf.l.wrap.b32 	%r11877, %r11874, %r11875, 18;
	mov.b64 	%rd16717, {%r11877, %r11876};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11878}, %rd16683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11879,%dummy}, %rd16683;
	}
	shf.l.wrap.b32 	%r11880, %r11879, %r11878, 27;
	shf.l.wrap.b32 	%r11881, %r11878, %r11879, 27;
	mov.b64 	%rd16718, {%r11881, %r11880};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11882,%dummy}, %rd16684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11883}, %rd16684;
	}
	shf.r.wrap.b32 	%r11884, %r11883, %r11882, 28;
	shf.r.wrap.b32 	%r11885, %r11882, %r11883, 28;
	mov.b64 	%rd16719, {%r11885, %r11884};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11886}, %rd16690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11887,%dummy}, %rd16690;
	}
	shf.l.wrap.b32 	%r11888, %r11887, %r11886, 10;
	shf.l.wrap.b32 	%r11889, %r11886, %r11887, 10;
	mov.b64 	%rd16720, {%r11889, %r11888};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11890}, %rd16696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11891,%dummy}, %rd16696;
	}
	shf.l.wrap.b32 	%r11892, %r11891, %r11890, 15;
	shf.l.wrap.b32 	%r11893, %r11890, %r11891, 15;
	mov.b64 	%rd16721, {%r11893, %r11892};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11894,%dummy}, %rd16702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11895}, %rd16702;
	}
	shf.r.wrap.b32 	%r11896, %r11895, %r11894, 8;
	shf.r.wrap.b32 	%r11897, %r11894, %r11895, 8;
	mov.b64 	%rd16722, {%r11897, %r11896};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11898,%dummy}, %rd16681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11899}, %rd16681;
	}
	shf.r.wrap.b32 	%r11900, %r11899, %r11898, 2;
	shf.r.wrap.b32 	%r11901, %r11898, %r11899, 2;
	mov.b64 	%rd16723, {%r11901, %r11900};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11902,%dummy}, %rd16687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11903}, %rd16687;
	}
	shf.r.wrap.b32 	%r11904, %r11903, %r11902, 9;
	shf.r.wrap.b32 	%r11905, %r11902, %r11903, 9;
	mov.b64 	%rd16724, {%r11905, %r11904};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11906,%dummy}, %rd16693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11907}, %rd16693;
	}
	shf.r.wrap.b32 	%r11908, %r11907, %r11906, 25;
	shf.r.wrap.b32 	%r11909, %r11906, %r11907, 25;
	mov.b64 	%rd16725, {%r11909, %r11908};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11910,%dummy}, %rd16694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11911}, %rd16694;
	}
	shf.r.wrap.b32 	%r11912, %r11911, %r11910, 23;
	shf.r.wrap.b32 	%r11913, %r11910, %r11911, 23;
	mov.b64 	%rd16726, {%r11913, %r11912};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11914}, %rd16700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11915,%dummy}, %rd16700;
	}
	shf.l.wrap.b32 	%r11916, %r11915, %r11914, 2;
	shf.l.wrap.b32 	%r11917, %r11914, %r11915, 2;
	mov.b64 	%rd16727, {%r11917, %r11916};
	not.b64 	%rd16728, %rd16704;
	and.b64  	%rd16729, %rd16705, %rd16728;
	xor.b64  	%rd16730, %rd16729, %rd16679;
	not.b64 	%rd16731, %rd16705;
	and.b64  	%rd16732, %rd16706, %rd16731;
	xor.b64  	%rd16733, %rd16732, %rd16704;
	not.b64 	%rd16734, %rd16706;
	and.b64  	%rd16735, %rd16707, %rd16734;
	xor.b64  	%rd16736, %rd16735, %rd16705;
	not.b64 	%rd16737, %rd16707;
	and.b64  	%rd16738, %rd16679, %rd16737;
	xor.b64  	%rd16739, %rd16738, %rd16706;
	not.b64 	%rd16740, %rd16679;
	and.b64  	%rd16741, %rd16704, %rd16740;
	xor.b64  	%rd16742, %rd16741, %rd16707;
	not.b64 	%rd16743, %rd16709;
	and.b64  	%rd16744, %rd16710, %rd16743;
	xor.b64  	%rd16745, %rd16744, %rd16708;
	not.b64 	%rd16746, %rd16710;
	and.b64  	%rd16747, %rd16711, %rd16746;
	xor.b64  	%rd16748, %rd16747, %rd16709;
	not.b64 	%rd16749, %rd16711;
	and.b64  	%rd16750, %rd16712, %rd16749;
	xor.b64  	%rd16751, %rd16750, %rd16710;
	not.b64 	%rd16752, %rd16712;
	and.b64  	%rd16753, %rd16708, %rd16752;
	xor.b64  	%rd16754, %rd16753, %rd16711;
	not.b64 	%rd16755, %rd16708;
	and.b64  	%rd16756, %rd16709, %rd16755;
	xor.b64  	%rd16757, %rd16756, %rd16712;
	not.b64 	%rd16758, %rd16714;
	and.b64  	%rd16759, %rd16715, %rd16758;
	xor.b64  	%rd16760, %rd16759, %rd16713;
	not.b64 	%rd16761, %rd16715;
	and.b64  	%rd16762, %rd16716, %rd16761;
	xor.b64  	%rd16763, %rd16762, %rd16714;
	not.b64 	%rd16764, %rd16716;
	and.b64  	%rd16765, %rd16717, %rd16764;
	xor.b64  	%rd16766, %rd16765, %rd16715;
	not.b64 	%rd16767, %rd16717;
	and.b64  	%rd16768, %rd16713, %rd16767;
	xor.b64  	%rd16769, %rd16768, %rd16716;
	not.b64 	%rd16770, %rd16713;
	and.b64  	%rd16771, %rd16714, %rd16770;
	xor.b64  	%rd16772, %rd16771, %rd16717;
	not.b64 	%rd16773, %rd16719;
	and.b64  	%rd16774, %rd16720, %rd16773;
	xor.b64  	%rd16775, %rd16774, %rd16718;
	not.b64 	%rd16776, %rd16720;
	and.b64  	%rd16777, %rd16721, %rd16776;
	xor.b64  	%rd16778, %rd16777, %rd16719;
	not.b64 	%rd16779, %rd16721;
	and.b64  	%rd16780, %rd16722, %rd16779;
	xor.b64  	%rd16781, %rd16780, %rd16720;
	not.b64 	%rd16782, %rd16722;
	and.b64  	%rd16783, %rd16718, %rd16782;
	xor.b64  	%rd16784, %rd16783, %rd16721;
	not.b64 	%rd16785, %rd16718;
	and.b64  	%rd16786, %rd16719, %rd16785;
	xor.b64  	%rd16787, %rd16786, %rd16722;
	not.b64 	%rd16788, %rd16724;
	and.b64  	%rd16789, %rd16725, %rd16788;
	xor.b64  	%rd16790, %rd16789, %rd16723;
	not.b64 	%rd16791, %rd16725;
	and.b64  	%rd16792, %rd16726, %rd16791;
	xor.b64  	%rd16793, %rd16792, %rd16724;
	not.b64 	%rd16794, %rd16726;
	and.b64  	%rd16795, %rd16727, %rd16794;
	xor.b64  	%rd16796, %rd16795, %rd16725;
	not.b64 	%rd16797, %rd16727;
	and.b64  	%rd16798, %rd16723, %rd16797;
	xor.b64  	%rd16799, %rd16798, %rd16726;
	not.b64 	%rd16800, %rd16723;
	and.b64  	%rd16801, %rd16724, %rd16800;
	xor.b64  	%rd16802, %rd16801, %rd16727;
	xor.b64  	%rd16803, %rd16730, %rd19813;
	xor.b64  	%rd16804, %rd16745, %rd16803;
	xor.b64  	%rd16805, %rd16804, %rd16760;
	xor.b64  	%rd16806, %rd16805, %rd16775;
	xor.b64  	%rd16807, %rd16806, %rd16790;
	xor.b64  	%rd16808, %rd16748, %rd16733;
	xor.b64  	%rd16809, %rd16808, %rd16763;
	xor.b64  	%rd16810, %rd16809, %rd16778;
	xor.b64  	%rd16811, %rd16810, %rd16793;
	xor.b64  	%rd16812, %rd16751, %rd16736;
	xor.b64  	%rd16813, %rd16812, %rd16766;
	xor.b64  	%rd16814, %rd16813, %rd16781;
	xor.b64  	%rd16815, %rd16814, %rd16796;
	xor.b64  	%rd16816, %rd16754, %rd16739;
	xor.b64  	%rd16817, %rd16816, %rd16769;
	xor.b64  	%rd16818, %rd16817, %rd16784;
	xor.b64  	%rd16819, %rd16818, %rd16799;
	xor.b64  	%rd16820, %rd16757, %rd16742;
	xor.b64  	%rd16821, %rd16820, %rd16772;
	xor.b64  	%rd16822, %rd16821, %rd16787;
	xor.b64  	%rd16823, %rd16822, %rd16802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11918}, %rd16811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11919,%dummy}, %rd16811;
	}
	shf.l.wrap.b32 	%r11920, %r11919, %r11918, 1;
	shf.l.wrap.b32 	%r11921, %r11918, %r11919, 1;
	mov.b64 	%rd16824, {%r11921, %r11920};
	xor.b64  	%rd16825, %rd16823, %rd16824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11922}, %rd16815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11923,%dummy}, %rd16815;
	}
	shf.l.wrap.b32 	%r11924, %r11923, %r11922, 1;
	shf.l.wrap.b32 	%r11925, %r11922, %r11923, 1;
	mov.b64 	%rd16826, {%r11925, %r11924};
	xor.b64  	%rd16827, %rd16826, %rd16807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11926}, %rd16819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11927,%dummy}, %rd16819;
	}
	shf.l.wrap.b32 	%r11928, %r11927, %r11926, 1;
	shf.l.wrap.b32 	%r11929, %r11926, %r11927, 1;
	mov.b64 	%rd16828, {%r11929, %r11928};
	xor.b64  	%rd16829, %rd16828, %rd16811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11930}, %rd16823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11931,%dummy}, %rd16823;
	}
	shf.l.wrap.b32 	%r11932, %r11931, %r11930, 1;
	shf.l.wrap.b32 	%r11933, %r11930, %r11931, 1;
	mov.b64 	%rd16830, {%r11933, %r11932};
	xor.b64  	%rd16831, %rd16830, %rd16815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11934}, %rd16807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11935,%dummy}, %rd16807;
	}
	shf.l.wrap.b32 	%r11936, %r11935, %r11934, 1;
	shf.l.wrap.b32 	%r11937, %r11934, %r11935, 1;
	mov.b64 	%rd16832, {%r11937, %r11936};
	xor.b64  	%rd16833, %rd16819, %rd16832;
	xor.b64  	%rd16834, %rd16825, %rd16803;
	xor.b64  	%rd16835, %rd16827, %rd16733;
	xor.b64  	%rd16836, %rd16829, %rd16736;
	xor.b64  	%rd16837, %rd16831, %rd16739;
	xor.b64  	%rd16838, %rd16833, %rd16742;
	xor.b64  	%rd16839, %rd16825, %rd16745;
	xor.b64  	%rd16840, %rd16827, %rd16748;
	xor.b64  	%rd16841, %rd16829, %rd16751;
	xor.b64  	%rd16842, %rd16831, %rd16754;
	xor.b64  	%rd16843, %rd16833, %rd16757;
	xor.b64  	%rd16844, %rd16825, %rd16760;
	xor.b64  	%rd16845, %rd16827, %rd16763;
	xor.b64  	%rd16846, %rd16829, %rd16766;
	xor.b64  	%rd16847, %rd16831, %rd16769;
	xor.b64  	%rd16848, %rd16833, %rd16772;
	xor.b64  	%rd16849, %rd16825, %rd16775;
	xor.b64  	%rd16850, %rd16827, %rd16778;
	xor.b64  	%rd16851, %rd16829, %rd16781;
	xor.b64  	%rd16852, %rd16831, %rd16784;
	xor.b64  	%rd16853, %rd16833, %rd16787;
	xor.b64  	%rd16854, %rd16825, %rd16790;
	xor.b64  	%rd16855, %rd16827, %rd16793;
	xor.b64  	%rd16856, %rd16829, %rd16796;
	xor.b64  	%rd16857, %rd16831, %rd16799;
	xor.b64  	%rd16858, %rd16833, %rd16802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11938,%dummy}, %rd16840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11939}, %rd16840;
	}
	shf.r.wrap.b32 	%r11940, %r11939, %r11938, 20;
	shf.r.wrap.b32 	%r11941, %r11938, %r11939, 20;
	mov.b64 	%rd16859, {%r11941, %r11940};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11942,%dummy}, %rd16846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11943}, %rd16846;
	}
	shf.r.wrap.b32 	%r11944, %r11943, %r11942, 21;
	shf.r.wrap.b32 	%r11945, %r11942, %r11943, 21;
	mov.b64 	%rd16860, {%r11945, %r11944};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11946}, %rd16852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11947,%dummy}, %rd16852;
	}
	shf.l.wrap.b32 	%r11948, %r11947, %r11946, 21;
	shf.l.wrap.b32 	%r11949, %r11946, %r11947, 21;
	mov.b64 	%rd16861, {%r11949, %r11948};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11950}, %rd16858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11951,%dummy}, %rd16858;
	}
	shf.l.wrap.b32 	%r11952, %r11951, %r11950, 14;
	shf.l.wrap.b32 	%r11953, %r11950, %r11951, 14;
	mov.b64 	%rd16862, {%r11953, %r11952};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11954}, %rd16837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11955,%dummy}, %rd16837;
	}
	shf.l.wrap.b32 	%r11956, %r11955, %r11954, 28;
	shf.l.wrap.b32 	%r11957, %r11954, %r11955, 28;
	mov.b64 	%rd16863, {%r11957, %r11956};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11958}, %rd16843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11959,%dummy}, %rd16843;
	}
	shf.l.wrap.b32 	%r11960, %r11959, %r11958, 20;
	shf.l.wrap.b32 	%r11961, %r11958, %r11959, 20;
	mov.b64 	%rd16864, {%r11961, %r11960};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11962}, %rd16844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11963,%dummy}, %rd16844;
	}
	shf.l.wrap.b32 	%r11964, %r11963, %r11962, 3;
	shf.l.wrap.b32 	%r11965, %r11962, %r11963, 3;
	mov.b64 	%rd16865, {%r11965, %r11964};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11966,%dummy}, %rd16850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11967}, %rd16850;
	}
	shf.r.wrap.b32 	%r11968, %r11967, %r11966, 19;
	shf.r.wrap.b32 	%r11969, %r11966, %r11967, 19;
	mov.b64 	%rd16866, {%r11969, %r11968};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11970,%dummy}, %rd16856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11971}, %rd16856;
	}
	shf.r.wrap.b32 	%r11972, %r11971, %r11970, 3;
	shf.r.wrap.b32 	%r11973, %r11970, %r11971, 3;
	mov.b64 	%rd16867, {%r11973, %r11972};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11974}, %rd16835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11975,%dummy}, %rd16835;
	}
	shf.l.wrap.b32 	%r11976, %r11975, %r11974, 1;
	shf.l.wrap.b32 	%r11977, %r11974, %r11975, 1;
	mov.b64 	%rd16868, {%r11977, %r11976};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11978}, %rd16841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11979,%dummy}, %rd16841;
	}
	shf.l.wrap.b32 	%r11980, %r11979, %r11978, 6;
	shf.l.wrap.b32 	%r11981, %r11978, %r11979, 6;
	mov.b64 	%rd16869, {%r11981, %r11980};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11982}, %rd16847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11983,%dummy}, %rd16847;
	}
	shf.l.wrap.b32 	%r11984, %r11983, %r11982, 25;
	shf.l.wrap.b32 	%r11985, %r11982, %r11983, 25;
	mov.b64 	%rd16870, {%r11985, %r11984};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11986}, %rd16853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11987,%dummy}, %rd16853;
	}
	shf.l.wrap.b32 	%r11988, %r11987, %r11986, 8;
	shf.l.wrap.b32 	%r11989, %r11986, %r11987, 8;
	mov.b64 	%rd16871, {%r11989, %r11988};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11990}, %rd16854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11991,%dummy}, %rd16854;
	}
	shf.l.wrap.b32 	%r11992, %r11991, %r11990, 18;
	shf.l.wrap.b32 	%r11993, %r11990, %r11991, 18;
	mov.b64 	%rd16872, {%r11993, %r11992};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11994}, %rd16838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11995,%dummy}, %rd16838;
	}
	shf.l.wrap.b32 	%r11996, %r11995, %r11994, 27;
	shf.l.wrap.b32 	%r11997, %r11994, %r11995, 27;
	mov.b64 	%rd16873, {%r11997, %r11996};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11998,%dummy}, %rd16839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11999}, %rd16839;
	}
	shf.r.wrap.b32 	%r12000, %r11999, %r11998, 28;
	shf.r.wrap.b32 	%r12001, %r11998, %r11999, 28;
	mov.b64 	%rd16874, {%r12001, %r12000};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12002}, %rd16845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12003,%dummy}, %rd16845;
	}
	shf.l.wrap.b32 	%r12004, %r12003, %r12002, 10;
	shf.l.wrap.b32 	%r12005, %r12002, %r12003, 10;
	mov.b64 	%rd16875, {%r12005, %r12004};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12006}, %rd16851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12007,%dummy}, %rd16851;
	}
	shf.l.wrap.b32 	%r12008, %r12007, %r12006, 15;
	shf.l.wrap.b32 	%r12009, %r12006, %r12007, 15;
	mov.b64 	%rd16876, {%r12009, %r12008};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12010,%dummy}, %rd16857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12011}, %rd16857;
	}
	shf.r.wrap.b32 	%r12012, %r12011, %r12010, 8;
	shf.r.wrap.b32 	%r12013, %r12010, %r12011, 8;
	mov.b64 	%rd16877, {%r12013, %r12012};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12014,%dummy}, %rd16836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12015}, %rd16836;
	}
	shf.r.wrap.b32 	%r12016, %r12015, %r12014, 2;
	shf.r.wrap.b32 	%r12017, %r12014, %r12015, 2;
	mov.b64 	%rd16878, {%r12017, %r12016};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12018,%dummy}, %rd16842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12019}, %rd16842;
	}
	shf.r.wrap.b32 	%r12020, %r12019, %r12018, 9;
	shf.r.wrap.b32 	%r12021, %r12018, %r12019, 9;
	mov.b64 	%rd16879, {%r12021, %r12020};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12022,%dummy}, %rd16848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12023}, %rd16848;
	}
	shf.r.wrap.b32 	%r12024, %r12023, %r12022, 25;
	shf.r.wrap.b32 	%r12025, %r12022, %r12023, 25;
	mov.b64 	%rd16880, {%r12025, %r12024};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12026,%dummy}, %rd16849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12027}, %rd16849;
	}
	shf.r.wrap.b32 	%r12028, %r12027, %r12026, 23;
	shf.r.wrap.b32 	%r12029, %r12026, %r12027, 23;
	mov.b64 	%rd16881, {%r12029, %r12028};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12030}, %rd16855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12031,%dummy}, %rd16855;
	}
	shf.l.wrap.b32 	%r12032, %r12031, %r12030, 2;
	shf.l.wrap.b32 	%r12033, %r12030, %r12031, 2;
	mov.b64 	%rd16882, {%r12033, %r12032};
	not.b64 	%rd16883, %rd16859;
	and.b64  	%rd16884, %rd16860, %rd16883;
	xor.b64  	%rd16885, %rd16884, %rd16834;
	not.b64 	%rd16886, %rd16860;
	and.b64  	%rd16887, %rd16861, %rd16886;
	xor.b64  	%rd16888, %rd16887, %rd16859;
	not.b64 	%rd16889, %rd16861;
	and.b64  	%rd16890, %rd16862, %rd16889;
	xor.b64  	%rd16891, %rd16890, %rd16860;
	not.b64 	%rd16892, %rd16862;
	and.b64  	%rd16893, %rd16834, %rd16892;
	xor.b64  	%rd16894, %rd16893, %rd16861;
	not.b64 	%rd16895, %rd16834;
	and.b64  	%rd16896, %rd16859, %rd16895;
	xor.b64  	%rd16897, %rd16896, %rd16862;
	not.b64 	%rd16898, %rd16864;
	and.b64  	%rd16899, %rd16865, %rd16898;
	xor.b64  	%rd16900, %rd16899, %rd16863;
	not.b64 	%rd16901, %rd16865;
	and.b64  	%rd16902, %rd16866, %rd16901;
	xor.b64  	%rd16903, %rd16902, %rd16864;
	not.b64 	%rd16904, %rd16866;
	and.b64  	%rd16905, %rd16867, %rd16904;
	xor.b64  	%rd16906, %rd16905, %rd16865;
	not.b64 	%rd16907, %rd16867;
	and.b64  	%rd16908, %rd16863, %rd16907;
	xor.b64  	%rd16909, %rd16908, %rd16866;
	not.b64 	%rd16910, %rd16863;
	and.b64  	%rd16911, %rd16864, %rd16910;
	xor.b64  	%rd16912, %rd16911, %rd16867;
	not.b64 	%rd16913, %rd16869;
	and.b64  	%rd16914, %rd16870, %rd16913;
	xor.b64  	%rd16915, %rd16914, %rd16868;
	not.b64 	%rd16916, %rd16870;
	and.b64  	%rd16917, %rd16871, %rd16916;
	xor.b64  	%rd16918, %rd16917, %rd16869;
	not.b64 	%rd16919, %rd16871;
	and.b64  	%rd16920, %rd16872, %rd16919;
	xor.b64  	%rd16921, %rd16920, %rd16870;
	not.b64 	%rd16922, %rd16872;
	and.b64  	%rd16923, %rd16868, %rd16922;
	xor.b64  	%rd16924, %rd16923, %rd16871;
	not.b64 	%rd16925, %rd16868;
	and.b64  	%rd16926, %rd16869, %rd16925;
	xor.b64  	%rd16927, %rd16926, %rd16872;
	not.b64 	%rd16928, %rd16874;
	and.b64  	%rd16929, %rd16875, %rd16928;
	xor.b64  	%rd16930, %rd16929, %rd16873;
	not.b64 	%rd16931, %rd16875;
	and.b64  	%rd16932, %rd16876, %rd16931;
	xor.b64  	%rd16933, %rd16932, %rd16874;
	not.b64 	%rd16934, %rd16876;
	and.b64  	%rd16935, %rd16877, %rd16934;
	xor.b64  	%rd16936, %rd16935, %rd16875;
	not.b64 	%rd16937, %rd16877;
	and.b64  	%rd16938, %rd16873, %rd16937;
	xor.b64  	%rd16939, %rd16938, %rd16876;
	not.b64 	%rd16940, %rd16873;
	and.b64  	%rd16941, %rd16874, %rd16940;
	xor.b64  	%rd16942, %rd16941, %rd16877;
	not.b64 	%rd16943, %rd16879;
	and.b64  	%rd16944, %rd16880, %rd16943;
	xor.b64  	%rd16945, %rd16944, %rd16878;
	not.b64 	%rd16946, %rd16880;
	and.b64  	%rd16947, %rd16881, %rd16946;
	xor.b64  	%rd16948, %rd16947, %rd16879;
	not.b64 	%rd16949, %rd16881;
	and.b64  	%rd16950, %rd16882, %rd16949;
	xor.b64  	%rd16951, %rd16950, %rd16880;
	not.b64 	%rd16952, %rd16882;
	and.b64  	%rd16953, %rd16878, %rd16952;
	xor.b64  	%rd16954, %rd16953, %rd16881;
	not.b64 	%rd16955, %rd16878;
	and.b64  	%rd16956, %rd16879, %rd16955;
	xor.b64  	%rd16957, %rd16956, %rd16882;
	xor.b64  	%rd16958, %rd16885, %rd19814;
	xor.b64  	%rd16959, %rd16900, %rd16958;
	xor.b64  	%rd16960, %rd16959, %rd16915;
	xor.b64  	%rd16961, %rd16960, %rd16930;
	xor.b64  	%rd16962, %rd16961, %rd16945;
	xor.b64  	%rd16963, %rd16903, %rd16888;
	xor.b64  	%rd16964, %rd16963, %rd16918;
	xor.b64  	%rd16965, %rd16964, %rd16933;
	xor.b64  	%rd16966, %rd16965, %rd16948;
	xor.b64  	%rd16967, %rd16906, %rd16891;
	xor.b64  	%rd16968, %rd16967, %rd16921;
	xor.b64  	%rd16969, %rd16968, %rd16936;
	xor.b64  	%rd16970, %rd16969, %rd16951;
	xor.b64  	%rd16971, %rd16909, %rd16894;
	xor.b64  	%rd16972, %rd16971, %rd16924;
	xor.b64  	%rd16973, %rd16972, %rd16939;
	xor.b64  	%rd16974, %rd16973, %rd16954;
	xor.b64  	%rd16975, %rd16912, %rd16897;
	xor.b64  	%rd16976, %rd16975, %rd16927;
	xor.b64  	%rd16977, %rd16976, %rd16942;
	xor.b64  	%rd16978, %rd16977, %rd16957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12034}, %rd16966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12035,%dummy}, %rd16966;
	}
	shf.l.wrap.b32 	%r12036, %r12035, %r12034, 1;
	shf.l.wrap.b32 	%r12037, %r12034, %r12035, 1;
	mov.b64 	%rd16979, {%r12037, %r12036};
	xor.b64  	%rd16980, %rd16978, %rd16979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12038}, %rd16970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12039,%dummy}, %rd16970;
	}
	shf.l.wrap.b32 	%r12040, %r12039, %r12038, 1;
	shf.l.wrap.b32 	%r12041, %r12038, %r12039, 1;
	mov.b64 	%rd16981, {%r12041, %r12040};
	xor.b64  	%rd16982, %rd16981, %rd16962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12042}, %rd16974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12043,%dummy}, %rd16974;
	}
	shf.l.wrap.b32 	%r12044, %r12043, %r12042, 1;
	shf.l.wrap.b32 	%r12045, %r12042, %r12043, 1;
	mov.b64 	%rd16983, {%r12045, %r12044};
	xor.b64  	%rd16984, %rd16983, %rd16966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12046}, %rd16978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12047,%dummy}, %rd16978;
	}
	shf.l.wrap.b32 	%r12048, %r12047, %r12046, 1;
	shf.l.wrap.b32 	%r12049, %r12046, %r12047, 1;
	mov.b64 	%rd16985, {%r12049, %r12048};
	xor.b64  	%rd16986, %rd16985, %rd16970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12050}, %rd16962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12051,%dummy}, %rd16962;
	}
	shf.l.wrap.b32 	%r12052, %r12051, %r12050, 1;
	shf.l.wrap.b32 	%r12053, %r12050, %r12051, 1;
	mov.b64 	%rd16987, {%r12053, %r12052};
	xor.b64  	%rd16988, %rd16974, %rd16987;
	xor.b64  	%rd16989, %rd16980, %rd16958;
	xor.b64  	%rd16990, %rd16982, %rd16888;
	xor.b64  	%rd16991, %rd16984, %rd16891;
	xor.b64  	%rd16992, %rd16986, %rd16894;
	xor.b64  	%rd16993, %rd16988, %rd16897;
	xor.b64  	%rd16994, %rd16980, %rd16900;
	xor.b64  	%rd16995, %rd16982, %rd16903;
	xor.b64  	%rd16996, %rd16984, %rd16906;
	xor.b64  	%rd16997, %rd16986, %rd16909;
	xor.b64  	%rd16998, %rd16988, %rd16912;
	xor.b64  	%rd16999, %rd16980, %rd16915;
	xor.b64  	%rd17000, %rd16982, %rd16918;
	xor.b64  	%rd17001, %rd16984, %rd16921;
	xor.b64  	%rd17002, %rd16986, %rd16924;
	xor.b64  	%rd17003, %rd16988, %rd16927;
	xor.b64  	%rd17004, %rd16980, %rd16930;
	xor.b64  	%rd17005, %rd16982, %rd16933;
	xor.b64  	%rd17006, %rd16984, %rd16936;
	xor.b64  	%rd17007, %rd16986, %rd16939;
	xor.b64  	%rd17008, %rd16988, %rd16942;
	xor.b64  	%rd17009, %rd16980, %rd16945;
	xor.b64  	%rd17010, %rd16982, %rd16948;
	xor.b64  	%rd17011, %rd16984, %rd16951;
	xor.b64  	%rd17012, %rd16986, %rd16954;
	xor.b64  	%rd17013, %rd16988, %rd16957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12054,%dummy}, %rd16995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12055}, %rd16995;
	}
	shf.r.wrap.b32 	%r12056, %r12055, %r12054, 20;
	shf.r.wrap.b32 	%r12057, %r12054, %r12055, 20;
	mov.b64 	%rd17014, {%r12057, %r12056};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12058,%dummy}, %rd17001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12059}, %rd17001;
	}
	shf.r.wrap.b32 	%r12060, %r12059, %r12058, 21;
	shf.r.wrap.b32 	%r12061, %r12058, %r12059, 21;
	mov.b64 	%rd17015, {%r12061, %r12060};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12062}, %rd17007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12063,%dummy}, %rd17007;
	}
	shf.l.wrap.b32 	%r12064, %r12063, %r12062, 21;
	shf.l.wrap.b32 	%r12065, %r12062, %r12063, 21;
	mov.b64 	%rd17016, {%r12065, %r12064};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12066}, %rd17013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12067,%dummy}, %rd17013;
	}
	shf.l.wrap.b32 	%r12068, %r12067, %r12066, 14;
	shf.l.wrap.b32 	%r12069, %r12066, %r12067, 14;
	mov.b64 	%rd17017, {%r12069, %r12068};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12070}, %rd16992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12071,%dummy}, %rd16992;
	}
	shf.l.wrap.b32 	%r12072, %r12071, %r12070, 28;
	shf.l.wrap.b32 	%r12073, %r12070, %r12071, 28;
	mov.b64 	%rd17018, {%r12073, %r12072};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12074}, %rd16998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12075,%dummy}, %rd16998;
	}
	shf.l.wrap.b32 	%r12076, %r12075, %r12074, 20;
	shf.l.wrap.b32 	%r12077, %r12074, %r12075, 20;
	mov.b64 	%rd17019, {%r12077, %r12076};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12078}, %rd16999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12079,%dummy}, %rd16999;
	}
	shf.l.wrap.b32 	%r12080, %r12079, %r12078, 3;
	shf.l.wrap.b32 	%r12081, %r12078, %r12079, 3;
	mov.b64 	%rd17020, {%r12081, %r12080};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12082,%dummy}, %rd17005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12083}, %rd17005;
	}
	shf.r.wrap.b32 	%r12084, %r12083, %r12082, 19;
	shf.r.wrap.b32 	%r12085, %r12082, %r12083, 19;
	mov.b64 	%rd17021, {%r12085, %r12084};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12086,%dummy}, %rd17011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12087}, %rd17011;
	}
	shf.r.wrap.b32 	%r12088, %r12087, %r12086, 3;
	shf.r.wrap.b32 	%r12089, %r12086, %r12087, 3;
	mov.b64 	%rd17022, {%r12089, %r12088};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12090}, %rd16990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12091,%dummy}, %rd16990;
	}
	shf.l.wrap.b32 	%r12092, %r12091, %r12090, 1;
	shf.l.wrap.b32 	%r12093, %r12090, %r12091, 1;
	mov.b64 	%rd17023, {%r12093, %r12092};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12094}, %rd16996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12095,%dummy}, %rd16996;
	}
	shf.l.wrap.b32 	%r12096, %r12095, %r12094, 6;
	shf.l.wrap.b32 	%r12097, %r12094, %r12095, 6;
	mov.b64 	%rd17024, {%r12097, %r12096};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12098}, %rd17002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12099,%dummy}, %rd17002;
	}
	shf.l.wrap.b32 	%r12100, %r12099, %r12098, 25;
	shf.l.wrap.b32 	%r12101, %r12098, %r12099, 25;
	mov.b64 	%rd17025, {%r12101, %r12100};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12102}, %rd17008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12103,%dummy}, %rd17008;
	}
	shf.l.wrap.b32 	%r12104, %r12103, %r12102, 8;
	shf.l.wrap.b32 	%r12105, %r12102, %r12103, 8;
	mov.b64 	%rd17026, {%r12105, %r12104};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12106}, %rd17009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12107,%dummy}, %rd17009;
	}
	shf.l.wrap.b32 	%r12108, %r12107, %r12106, 18;
	shf.l.wrap.b32 	%r12109, %r12106, %r12107, 18;
	mov.b64 	%rd17027, {%r12109, %r12108};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12110}, %rd16993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12111,%dummy}, %rd16993;
	}
	shf.l.wrap.b32 	%r12112, %r12111, %r12110, 27;
	shf.l.wrap.b32 	%r12113, %r12110, %r12111, 27;
	mov.b64 	%rd17028, {%r12113, %r12112};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12114,%dummy}, %rd16994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12115}, %rd16994;
	}
	shf.r.wrap.b32 	%r12116, %r12115, %r12114, 28;
	shf.r.wrap.b32 	%r12117, %r12114, %r12115, 28;
	mov.b64 	%rd17029, {%r12117, %r12116};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12118}, %rd17000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12119,%dummy}, %rd17000;
	}
	shf.l.wrap.b32 	%r12120, %r12119, %r12118, 10;
	shf.l.wrap.b32 	%r12121, %r12118, %r12119, 10;
	mov.b64 	%rd17030, {%r12121, %r12120};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12122}, %rd17006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12123,%dummy}, %rd17006;
	}
	shf.l.wrap.b32 	%r12124, %r12123, %r12122, 15;
	shf.l.wrap.b32 	%r12125, %r12122, %r12123, 15;
	mov.b64 	%rd17031, {%r12125, %r12124};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12126,%dummy}, %rd17012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12127}, %rd17012;
	}
	shf.r.wrap.b32 	%r12128, %r12127, %r12126, 8;
	shf.r.wrap.b32 	%r12129, %r12126, %r12127, 8;
	mov.b64 	%rd17032, {%r12129, %r12128};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12130,%dummy}, %rd16991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12131}, %rd16991;
	}
	shf.r.wrap.b32 	%r12132, %r12131, %r12130, 2;
	shf.r.wrap.b32 	%r12133, %r12130, %r12131, 2;
	mov.b64 	%rd17033, {%r12133, %r12132};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12134,%dummy}, %rd16997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12135}, %rd16997;
	}
	shf.r.wrap.b32 	%r12136, %r12135, %r12134, 9;
	shf.r.wrap.b32 	%r12137, %r12134, %r12135, 9;
	mov.b64 	%rd17034, {%r12137, %r12136};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12138,%dummy}, %rd17003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12139}, %rd17003;
	}
	shf.r.wrap.b32 	%r12140, %r12139, %r12138, 25;
	shf.r.wrap.b32 	%r12141, %r12138, %r12139, 25;
	mov.b64 	%rd17035, {%r12141, %r12140};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12142,%dummy}, %rd17004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12143}, %rd17004;
	}
	shf.r.wrap.b32 	%r12144, %r12143, %r12142, 23;
	shf.r.wrap.b32 	%r12145, %r12142, %r12143, 23;
	mov.b64 	%rd17036, {%r12145, %r12144};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12146}, %rd17010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12147,%dummy}, %rd17010;
	}
	shf.l.wrap.b32 	%r12148, %r12147, %r12146, 2;
	shf.l.wrap.b32 	%r12149, %r12146, %r12147, 2;
	mov.b64 	%rd17037, {%r12149, %r12148};
	not.b64 	%rd17038, %rd17014;
	and.b64  	%rd17039, %rd17015, %rd17038;
	xor.b64  	%rd17040, %rd17039, %rd16989;
	not.b64 	%rd17041, %rd17015;
	and.b64  	%rd17042, %rd17016, %rd17041;
	xor.b64  	%rd17043, %rd17042, %rd17014;
	not.b64 	%rd17044, %rd17016;
	and.b64  	%rd17045, %rd17017, %rd17044;
	xor.b64  	%rd17046, %rd17045, %rd17015;
	not.b64 	%rd17047, %rd17017;
	and.b64  	%rd17048, %rd16989, %rd17047;
	xor.b64  	%rd17049, %rd17048, %rd17016;
	not.b64 	%rd17050, %rd16989;
	and.b64  	%rd17051, %rd17014, %rd17050;
	xor.b64  	%rd17052, %rd17051, %rd17017;
	not.b64 	%rd17053, %rd17019;
	and.b64  	%rd17054, %rd17020, %rd17053;
	xor.b64  	%rd17055, %rd17054, %rd17018;
	not.b64 	%rd17056, %rd17020;
	and.b64  	%rd17057, %rd17021, %rd17056;
	xor.b64  	%rd17058, %rd17057, %rd17019;
	not.b64 	%rd17059, %rd17021;
	and.b64  	%rd17060, %rd17022, %rd17059;
	xor.b64  	%rd17061, %rd17060, %rd17020;
	not.b64 	%rd17062, %rd17022;
	and.b64  	%rd17063, %rd17018, %rd17062;
	xor.b64  	%rd17064, %rd17063, %rd17021;
	not.b64 	%rd17065, %rd17018;
	and.b64  	%rd17066, %rd17019, %rd17065;
	xor.b64  	%rd17067, %rd17066, %rd17022;
	not.b64 	%rd17068, %rd17024;
	and.b64  	%rd17069, %rd17025, %rd17068;
	xor.b64  	%rd17070, %rd17069, %rd17023;
	not.b64 	%rd17071, %rd17025;
	and.b64  	%rd17072, %rd17026, %rd17071;
	xor.b64  	%rd17073, %rd17072, %rd17024;
	not.b64 	%rd17074, %rd17026;
	and.b64  	%rd17075, %rd17027, %rd17074;
	xor.b64  	%rd17076, %rd17075, %rd17025;
	not.b64 	%rd17077, %rd17027;
	and.b64  	%rd17078, %rd17023, %rd17077;
	xor.b64  	%rd17079, %rd17078, %rd17026;
	not.b64 	%rd17080, %rd17023;
	and.b64  	%rd17081, %rd17024, %rd17080;
	xor.b64  	%rd17082, %rd17081, %rd17027;
	not.b64 	%rd17083, %rd17029;
	and.b64  	%rd17084, %rd17030, %rd17083;
	xor.b64  	%rd17085, %rd17084, %rd17028;
	not.b64 	%rd17086, %rd17030;
	and.b64  	%rd17087, %rd17031, %rd17086;
	xor.b64  	%rd17088, %rd17087, %rd17029;
	not.b64 	%rd17089, %rd17031;
	and.b64  	%rd17090, %rd17032, %rd17089;
	xor.b64  	%rd17091, %rd17090, %rd17030;
	not.b64 	%rd17092, %rd17032;
	and.b64  	%rd17093, %rd17028, %rd17092;
	xor.b64  	%rd17094, %rd17093, %rd17031;
	not.b64 	%rd17095, %rd17028;
	and.b64  	%rd17096, %rd17029, %rd17095;
	xor.b64  	%rd17097, %rd17096, %rd17032;
	not.b64 	%rd17098, %rd17034;
	and.b64  	%rd17099, %rd17035, %rd17098;
	xor.b64  	%rd17100, %rd17099, %rd17033;
	not.b64 	%rd17101, %rd17035;
	and.b64  	%rd17102, %rd17036, %rd17101;
	xor.b64  	%rd17103, %rd17102, %rd17034;
	not.b64 	%rd17104, %rd17036;
	and.b64  	%rd17105, %rd17037, %rd17104;
	xor.b64  	%rd17106, %rd17105, %rd17035;
	not.b64 	%rd17107, %rd17037;
	and.b64  	%rd17108, %rd17033, %rd17107;
	xor.b64  	%rd17109, %rd17108, %rd17036;
	not.b64 	%rd17110, %rd17033;
	and.b64  	%rd17111, %rd17034, %rd17110;
	xor.b64  	%rd17112, %rd17111, %rd17037;
	xor.b64  	%rd17113, %rd17040, %rd19815;
	xor.b64  	%rd17114, %rd17055, %rd17113;
	xor.b64  	%rd17115, %rd17114, %rd17070;
	xor.b64  	%rd17116, %rd17115, %rd17085;
	xor.b64  	%rd17117, %rd17116, %rd17100;
	xor.b64  	%rd17118, %rd17058, %rd17043;
	xor.b64  	%rd17119, %rd17118, %rd17073;
	xor.b64  	%rd17120, %rd17119, %rd17088;
	xor.b64  	%rd17121, %rd17120, %rd17103;
	xor.b64  	%rd17122, %rd17061, %rd17046;
	xor.b64  	%rd17123, %rd17122, %rd17076;
	xor.b64  	%rd17124, %rd17123, %rd17091;
	xor.b64  	%rd17125, %rd17124, %rd17106;
	xor.b64  	%rd17126, %rd17064, %rd17049;
	xor.b64  	%rd17127, %rd17126, %rd17079;
	xor.b64  	%rd17128, %rd17127, %rd17094;
	xor.b64  	%rd17129, %rd17128, %rd17109;
	xor.b64  	%rd17130, %rd17067, %rd17052;
	xor.b64  	%rd17131, %rd17130, %rd17082;
	xor.b64  	%rd17132, %rd17131, %rd17097;
	xor.b64  	%rd17133, %rd17132, %rd17112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12150}, %rd17121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12151,%dummy}, %rd17121;
	}
	shf.l.wrap.b32 	%r12152, %r12151, %r12150, 1;
	shf.l.wrap.b32 	%r12153, %r12150, %r12151, 1;
	mov.b64 	%rd17134, {%r12153, %r12152};
	xor.b64  	%rd17135, %rd17133, %rd17134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12154}, %rd17125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12155,%dummy}, %rd17125;
	}
	shf.l.wrap.b32 	%r12156, %r12155, %r12154, 1;
	shf.l.wrap.b32 	%r12157, %r12154, %r12155, 1;
	mov.b64 	%rd17136, {%r12157, %r12156};
	xor.b64  	%rd17137, %rd17136, %rd17117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12158}, %rd17129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12159,%dummy}, %rd17129;
	}
	shf.l.wrap.b32 	%r12160, %r12159, %r12158, 1;
	shf.l.wrap.b32 	%r12161, %r12158, %r12159, 1;
	mov.b64 	%rd17138, {%r12161, %r12160};
	xor.b64  	%rd17139, %rd17138, %rd17121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12162}, %rd17133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12163,%dummy}, %rd17133;
	}
	shf.l.wrap.b32 	%r12164, %r12163, %r12162, 1;
	shf.l.wrap.b32 	%r12165, %r12162, %r12163, 1;
	mov.b64 	%rd17140, {%r12165, %r12164};
	xor.b64  	%rd17141, %rd17140, %rd17125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12166}, %rd17117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12167,%dummy}, %rd17117;
	}
	shf.l.wrap.b32 	%r12168, %r12167, %r12166, 1;
	shf.l.wrap.b32 	%r12169, %r12166, %r12167, 1;
	mov.b64 	%rd17142, {%r12169, %r12168};
	xor.b64  	%rd17143, %rd17129, %rd17142;
	xor.b64  	%rd17144, %rd17135, %rd17113;
	xor.b64  	%rd17145, %rd17137, %rd17043;
	xor.b64  	%rd17146, %rd17139, %rd17046;
	xor.b64  	%rd17147, %rd17141, %rd17049;
	xor.b64  	%rd17148, %rd17143, %rd17052;
	xor.b64  	%rd17149, %rd17135, %rd17055;
	xor.b64  	%rd17150, %rd17137, %rd17058;
	xor.b64  	%rd17151, %rd17139, %rd17061;
	xor.b64  	%rd17152, %rd17141, %rd17064;
	xor.b64  	%rd17153, %rd17143, %rd17067;
	xor.b64  	%rd17154, %rd17135, %rd17070;
	xor.b64  	%rd17155, %rd17137, %rd17073;
	xor.b64  	%rd17156, %rd17139, %rd17076;
	xor.b64  	%rd17157, %rd17141, %rd17079;
	xor.b64  	%rd17158, %rd17143, %rd17082;
	xor.b64  	%rd17159, %rd17135, %rd17085;
	xor.b64  	%rd17160, %rd17137, %rd17088;
	xor.b64  	%rd17161, %rd17139, %rd17091;
	xor.b64  	%rd17162, %rd17141, %rd17094;
	xor.b64  	%rd17163, %rd17143, %rd17097;
	xor.b64  	%rd17164, %rd17135, %rd17100;
	xor.b64  	%rd17165, %rd17137, %rd17103;
	xor.b64  	%rd17166, %rd17139, %rd17106;
	xor.b64  	%rd17167, %rd17141, %rd17109;
	xor.b64  	%rd17168, %rd17143, %rd17112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12170,%dummy}, %rd17150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12171}, %rd17150;
	}
	shf.r.wrap.b32 	%r12172, %r12171, %r12170, 20;
	shf.r.wrap.b32 	%r12173, %r12170, %r12171, 20;
	mov.b64 	%rd17169, {%r12173, %r12172};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12174,%dummy}, %rd17156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12175}, %rd17156;
	}
	shf.r.wrap.b32 	%r12176, %r12175, %r12174, 21;
	shf.r.wrap.b32 	%r12177, %r12174, %r12175, 21;
	mov.b64 	%rd17170, {%r12177, %r12176};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12178}, %rd17162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12179,%dummy}, %rd17162;
	}
	shf.l.wrap.b32 	%r12180, %r12179, %r12178, 21;
	shf.l.wrap.b32 	%r12181, %r12178, %r12179, 21;
	mov.b64 	%rd17171, {%r12181, %r12180};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12182}, %rd17168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12183,%dummy}, %rd17168;
	}
	shf.l.wrap.b32 	%r12184, %r12183, %r12182, 14;
	shf.l.wrap.b32 	%r12185, %r12182, %r12183, 14;
	mov.b64 	%rd17172, {%r12185, %r12184};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12186}, %rd17147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12187,%dummy}, %rd17147;
	}
	shf.l.wrap.b32 	%r12188, %r12187, %r12186, 28;
	shf.l.wrap.b32 	%r12189, %r12186, %r12187, 28;
	mov.b64 	%rd17173, {%r12189, %r12188};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12190}, %rd17153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12191,%dummy}, %rd17153;
	}
	shf.l.wrap.b32 	%r12192, %r12191, %r12190, 20;
	shf.l.wrap.b32 	%r12193, %r12190, %r12191, 20;
	mov.b64 	%rd17174, {%r12193, %r12192};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12194}, %rd17154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12195,%dummy}, %rd17154;
	}
	shf.l.wrap.b32 	%r12196, %r12195, %r12194, 3;
	shf.l.wrap.b32 	%r12197, %r12194, %r12195, 3;
	mov.b64 	%rd17175, {%r12197, %r12196};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12198,%dummy}, %rd17160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12199}, %rd17160;
	}
	shf.r.wrap.b32 	%r12200, %r12199, %r12198, 19;
	shf.r.wrap.b32 	%r12201, %r12198, %r12199, 19;
	mov.b64 	%rd17176, {%r12201, %r12200};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12202,%dummy}, %rd17166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12203}, %rd17166;
	}
	shf.r.wrap.b32 	%r12204, %r12203, %r12202, 3;
	shf.r.wrap.b32 	%r12205, %r12202, %r12203, 3;
	mov.b64 	%rd17177, {%r12205, %r12204};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12206}, %rd17145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12207,%dummy}, %rd17145;
	}
	shf.l.wrap.b32 	%r12208, %r12207, %r12206, 1;
	shf.l.wrap.b32 	%r12209, %r12206, %r12207, 1;
	mov.b64 	%rd17178, {%r12209, %r12208};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12210}, %rd17151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12211,%dummy}, %rd17151;
	}
	shf.l.wrap.b32 	%r12212, %r12211, %r12210, 6;
	shf.l.wrap.b32 	%r12213, %r12210, %r12211, 6;
	mov.b64 	%rd17179, {%r12213, %r12212};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12214}, %rd17157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12215,%dummy}, %rd17157;
	}
	shf.l.wrap.b32 	%r12216, %r12215, %r12214, 25;
	shf.l.wrap.b32 	%r12217, %r12214, %r12215, 25;
	mov.b64 	%rd17180, {%r12217, %r12216};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12218}, %rd17163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12219,%dummy}, %rd17163;
	}
	shf.l.wrap.b32 	%r12220, %r12219, %r12218, 8;
	shf.l.wrap.b32 	%r12221, %r12218, %r12219, 8;
	mov.b64 	%rd17181, {%r12221, %r12220};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12222}, %rd17164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12223,%dummy}, %rd17164;
	}
	shf.l.wrap.b32 	%r12224, %r12223, %r12222, 18;
	shf.l.wrap.b32 	%r12225, %r12222, %r12223, 18;
	mov.b64 	%rd17182, {%r12225, %r12224};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12226}, %rd17148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12227,%dummy}, %rd17148;
	}
	shf.l.wrap.b32 	%r12228, %r12227, %r12226, 27;
	shf.l.wrap.b32 	%r12229, %r12226, %r12227, 27;
	mov.b64 	%rd17183, {%r12229, %r12228};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12230,%dummy}, %rd17149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12231}, %rd17149;
	}
	shf.r.wrap.b32 	%r12232, %r12231, %r12230, 28;
	shf.r.wrap.b32 	%r12233, %r12230, %r12231, 28;
	mov.b64 	%rd17184, {%r12233, %r12232};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12234}, %rd17155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12235,%dummy}, %rd17155;
	}
	shf.l.wrap.b32 	%r12236, %r12235, %r12234, 10;
	shf.l.wrap.b32 	%r12237, %r12234, %r12235, 10;
	mov.b64 	%rd17185, {%r12237, %r12236};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12238}, %rd17161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12239,%dummy}, %rd17161;
	}
	shf.l.wrap.b32 	%r12240, %r12239, %r12238, 15;
	shf.l.wrap.b32 	%r12241, %r12238, %r12239, 15;
	mov.b64 	%rd17186, {%r12241, %r12240};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12242,%dummy}, %rd17167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12243}, %rd17167;
	}
	shf.r.wrap.b32 	%r12244, %r12243, %r12242, 8;
	shf.r.wrap.b32 	%r12245, %r12242, %r12243, 8;
	mov.b64 	%rd17187, {%r12245, %r12244};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12246,%dummy}, %rd17146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12247}, %rd17146;
	}
	shf.r.wrap.b32 	%r12248, %r12247, %r12246, 2;
	shf.r.wrap.b32 	%r12249, %r12246, %r12247, 2;
	mov.b64 	%rd17188, {%r12249, %r12248};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12250,%dummy}, %rd17152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12251}, %rd17152;
	}
	shf.r.wrap.b32 	%r12252, %r12251, %r12250, 9;
	shf.r.wrap.b32 	%r12253, %r12250, %r12251, 9;
	mov.b64 	%rd17189, {%r12253, %r12252};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12254,%dummy}, %rd17158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12255}, %rd17158;
	}
	shf.r.wrap.b32 	%r12256, %r12255, %r12254, 25;
	shf.r.wrap.b32 	%r12257, %r12254, %r12255, 25;
	mov.b64 	%rd17190, {%r12257, %r12256};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12258,%dummy}, %rd17159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12259}, %rd17159;
	}
	shf.r.wrap.b32 	%r12260, %r12259, %r12258, 23;
	shf.r.wrap.b32 	%r12261, %r12258, %r12259, 23;
	mov.b64 	%rd17191, {%r12261, %r12260};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12262}, %rd17165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12263,%dummy}, %rd17165;
	}
	shf.l.wrap.b32 	%r12264, %r12263, %r12262, 2;
	shf.l.wrap.b32 	%r12265, %r12262, %r12263, 2;
	mov.b64 	%rd17192, {%r12265, %r12264};
	not.b64 	%rd17193, %rd17169;
	and.b64  	%rd17194, %rd17170, %rd17193;
	xor.b64  	%rd17195, %rd17194, %rd17144;
	not.b64 	%rd17196, %rd17170;
	and.b64  	%rd17197, %rd17171, %rd17196;
	xor.b64  	%rd17198, %rd17197, %rd17169;
	not.b64 	%rd17199, %rd17171;
	and.b64  	%rd17200, %rd17172, %rd17199;
	xor.b64  	%rd17201, %rd17200, %rd17170;
	not.b64 	%rd17202, %rd17172;
	and.b64  	%rd17203, %rd17144, %rd17202;
	xor.b64  	%rd17204, %rd17203, %rd17171;
	not.b64 	%rd17205, %rd17144;
	and.b64  	%rd17206, %rd17169, %rd17205;
	xor.b64  	%rd17207, %rd17206, %rd17172;
	not.b64 	%rd17208, %rd17174;
	and.b64  	%rd17209, %rd17175, %rd17208;
	xor.b64  	%rd17210, %rd17209, %rd17173;
	not.b64 	%rd17211, %rd17175;
	and.b64  	%rd17212, %rd17176, %rd17211;
	xor.b64  	%rd17213, %rd17212, %rd17174;
	not.b64 	%rd17214, %rd17176;
	and.b64  	%rd17215, %rd17177, %rd17214;
	xor.b64  	%rd17216, %rd17215, %rd17175;
	not.b64 	%rd17217, %rd17177;
	and.b64  	%rd17218, %rd17173, %rd17217;
	xor.b64  	%rd17219, %rd17218, %rd17176;
	not.b64 	%rd17220, %rd17173;
	and.b64  	%rd17221, %rd17174, %rd17220;
	xor.b64  	%rd17222, %rd17221, %rd17177;
	not.b64 	%rd17223, %rd17179;
	and.b64  	%rd17224, %rd17180, %rd17223;
	xor.b64  	%rd17225, %rd17224, %rd17178;
	not.b64 	%rd17226, %rd17180;
	and.b64  	%rd17227, %rd17181, %rd17226;
	xor.b64  	%rd17228, %rd17227, %rd17179;
	not.b64 	%rd17229, %rd17181;
	and.b64  	%rd17230, %rd17182, %rd17229;
	xor.b64  	%rd17231, %rd17230, %rd17180;
	not.b64 	%rd17232, %rd17182;
	and.b64  	%rd17233, %rd17178, %rd17232;
	xor.b64  	%rd17234, %rd17233, %rd17181;
	not.b64 	%rd17235, %rd17178;
	and.b64  	%rd17236, %rd17179, %rd17235;
	xor.b64  	%rd17237, %rd17236, %rd17182;
	not.b64 	%rd17238, %rd17184;
	and.b64  	%rd17239, %rd17185, %rd17238;
	xor.b64  	%rd17240, %rd17239, %rd17183;
	not.b64 	%rd17241, %rd17185;
	and.b64  	%rd17242, %rd17186, %rd17241;
	xor.b64  	%rd17243, %rd17242, %rd17184;
	not.b64 	%rd17244, %rd17186;
	and.b64  	%rd17245, %rd17187, %rd17244;
	xor.b64  	%rd17246, %rd17245, %rd17185;
	not.b64 	%rd17247, %rd17187;
	and.b64  	%rd17248, %rd17183, %rd17247;
	xor.b64  	%rd17249, %rd17248, %rd17186;
	not.b64 	%rd17250, %rd17183;
	and.b64  	%rd17251, %rd17184, %rd17250;
	xor.b64  	%rd17252, %rd17251, %rd17187;
	not.b64 	%rd17253, %rd17189;
	and.b64  	%rd17254, %rd17190, %rd17253;
	xor.b64  	%rd17255, %rd17254, %rd17188;
	not.b64 	%rd17256, %rd17190;
	and.b64  	%rd17257, %rd17191, %rd17256;
	xor.b64  	%rd17258, %rd17257, %rd17189;
	not.b64 	%rd17259, %rd17191;
	and.b64  	%rd17260, %rd17192, %rd17259;
	xor.b64  	%rd17261, %rd17260, %rd17190;
	not.b64 	%rd17262, %rd17192;
	and.b64  	%rd17263, %rd17188, %rd17262;
	xor.b64  	%rd17264, %rd17263, %rd17191;
	not.b64 	%rd17265, %rd17188;
	and.b64  	%rd17266, %rd17189, %rd17265;
	xor.b64  	%rd17267, %rd17266, %rd17192;
	xor.b64  	%rd17268, %rd17195, %rd19816;
	xor.b64  	%rd17269, %rd17210, %rd17268;
	xor.b64  	%rd17270, %rd17269, %rd17225;
	xor.b64  	%rd17271, %rd17270, %rd17240;
	xor.b64  	%rd17272, %rd17271, %rd17255;
	xor.b64  	%rd17273, %rd17213, %rd17198;
	xor.b64  	%rd17274, %rd17273, %rd17228;
	xor.b64  	%rd17275, %rd17274, %rd17243;
	xor.b64  	%rd17276, %rd17275, %rd17258;
	xor.b64  	%rd17277, %rd17216, %rd17201;
	xor.b64  	%rd17278, %rd17277, %rd17231;
	xor.b64  	%rd17279, %rd17278, %rd17246;
	xor.b64  	%rd17280, %rd17279, %rd17261;
	xor.b64  	%rd17281, %rd17219, %rd17204;
	xor.b64  	%rd17282, %rd17281, %rd17234;
	xor.b64  	%rd17283, %rd17282, %rd17249;
	xor.b64  	%rd17284, %rd17283, %rd17264;
	xor.b64  	%rd17285, %rd17222, %rd17207;
	xor.b64  	%rd17286, %rd17285, %rd17237;
	xor.b64  	%rd17287, %rd17286, %rd17252;
	xor.b64  	%rd17288, %rd17287, %rd17267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12266}, %rd17276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12267,%dummy}, %rd17276;
	}
	shf.l.wrap.b32 	%r12268, %r12267, %r12266, 1;
	shf.l.wrap.b32 	%r12269, %r12266, %r12267, 1;
	mov.b64 	%rd17289, {%r12269, %r12268};
	xor.b64  	%rd17290, %rd17288, %rd17289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12270}, %rd17280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12271,%dummy}, %rd17280;
	}
	shf.l.wrap.b32 	%r12272, %r12271, %r12270, 1;
	shf.l.wrap.b32 	%r12273, %r12270, %r12271, 1;
	mov.b64 	%rd17291, {%r12273, %r12272};
	xor.b64  	%rd17292, %rd17291, %rd17272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12274}, %rd17284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12275,%dummy}, %rd17284;
	}
	shf.l.wrap.b32 	%r12276, %r12275, %r12274, 1;
	shf.l.wrap.b32 	%r12277, %r12274, %r12275, 1;
	mov.b64 	%rd17293, {%r12277, %r12276};
	xor.b64  	%rd17294, %rd17293, %rd17276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12278}, %rd17288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12279,%dummy}, %rd17288;
	}
	shf.l.wrap.b32 	%r12280, %r12279, %r12278, 1;
	shf.l.wrap.b32 	%r12281, %r12278, %r12279, 1;
	mov.b64 	%rd17295, {%r12281, %r12280};
	xor.b64  	%rd17296, %rd17295, %rd17280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12282}, %rd17272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12283,%dummy}, %rd17272;
	}
	shf.l.wrap.b32 	%r12284, %r12283, %r12282, 1;
	shf.l.wrap.b32 	%r12285, %r12282, %r12283, 1;
	mov.b64 	%rd17297, {%r12285, %r12284};
	xor.b64  	%rd17298, %rd17284, %rd17297;
	xor.b64  	%rd17299, %rd17290, %rd17268;
	xor.b64  	%rd17300, %rd17292, %rd17198;
	xor.b64  	%rd17301, %rd17294, %rd17201;
	xor.b64  	%rd17302, %rd17296, %rd17204;
	xor.b64  	%rd17303, %rd17298, %rd17207;
	xor.b64  	%rd17304, %rd17290, %rd17210;
	xor.b64  	%rd17305, %rd17292, %rd17213;
	xor.b64  	%rd17306, %rd17294, %rd17216;
	xor.b64  	%rd17307, %rd17296, %rd17219;
	xor.b64  	%rd17308, %rd17298, %rd17222;
	xor.b64  	%rd17309, %rd17290, %rd17225;
	xor.b64  	%rd17310, %rd17292, %rd17228;
	xor.b64  	%rd17311, %rd17294, %rd17231;
	xor.b64  	%rd17312, %rd17296, %rd17234;
	xor.b64  	%rd17313, %rd17298, %rd17237;
	xor.b64  	%rd17314, %rd17290, %rd17240;
	xor.b64  	%rd17315, %rd17292, %rd17243;
	xor.b64  	%rd17316, %rd17294, %rd17246;
	xor.b64  	%rd17317, %rd17296, %rd17249;
	xor.b64  	%rd17318, %rd17298, %rd17252;
	xor.b64  	%rd17319, %rd17290, %rd17255;
	xor.b64  	%rd17320, %rd17292, %rd17258;
	xor.b64  	%rd17321, %rd17294, %rd17261;
	xor.b64  	%rd17322, %rd17296, %rd17264;
	xor.b64  	%rd17323, %rd17298, %rd17267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12286,%dummy}, %rd17305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12287}, %rd17305;
	}
	shf.r.wrap.b32 	%r12288, %r12287, %r12286, 20;
	shf.r.wrap.b32 	%r12289, %r12286, %r12287, 20;
	mov.b64 	%rd17324, {%r12289, %r12288};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12290,%dummy}, %rd17311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12291}, %rd17311;
	}
	shf.r.wrap.b32 	%r12292, %r12291, %r12290, 21;
	shf.r.wrap.b32 	%r12293, %r12290, %r12291, 21;
	mov.b64 	%rd17325, {%r12293, %r12292};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12294}, %rd17317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12295,%dummy}, %rd17317;
	}
	shf.l.wrap.b32 	%r12296, %r12295, %r12294, 21;
	shf.l.wrap.b32 	%r12297, %r12294, %r12295, 21;
	mov.b64 	%rd17326, {%r12297, %r12296};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12298}, %rd17323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12299,%dummy}, %rd17323;
	}
	shf.l.wrap.b32 	%r12300, %r12299, %r12298, 14;
	shf.l.wrap.b32 	%r12301, %r12298, %r12299, 14;
	mov.b64 	%rd17327, {%r12301, %r12300};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12302}, %rd17302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12303,%dummy}, %rd17302;
	}
	shf.l.wrap.b32 	%r12304, %r12303, %r12302, 28;
	shf.l.wrap.b32 	%r12305, %r12302, %r12303, 28;
	mov.b64 	%rd17328, {%r12305, %r12304};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12306}, %rd17308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12307,%dummy}, %rd17308;
	}
	shf.l.wrap.b32 	%r12308, %r12307, %r12306, 20;
	shf.l.wrap.b32 	%r12309, %r12306, %r12307, 20;
	mov.b64 	%rd17329, {%r12309, %r12308};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12310}, %rd17309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12311,%dummy}, %rd17309;
	}
	shf.l.wrap.b32 	%r12312, %r12311, %r12310, 3;
	shf.l.wrap.b32 	%r12313, %r12310, %r12311, 3;
	mov.b64 	%rd17330, {%r12313, %r12312};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12314,%dummy}, %rd17315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12315}, %rd17315;
	}
	shf.r.wrap.b32 	%r12316, %r12315, %r12314, 19;
	shf.r.wrap.b32 	%r12317, %r12314, %r12315, 19;
	mov.b64 	%rd17331, {%r12317, %r12316};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12318,%dummy}, %rd17321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12319}, %rd17321;
	}
	shf.r.wrap.b32 	%r12320, %r12319, %r12318, 3;
	shf.r.wrap.b32 	%r12321, %r12318, %r12319, 3;
	mov.b64 	%rd17332, {%r12321, %r12320};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12322}, %rd17300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12323,%dummy}, %rd17300;
	}
	shf.l.wrap.b32 	%r12324, %r12323, %r12322, 1;
	shf.l.wrap.b32 	%r12325, %r12322, %r12323, 1;
	mov.b64 	%rd17333, {%r12325, %r12324};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12326}, %rd17306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12327,%dummy}, %rd17306;
	}
	shf.l.wrap.b32 	%r12328, %r12327, %r12326, 6;
	shf.l.wrap.b32 	%r12329, %r12326, %r12327, 6;
	mov.b64 	%rd17334, {%r12329, %r12328};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12330}, %rd17312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12331,%dummy}, %rd17312;
	}
	shf.l.wrap.b32 	%r12332, %r12331, %r12330, 25;
	shf.l.wrap.b32 	%r12333, %r12330, %r12331, 25;
	mov.b64 	%rd17335, {%r12333, %r12332};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12334}, %rd17318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12335,%dummy}, %rd17318;
	}
	shf.l.wrap.b32 	%r12336, %r12335, %r12334, 8;
	shf.l.wrap.b32 	%r12337, %r12334, %r12335, 8;
	mov.b64 	%rd17336, {%r12337, %r12336};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12338}, %rd17319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12339,%dummy}, %rd17319;
	}
	shf.l.wrap.b32 	%r12340, %r12339, %r12338, 18;
	shf.l.wrap.b32 	%r12341, %r12338, %r12339, 18;
	mov.b64 	%rd17337, {%r12341, %r12340};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12342}, %rd17303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12343,%dummy}, %rd17303;
	}
	shf.l.wrap.b32 	%r12344, %r12343, %r12342, 27;
	shf.l.wrap.b32 	%r12345, %r12342, %r12343, 27;
	mov.b64 	%rd17338, {%r12345, %r12344};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12346,%dummy}, %rd17304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12347}, %rd17304;
	}
	shf.r.wrap.b32 	%r12348, %r12347, %r12346, 28;
	shf.r.wrap.b32 	%r12349, %r12346, %r12347, 28;
	mov.b64 	%rd17339, {%r12349, %r12348};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12350}, %rd17310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12351,%dummy}, %rd17310;
	}
	shf.l.wrap.b32 	%r12352, %r12351, %r12350, 10;
	shf.l.wrap.b32 	%r12353, %r12350, %r12351, 10;
	mov.b64 	%rd17340, {%r12353, %r12352};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12354}, %rd17316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12355,%dummy}, %rd17316;
	}
	shf.l.wrap.b32 	%r12356, %r12355, %r12354, 15;
	shf.l.wrap.b32 	%r12357, %r12354, %r12355, 15;
	mov.b64 	%rd17341, {%r12357, %r12356};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12358,%dummy}, %rd17322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12359}, %rd17322;
	}
	shf.r.wrap.b32 	%r12360, %r12359, %r12358, 8;
	shf.r.wrap.b32 	%r12361, %r12358, %r12359, 8;
	mov.b64 	%rd17342, {%r12361, %r12360};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12362,%dummy}, %rd17301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12363}, %rd17301;
	}
	shf.r.wrap.b32 	%r12364, %r12363, %r12362, 2;
	shf.r.wrap.b32 	%r12365, %r12362, %r12363, 2;
	mov.b64 	%rd17343, {%r12365, %r12364};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12366,%dummy}, %rd17307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12367}, %rd17307;
	}
	shf.r.wrap.b32 	%r12368, %r12367, %r12366, 9;
	shf.r.wrap.b32 	%r12369, %r12366, %r12367, 9;
	mov.b64 	%rd17344, {%r12369, %r12368};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12370,%dummy}, %rd17313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12371}, %rd17313;
	}
	shf.r.wrap.b32 	%r12372, %r12371, %r12370, 25;
	shf.r.wrap.b32 	%r12373, %r12370, %r12371, 25;
	mov.b64 	%rd17345, {%r12373, %r12372};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12374,%dummy}, %rd17314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12375}, %rd17314;
	}
	shf.r.wrap.b32 	%r12376, %r12375, %r12374, 23;
	shf.r.wrap.b32 	%r12377, %r12374, %r12375, 23;
	mov.b64 	%rd17346, {%r12377, %r12376};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12378}, %rd17320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12379,%dummy}, %rd17320;
	}
	shf.l.wrap.b32 	%r12380, %r12379, %r12378, 2;
	shf.l.wrap.b32 	%r12381, %r12378, %r12379, 2;
	mov.b64 	%rd17347, {%r12381, %r12380};
	not.b64 	%rd17348, %rd17324;
	and.b64  	%rd17349, %rd17325, %rd17348;
	xor.b64  	%rd17350, %rd17349, %rd17299;
	not.b64 	%rd17351, %rd17325;
	and.b64  	%rd17352, %rd17326, %rd17351;
	xor.b64  	%rd17353, %rd17352, %rd17324;
	not.b64 	%rd17354, %rd17326;
	and.b64  	%rd17355, %rd17327, %rd17354;
	xor.b64  	%rd17356, %rd17355, %rd17325;
	not.b64 	%rd17357, %rd17327;
	and.b64  	%rd17358, %rd17299, %rd17357;
	xor.b64  	%rd17359, %rd17358, %rd17326;
	not.b64 	%rd17360, %rd17299;
	and.b64  	%rd17361, %rd17324, %rd17360;
	xor.b64  	%rd17362, %rd17361, %rd17327;
	not.b64 	%rd17363, %rd17329;
	and.b64  	%rd17364, %rd17330, %rd17363;
	xor.b64  	%rd17365, %rd17364, %rd17328;
	not.b64 	%rd17366, %rd17330;
	and.b64  	%rd17367, %rd17331, %rd17366;
	xor.b64  	%rd17368, %rd17367, %rd17329;
	not.b64 	%rd17369, %rd17331;
	and.b64  	%rd17370, %rd17332, %rd17369;
	xor.b64  	%rd17371, %rd17370, %rd17330;
	not.b64 	%rd17372, %rd17332;
	and.b64  	%rd17373, %rd17328, %rd17372;
	xor.b64  	%rd17374, %rd17373, %rd17331;
	not.b64 	%rd17375, %rd17328;
	and.b64  	%rd17376, %rd17329, %rd17375;
	xor.b64  	%rd17377, %rd17376, %rd17332;
	not.b64 	%rd17378, %rd17334;
	and.b64  	%rd17379, %rd17335, %rd17378;
	xor.b64  	%rd17380, %rd17379, %rd17333;
	not.b64 	%rd17381, %rd17335;
	and.b64  	%rd17382, %rd17336, %rd17381;
	xor.b64  	%rd17383, %rd17382, %rd17334;
	not.b64 	%rd17384, %rd17336;
	and.b64  	%rd17385, %rd17337, %rd17384;
	xor.b64  	%rd17386, %rd17385, %rd17335;
	not.b64 	%rd17387, %rd17337;
	and.b64  	%rd17388, %rd17333, %rd17387;
	xor.b64  	%rd17389, %rd17388, %rd17336;
	not.b64 	%rd17390, %rd17333;
	and.b64  	%rd17391, %rd17334, %rd17390;
	xor.b64  	%rd17392, %rd17391, %rd17337;
	not.b64 	%rd17393, %rd17339;
	and.b64  	%rd17394, %rd17340, %rd17393;
	xor.b64  	%rd17395, %rd17394, %rd17338;
	not.b64 	%rd17396, %rd17340;
	and.b64  	%rd17397, %rd17341, %rd17396;
	xor.b64  	%rd17398, %rd17397, %rd17339;
	not.b64 	%rd17399, %rd17341;
	and.b64  	%rd17400, %rd17342, %rd17399;
	xor.b64  	%rd17401, %rd17400, %rd17340;
	not.b64 	%rd17402, %rd17342;
	and.b64  	%rd17403, %rd17338, %rd17402;
	xor.b64  	%rd17404, %rd17403, %rd17341;
	not.b64 	%rd17405, %rd17338;
	and.b64  	%rd17406, %rd17339, %rd17405;
	xor.b64  	%rd17407, %rd17406, %rd17342;
	not.b64 	%rd17408, %rd17344;
	and.b64  	%rd17409, %rd17345, %rd17408;
	xor.b64  	%rd17410, %rd17409, %rd17343;
	not.b64 	%rd17411, %rd17345;
	and.b64  	%rd17412, %rd17346, %rd17411;
	xor.b64  	%rd17413, %rd17412, %rd17344;
	not.b64 	%rd17414, %rd17346;
	and.b64  	%rd17415, %rd17347, %rd17414;
	xor.b64  	%rd17416, %rd17415, %rd17345;
	not.b64 	%rd17417, %rd17347;
	and.b64  	%rd17418, %rd17343, %rd17417;
	xor.b64  	%rd17419, %rd17418, %rd17346;
	not.b64 	%rd17420, %rd17343;
	and.b64  	%rd17421, %rd17344, %rd17420;
	xor.b64  	%rd17422, %rd17421, %rd17347;
	xor.b64  	%rd17423, %rd17350, %rd19817;
	xor.b64  	%rd17424, %rd17365, %rd17423;
	xor.b64  	%rd17425, %rd17424, %rd17380;
	xor.b64  	%rd17426, %rd17425, %rd17395;
	xor.b64  	%rd17427, %rd17426, %rd17410;
	xor.b64  	%rd17428, %rd17368, %rd17353;
	xor.b64  	%rd17429, %rd17428, %rd17383;
	xor.b64  	%rd17430, %rd17429, %rd17398;
	xor.b64  	%rd17431, %rd17430, %rd17413;
	xor.b64  	%rd17432, %rd17371, %rd17356;
	xor.b64  	%rd17433, %rd17432, %rd17386;
	xor.b64  	%rd17434, %rd17433, %rd17401;
	xor.b64  	%rd17435, %rd17434, %rd17416;
	xor.b64  	%rd17436, %rd17374, %rd17359;
	xor.b64  	%rd17437, %rd17436, %rd17389;
	xor.b64  	%rd17438, %rd17437, %rd17404;
	xor.b64  	%rd17439, %rd17438, %rd17419;
	xor.b64  	%rd17440, %rd17377, %rd17362;
	xor.b64  	%rd17441, %rd17440, %rd17392;
	xor.b64  	%rd17442, %rd17441, %rd17407;
	xor.b64  	%rd17443, %rd17442, %rd17422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12382}, %rd17431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12383,%dummy}, %rd17431;
	}
	shf.l.wrap.b32 	%r12384, %r12383, %r12382, 1;
	shf.l.wrap.b32 	%r12385, %r12382, %r12383, 1;
	mov.b64 	%rd17444, {%r12385, %r12384};
	xor.b64  	%rd17445, %rd17443, %rd17444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12386}, %rd17435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12387,%dummy}, %rd17435;
	}
	shf.l.wrap.b32 	%r12388, %r12387, %r12386, 1;
	shf.l.wrap.b32 	%r12389, %r12386, %r12387, 1;
	mov.b64 	%rd17446, {%r12389, %r12388};
	xor.b64  	%rd17447, %rd17446, %rd17427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12390}, %rd17439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12391,%dummy}, %rd17439;
	}
	shf.l.wrap.b32 	%r12392, %r12391, %r12390, 1;
	shf.l.wrap.b32 	%r12393, %r12390, %r12391, 1;
	mov.b64 	%rd17448, {%r12393, %r12392};
	xor.b64  	%rd17449, %rd17448, %rd17431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12394}, %rd17443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12395,%dummy}, %rd17443;
	}
	shf.l.wrap.b32 	%r12396, %r12395, %r12394, 1;
	shf.l.wrap.b32 	%r12397, %r12394, %r12395, 1;
	mov.b64 	%rd17450, {%r12397, %r12396};
	xor.b64  	%rd17451, %rd17450, %rd17435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12398}, %rd17427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12399,%dummy}, %rd17427;
	}
	shf.l.wrap.b32 	%r12400, %r12399, %r12398, 1;
	shf.l.wrap.b32 	%r12401, %r12398, %r12399, 1;
	mov.b64 	%rd17452, {%r12401, %r12400};
	xor.b64  	%rd17453, %rd17439, %rd17452;
	xor.b64  	%rd17454, %rd17445, %rd17423;
	xor.b64  	%rd17455, %rd17447, %rd17353;
	xor.b64  	%rd17456, %rd17449, %rd17356;
	xor.b64  	%rd17457, %rd17451, %rd17359;
	xor.b64  	%rd17458, %rd17453, %rd17362;
	xor.b64  	%rd17459, %rd17445, %rd17365;
	xor.b64  	%rd17460, %rd17447, %rd17368;
	xor.b64  	%rd17461, %rd17449, %rd17371;
	xor.b64  	%rd17462, %rd17451, %rd17374;
	xor.b64  	%rd17463, %rd17453, %rd17377;
	xor.b64  	%rd17464, %rd17445, %rd17380;
	xor.b64  	%rd17465, %rd17447, %rd17383;
	xor.b64  	%rd17466, %rd17449, %rd17386;
	xor.b64  	%rd17467, %rd17451, %rd17389;
	xor.b64  	%rd17468, %rd17453, %rd17392;
	xor.b64  	%rd17469, %rd17445, %rd17395;
	xor.b64  	%rd17470, %rd17447, %rd17398;
	xor.b64  	%rd17471, %rd17449, %rd17401;
	xor.b64  	%rd17472, %rd17451, %rd17404;
	xor.b64  	%rd17473, %rd17453, %rd17407;
	xor.b64  	%rd17474, %rd17445, %rd17410;
	xor.b64  	%rd17475, %rd17447, %rd17413;
	xor.b64  	%rd17476, %rd17449, %rd17416;
	xor.b64  	%rd17477, %rd17451, %rd17419;
	xor.b64  	%rd17478, %rd17453, %rd17422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12402,%dummy}, %rd17460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12403}, %rd17460;
	}
	shf.r.wrap.b32 	%r12404, %r12403, %r12402, 20;
	shf.r.wrap.b32 	%r12405, %r12402, %r12403, 20;
	mov.b64 	%rd17479, {%r12405, %r12404};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12406,%dummy}, %rd17466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12407}, %rd17466;
	}
	shf.r.wrap.b32 	%r12408, %r12407, %r12406, 21;
	shf.r.wrap.b32 	%r12409, %r12406, %r12407, 21;
	mov.b64 	%rd17480, {%r12409, %r12408};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12410}, %rd17472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12411,%dummy}, %rd17472;
	}
	shf.l.wrap.b32 	%r12412, %r12411, %r12410, 21;
	shf.l.wrap.b32 	%r12413, %r12410, %r12411, 21;
	mov.b64 	%rd17481, {%r12413, %r12412};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12414}, %rd17478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12415,%dummy}, %rd17478;
	}
	shf.l.wrap.b32 	%r12416, %r12415, %r12414, 14;
	shf.l.wrap.b32 	%r12417, %r12414, %r12415, 14;
	mov.b64 	%rd17482, {%r12417, %r12416};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12418}, %rd17457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12419,%dummy}, %rd17457;
	}
	shf.l.wrap.b32 	%r12420, %r12419, %r12418, 28;
	shf.l.wrap.b32 	%r12421, %r12418, %r12419, 28;
	mov.b64 	%rd17483, {%r12421, %r12420};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12422}, %rd17463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12423,%dummy}, %rd17463;
	}
	shf.l.wrap.b32 	%r12424, %r12423, %r12422, 20;
	shf.l.wrap.b32 	%r12425, %r12422, %r12423, 20;
	mov.b64 	%rd17484, {%r12425, %r12424};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12426}, %rd17464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12427,%dummy}, %rd17464;
	}
	shf.l.wrap.b32 	%r12428, %r12427, %r12426, 3;
	shf.l.wrap.b32 	%r12429, %r12426, %r12427, 3;
	mov.b64 	%rd17485, {%r12429, %r12428};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12430,%dummy}, %rd17470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12431}, %rd17470;
	}
	shf.r.wrap.b32 	%r12432, %r12431, %r12430, 19;
	shf.r.wrap.b32 	%r12433, %r12430, %r12431, 19;
	mov.b64 	%rd17486, {%r12433, %r12432};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12434,%dummy}, %rd17476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12435}, %rd17476;
	}
	shf.r.wrap.b32 	%r12436, %r12435, %r12434, 3;
	shf.r.wrap.b32 	%r12437, %r12434, %r12435, 3;
	mov.b64 	%rd17487, {%r12437, %r12436};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12438}, %rd17455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12439,%dummy}, %rd17455;
	}
	shf.l.wrap.b32 	%r12440, %r12439, %r12438, 1;
	shf.l.wrap.b32 	%r12441, %r12438, %r12439, 1;
	mov.b64 	%rd17488, {%r12441, %r12440};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12442}, %rd17461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12443,%dummy}, %rd17461;
	}
	shf.l.wrap.b32 	%r12444, %r12443, %r12442, 6;
	shf.l.wrap.b32 	%r12445, %r12442, %r12443, 6;
	mov.b64 	%rd17489, {%r12445, %r12444};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12446}, %rd17467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12447,%dummy}, %rd17467;
	}
	shf.l.wrap.b32 	%r12448, %r12447, %r12446, 25;
	shf.l.wrap.b32 	%r12449, %r12446, %r12447, 25;
	mov.b64 	%rd17490, {%r12449, %r12448};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12450}, %rd17473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12451,%dummy}, %rd17473;
	}
	shf.l.wrap.b32 	%r12452, %r12451, %r12450, 8;
	shf.l.wrap.b32 	%r12453, %r12450, %r12451, 8;
	mov.b64 	%rd17491, {%r12453, %r12452};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12454}, %rd17474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12455,%dummy}, %rd17474;
	}
	shf.l.wrap.b32 	%r12456, %r12455, %r12454, 18;
	shf.l.wrap.b32 	%r12457, %r12454, %r12455, 18;
	mov.b64 	%rd17492, {%r12457, %r12456};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12458}, %rd17458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12459,%dummy}, %rd17458;
	}
	shf.l.wrap.b32 	%r12460, %r12459, %r12458, 27;
	shf.l.wrap.b32 	%r12461, %r12458, %r12459, 27;
	mov.b64 	%rd17493, {%r12461, %r12460};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12462,%dummy}, %rd17459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12463}, %rd17459;
	}
	shf.r.wrap.b32 	%r12464, %r12463, %r12462, 28;
	shf.r.wrap.b32 	%r12465, %r12462, %r12463, 28;
	mov.b64 	%rd17494, {%r12465, %r12464};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12466}, %rd17465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12467,%dummy}, %rd17465;
	}
	shf.l.wrap.b32 	%r12468, %r12467, %r12466, 10;
	shf.l.wrap.b32 	%r12469, %r12466, %r12467, 10;
	mov.b64 	%rd17495, {%r12469, %r12468};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12470}, %rd17471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12471,%dummy}, %rd17471;
	}
	shf.l.wrap.b32 	%r12472, %r12471, %r12470, 15;
	shf.l.wrap.b32 	%r12473, %r12470, %r12471, 15;
	mov.b64 	%rd17496, {%r12473, %r12472};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12474,%dummy}, %rd17477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12475}, %rd17477;
	}
	shf.r.wrap.b32 	%r12476, %r12475, %r12474, 8;
	shf.r.wrap.b32 	%r12477, %r12474, %r12475, 8;
	mov.b64 	%rd17497, {%r12477, %r12476};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12478,%dummy}, %rd17456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12479}, %rd17456;
	}
	shf.r.wrap.b32 	%r12480, %r12479, %r12478, 2;
	shf.r.wrap.b32 	%r12481, %r12478, %r12479, 2;
	mov.b64 	%rd17498, {%r12481, %r12480};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12482,%dummy}, %rd17462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12483}, %rd17462;
	}
	shf.r.wrap.b32 	%r12484, %r12483, %r12482, 9;
	shf.r.wrap.b32 	%r12485, %r12482, %r12483, 9;
	mov.b64 	%rd17499, {%r12485, %r12484};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12486,%dummy}, %rd17468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12487}, %rd17468;
	}
	shf.r.wrap.b32 	%r12488, %r12487, %r12486, 25;
	shf.r.wrap.b32 	%r12489, %r12486, %r12487, 25;
	mov.b64 	%rd17500, {%r12489, %r12488};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12490,%dummy}, %rd17469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12491}, %rd17469;
	}
	shf.r.wrap.b32 	%r12492, %r12491, %r12490, 23;
	shf.r.wrap.b32 	%r12493, %r12490, %r12491, 23;
	mov.b64 	%rd17501, {%r12493, %r12492};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12494}, %rd17475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12495,%dummy}, %rd17475;
	}
	shf.l.wrap.b32 	%r12496, %r12495, %r12494, 2;
	shf.l.wrap.b32 	%r12497, %r12494, %r12495, 2;
	mov.b64 	%rd17502, {%r12497, %r12496};
	not.b64 	%rd17503, %rd17479;
	and.b64  	%rd17504, %rd17480, %rd17503;
	xor.b64  	%rd17505, %rd17504, %rd17454;
	not.b64 	%rd17506, %rd17480;
	and.b64  	%rd17507, %rd17481, %rd17506;
	xor.b64  	%rd17508, %rd17507, %rd17479;
	not.b64 	%rd17509, %rd17481;
	and.b64  	%rd17510, %rd17482, %rd17509;
	xor.b64  	%rd17511, %rd17510, %rd17480;
	not.b64 	%rd17512, %rd17482;
	and.b64  	%rd17513, %rd17454, %rd17512;
	xor.b64  	%rd17514, %rd17513, %rd17481;
	not.b64 	%rd17515, %rd17454;
	and.b64  	%rd17516, %rd17479, %rd17515;
	xor.b64  	%rd17517, %rd17516, %rd17482;
	not.b64 	%rd17518, %rd17484;
	and.b64  	%rd17519, %rd17485, %rd17518;
	xor.b64  	%rd17520, %rd17519, %rd17483;
	not.b64 	%rd17521, %rd17485;
	and.b64  	%rd17522, %rd17486, %rd17521;
	xor.b64  	%rd17523, %rd17522, %rd17484;
	not.b64 	%rd17524, %rd17486;
	and.b64  	%rd17525, %rd17487, %rd17524;
	xor.b64  	%rd17526, %rd17525, %rd17485;
	not.b64 	%rd17527, %rd17487;
	and.b64  	%rd17528, %rd17483, %rd17527;
	xor.b64  	%rd17529, %rd17528, %rd17486;
	not.b64 	%rd17530, %rd17483;
	and.b64  	%rd17531, %rd17484, %rd17530;
	xor.b64  	%rd17532, %rd17531, %rd17487;
	not.b64 	%rd17533, %rd17489;
	and.b64  	%rd17534, %rd17490, %rd17533;
	xor.b64  	%rd17535, %rd17534, %rd17488;
	not.b64 	%rd17536, %rd17490;
	and.b64  	%rd17537, %rd17491, %rd17536;
	xor.b64  	%rd17538, %rd17537, %rd17489;
	not.b64 	%rd17539, %rd17491;
	and.b64  	%rd17540, %rd17492, %rd17539;
	xor.b64  	%rd17541, %rd17540, %rd17490;
	not.b64 	%rd17542, %rd17492;
	and.b64  	%rd17543, %rd17488, %rd17542;
	xor.b64  	%rd17544, %rd17543, %rd17491;
	not.b64 	%rd17545, %rd17488;
	and.b64  	%rd17546, %rd17489, %rd17545;
	xor.b64  	%rd17547, %rd17546, %rd17492;
	not.b64 	%rd17548, %rd17494;
	and.b64  	%rd17549, %rd17495, %rd17548;
	xor.b64  	%rd17550, %rd17549, %rd17493;
	not.b64 	%rd17551, %rd17495;
	and.b64  	%rd17552, %rd17496, %rd17551;
	xor.b64  	%rd17553, %rd17552, %rd17494;
	not.b64 	%rd17554, %rd17496;
	and.b64  	%rd17555, %rd17497, %rd17554;
	xor.b64  	%rd17556, %rd17555, %rd17495;
	not.b64 	%rd17557, %rd17497;
	and.b64  	%rd17558, %rd17493, %rd17557;
	xor.b64  	%rd17559, %rd17558, %rd17496;
	not.b64 	%rd17560, %rd17493;
	and.b64  	%rd17561, %rd17494, %rd17560;
	xor.b64  	%rd17562, %rd17561, %rd17497;
	not.b64 	%rd17563, %rd17499;
	and.b64  	%rd17564, %rd17500, %rd17563;
	xor.b64  	%rd17565, %rd17564, %rd17498;
	not.b64 	%rd17566, %rd17500;
	and.b64  	%rd17567, %rd17501, %rd17566;
	xor.b64  	%rd17568, %rd17567, %rd17499;
	not.b64 	%rd17569, %rd17501;
	and.b64  	%rd17570, %rd17502, %rd17569;
	xor.b64  	%rd17571, %rd17570, %rd17500;
	not.b64 	%rd17572, %rd17502;
	and.b64  	%rd17573, %rd17498, %rd17572;
	xor.b64  	%rd17574, %rd17573, %rd17501;
	not.b64 	%rd17575, %rd17498;
	and.b64  	%rd17576, %rd17499, %rd17575;
	xor.b64  	%rd17577, %rd17576, %rd17502;
	xor.b64  	%rd17578, %rd17505, %rd19818;
	xor.b64  	%rd17579, %rd17520, %rd17578;
	xor.b64  	%rd17580, %rd17579, %rd17535;
	xor.b64  	%rd17581, %rd17580, %rd17550;
	xor.b64  	%rd17582, %rd17581, %rd17565;
	xor.b64  	%rd17583, %rd17523, %rd17508;
	xor.b64  	%rd17584, %rd17583, %rd17538;
	xor.b64  	%rd17585, %rd17584, %rd17553;
	xor.b64  	%rd17586, %rd17585, %rd17568;
	xor.b64  	%rd17587, %rd17526, %rd17511;
	xor.b64  	%rd17588, %rd17587, %rd17541;
	xor.b64  	%rd17589, %rd17588, %rd17556;
	xor.b64  	%rd17590, %rd17589, %rd17571;
	xor.b64  	%rd17591, %rd17529, %rd17514;
	xor.b64  	%rd17592, %rd17591, %rd17544;
	xor.b64  	%rd17593, %rd17592, %rd17559;
	xor.b64  	%rd17594, %rd17593, %rd17574;
	xor.b64  	%rd17595, %rd17532, %rd17517;
	xor.b64  	%rd17596, %rd17595, %rd17547;
	xor.b64  	%rd17597, %rd17596, %rd17562;
	xor.b64  	%rd17598, %rd17597, %rd17577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12498}, %rd17586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12499,%dummy}, %rd17586;
	}
	shf.l.wrap.b32 	%r12500, %r12499, %r12498, 1;
	shf.l.wrap.b32 	%r12501, %r12498, %r12499, 1;
	mov.b64 	%rd17599, {%r12501, %r12500};
	xor.b64  	%rd17600, %rd17598, %rd17599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12502}, %rd17590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12503,%dummy}, %rd17590;
	}
	shf.l.wrap.b32 	%r12504, %r12503, %r12502, 1;
	shf.l.wrap.b32 	%r12505, %r12502, %r12503, 1;
	mov.b64 	%rd17601, {%r12505, %r12504};
	xor.b64  	%rd17602, %rd17601, %rd17582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12506}, %rd17594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12507,%dummy}, %rd17594;
	}
	shf.l.wrap.b32 	%r12508, %r12507, %r12506, 1;
	shf.l.wrap.b32 	%r12509, %r12506, %r12507, 1;
	mov.b64 	%rd17603, {%r12509, %r12508};
	xor.b64  	%rd17604, %rd17603, %rd17586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12510}, %rd17598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12511,%dummy}, %rd17598;
	}
	shf.l.wrap.b32 	%r12512, %r12511, %r12510, 1;
	shf.l.wrap.b32 	%r12513, %r12510, %r12511, 1;
	mov.b64 	%rd17605, {%r12513, %r12512};
	xor.b64  	%rd17606, %rd17605, %rd17590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12514}, %rd17582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12515,%dummy}, %rd17582;
	}
	shf.l.wrap.b32 	%r12516, %r12515, %r12514, 1;
	shf.l.wrap.b32 	%r12517, %r12514, %r12515, 1;
	mov.b64 	%rd17607, {%r12517, %r12516};
	xor.b64  	%rd17608, %rd17594, %rd17607;
	xor.b64  	%rd17609, %rd17600, %rd17578;
	xor.b64  	%rd17610, %rd17602, %rd17508;
	xor.b64  	%rd17611, %rd17604, %rd17511;
	xor.b64  	%rd17612, %rd17606, %rd17514;
	xor.b64  	%rd17613, %rd17608, %rd17517;
	xor.b64  	%rd17614, %rd17600, %rd17520;
	xor.b64  	%rd17615, %rd17602, %rd17523;
	xor.b64  	%rd17616, %rd17604, %rd17526;
	xor.b64  	%rd17617, %rd17606, %rd17529;
	xor.b64  	%rd17618, %rd17608, %rd17532;
	xor.b64  	%rd17619, %rd17600, %rd17535;
	xor.b64  	%rd17620, %rd17602, %rd17538;
	xor.b64  	%rd17621, %rd17604, %rd17541;
	xor.b64  	%rd17622, %rd17606, %rd17544;
	xor.b64  	%rd17623, %rd17608, %rd17547;
	xor.b64  	%rd17624, %rd17600, %rd17550;
	xor.b64  	%rd17625, %rd17602, %rd17553;
	xor.b64  	%rd17626, %rd17604, %rd17556;
	xor.b64  	%rd17627, %rd17606, %rd17559;
	xor.b64  	%rd17628, %rd17608, %rd17562;
	xor.b64  	%rd17629, %rd17600, %rd17565;
	xor.b64  	%rd17630, %rd17602, %rd17568;
	xor.b64  	%rd17631, %rd17604, %rd17571;
	xor.b64  	%rd17632, %rd17606, %rd17574;
	xor.b64  	%rd17633, %rd17608, %rd17577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12518,%dummy}, %rd17615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12519}, %rd17615;
	}
	shf.r.wrap.b32 	%r12520, %r12519, %r12518, 20;
	shf.r.wrap.b32 	%r12521, %r12518, %r12519, 20;
	mov.b64 	%rd17634, {%r12521, %r12520};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12522,%dummy}, %rd17621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12523}, %rd17621;
	}
	shf.r.wrap.b32 	%r12524, %r12523, %r12522, 21;
	shf.r.wrap.b32 	%r12525, %r12522, %r12523, 21;
	mov.b64 	%rd17635, {%r12525, %r12524};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12526}, %rd17627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12527,%dummy}, %rd17627;
	}
	shf.l.wrap.b32 	%r12528, %r12527, %r12526, 21;
	shf.l.wrap.b32 	%r12529, %r12526, %r12527, 21;
	mov.b64 	%rd17636, {%r12529, %r12528};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12530}, %rd17633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12531,%dummy}, %rd17633;
	}
	shf.l.wrap.b32 	%r12532, %r12531, %r12530, 14;
	shf.l.wrap.b32 	%r12533, %r12530, %r12531, 14;
	mov.b64 	%rd17637, {%r12533, %r12532};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12534}, %rd17612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12535,%dummy}, %rd17612;
	}
	shf.l.wrap.b32 	%r12536, %r12535, %r12534, 28;
	shf.l.wrap.b32 	%r12537, %r12534, %r12535, 28;
	mov.b64 	%rd17638, {%r12537, %r12536};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12538}, %rd17618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12539,%dummy}, %rd17618;
	}
	shf.l.wrap.b32 	%r12540, %r12539, %r12538, 20;
	shf.l.wrap.b32 	%r12541, %r12538, %r12539, 20;
	mov.b64 	%rd17639, {%r12541, %r12540};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12542}, %rd17619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12543,%dummy}, %rd17619;
	}
	shf.l.wrap.b32 	%r12544, %r12543, %r12542, 3;
	shf.l.wrap.b32 	%r12545, %r12542, %r12543, 3;
	mov.b64 	%rd17640, {%r12545, %r12544};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12546,%dummy}, %rd17625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12547}, %rd17625;
	}
	shf.r.wrap.b32 	%r12548, %r12547, %r12546, 19;
	shf.r.wrap.b32 	%r12549, %r12546, %r12547, 19;
	mov.b64 	%rd17641, {%r12549, %r12548};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12550,%dummy}, %rd17631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12551}, %rd17631;
	}
	shf.r.wrap.b32 	%r12552, %r12551, %r12550, 3;
	shf.r.wrap.b32 	%r12553, %r12550, %r12551, 3;
	mov.b64 	%rd17642, {%r12553, %r12552};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12554}, %rd17610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12555,%dummy}, %rd17610;
	}
	shf.l.wrap.b32 	%r12556, %r12555, %r12554, 1;
	shf.l.wrap.b32 	%r12557, %r12554, %r12555, 1;
	mov.b64 	%rd17643, {%r12557, %r12556};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12558}, %rd17616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12559,%dummy}, %rd17616;
	}
	shf.l.wrap.b32 	%r12560, %r12559, %r12558, 6;
	shf.l.wrap.b32 	%r12561, %r12558, %r12559, 6;
	mov.b64 	%rd17644, {%r12561, %r12560};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12562}, %rd17622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12563,%dummy}, %rd17622;
	}
	shf.l.wrap.b32 	%r12564, %r12563, %r12562, 25;
	shf.l.wrap.b32 	%r12565, %r12562, %r12563, 25;
	mov.b64 	%rd17645, {%r12565, %r12564};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12566}, %rd17628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12567,%dummy}, %rd17628;
	}
	shf.l.wrap.b32 	%r12568, %r12567, %r12566, 8;
	shf.l.wrap.b32 	%r12569, %r12566, %r12567, 8;
	mov.b64 	%rd17646, {%r12569, %r12568};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12570}, %rd17629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12571,%dummy}, %rd17629;
	}
	shf.l.wrap.b32 	%r12572, %r12571, %r12570, 18;
	shf.l.wrap.b32 	%r12573, %r12570, %r12571, 18;
	mov.b64 	%rd17647, {%r12573, %r12572};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12574}, %rd17613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12575,%dummy}, %rd17613;
	}
	shf.l.wrap.b32 	%r12576, %r12575, %r12574, 27;
	shf.l.wrap.b32 	%r12577, %r12574, %r12575, 27;
	mov.b64 	%rd17648, {%r12577, %r12576};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12578,%dummy}, %rd17614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12579}, %rd17614;
	}
	shf.r.wrap.b32 	%r12580, %r12579, %r12578, 28;
	shf.r.wrap.b32 	%r12581, %r12578, %r12579, 28;
	mov.b64 	%rd17649, {%r12581, %r12580};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12582}, %rd17620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12583,%dummy}, %rd17620;
	}
	shf.l.wrap.b32 	%r12584, %r12583, %r12582, 10;
	shf.l.wrap.b32 	%r12585, %r12582, %r12583, 10;
	mov.b64 	%rd17650, {%r12585, %r12584};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12586}, %rd17626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12587,%dummy}, %rd17626;
	}
	shf.l.wrap.b32 	%r12588, %r12587, %r12586, 15;
	shf.l.wrap.b32 	%r12589, %r12586, %r12587, 15;
	mov.b64 	%rd17651, {%r12589, %r12588};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12590,%dummy}, %rd17632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12591}, %rd17632;
	}
	shf.r.wrap.b32 	%r12592, %r12591, %r12590, 8;
	shf.r.wrap.b32 	%r12593, %r12590, %r12591, 8;
	mov.b64 	%rd17652, {%r12593, %r12592};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12594,%dummy}, %rd17611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12595}, %rd17611;
	}
	shf.r.wrap.b32 	%r12596, %r12595, %r12594, 2;
	shf.r.wrap.b32 	%r12597, %r12594, %r12595, 2;
	mov.b64 	%rd17653, {%r12597, %r12596};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12598,%dummy}, %rd17617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12599}, %rd17617;
	}
	shf.r.wrap.b32 	%r12600, %r12599, %r12598, 9;
	shf.r.wrap.b32 	%r12601, %r12598, %r12599, 9;
	mov.b64 	%rd17654, {%r12601, %r12600};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12602,%dummy}, %rd17623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12603}, %rd17623;
	}
	shf.r.wrap.b32 	%r12604, %r12603, %r12602, 25;
	shf.r.wrap.b32 	%r12605, %r12602, %r12603, 25;
	mov.b64 	%rd17655, {%r12605, %r12604};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12606,%dummy}, %rd17624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12607}, %rd17624;
	}
	shf.r.wrap.b32 	%r12608, %r12607, %r12606, 23;
	shf.r.wrap.b32 	%r12609, %r12606, %r12607, 23;
	mov.b64 	%rd17656, {%r12609, %r12608};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12610}, %rd17630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12611,%dummy}, %rd17630;
	}
	shf.l.wrap.b32 	%r12612, %r12611, %r12610, 2;
	shf.l.wrap.b32 	%r12613, %r12610, %r12611, 2;
	mov.b64 	%rd17657, {%r12613, %r12612};
	not.b64 	%rd17658, %rd17634;
	and.b64  	%rd17659, %rd17635, %rd17658;
	xor.b64  	%rd17660, %rd17659, %rd17609;
	not.b64 	%rd17661, %rd17635;
	and.b64  	%rd17662, %rd17636, %rd17661;
	xor.b64  	%rd17663, %rd17662, %rd17634;
	not.b64 	%rd17664, %rd17636;
	and.b64  	%rd17665, %rd17637, %rd17664;
	xor.b64  	%rd17666, %rd17665, %rd17635;
	not.b64 	%rd17667, %rd17637;
	and.b64  	%rd17668, %rd17609, %rd17667;
	xor.b64  	%rd17669, %rd17668, %rd17636;
	not.b64 	%rd17670, %rd17609;
	and.b64  	%rd17671, %rd17634, %rd17670;
	xor.b64  	%rd17672, %rd17671, %rd17637;
	not.b64 	%rd17673, %rd17639;
	and.b64  	%rd17674, %rd17640, %rd17673;
	xor.b64  	%rd17675, %rd17674, %rd17638;
	not.b64 	%rd17676, %rd17640;
	and.b64  	%rd17677, %rd17641, %rd17676;
	xor.b64  	%rd17678, %rd17677, %rd17639;
	not.b64 	%rd17679, %rd17641;
	and.b64  	%rd17680, %rd17642, %rd17679;
	xor.b64  	%rd17681, %rd17680, %rd17640;
	not.b64 	%rd17682, %rd17642;
	and.b64  	%rd17683, %rd17638, %rd17682;
	xor.b64  	%rd17684, %rd17683, %rd17641;
	not.b64 	%rd17685, %rd17638;
	and.b64  	%rd17686, %rd17639, %rd17685;
	xor.b64  	%rd17687, %rd17686, %rd17642;
	not.b64 	%rd17688, %rd17644;
	and.b64  	%rd17689, %rd17645, %rd17688;
	xor.b64  	%rd17690, %rd17689, %rd17643;
	not.b64 	%rd17691, %rd17645;
	and.b64  	%rd17692, %rd17646, %rd17691;
	xor.b64  	%rd17693, %rd17692, %rd17644;
	not.b64 	%rd17694, %rd17646;
	and.b64  	%rd17695, %rd17647, %rd17694;
	xor.b64  	%rd17696, %rd17695, %rd17645;
	not.b64 	%rd17697, %rd17647;
	and.b64  	%rd17698, %rd17643, %rd17697;
	xor.b64  	%rd17699, %rd17698, %rd17646;
	not.b64 	%rd17700, %rd17643;
	and.b64  	%rd17701, %rd17644, %rd17700;
	xor.b64  	%rd17702, %rd17701, %rd17647;
	not.b64 	%rd17703, %rd17649;
	and.b64  	%rd17704, %rd17650, %rd17703;
	xor.b64  	%rd17705, %rd17704, %rd17648;
	not.b64 	%rd17706, %rd17650;
	and.b64  	%rd17707, %rd17651, %rd17706;
	xor.b64  	%rd17708, %rd17707, %rd17649;
	not.b64 	%rd17709, %rd17651;
	and.b64  	%rd17710, %rd17652, %rd17709;
	xor.b64  	%rd17711, %rd17710, %rd17650;
	not.b64 	%rd17712, %rd17652;
	and.b64  	%rd17713, %rd17648, %rd17712;
	xor.b64  	%rd17714, %rd17713, %rd17651;
	not.b64 	%rd17715, %rd17648;
	and.b64  	%rd17716, %rd17649, %rd17715;
	xor.b64  	%rd17717, %rd17716, %rd17652;
	not.b64 	%rd17718, %rd17654;
	and.b64  	%rd17719, %rd17655, %rd17718;
	xor.b64  	%rd17720, %rd17719, %rd17653;
	not.b64 	%rd17721, %rd17655;
	and.b64  	%rd17722, %rd17656, %rd17721;
	xor.b64  	%rd17723, %rd17722, %rd17654;
	not.b64 	%rd17724, %rd17656;
	and.b64  	%rd17725, %rd17657, %rd17724;
	xor.b64  	%rd17726, %rd17725, %rd17655;
	not.b64 	%rd17727, %rd17657;
	and.b64  	%rd17728, %rd17653, %rd17727;
	xor.b64  	%rd17729, %rd17728, %rd17656;
	not.b64 	%rd17730, %rd17653;
	and.b64  	%rd17731, %rd17654, %rd17730;
	xor.b64  	%rd17732, %rd17731, %rd17657;
	xor.b64  	%rd17733, %rd17660, %rd19819;
	xor.b64  	%rd17734, %rd17675, %rd17733;
	xor.b64  	%rd17735, %rd17734, %rd17690;
	xor.b64  	%rd17736, %rd17735, %rd17705;
	xor.b64  	%rd17737, %rd17736, %rd17720;
	xor.b64  	%rd17738, %rd17678, %rd17663;
	xor.b64  	%rd17739, %rd17738, %rd17693;
	xor.b64  	%rd17740, %rd17739, %rd17708;
	xor.b64  	%rd17741, %rd17740, %rd17723;
	xor.b64  	%rd17742, %rd17681, %rd17666;
	xor.b64  	%rd17743, %rd17742, %rd17696;
	xor.b64  	%rd17744, %rd17743, %rd17711;
	xor.b64  	%rd17745, %rd17744, %rd17726;
	xor.b64  	%rd17746, %rd17684, %rd17669;
	xor.b64  	%rd17747, %rd17746, %rd17699;
	xor.b64  	%rd17748, %rd17747, %rd17714;
	xor.b64  	%rd17749, %rd17748, %rd17729;
	xor.b64  	%rd17750, %rd17687, %rd17672;
	xor.b64  	%rd17751, %rd17750, %rd17702;
	xor.b64  	%rd17752, %rd17751, %rd17717;
	xor.b64  	%rd17753, %rd17752, %rd17732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12614}, %rd17741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12615,%dummy}, %rd17741;
	}
	shf.l.wrap.b32 	%r12616, %r12615, %r12614, 1;
	shf.l.wrap.b32 	%r12617, %r12614, %r12615, 1;
	mov.b64 	%rd17754, {%r12617, %r12616};
	xor.b64  	%rd17755, %rd17753, %rd17754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12618}, %rd17745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12619,%dummy}, %rd17745;
	}
	shf.l.wrap.b32 	%r12620, %r12619, %r12618, 1;
	shf.l.wrap.b32 	%r12621, %r12618, %r12619, 1;
	mov.b64 	%rd17756, {%r12621, %r12620};
	xor.b64  	%rd17757, %rd17756, %rd17737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12622}, %rd17749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12623,%dummy}, %rd17749;
	}
	shf.l.wrap.b32 	%r12624, %r12623, %r12622, 1;
	shf.l.wrap.b32 	%r12625, %r12622, %r12623, 1;
	mov.b64 	%rd17758, {%r12625, %r12624};
	xor.b64  	%rd17759, %rd17758, %rd17741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12626}, %rd17753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12627,%dummy}, %rd17753;
	}
	shf.l.wrap.b32 	%r12628, %r12627, %r12626, 1;
	shf.l.wrap.b32 	%r12629, %r12626, %r12627, 1;
	mov.b64 	%rd17760, {%r12629, %r12628};
	xor.b64  	%rd17761, %rd17760, %rd17745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12630}, %rd17737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12631,%dummy}, %rd17737;
	}
	shf.l.wrap.b32 	%r12632, %r12631, %r12630, 1;
	shf.l.wrap.b32 	%r12633, %r12630, %r12631, 1;
	mov.b64 	%rd17762, {%r12633, %r12632};
	xor.b64  	%rd17763, %rd17749, %rd17762;
	xor.b64  	%rd17764, %rd17755, %rd17733;
	xor.b64  	%rd17765, %rd17757, %rd17663;
	xor.b64  	%rd17766, %rd17759, %rd17666;
	xor.b64  	%rd17767, %rd17761, %rd17669;
	xor.b64  	%rd17768, %rd17763, %rd17672;
	xor.b64  	%rd17769, %rd17755, %rd17675;
	xor.b64  	%rd17770, %rd17757, %rd17678;
	xor.b64  	%rd17771, %rd17759, %rd17681;
	xor.b64  	%rd17772, %rd17761, %rd17684;
	xor.b64  	%rd17773, %rd17763, %rd17687;
	xor.b64  	%rd17774, %rd17755, %rd17690;
	xor.b64  	%rd17775, %rd17757, %rd17693;
	xor.b64  	%rd17776, %rd17759, %rd17696;
	xor.b64  	%rd17777, %rd17761, %rd17699;
	xor.b64  	%rd17778, %rd17763, %rd17702;
	xor.b64  	%rd17779, %rd17755, %rd17705;
	xor.b64  	%rd17780, %rd17757, %rd17708;
	xor.b64  	%rd17781, %rd17759, %rd17711;
	xor.b64  	%rd17782, %rd17761, %rd17714;
	xor.b64  	%rd17783, %rd17763, %rd17717;
	xor.b64  	%rd17784, %rd17755, %rd17720;
	xor.b64  	%rd17785, %rd17757, %rd17723;
	xor.b64  	%rd17786, %rd17759, %rd17726;
	xor.b64  	%rd17787, %rd17761, %rd17729;
	xor.b64  	%rd17788, %rd17763, %rd17732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12634,%dummy}, %rd17770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12635}, %rd17770;
	}
	shf.r.wrap.b32 	%r12636, %r12635, %r12634, 20;
	shf.r.wrap.b32 	%r12637, %r12634, %r12635, 20;
	mov.b64 	%rd17789, {%r12637, %r12636};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12638,%dummy}, %rd17776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12639}, %rd17776;
	}
	shf.r.wrap.b32 	%r12640, %r12639, %r12638, 21;
	shf.r.wrap.b32 	%r12641, %r12638, %r12639, 21;
	mov.b64 	%rd17790, {%r12641, %r12640};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12642}, %rd17782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12643,%dummy}, %rd17782;
	}
	shf.l.wrap.b32 	%r12644, %r12643, %r12642, 21;
	shf.l.wrap.b32 	%r12645, %r12642, %r12643, 21;
	mov.b64 	%rd17791, {%r12645, %r12644};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12646}, %rd17788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12647,%dummy}, %rd17788;
	}
	shf.l.wrap.b32 	%r12648, %r12647, %r12646, 14;
	shf.l.wrap.b32 	%r12649, %r12646, %r12647, 14;
	mov.b64 	%rd17792, {%r12649, %r12648};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12650}, %rd17767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12651,%dummy}, %rd17767;
	}
	shf.l.wrap.b32 	%r12652, %r12651, %r12650, 28;
	shf.l.wrap.b32 	%r12653, %r12650, %r12651, 28;
	mov.b64 	%rd17793, {%r12653, %r12652};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12654}, %rd17773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12655,%dummy}, %rd17773;
	}
	shf.l.wrap.b32 	%r12656, %r12655, %r12654, 20;
	shf.l.wrap.b32 	%r12657, %r12654, %r12655, 20;
	mov.b64 	%rd17794, {%r12657, %r12656};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12658}, %rd17774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12659,%dummy}, %rd17774;
	}
	shf.l.wrap.b32 	%r12660, %r12659, %r12658, 3;
	shf.l.wrap.b32 	%r12661, %r12658, %r12659, 3;
	mov.b64 	%rd17795, {%r12661, %r12660};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12662,%dummy}, %rd17780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12663}, %rd17780;
	}
	shf.r.wrap.b32 	%r12664, %r12663, %r12662, 19;
	shf.r.wrap.b32 	%r12665, %r12662, %r12663, 19;
	mov.b64 	%rd17796, {%r12665, %r12664};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12666,%dummy}, %rd17786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12667}, %rd17786;
	}
	shf.r.wrap.b32 	%r12668, %r12667, %r12666, 3;
	shf.r.wrap.b32 	%r12669, %r12666, %r12667, 3;
	mov.b64 	%rd17797, {%r12669, %r12668};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12670}, %rd17765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12671,%dummy}, %rd17765;
	}
	shf.l.wrap.b32 	%r12672, %r12671, %r12670, 1;
	shf.l.wrap.b32 	%r12673, %r12670, %r12671, 1;
	mov.b64 	%rd17798, {%r12673, %r12672};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12674}, %rd17771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12675,%dummy}, %rd17771;
	}
	shf.l.wrap.b32 	%r12676, %r12675, %r12674, 6;
	shf.l.wrap.b32 	%r12677, %r12674, %r12675, 6;
	mov.b64 	%rd17799, {%r12677, %r12676};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12678}, %rd17777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12679,%dummy}, %rd17777;
	}
	shf.l.wrap.b32 	%r12680, %r12679, %r12678, 25;
	shf.l.wrap.b32 	%r12681, %r12678, %r12679, 25;
	mov.b64 	%rd17800, {%r12681, %r12680};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12682}, %rd17783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12683,%dummy}, %rd17783;
	}
	shf.l.wrap.b32 	%r12684, %r12683, %r12682, 8;
	shf.l.wrap.b32 	%r12685, %r12682, %r12683, 8;
	mov.b64 	%rd17801, {%r12685, %r12684};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12686}, %rd17784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12687,%dummy}, %rd17784;
	}
	shf.l.wrap.b32 	%r12688, %r12687, %r12686, 18;
	shf.l.wrap.b32 	%r12689, %r12686, %r12687, 18;
	mov.b64 	%rd17802, {%r12689, %r12688};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12690}, %rd17768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12691,%dummy}, %rd17768;
	}
	shf.l.wrap.b32 	%r12692, %r12691, %r12690, 27;
	shf.l.wrap.b32 	%r12693, %r12690, %r12691, 27;
	mov.b64 	%rd17803, {%r12693, %r12692};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12694,%dummy}, %rd17769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12695}, %rd17769;
	}
	shf.r.wrap.b32 	%r12696, %r12695, %r12694, 28;
	shf.r.wrap.b32 	%r12697, %r12694, %r12695, 28;
	mov.b64 	%rd17804, {%r12697, %r12696};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12698}, %rd17775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12699,%dummy}, %rd17775;
	}
	shf.l.wrap.b32 	%r12700, %r12699, %r12698, 10;
	shf.l.wrap.b32 	%r12701, %r12698, %r12699, 10;
	mov.b64 	%rd17805, {%r12701, %r12700};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12702}, %rd17781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12703,%dummy}, %rd17781;
	}
	shf.l.wrap.b32 	%r12704, %r12703, %r12702, 15;
	shf.l.wrap.b32 	%r12705, %r12702, %r12703, 15;
	mov.b64 	%rd17806, {%r12705, %r12704};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12706,%dummy}, %rd17787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12707}, %rd17787;
	}
	shf.r.wrap.b32 	%r12708, %r12707, %r12706, 8;
	shf.r.wrap.b32 	%r12709, %r12706, %r12707, 8;
	mov.b64 	%rd17807, {%r12709, %r12708};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12710,%dummy}, %rd17766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12711}, %rd17766;
	}
	shf.r.wrap.b32 	%r12712, %r12711, %r12710, 2;
	shf.r.wrap.b32 	%r12713, %r12710, %r12711, 2;
	mov.b64 	%rd17808, {%r12713, %r12712};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12714,%dummy}, %rd17772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12715}, %rd17772;
	}
	shf.r.wrap.b32 	%r12716, %r12715, %r12714, 9;
	shf.r.wrap.b32 	%r12717, %r12714, %r12715, 9;
	mov.b64 	%rd17809, {%r12717, %r12716};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12718,%dummy}, %rd17778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12719}, %rd17778;
	}
	shf.r.wrap.b32 	%r12720, %r12719, %r12718, 25;
	shf.r.wrap.b32 	%r12721, %r12718, %r12719, 25;
	mov.b64 	%rd17810, {%r12721, %r12720};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12722,%dummy}, %rd17779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12723}, %rd17779;
	}
	shf.r.wrap.b32 	%r12724, %r12723, %r12722, 23;
	shf.r.wrap.b32 	%r12725, %r12722, %r12723, 23;
	mov.b64 	%rd17811, {%r12725, %r12724};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12726}, %rd17785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12727,%dummy}, %rd17785;
	}
	shf.l.wrap.b32 	%r12728, %r12727, %r12726, 2;
	shf.l.wrap.b32 	%r12729, %r12726, %r12727, 2;
	mov.b64 	%rd17812, {%r12729, %r12728};
	not.b64 	%rd17813, %rd17789;
	and.b64  	%rd17814, %rd17790, %rd17813;
	xor.b64  	%rd17815, %rd17814, %rd17764;
	not.b64 	%rd17816, %rd17790;
	and.b64  	%rd17817, %rd17791, %rd17816;
	xor.b64  	%rd17818, %rd17817, %rd17789;
	not.b64 	%rd17819, %rd17791;
	and.b64  	%rd17820, %rd17792, %rd17819;
	xor.b64  	%rd17821, %rd17820, %rd17790;
	not.b64 	%rd17822, %rd17792;
	and.b64  	%rd17823, %rd17764, %rd17822;
	xor.b64  	%rd17824, %rd17823, %rd17791;
	not.b64 	%rd17825, %rd17764;
	and.b64  	%rd17826, %rd17789, %rd17825;
	xor.b64  	%rd17827, %rd17826, %rd17792;
	not.b64 	%rd17828, %rd17794;
	and.b64  	%rd17829, %rd17795, %rd17828;
	xor.b64  	%rd17830, %rd17829, %rd17793;
	not.b64 	%rd17831, %rd17795;
	and.b64  	%rd17832, %rd17796, %rd17831;
	xor.b64  	%rd17833, %rd17832, %rd17794;
	not.b64 	%rd17834, %rd17796;
	and.b64  	%rd17835, %rd17797, %rd17834;
	xor.b64  	%rd17836, %rd17835, %rd17795;
	not.b64 	%rd17837, %rd17797;
	and.b64  	%rd17838, %rd17793, %rd17837;
	xor.b64  	%rd17839, %rd17838, %rd17796;
	not.b64 	%rd17840, %rd17793;
	and.b64  	%rd17841, %rd17794, %rd17840;
	xor.b64  	%rd17842, %rd17841, %rd17797;
	not.b64 	%rd17843, %rd17799;
	and.b64  	%rd17844, %rd17800, %rd17843;
	xor.b64  	%rd17845, %rd17844, %rd17798;
	not.b64 	%rd17846, %rd17800;
	and.b64  	%rd17847, %rd17801, %rd17846;
	xor.b64  	%rd17848, %rd17847, %rd17799;
	not.b64 	%rd17849, %rd17801;
	and.b64  	%rd17850, %rd17802, %rd17849;
	xor.b64  	%rd17851, %rd17850, %rd17800;
	not.b64 	%rd17852, %rd17802;
	and.b64  	%rd17853, %rd17798, %rd17852;
	xor.b64  	%rd17854, %rd17853, %rd17801;
	not.b64 	%rd17855, %rd17798;
	and.b64  	%rd17856, %rd17799, %rd17855;
	xor.b64  	%rd17857, %rd17856, %rd17802;
	not.b64 	%rd17858, %rd17804;
	and.b64  	%rd17859, %rd17805, %rd17858;
	xor.b64  	%rd17860, %rd17859, %rd17803;
	not.b64 	%rd17861, %rd17805;
	and.b64  	%rd17862, %rd17806, %rd17861;
	xor.b64  	%rd17863, %rd17862, %rd17804;
	not.b64 	%rd17864, %rd17806;
	and.b64  	%rd17865, %rd17807, %rd17864;
	xor.b64  	%rd17866, %rd17865, %rd17805;
	not.b64 	%rd17867, %rd17807;
	and.b64  	%rd17868, %rd17803, %rd17867;
	xor.b64  	%rd17869, %rd17868, %rd17806;
	not.b64 	%rd17870, %rd17803;
	and.b64  	%rd17871, %rd17804, %rd17870;
	xor.b64  	%rd17872, %rd17871, %rd17807;
	not.b64 	%rd17873, %rd17809;
	and.b64  	%rd17874, %rd17810, %rd17873;
	xor.b64  	%rd17875, %rd17874, %rd17808;
	not.b64 	%rd17876, %rd17810;
	and.b64  	%rd17877, %rd17811, %rd17876;
	xor.b64  	%rd17878, %rd17877, %rd17809;
	not.b64 	%rd17879, %rd17811;
	and.b64  	%rd17880, %rd17812, %rd17879;
	xor.b64  	%rd17881, %rd17880, %rd17810;
	not.b64 	%rd17882, %rd17812;
	and.b64  	%rd17883, %rd17808, %rd17882;
	xor.b64  	%rd17884, %rd17883, %rd17811;
	not.b64 	%rd17885, %rd17808;
	and.b64  	%rd17886, %rd17809, %rd17885;
	xor.b64  	%rd17887, %rd17886, %rd17812;
	xor.b64  	%rd17888, %rd17815, %rd28;
	xor.b64  	%rd17889, %rd17830, %rd17888;
	xor.b64  	%rd17890, %rd17889, %rd17845;
	xor.b64  	%rd17891, %rd17890, %rd17860;
	xor.b64  	%rd17892, %rd17891, %rd17875;
	xor.b64  	%rd17893, %rd17833, %rd17818;
	xor.b64  	%rd17894, %rd17893, %rd17848;
	xor.b64  	%rd17895, %rd17894, %rd17863;
	xor.b64  	%rd17896, %rd17895, %rd17878;
	xor.b64  	%rd17897, %rd17836, %rd17821;
	xor.b64  	%rd17898, %rd17897, %rd17851;
	xor.b64  	%rd17899, %rd17898, %rd17866;
	xor.b64  	%rd17900, %rd17899, %rd17881;
	xor.b64  	%rd17901, %rd17839, %rd17824;
	xor.b64  	%rd17902, %rd17901, %rd17854;
	xor.b64  	%rd17903, %rd17902, %rd17869;
	xor.b64  	%rd17904, %rd17903, %rd17884;
	xor.b64  	%rd17905, %rd17842, %rd17827;
	xor.b64  	%rd17906, %rd17905, %rd17857;
	xor.b64  	%rd17907, %rd17906, %rd17872;
	xor.b64  	%rd17908, %rd17907, %rd17887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12730}, %rd17896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12731,%dummy}, %rd17896;
	}
	shf.l.wrap.b32 	%r12732, %r12731, %r12730, 1;
	shf.l.wrap.b32 	%r12733, %r12730, %r12731, 1;
	mov.b64 	%rd17909, {%r12733, %r12732};
	xor.b64  	%rd17910, %rd17908, %rd17909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12734}, %rd17900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12735,%dummy}, %rd17900;
	}
	shf.l.wrap.b32 	%r12736, %r12735, %r12734, 1;
	shf.l.wrap.b32 	%r12737, %r12734, %r12735, 1;
	mov.b64 	%rd17911, {%r12737, %r12736};
	xor.b64  	%rd17912, %rd17911, %rd17892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12738}, %rd17904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12739,%dummy}, %rd17904;
	}
	shf.l.wrap.b32 	%r12740, %r12739, %r12738, 1;
	shf.l.wrap.b32 	%r12741, %r12738, %r12739, 1;
	mov.b64 	%rd17913, {%r12741, %r12740};
	xor.b64  	%rd17914, %rd17913, %rd17896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12742}, %rd17908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12743,%dummy}, %rd17908;
	}
	shf.l.wrap.b32 	%r12744, %r12743, %r12742, 1;
	shf.l.wrap.b32 	%r12745, %r12742, %r12743, 1;
	mov.b64 	%rd17915, {%r12745, %r12744};
	xor.b64  	%rd17916, %rd17915, %rd17900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12746}, %rd17892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12747,%dummy}, %rd17892;
	}
	shf.l.wrap.b32 	%r12748, %r12747, %r12746, 1;
	shf.l.wrap.b32 	%r12749, %r12746, %r12747, 1;
	mov.b64 	%rd17917, {%r12749, %r12748};
	xor.b64  	%rd17918, %rd17904, %rd17917;
	xor.b64  	%rd17919, %rd17910, %rd17888;
	xor.b64  	%rd17920, %rd17912, %rd17818;
	xor.b64  	%rd17921, %rd17914, %rd17821;
	xor.b64  	%rd17922, %rd17916, %rd17824;
	xor.b64  	%rd17923, %rd17918, %rd17827;
	xor.b64  	%rd17924, %rd17910, %rd17830;
	xor.b64  	%rd17925, %rd17912, %rd17833;
	xor.b64  	%rd17926, %rd17914, %rd17836;
	xor.b64  	%rd17927, %rd17916, %rd17839;
	xor.b64  	%rd17928, %rd17918, %rd17842;
	xor.b64  	%rd17929, %rd17910, %rd17845;
	xor.b64  	%rd17930, %rd17912, %rd17848;
	xor.b64  	%rd17931, %rd17914, %rd17851;
	xor.b64  	%rd17932, %rd17916, %rd17854;
	xor.b64  	%rd17933, %rd17918, %rd17857;
	xor.b64  	%rd17934, %rd17910, %rd17860;
	xor.b64  	%rd17935, %rd17912, %rd17863;
	xor.b64  	%rd17936, %rd17914, %rd17866;
	xor.b64  	%rd17937, %rd17916, %rd17869;
	xor.b64  	%rd17938, %rd17918, %rd17872;
	xor.b64  	%rd17939, %rd17910, %rd17875;
	xor.b64  	%rd17940, %rd17912, %rd17878;
	xor.b64  	%rd17941, %rd17914, %rd17881;
	xor.b64  	%rd17942, %rd17916, %rd17884;
	xor.b64  	%rd17943, %rd17918, %rd17887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12750,%dummy}, %rd17925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12751}, %rd17925;
	}
	shf.r.wrap.b32 	%r12752, %r12751, %r12750, 20;
	shf.r.wrap.b32 	%r12753, %r12750, %r12751, 20;
	mov.b64 	%rd17944, {%r12753, %r12752};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12754,%dummy}, %rd17931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12755}, %rd17931;
	}
	shf.r.wrap.b32 	%r12756, %r12755, %r12754, 21;
	shf.r.wrap.b32 	%r12757, %r12754, %r12755, 21;
	mov.b64 	%rd17945, {%r12757, %r12756};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12758}, %rd17937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12759,%dummy}, %rd17937;
	}
	shf.l.wrap.b32 	%r12760, %r12759, %r12758, 21;
	shf.l.wrap.b32 	%r12761, %r12758, %r12759, 21;
	mov.b64 	%rd17946, {%r12761, %r12760};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12762}, %rd17943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12763,%dummy}, %rd17943;
	}
	shf.l.wrap.b32 	%r12764, %r12763, %r12762, 14;
	shf.l.wrap.b32 	%r12765, %r12762, %r12763, 14;
	mov.b64 	%rd17947, {%r12765, %r12764};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12766}, %rd17922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12767,%dummy}, %rd17922;
	}
	shf.l.wrap.b32 	%r12768, %r12767, %r12766, 28;
	shf.l.wrap.b32 	%r12769, %r12766, %r12767, 28;
	mov.b64 	%rd17948, {%r12769, %r12768};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12770}, %rd17928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12771,%dummy}, %rd17928;
	}
	shf.l.wrap.b32 	%r12772, %r12771, %r12770, 20;
	shf.l.wrap.b32 	%r12773, %r12770, %r12771, 20;
	mov.b64 	%rd17949, {%r12773, %r12772};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12774}, %rd17929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12775,%dummy}, %rd17929;
	}
	shf.l.wrap.b32 	%r12776, %r12775, %r12774, 3;
	shf.l.wrap.b32 	%r12777, %r12774, %r12775, 3;
	mov.b64 	%rd17950, {%r12777, %r12776};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12778,%dummy}, %rd17935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12779}, %rd17935;
	}
	shf.r.wrap.b32 	%r12780, %r12779, %r12778, 19;
	shf.r.wrap.b32 	%r12781, %r12778, %r12779, 19;
	mov.b64 	%rd17951, {%r12781, %r12780};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12782,%dummy}, %rd17941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12783}, %rd17941;
	}
	shf.r.wrap.b32 	%r12784, %r12783, %r12782, 3;
	shf.r.wrap.b32 	%r12785, %r12782, %r12783, 3;
	mov.b64 	%rd17952, {%r12785, %r12784};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12786}, %rd17920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12787,%dummy}, %rd17920;
	}
	shf.l.wrap.b32 	%r12788, %r12787, %r12786, 1;
	shf.l.wrap.b32 	%r12789, %r12786, %r12787, 1;
	mov.b64 	%rd17953, {%r12789, %r12788};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12790}, %rd17926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12791,%dummy}, %rd17926;
	}
	shf.l.wrap.b32 	%r12792, %r12791, %r12790, 6;
	shf.l.wrap.b32 	%r12793, %r12790, %r12791, 6;
	mov.b64 	%rd17954, {%r12793, %r12792};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12794}, %rd17932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12795,%dummy}, %rd17932;
	}
	shf.l.wrap.b32 	%r12796, %r12795, %r12794, 25;
	shf.l.wrap.b32 	%r12797, %r12794, %r12795, 25;
	mov.b64 	%rd17955, {%r12797, %r12796};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12798}, %rd17938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12799,%dummy}, %rd17938;
	}
	shf.l.wrap.b32 	%r12800, %r12799, %r12798, 8;
	shf.l.wrap.b32 	%r12801, %r12798, %r12799, 8;
	mov.b64 	%rd17956, {%r12801, %r12800};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12802}, %rd17939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12803,%dummy}, %rd17939;
	}
	shf.l.wrap.b32 	%r12804, %r12803, %r12802, 18;
	shf.l.wrap.b32 	%r12805, %r12802, %r12803, 18;
	mov.b64 	%rd17957, {%r12805, %r12804};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12806}, %rd17923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12807,%dummy}, %rd17923;
	}
	shf.l.wrap.b32 	%r12808, %r12807, %r12806, 27;
	shf.l.wrap.b32 	%r12809, %r12806, %r12807, 27;
	mov.b64 	%rd17958, {%r12809, %r12808};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12810,%dummy}, %rd17924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12811}, %rd17924;
	}
	shf.r.wrap.b32 	%r12812, %r12811, %r12810, 28;
	shf.r.wrap.b32 	%r12813, %r12810, %r12811, 28;
	mov.b64 	%rd17959, {%r12813, %r12812};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12814}, %rd17930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12815,%dummy}, %rd17930;
	}
	shf.l.wrap.b32 	%r12816, %r12815, %r12814, 10;
	shf.l.wrap.b32 	%r12817, %r12814, %r12815, 10;
	mov.b64 	%rd17960, {%r12817, %r12816};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12818}, %rd17936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12819,%dummy}, %rd17936;
	}
	shf.l.wrap.b32 	%r12820, %r12819, %r12818, 15;
	shf.l.wrap.b32 	%r12821, %r12818, %r12819, 15;
	mov.b64 	%rd17961, {%r12821, %r12820};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12822,%dummy}, %rd17942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12823}, %rd17942;
	}
	shf.r.wrap.b32 	%r12824, %r12823, %r12822, 8;
	shf.r.wrap.b32 	%r12825, %r12822, %r12823, 8;
	mov.b64 	%rd17962, {%r12825, %r12824};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12826,%dummy}, %rd17921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12827}, %rd17921;
	}
	shf.r.wrap.b32 	%r12828, %r12827, %r12826, 2;
	shf.r.wrap.b32 	%r12829, %r12826, %r12827, 2;
	mov.b64 	%rd17963, {%r12829, %r12828};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12830,%dummy}, %rd17927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12831}, %rd17927;
	}
	shf.r.wrap.b32 	%r12832, %r12831, %r12830, 9;
	shf.r.wrap.b32 	%r12833, %r12830, %r12831, 9;
	mov.b64 	%rd17964, {%r12833, %r12832};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12834,%dummy}, %rd17933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12835}, %rd17933;
	}
	shf.r.wrap.b32 	%r12836, %r12835, %r12834, 25;
	shf.r.wrap.b32 	%r12837, %r12834, %r12835, 25;
	mov.b64 	%rd17965, {%r12837, %r12836};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12838,%dummy}, %rd17934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12839}, %rd17934;
	}
	shf.r.wrap.b32 	%r12840, %r12839, %r12838, 23;
	shf.r.wrap.b32 	%r12841, %r12838, %r12839, 23;
	mov.b64 	%rd17966, {%r12841, %r12840};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12842}, %rd17940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12843,%dummy}, %rd17940;
	}
	shf.l.wrap.b32 	%r12844, %r12843, %r12842, 2;
	shf.l.wrap.b32 	%r12845, %r12842, %r12843, 2;
	mov.b64 	%rd17967, {%r12845, %r12844};
	not.b64 	%rd17968, %rd17944;
	and.b64  	%rd17969, %rd17945, %rd17968;
	xor.b64  	%rd17970, %rd17969, %rd17919;
	not.b64 	%rd17971, %rd17945;
	and.b64  	%rd17972, %rd17946, %rd17971;
	xor.b64  	%rd17973, %rd17972, %rd17944;
	not.b64 	%rd17974, %rd17946;
	and.b64  	%rd17975, %rd17947, %rd17974;
	xor.b64  	%rd17976, %rd17975, %rd17945;
	not.b64 	%rd17977, %rd17947;
	and.b64  	%rd17978, %rd17919, %rd17977;
	xor.b64  	%rd17979, %rd17978, %rd17946;
	not.b64 	%rd17980, %rd17919;
	and.b64  	%rd17981, %rd17944, %rd17980;
	xor.b64  	%rd17982, %rd17981, %rd17947;
	not.b64 	%rd17983, %rd17949;
	and.b64  	%rd17984, %rd17950, %rd17983;
	xor.b64  	%rd17985, %rd17984, %rd17948;
	not.b64 	%rd17986, %rd17950;
	and.b64  	%rd17987, %rd17951, %rd17986;
	xor.b64  	%rd17988, %rd17987, %rd17949;
	not.b64 	%rd17989, %rd17951;
	and.b64  	%rd17990, %rd17952, %rd17989;
	xor.b64  	%rd17991, %rd17990, %rd17950;
	not.b64 	%rd17992, %rd17952;
	and.b64  	%rd17993, %rd17948, %rd17992;
	xor.b64  	%rd17994, %rd17993, %rd17951;
	not.b64 	%rd17995, %rd17948;
	and.b64  	%rd17996, %rd17949, %rd17995;
	xor.b64  	%rd17997, %rd17996, %rd17952;
	not.b64 	%rd17998, %rd17954;
	and.b64  	%rd17999, %rd17955, %rd17998;
	xor.b64  	%rd18000, %rd17999, %rd17953;
	not.b64 	%rd18001, %rd17955;
	and.b64  	%rd18002, %rd17956, %rd18001;
	xor.b64  	%rd18003, %rd18002, %rd17954;
	not.b64 	%rd18004, %rd17956;
	and.b64  	%rd18005, %rd17957, %rd18004;
	xor.b64  	%rd18006, %rd18005, %rd17955;
	not.b64 	%rd18007, %rd17957;
	and.b64  	%rd18008, %rd17953, %rd18007;
	xor.b64  	%rd18009, %rd18008, %rd17956;
	not.b64 	%rd18010, %rd17953;
	and.b64  	%rd18011, %rd17954, %rd18010;
	xor.b64  	%rd18012, %rd18011, %rd17957;
	not.b64 	%rd18013, %rd17959;
	and.b64  	%rd18014, %rd17960, %rd18013;
	xor.b64  	%rd18015, %rd18014, %rd17958;
	not.b64 	%rd18016, %rd17960;
	and.b64  	%rd18017, %rd17961, %rd18016;
	xor.b64  	%rd18018, %rd18017, %rd17959;
	not.b64 	%rd18019, %rd17961;
	and.b64  	%rd18020, %rd17962, %rd18019;
	xor.b64  	%rd18021, %rd18020, %rd17960;
	not.b64 	%rd18022, %rd17962;
	and.b64  	%rd18023, %rd17958, %rd18022;
	xor.b64  	%rd18024, %rd18023, %rd17961;
	not.b64 	%rd18025, %rd17958;
	and.b64  	%rd18026, %rd17959, %rd18025;
	xor.b64  	%rd18027, %rd18026, %rd17962;
	not.b64 	%rd18028, %rd17964;
	and.b64  	%rd18029, %rd17965, %rd18028;
	xor.b64  	%rd18030, %rd18029, %rd17963;
	not.b64 	%rd18031, %rd17965;
	and.b64  	%rd18032, %rd17966, %rd18031;
	xor.b64  	%rd18033, %rd18032, %rd17964;
	not.b64 	%rd18034, %rd17966;
	and.b64  	%rd18035, %rd17967, %rd18034;
	xor.b64  	%rd18036, %rd18035, %rd17965;
	not.b64 	%rd18037, %rd17967;
	and.b64  	%rd18038, %rd17963, %rd18037;
	xor.b64  	%rd18039, %rd18038, %rd17966;
	not.b64 	%rd18040, %rd17963;
	and.b64  	%rd18041, %rd17964, %rd18040;
	xor.b64  	%rd18042, %rd18041, %rd17967;
	xor.b64  	%rd18043, %rd17970, %rd29;
	xor.b64  	%rd18044, %rd17985, %rd18043;
	xor.b64  	%rd18045, %rd18044, %rd18000;
	xor.b64  	%rd18046, %rd18045, %rd18015;
	xor.b64  	%rd18047, %rd18046, %rd18030;
	xor.b64  	%rd18048, %rd17988, %rd17973;
	xor.b64  	%rd18049, %rd18048, %rd18003;
	xor.b64  	%rd18050, %rd18049, %rd18018;
	xor.b64  	%rd18051, %rd18050, %rd18033;
	xor.b64  	%rd18052, %rd17991, %rd17976;
	xor.b64  	%rd18053, %rd18052, %rd18006;
	xor.b64  	%rd18054, %rd18053, %rd18021;
	xor.b64  	%rd18055, %rd18054, %rd18036;
	xor.b64  	%rd18056, %rd17994, %rd17979;
	xor.b64  	%rd18057, %rd18056, %rd18009;
	xor.b64  	%rd18058, %rd18057, %rd18024;
	xor.b64  	%rd18059, %rd18058, %rd18039;
	xor.b64  	%rd18060, %rd17997, %rd17982;
	xor.b64  	%rd18061, %rd18060, %rd18012;
	xor.b64  	%rd18062, %rd18061, %rd18027;
	xor.b64  	%rd18063, %rd18062, %rd18042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12846}, %rd18051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12847,%dummy}, %rd18051;
	}
	shf.l.wrap.b32 	%r12848, %r12847, %r12846, 1;
	shf.l.wrap.b32 	%r12849, %r12846, %r12847, 1;
	mov.b64 	%rd18064, {%r12849, %r12848};
	xor.b64  	%rd18065, %rd18063, %rd18064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12850}, %rd18055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12851,%dummy}, %rd18055;
	}
	shf.l.wrap.b32 	%r12852, %r12851, %r12850, 1;
	shf.l.wrap.b32 	%r12853, %r12850, %r12851, 1;
	mov.b64 	%rd18066, {%r12853, %r12852};
	xor.b64  	%rd18067, %rd18066, %rd18047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12854}, %rd18059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12855,%dummy}, %rd18059;
	}
	shf.l.wrap.b32 	%r12856, %r12855, %r12854, 1;
	shf.l.wrap.b32 	%r12857, %r12854, %r12855, 1;
	mov.b64 	%rd18068, {%r12857, %r12856};
	xor.b64  	%rd18069, %rd18068, %rd18051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12858}, %rd18063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12859,%dummy}, %rd18063;
	}
	shf.l.wrap.b32 	%r12860, %r12859, %r12858, 1;
	shf.l.wrap.b32 	%r12861, %r12858, %r12859, 1;
	mov.b64 	%rd18070, {%r12861, %r12860};
	xor.b64  	%rd18071, %rd18070, %rd18055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12862}, %rd18047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12863,%dummy}, %rd18047;
	}
	shf.l.wrap.b32 	%r12864, %r12863, %r12862, 1;
	shf.l.wrap.b32 	%r12865, %r12862, %r12863, 1;
	mov.b64 	%rd18072, {%r12865, %r12864};
	xor.b64  	%rd18073, %rd18059, %rd18072;
	xor.b64  	%rd18074, %rd18065, %rd18043;
	xor.b64  	%rd18075, %rd18067, %rd17973;
	xor.b64  	%rd18076, %rd18069, %rd17976;
	xor.b64  	%rd18077, %rd18071, %rd17979;
	xor.b64  	%rd18078, %rd18073, %rd17982;
	xor.b64  	%rd18079, %rd18065, %rd17985;
	xor.b64  	%rd18080, %rd18067, %rd17988;
	xor.b64  	%rd18081, %rd18069, %rd17991;
	xor.b64  	%rd18082, %rd18071, %rd17994;
	xor.b64  	%rd18083, %rd18073, %rd17997;
	xor.b64  	%rd18084, %rd18065, %rd18000;
	xor.b64  	%rd18085, %rd18067, %rd18003;
	xor.b64  	%rd18086, %rd18069, %rd18006;
	xor.b64  	%rd18087, %rd18071, %rd18009;
	xor.b64  	%rd18088, %rd18073, %rd18012;
	xor.b64  	%rd18089, %rd18065, %rd18015;
	xor.b64  	%rd18090, %rd18067, %rd18018;
	xor.b64  	%rd18091, %rd18069, %rd18021;
	xor.b64  	%rd18092, %rd18071, %rd18024;
	xor.b64  	%rd18093, %rd18073, %rd18027;
	xor.b64  	%rd18094, %rd18065, %rd18030;
	xor.b64  	%rd18095, %rd18067, %rd18033;
	xor.b64  	%rd18096, %rd18069, %rd18036;
	xor.b64  	%rd18097, %rd18071, %rd18039;
	xor.b64  	%rd18098, %rd18073, %rd18042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12866,%dummy}, %rd18080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12867}, %rd18080;
	}
	shf.r.wrap.b32 	%r12868, %r12867, %r12866, 20;
	shf.r.wrap.b32 	%r12869, %r12866, %r12867, 20;
	mov.b64 	%rd18099, {%r12869, %r12868};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12870,%dummy}, %rd18086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12871}, %rd18086;
	}
	shf.r.wrap.b32 	%r12872, %r12871, %r12870, 21;
	shf.r.wrap.b32 	%r12873, %r12870, %r12871, 21;
	mov.b64 	%rd18100, {%r12873, %r12872};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12874}, %rd18092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12875,%dummy}, %rd18092;
	}
	shf.l.wrap.b32 	%r12876, %r12875, %r12874, 21;
	shf.l.wrap.b32 	%r12877, %r12874, %r12875, 21;
	mov.b64 	%rd18101, {%r12877, %r12876};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12878}, %rd18098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12879,%dummy}, %rd18098;
	}
	shf.l.wrap.b32 	%r12880, %r12879, %r12878, 14;
	shf.l.wrap.b32 	%r12881, %r12878, %r12879, 14;
	mov.b64 	%rd18102, {%r12881, %r12880};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12882}, %rd18077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12883,%dummy}, %rd18077;
	}
	shf.l.wrap.b32 	%r12884, %r12883, %r12882, 28;
	shf.l.wrap.b32 	%r12885, %r12882, %r12883, 28;
	mov.b64 	%rd18103, {%r12885, %r12884};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12886}, %rd18083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12887,%dummy}, %rd18083;
	}
	shf.l.wrap.b32 	%r12888, %r12887, %r12886, 20;
	shf.l.wrap.b32 	%r12889, %r12886, %r12887, 20;
	mov.b64 	%rd18104, {%r12889, %r12888};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12890}, %rd18084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12891,%dummy}, %rd18084;
	}
	shf.l.wrap.b32 	%r12892, %r12891, %r12890, 3;
	shf.l.wrap.b32 	%r12893, %r12890, %r12891, 3;
	mov.b64 	%rd18105, {%r12893, %r12892};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12894,%dummy}, %rd18090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12895}, %rd18090;
	}
	shf.r.wrap.b32 	%r12896, %r12895, %r12894, 19;
	shf.r.wrap.b32 	%r12897, %r12894, %r12895, 19;
	mov.b64 	%rd18106, {%r12897, %r12896};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12898,%dummy}, %rd18096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12899}, %rd18096;
	}
	shf.r.wrap.b32 	%r12900, %r12899, %r12898, 3;
	shf.r.wrap.b32 	%r12901, %r12898, %r12899, 3;
	mov.b64 	%rd18107, {%r12901, %r12900};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12902}, %rd18075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12903,%dummy}, %rd18075;
	}
	shf.l.wrap.b32 	%r12904, %r12903, %r12902, 1;
	shf.l.wrap.b32 	%r12905, %r12902, %r12903, 1;
	mov.b64 	%rd18108, {%r12905, %r12904};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12906}, %rd18081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12907,%dummy}, %rd18081;
	}
	shf.l.wrap.b32 	%r12908, %r12907, %r12906, 6;
	shf.l.wrap.b32 	%r12909, %r12906, %r12907, 6;
	mov.b64 	%rd18109, {%r12909, %r12908};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12910}, %rd18087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12911,%dummy}, %rd18087;
	}
	shf.l.wrap.b32 	%r12912, %r12911, %r12910, 25;
	shf.l.wrap.b32 	%r12913, %r12910, %r12911, 25;
	mov.b64 	%rd18110, {%r12913, %r12912};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12914}, %rd18093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12915,%dummy}, %rd18093;
	}
	shf.l.wrap.b32 	%r12916, %r12915, %r12914, 8;
	shf.l.wrap.b32 	%r12917, %r12914, %r12915, 8;
	mov.b64 	%rd18111, {%r12917, %r12916};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12918}, %rd18094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12919,%dummy}, %rd18094;
	}
	shf.l.wrap.b32 	%r12920, %r12919, %r12918, 18;
	shf.l.wrap.b32 	%r12921, %r12918, %r12919, 18;
	mov.b64 	%rd18112, {%r12921, %r12920};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12922}, %rd18078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12923,%dummy}, %rd18078;
	}
	shf.l.wrap.b32 	%r12924, %r12923, %r12922, 27;
	shf.l.wrap.b32 	%r12925, %r12922, %r12923, 27;
	mov.b64 	%rd18113, {%r12925, %r12924};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12926,%dummy}, %rd18079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12927}, %rd18079;
	}
	shf.r.wrap.b32 	%r12928, %r12927, %r12926, 28;
	shf.r.wrap.b32 	%r12929, %r12926, %r12927, 28;
	mov.b64 	%rd18114, {%r12929, %r12928};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12930}, %rd18085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12931,%dummy}, %rd18085;
	}
	shf.l.wrap.b32 	%r12932, %r12931, %r12930, 10;
	shf.l.wrap.b32 	%r12933, %r12930, %r12931, 10;
	mov.b64 	%rd18115, {%r12933, %r12932};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12934}, %rd18091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12935,%dummy}, %rd18091;
	}
	shf.l.wrap.b32 	%r12936, %r12935, %r12934, 15;
	shf.l.wrap.b32 	%r12937, %r12934, %r12935, 15;
	mov.b64 	%rd18116, {%r12937, %r12936};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12938,%dummy}, %rd18097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12939}, %rd18097;
	}
	shf.r.wrap.b32 	%r12940, %r12939, %r12938, 8;
	shf.r.wrap.b32 	%r12941, %r12938, %r12939, 8;
	mov.b64 	%rd18117, {%r12941, %r12940};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12942,%dummy}, %rd18076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12943}, %rd18076;
	}
	shf.r.wrap.b32 	%r12944, %r12943, %r12942, 2;
	shf.r.wrap.b32 	%r12945, %r12942, %r12943, 2;
	mov.b64 	%rd18118, {%r12945, %r12944};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12946,%dummy}, %rd18082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12947}, %rd18082;
	}
	shf.r.wrap.b32 	%r12948, %r12947, %r12946, 9;
	shf.r.wrap.b32 	%r12949, %r12946, %r12947, 9;
	mov.b64 	%rd18119, {%r12949, %r12948};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12950,%dummy}, %rd18088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12951}, %rd18088;
	}
	shf.r.wrap.b32 	%r12952, %r12951, %r12950, 25;
	shf.r.wrap.b32 	%r12953, %r12950, %r12951, 25;
	mov.b64 	%rd18120, {%r12953, %r12952};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12954,%dummy}, %rd18089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12955}, %rd18089;
	}
	shf.r.wrap.b32 	%r12956, %r12955, %r12954, 23;
	shf.r.wrap.b32 	%r12957, %r12954, %r12955, 23;
	mov.b64 	%rd18121, {%r12957, %r12956};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12958}, %rd18095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12959,%dummy}, %rd18095;
	}
	shf.l.wrap.b32 	%r12960, %r12959, %r12958, 2;
	shf.l.wrap.b32 	%r12961, %r12958, %r12959, 2;
	mov.b64 	%rd18122, {%r12961, %r12960};
	not.b64 	%rd18123, %rd18099;
	and.b64  	%rd18124, %rd18100, %rd18123;
	xor.b64  	%rd18125, %rd18124, %rd18074;
	not.b64 	%rd18126, %rd18100;
	and.b64  	%rd18127, %rd18101, %rd18126;
	xor.b64  	%rd18128, %rd18127, %rd18099;
	not.b64 	%rd18129, %rd18101;
	and.b64  	%rd18130, %rd18102, %rd18129;
	xor.b64  	%rd18131, %rd18130, %rd18100;
	not.b64 	%rd18132, %rd18102;
	and.b64  	%rd18133, %rd18074, %rd18132;
	xor.b64  	%rd18134, %rd18133, %rd18101;
	not.b64 	%rd18135, %rd18074;
	and.b64  	%rd18136, %rd18099, %rd18135;
	xor.b64  	%rd18137, %rd18136, %rd18102;
	not.b64 	%rd18138, %rd18104;
	and.b64  	%rd18139, %rd18105, %rd18138;
	xor.b64  	%rd18140, %rd18139, %rd18103;
	not.b64 	%rd18141, %rd18105;
	and.b64  	%rd18142, %rd18106, %rd18141;
	xor.b64  	%rd18143, %rd18142, %rd18104;
	not.b64 	%rd18144, %rd18106;
	and.b64  	%rd18145, %rd18107, %rd18144;
	xor.b64  	%rd18146, %rd18145, %rd18105;
	not.b64 	%rd18147, %rd18107;
	and.b64  	%rd18148, %rd18103, %rd18147;
	xor.b64  	%rd18149, %rd18148, %rd18106;
	not.b64 	%rd18150, %rd18103;
	and.b64  	%rd18151, %rd18104, %rd18150;
	xor.b64  	%rd18152, %rd18151, %rd18107;
	not.b64 	%rd18153, %rd18109;
	and.b64  	%rd18154, %rd18110, %rd18153;
	xor.b64  	%rd18155, %rd18154, %rd18108;
	not.b64 	%rd18156, %rd18110;
	and.b64  	%rd18157, %rd18111, %rd18156;
	xor.b64  	%rd18158, %rd18157, %rd18109;
	not.b64 	%rd18159, %rd18111;
	and.b64  	%rd18160, %rd18112, %rd18159;
	xor.b64  	%rd18161, %rd18160, %rd18110;
	not.b64 	%rd18162, %rd18112;
	and.b64  	%rd18163, %rd18108, %rd18162;
	xor.b64  	%rd18164, %rd18163, %rd18111;
	not.b64 	%rd18165, %rd18108;
	and.b64  	%rd18166, %rd18109, %rd18165;
	xor.b64  	%rd18167, %rd18166, %rd18112;
	not.b64 	%rd18168, %rd18114;
	and.b64  	%rd18169, %rd18115, %rd18168;
	xor.b64  	%rd18170, %rd18169, %rd18113;
	not.b64 	%rd18171, %rd18115;
	and.b64  	%rd18172, %rd18116, %rd18171;
	xor.b64  	%rd18173, %rd18172, %rd18114;
	not.b64 	%rd18174, %rd18116;
	and.b64  	%rd18175, %rd18117, %rd18174;
	xor.b64  	%rd18176, %rd18175, %rd18115;
	not.b64 	%rd18177, %rd18117;
	and.b64  	%rd18178, %rd18113, %rd18177;
	xor.b64  	%rd18179, %rd18178, %rd18116;
	not.b64 	%rd18180, %rd18113;
	and.b64  	%rd18181, %rd18114, %rd18180;
	xor.b64  	%rd18182, %rd18181, %rd18117;
	not.b64 	%rd18183, %rd18119;
	and.b64  	%rd18184, %rd18120, %rd18183;
	xor.b64  	%rd18185, %rd18184, %rd18118;
	not.b64 	%rd18186, %rd18120;
	and.b64  	%rd18187, %rd18121, %rd18186;
	xor.b64  	%rd18188, %rd18187, %rd18119;
	not.b64 	%rd18189, %rd18121;
	and.b64  	%rd18190, %rd18122, %rd18189;
	xor.b64  	%rd18191, %rd18190, %rd18120;
	not.b64 	%rd18192, %rd18122;
	and.b64  	%rd18193, %rd18118, %rd18192;
	xor.b64  	%rd18194, %rd18193, %rd18121;
	not.b64 	%rd18195, %rd18118;
	and.b64  	%rd18196, %rd18119, %rd18195;
	xor.b64  	%rd18197, %rd18196, %rd18122;
	xor.b64  	%rd18198, %rd18125, %rd30;
	xor.b64  	%rd18199, %rd18140, %rd18198;
	xor.b64  	%rd18200, %rd18199, %rd18155;
	xor.b64  	%rd18201, %rd18200, %rd18170;
	xor.b64  	%rd18202, %rd18201, %rd18185;
	xor.b64  	%rd18203, %rd18143, %rd18128;
	xor.b64  	%rd18204, %rd18203, %rd18158;
	xor.b64  	%rd18205, %rd18204, %rd18173;
	xor.b64  	%rd18206, %rd18205, %rd18188;
	xor.b64  	%rd18207, %rd18146, %rd18131;
	xor.b64  	%rd18208, %rd18207, %rd18161;
	xor.b64  	%rd18209, %rd18208, %rd18176;
	xor.b64  	%rd18210, %rd18209, %rd18191;
	xor.b64  	%rd18211, %rd18149, %rd18134;
	xor.b64  	%rd18212, %rd18211, %rd18164;
	xor.b64  	%rd18213, %rd18212, %rd18179;
	xor.b64  	%rd18214, %rd18213, %rd18194;
	xor.b64  	%rd18215, %rd18152, %rd18137;
	xor.b64  	%rd18216, %rd18215, %rd18167;
	xor.b64  	%rd18217, %rd18216, %rd18182;
	xor.b64  	%rd18218, %rd18217, %rd18197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12962}, %rd18206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12963,%dummy}, %rd18206;
	}
	shf.l.wrap.b32 	%r12964, %r12963, %r12962, 1;
	shf.l.wrap.b32 	%r12965, %r12962, %r12963, 1;
	mov.b64 	%rd18219, {%r12965, %r12964};
	xor.b64  	%rd18220, %rd18218, %rd18219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12966}, %rd18210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12967,%dummy}, %rd18210;
	}
	shf.l.wrap.b32 	%r12968, %r12967, %r12966, 1;
	shf.l.wrap.b32 	%r12969, %r12966, %r12967, 1;
	mov.b64 	%rd18221, {%r12969, %r12968};
	xor.b64  	%rd18222, %rd18221, %rd18202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12970}, %rd18214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12971,%dummy}, %rd18214;
	}
	shf.l.wrap.b32 	%r12972, %r12971, %r12970, 1;
	shf.l.wrap.b32 	%r12973, %r12970, %r12971, 1;
	mov.b64 	%rd18223, {%r12973, %r12972};
	xor.b64  	%rd18224, %rd18223, %rd18206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12974}, %rd18218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12975,%dummy}, %rd18218;
	}
	shf.l.wrap.b32 	%r12976, %r12975, %r12974, 1;
	shf.l.wrap.b32 	%r12977, %r12974, %r12975, 1;
	mov.b64 	%rd18225, {%r12977, %r12976};
	xor.b64  	%rd18226, %rd18225, %rd18210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12978}, %rd18202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12979,%dummy}, %rd18202;
	}
	shf.l.wrap.b32 	%r12980, %r12979, %r12978, 1;
	shf.l.wrap.b32 	%r12981, %r12978, %r12979, 1;
	mov.b64 	%rd18227, {%r12981, %r12980};
	xor.b64  	%rd18228, %rd18214, %rd18227;
	xor.b64  	%rd18229, %rd18220, %rd18198;
	xor.b64  	%rd18230, %rd18222, %rd18128;
	xor.b64  	%rd18231, %rd18224, %rd18131;
	xor.b64  	%rd18232, %rd18226, %rd18134;
	xor.b64  	%rd18233, %rd18228, %rd18137;
	xor.b64  	%rd18234, %rd18220, %rd18140;
	xor.b64  	%rd18235, %rd18222, %rd18143;
	xor.b64  	%rd18236, %rd18224, %rd18146;
	xor.b64  	%rd18237, %rd18226, %rd18149;
	xor.b64  	%rd18238, %rd18228, %rd18152;
	xor.b64  	%rd18239, %rd18220, %rd18155;
	xor.b64  	%rd18240, %rd18222, %rd18158;
	xor.b64  	%rd18241, %rd18224, %rd18161;
	xor.b64  	%rd18242, %rd18226, %rd18164;
	xor.b64  	%rd18243, %rd18228, %rd18167;
	xor.b64  	%rd18244, %rd18220, %rd18170;
	xor.b64  	%rd18245, %rd18222, %rd18173;
	xor.b64  	%rd18246, %rd18224, %rd18176;
	xor.b64  	%rd18247, %rd18226, %rd18179;
	xor.b64  	%rd18248, %rd18228, %rd18182;
	xor.b64  	%rd18249, %rd18220, %rd18185;
	xor.b64  	%rd18250, %rd18222, %rd18188;
	xor.b64  	%rd18251, %rd18224, %rd18191;
	xor.b64  	%rd18252, %rd18226, %rd18194;
	xor.b64  	%rd18253, %rd18228, %rd18197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12982,%dummy}, %rd18235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12983}, %rd18235;
	}
	shf.r.wrap.b32 	%r12984, %r12983, %r12982, 20;
	shf.r.wrap.b32 	%r12985, %r12982, %r12983, 20;
	mov.b64 	%rd18254, {%r12985, %r12984};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12986,%dummy}, %rd18241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12987}, %rd18241;
	}
	shf.r.wrap.b32 	%r12988, %r12987, %r12986, 21;
	shf.r.wrap.b32 	%r12989, %r12986, %r12987, 21;
	mov.b64 	%rd18255, {%r12989, %r12988};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12990}, %rd18247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12991,%dummy}, %rd18247;
	}
	shf.l.wrap.b32 	%r12992, %r12991, %r12990, 21;
	shf.l.wrap.b32 	%r12993, %r12990, %r12991, 21;
	mov.b64 	%rd18256, {%r12993, %r12992};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12994}, %rd18253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12995,%dummy}, %rd18253;
	}
	shf.l.wrap.b32 	%r12996, %r12995, %r12994, 14;
	shf.l.wrap.b32 	%r12997, %r12994, %r12995, 14;
	mov.b64 	%rd18257, {%r12997, %r12996};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12998}, %rd18232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12999,%dummy}, %rd18232;
	}
	shf.l.wrap.b32 	%r13000, %r12999, %r12998, 28;
	shf.l.wrap.b32 	%r13001, %r12998, %r12999, 28;
	mov.b64 	%rd18258, {%r13001, %r13000};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13002}, %rd18238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13003,%dummy}, %rd18238;
	}
	shf.l.wrap.b32 	%r13004, %r13003, %r13002, 20;
	shf.l.wrap.b32 	%r13005, %r13002, %r13003, 20;
	mov.b64 	%rd18259, {%r13005, %r13004};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13006}, %rd18239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13007,%dummy}, %rd18239;
	}
	shf.l.wrap.b32 	%r13008, %r13007, %r13006, 3;
	shf.l.wrap.b32 	%r13009, %r13006, %r13007, 3;
	mov.b64 	%rd18260, {%r13009, %r13008};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13010,%dummy}, %rd18245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13011}, %rd18245;
	}
	shf.r.wrap.b32 	%r13012, %r13011, %r13010, 19;
	shf.r.wrap.b32 	%r13013, %r13010, %r13011, 19;
	mov.b64 	%rd18261, {%r13013, %r13012};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13014,%dummy}, %rd18251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13015}, %rd18251;
	}
	shf.r.wrap.b32 	%r13016, %r13015, %r13014, 3;
	shf.r.wrap.b32 	%r13017, %r13014, %r13015, 3;
	mov.b64 	%rd18262, {%r13017, %r13016};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13018}, %rd18230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13019,%dummy}, %rd18230;
	}
	shf.l.wrap.b32 	%r13020, %r13019, %r13018, 1;
	shf.l.wrap.b32 	%r13021, %r13018, %r13019, 1;
	mov.b64 	%rd18263, {%r13021, %r13020};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13022}, %rd18236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13023,%dummy}, %rd18236;
	}
	shf.l.wrap.b32 	%r13024, %r13023, %r13022, 6;
	shf.l.wrap.b32 	%r13025, %r13022, %r13023, 6;
	mov.b64 	%rd18264, {%r13025, %r13024};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13026}, %rd18242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13027,%dummy}, %rd18242;
	}
	shf.l.wrap.b32 	%r13028, %r13027, %r13026, 25;
	shf.l.wrap.b32 	%r13029, %r13026, %r13027, 25;
	mov.b64 	%rd18265, {%r13029, %r13028};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13030}, %rd18248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13031,%dummy}, %rd18248;
	}
	shf.l.wrap.b32 	%r13032, %r13031, %r13030, 8;
	shf.l.wrap.b32 	%r13033, %r13030, %r13031, 8;
	mov.b64 	%rd18266, {%r13033, %r13032};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13034}, %rd18249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13035,%dummy}, %rd18249;
	}
	shf.l.wrap.b32 	%r13036, %r13035, %r13034, 18;
	shf.l.wrap.b32 	%r13037, %r13034, %r13035, 18;
	mov.b64 	%rd18267, {%r13037, %r13036};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13038}, %rd18233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13039,%dummy}, %rd18233;
	}
	shf.l.wrap.b32 	%r13040, %r13039, %r13038, 27;
	shf.l.wrap.b32 	%r13041, %r13038, %r13039, 27;
	mov.b64 	%rd18268, {%r13041, %r13040};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13042,%dummy}, %rd18234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13043}, %rd18234;
	}
	shf.r.wrap.b32 	%r13044, %r13043, %r13042, 28;
	shf.r.wrap.b32 	%r13045, %r13042, %r13043, 28;
	mov.b64 	%rd18269, {%r13045, %r13044};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13046}, %rd18240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13047,%dummy}, %rd18240;
	}
	shf.l.wrap.b32 	%r13048, %r13047, %r13046, 10;
	shf.l.wrap.b32 	%r13049, %r13046, %r13047, 10;
	mov.b64 	%rd18270, {%r13049, %r13048};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13050}, %rd18246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13051,%dummy}, %rd18246;
	}
	shf.l.wrap.b32 	%r13052, %r13051, %r13050, 15;
	shf.l.wrap.b32 	%r13053, %r13050, %r13051, 15;
	mov.b64 	%rd18271, {%r13053, %r13052};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13054,%dummy}, %rd18252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13055}, %rd18252;
	}
	shf.r.wrap.b32 	%r13056, %r13055, %r13054, 8;
	shf.r.wrap.b32 	%r13057, %r13054, %r13055, 8;
	mov.b64 	%rd18272, {%r13057, %r13056};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13058,%dummy}, %rd18231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13059}, %rd18231;
	}
	shf.r.wrap.b32 	%r13060, %r13059, %r13058, 2;
	shf.r.wrap.b32 	%r13061, %r13058, %r13059, 2;
	mov.b64 	%rd18273, {%r13061, %r13060};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13062,%dummy}, %rd18237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13063}, %rd18237;
	}
	shf.r.wrap.b32 	%r13064, %r13063, %r13062, 9;
	shf.r.wrap.b32 	%r13065, %r13062, %r13063, 9;
	mov.b64 	%rd18274, {%r13065, %r13064};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13066,%dummy}, %rd18243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13067}, %rd18243;
	}
	shf.r.wrap.b32 	%r13068, %r13067, %r13066, 25;
	shf.r.wrap.b32 	%r13069, %r13066, %r13067, 25;
	mov.b64 	%rd18275, {%r13069, %r13068};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13070,%dummy}, %rd18244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13071}, %rd18244;
	}
	shf.r.wrap.b32 	%r13072, %r13071, %r13070, 23;
	shf.r.wrap.b32 	%r13073, %r13070, %r13071, 23;
	mov.b64 	%rd18276, {%r13073, %r13072};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13074}, %rd18250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13075,%dummy}, %rd18250;
	}
	shf.l.wrap.b32 	%r13076, %r13075, %r13074, 2;
	shf.l.wrap.b32 	%r13077, %r13074, %r13075, 2;
	mov.b64 	%rd18277, {%r13077, %r13076};
	not.b64 	%rd18278, %rd18254;
	and.b64  	%rd18279, %rd18255, %rd18278;
	xor.b64  	%rd18280, %rd18279, %rd18229;
	not.b64 	%rd18281, %rd18255;
	and.b64  	%rd18282, %rd18256, %rd18281;
	xor.b64  	%rd18283, %rd18282, %rd18254;
	not.b64 	%rd18284, %rd18256;
	and.b64  	%rd18285, %rd18257, %rd18284;
	xor.b64  	%rd18286, %rd18285, %rd18255;
	not.b64 	%rd18287, %rd18257;
	and.b64  	%rd18288, %rd18229, %rd18287;
	xor.b64  	%rd18289, %rd18288, %rd18256;
	not.b64 	%rd18290, %rd18229;
	and.b64  	%rd18291, %rd18254, %rd18290;
	xor.b64  	%rd18292, %rd18291, %rd18257;
	not.b64 	%rd18293, %rd18259;
	and.b64  	%rd18294, %rd18260, %rd18293;
	xor.b64  	%rd18295, %rd18294, %rd18258;
	not.b64 	%rd18296, %rd18260;
	and.b64  	%rd18297, %rd18261, %rd18296;
	xor.b64  	%rd18298, %rd18297, %rd18259;
	not.b64 	%rd18299, %rd18261;
	and.b64  	%rd18300, %rd18262, %rd18299;
	xor.b64  	%rd18301, %rd18300, %rd18260;
	not.b64 	%rd18302, %rd18262;
	and.b64  	%rd18303, %rd18258, %rd18302;
	xor.b64  	%rd18304, %rd18303, %rd18261;
	not.b64 	%rd18305, %rd18258;
	and.b64  	%rd18306, %rd18259, %rd18305;
	xor.b64  	%rd18307, %rd18306, %rd18262;
	not.b64 	%rd18308, %rd18264;
	and.b64  	%rd18309, %rd18265, %rd18308;
	xor.b64  	%rd18310, %rd18309, %rd18263;
	not.b64 	%rd18311, %rd18265;
	and.b64  	%rd18312, %rd18266, %rd18311;
	xor.b64  	%rd18313, %rd18312, %rd18264;
	not.b64 	%rd18314, %rd18266;
	and.b64  	%rd18315, %rd18267, %rd18314;
	xor.b64  	%rd18316, %rd18315, %rd18265;
	not.b64 	%rd18317, %rd18267;
	and.b64  	%rd18318, %rd18263, %rd18317;
	xor.b64  	%rd18319, %rd18318, %rd18266;
	not.b64 	%rd18320, %rd18263;
	and.b64  	%rd18321, %rd18264, %rd18320;
	xor.b64  	%rd18322, %rd18321, %rd18267;
	not.b64 	%rd18323, %rd18269;
	and.b64  	%rd18324, %rd18270, %rd18323;
	xor.b64  	%rd18325, %rd18324, %rd18268;
	not.b64 	%rd18326, %rd18270;
	and.b64  	%rd18327, %rd18271, %rd18326;
	xor.b64  	%rd18328, %rd18327, %rd18269;
	not.b64 	%rd18329, %rd18271;
	and.b64  	%rd18330, %rd18272, %rd18329;
	xor.b64  	%rd18331, %rd18330, %rd18270;
	not.b64 	%rd18332, %rd18272;
	and.b64  	%rd18333, %rd18268, %rd18332;
	xor.b64  	%rd18334, %rd18333, %rd18271;
	not.b64 	%rd18335, %rd18268;
	and.b64  	%rd18336, %rd18269, %rd18335;
	xor.b64  	%rd18337, %rd18336, %rd18272;
	not.b64 	%rd18338, %rd18274;
	and.b64  	%rd18339, %rd18275, %rd18338;
	xor.b64  	%rd18340, %rd18339, %rd18273;
	not.b64 	%rd18341, %rd18275;
	and.b64  	%rd18342, %rd18276, %rd18341;
	xor.b64  	%rd18343, %rd18342, %rd18274;
	not.b64 	%rd18344, %rd18276;
	and.b64  	%rd18345, %rd18277, %rd18344;
	xor.b64  	%rd18346, %rd18345, %rd18275;
	not.b64 	%rd18347, %rd18277;
	and.b64  	%rd18348, %rd18273, %rd18347;
	xor.b64  	%rd18349, %rd18348, %rd18276;
	not.b64 	%rd18350, %rd18273;
	and.b64  	%rd18351, %rd18274, %rd18350;
	xor.b64  	%rd18352, %rd18351, %rd18277;
	xor.b64  	%rd18353, %rd18280, %rd31;
	xor.b64  	%rd18354, %rd18295, %rd18353;
	xor.b64  	%rd18355, %rd18354, %rd18310;
	xor.b64  	%rd18356, %rd18355, %rd18325;
	xor.b64  	%rd18357, %rd18356, %rd18340;
	xor.b64  	%rd18358, %rd18298, %rd18283;
	xor.b64  	%rd18359, %rd18358, %rd18313;
	xor.b64  	%rd18360, %rd18359, %rd18328;
	xor.b64  	%rd18361, %rd18360, %rd18343;
	xor.b64  	%rd18362, %rd18301, %rd18286;
	xor.b64  	%rd18363, %rd18362, %rd18316;
	xor.b64  	%rd18364, %rd18363, %rd18331;
	xor.b64  	%rd18365, %rd18364, %rd18346;
	xor.b64  	%rd18366, %rd18304, %rd18289;
	xor.b64  	%rd18367, %rd18366, %rd18319;
	xor.b64  	%rd18368, %rd18367, %rd18334;
	xor.b64  	%rd18369, %rd18368, %rd18349;
	xor.b64  	%rd18370, %rd18307, %rd18292;
	xor.b64  	%rd18371, %rd18370, %rd18322;
	xor.b64  	%rd18372, %rd18371, %rd18337;
	xor.b64  	%rd18373, %rd18372, %rd18352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13078}, %rd18361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13079,%dummy}, %rd18361;
	}
	shf.l.wrap.b32 	%r13080, %r13079, %r13078, 1;
	shf.l.wrap.b32 	%r13081, %r13078, %r13079, 1;
	mov.b64 	%rd18374, {%r13081, %r13080};
	xor.b64  	%rd18375, %rd18373, %rd18374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13082}, %rd18365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13083,%dummy}, %rd18365;
	}
	shf.l.wrap.b32 	%r13084, %r13083, %r13082, 1;
	shf.l.wrap.b32 	%r13085, %r13082, %r13083, 1;
	mov.b64 	%rd18376, {%r13085, %r13084};
	xor.b64  	%rd18377, %rd18376, %rd18357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13086}, %rd18369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13087,%dummy}, %rd18369;
	}
	shf.l.wrap.b32 	%r13088, %r13087, %r13086, 1;
	shf.l.wrap.b32 	%r13089, %r13086, %r13087, 1;
	mov.b64 	%rd18378, {%r13089, %r13088};
	xor.b64  	%rd18379, %rd18378, %rd18361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13090}, %rd18373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13091,%dummy}, %rd18373;
	}
	shf.l.wrap.b32 	%r13092, %r13091, %r13090, 1;
	shf.l.wrap.b32 	%r13093, %r13090, %r13091, 1;
	mov.b64 	%rd18380, {%r13093, %r13092};
	xor.b64  	%rd18381, %rd18380, %rd18365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13094}, %rd18357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13095,%dummy}, %rd18357;
	}
	shf.l.wrap.b32 	%r13096, %r13095, %r13094, 1;
	shf.l.wrap.b32 	%r13097, %r13094, %r13095, 1;
	mov.b64 	%rd18382, {%r13097, %r13096};
	xor.b64  	%rd18383, %rd18369, %rd18382;
	xor.b64  	%rd18384, %rd18375, %rd18353;
	xor.b64  	%rd18385, %rd18377, %rd18283;
	xor.b64  	%rd18386, %rd18379, %rd18286;
	xor.b64  	%rd18387, %rd18381, %rd18289;
	xor.b64  	%rd18388, %rd18383, %rd18292;
	xor.b64  	%rd18389, %rd18375, %rd18295;
	xor.b64  	%rd18390, %rd18377, %rd18298;
	xor.b64  	%rd18391, %rd18379, %rd18301;
	xor.b64  	%rd18392, %rd18381, %rd18304;
	xor.b64  	%rd18393, %rd18383, %rd18307;
	xor.b64  	%rd18394, %rd18375, %rd18310;
	xor.b64  	%rd18395, %rd18377, %rd18313;
	xor.b64  	%rd18396, %rd18379, %rd18316;
	xor.b64  	%rd18397, %rd18381, %rd18319;
	xor.b64  	%rd18398, %rd18383, %rd18322;
	xor.b64  	%rd18399, %rd18375, %rd18325;
	xor.b64  	%rd18400, %rd18377, %rd18328;
	xor.b64  	%rd18401, %rd18379, %rd18331;
	xor.b64  	%rd18402, %rd18381, %rd18334;
	xor.b64  	%rd18403, %rd18383, %rd18337;
	xor.b64  	%rd18404, %rd18375, %rd18340;
	xor.b64  	%rd18405, %rd18377, %rd18343;
	xor.b64  	%rd18406, %rd18379, %rd18346;
	xor.b64  	%rd18407, %rd18381, %rd18349;
	xor.b64  	%rd18408, %rd18383, %rd18352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13098,%dummy}, %rd18390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13099}, %rd18390;
	}
	shf.r.wrap.b32 	%r13100, %r13099, %r13098, 20;
	shf.r.wrap.b32 	%r13101, %r13098, %r13099, 20;
	mov.b64 	%rd18409, {%r13101, %r13100};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13102,%dummy}, %rd18396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13103}, %rd18396;
	}
	shf.r.wrap.b32 	%r13104, %r13103, %r13102, 21;
	shf.r.wrap.b32 	%r13105, %r13102, %r13103, 21;
	mov.b64 	%rd18410, {%r13105, %r13104};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13106}, %rd18402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13107,%dummy}, %rd18402;
	}
	shf.l.wrap.b32 	%r13108, %r13107, %r13106, 21;
	shf.l.wrap.b32 	%r13109, %r13106, %r13107, 21;
	mov.b64 	%rd18411, {%r13109, %r13108};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13110}, %rd18408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13111,%dummy}, %rd18408;
	}
	shf.l.wrap.b32 	%r13112, %r13111, %r13110, 14;
	shf.l.wrap.b32 	%r13113, %r13110, %r13111, 14;
	mov.b64 	%rd18412, {%r13113, %r13112};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13114}, %rd18387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13115,%dummy}, %rd18387;
	}
	shf.l.wrap.b32 	%r13116, %r13115, %r13114, 28;
	shf.l.wrap.b32 	%r13117, %r13114, %r13115, 28;
	mov.b64 	%rd18413, {%r13117, %r13116};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13118}, %rd18393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13119,%dummy}, %rd18393;
	}
	shf.l.wrap.b32 	%r13120, %r13119, %r13118, 20;
	shf.l.wrap.b32 	%r13121, %r13118, %r13119, 20;
	mov.b64 	%rd18414, {%r13121, %r13120};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13122}, %rd18394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13123,%dummy}, %rd18394;
	}
	shf.l.wrap.b32 	%r13124, %r13123, %r13122, 3;
	shf.l.wrap.b32 	%r13125, %r13122, %r13123, 3;
	mov.b64 	%rd18415, {%r13125, %r13124};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13126,%dummy}, %rd18400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13127}, %rd18400;
	}
	shf.r.wrap.b32 	%r13128, %r13127, %r13126, 19;
	shf.r.wrap.b32 	%r13129, %r13126, %r13127, 19;
	mov.b64 	%rd18416, {%r13129, %r13128};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13130,%dummy}, %rd18406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13131}, %rd18406;
	}
	shf.r.wrap.b32 	%r13132, %r13131, %r13130, 3;
	shf.r.wrap.b32 	%r13133, %r13130, %r13131, 3;
	mov.b64 	%rd18417, {%r13133, %r13132};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13134}, %rd18385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13135,%dummy}, %rd18385;
	}
	shf.l.wrap.b32 	%r13136, %r13135, %r13134, 1;
	shf.l.wrap.b32 	%r13137, %r13134, %r13135, 1;
	mov.b64 	%rd18418, {%r13137, %r13136};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13138}, %rd18391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13139,%dummy}, %rd18391;
	}
	shf.l.wrap.b32 	%r13140, %r13139, %r13138, 6;
	shf.l.wrap.b32 	%r13141, %r13138, %r13139, 6;
	mov.b64 	%rd18419, {%r13141, %r13140};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13142}, %rd18397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13143,%dummy}, %rd18397;
	}
	shf.l.wrap.b32 	%r13144, %r13143, %r13142, 25;
	shf.l.wrap.b32 	%r13145, %r13142, %r13143, 25;
	mov.b64 	%rd18420, {%r13145, %r13144};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13146}, %rd18403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13147,%dummy}, %rd18403;
	}
	shf.l.wrap.b32 	%r13148, %r13147, %r13146, 8;
	shf.l.wrap.b32 	%r13149, %r13146, %r13147, 8;
	mov.b64 	%rd18421, {%r13149, %r13148};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13150}, %rd18404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13151,%dummy}, %rd18404;
	}
	shf.l.wrap.b32 	%r13152, %r13151, %r13150, 18;
	shf.l.wrap.b32 	%r13153, %r13150, %r13151, 18;
	mov.b64 	%rd18422, {%r13153, %r13152};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13154}, %rd18388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13155,%dummy}, %rd18388;
	}
	shf.l.wrap.b32 	%r13156, %r13155, %r13154, 27;
	shf.l.wrap.b32 	%r13157, %r13154, %r13155, 27;
	mov.b64 	%rd18423, {%r13157, %r13156};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13158,%dummy}, %rd18389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13159}, %rd18389;
	}
	shf.r.wrap.b32 	%r13160, %r13159, %r13158, 28;
	shf.r.wrap.b32 	%r13161, %r13158, %r13159, 28;
	mov.b64 	%rd18424, {%r13161, %r13160};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13162}, %rd18395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13163,%dummy}, %rd18395;
	}
	shf.l.wrap.b32 	%r13164, %r13163, %r13162, 10;
	shf.l.wrap.b32 	%r13165, %r13162, %r13163, 10;
	mov.b64 	%rd18425, {%r13165, %r13164};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13166}, %rd18401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13167,%dummy}, %rd18401;
	}
	shf.l.wrap.b32 	%r13168, %r13167, %r13166, 15;
	shf.l.wrap.b32 	%r13169, %r13166, %r13167, 15;
	mov.b64 	%rd18426, {%r13169, %r13168};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13170,%dummy}, %rd18407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13171}, %rd18407;
	}
	shf.r.wrap.b32 	%r13172, %r13171, %r13170, 8;
	shf.r.wrap.b32 	%r13173, %r13170, %r13171, 8;
	mov.b64 	%rd18427, {%r13173, %r13172};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13174,%dummy}, %rd18386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13175}, %rd18386;
	}
	shf.r.wrap.b32 	%r13176, %r13175, %r13174, 2;
	shf.r.wrap.b32 	%r13177, %r13174, %r13175, 2;
	mov.b64 	%rd18428, {%r13177, %r13176};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13178,%dummy}, %rd18392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13179}, %rd18392;
	}
	shf.r.wrap.b32 	%r13180, %r13179, %r13178, 9;
	shf.r.wrap.b32 	%r13181, %r13178, %r13179, 9;
	mov.b64 	%rd18429, {%r13181, %r13180};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13182,%dummy}, %rd18398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13183}, %rd18398;
	}
	shf.r.wrap.b32 	%r13184, %r13183, %r13182, 25;
	shf.r.wrap.b32 	%r13185, %r13182, %r13183, 25;
	mov.b64 	%rd18430, {%r13185, %r13184};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13186,%dummy}, %rd18399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13187}, %rd18399;
	}
	shf.r.wrap.b32 	%r13188, %r13187, %r13186, 23;
	shf.r.wrap.b32 	%r13189, %r13186, %r13187, 23;
	mov.b64 	%rd18431, {%r13189, %r13188};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13190}, %rd18405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13191,%dummy}, %rd18405;
	}
	shf.l.wrap.b32 	%r13192, %r13191, %r13190, 2;
	shf.l.wrap.b32 	%r13193, %r13190, %r13191, 2;
	mov.b64 	%rd18432, {%r13193, %r13192};
	not.b64 	%rd18433, %rd18409;
	and.b64  	%rd18434, %rd18410, %rd18433;
	xor.b64  	%rd18435, %rd18434, %rd18384;
	not.b64 	%rd18436, %rd18410;
	and.b64  	%rd18437, %rd18411, %rd18436;
	xor.b64  	%rd18438, %rd18437, %rd18409;
	not.b64 	%rd18439, %rd18411;
	and.b64  	%rd18440, %rd18412, %rd18439;
	xor.b64  	%rd18441, %rd18440, %rd18410;
	not.b64 	%rd18442, %rd18412;
	and.b64  	%rd18443, %rd18384, %rd18442;
	xor.b64  	%rd18444, %rd18443, %rd18411;
	not.b64 	%rd18445, %rd18384;
	and.b64  	%rd18446, %rd18409, %rd18445;
	xor.b64  	%rd18447, %rd18446, %rd18412;
	not.b64 	%rd18448, %rd18414;
	and.b64  	%rd18449, %rd18415, %rd18448;
	xor.b64  	%rd18450, %rd18449, %rd18413;
	not.b64 	%rd18451, %rd18415;
	and.b64  	%rd18452, %rd18416, %rd18451;
	xor.b64  	%rd18453, %rd18452, %rd18414;
	not.b64 	%rd18454, %rd18416;
	and.b64  	%rd18455, %rd18417, %rd18454;
	xor.b64  	%rd18456, %rd18455, %rd18415;
	not.b64 	%rd18457, %rd18417;
	and.b64  	%rd18458, %rd18413, %rd18457;
	xor.b64  	%rd18459, %rd18458, %rd18416;
	not.b64 	%rd18460, %rd18413;
	and.b64  	%rd18461, %rd18414, %rd18460;
	xor.b64  	%rd18462, %rd18461, %rd18417;
	not.b64 	%rd18463, %rd18419;
	and.b64  	%rd18464, %rd18420, %rd18463;
	xor.b64  	%rd18465, %rd18464, %rd18418;
	not.b64 	%rd18466, %rd18420;
	and.b64  	%rd18467, %rd18421, %rd18466;
	xor.b64  	%rd18468, %rd18467, %rd18419;
	not.b64 	%rd18469, %rd18421;
	and.b64  	%rd18470, %rd18422, %rd18469;
	xor.b64  	%rd18471, %rd18470, %rd18420;
	not.b64 	%rd18472, %rd18422;
	and.b64  	%rd18473, %rd18418, %rd18472;
	xor.b64  	%rd18474, %rd18473, %rd18421;
	not.b64 	%rd18475, %rd18418;
	and.b64  	%rd18476, %rd18419, %rd18475;
	xor.b64  	%rd18477, %rd18476, %rd18422;
	not.b64 	%rd18478, %rd18424;
	and.b64  	%rd18479, %rd18425, %rd18478;
	xor.b64  	%rd18480, %rd18479, %rd18423;
	not.b64 	%rd18481, %rd18425;
	and.b64  	%rd18482, %rd18426, %rd18481;
	xor.b64  	%rd18483, %rd18482, %rd18424;
	not.b64 	%rd18484, %rd18426;
	and.b64  	%rd18485, %rd18427, %rd18484;
	xor.b64  	%rd18486, %rd18485, %rd18425;
	not.b64 	%rd18487, %rd18427;
	and.b64  	%rd18488, %rd18423, %rd18487;
	xor.b64  	%rd18489, %rd18488, %rd18426;
	not.b64 	%rd18490, %rd18423;
	and.b64  	%rd18491, %rd18424, %rd18490;
	xor.b64  	%rd18492, %rd18491, %rd18427;
	not.b64 	%rd18493, %rd18429;
	and.b64  	%rd18494, %rd18430, %rd18493;
	xor.b64  	%rd18495, %rd18494, %rd18428;
	not.b64 	%rd18496, %rd18430;
	and.b64  	%rd18497, %rd18431, %rd18496;
	xor.b64  	%rd18498, %rd18497, %rd18429;
	not.b64 	%rd18499, %rd18431;
	and.b64  	%rd18500, %rd18432, %rd18499;
	xor.b64  	%rd18501, %rd18500, %rd18430;
	not.b64 	%rd18502, %rd18432;
	and.b64  	%rd18503, %rd18428, %rd18502;
	xor.b64  	%rd18504, %rd18503, %rd18431;
	not.b64 	%rd18505, %rd18428;
	and.b64  	%rd18506, %rd18429, %rd18505;
	xor.b64  	%rd18507, %rd18506, %rd18432;
	xor.b64  	%rd18508, %rd18435, %rd32;
	xor.b64  	%rd18509, %rd18450, %rd18508;
	xor.b64  	%rd18510, %rd18509, %rd18465;
	xor.b64  	%rd18511, %rd18510, %rd18480;
	xor.b64  	%rd18512, %rd18511, %rd18495;
	xor.b64  	%rd18513, %rd18453, %rd18438;
	xor.b64  	%rd18514, %rd18513, %rd18468;
	xor.b64  	%rd18515, %rd18514, %rd18483;
	xor.b64  	%rd18516, %rd18515, %rd18498;
	xor.b64  	%rd18517, %rd18456, %rd18441;
	xor.b64  	%rd18518, %rd18517, %rd18471;
	xor.b64  	%rd18519, %rd18518, %rd18486;
	xor.b64  	%rd18520, %rd18519, %rd18501;
	xor.b64  	%rd18521, %rd18459, %rd18444;
	xor.b64  	%rd18522, %rd18521, %rd18474;
	xor.b64  	%rd18523, %rd18522, %rd18489;
	xor.b64  	%rd18524, %rd18523, %rd18504;
	xor.b64  	%rd18525, %rd18462, %rd18447;
	xor.b64  	%rd18526, %rd18525, %rd18477;
	xor.b64  	%rd18527, %rd18526, %rd18492;
	xor.b64  	%rd18528, %rd18527, %rd18507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13194}, %rd18516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13195,%dummy}, %rd18516;
	}
	shf.l.wrap.b32 	%r13196, %r13195, %r13194, 1;
	shf.l.wrap.b32 	%r13197, %r13194, %r13195, 1;
	mov.b64 	%rd18529, {%r13197, %r13196};
	xor.b64  	%rd18530, %rd18528, %rd18529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13198}, %rd18520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13199,%dummy}, %rd18520;
	}
	shf.l.wrap.b32 	%r13200, %r13199, %r13198, 1;
	shf.l.wrap.b32 	%r13201, %r13198, %r13199, 1;
	mov.b64 	%rd18531, {%r13201, %r13200};
	xor.b64  	%rd18532, %rd18531, %rd18512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13202}, %rd18524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13203,%dummy}, %rd18524;
	}
	shf.l.wrap.b32 	%r13204, %r13203, %r13202, 1;
	shf.l.wrap.b32 	%r13205, %r13202, %r13203, 1;
	mov.b64 	%rd18533, {%r13205, %r13204};
	xor.b64  	%rd18534, %rd18533, %rd18516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13206}, %rd18528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13207,%dummy}, %rd18528;
	}
	shf.l.wrap.b32 	%r13208, %r13207, %r13206, 1;
	shf.l.wrap.b32 	%r13209, %r13206, %r13207, 1;
	mov.b64 	%rd18535, {%r13209, %r13208};
	xor.b64  	%rd18536, %rd18535, %rd18520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13210}, %rd18512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13211,%dummy}, %rd18512;
	}
	shf.l.wrap.b32 	%r13212, %r13211, %r13210, 1;
	shf.l.wrap.b32 	%r13213, %r13210, %r13211, 1;
	mov.b64 	%rd18537, {%r13213, %r13212};
	xor.b64  	%rd18538, %rd18524, %rd18537;
	xor.b64  	%rd18539, %rd18530, %rd18508;
	xor.b64  	%rd18540, %rd18532, %rd18438;
	xor.b64  	%rd18541, %rd18534, %rd18441;
	xor.b64  	%rd18542, %rd18536, %rd18444;
	xor.b64  	%rd18543, %rd18538, %rd18447;
	xor.b64  	%rd18544, %rd18530, %rd18450;
	xor.b64  	%rd18545, %rd18532, %rd18453;
	xor.b64  	%rd18546, %rd18534, %rd18456;
	xor.b64  	%rd18547, %rd18536, %rd18459;
	xor.b64  	%rd18548, %rd18538, %rd18462;
	xor.b64  	%rd18549, %rd18530, %rd18465;
	xor.b64  	%rd18550, %rd18532, %rd18468;
	xor.b64  	%rd18551, %rd18534, %rd18471;
	xor.b64  	%rd18552, %rd18536, %rd18474;
	xor.b64  	%rd18553, %rd18538, %rd18477;
	xor.b64  	%rd18554, %rd18530, %rd18480;
	xor.b64  	%rd18555, %rd18532, %rd18483;
	xor.b64  	%rd18556, %rd18534, %rd18486;
	xor.b64  	%rd18557, %rd18536, %rd18489;
	xor.b64  	%rd18558, %rd18538, %rd18492;
	xor.b64  	%rd18559, %rd18530, %rd18495;
	xor.b64  	%rd18560, %rd18532, %rd18498;
	xor.b64  	%rd18561, %rd18534, %rd18501;
	xor.b64  	%rd18562, %rd18536, %rd18504;
	xor.b64  	%rd18563, %rd18538, %rd18507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13214,%dummy}, %rd18545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13215}, %rd18545;
	}
	shf.r.wrap.b32 	%r13216, %r13215, %r13214, 20;
	shf.r.wrap.b32 	%r13217, %r13214, %r13215, 20;
	mov.b64 	%rd18564, {%r13217, %r13216};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13218,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13219}, %rd18551;
	}
	shf.r.wrap.b32 	%r13220, %r13219, %r13218, 21;
	shf.r.wrap.b32 	%r13221, %r13218, %r13219, 21;
	mov.b64 	%rd18565, {%r13221, %r13220};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13222}, %rd18557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13223,%dummy}, %rd18557;
	}
	shf.l.wrap.b32 	%r13224, %r13223, %r13222, 21;
	shf.l.wrap.b32 	%r13225, %r13222, %r13223, 21;
	mov.b64 	%rd18566, {%r13225, %r13224};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13226}, %rd18563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13227,%dummy}, %rd18563;
	}
	shf.l.wrap.b32 	%r13228, %r13227, %r13226, 14;
	shf.l.wrap.b32 	%r13229, %r13226, %r13227, 14;
	mov.b64 	%rd18567, {%r13229, %r13228};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13230}, %rd18542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13231,%dummy}, %rd18542;
	}
	shf.l.wrap.b32 	%r13232, %r13231, %r13230, 28;
	shf.l.wrap.b32 	%r13233, %r13230, %r13231, 28;
	mov.b64 	%rd18568, {%r13233, %r13232};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13234}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13235,%dummy}, %rd18548;
	}
	shf.l.wrap.b32 	%r13236, %r13235, %r13234, 20;
	shf.l.wrap.b32 	%r13237, %r13234, %r13235, 20;
	mov.b64 	%rd18569, {%r13237, %r13236};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13238}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13239,%dummy}, %rd18549;
	}
	shf.l.wrap.b32 	%r13240, %r13239, %r13238, 3;
	shf.l.wrap.b32 	%r13241, %r13238, %r13239, 3;
	mov.b64 	%rd18570, {%r13241, %r13240};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13242,%dummy}, %rd18555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13243}, %rd18555;
	}
	shf.r.wrap.b32 	%r13244, %r13243, %r13242, 19;
	shf.r.wrap.b32 	%r13245, %r13242, %r13243, 19;
	mov.b64 	%rd18571, {%r13245, %r13244};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13246,%dummy}, %rd18561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13247}, %rd18561;
	}
	shf.r.wrap.b32 	%r13248, %r13247, %r13246, 3;
	shf.r.wrap.b32 	%r13249, %r13246, %r13247, 3;
	mov.b64 	%rd18572, {%r13249, %r13248};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13250}, %rd18540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13251,%dummy}, %rd18540;
	}
	shf.l.wrap.b32 	%r13252, %r13251, %r13250, 1;
	shf.l.wrap.b32 	%r13253, %r13250, %r13251, 1;
	mov.b64 	%rd18573, {%r13253, %r13252};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13254}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13255,%dummy}, %rd18546;
	}
	shf.l.wrap.b32 	%r13256, %r13255, %r13254, 6;
	shf.l.wrap.b32 	%r13257, %r13254, %r13255, 6;
	mov.b64 	%rd18574, {%r13257, %r13256};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13258}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13259,%dummy}, %rd18552;
	}
	shf.l.wrap.b32 	%r13260, %r13259, %r13258, 25;
	shf.l.wrap.b32 	%r13261, %r13258, %r13259, 25;
	mov.b64 	%rd18575, {%r13261, %r13260};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13262}, %rd18558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13263,%dummy}, %rd18558;
	}
	shf.l.wrap.b32 	%r13264, %r13263, %r13262, 8;
	shf.l.wrap.b32 	%r13265, %r13262, %r13263, 8;
	mov.b64 	%rd18576, {%r13265, %r13264};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13266}, %rd18559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13267,%dummy}, %rd18559;
	}
	shf.l.wrap.b32 	%r13268, %r13267, %r13266, 18;
	shf.l.wrap.b32 	%r13269, %r13266, %r13267, 18;
	mov.b64 	%rd18577, {%r13269, %r13268};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13270}, %rd18543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13271,%dummy}, %rd18543;
	}
	shf.l.wrap.b32 	%r13272, %r13271, %r13270, 27;
	shf.l.wrap.b32 	%r13273, %r13270, %r13271, 27;
	mov.b64 	%rd18578, {%r13273, %r13272};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13274,%dummy}, %rd18544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13275}, %rd18544;
	}
	shf.r.wrap.b32 	%r13276, %r13275, %r13274, 28;
	shf.r.wrap.b32 	%r13277, %r13274, %r13275, 28;
	mov.b64 	%rd18579, {%r13277, %r13276};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13278}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13279,%dummy}, %rd18550;
	}
	shf.l.wrap.b32 	%r13280, %r13279, %r13278, 10;
	shf.l.wrap.b32 	%r13281, %r13278, %r13279, 10;
	mov.b64 	%rd18580, {%r13281, %r13280};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13282}, %rd18556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13283,%dummy}, %rd18556;
	}
	shf.l.wrap.b32 	%r13284, %r13283, %r13282, 15;
	shf.l.wrap.b32 	%r13285, %r13282, %r13283, 15;
	mov.b64 	%rd18581, {%r13285, %r13284};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13286,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13287}, %rd18562;
	}
	shf.r.wrap.b32 	%r13288, %r13287, %r13286, 8;
	shf.r.wrap.b32 	%r13289, %r13286, %r13287, 8;
	mov.b64 	%rd18582, {%r13289, %r13288};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13290,%dummy}, %rd18541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13291}, %rd18541;
	}
	shf.r.wrap.b32 	%r13292, %r13291, %r13290, 2;
	shf.r.wrap.b32 	%r13293, %r13290, %r13291, 2;
	mov.b64 	%rd18583, {%r13293, %r13292};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13294,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13295}, %rd18547;
	}
	shf.r.wrap.b32 	%r13296, %r13295, %r13294, 9;
	shf.r.wrap.b32 	%r13297, %r13294, %r13295, 9;
	mov.b64 	%rd18584, {%r13297, %r13296};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13298,%dummy}, %rd18553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13299}, %rd18553;
	}
	shf.r.wrap.b32 	%r13300, %r13299, %r13298, 25;
	shf.r.wrap.b32 	%r13301, %r13298, %r13299, 25;
	mov.b64 	%rd18585, {%r13301, %r13300};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13302,%dummy}, %rd18554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13303}, %rd18554;
	}
	shf.r.wrap.b32 	%r13304, %r13303, %r13302, 23;
	shf.r.wrap.b32 	%r13305, %r13302, %r13303, 23;
	mov.b64 	%rd18586, {%r13305, %r13304};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13306}, %rd18560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13307,%dummy}, %rd18560;
	}
	shf.l.wrap.b32 	%r13308, %r13307, %r13306, 2;
	shf.l.wrap.b32 	%r13309, %r13306, %r13307, 2;
	mov.b64 	%rd18587, {%r13309, %r13308};
	not.b64 	%rd18588, %rd18564;
	and.b64  	%rd18589, %rd18565, %rd18588;
	xor.b64  	%rd18590, %rd18589, %rd18539;
	not.b64 	%rd18591, %rd18565;
	and.b64  	%rd18592, %rd18566, %rd18591;
	xor.b64  	%rd18593, %rd18592, %rd18564;
	not.b64 	%rd18594, %rd18566;
	and.b64  	%rd18595, %rd18567, %rd18594;
	xor.b64  	%rd18596, %rd18595, %rd18565;
	not.b64 	%rd18597, %rd18567;
	and.b64  	%rd18598, %rd18539, %rd18597;
	xor.b64  	%rd18599, %rd18598, %rd18566;
	not.b64 	%rd18600, %rd18539;
	and.b64  	%rd18601, %rd18564, %rd18600;
	xor.b64  	%rd18602, %rd18601, %rd18567;
	not.b64 	%rd18603, %rd18569;
	and.b64  	%rd18604, %rd18570, %rd18603;
	xor.b64  	%rd18605, %rd18604, %rd18568;
	not.b64 	%rd18606, %rd18570;
	and.b64  	%rd18607, %rd18571, %rd18606;
	xor.b64  	%rd18608, %rd18607, %rd18569;
	not.b64 	%rd18609, %rd18571;
	and.b64  	%rd18610, %rd18572, %rd18609;
	xor.b64  	%rd18611, %rd18610, %rd18570;
	not.b64 	%rd18612, %rd18572;
	and.b64  	%rd18613, %rd18568, %rd18612;
	xor.b64  	%rd18614, %rd18613, %rd18571;
	not.b64 	%rd18615, %rd18568;
	and.b64  	%rd18616, %rd18569, %rd18615;
	xor.b64  	%rd18617, %rd18616, %rd18572;
	not.b64 	%rd18618, %rd18574;
	and.b64  	%rd18619, %rd18575, %rd18618;
	xor.b64  	%rd18620, %rd18619, %rd18573;
	not.b64 	%rd18621, %rd18575;
	and.b64  	%rd18622, %rd18576, %rd18621;
	xor.b64  	%rd18623, %rd18622, %rd18574;
	not.b64 	%rd18624, %rd18576;
	and.b64  	%rd18625, %rd18577, %rd18624;
	xor.b64  	%rd18626, %rd18625, %rd18575;
	not.b64 	%rd18627, %rd18577;
	and.b64  	%rd18628, %rd18573, %rd18627;
	xor.b64  	%rd18629, %rd18628, %rd18576;
	not.b64 	%rd18630, %rd18573;
	and.b64  	%rd18631, %rd18574, %rd18630;
	xor.b64  	%rd18632, %rd18631, %rd18577;
	not.b64 	%rd18633, %rd18579;
	and.b64  	%rd18634, %rd18580, %rd18633;
	xor.b64  	%rd18635, %rd18634, %rd18578;
	not.b64 	%rd18636, %rd18580;
	and.b64  	%rd18637, %rd18581, %rd18636;
	xor.b64  	%rd18638, %rd18637, %rd18579;
	not.b64 	%rd18639, %rd18581;
	and.b64  	%rd18640, %rd18582, %rd18639;
	xor.b64  	%rd18641, %rd18640, %rd18580;
	not.b64 	%rd18642, %rd18582;
	and.b64  	%rd18643, %rd18578, %rd18642;
	xor.b64  	%rd18644, %rd18643, %rd18581;
	not.b64 	%rd18645, %rd18578;
	and.b64  	%rd18646, %rd18579, %rd18645;
	xor.b64  	%rd18647, %rd18646, %rd18582;
	not.b64 	%rd18648, %rd18584;
	and.b64  	%rd18649, %rd18585, %rd18648;
	xor.b64  	%rd18650, %rd18649, %rd18583;
	not.b64 	%rd18651, %rd18585;
	and.b64  	%rd18652, %rd18586, %rd18651;
	xor.b64  	%rd18653, %rd18652, %rd18584;
	not.b64 	%rd18654, %rd18586;
	and.b64  	%rd18655, %rd18587, %rd18654;
	xor.b64  	%rd18656, %rd18655, %rd18585;
	not.b64 	%rd18657, %rd18587;
	and.b64  	%rd18658, %rd18583, %rd18657;
	xor.b64  	%rd18659, %rd18658, %rd18586;
	not.b64 	%rd18660, %rd18583;
	and.b64  	%rd18661, %rd18584, %rd18660;
	xor.b64  	%rd18662, %rd18661, %rd18587;
	xor.b64  	%rd18663, %rd18590, %rd33;
	xor.b64  	%rd18664, %rd18605, %rd18663;
	xor.b64  	%rd18665, %rd18664, %rd18620;
	xor.b64  	%rd18666, %rd18665, %rd18635;
	xor.b64  	%rd18667, %rd18666, %rd18650;
	xor.b64  	%rd18668, %rd18608, %rd18593;
	xor.b64  	%rd18669, %rd18668, %rd18623;
	xor.b64  	%rd18670, %rd18669, %rd18638;
	xor.b64  	%rd18671, %rd18670, %rd18653;
	xor.b64  	%rd18672, %rd18611, %rd18596;
	xor.b64  	%rd18673, %rd18672, %rd18626;
	xor.b64  	%rd18674, %rd18673, %rd18641;
	xor.b64  	%rd18675, %rd18674, %rd18656;
	xor.b64  	%rd18676, %rd18614, %rd18599;
	xor.b64  	%rd18677, %rd18676, %rd18629;
	xor.b64  	%rd18678, %rd18677, %rd18644;
	xor.b64  	%rd18679, %rd18678, %rd18659;
	xor.b64  	%rd18680, %rd18617, %rd18602;
	xor.b64  	%rd18681, %rd18680, %rd18632;
	xor.b64  	%rd18682, %rd18681, %rd18647;
	xor.b64  	%rd18683, %rd18682, %rd18662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13310}, %rd18671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13311,%dummy}, %rd18671;
	}
	shf.l.wrap.b32 	%r13312, %r13311, %r13310, 1;
	shf.l.wrap.b32 	%r13313, %r13310, %r13311, 1;
	mov.b64 	%rd18684, {%r13313, %r13312};
	xor.b64  	%rd18685, %rd18683, %rd18684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13314}, %rd18675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13315,%dummy}, %rd18675;
	}
	shf.l.wrap.b32 	%r13316, %r13315, %r13314, 1;
	shf.l.wrap.b32 	%r13317, %r13314, %r13315, 1;
	mov.b64 	%rd18686, {%r13317, %r13316};
	xor.b64  	%rd18687, %rd18686, %rd18667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13318}, %rd18679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13319,%dummy}, %rd18679;
	}
	shf.l.wrap.b32 	%r13320, %r13319, %r13318, 1;
	shf.l.wrap.b32 	%r13321, %r13318, %r13319, 1;
	mov.b64 	%rd18688, {%r13321, %r13320};
	xor.b64  	%rd18689, %rd18688, %rd18671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13322}, %rd18683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13323,%dummy}, %rd18683;
	}
	shf.l.wrap.b32 	%r13324, %r13323, %r13322, 1;
	shf.l.wrap.b32 	%r13325, %r13322, %r13323, 1;
	mov.b64 	%rd18690, {%r13325, %r13324};
	xor.b64  	%rd18691, %rd18690, %rd18675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13326}, %rd18667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13327,%dummy}, %rd18667;
	}
	shf.l.wrap.b32 	%r13328, %r13327, %r13326, 1;
	shf.l.wrap.b32 	%r13329, %r13326, %r13327, 1;
	mov.b64 	%rd18692, {%r13329, %r13328};
	xor.b64  	%rd18693, %rd18679, %rd18692;
	xor.b64  	%rd18694, %rd18685, %rd18663;
	xor.b64  	%rd18695, %rd18687, %rd18593;
	xor.b64  	%rd18696, %rd18689, %rd18596;
	xor.b64  	%rd18697, %rd18691, %rd18599;
	xor.b64  	%rd18698, %rd18693, %rd18602;
	xor.b64  	%rd18699, %rd18685, %rd18605;
	xor.b64  	%rd18700, %rd18687, %rd18608;
	xor.b64  	%rd18701, %rd18689, %rd18611;
	xor.b64  	%rd18702, %rd18691, %rd18614;
	xor.b64  	%rd18703, %rd18693, %rd18617;
	xor.b64  	%rd18704, %rd18685, %rd18620;
	xor.b64  	%rd18705, %rd18687, %rd18623;
	xor.b64  	%rd18706, %rd18689, %rd18626;
	xor.b64  	%rd18707, %rd18691, %rd18629;
	xor.b64  	%rd18708, %rd18693, %rd18632;
	xor.b64  	%rd18709, %rd18685, %rd18635;
	xor.b64  	%rd18710, %rd18687, %rd18638;
	xor.b64  	%rd18711, %rd18689, %rd18641;
	xor.b64  	%rd18712, %rd18691, %rd18644;
	xor.b64  	%rd18713, %rd18693, %rd18647;
	xor.b64  	%rd18714, %rd18685, %rd18650;
	xor.b64  	%rd18715, %rd18687, %rd18653;
	xor.b64  	%rd18716, %rd18689, %rd18656;
	xor.b64  	%rd18717, %rd18691, %rd18659;
	xor.b64  	%rd18718, %rd18693, %rd18662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13330,%dummy}, %rd18700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13331}, %rd18700;
	}
	shf.r.wrap.b32 	%r13332, %r13331, %r13330, 20;
	shf.r.wrap.b32 	%r13333, %r13330, %r13331, 20;
	mov.b64 	%rd18719, {%r13333, %r13332};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13334,%dummy}, %rd18706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13335}, %rd18706;
	}
	shf.r.wrap.b32 	%r13336, %r13335, %r13334, 21;
	shf.r.wrap.b32 	%r13337, %r13334, %r13335, 21;
	mov.b64 	%rd18720, {%r13337, %r13336};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13338}, %rd18712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13339,%dummy}, %rd18712;
	}
	shf.l.wrap.b32 	%r13340, %r13339, %r13338, 21;
	shf.l.wrap.b32 	%r13341, %r13338, %r13339, 21;
	mov.b64 	%rd18721, {%r13341, %r13340};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13342}, %rd18718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13343,%dummy}, %rd18718;
	}
	shf.l.wrap.b32 	%r13344, %r13343, %r13342, 14;
	shf.l.wrap.b32 	%r13345, %r13342, %r13343, 14;
	mov.b64 	%rd18722, {%r13345, %r13344};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13346}, %rd18697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13347,%dummy}, %rd18697;
	}
	shf.l.wrap.b32 	%r13348, %r13347, %r13346, 28;
	shf.l.wrap.b32 	%r13349, %r13346, %r13347, 28;
	mov.b64 	%rd18723, {%r13349, %r13348};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13350}, %rd18703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13351,%dummy}, %rd18703;
	}
	shf.l.wrap.b32 	%r13352, %r13351, %r13350, 20;
	shf.l.wrap.b32 	%r13353, %r13350, %r13351, 20;
	mov.b64 	%rd18724, {%r13353, %r13352};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13354}, %rd18704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13355,%dummy}, %rd18704;
	}
	shf.l.wrap.b32 	%r13356, %r13355, %r13354, 3;
	shf.l.wrap.b32 	%r13357, %r13354, %r13355, 3;
	mov.b64 	%rd18725, {%r13357, %r13356};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13358,%dummy}, %rd18710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13359}, %rd18710;
	}
	shf.r.wrap.b32 	%r13360, %r13359, %r13358, 19;
	shf.r.wrap.b32 	%r13361, %r13358, %r13359, 19;
	mov.b64 	%rd18726, {%r13361, %r13360};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13362,%dummy}, %rd18716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13363}, %rd18716;
	}
	shf.r.wrap.b32 	%r13364, %r13363, %r13362, 3;
	shf.r.wrap.b32 	%r13365, %r13362, %r13363, 3;
	mov.b64 	%rd18727, {%r13365, %r13364};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13366}, %rd18695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13367,%dummy}, %rd18695;
	}
	shf.l.wrap.b32 	%r13368, %r13367, %r13366, 1;
	shf.l.wrap.b32 	%r13369, %r13366, %r13367, 1;
	mov.b64 	%rd18728, {%r13369, %r13368};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13370}, %rd18701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13371,%dummy}, %rd18701;
	}
	shf.l.wrap.b32 	%r13372, %r13371, %r13370, 6;
	shf.l.wrap.b32 	%r13373, %r13370, %r13371, 6;
	mov.b64 	%rd18729, {%r13373, %r13372};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13374}, %rd18707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13375,%dummy}, %rd18707;
	}
	shf.l.wrap.b32 	%r13376, %r13375, %r13374, 25;
	shf.l.wrap.b32 	%r13377, %r13374, %r13375, 25;
	mov.b64 	%rd18730, {%r13377, %r13376};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13378}, %rd18713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13379,%dummy}, %rd18713;
	}
	shf.l.wrap.b32 	%r13380, %r13379, %r13378, 8;
	shf.l.wrap.b32 	%r13381, %r13378, %r13379, 8;
	mov.b64 	%rd18731, {%r13381, %r13380};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13382}, %rd18714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13383,%dummy}, %rd18714;
	}
	shf.l.wrap.b32 	%r13384, %r13383, %r13382, 18;
	shf.l.wrap.b32 	%r13385, %r13382, %r13383, 18;
	mov.b64 	%rd18732, {%r13385, %r13384};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13386}, %rd18698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13387,%dummy}, %rd18698;
	}
	shf.l.wrap.b32 	%r13388, %r13387, %r13386, 27;
	shf.l.wrap.b32 	%r13389, %r13386, %r13387, 27;
	mov.b64 	%rd18733, {%r13389, %r13388};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13390,%dummy}, %rd18699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13391}, %rd18699;
	}
	shf.r.wrap.b32 	%r13392, %r13391, %r13390, 28;
	shf.r.wrap.b32 	%r13393, %r13390, %r13391, 28;
	mov.b64 	%rd18734, {%r13393, %r13392};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13394}, %rd18705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13395,%dummy}, %rd18705;
	}
	shf.l.wrap.b32 	%r13396, %r13395, %r13394, 10;
	shf.l.wrap.b32 	%r13397, %r13394, %r13395, 10;
	mov.b64 	%rd18735, {%r13397, %r13396};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13398}, %rd18711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13399,%dummy}, %rd18711;
	}
	shf.l.wrap.b32 	%r13400, %r13399, %r13398, 15;
	shf.l.wrap.b32 	%r13401, %r13398, %r13399, 15;
	mov.b64 	%rd18736, {%r13401, %r13400};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13402,%dummy}, %rd18717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13403}, %rd18717;
	}
	shf.r.wrap.b32 	%r13404, %r13403, %r13402, 8;
	shf.r.wrap.b32 	%r13405, %r13402, %r13403, 8;
	mov.b64 	%rd18737, {%r13405, %r13404};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13406,%dummy}, %rd18696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13407}, %rd18696;
	}
	shf.r.wrap.b32 	%r13408, %r13407, %r13406, 2;
	shf.r.wrap.b32 	%r13409, %r13406, %r13407, 2;
	mov.b64 	%rd18738, {%r13409, %r13408};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13410,%dummy}, %rd18702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13411}, %rd18702;
	}
	shf.r.wrap.b32 	%r13412, %r13411, %r13410, 9;
	shf.r.wrap.b32 	%r13413, %r13410, %r13411, 9;
	mov.b64 	%rd18739, {%r13413, %r13412};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13414,%dummy}, %rd18708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13415}, %rd18708;
	}
	shf.r.wrap.b32 	%r13416, %r13415, %r13414, 25;
	shf.r.wrap.b32 	%r13417, %r13414, %r13415, 25;
	mov.b64 	%rd18740, {%r13417, %r13416};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13418,%dummy}, %rd18709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13419}, %rd18709;
	}
	shf.r.wrap.b32 	%r13420, %r13419, %r13418, 23;
	shf.r.wrap.b32 	%r13421, %r13418, %r13419, 23;
	mov.b64 	%rd18741, {%r13421, %r13420};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13422}, %rd18715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13423,%dummy}, %rd18715;
	}
	shf.l.wrap.b32 	%r13424, %r13423, %r13422, 2;
	shf.l.wrap.b32 	%r13425, %r13422, %r13423, 2;
	mov.b64 	%rd18742, {%r13425, %r13424};
	not.b64 	%rd18743, %rd18719;
	and.b64  	%rd18744, %rd18720, %rd18743;
	xor.b64  	%rd18745, %rd18744, %rd18694;
	not.b64 	%rd18746, %rd18720;
	and.b64  	%rd18747, %rd18721, %rd18746;
	xor.b64  	%rd18748, %rd18747, %rd18719;
	not.b64 	%rd18749, %rd18721;
	and.b64  	%rd18750, %rd18722, %rd18749;
	xor.b64  	%rd18751, %rd18750, %rd18720;
	not.b64 	%rd18752, %rd18722;
	and.b64  	%rd18753, %rd18694, %rd18752;
	xor.b64  	%rd18754, %rd18753, %rd18721;
	not.b64 	%rd18755, %rd18694;
	and.b64  	%rd18756, %rd18719, %rd18755;
	xor.b64  	%rd18757, %rd18756, %rd18722;
	not.b64 	%rd18758, %rd18724;
	and.b64  	%rd18759, %rd18725, %rd18758;
	xor.b64  	%rd18760, %rd18759, %rd18723;
	not.b64 	%rd18761, %rd18725;
	and.b64  	%rd18762, %rd18726, %rd18761;
	xor.b64  	%rd18763, %rd18762, %rd18724;
	not.b64 	%rd18764, %rd18726;
	and.b64  	%rd18765, %rd18727, %rd18764;
	xor.b64  	%rd18766, %rd18765, %rd18725;
	not.b64 	%rd18767, %rd18727;
	and.b64  	%rd18768, %rd18723, %rd18767;
	xor.b64  	%rd18769, %rd18768, %rd18726;
	not.b64 	%rd18770, %rd18723;
	and.b64  	%rd18771, %rd18724, %rd18770;
	xor.b64  	%rd18772, %rd18771, %rd18727;
	not.b64 	%rd18773, %rd18729;
	and.b64  	%rd18774, %rd18730, %rd18773;
	xor.b64  	%rd18775, %rd18774, %rd18728;
	not.b64 	%rd18776, %rd18730;
	and.b64  	%rd18777, %rd18731, %rd18776;
	xor.b64  	%rd18778, %rd18777, %rd18729;
	not.b64 	%rd18779, %rd18731;
	and.b64  	%rd18780, %rd18732, %rd18779;
	xor.b64  	%rd18781, %rd18780, %rd18730;
	not.b64 	%rd18782, %rd18732;
	and.b64  	%rd18783, %rd18728, %rd18782;
	xor.b64  	%rd18784, %rd18783, %rd18731;
	not.b64 	%rd18785, %rd18728;
	and.b64  	%rd18786, %rd18729, %rd18785;
	xor.b64  	%rd18787, %rd18786, %rd18732;
	not.b64 	%rd18788, %rd18734;
	and.b64  	%rd18789, %rd18735, %rd18788;
	xor.b64  	%rd18790, %rd18789, %rd18733;
	not.b64 	%rd18791, %rd18735;
	and.b64  	%rd18792, %rd18736, %rd18791;
	xor.b64  	%rd18793, %rd18792, %rd18734;
	not.b64 	%rd18794, %rd18736;
	and.b64  	%rd18795, %rd18737, %rd18794;
	xor.b64  	%rd18796, %rd18795, %rd18735;
	not.b64 	%rd18797, %rd18737;
	and.b64  	%rd18798, %rd18733, %rd18797;
	xor.b64  	%rd18799, %rd18798, %rd18736;
	not.b64 	%rd18800, %rd18733;
	and.b64  	%rd18801, %rd18734, %rd18800;
	xor.b64  	%rd18802, %rd18801, %rd18737;
	not.b64 	%rd18803, %rd18739;
	and.b64  	%rd18804, %rd18740, %rd18803;
	xor.b64  	%rd18805, %rd18804, %rd18738;
	not.b64 	%rd18806, %rd18740;
	and.b64  	%rd18807, %rd18741, %rd18806;
	xor.b64  	%rd18808, %rd18807, %rd18739;
	not.b64 	%rd18809, %rd18741;
	and.b64  	%rd18810, %rd18742, %rd18809;
	xor.b64  	%rd18811, %rd18810, %rd18740;
	not.b64 	%rd18812, %rd18742;
	and.b64  	%rd18813, %rd18738, %rd18812;
	xor.b64  	%rd18814, %rd18813, %rd18741;
	not.b64 	%rd18815, %rd18738;
	and.b64  	%rd18816, %rd18739, %rd18815;
	xor.b64  	%rd18817, %rd18816, %rd18742;
	xor.b64  	%rd18818, %rd18745, %rd34;
	xor.b64  	%rd18819, %rd18760, %rd18818;
	xor.b64  	%rd18820, %rd18819, %rd18775;
	xor.b64  	%rd18821, %rd18820, %rd18790;
	xor.b64  	%rd18822, %rd18821, %rd18805;
	xor.b64  	%rd18823, %rd18763, %rd18748;
	xor.b64  	%rd18824, %rd18823, %rd18778;
	xor.b64  	%rd18825, %rd18824, %rd18793;
	xor.b64  	%rd18826, %rd18825, %rd18808;
	xor.b64  	%rd18827, %rd18766, %rd18751;
	xor.b64  	%rd18828, %rd18827, %rd18781;
	xor.b64  	%rd18829, %rd18828, %rd18796;
	xor.b64  	%rd18830, %rd18829, %rd18811;
	xor.b64  	%rd18831, %rd18769, %rd18754;
	xor.b64  	%rd18832, %rd18831, %rd18784;
	xor.b64  	%rd18833, %rd18832, %rd18799;
	xor.b64  	%rd18834, %rd18833, %rd18814;
	xor.b64  	%rd18835, %rd18772, %rd18757;
	xor.b64  	%rd18836, %rd18835, %rd18787;
	xor.b64  	%rd18837, %rd18836, %rd18802;
	xor.b64  	%rd18838, %rd18837, %rd18817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13426}, %rd18826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13427,%dummy}, %rd18826;
	}
	shf.l.wrap.b32 	%r13428, %r13427, %r13426, 1;
	shf.l.wrap.b32 	%r13429, %r13426, %r13427, 1;
	mov.b64 	%rd18839, {%r13429, %r13428};
	xor.b64  	%rd18840, %rd18838, %rd18839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13430}, %rd18830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13431,%dummy}, %rd18830;
	}
	shf.l.wrap.b32 	%r13432, %r13431, %r13430, 1;
	shf.l.wrap.b32 	%r13433, %r13430, %r13431, 1;
	mov.b64 	%rd18841, {%r13433, %r13432};
	xor.b64  	%rd18842, %rd18841, %rd18822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13434}, %rd18834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13435,%dummy}, %rd18834;
	}
	shf.l.wrap.b32 	%r13436, %r13435, %r13434, 1;
	shf.l.wrap.b32 	%r13437, %r13434, %r13435, 1;
	mov.b64 	%rd18843, {%r13437, %r13436};
	xor.b64  	%rd18844, %rd18843, %rd18826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13438}, %rd18838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13439,%dummy}, %rd18838;
	}
	shf.l.wrap.b32 	%r13440, %r13439, %r13438, 1;
	shf.l.wrap.b32 	%r13441, %r13438, %r13439, 1;
	mov.b64 	%rd18845, {%r13441, %r13440};
	xor.b64  	%rd18846, %rd18845, %rd18830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13442}, %rd18822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13443,%dummy}, %rd18822;
	}
	shf.l.wrap.b32 	%r13444, %r13443, %r13442, 1;
	shf.l.wrap.b32 	%r13445, %r13442, %r13443, 1;
	mov.b64 	%rd18847, {%r13445, %r13444};
	xor.b64  	%rd18848, %rd18834, %rd18847;
	xor.b64  	%rd18849, %rd18840, %rd18818;
	xor.b64  	%rd18850, %rd18842, %rd18748;
	xor.b64  	%rd18851, %rd18844, %rd18751;
	xor.b64  	%rd18852, %rd18846, %rd18754;
	xor.b64  	%rd18853, %rd18848, %rd18757;
	xor.b64  	%rd18854, %rd18840, %rd18760;
	xor.b64  	%rd18855, %rd18842, %rd18763;
	xor.b64  	%rd18856, %rd18844, %rd18766;
	xor.b64  	%rd18857, %rd18846, %rd18769;
	xor.b64  	%rd18858, %rd18848, %rd18772;
	xor.b64  	%rd18859, %rd18840, %rd18775;
	xor.b64  	%rd18860, %rd18842, %rd18778;
	xor.b64  	%rd18861, %rd18844, %rd18781;
	xor.b64  	%rd18862, %rd18846, %rd18784;
	xor.b64  	%rd18863, %rd18848, %rd18787;
	xor.b64  	%rd18864, %rd18840, %rd18790;
	xor.b64  	%rd18865, %rd18842, %rd18793;
	xor.b64  	%rd18866, %rd18844, %rd18796;
	xor.b64  	%rd18867, %rd18846, %rd18799;
	xor.b64  	%rd18868, %rd18848, %rd18802;
	xor.b64  	%rd18869, %rd18840, %rd18805;
	xor.b64  	%rd18870, %rd18842, %rd18808;
	xor.b64  	%rd18871, %rd18844, %rd18811;
	xor.b64  	%rd18872, %rd18846, %rd18814;
	xor.b64  	%rd18873, %rd18848, %rd18817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13446,%dummy}, %rd18855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13447}, %rd18855;
	}
	shf.r.wrap.b32 	%r13448, %r13447, %r13446, 20;
	shf.r.wrap.b32 	%r13449, %r13446, %r13447, 20;
	mov.b64 	%rd18874, {%r13449, %r13448};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13450,%dummy}, %rd18861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13451}, %rd18861;
	}
	shf.r.wrap.b32 	%r13452, %r13451, %r13450, 21;
	shf.r.wrap.b32 	%r13453, %r13450, %r13451, 21;
	mov.b64 	%rd18875, {%r13453, %r13452};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13454}, %rd18867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13455,%dummy}, %rd18867;
	}
	shf.l.wrap.b32 	%r13456, %r13455, %r13454, 21;
	shf.l.wrap.b32 	%r13457, %r13454, %r13455, 21;
	mov.b64 	%rd18876, {%r13457, %r13456};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13458}, %rd18873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13459,%dummy}, %rd18873;
	}
	shf.l.wrap.b32 	%r13460, %r13459, %r13458, 14;
	shf.l.wrap.b32 	%r13461, %r13458, %r13459, 14;
	mov.b64 	%rd18877, {%r13461, %r13460};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13462}, %rd18852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13463,%dummy}, %rd18852;
	}
	shf.l.wrap.b32 	%r13464, %r13463, %r13462, 28;
	shf.l.wrap.b32 	%r13465, %r13462, %r13463, 28;
	mov.b64 	%rd18878, {%r13465, %r13464};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13466}, %rd18858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13467,%dummy}, %rd18858;
	}
	shf.l.wrap.b32 	%r13468, %r13467, %r13466, 20;
	shf.l.wrap.b32 	%r13469, %r13466, %r13467, 20;
	mov.b64 	%rd18879, {%r13469, %r13468};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13470}, %rd18859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13471,%dummy}, %rd18859;
	}
	shf.l.wrap.b32 	%r13472, %r13471, %r13470, 3;
	shf.l.wrap.b32 	%r13473, %r13470, %r13471, 3;
	mov.b64 	%rd18880, {%r13473, %r13472};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13474,%dummy}, %rd18865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13475}, %rd18865;
	}
	shf.r.wrap.b32 	%r13476, %r13475, %r13474, 19;
	shf.r.wrap.b32 	%r13477, %r13474, %r13475, 19;
	mov.b64 	%rd18881, {%r13477, %r13476};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13478,%dummy}, %rd18871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13479}, %rd18871;
	}
	shf.r.wrap.b32 	%r13480, %r13479, %r13478, 3;
	shf.r.wrap.b32 	%r13481, %r13478, %r13479, 3;
	mov.b64 	%rd18882, {%r13481, %r13480};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13482}, %rd18850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13483,%dummy}, %rd18850;
	}
	shf.l.wrap.b32 	%r13484, %r13483, %r13482, 1;
	shf.l.wrap.b32 	%r13485, %r13482, %r13483, 1;
	mov.b64 	%rd18883, {%r13485, %r13484};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13486}, %rd18856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13487,%dummy}, %rd18856;
	}
	shf.l.wrap.b32 	%r13488, %r13487, %r13486, 6;
	shf.l.wrap.b32 	%r13489, %r13486, %r13487, 6;
	mov.b64 	%rd18884, {%r13489, %r13488};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13490}, %rd18862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13491,%dummy}, %rd18862;
	}
	shf.l.wrap.b32 	%r13492, %r13491, %r13490, 25;
	shf.l.wrap.b32 	%r13493, %r13490, %r13491, 25;
	mov.b64 	%rd18885, {%r13493, %r13492};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13494}, %rd18868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13495,%dummy}, %rd18868;
	}
	shf.l.wrap.b32 	%r13496, %r13495, %r13494, 8;
	shf.l.wrap.b32 	%r13497, %r13494, %r13495, 8;
	mov.b64 	%rd18886, {%r13497, %r13496};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13498}, %rd18869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13499,%dummy}, %rd18869;
	}
	shf.l.wrap.b32 	%r13500, %r13499, %r13498, 18;
	shf.l.wrap.b32 	%r13501, %r13498, %r13499, 18;
	mov.b64 	%rd18887, {%r13501, %r13500};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13502}, %rd18853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13503,%dummy}, %rd18853;
	}
	shf.l.wrap.b32 	%r13504, %r13503, %r13502, 27;
	shf.l.wrap.b32 	%r13505, %r13502, %r13503, 27;
	mov.b64 	%rd18888, {%r13505, %r13504};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13506,%dummy}, %rd18854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13507}, %rd18854;
	}
	shf.r.wrap.b32 	%r13508, %r13507, %r13506, 28;
	shf.r.wrap.b32 	%r13509, %r13506, %r13507, 28;
	mov.b64 	%rd18889, {%r13509, %r13508};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13510}, %rd18860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13511,%dummy}, %rd18860;
	}
	shf.l.wrap.b32 	%r13512, %r13511, %r13510, 10;
	shf.l.wrap.b32 	%r13513, %r13510, %r13511, 10;
	mov.b64 	%rd18890, {%r13513, %r13512};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13514}, %rd18866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13515,%dummy}, %rd18866;
	}
	shf.l.wrap.b32 	%r13516, %r13515, %r13514, 15;
	shf.l.wrap.b32 	%r13517, %r13514, %r13515, 15;
	mov.b64 	%rd18891, {%r13517, %r13516};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13518,%dummy}, %rd18872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13519}, %rd18872;
	}
	shf.r.wrap.b32 	%r13520, %r13519, %r13518, 8;
	shf.r.wrap.b32 	%r13521, %r13518, %r13519, 8;
	mov.b64 	%rd18892, {%r13521, %r13520};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13522,%dummy}, %rd18851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13523}, %rd18851;
	}
	shf.r.wrap.b32 	%r13524, %r13523, %r13522, 2;
	shf.r.wrap.b32 	%r13525, %r13522, %r13523, 2;
	mov.b64 	%rd18893, {%r13525, %r13524};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13526,%dummy}, %rd18857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13527}, %rd18857;
	}
	shf.r.wrap.b32 	%r13528, %r13527, %r13526, 9;
	shf.r.wrap.b32 	%r13529, %r13526, %r13527, 9;
	mov.b64 	%rd18894, {%r13529, %r13528};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13530,%dummy}, %rd18863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13531}, %rd18863;
	}
	shf.r.wrap.b32 	%r13532, %r13531, %r13530, 25;
	shf.r.wrap.b32 	%r13533, %r13530, %r13531, 25;
	mov.b64 	%rd18895, {%r13533, %r13532};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13534,%dummy}, %rd18864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13535}, %rd18864;
	}
	shf.r.wrap.b32 	%r13536, %r13535, %r13534, 23;
	shf.r.wrap.b32 	%r13537, %r13534, %r13535, 23;
	mov.b64 	%rd18896, {%r13537, %r13536};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13538}, %rd18870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13539,%dummy}, %rd18870;
	}
	shf.l.wrap.b32 	%r13540, %r13539, %r13538, 2;
	shf.l.wrap.b32 	%r13541, %r13538, %r13539, 2;
	mov.b64 	%rd18897, {%r13541, %r13540};
	not.b64 	%rd18898, %rd18874;
	and.b64  	%rd18899, %rd18875, %rd18898;
	xor.b64  	%rd18900, %rd18899, %rd18849;
	not.b64 	%rd18901, %rd18875;
	and.b64  	%rd18902, %rd18876, %rd18901;
	xor.b64  	%rd18903, %rd18902, %rd18874;
	not.b64 	%rd18904, %rd18876;
	and.b64  	%rd18905, %rd18877, %rd18904;
	xor.b64  	%rd18906, %rd18905, %rd18875;
	not.b64 	%rd18907, %rd18877;
	and.b64  	%rd18908, %rd18849, %rd18907;
	xor.b64  	%rd18909, %rd18908, %rd18876;
	not.b64 	%rd18910, %rd18849;
	and.b64  	%rd18911, %rd18874, %rd18910;
	xor.b64  	%rd18912, %rd18911, %rd18877;
	not.b64 	%rd18913, %rd18879;
	and.b64  	%rd18914, %rd18880, %rd18913;
	xor.b64  	%rd18915, %rd18914, %rd18878;
	not.b64 	%rd18916, %rd18880;
	and.b64  	%rd18917, %rd18881, %rd18916;
	xor.b64  	%rd18918, %rd18917, %rd18879;
	not.b64 	%rd18919, %rd18881;
	and.b64  	%rd18920, %rd18882, %rd18919;
	xor.b64  	%rd18921, %rd18920, %rd18880;
	not.b64 	%rd18922, %rd18882;
	and.b64  	%rd18923, %rd18878, %rd18922;
	xor.b64  	%rd18924, %rd18923, %rd18881;
	not.b64 	%rd18925, %rd18878;
	and.b64  	%rd18926, %rd18879, %rd18925;
	xor.b64  	%rd18927, %rd18926, %rd18882;
	not.b64 	%rd18928, %rd18884;
	and.b64  	%rd18929, %rd18885, %rd18928;
	xor.b64  	%rd18930, %rd18929, %rd18883;
	not.b64 	%rd18931, %rd18885;
	and.b64  	%rd18932, %rd18886, %rd18931;
	xor.b64  	%rd18933, %rd18932, %rd18884;
	not.b64 	%rd18934, %rd18886;
	and.b64  	%rd18935, %rd18887, %rd18934;
	xor.b64  	%rd18936, %rd18935, %rd18885;
	not.b64 	%rd18937, %rd18887;
	and.b64  	%rd18938, %rd18883, %rd18937;
	xor.b64  	%rd18939, %rd18938, %rd18886;
	not.b64 	%rd18940, %rd18883;
	and.b64  	%rd18941, %rd18884, %rd18940;
	xor.b64  	%rd18942, %rd18941, %rd18887;
	not.b64 	%rd18943, %rd18889;
	and.b64  	%rd18944, %rd18890, %rd18943;
	xor.b64  	%rd18945, %rd18944, %rd18888;
	not.b64 	%rd18946, %rd18890;
	and.b64  	%rd18947, %rd18891, %rd18946;
	xor.b64  	%rd18948, %rd18947, %rd18889;
	not.b64 	%rd18949, %rd18891;
	and.b64  	%rd18950, %rd18892, %rd18949;
	xor.b64  	%rd18951, %rd18950, %rd18890;
	not.b64 	%rd18952, %rd18892;
	and.b64  	%rd18953, %rd18888, %rd18952;
	xor.b64  	%rd18954, %rd18953, %rd18891;
	not.b64 	%rd18955, %rd18888;
	and.b64  	%rd18956, %rd18889, %rd18955;
	xor.b64  	%rd18957, %rd18956, %rd18892;
	not.b64 	%rd18958, %rd18894;
	and.b64  	%rd18959, %rd18895, %rd18958;
	xor.b64  	%rd18960, %rd18959, %rd18893;
	not.b64 	%rd18961, %rd18895;
	and.b64  	%rd18962, %rd18896, %rd18961;
	xor.b64  	%rd18963, %rd18962, %rd18894;
	not.b64 	%rd18964, %rd18896;
	and.b64  	%rd18965, %rd18897, %rd18964;
	xor.b64  	%rd18966, %rd18965, %rd18895;
	not.b64 	%rd18967, %rd18897;
	and.b64  	%rd18968, %rd18893, %rd18967;
	xor.b64  	%rd18969, %rd18968, %rd18896;
	not.b64 	%rd18970, %rd18893;
	and.b64  	%rd18971, %rd18894, %rd18970;
	xor.b64  	%rd18972, %rd18971, %rd18897;
	xor.b64  	%rd18973, %rd18900, %rd35;
	xor.b64  	%rd18974, %rd18915, %rd18973;
	xor.b64  	%rd18975, %rd18974, %rd18930;
	xor.b64  	%rd18976, %rd18975, %rd18945;
	xor.b64  	%rd18977, %rd18976, %rd18960;
	xor.b64  	%rd18978, %rd18918, %rd18903;
	xor.b64  	%rd18979, %rd18978, %rd18933;
	xor.b64  	%rd18980, %rd18979, %rd18948;
	xor.b64  	%rd18981, %rd18980, %rd18963;
	xor.b64  	%rd18982, %rd18921, %rd18906;
	xor.b64  	%rd18983, %rd18982, %rd18936;
	xor.b64  	%rd18984, %rd18983, %rd18951;
	xor.b64  	%rd18985, %rd18984, %rd18966;
	xor.b64  	%rd18986, %rd18924, %rd18909;
	xor.b64  	%rd18987, %rd18986, %rd18939;
	xor.b64  	%rd18988, %rd18987, %rd18954;
	xor.b64  	%rd18989, %rd18988, %rd18969;
	xor.b64  	%rd18990, %rd18927, %rd18912;
	xor.b64  	%rd18991, %rd18990, %rd18942;
	xor.b64  	%rd18992, %rd18991, %rd18957;
	xor.b64  	%rd18993, %rd18992, %rd18972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13542}, %rd18981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13543,%dummy}, %rd18981;
	}
	shf.l.wrap.b32 	%r13544, %r13543, %r13542, 1;
	shf.l.wrap.b32 	%r13545, %r13542, %r13543, 1;
	mov.b64 	%rd18994, {%r13545, %r13544};
	xor.b64  	%rd18995, %rd18993, %rd18994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13546}, %rd18985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13547,%dummy}, %rd18985;
	}
	shf.l.wrap.b32 	%r13548, %r13547, %r13546, 1;
	shf.l.wrap.b32 	%r13549, %r13546, %r13547, 1;
	mov.b64 	%rd18996, {%r13549, %r13548};
	xor.b64  	%rd18997, %rd18996, %rd18977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13550}, %rd18989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13551,%dummy}, %rd18989;
	}
	shf.l.wrap.b32 	%r13552, %r13551, %r13550, 1;
	shf.l.wrap.b32 	%r13553, %r13550, %r13551, 1;
	mov.b64 	%rd18998, {%r13553, %r13552};
	xor.b64  	%rd18999, %rd18998, %rd18981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13554}, %rd18993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13555,%dummy}, %rd18993;
	}
	shf.l.wrap.b32 	%r13556, %r13555, %r13554, 1;
	shf.l.wrap.b32 	%r13557, %r13554, %r13555, 1;
	mov.b64 	%rd19000, {%r13557, %r13556};
	xor.b64  	%rd19001, %rd19000, %rd18985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13558}, %rd18977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13559,%dummy}, %rd18977;
	}
	shf.l.wrap.b32 	%r13560, %r13559, %r13558, 1;
	shf.l.wrap.b32 	%r13561, %r13558, %r13559, 1;
	mov.b64 	%rd19002, {%r13561, %r13560};
	xor.b64  	%rd19003, %rd18989, %rd19002;
	xor.b64  	%rd19004, %rd18995, %rd18973;
	xor.b64  	%rd19005, %rd18997, %rd18903;
	xor.b64  	%rd19006, %rd18999, %rd18906;
	xor.b64  	%rd19007, %rd19001, %rd18909;
	xor.b64  	%rd19008, %rd19003, %rd18912;
	xor.b64  	%rd19009, %rd18995, %rd18915;
	xor.b64  	%rd19010, %rd18997, %rd18918;
	xor.b64  	%rd19011, %rd18999, %rd18921;
	xor.b64  	%rd19012, %rd19001, %rd18924;
	xor.b64  	%rd19013, %rd19003, %rd18927;
	xor.b64  	%rd19014, %rd18995, %rd18930;
	xor.b64  	%rd19015, %rd18997, %rd18933;
	xor.b64  	%rd19016, %rd18999, %rd18936;
	xor.b64  	%rd19017, %rd19001, %rd18939;
	xor.b64  	%rd19018, %rd19003, %rd18942;
	xor.b64  	%rd19019, %rd18995, %rd18945;
	xor.b64  	%rd19020, %rd18997, %rd18948;
	xor.b64  	%rd19021, %rd18999, %rd18951;
	xor.b64  	%rd19022, %rd19001, %rd18954;
	xor.b64  	%rd19023, %rd19003, %rd18957;
	xor.b64  	%rd19024, %rd18995, %rd18960;
	xor.b64  	%rd19025, %rd18997, %rd18963;
	xor.b64  	%rd19026, %rd18999, %rd18966;
	xor.b64  	%rd19027, %rd19001, %rd18969;
	xor.b64  	%rd19028, %rd19003, %rd18972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13562,%dummy}, %rd19010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13563}, %rd19010;
	}
	shf.r.wrap.b32 	%r13564, %r13563, %r13562, 20;
	shf.r.wrap.b32 	%r13565, %r13562, %r13563, 20;
	mov.b64 	%rd19029, {%r13565, %r13564};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13566,%dummy}, %rd19016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13567}, %rd19016;
	}
	shf.r.wrap.b32 	%r13568, %r13567, %r13566, 21;
	shf.r.wrap.b32 	%r13569, %r13566, %r13567, 21;
	mov.b64 	%rd19030, {%r13569, %r13568};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13570}, %rd19022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13571,%dummy}, %rd19022;
	}
	shf.l.wrap.b32 	%r13572, %r13571, %r13570, 21;
	shf.l.wrap.b32 	%r13573, %r13570, %r13571, 21;
	mov.b64 	%rd19031, {%r13573, %r13572};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13574}, %rd19028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13575,%dummy}, %rd19028;
	}
	shf.l.wrap.b32 	%r13576, %r13575, %r13574, 14;
	shf.l.wrap.b32 	%r13577, %r13574, %r13575, 14;
	mov.b64 	%rd19032, {%r13577, %r13576};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13578}, %rd19007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13579,%dummy}, %rd19007;
	}
	shf.l.wrap.b32 	%r13580, %r13579, %r13578, 28;
	shf.l.wrap.b32 	%r13581, %r13578, %r13579, 28;
	mov.b64 	%rd19033, {%r13581, %r13580};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13582}, %rd19013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13583,%dummy}, %rd19013;
	}
	shf.l.wrap.b32 	%r13584, %r13583, %r13582, 20;
	shf.l.wrap.b32 	%r13585, %r13582, %r13583, 20;
	mov.b64 	%rd19034, {%r13585, %r13584};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13586}, %rd19014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13587,%dummy}, %rd19014;
	}
	shf.l.wrap.b32 	%r13588, %r13587, %r13586, 3;
	shf.l.wrap.b32 	%r13589, %r13586, %r13587, 3;
	mov.b64 	%rd19035, {%r13589, %r13588};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13590,%dummy}, %rd19020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13591}, %rd19020;
	}
	shf.r.wrap.b32 	%r13592, %r13591, %r13590, 19;
	shf.r.wrap.b32 	%r13593, %r13590, %r13591, 19;
	mov.b64 	%rd19036, {%r13593, %r13592};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13594,%dummy}, %rd19026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13595}, %rd19026;
	}
	shf.r.wrap.b32 	%r13596, %r13595, %r13594, 3;
	shf.r.wrap.b32 	%r13597, %r13594, %r13595, 3;
	mov.b64 	%rd19037, {%r13597, %r13596};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13598}, %rd19005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13599,%dummy}, %rd19005;
	}
	shf.l.wrap.b32 	%r13600, %r13599, %r13598, 1;
	shf.l.wrap.b32 	%r13601, %r13598, %r13599, 1;
	mov.b64 	%rd19038, {%r13601, %r13600};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13602}, %rd19011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13603,%dummy}, %rd19011;
	}
	shf.l.wrap.b32 	%r13604, %r13603, %r13602, 6;
	shf.l.wrap.b32 	%r13605, %r13602, %r13603, 6;
	mov.b64 	%rd19039, {%r13605, %r13604};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13606}, %rd19017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13607,%dummy}, %rd19017;
	}
	shf.l.wrap.b32 	%r13608, %r13607, %r13606, 25;
	shf.l.wrap.b32 	%r13609, %r13606, %r13607, 25;
	mov.b64 	%rd19040, {%r13609, %r13608};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13610}, %rd19023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13611,%dummy}, %rd19023;
	}
	shf.l.wrap.b32 	%r13612, %r13611, %r13610, 8;
	shf.l.wrap.b32 	%r13613, %r13610, %r13611, 8;
	mov.b64 	%rd19041, {%r13613, %r13612};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13614}, %rd19024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13615,%dummy}, %rd19024;
	}
	shf.l.wrap.b32 	%r13616, %r13615, %r13614, 18;
	shf.l.wrap.b32 	%r13617, %r13614, %r13615, 18;
	mov.b64 	%rd19042, {%r13617, %r13616};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13618}, %rd19008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13619,%dummy}, %rd19008;
	}
	shf.l.wrap.b32 	%r13620, %r13619, %r13618, 27;
	shf.l.wrap.b32 	%r13621, %r13618, %r13619, 27;
	mov.b64 	%rd19043, {%r13621, %r13620};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13622,%dummy}, %rd19009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13623}, %rd19009;
	}
	shf.r.wrap.b32 	%r13624, %r13623, %r13622, 28;
	shf.r.wrap.b32 	%r13625, %r13622, %r13623, 28;
	mov.b64 	%rd19044, {%r13625, %r13624};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13626}, %rd19015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13627,%dummy}, %rd19015;
	}
	shf.l.wrap.b32 	%r13628, %r13627, %r13626, 10;
	shf.l.wrap.b32 	%r13629, %r13626, %r13627, 10;
	mov.b64 	%rd19045, {%r13629, %r13628};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13630}, %rd19021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13631,%dummy}, %rd19021;
	}
	shf.l.wrap.b32 	%r13632, %r13631, %r13630, 15;
	shf.l.wrap.b32 	%r13633, %r13630, %r13631, 15;
	mov.b64 	%rd19046, {%r13633, %r13632};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13634,%dummy}, %rd19027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13635}, %rd19027;
	}
	shf.r.wrap.b32 	%r13636, %r13635, %r13634, 8;
	shf.r.wrap.b32 	%r13637, %r13634, %r13635, 8;
	mov.b64 	%rd19047, {%r13637, %r13636};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13638,%dummy}, %rd19006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13639}, %rd19006;
	}
	shf.r.wrap.b32 	%r13640, %r13639, %r13638, 2;
	shf.r.wrap.b32 	%r13641, %r13638, %r13639, 2;
	mov.b64 	%rd19048, {%r13641, %r13640};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13642,%dummy}, %rd19012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13643}, %rd19012;
	}
	shf.r.wrap.b32 	%r13644, %r13643, %r13642, 9;
	shf.r.wrap.b32 	%r13645, %r13642, %r13643, 9;
	mov.b64 	%rd19049, {%r13645, %r13644};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13646,%dummy}, %rd19018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13647}, %rd19018;
	}
	shf.r.wrap.b32 	%r13648, %r13647, %r13646, 25;
	shf.r.wrap.b32 	%r13649, %r13646, %r13647, 25;
	mov.b64 	%rd19050, {%r13649, %r13648};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13650,%dummy}, %rd19019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13651}, %rd19019;
	}
	shf.r.wrap.b32 	%r13652, %r13651, %r13650, 23;
	shf.r.wrap.b32 	%r13653, %r13650, %r13651, 23;
	mov.b64 	%rd19051, {%r13653, %r13652};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13654}, %rd19025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13655,%dummy}, %rd19025;
	}
	shf.l.wrap.b32 	%r13656, %r13655, %r13654, 2;
	shf.l.wrap.b32 	%r13657, %r13654, %r13655, 2;
	mov.b64 	%rd19052, {%r13657, %r13656};
	not.b64 	%rd19053, %rd19029;
	and.b64  	%rd19054, %rd19030, %rd19053;
	xor.b64  	%rd19055, %rd19054, %rd19004;
	not.b64 	%rd19056, %rd19030;
	and.b64  	%rd19057, %rd19031, %rd19056;
	xor.b64  	%rd19058, %rd19057, %rd19029;
	not.b64 	%rd19059, %rd19031;
	and.b64  	%rd19060, %rd19032, %rd19059;
	xor.b64  	%rd19061, %rd19060, %rd19030;
	not.b64 	%rd19062, %rd19032;
	and.b64  	%rd19063, %rd19004, %rd19062;
	xor.b64  	%rd19064, %rd19063, %rd19031;
	not.b64 	%rd19065, %rd19004;
	and.b64  	%rd19066, %rd19029, %rd19065;
	xor.b64  	%rd19067, %rd19066, %rd19032;
	not.b64 	%rd19068, %rd19034;
	and.b64  	%rd19069, %rd19035, %rd19068;
	xor.b64  	%rd19070, %rd19069, %rd19033;
	not.b64 	%rd19071, %rd19035;
	and.b64  	%rd19072, %rd19036, %rd19071;
	xor.b64  	%rd19073, %rd19072, %rd19034;
	not.b64 	%rd19074, %rd19036;
	and.b64  	%rd19075, %rd19037, %rd19074;
	xor.b64  	%rd19076, %rd19075, %rd19035;
	not.b64 	%rd19077, %rd19037;
	and.b64  	%rd19078, %rd19033, %rd19077;
	xor.b64  	%rd19079, %rd19078, %rd19036;
	not.b64 	%rd19080, %rd19033;
	and.b64  	%rd19081, %rd19034, %rd19080;
	xor.b64  	%rd19082, %rd19081, %rd19037;
	not.b64 	%rd19083, %rd19039;
	and.b64  	%rd19084, %rd19040, %rd19083;
	xor.b64  	%rd19085, %rd19084, %rd19038;
	not.b64 	%rd19086, %rd19040;
	and.b64  	%rd19087, %rd19041, %rd19086;
	xor.b64  	%rd19088, %rd19087, %rd19039;
	not.b64 	%rd19089, %rd19041;
	and.b64  	%rd19090, %rd19042, %rd19089;
	xor.b64  	%rd19091, %rd19090, %rd19040;
	not.b64 	%rd19092, %rd19042;
	and.b64  	%rd19093, %rd19038, %rd19092;
	xor.b64  	%rd19094, %rd19093, %rd19041;
	not.b64 	%rd19095, %rd19038;
	and.b64  	%rd19096, %rd19039, %rd19095;
	xor.b64  	%rd19097, %rd19096, %rd19042;
	not.b64 	%rd19098, %rd19044;
	and.b64  	%rd19099, %rd19045, %rd19098;
	xor.b64  	%rd19100, %rd19099, %rd19043;
	not.b64 	%rd19101, %rd19045;
	and.b64  	%rd19102, %rd19046, %rd19101;
	xor.b64  	%rd19103, %rd19102, %rd19044;
	not.b64 	%rd19104, %rd19046;
	and.b64  	%rd19105, %rd19047, %rd19104;
	xor.b64  	%rd19106, %rd19105, %rd19045;
	not.b64 	%rd19107, %rd19047;
	and.b64  	%rd19108, %rd19043, %rd19107;
	xor.b64  	%rd19109, %rd19108, %rd19046;
	not.b64 	%rd19110, %rd19043;
	and.b64  	%rd19111, %rd19044, %rd19110;
	xor.b64  	%rd19112, %rd19111, %rd19047;
	not.b64 	%rd19113, %rd19049;
	and.b64  	%rd19114, %rd19050, %rd19113;
	xor.b64  	%rd19115, %rd19114, %rd19048;
	not.b64 	%rd19116, %rd19050;
	and.b64  	%rd19117, %rd19051, %rd19116;
	xor.b64  	%rd19118, %rd19117, %rd19049;
	not.b64 	%rd19119, %rd19051;
	and.b64  	%rd19120, %rd19052, %rd19119;
	xor.b64  	%rd19121, %rd19120, %rd19050;
	not.b64 	%rd19122, %rd19052;
	and.b64  	%rd19123, %rd19048, %rd19122;
	xor.b64  	%rd19124, %rd19123, %rd19051;
	not.b64 	%rd19125, %rd19048;
	and.b64  	%rd19126, %rd19049, %rd19125;
	xor.b64  	%rd19127, %rd19126, %rd19052;
	xor.b64  	%rd19128, %rd19055, %rd36;
	xor.b64  	%rd19129, %rd19070, %rd19128;
	xor.b64  	%rd19130, %rd19129, %rd19085;
	xor.b64  	%rd19131, %rd19130, %rd19100;
	xor.b64  	%rd19132, %rd19131, %rd19115;
	xor.b64  	%rd19133, %rd19073, %rd19058;
	xor.b64  	%rd19134, %rd19133, %rd19088;
	xor.b64  	%rd19135, %rd19134, %rd19103;
	xor.b64  	%rd19136, %rd19135, %rd19118;
	xor.b64  	%rd19137, %rd19076, %rd19061;
	xor.b64  	%rd19138, %rd19137, %rd19091;
	xor.b64  	%rd19139, %rd19138, %rd19106;
	xor.b64  	%rd19140, %rd19139, %rd19121;
	xor.b64  	%rd19141, %rd19079, %rd19064;
	xor.b64  	%rd19142, %rd19141, %rd19094;
	xor.b64  	%rd19143, %rd19142, %rd19109;
	xor.b64  	%rd19144, %rd19143, %rd19124;
	xor.b64  	%rd19145, %rd19082, %rd19067;
	xor.b64  	%rd19146, %rd19145, %rd19097;
	xor.b64  	%rd19147, %rd19146, %rd19112;
	xor.b64  	%rd19148, %rd19147, %rd19127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13658}, %rd19136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13659,%dummy}, %rd19136;
	}
	shf.l.wrap.b32 	%r13660, %r13659, %r13658, 1;
	shf.l.wrap.b32 	%r13661, %r13658, %r13659, 1;
	mov.b64 	%rd19149, {%r13661, %r13660};
	xor.b64  	%rd19150, %rd19148, %rd19149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13662}, %rd19140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13663,%dummy}, %rd19140;
	}
	shf.l.wrap.b32 	%r13664, %r13663, %r13662, 1;
	shf.l.wrap.b32 	%r13665, %r13662, %r13663, 1;
	mov.b64 	%rd19151, {%r13665, %r13664};
	xor.b64  	%rd19152, %rd19151, %rd19132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13666}, %rd19144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13667,%dummy}, %rd19144;
	}
	shf.l.wrap.b32 	%r13668, %r13667, %r13666, 1;
	shf.l.wrap.b32 	%r13669, %r13666, %r13667, 1;
	mov.b64 	%rd19153, {%r13669, %r13668};
	xor.b64  	%rd19154, %rd19153, %rd19136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13670}, %rd19148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13671,%dummy}, %rd19148;
	}
	shf.l.wrap.b32 	%r13672, %r13671, %r13670, 1;
	shf.l.wrap.b32 	%r13673, %r13670, %r13671, 1;
	mov.b64 	%rd19155, {%r13673, %r13672};
	xor.b64  	%rd19156, %rd19155, %rd19140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13674}, %rd19132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13675,%dummy}, %rd19132;
	}
	shf.l.wrap.b32 	%r13676, %r13675, %r13674, 1;
	shf.l.wrap.b32 	%r13677, %r13674, %r13675, 1;
	mov.b64 	%rd19157, {%r13677, %r13676};
	xor.b64  	%rd19158, %rd19144, %rd19157;
	xor.b64  	%rd19159, %rd19150, %rd19128;
	xor.b64  	%rd19160, %rd19152, %rd19058;
	xor.b64  	%rd19161, %rd19154, %rd19061;
	xor.b64  	%rd19162, %rd19156, %rd19064;
	xor.b64  	%rd19163, %rd19158, %rd19067;
	xor.b64  	%rd19164, %rd19150, %rd19070;
	xor.b64  	%rd19165, %rd19152, %rd19073;
	xor.b64  	%rd19166, %rd19154, %rd19076;
	xor.b64  	%rd19167, %rd19156, %rd19079;
	xor.b64  	%rd19168, %rd19158, %rd19082;
	xor.b64  	%rd19169, %rd19150, %rd19085;
	xor.b64  	%rd19170, %rd19152, %rd19088;
	xor.b64  	%rd19171, %rd19154, %rd19091;
	xor.b64  	%rd19172, %rd19156, %rd19094;
	xor.b64  	%rd19173, %rd19158, %rd19097;
	xor.b64  	%rd19174, %rd19150, %rd19100;
	xor.b64  	%rd19175, %rd19152, %rd19103;
	xor.b64  	%rd19176, %rd19154, %rd19106;
	xor.b64  	%rd19177, %rd19156, %rd19109;
	xor.b64  	%rd19178, %rd19158, %rd19112;
	xor.b64  	%rd19179, %rd19150, %rd19115;
	xor.b64  	%rd19180, %rd19152, %rd19118;
	xor.b64  	%rd19181, %rd19154, %rd19121;
	xor.b64  	%rd19182, %rd19156, %rd19124;
	xor.b64  	%rd19183, %rd19158, %rd19127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13678,%dummy}, %rd19165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13679}, %rd19165;
	}
	shf.r.wrap.b32 	%r13680, %r13679, %r13678, 20;
	shf.r.wrap.b32 	%r13681, %r13678, %r13679, 20;
	mov.b64 	%rd19184, {%r13681, %r13680};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13682,%dummy}, %rd19171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13683}, %rd19171;
	}
	shf.r.wrap.b32 	%r13684, %r13683, %r13682, 21;
	shf.r.wrap.b32 	%r13685, %r13682, %r13683, 21;
	mov.b64 	%rd19185, {%r13685, %r13684};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13686}, %rd19177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13687,%dummy}, %rd19177;
	}
	shf.l.wrap.b32 	%r13688, %r13687, %r13686, 21;
	shf.l.wrap.b32 	%r13689, %r13686, %r13687, 21;
	mov.b64 	%rd19186, {%r13689, %r13688};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13690}, %rd19183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13691,%dummy}, %rd19183;
	}
	shf.l.wrap.b32 	%r13692, %r13691, %r13690, 14;
	shf.l.wrap.b32 	%r13693, %r13690, %r13691, 14;
	mov.b64 	%rd19187, {%r13693, %r13692};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13694}, %rd19162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13695,%dummy}, %rd19162;
	}
	shf.l.wrap.b32 	%r13696, %r13695, %r13694, 28;
	shf.l.wrap.b32 	%r13697, %r13694, %r13695, 28;
	mov.b64 	%rd19188, {%r13697, %r13696};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13698}, %rd19168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13699,%dummy}, %rd19168;
	}
	shf.l.wrap.b32 	%r13700, %r13699, %r13698, 20;
	shf.l.wrap.b32 	%r13701, %r13698, %r13699, 20;
	mov.b64 	%rd19189, {%r13701, %r13700};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13702}, %rd19169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13703,%dummy}, %rd19169;
	}
	shf.l.wrap.b32 	%r13704, %r13703, %r13702, 3;
	shf.l.wrap.b32 	%r13705, %r13702, %r13703, 3;
	mov.b64 	%rd19190, {%r13705, %r13704};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13706,%dummy}, %rd19175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13707}, %rd19175;
	}
	shf.r.wrap.b32 	%r13708, %r13707, %r13706, 19;
	shf.r.wrap.b32 	%r13709, %r13706, %r13707, 19;
	mov.b64 	%rd19191, {%r13709, %r13708};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13710,%dummy}, %rd19181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13711}, %rd19181;
	}
	shf.r.wrap.b32 	%r13712, %r13711, %r13710, 3;
	shf.r.wrap.b32 	%r13713, %r13710, %r13711, 3;
	mov.b64 	%rd19192, {%r13713, %r13712};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13714}, %rd19160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13715,%dummy}, %rd19160;
	}
	shf.l.wrap.b32 	%r13716, %r13715, %r13714, 1;
	shf.l.wrap.b32 	%r13717, %r13714, %r13715, 1;
	mov.b64 	%rd19193, {%r13717, %r13716};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13718}, %rd19166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13719,%dummy}, %rd19166;
	}
	shf.l.wrap.b32 	%r13720, %r13719, %r13718, 6;
	shf.l.wrap.b32 	%r13721, %r13718, %r13719, 6;
	mov.b64 	%rd19194, {%r13721, %r13720};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13722}, %rd19172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13723,%dummy}, %rd19172;
	}
	shf.l.wrap.b32 	%r13724, %r13723, %r13722, 25;
	shf.l.wrap.b32 	%r13725, %r13722, %r13723, 25;
	mov.b64 	%rd19195, {%r13725, %r13724};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13726}, %rd19178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13727,%dummy}, %rd19178;
	}
	shf.l.wrap.b32 	%r13728, %r13727, %r13726, 8;
	shf.l.wrap.b32 	%r13729, %r13726, %r13727, 8;
	mov.b64 	%rd19196, {%r13729, %r13728};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13730}, %rd19179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13731,%dummy}, %rd19179;
	}
	shf.l.wrap.b32 	%r13732, %r13731, %r13730, 18;
	shf.l.wrap.b32 	%r13733, %r13730, %r13731, 18;
	mov.b64 	%rd19197, {%r13733, %r13732};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13734}, %rd19163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13735,%dummy}, %rd19163;
	}
	shf.l.wrap.b32 	%r13736, %r13735, %r13734, 27;
	shf.l.wrap.b32 	%r13737, %r13734, %r13735, 27;
	mov.b64 	%rd19198, {%r13737, %r13736};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13738,%dummy}, %rd19164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13739}, %rd19164;
	}
	shf.r.wrap.b32 	%r13740, %r13739, %r13738, 28;
	shf.r.wrap.b32 	%r13741, %r13738, %r13739, 28;
	mov.b64 	%rd19199, {%r13741, %r13740};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13742}, %rd19170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13743,%dummy}, %rd19170;
	}
	shf.l.wrap.b32 	%r13744, %r13743, %r13742, 10;
	shf.l.wrap.b32 	%r13745, %r13742, %r13743, 10;
	mov.b64 	%rd19200, {%r13745, %r13744};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13746}, %rd19176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13747,%dummy}, %rd19176;
	}
	shf.l.wrap.b32 	%r13748, %r13747, %r13746, 15;
	shf.l.wrap.b32 	%r13749, %r13746, %r13747, 15;
	mov.b64 	%rd19201, {%r13749, %r13748};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13750,%dummy}, %rd19182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13751}, %rd19182;
	}
	shf.r.wrap.b32 	%r13752, %r13751, %r13750, 8;
	shf.r.wrap.b32 	%r13753, %r13750, %r13751, 8;
	mov.b64 	%rd19202, {%r13753, %r13752};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13754,%dummy}, %rd19161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13755}, %rd19161;
	}
	shf.r.wrap.b32 	%r13756, %r13755, %r13754, 2;
	shf.r.wrap.b32 	%r13757, %r13754, %r13755, 2;
	mov.b64 	%rd19203, {%r13757, %r13756};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13758,%dummy}, %rd19167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13759}, %rd19167;
	}
	shf.r.wrap.b32 	%r13760, %r13759, %r13758, 9;
	shf.r.wrap.b32 	%r13761, %r13758, %r13759, 9;
	mov.b64 	%rd19204, {%r13761, %r13760};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13762,%dummy}, %rd19173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13763}, %rd19173;
	}
	shf.r.wrap.b32 	%r13764, %r13763, %r13762, 25;
	shf.r.wrap.b32 	%r13765, %r13762, %r13763, 25;
	mov.b64 	%rd19205, {%r13765, %r13764};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13766,%dummy}, %rd19174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13767}, %rd19174;
	}
	shf.r.wrap.b32 	%r13768, %r13767, %r13766, 23;
	shf.r.wrap.b32 	%r13769, %r13766, %r13767, 23;
	mov.b64 	%rd19206, {%r13769, %r13768};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13770}, %rd19180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13771,%dummy}, %rd19180;
	}
	shf.l.wrap.b32 	%r13772, %r13771, %r13770, 2;
	shf.l.wrap.b32 	%r13773, %r13770, %r13771, 2;
	mov.b64 	%rd19207, {%r13773, %r13772};
	not.b64 	%rd19208, %rd19184;
	and.b64  	%rd19209, %rd19185, %rd19208;
	xor.b64  	%rd19210, %rd19209, %rd19159;
	not.b64 	%rd19211, %rd19185;
	and.b64  	%rd19212, %rd19186, %rd19211;
	xor.b64  	%rd19213, %rd19212, %rd19184;
	not.b64 	%rd19214, %rd19186;
	and.b64  	%rd19215, %rd19187, %rd19214;
	xor.b64  	%rd19216, %rd19215, %rd19185;
	not.b64 	%rd19217, %rd19187;
	and.b64  	%rd19218, %rd19159, %rd19217;
	xor.b64  	%rd19219, %rd19218, %rd19186;
	not.b64 	%rd19220, %rd19159;
	and.b64  	%rd19221, %rd19184, %rd19220;
	xor.b64  	%rd19222, %rd19221, %rd19187;
	not.b64 	%rd19223, %rd19189;
	and.b64  	%rd19224, %rd19190, %rd19223;
	xor.b64  	%rd19225, %rd19224, %rd19188;
	not.b64 	%rd19226, %rd19190;
	and.b64  	%rd19227, %rd19191, %rd19226;
	xor.b64  	%rd19228, %rd19227, %rd19189;
	not.b64 	%rd19229, %rd19191;
	and.b64  	%rd19230, %rd19192, %rd19229;
	xor.b64  	%rd19231, %rd19230, %rd19190;
	not.b64 	%rd19232, %rd19192;
	and.b64  	%rd19233, %rd19188, %rd19232;
	xor.b64  	%rd19234, %rd19233, %rd19191;
	not.b64 	%rd19235, %rd19188;
	and.b64  	%rd19236, %rd19189, %rd19235;
	xor.b64  	%rd19237, %rd19236, %rd19192;
	not.b64 	%rd19238, %rd19194;
	and.b64  	%rd19239, %rd19195, %rd19238;
	xor.b64  	%rd19240, %rd19239, %rd19193;
	not.b64 	%rd19241, %rd19195;
	and.b64  	%rd19242, %rd19196, %rd19241;
	xor.b64  	%rd19243, %rd19242, %rd19194;
	not.b64 	%rd19244, %rd19196;
	and.b64  	%rd19245, %rd19197, %rd19244;
	xor.b64  	%rd19246, %rd19245, %rd19195;
	not.b64 	%rd19247, %rd19197;
	and.b64  	%rd19248, %rd19193, %rd19247;
	xor.b64  	%rd19249, %rd19248, %rd19196;
	not.b64 	%rd19250, %rd19193;
	and.b64  	%rd19251, %rd19194, %rd19250;
	xor.b64  	%rd19252, %rd19251, %rd19197;
	not.b64 	%rd19253, %rd19199;
	and.b64  	%rd19254, %rd19200, %rd19253;
	xor.b64  	%rd19255, %rd19254, %rd19198;
	not.b64 	%rd19256, %rd19200;
	and.b64  	%rd19257, %rd19201, %rd19256;
	xor.b64  	%rd19258, %rd19257, %rd19199;
	not.b64 	%rd19259, %rd19201;
	and.b64  	%rd19260, %rd19202, %rd19259;
	xor.b64  	%rd19261, %rd19260, %rd19200;
	not.b64 	%rd19262, %rd19202;
	and.b64  	%rd19263, %rd19198, %rd19262;
	xor.b64  	%rd19264, %rd19263, %rd19201;
	not.b64 	%rd19265, %rd19198;
	and.b64  	%rd19266, %rd19199, %rd19265;
	xor.b64  	%rd19267, %rd19266, %rd19202;
	not.b64 	%rd19268, %rd19204;
	and.b64  	%rd19269, %rd19205, %rd19268;
	xor.b64  	%rd19270, %rd19269, %rd19203;
	not.b64 	%rd19271, %rd19205;
	and.b64  	%rd19272, %rd19206, %rd19271;
	xor.b64  	%rd19273, %rd19272, %rd19204;
	not.b64 	%rd19274, %rd19206;
	and.b64  	%rd19275, %rd19207, %rd19274;
	xor.b64  	%rd19276, %rd19275, %rd19205;
	not.b64 	%rd19277, %rd19207;
	and.b64  	%rd19278, %rd19203, %rd19277;
	xor.b64  	%rd19279, %rd19278, %rd19206;
	not.b64 	%rd19280, %rd19203;
	and.b64  	%rd19281, %rd19204, %rd19280;
	xor.b64  	%rd19282, %rd19281, %rd19207;
	xor.b64  	%rd19283, %rd19210, %rd37;
	xor.b64  	%rd19284, %rd19225, %rd19283;
	xor.b64  	%rd19285, %rd19284, %rd19240;
	xor.b64  	%rd19286, %rd19285, %rd19255;
	xor.b64  	%rd19287, %rd19286, %rd19270;
	xor.b64  	%rd19288, %rd19228, %rd19213;
	xor.b64  	%rd19289, %rd19288, %rd19243;
	xor.b64  	%rd19290, %rd19289, %rd19258;
	xor.b64  	%rd19291, %rd19290, %rd19273;
	xor.b64  	%rd19292, %rd19231, %rd19216;
	xor.b64  	%rd19293, %rd19292, %rd19246;
	xor.b64  	%rd19294, %rd19293, %rd19261;
	xor.b64  	%rd19295, %rd19294, %rd19276;
	xor.b64  	%rd19296, %rd19234, %rd19219;
	xor.b64  	%rd19297, %rd19296, %rd19249;
	xor.b64  	%rd19298, %rd19297, %rd19264;
	xor.b64  	%rd19299, %rd19298, %rd19279;
	xor.b64  	%rd19300, %rd19237, %rd19222;
	xor.b64  	%rd19301, %rd19300, %rd19252;
	xor.b64  	%rd19302, %rd19301, %rd19267;
	xor.b64  	%rd19303, %rd19302, %rd19282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13774}, %rd19291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13775,%dummy}, %rd19291;
	}
	shf.l.wrap.b32 	%r13776, %r13775, %r13774, 1;
	shf.l.wrap.b32 	%r13777, %r13774, %r13775, 1;
	mov.b64 	%rd19304, {%r13777, %r13776};
	xor.b64  	%rd19305, %rd19303, %rd19304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13778}, %rd19295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13779,%dummy}, %rd19295;
	}
	shf.l.wrap.b32 	%r13780, %r13779, %r13778, 1;
	shf.l.wrap.b32 	%r13781, %r13778, %r13779, 1;
	mov.b64 	%rd19306, {%r13781, %r13780};
	xor.b64  	%rd19307, %rd19306, %rd19287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13782}, %rd19299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13783,%dummy}, %rd19299;
	}
	shf.l.wrap.b32 	%r13784, %r13783, %r13782, 1;
	shf.l.wrap.b32 	%r13785, %r13782, %r13783, 1;
	mov.b64 	%rd19308, {%r13785, %r13784};
	xor.b64  	%rd19309, %rd19308, %rd19291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13786}, %rd19303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13787,%dummy}, %rd19303;
	}
	shf.l.wrap.b32 	%r13788, %r13787, %r13786, 1;
	shf.l.wrap.b32 	%r13789, %r13786, %r13787, 1;
	mov.b64 	%rd19310, {%r13789, %r13788};
	xor.b64  	%rd19311, %rd19310, %rd19295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13790}, %rd19287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13791,%dummy}, %rd19287;
	}
	shf.l.wrap.b32 	%r13792, %r13791, %r13790, 1;
	shf.l.wrap.b32 	%r13793, %r13790, %r13791, 1;
	mov.b64 	%rd19312, {%r13793, %r13792};
	xor.b64  	%rd19313, %rd19299, %rd19312;
	xor.b64  	%rd19314, %rd19305, %rd19283;
	xor.b64  	%rd19315, %rd19307, %rd19213;
	xor.b64  	%rd19316, %rd19309, %rd19216;
	xor.b64  	%rd19317, %rd19311, %rd19219;
	xor.b64  	%rd19318, %rd19313, %rd19222;
	xor.b64  	%rd19319, %rd19305, %rd19225;
	xor.b64  	%rd19320, %rd19307, %rd19228;
	xor.b64  	%rd19321, %rd19309, %rd19231;
	xor.b64  	%rd19322, %rd19311, %rd19234;
	xor.b64  	%rd19323, %rd19313, %rd19237;
	xor.b64  	%rd19324, %rd19305, %rd19240;
	xor.b64  	%rd19325, %rd19307, %rd19243;
	xor.b64  	%rd19326, %rd19309, %rd19246;
	xor.b64  	%rd19327, %rd19311, %rd19249;
	xor.b64  	%rd19328, %rd19313, %rd19252;
	xor.b64  	%rd19329, %rd19305, %rd19255;
	xor.b64  	%rd19330, %rd19307, %rd19258;
	xor.b64  	%rd19331, %rd19309, %rd19261;
	xor.b64  	%rd19332, %rd19311, %rd19264;
	xor.b64  	%rd19333, %rd19313, %rd19267;
	xor.b64  	%rd19334, %rd19305, %rd19270;
	xor.b64  	%rd19335, %rd19307, %rd19273;
	xor.b64  	%rd19336, %rd19309, %rd19276;
	xor.b64  	%rd19337, %rd19311, %rd19279;
	xor.b64  	%rd19338, %rd19313, %rd19282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13794,%dummy}, %rd19320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13795}, %rd19320;
	}
	shf.r.wrap.b32 	%r13796, %r13795, %r13794, 20;
	shf.r.wrap.b32 	%r13797, %r13794, %r13795, 20;
	mov.b64 	%rd19339, {%r13797, %r13796};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13798,%dummy}, %rd19326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13799}, %rd19326;
	}
	shf.r.wrap.b32 	%r13800, %r13799, %r13798, 21;
	shf.r.wrap.b32 	%r13801, %r13798, %r13799, 21;
	mov.b64 	%rd19340, {%r13801, %r13800};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13802}, %rd19332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13803,%dummy}, %rd19332;
	}
	shf.l.wrap.b32 	%r13804, %r13803, %r13802, 21;
	shf.l.wrap.b32 	%r13805, %r13802, %r13803, 21;
	mov.b64 	%rd19341, {%r13805, %r13804};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13806}, %rd19338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13807,%dummy}, %rd19338;
	}
	shf.l.wrap.b32 	%r13808, %r13807, %r13806, 14;
	shf.l.wrap.b32 	%r13809, %r13806, %r13807, 14;
	mov.b64 	%rd19342, {%r13809, %r13808};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13810}, %rd19317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13811,%dummy}, %rd19317;
	}
	shf.l.wrap.b32 	%r13812, %r13811, %r13810, 28;
	shf.l.wrap.b32 	%r13813, %r13810, %r13811, 28;
	mov.b64 	%rd19343, {%r13813, %r13812};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13814}, %rd19323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13815,%dummy}, %rd19323;
	}
	shf.l.wrap.b32 	%r13816, %r13815, %r13814, 20;
	shf.l.wrap.b32 	%r13817, %r13814, %r13815, 20;
	mov.b64 	%rd19344, {%r13817, %r13816};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13818}, %rd19324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13819,%dummy}, %rd19324;
	}
	shf.l.wrap.b32 	%r13820, %r13819, %r13818, 3;
	shf.l.wrap.b32 	%r13821, %r13818, %r13819, 3;
	mov.b64 	%rd19345, {%r13821, %r13820};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13822,%dummy}, %rd19330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13823}, %rd19330;
	}
	shf.r.wrap.b32 	%r13824, %r13823, %r13822, 19;
	shf.r.wrap.b32 	%r13825, %r13822, %r13823, 19;
	mov.b64 	%rd19346, {%r13825, %r13824};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13826,%dummy}, %rd19336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13827}, %rd19336;
	}
	shf.r.wrap.b32 	%r13828, %r13827, %r13826, 3;
	shf.r.wrap.b32 	%r13829, %r13826, %r13827, 3;
	mov.b64 	%rd19347, {%r13829, %r13828};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13830}, %rd19315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13831,%dummy}, %rd19315;
	}
	shf.l.wrap.b32 	%r13832, %r13831, %r13830, 1;
	shf.l.wrap.b32 	%r13833, %r13830, %r13831, 1;
	mov.b64 	%rd19348, {%r13833, %r13832};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13834}, %rd19321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13835,%dummy}, %rd19321;
	}
	shf.l.wrap.b32 	%r13836, %r13835, %r13834, 6;
	shf.l.wrap.b32 	%r13837, %r13834, %r13835, 6;
	mov.b64 	%rd19349, {%r13837, %r13836};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13838}, %rd19327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13839,%dummy}, %rd19327;
	}
	shf.l.wrap.b32 	%r13840, %r13839, %r13838, 25;
	shf.l.wrap.b32 	%r13841, %r13838, %r13839, 25;
	mov.b64 	%rd19350, {%r13841, %r13840};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13842}, %rd19333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13843,%dummy}, %rd19333;
	}
	shf.l.wrap.b32 	%r13844, %r13843, %r13842, 8;
	shf.l.wrap.b32 	%r13845, %r13842, %r13843, 8;
	mov.b64 	%rd19351, {%r13845, %r13844};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13846}, %rd19334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13847,%dummy}, %rd19334;
	}
	shf.l.wrap.b32 	%r13848, %r13847, %r13846, 18;
	shf.l.wrap.b32 	%r13849, %r13846, %r13847, 18;
	mov.b64 	%rd19352, {%r13849, %r13848};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13850}, %rd19318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13851,%dummy}, %rd19318;
	}
	shf.l.wrap.b32 	%r13852, %r13851, %r13850, 27;
	shf.l.wrap.b32 	%r13853, %r13850, %r13851, 27;
	mov.b64 	%rd19353, {%r13853, %r13852};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13854,%dummy}, %rd19319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13855}, %rd19319;
	}
	shf.r.wrap.b32 	%r13856, %r13855, %r13854, 28;
	shf.r.wrap.b32 	%r13857, %r13854, %r13855, 28;
	mov.b64 	%rd19354, {%r13857, %r13856};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13858}, %rd19325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13859,%dummy}, %rd19325;
	}
	shf.l.wrap.b32 	%r13860, %r13859, %r13858, 10;
	shf.l.wrap.b32 	%r13861, %r13858, %r13859, 10;
	mov.b64 	%rd19355, {%r13861, %r13860};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13862}, %rd19331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13863,%dummy}, %rd19331;
	}
	shf.l.wrap.b32 	%r13864, %r13863, %r13862, 15;
	shf.l.wrap.b32 	%r13865, %r13862, %r13863, 15;
	mov.b64 	%rd19356, {%r13865, %r13864};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13866,%dummy}, %rd19337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13867}, %rd19337;
	}
	shf.r.wrap.b32 	%r13868, %r13867, %r13866, 8;
	shf.r.wrap.b32 	%r13869, %r13866, %r13867, 8;
	mov.b64 	%rd19357, {%r13869, %r13868};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13870,%dummy}, %rd19316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13871}, %rd19316;
	}
	shf.r.wrap.b32 	%r13872, %r13871, %r13870, 2;
	shf.r.wrap.b32 	%r13873, %r13870, %r13871, 2;
	mov.b64 	%rd19358, {%r13873, %r13872};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13874,%dummy}, %rd19322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13875}, %rd19322;
	}
	shf.r.wrap.b32 	%r13876, %r13875, %r13874, 9;
	shf.r.wrap.b32 	%r13877, %r13874, %r13875, 9;
	mov.b64 	%rd19359, {%r13877, %r13876};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13878,%dummy}, %rd19328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13879}, %rd19328;
	}
	shf.r.wrap.b32 	%r13880, %r13879, %r13878, 25;
	shf.r.wrap.b32 	%r13881, %r13878, %r13879, 25;
	mov.b64 	%rd19360, {%r13881, %r13880};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13882,%dummy}, %rd19329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13883}, %rd19329;
	}
	shf.r.wrap.b32 	%r13884, %r13883, %r13882, 23;
	shf.r.wrap.b32 	%r13885, %r13882, %r13883, 23;
	mov.b64 	%rd19361, {%r13885, %r13884};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13886}, %rd19335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13887,%dummy}, %rd19335;
	}
	shf.l.wrap.b32 	%r13888, %r13887, %r13886, 2;
	shf.l.wrap.b32 	%r13889, %r13886, %r13887, 2;
	mov.b64 	%rd19362, {%r13889, %r13888};
	not.b64 	%rd19363, %rd19339;
	and.b64  	%rd19364, %rd19340, %rd19363;
	xor.b64  	%rd19365, %rd19364, %rd19314;
	not.b64 	%rd19366, %rd19340;
	and.b64  	%rd19367, %rd19341, %rd19366;
	xor.b64  	%rd19368, %rd19367, %rd19339;
	not.b64 	%rd19369, %rd19341;
	and.b64  	%rd19370, %rd19342, %rd19369;
	xor.b64  	%rd19371, %rd19370, %rd19340;
	not.b64 	%rd19372, %rd19342;
	and.b64  	%rd19373, %rd19314, %rd19372;
	xor.b64  	%rd19374, %rd19373, %rd19341;
	not.b64 	%rd19375, %rd19314;
	and.b64  	%rd19376, %rd19339, %rd19375;
	xor.b64  	%rd19377, %rd19376, %rd19342;
	not.b64 	%rd19378, %rd19344;
	and.b64  	%rd19379, %rd19345, %rd19378;
	xor.b64  	%rd19380, %rd19379, %rd19343;
	not.b64 	%rd19381, %rd19345;
	and.b64  	%rd19382, %rd19346, %rd19381;
	xor.b64  	%rd19383, %rd19382, %rd19344;
	not.b64 	%rd19384, %rd19346;
	and.b64  	%rd19385, %rd19347, %rd19384;
	xor.b64  	%rd19386, %rd19385, %rd19345;
	not.b64 	%rd19387, %rd19347;
	and.b64  	%rd19388, %rd19343, %rd19387;
	xor.b64  	%rd19389, %rd19388, %rd19346;
	not.b64 	%rd19390, %rd19343;
	and.b64  	%rd19391, %rd19344, %rd19390;
	xor.b64  	%rd19392, %rd19391, %rd19347;
	not.b64 	%rd19393, %rd19349;
	and.b64  	%rd19394, %rd19350, %rd19393;
	xor.b64  	%rd19395, %rd19394, %rd19348;
	not.b64 	%rd19396, %rd19350;
	and.b64  	%rd19397, %rd19351, %rd19396;
	xor.b64  	%rd19398, %rd19397, %rd19349;
	not.b64 	%rd19399, %rd19351;
	and.b64  	%rd19400, %rd19352, %rd19399;
	xor.b64  	%rd19401, %rd19400, %rd19350;
	not.b64 	%rd19402, %rd19352;
	and.b64  	%rd19403, %rd19348, %rd19402;
	xor.b64  	%rd19404, %rd19403, %rd19351;
	not.b64 	%rd19405, %rd19348;
	and.b64  	%rd19406, %rd19349, %rd19405;
	xor.b64  	%rd19407, %rd19406, %rd19352;
	not.b64 	%rd19408, %rd19354;
	and.b64  	%rd19409, %rd19355, %rd19408;
	xor.b64  	%rd19410, %rd19409, %rd19353;
	not.b64 	%rd19411, %rd19355;
	and.b64  	%rd19412, %rd19356, %rd19411;
	xor.b64  	%rd19413, %rd19412, %rd19354;
	not.b64 	%rd19414, %rd19356;
	and.b64  	%rd19415, %rd19357, %rd19414;
	xor.b64  	%rd19416, %rd19415, %rd19355;
	not.b64 	%rd19417, %rd19357;
	and.b64  	%rd19418, %rd19353, %rd19417;
	xor.b64  	%rd19419, %rd19418, %rd19356;
	not.b64 	%rd19420, %rd19353;
	and.b64  	%rd19421, %rd19354, %rd19420;
	xor.b64  	%rd19422, %rd19421, %rd19357;
	not.b64 	%rd19423, %rd19359;
	and.b64  	%rd19424, %rd19360, %rd19423;
	xor.b64  	%rd19425, %rd19424, %rd19358;
	not.b64 	%rd19426, %rd19360;
	and.b64  	%rd19427, %rd19361, %rd19426;
	xor.b64  	%rd19428, %rd19427, %rd19359;
	not.b64 	%rd19429, %rd19361;
	and.b64  	%rd19430, %rd19362, %rd19429;
	xor.b64  	%rd19431, %rd19430, %rd19360;
	not.b64 	%rd19432, %rd19362;
	and.b64  	%rd19433, %rd19358, %rd19432;
	xor.b64  	%rd19434, %rd19433, %rd19361;
	not.b64 	%rd19435, %rd19358;
	and.b64  	%rd19436, %rd19359, %rd19435;
	xor.b64  	%rd19437, %rd19436, %rd19362;
	xor.b64  	%rd19438, %rd19365, %rd38;
	xor.b64  	%rd19439, %rd19380, %rd19438;
	xor.b64  	%rd19440, %rd19439, %rd19395;
	xor.b64  	%rd19441, %rd19440, %rd19410;
	xor.b64  	%rd19442, %rd19441, %rd19425;
	xor.b64  	%rd19443, %rd19383, %rd19368;
	xor.b64  	%rd19444, %rd19443, %rd19398;
	xor.b64  	%rd19445, %rd19444, %rd19413;
	xor.b64  	%rd19446, %rd19445, %rd19428;
	xor.b64  	%rd19447, %rd19386, %rd19371;
	xor.b64  	%rd19448, %rd19447, %rd19401;
	xor.b64  	%rd19449, %rd19448, %rd19416;
	xor.b64  	%rd19450, %rd19449, %rd19431;
	xor.b64  	%rd19451, %rd19389, %rd19374;
	xor.b64  	%rd19452, %rd19451, %rd19404;
	xor.b64  	%rd19453, %rd19452, %rd19419;
	xor.b64  	%rd19454, %rd19453, %rd19434;
	xor.b64  	%rd19455, %rd19392, %rd19377;
	xor.b64  	%rd19456, %rd19455, %rd19407;
	xor.b64  	%rd19457, %rd19456, %rd19422;
	xor.b64  	%rd19458, %rd19457, %rd19437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13890}, %rd19446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13891,%dummy}, %rd19446;
	}
	shf.l.wrap.b32 	%r13892, %r13891, %r13890, 1;
	shf.l.wrap.b32 	%r13893, %r13890, %r13891, 1;
	mov.b64 	%rd19459, {%r13893, %r13892};
	xor.b64  	%rd19460, %rd19458, %rd19459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13894}, %rd19450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13895,%dummy}, %rd19450;
	}
	shf.l.wrap.b32 	%r13896, %r13895, %r13894, 1;
	shf.l.wrap.b32 	%r13897, %r13894, %r13895, 1;
	mov.b64 	%rd19461, {%r13897, %r13896};
	xor.b64  	%rd19462, %rd19461, %rd19442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13898}, %rd19454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13899,%dummy}, %rd19454;
	}
	shf.l.wrap.b32 	%r13900, %r13899, %r13898, 1;
	shf.l.wrap.b32 	%r13901, %r13898, %r13899, 1;
	mov.b64 	%rd19463, {%r13901, %r13900};
	xor.b64  	%rd19464, %rd19463, %rd19446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13902}, %rd19458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13903,%dummy}, %rd19458;
	}
	shf.l.wrap.b32 	%r13904, %r13903, %r13902, 1;
	shf.l.wrap.b32 	%r13905, %r13902, %r13903, 1;
	mov.b64 	%rd19465, {%r13905, %r13904};
	xor.b64  	%rd19466, %rd19465, %rd19450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13906}, %rd19442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13907,%dummy}, %rd19442;
	}
	shf.l.wrap.b32 	%r13908, %r13907, %r13906, 1;
	shf.l.wrap.b32 	%r13909, %r13906, %r13907, 1;
	mov.b64 	%rd19467, {%r13909, %r13908};
	xor.b64  	%rd19468, %rd19454, %rd19467;
	xor.b64  	%rd19469, %rd19460, %rd19438;
	xor.b64  	%rd19470, %rd19462, %rd19368;
	xor.b64  	%rd19471, %rd19464, %rd19371;
	xor.b64  	%rd19472, %rd19466, %rd19374;
	xor.b64  	%rd19473, %rd19468, %rd19377;
	xor.b64  	%rd19474, %rd19460, %rd19380;
	xor.b64  	%rd19475, %rd19462, %rd19383;
	xor.b64  	%rd19476, %rd19464, %rd19386;
	xor.b64  	%rd19477, %rd19466, %rd19389;
	xor.b64  	%rd19478, %rd19468, %rd19392;
	xor.b64  	%rd19479, %rd19460, %rd19395;
	xor.b64  	%rd19480, %rd19462, %rd19398;
	xor.b64  	%rd19481, %rd19464, %rd19401;
	xor.b64  	%rd19482, %rd19466, %rd19404;
	xor.b64  	%rd19483, %rd19468, %rd19407;
	xor.b64  	%rd19484, %rd19460, %rd19410;
	xor.b64  	%rd19485, %rd19462, %rd19413;
	xor.b64  	%rd19486, %rd19464, %rd19416;
	xor.b64  	%rd19487, %rd19466, %rd19419;
	xor.b64  	%rd19488, %rd19468, %rd19422;
	xor.b64  	%rd19489, %rd19460, %rd19425;
	xor.b64  	%rd19490, %rd19462, %rd19428;
	xor.b64  	%rd19491, %rd19464, %rd19431;
	xor.b64  	%rd19492, %rd19466, %rd19434;
	xor.b64  	%rd19493, %rd19468, %rd19437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13910,%dummy}, %rd19475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13911}, %rd19475;
	}
	shf.r.wrap.b32 	%r13912, %r13911, %r13910, 20;
	shf.r.wrap.b32 	%r13913, %r13910, %r13911, 20;
	mov.b64 	%rd19494, {%r13913, %r13912};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13914,%dummy}, %rd19481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13915}, %rd19481;
	}
	shf.r.wrap.b32 	%r13916, %r13915, %r13914, 21;
	shf.r.wrap.b32 	%r13917, %r13914, %r13915, 21;
	mov.b64 	%rd19495, {%r13917, %r13916};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13918}, %rd19487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13919,%dummy}, %rd19487;
	}
	shf.l.wrap.b32 	%r13920, %r13919, %r13918, 21;
	shf.l.wrap.b32 	%r13921, %r13918, %r13919, 21;
	mov.b64 	%rd19496, {%r13921, %r13920};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13922}, %rd19493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13923,%dummy}, %rd19493;
	}
	shf.l.wrap.b32 	%r13924, %r13923, %r13922, 14;
	shf.l.wrap.b32 	%r13925, %r13922, %r13923, 14;
	mov.b64 	%rd19497, {%r13925, %r13924};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13926}, %rd19472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13927,%dummy}, %rd19472;
	}
	shf.l.wrap.b32 	%r13928, %r13927, %r13926, 28;
	shf.l.wrap.b32 	%r13929, %r13926, %r13927, 28;
	mov.b64 	%rd19498, {%r13929, %r13928};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13930}, %rd19478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13931,%dummy}, %rd19478;
	}
	shf.l.wrap.b32 	%r13932, %r13931, %r13930, 20;
	shf.l.wrap.b32 	%r13933, %r13930, %r13931, 20;
	mov.b64 	%rd19499, {%r13933, %r13932};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13934}, %rd19479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13935,%dummy}, %rd19479;
	}
	shf.l.wrap.b32 	%r13936, %r13935, %r13934, 3;
	shf.l.wrap.b32 	%r13937, %r13934, %r13935, 3;
	mov.b64 	%rd19500, {%r13937, %r13936};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13938,%dummy}, %rd19485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13939}, %rd19485;
	}
	shf.r.wrap.b32 	%r13940, %r13939, %r13938, 19;
	shf.r.wrap.b32 	%r13941, %r13938, %r13939, 19;
	mov.b64 	%rd19501, {%r13941, %r13940};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13942,%dummy}, %rd19491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13943}, %rd19491;
	}
	shf.r.wrap.b32 	%r13944, %r13943, %r13942, 3;
	shf.r.wrap.b32 	%r13945, %r13942, %r13943, 3;
	mov.b64 	%rd19502, {%r13945, %r13944};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13946}, %rd19470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13947,%dummy}, %rd19470;
	}
	shf.l.wrap.b32 	%r13948, %r13947, %r13946, 1;
	shf.l.wrap.b32 	%r13949, %r13946, %r13947, 1;
	mov.b64 	%rd19503, {%r13949, %r13948};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13950}, %rd19476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13951,%dummy}, %rd19476;
	}
	shf.l.wrap.b32 	%r13952, %r13951, %r13950, 6;
	shf.l.wrap.b32 	%r13953, %r13950, %r13951, 6;
	mov.b64 	%rd19504, {%r13953, %r13952};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13954}, %rd19482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13955,%dummy}, %rd19482;
	}
	shf.l.wrap.b32 	%r13956, %r13955, %r13954, 25;
	shf.l.wrap.b32 	%r13957, %r13954, %r13955, 25;
	mov.b64 	%rd19505, {%r13957, %r13956};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13958}, %rd19488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13959,%dummy}, %rd19488;
	}
	shf.l.wrap.b32 	%r13960, %r13959, %r13958, 8;
	shf.l.wrap.b32 	%r13961, %r13958, %r13959, 8;
	mov.b64 	%rd19506, {%r13961, %r13960};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13962}, %rd19489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13963,%dummy}, %rd19489;
	}
	shf.l.wrap.b32 	%r13964, %r13963, %r13962, 18;
	shf.l.wrap.b32 	%r13965, %r13962, %r13963, 18;
	mov.b64 	%rd19507, {%r13965, %r13964};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13966}, %rd19473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13967,%dummy}, %rd19473;
	}
	shf.l.wrap.b32 	%r13968, %r13967, %r13966, 27;
	shf.l.wrap.b32 	%r13969, %r13966, %r13967, 27;
	mov.b64 	%rd19508, {%r13969, %r13968};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13970,%dummy}, %rd19474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13971}, %rd19474;
	}
	shf.r.wrap.b32 	%r13972, %r13971, %r13970, 28;
	shf.r.wrap.b32 	%r13973, %r13970, %r13971, 28;
	mov.b64 	%rd19509, {%r13973, %r13972};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13974}, %rd19480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13975,%dummy}, %rd19480;
	}
	shf.l.wrap.b32 	%r13976, %r13975, %r13974, 10;
	shf.l.wrap.b32 	%r13977, %r13974, %r13975, 10;
	mov.b64 	%rd19510, {%r13977, %r13976};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13978}, %rd19486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13979,%dummy}, %rd19486;
	}
	shf.l.wrap.b32 	%r13980, %r13979, %r13978, 15;
	shf.l.wrap.b32 	%r13981, %r13978, %r13979, 15;
	mov.b64 	%rd19511, {%r13981, %r13980};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13982,%dummy}, %rd19492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13983}, %rd19492;
	}
	shf.r.wrap.b32 	%r13984, %r13983, %r13982, 8;
	shf.r.wrap.b32 	%r13985, %r13982, %r13983, 8;
	mov.b64 	%rd19512, {%r13985, %r13984};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13986,%dummy}, %rd19471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13987}, %rd19471;
	}
	shf.r.wrap.b32 	%r13988, %r13987, %r13986, 2;
	shf.r.wrap.b32 	%r13989, %r13986, %r13987, 2;
	mov.b64 	%rd19513, {%r13989, %r13988};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13990,%dummy}, %rd19477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13991}, %rd19477;
	}
	shf.r.wrap.b32 	%r13992, %r13991, %r13990, 9;
	shf.r.wrap.b32 	%r13993, %r13990, %r13991, 9;
	mov.b64 	%rd19514, {%r13993, %r13992};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13994,%dummy}, %rd19483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13995}, %rd19483;
	}
	shf.r.wrap.b32 	%r13996, %r13995, %r13994, 25;
	shf.r.wrap.b32 	%r13997, %r13994, %r13995, 25;
	mov.b64 	%rd19515, {%r13997, %r13996};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13998,%dummy}, %rd19484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13999}, %rd19484;
	}
	shf.r.wrap.b32 	%r14000, %r13999, %r13998, 23;
	shf.r.wrap.b32 	%r14001, %r13998, %r13999, 23;
	mov.b64 	%rd19516, {%r14001, %r14000};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14002}, %rd19490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14003,%dummy}, %rd19490;
	}
	shf.l.wrap.b32 	%r14004, %r14003, %r14002, 2;
	shf.l.wrap.b32 	%r14005, %r14002, %r14003, 2;
	mov.b64 	%rd19517, {%r14005, %r14004};
	not.b64 	%rd19518, %rd19494;
	and.b64  	%rd19519, %rd19495, %rd19518;
	xor.b64  	%rd19520, %rd19519, %rd19469;
	not.b64 	%rd19521, %rd19495;
	and.b64  	%rd19522, %rd19496, %rd19521;
	xor.b64  	%rd19523, %rd19522, %rd19494;
	st.local.u64 	[%rd2+8], %rd19523;
	not.b64 	%rd19524, %rd19496;
	and.b64  	%rd19525, %rd19497, %rd19524;
	xor.b64  	%rd19526, %rd19525, %rd19495;
	st.local.u64 	[%rd2+16], %rd19526;
	not.b64 	%rd19527, %rd19497;
	and.b64  	%rd19528, %rd19469, %rd19527;
	xor.b64  	%rd19529, %rd19528, %rd19496;
	st.local.u64 	[%rd2+24], %rd19529;
	not.b64 	%rd19530, %rd19469;
	and.b64  	%rd19531, %rd19494, %rd19530;
	xor.b64  	%rd19532, %rd19531, %rd19497;
	st.local.u64 	[%rd2+32], %rd19532;
	not.b64 	%rd19533, %rd19499;
	and.b64  	%rd19534, %rd19500, %rd19533;
	xor.b64  	%rd19535, %rd19534, %rd19498;
	st.local.u64 	[%rd2+40], %rd19535;
	not.b64 	%rd19536, %rd19500;
	and.b64  	%rd19537, %rd19501, %rd19536;
	xor.b64  	%rd19538, %rd19537, %rd19499;
	st.local.u64 	[%rd2+48], %rd19538;
	not.b64 	%rd19539, %rd19501;
	and.b64  	%rd19540, %rd19502, %rd19539;
	xor.b64  	%rd19541, %rd19540, %rd19500;
	st.local.u64 	[%rd2+56], %rd19541;
	not.b64 	%rd19542, %rd19502;
	and.b64  	%rd19543, %rd19498, %rd19542;
	xor.b64  	%rd19544, %rd19543, %rd19501;
	st.local.u64 	[%rd2+64], %rd19544;
	not.b64 	%rd19545, %rd19498;
	and.b64  	%rd19546, %rd19499, %rd19545;
	xor.b64  	%rd19547, %rd19546, %rd19502;
	st.local.u64 	[%rd2+72], %rd19547;
	not.b64 	%rd19548, %rd19504;
	and.b64  	%rd19549, %rd19505, %rd19548;
	xor.b64  	%rd19550, %rd19549, %rd19503;
	st.local.u64 	[%rd2+80], %rd19550;
	not.b64 	%rd19551, %rd19505;
	and.b64  	%rd19552, %rd19506, %rd19551;
	xor.b64  	%rd19553, %rd19552, %rd19504;
	st.local.u64 	[%rd2+88], %rd19553;
	not.b64 	%rd19554, %rd19506;
	and.b64  	%rd19555, %rd19507, %rd19554;
	xor.b64  	%rd19556, %rd19555, %rd19505;
	st.local.u64 	[%rd2+96], %rd19556;
	not.b64 	%rd19557, %rd19507;
	and.b64  	%rd19558, %rd19503, %rd19557;
	xor.b64  	%rd19559, %rd19558, %rd19506;
	st.local.u64 	[%rd2+104], %rd19559;
	not.b64 	%rd19560, %rd19503;
	and.b64  	%rd19561, %rd19504, %rd19560;
	xor.b64  	%rd19562, %rd19561, %rd19507;
	st.local.u64 	[%rd2+112], %rd19562;
	not.b64 	%rd19563, %rd19509;
	and.b64  	%rd19564, %rd19510, %rd19563;
	xor.b64  	%rd19565, %rd19564, %rd19508;
	st.local.u64 	[%rd2+120], %rd19565;
	not.b64 	%rd19566, %rd19510;
	and.b64  	%rd19567, %rd19511, %rd19566;
	xor.b64  	%rd19568, %rd19567, %rd19509;
	st.local.u64 	[%rd2+128], %rd19568;
	not.b64 	%rd19569, %rd19511;
	and.b64  	%rd19570, %rd19512, %rd19569;
	xor.b64  	%rd19571, %rd19570, %rd19510;
	st.local.u64 	[%rd2+136], %rd19571;
	not.b64 	%rd19572, %rd19512;
	and.b64  	%rd19573, %rd19508, %rd19572;
	xor.b64  	%rd19574, %rd19573, %rd19511;
	st.local.u64 	[%rd2+144], %rd19574;
	not.b64 	%rd19575, %rd19508;
	and.b64  	%rd19576, %rd19509, %rd19575;
	xor.b64  	%rd19577, %rd19576, %rd19512;
	st.local.u64 	[%rd2+152], %rd19577;
	not.b64 	%rd19578, %rd19514;
	and.b64  	%rd19579, %rd19515, %rd19578;
	xor.b64  	%rd19580, %rd19579, %rd19513;
	st.local.u64 	[%rd2+160], %rd19580;
	not.b64 	%rd19581, %rd19515;
	and.b64  	%rd19582, %rd19516, %rd19581;
	xor.b64  	%rd19583, %rd19582, %rd19514;
	st.local.u64 	[%rd2+168], %rd19583;
	not.b64 	%rd19584, %rd19516;
	and.b64  	%rd19585, %rd19517, %rd19584;
	xor.b64  	%rd19586, %rd19585, %rd19515;
	st.local.u64 	[%rd2+176], %rd19586;
	not.b64 	%rd19587, %rd19517;
	and.b64  	%rd19588, %rd19513, %rd19587;
	xor.b64  	%rd19589, %rd19588, %rd19516;
	st.local.u64 	[%rd2+184], %rd19589;
	not.b64 	%rd19590, %rd19513;
	and.b64  	%rd19591, %rd19514, %rd19590;
	xor.b64  	%rd19592, %rd19591, %rd19517;
	st.local.u64 	[%rd2+192], %rd19592;
	xor.b64  	%rd19593, %rd19520, %rd39;
	st.local.u64 	[%rd2], %rd19593;
	@%p39 bra 	$L__BB1_63;

	add.s64 	%rd19595, %rd130, -1;
	setp.lt.u64 	%p47, %rd19595, 3;
	mov.u32 	%r14040, 0;
	@%p47 bra 	$L__BB1_59;

	bfe.u64 	%rd19597, %rd7995, 6, 2;
	sub.s64 	%rd19865, %rd130, %rd19597;

$L__BB1_58:
	mul.wide.s32 	%rd19598, %r14040, 8;
	add.s64 	%rd19599, %rd2, %rd19598;
	ld.local.u8 	%rd19600, [%rd19599];
	ld.local.u8 	%rd19601, [%rd19599+1];
	bfi.b64 	%rd19602, %rd19601, %rd19600, 8, 8;
	ld.local.u8 	%rd19603, [%rd19599+2];
	ld.local.u8 	%rd19604, [%rd19599+3];
	bfi.b64 	%rd19605, %rd19604, %rd19603, 8, 8;
	bfi.b64 	%rd19606, %rd19605, %rd19602, 16, 16;
	ld.local.u8 	%rd19607, [%rd19599+4];
	ld.local.u8 	%rd19608, [%rd19599+5];
	bfi.b64 	%rd19609, %rd19608, %rd19607, 8, 8;
	ld.local.u8 	%rd19610, [%rd19599+6];
	ld.local.u8 	%rd19611, [%rd19599+7];
	bfi.b64 	%rd19612, %rd19611, %rd19610, 8, 8;
	bfi.b64 	%rd19613, %rd19612, %rd19609, 16, 16;
	bfi.b64 	%rd19614, %rd19613, %rd19606, 32, 32;
	st.local.u8 	[%rd19599+200], %rd19602;
	shr.u64 	%rd19615, %rd19602, 8;
	st.local.u8 	[%rd19599+201], %rd19615;
	shr.u64 	%rd19616, %rd19606, 24;
	st.local.u8 	[%rd19599+203], %rd19616;
	shr.u64 	%rd19617, %rd19606, 16;
	st.local.u8 	[%rd19599+202], %rd19617;
	shr.u64 	%rd19618, %rd19614, 56;
	st.local.u8 	[%rd19599+207], %rd19618;
	shr.u64 	%rd19619, %rd19614, 48;
	st.local.u8 	[%rd19599+206], %rd19619;
	shr.u64 	%rd19620, %rd19614, 40;
	st.local.u8 	[%rd19599+205], %rd19620;
	shr.u64 	%rd19621, %rd19614, 32;
	st.local.u8 	[%rd19599+204], %rd19621;
	ld.local.u8 	%rd19622, [%rd19599+8];
	ld.local.u8 	%rd19623, [%rd19599+9];
	bfi.b64 	%rd19624, %rd19623, %rd19622, 8, 8;
	ld.local.u8 	%rd19625, [%rd19599+10];
	ld.local.u8 	%rd19626, [%rd19599+11];
	bfi.b64 	%rd19627, %rd19626, %rd19625, 8, 8;
	bfi.b64 	%rd19628, %rd19627, %rd19624, 16, 16;
	ld.local.u8 	%rd19629, [%rd19599+12];
	ld.local.u8 	%rd19630, [%rd19599+13];
	bfi.b64 	%rd19631, %rd19630, %rd19629, 8, 8;
	ld.local.u8 	%rd19632, [%rd19599+14];
	ld.local.u8 	%rd19633, [%rd19599+15];
	bfi.b64 	%rd19634, %rd19633, %rd19632, 8, 8;
	bfi.b64 	%rd19635, %rd19634, %rd19631, 16, 16;
	bfi.b64 	%rd19636, %rd19635, %rd19628, 32, 32;
	st.local.u8 	[%rd19599+208], %rd19624;
	shr.u64 	%rd19637, %rd19624, 8;
	st.local.u8 	[%rd19599+209], %rd19637;
	shr.u64 	%rd19638, %rd19628, 24;
	st.local.u8 	[%rd19599+211], %rd19638;
	shr.u64 	%rd19639, %rd19628, 16;
	st.local.u8 	[%rd19599+210], %rd19639;
	shr.u64 	%rd19640, %rd19636, 56;
	st.local.u8 	[%rd19599+215], %rd19640;
	shr.u64 	%rd19641, %rd19636, 48;
	st.local.u8 	[%rd19599+214], %rd19641;
	shr.u64 	%rd19642, %rd19636, 40;
	st.local.u8 	[%rd19599+213], %rd19642;
	shr.u64 	%rd19643, %rd19636, 32;
	st.local.u8 	[%rd19599+212], %rd19643;
	ld.local.u8 	%rd19644, [%rd19599+16];
	ld.local.u8 	%rd19645, [%rd19599+17];
	bfi.b64 	%rd19646, %rd19645, %rd19644, 8, 8;
	ld.local.u8 	%rd19647, [%rd19599+18];
	ld.local.u8 	%rd19648, [%rd19599+19];
	bfi.b64 	%rd19649, %rd19648, %rd19647, 8, 8;
	bfi.b64 	%rd19650, %rd19649, %rd19646, 16, 16;
	ld.local.u8 	%rd19651, [%rd19599+20];
	ld.local.u8 	%rd19652, [%rd19599+21];
	bfi.b64 	%rd19653, %rd19652, %rd19651, 8, 8;
	ld.local.u8 	%rd19654, [%rd19599+22];
	ld.local.u8 	%rd19655, [%rd19599+23];
	bfi.b64 	%rd19656, %rd19655, %rd19654, 8, 8;
	bfi.b64 	%rd19657, %rd19656, %rd19653, 16, 16;
	bfi.b64 	%rd19658, %rd19657, %rd19650, 32, 32;
	st.local.u8 	[%rd19599+216], %rd19646;
	shr.u64 	%rd19659, %rd19646, 8;
	st.local.u8 	[%rd19599+217], %rd19659;
	shr.u64 	%rd19660, %rd19650, 24;
	st.local.u8 	[%rd19599+219], %rd19660;
	shr.u64 	%rd19661, %rd19650, 16;
	st.local.u8 	[%rd19599+218], %rd19661;
	shr.u64 	%rd19662, %rd19658, 56;
	st.local.u8 	[%rd19599+223], %rd19662;
	shr.u64 	%rd19663, %rd19658, 48;
	st.local.u8 	[%rd19599+222], %rd19663;
	shr.u64 	%rd19664, %rd19658, 40;
	st.local.u8 	[%rd19599+221], %rd19664;
	shr.u64 	%rd19665, %rd19658, 32;
	st.local.u8 	[%rd19599+220], %rd19665;
	ld.local.u8 	%rd19666, [%rd19599+24];
	ld.local.u8 	%rd19667, [%rd19599+25];
	bfi.b64 	%rd19668, %rd19667, %rd19666, 8, 8;
	ld.local.u8 	%rd19669, [%rd19599+26];
	ld.local.u8 	%rd19670, [%rd19599+27];
	bfi.b64 	%rd19671, %rd19670, %rd19669, 8, 8;
	bfi.b64 	%rd19672, %rd19671, %rd19668, 16, 16;
	ld.local.u8 	%rd19673, [%rd19599+28];
	ld.local.u8 	%rd19674, [%rd19599+29];
	bfi.b64 	%rd19675, %rd19674, %rd19673, 8, 8;
	ld.local.u8 	%rd19676, [%rd19599+30];
	ld.local.u8 	%rd19677, [%rd19599+31];
	bfi.b64 	%rd19678, %rd19677, %rd19676, 8, 8;
	bfi.b64 	%rd19679, %rd19678, %rd19675, 16, 16;
	bfi.b64 	%rd19680, %rd19679, %rd19672, 32, 32;
	st.local.u8 	[%rd19599+224], %rd19668;
	shr.u64 	%rd19681, %rd19668, 8;
	st.local.u8 	[%rd19599+225], %rd19681;
	shr.u64 	%rd19682, %rd19672, 24;
	st.local.u8 	[%rd19599+227], %rd19682;
	shr.u64 	%rd19683, %rd19672, 16;
	st.local.u8 	[%rd19599+226], %rd19683;
	shr.u64 	%rd19684, %rd19680, 56;
	st.local.u8 	[%rd19599+231], %rd19684;
	shr.u64 	%rd19685, %rd19680, 48;
	st.local.u8 	[%rd19599+230], %rd19685;
	shr.u64 	%rd19686, %rd19680, 40;
	st.local.u8 	[%rd19599+229], %rd19686;
	shr.u64 	%rd19687, %rd19680, 32;
	st.local.u8 	[%rd19599+228], %rd19687;
	add.s32 	%r14040, %r14040, 4;
	add.s64 	%rd19865, %rd19865, -4;
	setp.ne.s64 	%p48, %rd19865, 0;
	@%p48 bra 	$L__BB1_58;

$L__BB1_59:
	bfe.u64 	%rd19688, %rd7995, 6, 2;
	setp.eq.s64 	%p49, %rd19688, 0;
	@%p49 bra 	$L__BB1_63;

	setp.eq.s64 	%p50, %rd19688, 1;
	mul.wide.s32 	%rd19690, %r14040, 8;
	add.s64 	%rd147, %rd2, %rd19690;
	ld.local.u8 	%rd19691, [%rd147];
	ld.local.u8 	%rd19692, [%rd147+1];
	bfi.b64 	%rd19693, %rd19692, %rd19691, 8, 8;
	ld.local.u8 	%rd19694, [%rd147+2];
	ld.local.u8 	%rd19695, [%rd147+3];
	bfi.b64 	%rd19696, %rd19695, %rd19694, 8, 8;
	bfi.b64 	%rd19697, %rd19696, %rd19693, 16, 16;
	ld.local.u8 	%rd19698, [%rd147+4];
	ld.local.u8 	%rd19699, [%rd147+5];
	bfi.b64 	%rd19700, %rd19699, %rd19698, 8, 8;
	ld.local.u8 	%rd19701, [%rd147+6];
	ld.local.u8 	%rd19702, [%rd147+7];
	bfi.b64 	%rd19703, %rd19702, %rd19701, 8, 8;
	bfi.b64 	%rd19704, %rd19703, %rd19700, 16, 16;
	bfi.b64 	%rd19705, %rd19704, %rd19697, 32, 32;
	shl.b32 	%r14008, %r14040, 3;
	cvt.s64.s32 	%rd19706, %r14008;
	add.s64 	%rd19707, %rd2, %rd19706;
	add.s64 	%rd148, %rd19707, 200;
	st.local.u8 	[%rd19707+200], %rd19693;
	shr.u64 	%rd19708, %rd19693, 8;
	st.local.u8 	[%rd19707+201], %rd19708;
	shr.u64 	%rd19709, %rd19697, 24;
	st.local.u8 	[%rd19707+203], %rd19709;
	shr.u64 	%rd19710, %rd19697, 16;
	st.local.u8 	[%rd19707+202], %rd19710;
	shr.u64 	%rd19711, %rd19705, 56;
	st.local.u8 	[%rd19707+207], %rd19711;
	shr.u64 	%rd19712, %rd19705, 48;
	st.local.u8 	[%rd19707+206], %rd19712;
	shr.u64 	%rd19713, %rd19705, 40;
	st.local.u8 	[%rd19707+205], %rd19713;
	shr.u64 	%rd19714, %rd19705, 32;
	st.local.u8 	[%rd19707+204], %rd19714;
	@%p50 bra 	$L__BB1_63;

	setp.eq.s64 	%p51, %rd19688, 2;
	ld.local.u8 	%rd19716, [%rd147+8];
	ld.local.u8 	%rd19717, [%rd147+9];
	bfi.b64 	%rd19718, %rd19717, %rd19716, 8, 8;
	ld.local.u8 	%rd19719, [%rd147+10];
	ld.local.u8 	%rd19720, [%rd147+11];
	bfi.b64 	%rd19721, %rd19720, %rd19719, 8, 8;
	bfi.b64 	%rd19722, %rd19721, %rd19718, 16, 16;
	ld.local.u8 	%rd19723, [%rd147+12];
	ld.local.u8 	%rd19724, [%rd147+13];
	bfi.b64 	%rd19725, %rd19724, %rd19723, 8, 8;
	ld.local.u8 	%rd19726, [%rd147+14];
	ld.local.u8 	%rd19727, [%rd147+15];
	bfi.b64 	%rd19728, %rd19727, %rd19726, 8, 8;
	bfi.b64 	%rd19729, %rd19728, %rd19725, 16, 16;
	bfi.b64 	%rd19730, %rd19729, %rd19722, 32, 32;
	st.local.u8 	[%rd148+8], %rd19718;
	shr.u64 	%rd19731, %rd19718, 8;
	st.local.u8 	[%rd148+9], %rd19731;
	shr.u64 	%rd19732, %rd19722, 24;
	st.local.u8 	[%rd148+11], %rd19732;
	shr.u64 	%rd19733, %rd19722, 16;
	st.local.u8 	[%rd148+10], %rd19733;
	shr.u64 	%rd19734, %rd19730, 56;
	st.local.u8 	[%rd148+15], %rd19734;
	shr.u64 	%rd19735, %rd19730, 48;
	st.local.u8 	[%rd148+14], %rd19735;
	shr.u64 	%rd19736, %rd19730, 40;
	st.local.u8 	[%rd148+13], %rd19736;
	shr.u64 	%rd19737, %rd19730, 32;
	st.local.u8 	[%rd148+12], %rd19737;
	@%p51 bra 	$L__BB1_63;

	ld.local.u8 	%rd19738, [%rd147+16];
	ld.local.u8 	%rd19739, [%rd147+17];
	bfi.b64 	%rd19740, %rd19739, %rd19738, 8, 8;
	ld.local.u8 	%rd19741, [%rd147+18];
	ld.local.u8 	%rd19742, [%rd147+19];
	bfi.b64 	%rd19743, %rd19742, %rd19741, 8, 8;
	bfi.b64 	%rd19744, %rd19743, %rd19740, 16, 16;
	ld.local.u8 	%rd19745, [%rd147+20];
	ld.local.u8 	%rd19746, [%rd147+21];
	bfi.b64 	%rd19747, %rd19746, %rd19745, 8, 8;
	ld.local.u8 	%rd19748, [%rd147+22];
	ld.local.u8 	%rd19749, [%rd147+23];
	bfi.b64 	%rd19750, %rd19749, %rd19748, 8, 8;
	bfi.b64 	%rd19751, %rd19750, %rd19747, 16, 16;
	bfi.b64 	%rd19752, %rd19751, %rd19744, 32, 32;
	st.local.u8 	[%rd148+16], %rd19740;
	shr.u64 	%rd19753, %rd19740, 8;
	st.local.u8 	[%rd148+17], %rd19753;
	shr.u64 	%rd19754, %rd19744, 24;
	st.local.u8 	[%rd148+19], %rd19754;
	shr.u64 	%rd19755, %rd19744, 16;
	st.local.u8 	[%rd148+18], %rd19755;
	shr.u64 	%rd19756, %rd19752, 56;
	st.local.u8 	[%rd148+23], %rd19756;
	shr.u64 	%rd19757, %rd19752, 48;
	st.local.u8 	[%rd148+22], %rd19757;
	shr.u64 	%rd19758, %rd19752, 40;
	st.local.u8 	[%rd148+21], %rd19758;
	shr.u64 	%rd19759, %rd19752, 32;
	st.local.u8 	[%rd148+20], %rd19759;

$L__BB1_63:
	st.local.u64 	[%rd2+392], %rd7995;
	mov.u64 	%rd19866, %rd7995;

$L__BB1_64:
	sub.s64 	%rd19760, %rd137, %rd19864;
	min.u64 	%rd150, %rd19866, %rd19760;
	shr.u64 	%rd151, %rd150, 3;
	setp.eq.s64 	%p52, %rd151, 0;
	@%p52 bra 	$L__BB1_72;

	add.s64 	%rd19761, %rd151, -1;
	setp.lt.u64 	%p53, %rd19761, 3;
	mov.u32 	%r14042, 0;
	@%p53 bra 	$L__BB1_68;

	bfe.u64 	%rd19763, %rd150, 3, 2;
	sub.s64 	%rd19867, %rd151, %rd19763;

$L__BB1_67:
	shr.u64 	%rd19764, %rd19866, 3;
	sub.s64 	%rd19765, %rd14, %rd19764;
	cvt.s64.s32 	%rd19766, %r14042;
	add.s64 	%rd19767, %rd19765, %rd19766;
	add.s64 	%rd19768, %rd2, %rd19767;
	ld.local.u8 	%rs48, [%rd19768+200];
	shr.u64 	%rd19769, %rd19864, 3;
	cvt.u32.u64 	%r14011, %rd19769;
	mov.u32 	%r14012, 31;
	sub.s32 	%r14013, %r14012, %r14011;
	sub.s32 	%r14014, %r14013, %r14042;
	cvt.s64.s32 	%rd19770, %r14014;
	add.u64 	%rd19772, %SPL, 64;
	add.s64 	%rd19773, %rd19772, %rd19770;
	st.local.u8 	[%rd19773], %rs48;
	ld.local.u8 	%rs49, [%rd19768+201];
	st.local.u8 	[%rd19773+-1], %rs49;
	ld.local.u8 	%rs50, [%rd19768+202];
	st.local.u8 	[%rd19773+-2], %rs50;
	ld.local.u8 	%rs51, [%rd19768+203];
	st.local.u8 	[%rd19773+-3], %rs51;
	add.s32 	%r14042, %r14042, 4;
	add.s64 	%rd19867, %rd19867, -4;
	setp.ne.s64 	%p54, %rd19867, 0;
	@%p54 bra 	$L__BB1_67;

$L__BB1_68:
	bfe.u64 	%rd19774, %rd150, 3, 2;
	setp.eq.s64 	%p55, %rd19774, 0;
	@%p55 bra 	$L__BB1_72;

	cvt.s64.s32 	%rd19775, %r14042;
	shr.u64 	%rd19776, %rd19866, 3;
	sub.s64 	%rd19777, %rd14, %rd19776;
	add.s64 	%rd19778, %rd19777, %rd19775;
	add.s64 	%rd19779, %rd2, %rd19778;
	add.s64 	%rd155, %rd19779, 200;
	ld.local.u8 	%rs52, [%rd19779+200];
	shr.u64 	%rd19780, %rd19864, 3;
	cvt.u32.u64 	%r14015, %rd19780;
	mov.u32 	%r14016, 31;
	sub.s32 	%r14017, %r14016, %r14015;
	sub.s32 	%r14018, %r14017, %r14042;
	cvt.s64.s32 	%rd19781, %r14018;
	add.u64 	%rd19783, %SPL, 64;
	add.s64 	%rd156, %rd19783, %rd19781;
	st.local.u8 	[%rd156], %rs52;
	setp.eq.s64 	%p56, %rd19774, 1;
	@%p56 bra 	$L__BB1_72;

	ld.local.u8 	%rs53, [%rd155+1];
	st.local.u8 	[%rd156+-1], %rs53;
	setp.eq.s64 	%p57, %rd19774, 2;
	@%p57 bra 	$L__BB1_72;

	ld.local.u8 	%rs54, [%rd155+2];
	st.local.u8 	[%rd156+-2], %rs54;

$L__BB1_72:
	sub.s64 	%rd19866, %rd19866, %rd150;
	st.local.u64 	[%rd2+392], %rd19866;
	add.s64 	%rd19864, %rd150, %rd19864;
	setp.lt.u64 	%p58, %rd19864, %rd137;
	@%p58 bra 	$L__BB1_54;

$L__BB1_73:
	ld.param.u64 	%rd19795, [kernel_lilypad_pow_param_2];
	add.u64 	%rd19786, %SP, 64;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd19786;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd19795;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1_, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r14019, [retval0+0];
	} // callseq 1
	cvt.u16.u32 	%rs55, %r14019;
	setp.eq.s16 	%p59, %rs55, 0;
	@%p59 bra 	$L__BB1_75;

	mov.u32 	%r14031, %tid.x;
	mov.u32 	%r14030, %ntid.x;
	mov.u32 	%r14029, %ctaid.x;
	mad.lo.s32 	%r14028, %r14029, %r14030, %r14031;
	cvt.u64.u32 	%rd19807, %r14028;
	add.s64 	%rd19806, %rd171, %rd19807;
	shr.u64 	%rd19805, %rd19806, 16;
	mov.u32 	%r14027, %ctaid.x;
	mov.u32 	%r14026, %tid.x;
	mov.u32 	%r14025, %ntid.x;
	mad.lo.s32 	%r14024, %r14027, %r14025, %r14026;
	cvt.u64.u32 	%rd19804, %r14024;
	add.s64 	%rd19803, %rd171, %rd19804;
	shr.u64 	%rd19802, %rd19803, 32;
	shr.u64 	%rd19801, %rd19803, 40;
	mov.u32 	%r14023, %ctaid.x;
	mov.u32 	%r14022, %tid.x;
	mov.u32 	%r14021, %ntid.x;
	mad.lo.s32 	%r14020, %r14023, %r14021, %r14022;
	cvt.u64.u32 	%rd19800, %r14020;
	add.s64 	%rd19799, %rd171, %rd19800;
	shr.u64 	%rd19798, %rd19799, 48;
	shr.u64 	%rd19797, %rd19799, 56;
	ld.param.u64 	%rd19796, [kernel_lilypad_pow_param_4];
	cvta.to.global.u64 	%rd19787, %rd19796;
	st.global.u8 	[%rd19787], %rs1;
	st.global.u8 	[%rd19787+1], %rs2;
	st.global.u8 	[%rd19787+2], %rs3;
	st.global.u8 	[%rd19787+3], %rs4;
	st.global.u8 	[%rd19787+4], %rs5;
	st.global.u8 	[%rd19787+5], %rs6;
	st.global.u8 	[%rd19787+6], %rs7;
	st.global.u8 	[%rd19787+7], %rs8;
	st.global.u8 	[%rd19787+8], %rs9;
	st.global.u8 	[%rd19787+9], %rs10;
	st.global.u8 	[%rd19787+10], %rs11;
	st.global.u8 	[%rd19787+11], %rs12;
	st.global.u8 	[%rd19787+12], %rs13;
	st.global.u8 	[%rd19787+13], %rs14;
	st.global.u8 	[%rd19787+14], %rs15;
	st.global.u8 	[%rd19787+15], %rs16;
	st.global.u8 	[%rd19787+16], %rs17;
	st.global.u8 	[%rd19787+17], %rs18;
	st.global.u8 	[%rd19787+18], %rs19;
	st.global.u8 	[%rd19787+19], %rs20;
	st.global.u8 	[%rd19787+20], %rs21;
	st.global.u8 	[%rd19787+21], %rs22;
	st.global.u8 	[%rd19787+22], %rs23;
	st.global.u8 	[%rd19787+23], %rs24;
	st.global.u8 	[%rd19787+24], %rd19797;
	st.global.u8 	[%rd19787+25], %rd19798;
	st.global.u8 	[%rd19787+26], %rd19801;
	st.global.u8 	[%rd19787+27], %rd19802;
	shr.u64 	%rd19792, %rd19799, 24;
	st.global.u8 	[%rd19787+28], %rd19792;
	st.global.u8 	[%rd19787+29], %rd19805;
	shr.u64 	%rd19794, %rd19799, 8;
	st.global.u8 	[%rd19787+30], %rd19794;
	st.global.u8 	[%rd19787+31], %rd19799;

$L__BB1_75:
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd8;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 2

$L__BB1_76:
	ret;

}
	// .globl	kernel_lilypad_pow_debug
.visible .entry kernel_lilypad_pow_debug(
	.param .u64 kernel_lilypad_pow_debug_param_0,
	.param .u64 kernel_lilypad_pow_debug_param_1,
	.param .u64 kernel_lilypad_pow_debug_param_2,
	.param .u64 kernel_lilypad_pow_debug_param_3,
	.param .u64 kernel_lilypad_pow_debug_param_4,
	.param .u64 kernel_lilypad_pow_debug_param_5,
	.param .u64 kernel_lilypad_pow_debug_param_6
)
.maxntid 1024, 1, 1
{
	.local .align 16 .b8 	__local_depot2[496];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<60>;
	.reg .b16 	%rs<56>;
	.reg .b32 	%r<14043>;
	.reg .b64 	%rd<19868>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd159, [kernel_lilypad_pow_debug_param_0];
	ld.param.u64 	%rd160, [kernel_lilypad_pow_debug_param_1];
	ld.param.u64 	%rd163, [kernel_lilypad_pow_debug_param_3];
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd2, %SPL, 96;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r22, %r20, %r19, %r21;
	cvt.u64.u32 	%rd3, %r22;
	setp.ge.u64 	%p1, %rd3, %rd163;
	@%p1 bra 	$L__BB2_76;

	cvta.to.global.u64 	%rd4, %rd160;
	cvta.to.global.u64 	%rd5, %rd159;
	mov.u64 	%rd19826, 0;
	mov.u32 	%r14032, 0;

$L__BB2_2:
	add.s64 	%rd167, %rd5, %rd19826;
	ld.global.u8 	%rs25, [%rd167];
	add.s64 	%rd168, %rd1, %rd19826;
	st.local.u8 	[%rd168], %rs25;
	add.s64 	%rd19826, %rd19826, 1;
	add.s32 	%r14032, %r14032, 1;
	setp.lt.u32 	%p2, %r14032, 32;
	@%p2 bra 	$L__BB2_2;

	mov.u64 	%rd170, 32;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd170;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd8, [retval0+0];
	} // callseq 3
	ld.global.u64 	%rd171, [%rd4];
	mov.u64 	%rd19828, 0;
	add.s64 	%rd9, %rd171, %rd3;
	st.u64 	[%rd8], %rd9;
	ld.global.u64 	%rd172, [%rd4];
	setp.lt.u64 	%p3, %rd9, %rd172;
	selp.u64 	%rd173, 1, 0, %p3;
	ld.global.u64 	%rd174, [%rd4+8];
	add.s64 	%rd175, %rd174, %rd173;
	st.u64 	[%rd8+8], %rd175;
	ld.global.u64 	%rd176, [%rd4+8];
	setp.lt.u64 	%p4, %rd175, %rd176;
	selp.u64 	%rd177, 1, 0, %p4;
	ld.global.u64 	%rd178, [%rd4+16];
	add.s64 	%rd179, %rd178, %rd177;
	st.u64 	[%rd8+16], %rd179;
	ld.global.u64 	%rd180, [%rd4+16];
	setp.lt.u64 	%p5, %rd179, %rd180;
	selp.u64 	%rd181, 1, 0, %p5;
	ld.global.u64 	%rd182, [%rd4+24];
	add.s64 	%rd183, %rd182, %rd181;
	st.u64 	[%rd8+24], %rd183;
	shr.u64 	%rd184, %rd183, 56;
	cvt.u16.u64 	%rs1, %rd184;
	shr.u64 	%rd185, %rd183, 48;
	cvt.u16.u64 	%rs2, %rd185;
	shr.u64 	%rd186, %rd183, 40;
	cvt.u32.u64 	%r24, %rd186;
	cvt.u16.u64 	%rs3, %rd186;
	shr.u64 	%rd187, %rd183, 32;
	cvt.u16.u64 	%rs4, %rd187;
	shr.u64 	%rd188, %rd183, 24;
	cvt.u32.u64 	%r25, %rd188;
	cvt.u16.u64 	%rs5, %rd188;
	shr.u64 	%rd189, %rd183, 16;
	cvt.u16.u64 	%rs6, %rd189;
	shr.u64 	%rd190, %rd183, 8;
	cvt.u32.u64 	%r26, %rd190;
	cvt.u16.u64 	%rs7, %rd190;
	cvt.u16.u64 	%rs8, %rd183;
	shr.u64 	%rd191, %rd179, 56;
	cvt.u16.u64 	%rs9, %rd191;
	shr.u64 	%rd192, %rd179, 48;
	cvt.u16.u64 	%rs10, %rd192;
	shr.u64 	%rd193, %rd179, 40;
	cvt.u32.u64 	%r27, %rd193;
	cvt.u16.u64 	%rs11, %rd193;
	shr.u64 	%rd194, %rd179, 32;
	cvt.u16.u64 	%rs12, %rd194;
	shr.u64 	%rd195, %rd179, 24;
	cvt.u32.u64 	%r28, %rd195;
	cvt.u16.u64 	%rs13, %rd195;
	shr.u64 	%rd196, %rd179, 16;
	cvt.u16.u64 	%rs14, %rd196;
	shr.u64 	%rd197, %rd179, 8;
	cvt.u32.u64 	%r29, %rd197;
	cvt.u16.u64 	%rs15, %rd197;
	cvt.u16.u64 	%rs16, %rd179;
	shr.u64 	%rd198, %rd175, 56;
	cvt.u16.u64 	%rs17, %rd198;
	shr.u64 	%rd199, %rd175, 48;
	cvt.u16.u64 	%rs18, %rd199;
	shr.u64 	%rd200, %rd175, 40;
	cvt.u32.u64 	%r30, %rd200;
	cvt.u16.u64 	%rs19, %rd200;
	shr.u64 	%rd201, %rd175, 32;
	cvt.u16.u64 	%rs20, %rd201;
	shr.u64 	%rd202, %rd175, 24;
	cvt.u32.u64 	%r31, %rd202;
	cvt.u16.u64 	%rs21, %rd202;
	shr.u64 	%rd203, %rd175, 16;
	cvt.u16.u64 	%rs22, %rd203;
	shr.u64 	%rd204, %rd175, 8;
	cvt.u32.u64 	%r32, %rd204;
	cvt.u16.u64 	%rs23, %rd204;
	cvt.u16.u64 	%rs24, %rd175;
	shr.u64 	%rd205, %rd9, 56;
	shr.u64 	%rd206, %rd9, 48;
	shr.u64 	%rd207, %rd9, 40;
	cvt.u32.u64 	%r33, %rd207;
	shr.u64 	%rd208, %rd9, 32;
	cvt.u32.u64 	%r34, %rd9;
	shr.u64 	%rd209, %rd9, 16;
	shl.b16 	%rs26, %rs2, 8;
	or.b16  	%rs27, %rs1, %rs26;
	cvt.u32.u64 	%r35, %rd187;
	and.b32  	%r36, %r24, 255;
	prmt.b32 	%r37, %r35, %r36, 30212;
	cvt.u16.u32 	%rs28, %r37;
	cvt.u32.u64 	%r38, %rd189;
	and.b32  	%r39, %r25, 255;
	prmt.b32 	%r40, %r38, %r39, 30212;
	cvt.u32.u64 	%r41, %rd183;
	and.b32  	%r42, %r26, 255;
	prmt.b32 	%r43, %r41, %r42, 30212;
	shl.b16 	%rs29, %rs10, 8;
	or.b16  	%rs30, %rs9, %rs29;
	cvt.u32.u64 	%r44, %rd194;
	and.b32  	%r45, %r27, 255;
	prmt.b32 	%r46, %r44, %r45, 30212;
	cvt.u16.u32 	%rs31, %r46;
	cvt.u32.u64 	%r47, %rd196;
	and.b32  	%r48, %r28, 255;
	prmt.b32 	%r49, %r47, %r48, 30212;
	cvt.u32.u64 	%r50, %rd179;
	and.b32  	%r51, %r29, 255;
	prmt.b32 	%r52, %r50, %r51, 30212;
	prmt.b32 	%r53, %r52, %r49, 4180;
	mov.b32 	%r54, {%rs30, %rs31};
	prmt.b32 	%r55, %r43, %r40, 4180;
	mov.b32 	%r56, {%rs27, %rs28};
	st.local.v4.u32 	[%rd1+32], {%r56, %r55, %r54, %r53};
	shl.b16 	%rs32, %rs18, 8;
	or.b16  	%rs33, %rs17, %rs32;
	cvt.u32.u64 	%r57, %rd201;
	and.b32  	%r58, %r30, 255;
	prmt.b32 	%r59, %r57, %r58, 30212;
	cvt.u16.u32 	%rs34, %r59;
	cvt.u32.u64 	%r60, %rd203;
	and.b32  	%r61, %r31, 255;
	prmt.b32 	%r62, %r60, %r61, 30212;
	cvt.u32.u64 	%r63, %rd175;
	and.b32  	%r64, %r32, 255;
	prmt.b32 	%r65, %r63, %r64, 30212;
	cvt.u16.u64 	%rs35, %rd205;
	cvt.u16.u64 	%rs36, %rd206;
	shl.b16 	%rs37, %rs36, 8;
	or.b16  	%rs38, %rs35, %rs37;
	cvt.u32.u64 	%r66, %rd208;
	and.b32  	%r67, %r33, 255;
	prmt.b32 	%r68, %r66, %r67, 30212;
	cvt.u16.u32 	%rs39, %r68;
	cvt.u16.u64 	%rs40, %rd9;
	shl.b16 	%rs41, %rs40, 8;
	shr.u16 	%rs42, %rs40, 8;
	or.b16  	%rs43, %rs42, %rs41;
	shr.u32 	%r69, %r34, 24;
	cvt.u32.u64 	%r70, %rd209;
	prmt.b32 	%r71, %r70, %r69, 30212;
	cvt.u16.u32 	%rs44, %r71;
	mov.b32 	%r72, {%rs44, %rs43};
	mov.b32 	%r73, {%rs38, %rs39};
	prmt.b32 	%r74, %r65, %r62, 4180;
	mov.b32 	%r75, {%rs33, %rs34};
	st.local.v4.u32 	[%rd1+48], {%r75, %r74, %r73, %r72};
	mov.u64 	%rd19827, %rd2;

$L__BB2_4:
	mov.u32 	%r76, 0;
	st.local.v2.u32 	[%rd19827], {%r76, %r76};
	add.s64 	%rd19827, %rd19827, 8;
	add.s64 	%rd19828, %rd19828, 1;
	setp.lt.u64 	%p6, %rd19828, 49;
	@%p6 bra 	$L__BB2_4;

	mov.u64 	%rd19844, 0;
	st.local.u64 	[%rd2+392], %rd19844;
	ld.const.u64 	%rd14, [rate_BYTEs];
	ld.const.u64 	%rd15, [absorb_round];
	ld.const.u64 	%rd16, [CUDA_KECCAK_CONSTS];
	ld.const.u64 	%rd17, [CUDA_KECCAK_CONSTS+8];
	ld.const.u64 	%rd18, [CUDA_KECCAK_CONSTS+16];
	ld.const.u64 	%rd19, [CUDA_KECCAK_CONSTS+24];
	ld.const.u64 	%rd20, [CUDA_KECCAK_CONSTS+32];
	ld.const.u64 	%rd21, [CUDA_KECCAK_CONSTS+40];
	ld.const.u64 	%rd22, [CUDA_KECCAK_CONSTS+48];
	ld.const.u64 	%rd23, [CUDA_KECCAK_CONSTS+56];
	ld.const.u64 	%rd24, [CUDA_KECCAK_CONSTS+64];
	ld.const.u64 	%rd25, [CUDA_KECCAK_CONSTS+72];
	ld.const.u64 	%rd26, [CUDA_KECCAK_CONSTS+80];
	ld.const.u64 	%rd27, [CUDA_KECCAK_CONSTS+88];
	ld.const.u64 	%rd28, [CUDA_KECCAK_CONSTS+96];
	ld.const.u64 	%rd29, [CUDA_KECCAK_CONSTS+104];
	ld.const.u64 	%rd30, [CUDA_KECCAK_CONSTS+112];
	ld.const.u64 	%rd31, [CUDA_KECCAK_CONSTS+120];
	ld.const.u64 	%rd32, [CUDA_KECCAK_CONSTS+128];
	ld.const.u64 	%rd33, [CUDA_KECCAK_CONSTS+136];
	ld.const.u64 	%rd34, [CUDA_KECCAK_CONSTS+144];
	ld.const.u64 	%rd35, [CUDA_KECCAK_CONSTS+152];
	ld.const.u64 	%rd36, [CUDA_KECCAK_CONSTS+160];
	ld.const.u64 	%rd37, [CUDA_KECCAK_CONSTS+168];
	ld.const.u64 	%rd38, [CUDA_KECCAK_CONSTS+176];
	ld.const.u64 	%rd39, [CUDA_KECCAK_CONSTS+184];
	mov.u64 	%rd19843, %rd19844;

$L__BB2_6:
	mov.u64 	%rd212, 64;
	sub.s64 	%rd213, %rd212, %rd14;
	setp.gt.s64 	%p7, %rd19844, %rd213;
	setp.ne.s64 	%p8, %rd19843, 0;
	or.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB2_16;
	bra.uni 	$L__BB2_7;

$L__BB2_16:
	sub.s64 	%rd4101, %rd14, %rd19843;
	sub.s64 	%rd4103, %rd212, %rd19844;
	min.s64 	%rd56, %rd4101, %rd4103;
	setp.eq.s64 	%p17, %rd56, 0;
	@%p17 bra 	$L__BB2_19;

	mov.u64 	%rd19837, 0;

$L__BB2_18:
	add.s64 	%rd4105, %rd19844, %rd19837;
	add.s64 	%rd4106, %rd1, %rd4105;
	ld.local.u8 	%rs45, [%rd4106];
	add.s64 	%rd4107, %rd19843, %rd19837;
	add.s64 	%rd4108, %rd2, %rd4107;
	st.local.u8 	[%rd4108+200], %rs45;
	add.s64 	%rd19837, %rd19837, 1;
	setp.lt.u64 	%p18, %rd19837, %rd56;
	@%p18 bra 	$L__BB2_18;

$L__BB2_19:
	add.s64 	%rd19843, %rd56, %rd19843;
	add.s64 	%rd19844, %rd56, %rd19844;
	setp.ne.s64 	%p19, %rd19843, %rd14;
	@%p19 bra 	$L__BB2_29;

	setp.eq.s64 	%p20, %rd15, 0;
	@%p20 bra 	$L__BB2_28;

	max.u64 	%rd4111, %rd15, 1;
	add.s64 	%rd4112, %rd4111, -1;
	setp.lt.u64 	%p21, %rd4112, 3;
	mov.u64 	%rd19841, 0;
	mov.u64 	%rd19842, %rd19841;
	@%p21 bra 	$L__BB2_24;

	and.b64  	%rd4116, %rd4111, 3;
	sub.s64 	%rd19840, %rd4111, %rd4116;

$L__BB2_23:
	add.s64 	%rd4117, %rd2, %rd19842;
	ld.local.u64 	%rd4118, [%rd4117];
	ld.local.u8 	%rd4119, [%rd4117+200];
	ld.local.u8 	%rd4120, [%rd4117+201];
	bfi.b64 	%rd4121, %rd4120, %rd4119, 8, 8;
	ld.local.u8 	%rd4122, [%rd4117+202];
	ld.local.u8 	%rd4123, [%rd4117+203];
	bfi.b64 	%rd4124, %rd4123, %rd4122, 8, 8;
	bfi.b64 	%rd4125, %rd4124, %rd4121, 16, 16;
	ld.local.u8 	%rd4126, [%rd4117+204];
	ld.local.u8 	%rd4127, [%rd4117+205];
	bfi.b64 	%rd4128, %rd4127, %rd4126, 8, 8;
	ld.local.u8 	%rd4129, [%rd4117+206];
	ld.local.u8 	%rd4130, [%rd4117+207];
	bfi.b64 	%rd4131, %rd4130, %rd4129, 8, 8;
	bfi.b64 	%rd4132, %rd4131, %rd4128, 16, 16;
	bfi.b64 	%rd4133, %rd4132, %rd4125, 32, 32;
	xor.b64  	%rd4134, %rd4118, %rd4133;
	st.local.u64 	[%rd4117], %rd4134;
	ld.local.u64 	%rd4135, [%rd4117+8];
	ld.local.u8 	%rd4136, [%rd4117+208];
	ld.local.u8 	%rd4137, [%rd4117+209];
	bfi.b64 	%rd4138, %rd4137, %rd4136, 8, 8;
	ld.local.u8 	%rd4139, [%rd4117+210];
	ld.local.u8 	%rd4140, [%rd4117+211];
	bfi.b64 	%rd4141, %rd4140, %rd4139, 8, 8;
	bfi.b64 	%rd4142, %rd4141, %rd4138, 16, 16;
	ld.local.u8 	%rd4143, [%rd4117+212];
	ld.local.u8 	%rd4144, [%rd4117+213];
	bfi.b64 	%rd4145, %rd4144, %rd4143, 8, 8;
	ld.local.u8 	%rd4146, [%rd4117+214];
	ld.local.u8 	%rd4147, [%rd4117+215];
	bfi.b64 	%rd4148, %rd4147, %rd4146, 8, 8;
	bfi.b64 	%rd4149, %rd4148, %rd4145, 16, 16;
	bfi.b64 	%rd4150, %rd4149, %rd4142, 32, 32;
	xor.b64  	%rd4151, %rd4135, %rd4150;
	st.local.u64 	[%rd4117+8], %rd4151;
	ld.local.u64 	%rd4152, [%rd4117+16];
	ld.local.u8 	%rd4153, [%rd4117+216];
	ld.local.u8 	%rd4154, [%rd4117+217];
	bfi.b64 	%rd4155, %rd4154, %rd4153, 8, 8;
	ld.local.u8 	%rd4156, [%rd4117+218];
	ld.local.u8 	%rd4157, [%rd4117+219];
	bfi.b64 	%rd4158, %rd4157, %rd4156, 8, 8;
	bfi.b64 	%rd4159, %rd4158, %rd4155, 16, 16;
	ld.local.u8 	%rd4160, [%rd4117+220];
	ld.local.u8 	%rd4161, [%rd4117+221];
	bfi.b64 	%rd4162, %rd4161, %rd4160, 8, 8;
	ld.local.u8 	%rd4163, [%rd4117+222];
	ld.local.u8 	%rd4164, [%rd4117+223];
	bfi.b64 	%rd4165, %rd4164, %rd4163, 8, 8;
	bfi.b64 	%rd4166, %rd4165, %rd4162, 16, 16;
	bfi.b64 	%rd4167, %rd4166, %rd4159, 32, 32;
	xor.b64  	%rd4168, %rd4152, %rd4167;
	st.local.u64 	[%rd4117+16], %rd4168;
	ld.local.u64 	%rd4169, [%rd4117+24];
	ld.local.u8 	%rd4170, [%rd4117+224];
	ld.local.u8 	%rd4171, [%rd4117+225];
	bfi.b64 	%rd4172, %rd4171, %rd4170, 8, 8;
	ld.local.u8 	%rd4173, [%rd4117+226];
	ld.local.u8 	%rd4174, [%rd4117+227];
	bfi.b64 	%rd4175, %rd4174, %rd4173, 8, 8;
	bfi.b64 	%rd4176, %rd4175, %rd4172, 16, 16;
	ld.local.u8 	%rd4177, [%rd4117+228];
	ld.local.u8 	%rd4178, [%rd4117+229];
	bfi.b64 	%rd4179, %rd4178, %rd4177, 8, 8;
	ld.local.u8 	%rd4180, [%rd4117+230];
	ld.local.u8 	%rd4181, [%rd4117+231];
	bfi.b64 	%rd4182, %rd4181, %rd4180, 8, 8;
	bfi.b64 	%rd4183, %rd4182, %rd4179, 16, 16;
	bfi.b64 	%rd4184, %rd4183, %rd4176, 32, 32;
	xor.b64  	%rd4185, %rd4169, %rd4184;
	st.local.u64 	[%rd4117+24], %rd4185;
	add.s64 	%rd19842, %rd19842, 32;
	add.s64 	%rd19841, %rd19841, 4;
	add.s64 	%rd19840, %rd19840, -4;
	setp.ne.s64 	%p22, %rd19840, 0;
	@%p22 bra 	$L__BB2_23;

$L__BB2_24:
	and.b64  	%rd4187, %rd4111, 3;
	setp.eq.s64 	%p23, %rd4187, 0;
	@%p23 bra 	$L__BB2_28;

	setp.eq.s64 	%p24, %rd4187, 1;
	add.s64 	%rd4190, %rd2, %rd19842;
	add.s64 	%rd70, %rd4190, 200;
	shl.b64 	%rd4191, %rd19841, 3;
	add.s64 	%rd71, %rd2, %rd4191;
	ld.local.u64 	%rd4192, [%rd71];
	ld.local.u8 	%rd4193, [%rd4190+200];
	ld.local.u8 	%rd4194, [%rd4190+201];
	bfi.b64 	%rd4195, %rd4194, %rd4193, 8, 8;
	ld.local.u8 	%rd4196, [%rd4190+202];
	ld.local.u8 	%rd4197, [%rd4190+203];
	bfi.b64 	%rd4198, %rd4197, %rd4196, 8, 8;
	bfi.b64 	%rd4199, %rd4198, %rd4195, 16, 16;
	ld.local.u8 	%rd4200, [%rd4190+204];
	ld.local.u8 	%rd4201, [%rd4190+205];
	bfi.b64 	%rd4202, %rd4201, %rd4200, 8, 8;
	ld.local.u8 	%rd4203, [%rd4190+206];
	ld.local.u8 	%rd4204, [%rd4190+207];
	bfi.b64 	%rd4205, %rd4204, %rd4203, 8, 8;
	bfi.b64 	%rd4206, %rd4205, %rd4202, 16, 16;
	bfi.b64 	%rd4207, %rd4206, %rd4199, 32, 32;
	xor.b64  	%rd4208, %rd4192, %rd4207;
	st.local.u64 	[%rd71], %rd4208;
	@%p24 bra 	$L__BB2_28;

	setp.eq.s64 	%p25, %rd4187, 2;
	ld.local.u64 	%rd4211, [%rd71+8];
	ld.local.u8 	%rd4212, [%rd70+8];
	ld.local.u8 	%rd4213, [%rd70+9];
	bfi.b64 	%rd4214, %rd4213, %rd4212, 8, 8;
	ld.local.u8 	%rd4215, [%rd70+10];
	ld.local.u8 	%rd4216, [%rd70+11];
	bfi.b64 	%rd4217, %rd4216, %rd4215, 8, 8;
	bfi.b64 	%rd4218, %rd4217, %rd4214, 16, 16;
	ld.local.u8 	%rd4219, [%rd70+12];
	ld.local.u8 	%rd4220, [%rd70+13];
	bfi.b64 	%rd4221, %rd4220, %rd4219, 8, 8;
	ld.local.u8 	%rd4222, [%rd70+14];
	ld.local.u8 	%rd4223, [%rd70+15];
	bfi.b64 	%rd4224, %rd4223, %rd4222, 8, 8;
	bfi.b64 	%rd4225, %rd4224, %rd4221, 16, 16;
	bfi.b64 	%rd4226, %rd4225, %rd4218, 32, 32;
	xor.b64  	%rd4227, %rd4211, %rd4226;
	st.local.u64 	[%rd71+8], %rd4227;
	@%p25 bra 	$L__BB2_28;

	ld.local.u64 	%rd4228, [%rd71+16];
	ld.local.u8 	%rd4229, [%rd70+16];
	ld.local.u8 	%rd4230, [%rd70+17];
	bfi.b64 	%rd4231, %rd4230, %rd4229, 8, 8;
	ld.local.u8 	%rd4232, [%rd70+18];
	ld.local.u8 	%rd4233, [%rd70+19];
	bfi.b64 	%rd4234, %rd4233, %rd4232, 8, 8;
	bfi.b64 	%rd4235, %rd4234, %rd4231, 16, 16;
	ld.local.u8 	%rd4236, [%rd70+20];
	ld.local.u8 	%rd4237, [%rd70+21];
	bfi.b64 	%rd4238, %rd4237, %rd4236, 8, 8;
	ld.local.u8 	%rd4239, [%rd70+22];
	ld.local.u8 	%rd4240, [%rd70+23];
	bfi.b64 	%rd4241, %rd4240, %rd4239, 8, 8;
	bfi.b64 	%rd4242, %rd4241, %rd4238, 16, 16;
	bfi.b64 	%rd4243, %rd4242, %rd4235, 32, 32;
	xor.b64  	%rd4244, %rd4228, %rd4243;
	st.local.u64 	[%rd71+16], %rd4244;

$L__BB2_28:
	ld.local.u64 	%rd4246, [%rd2+40];
	mov.u64 	%rd19843, 0;
	ld.local.u64 	%rd4247, [%rd2];
	xor.b64  	%rd4248, %rd4246, %rd4247;
	ld.local.u64 	%rd4249, [%rd2+80];
	xor.b64  	%rd4250, %rd4248, %rd4249;
	ld.local.u64 	%rd4251, [%rd2+120];
	xor.b64  	%rd4252, %rd4250, %rd4251;
	ld.local.u64 	%rd4253, [%rd2+160];
	xor.b64  	%rd4254, %rd4252, %rd4253;
	ld.local.u64 	%rd4255, [%rd2+48];
	ld.local.u64 	%rd4256, [%rd2+8];
	xor.b64  	%rd4257, %rd4255, %rd4256;
	ld.local.u64 	%rd4258, [%rd2+88];
	xor.b64  	%rd4259, %rd4257, %rd4258;
	ld.local.u64 	%rd4260, [%rd2+128];
	xor.b64  	%rd4261, %rd4259, %rd4260;
	ld.local.u64 	%rd4262, [%rd2+168];
	xor.b64  	%rd4263, %rd4261, %rd4262;
	ld.local.u64 	%rd4264, [%rd2+56];
	ld.local.u64 	%rd4265, [%rd2+16];
	xor.b64  	%rd4266, %rd4264, %rd4265;
	ld.local.u64 	%rd4267, [%rd2+96];
	xor.b64  	%rd4268, %rd4266, %rd4267;
	ld.local.u64 	%rd4269, [%rd2+136];
	xor.b64  	%rd4270, %rd4268, %rd4269;
	ld.local.u64 	%rd4271, [%rd2+176];
	xor.b64  	%rd4272, %rd4270, %rd4271;
	ld.local.u64 	%rd4273, [%rd2+64];
	ld.local.u64 	%rd4274, [%rd2+24];
	xor.b64  	%rd4275, %rd4273, %rd4274;
	ld.local.u64 	%rd4276, [%rd2+104];
	xor.b64  	%rd4277, %rd4275, %rd4276;
	ld.local.u64 	%rd4278, [%rd2+144];
	xor.b64  	%rd4279, %rd4277, %rd4278;
	ld.local.u64 	%rd4280, [%rd2+184];
	xor.b64  	%rd4281, %rd4279, %rd4280;
	ld.local.u64 	%rd4282, [%rd2+72];
	ld.local.u64 	%rd4283, [%rd2+32];
	xor.b64  	%rd4284, %rd4282, %rd4283;
	ld.local.u64 	%rd4285, [%rd2+112];
	xor.b64  	%rd4286, %rd4284, %rd4285;
	ld.local.u64 	%rd4287, [%rd2+152];
	xor.b64  	%rd4288, %rd4286, %rd4287;
	ld.local.u64 	%rd4289, [%rd2+192];
	xor.b64  	%rd4290, %rd4288, %rd4289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2861}, %rd4263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2862,%dummy}, %rd4263;
	}
	shf.l.wrap.b32 	%r2863, %r2862, %r2861, 1;
	shf.l.wrap.b32 	%r2864, %r2861, %r2862, 1;
	mov.b64 	%rd4291, {%r2864, %r2863};
	xor.b64  	%rd4292, %rd4290, %rd4291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2865}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4272;
	}
	shf.l.wrap.b32 	%r2867, %r2866, %r2865, 1;
	shf.l.wrap.b32 	%r2868, %r2865, %r2866, 1;
	mov.b64 	%rd4293, {%r2868, %r2867};
	xor.b64  	%rd4294, %rd4293, %rd4254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2869}, %rd4281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2870,%dummy}, %rd4281;
	}
	shf.l.wrap.b32 	%r2871, %r2870, %r2869, 1;
	shf.l.wrap.b32 	%r2872, %r2869, %r2870, 1;
	mov.b64 	%rd4295, {%r2872, %r2871};
	xor.b64  	%rd4296, %rd4295, %rd4263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2873}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd4290;
	}
	shf.l.wrap.b32 	%r2875, %r2874, %r2873, 1;
	shf.l.wrap.b32 	%r2876, %r2873, %r2874, 1;
	mov.b64 	%rd4297, {%r2876, %r2875};
	xor.b64  	%rd4298, %rd4297, %rd4272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2877}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2878,%dummy}, %rd4254;
	}
	shf.l.wrap.b32 	%r2879, %r2878, %r2877, 1;
	shf.l.wrap.b32 	%r2880, %r2877, %r2878, 1;
	mov.b64 	%rd4299, {%r2880, %r2879};
	xor.b64  	%rd4300, %rd4281, %rd4299;
	xor.b64  	%rd4301, %rd4292, %rd4247;
	xor.b64  	%rd4302, %rd4294, %rd4256;
	xor.b64  	%rd4303, %rd4296, %rd4265;
	xor.b64  	%rd4304, %rd4298, %rd4274;
	xor.b64  	%rd4305, %rd4300, %rd4283;
	xor.b64  	%rd4306, %rd4292, %rd4246;
	xor.b64  	%rd4307, %rd4294, %rd4255;
	xor.b64  	%rd4308, %rd4296, %rd4264;
	xor.b64  	%rd4309, %rd4298, %rd4273;
	xor.b64  	%rd4310, %rd4300, %rd4282;
	xor.b64  	%rd4311, %rd4292, %rd4249;
	xor.b64  	%rd4312, %rd4294, %rd4258;
	xor.b64  	%rd4313, %rd4296, %rd4267;
	xor.b64  	%rd4314, %rd4298, %rd4276;
	xor.b64  	%rd4315, %rd4300, %rd4285;
	xor.b64  	%rd4316, %rd4292, %rd4251;
	xor.b64  	%rd4317, %rd4294, %rd4260;
	xor.b64  	%rd4318, %rd4296, %rd4269;
	xor.b64  	%rd4319, %rd4298, %rd4278;
	xor.b64  	%rd4320, %rd4300, %rd4287;
	xor.b64  	%rd4321, %rd4292, %rd4253;
	xor.b64  	%rd4322, %rd4294, %rd4262;
	xor.b64  	%rd4323, %rd4296, %rd4271;
	xor.b64  	%rd4324, %rd4298, %rd4280;
	xor.b64  	%rd4325, %rd4300, %rd4289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2881,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2882}, %rd4307;
	}
	shf.r.wrap.b32 	%r2883, %r2882, %r2881, 20;
	shf.r.wrap.b32 	%r2884, %r2881, %r2882, 20;
	mov.b64 	%rd4326, {%r2884, %r2883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2885,%dummy}, %rd4313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2886}, %rd4313;
	}
	shf.r.wrap.b32 	%r2887, %r2886, %r2885, 21;
	shf.r.wrap.b32 	%r2888, %r2885, %r2886, 21;
	mov.b64 	%rd4327, {%r2888, %r2887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2889}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd4319;
	}
	shf.l.wrap.b32 	%r2891, %r2890, %r2889, 21;
	shf.l.wrap.b32 	%r2892, %r2889, %r2890, 21;
	mov.b64 	%rd4328, {%r2892, %r2891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2893}, %rd4325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2894,%dummy}, %rd4325;
	}
	shf.l.wrap.b32 	%r2895, %r2894, %r2893, 14;
	shf.l.wrap.b32 	%r2896, %r2893, %r2894, 14;
	mov.b64 	%rd4329, {%r2896, %r2895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2897}, %rd4304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd4304;
	}
	shf.l.wrap.b32 	%r2899, %r2898, %r2897, 28;
	shf.l.wrap.b32 	%r2900, %r2897, %r2898, 28;
	mov.b64 	%rd4330, {%r2900, %r2899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2901}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2902,%dummy}, %rd4310;
	}
	shf.l.wrap.b32 	%r2903, %r2902, %r2901, 20;
	shf.l.wrap.b32 	%r2904, %r2901, %r2902, 20;
	mov.b64 	%rd4331, {%r2904, %r2903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2905}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd4311;
	}
	shf.l.wrap.b32 	%r2907, %r2906, %r2905, 3;
	shf.l.wrap.b32 	%r2908, %r2905, %r2906, 3;
	mov.b64 	%rd4332, {%r2908, %r2907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2909,%dummy}, %rd4317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2910}, %rd4317;
	}
	shf.r.wrap.b32 	%r2911, %r2910, %r2909, 19;
	shf.r.wrap.b32 	%r2912, %r2909, %r2910, 19;
	mov.b64 	%rd4333, {%r2912, %r2911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2913,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd4323;
	}
	shf.r.wrap.b32 	%r2915, %r2914, %r2913, 3;
	shf.r.wrap.b32 	%r2916, %r2913, %r2914, 3;
	mov.b64 	%rd4334, {%r2916, %r2915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2917}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2918,%dummy}, %rd4302;
	}
	shf.l.wrap.b32 	%r2919, %r2918, %r2917, 1;
	shf.l.wrap.b32 	%r2920, %r2917, %r2918, 1;
	mov.b64 	%rd4335, {%r2920, %r2919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2921}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd4308;
	}
	shf.l.wrap.b32 	%r2923, %r2922, %r2921, 6;
	shf.l.wrap.b32 	%r2924, %r2921, %r2922, 6;
	mov.b64 	%rd4336, {%r2924, %r2923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2925}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2926,%dummy}, %rd4314;
	}
	shf.l.wrap.b32 	%r2927, %r2926, %r2925, 25;
	shf.l.wrap.b32 	%r2928, %r2925, %r2926, 25;
	mov.b64 	%rd4337, {%r2928, %r2927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd4320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd4320;
	}
	shf.l.wrap.b32 	%r2931, %r2930, %r2929, 8;
	shf.l.wrap.b32 	%r2932, %r2929, %r2930, 8;
	mov.b64 	%rd4338, {%r2932, %r2931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2933}, %rd4321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2934,%dummy}, %rd4321;
	}
	shf.l.wrap.b32 	%r2935, %r2934, %r2933, 18;
	shf.l.wrap.b32 	%r2936, %r2933, %r2934, 18;
	mov.b64 	%rd4339, {%r2936, %r2935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd4305;
	}
	shf.l.wrap.b32 	%r2939, %r2938, %r2937, 27;
	shf.l.wrap.b32 	%r2940, %r2937, %r2938, 27;
	mov.b64 	%rd4340, {%r2940, %r2939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2941,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2942}, %rd4306;
	}
	shf.r.wrap.b32 	%r2943, %r2942, %r2941, 28;
	shf.r.wrap.b32 	%r2944, %r2941, %r2942, 28;
	mov.b64 	%rd4341, {%r2944, %r2943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd4312;
	}
	shf.l.wrap.b32 	%r2947, %r2946, %r2945, 10;
	shf.l.wrap.b32 	%r2948, %r2945, %r2946, 10;
	mov.b64 	%rd4342, {%r2948, %r2947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2949}, %rd4318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2950,%dummy}, %rd4318;
	}
	shf.l.wrap.b32 	%r2951, %r2950, %r2949, 15;
	shf.l.wrap.b32 	%r2952, %r2949, %r2950, 15;
	mov.b64 	%rd4343, {%r2952, %r2951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2953,%dummy}, %rd4324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2954}, %rd4324;
	}
	shf.r.wrap.b32 	%r2955, %r2954, %r2953, 8;
	shf.r.wrap.b32 	%r2956, %r2953, %r2954, 8;
	mov.b64 	%rd4344, {%r2956, %r2955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2957,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2958}, %rd4303;
	}
	shf.r.wrap.b32 	%r2959, %r2958, %r2957, 2;
	shf.r.wrap.b32 	%r2960, %r2957, %r2958, 2;
	mov.b64 	%rd4345, {%r2960, %r2959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2961,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2962}, %rd4309;
	}
	shf.r.wrap.b32 	%r2963, %r2962, %r2961, 9;
	shf.r.wrap.b32 	%r2964, %r2961, %r2962, 9;
	mov.b64 	%rd4346, {%r2964, %r2963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2965,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2966}, %rd4315;
	}
	shf.r.wrap.b32 	%r2967, %r2966, %r2965, 25;
	shf.r.wrap.b32 	%r2968, %r2965, %r2966, 25;
	mov.b64 	%rd4347, {%r2968, %r2967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2969,%dummy}, %rd4316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2970}, %rd4316;
	}
	shf.r.wrap.b32 	%r2971, %r2970, %r2969, 23;
	shf.r.wrap.b32 	%r2972, %r2969, %r2970, 23;
	mov.b64 	%rd4348, {%r2972, %r2971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2973}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2974,%dummy}, %rd4322;
	}
	shf.l.wrap.b32 	%r2975, %r2974, %r2973, 2;
	shf.l.wrap.b32 	%r2976, %r2973, %r2974, 2;
	mov.b64 	%rd4349, {%r2976, %r2975};
	not.b64 	%rd4350, %rd4326;
	and.b64  	%rd4351, %rd4327, %rd4350;
	xor.b64  	%rd4352, %rd4351, %rd4301;
	not.b64 	%rd4353, %rd4327;
	and.b64  	%rd4354, %rd4328, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd4326;
	not.b64 	%rd4356, %rd4328;
	and.b64  	%rd4357, %rd4329, %rd4356;
	xor.b64  	%rd4358, %rd4357, %rd4327;
	not.b64 	%rd4359, %rd4329;
	and.b64  	%rd4360, %rd4301, %rd4359;
	xor.b64  	%rd4361, %rd4360, %rd4328;
	not.b64 	%rd4362, %rd4301;
	and.b64  	%rd4363, %rd4326, %rd4362;
	xor.b64  	%rd4364, %rd4363, %rd4329;
	not.b64 	%rd4365, %rd4331;
	and.b64  	%rd4366, %rd4332, %rd4365;
	xor.b64  	%rd4367, %rd4366, %rd4330;
	not.b64 	%rd4368, %rd4332;
	and.b64  	%rd4369, %rd4333, %rd4368;
	xor.b64  	%rd4370, %rd4369, %rd4331;
	not.b64 	%rd4371, %rd4333;
	and.b64  	%rd4372, %rd4334, %rd4371;
	xor.b64  	%rd4373, %rd4372, %rd4332;
	not.b64 	%rd4374, %rd4334;
	and.b64  	%rd4375, %rd4330, %rd4374;
	xor.b64  	%rd4376, %rd4375, %rd4333;
	not.b64 	%rd4377, %rd4330;
	and.b64  	%rd4378, %rd4331, %rd4377;
	xor.b64  	%rd4379, %rd4378, %rd4334;
	not.b64 	%rd4380, %rd4336;
	and.b64  	%rd4381, %rd4337, %rd4380;
	xor.b64  	%rd4382, %rd4381, %rd4335;
	not.b64 	%rd4383, %rd4337;
	and.b64  	%rd4384, %rd4338, %rd4383;
	xor.b64  	%rd4385, %rd4384, %rd4336;
	not.b64 	%rd4386, %rd4338;
	and.b64  	%rd4387, %rd4339, %rd4386;
	xor.b64  	%rd4388, %rd4387, %rd4337;
	not.b64 	%rd4389, %rd4339;
	and.b64  	%rd4390, %rd4335, %rd4389;
	xor.b64  	%rd4391, %rd4390, %rd4338;
	not.b64 	%rd4392, %rd4335;
	and.b64  	%rd4393, %rd4336, %rd4392;
	xor.b64  	%rd4394, %rd4393, %rd4339;
	not.b64 	%rd4395, %rd4341;
	and.b64  	%rd4396, %rd4342, %rd4395;
	xor.b64  	%rd4397, %rd4396, %rd4340;
	not.b64 	%rd4398, %rd4342;
	and.b64  	%rd4399, %rd4343, %rd4398;
	xor.b64  	%rd4400, %rd4399, %rd4341;
	not.b64 	%rd4401, %rd4343;
	and.b64  	%rd4402, %rd4344, %rd4401;
	xor.b64  	%rd4403, %rd4402, %rd4342;
	not.b64 	%rd4404, %rd4344;
	and.b64  	%rd4405, %rd4340, %rd4404;
	xor.b64  	%rd4406, %rd4405, %rd4343;
	not.b64 	%rd4407, %rd4340;
	and.b64  	%rd4408, %rd4341, %rd4407;
	xor.b64  	%rd4409, %rd4408, %rd4344;
	not.b64 	%rd4410, %rd4346;
	and.b64  	%rd4411, %rd4347, %rd4410;
	xor.b64  	%rd4412, %rd4411, %rd4345;
	not.b64 	%rd4413, %rd4347;
	and.b64  	%rd4414, %rd4348, %rd4413;
	xor.b64  	%rd4415, %rd4414, %rd4346;
	not.b64 	%rd4416, %rd4348;
	and.b64  	%rd4417, %rd4349, %rd4416;
	xor.b64  	%rd4418, %rd4417, %rd4347;
	not.b64 	%rd4419, %rd4349;
	and.b64  	%rd4420, %rd4345, %rd4419;
	xor.b64  	%rd4421, %rd4420, %rd4348;
	not.b64 	%rd4422, %rd4345;
	and.b64  	%rd4423, %rd4346, %rd4422;
	xor.b64  	%rd4424, %rd4423, %rd4349;
	xor.b64  	%rd4425, %rd4352, %rd16;
	xor.b64  	%rd4426, %rd4367, %rd4425;
	xor.b64  	%rd4427, %rd4426, %rd4382;
	xor.b64  	%rd4428, %rd4427, %rd4397;
	xor.b64  	%rd4429, %rd4428, %rd4412;
	xor.b64  	%rd4430, %rd4370, %rd4355;
	xor.b64  	%rd4431, %rd4430, %rd4385;
	xor.b64  	%rd4432, %rd4431, %rd4400;
	xor.b64  	%rd4433, %rd4432, %rd4415;
	xor.b64  	%rd4434, %rd4373, %rd4358;
	xor.b64  	%rd4435, %rd4434, %rd4388;
	xor.b64  	%rd4436, %rd4435, %rd4403;
	xor.b64  	%rd4437, %rd4436, %rd4418;
	xor.b64  	%rd4438, %rd4376, %rd4361;
	xor.b64  	%rd4439, %rd4438, %rd4391;
	xor.b64  	%rd4440, %rd4439, %rd4406;
	xor.b64  	%rd4441, %rd4440, %rd4421;
	xor.b64  	%rd4442, %rd4379, %rd4364;
	xor.b64  	%rd4443, %rd4442, %rd4394;
	xor.b64  	%rd4444, %rd4443, %rd4409;
	xor.b64  	%rd4445, %rd4444, %rd4424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2977}, %rd4433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd4433;
	}
	shf.l.wrap.b32 	%r2979, %r2978, %r2977, 1;
	shf.l.wrap.b32 	%r2980, %r2977, %r2978, 1;
	mov.b64 	%rd4446, {%r2980, %r2979};
	xor.b64  	%rd4447, %rd4445, %rd4446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd4437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2982,%dummy}, %rd4437;
	}
	shf.l.wrap.b32 	%r2983, %r2982, %r2981, 1;
	shf.l.wrap.b32 	%r2984, %r2981, %r2982, 1;
	mov.b64 	%rd4448, {%r2984, %r2983};
	xor.b64  	%rd4449, %rd4448, %rd4429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2985}, %rd4441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd4441;
	}
	shf.l.wrap.b32 	%r2987, %r2986, %r2985, 1;
	shf.l.wrap.b32 	%r2988, %r2985, %r2986, 1;
	mov.b64 	%rd4450, {%r2988, %r2987};
	xor.b64  	%rd4451, %rd4450, %rd4433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2989}, %rd4445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd4445;
	}
	shf.l.wrap.b32 	%r2991, %r2990, %r2989, 1;
	shf.l.wrap.b32 	%r2992, %r2989, %r2990, 1;
	mov.b64 	%rd4452, {%r2992, %r2991};
	xor.b64  	%rd4453, %rd4452, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2993}, %rd4429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd4429;
	}
	shf.l.wrap.b32 	%r2995, %r2994, %r2993, 1;
	shf.l.wrap.b32 	%r2996, %r2993, %r2994, 1;
	mov.b64 	%rd4454, {%r2996, %r2995};
	xor.b64  	%rd4455, %rd4441, %rd4454;
	xor.b64  	%rd4456, %rd4447, %rd4425;
	xor.b64  	%rd4457, %rd4449, %rd4355;
	xor.b64  	%rd4458, %rd4451, %rd4358;
	xor.b64  	%rd4459, %rd4453, %rd4361;
	xor.b64  	%rd4460, %rd4455, %rd4364;
	xor.b64  	%rd4461, %rd4447, %rd4367;
	xor.b64  	%rd4462, %rd4449, %rd4370;
	xor.b64  	%rd4463, %rd4451, %rd4373;
	xor.b64  	%rd4464, %rd4453, %rd4376;
	xor.b64  	%rd4465, %rd4455, %rd4379;
	xor.b64  	%rd4466, %rd4447, %rd4382;
	xor.b64  	%rd4467, %rd4449, %rd4385;
	xor.b64  	%rd4468, %rd4451, %rd4388;
	xor.b64  	%rd4469, %rd4453, %rd4391;
	xor.b64  	%rd4470, %rd4455, %rd4394;
	xor.b64  	%rd4471, %rd4447, %rd4397;
	xor.b64  	%rd4472, %rd4449, %rd4400;
	xor.b64  	%rd4473, %rd4451, %rd4403;
	xor.b64  	%rd4474, %rd4453, %rd4406;
	xor.b64  	%rd4475, %rd4455, %rd4409;
	xor.b64  	%rd4476, %rd4447, %rd4412;
	xor.b64  	%rd4477, %rd4449, %rd4415;
	xor.b64  	%rd4478, %rd4451, %rd4418;
	xor.b64  	%rd4479, %rd4453, %rd4421;
	xor.b64  	%rd4480, %rd4455, %rd4424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2997,%dummy}, %rd4462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2998}, %rd4462;
	}
	shf.r.wrap.b32 	%r2999, %r2998, %r2997, 20;
	shf.r.wrap.b32 	%r3000, %r2997, %r2998, 20;
	mov.b64 	%rd4481, {%r3000, %r2999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3001,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3002}, %rd4468;
	}
	shf.r.wrap.b32 	%r3003, %r3002, %r3001, 21;
	shf.r.wrap.b32 	%r3004, %r3001, %r3002, 21;
	mov.b64 	%rd4482, {%r3004, %r3003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3005}, %rd4474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd4474;
	}
	shf.l.wrap.b32 	%r3007, %r3006, %r3005, 21;
	shf.l.wrap.b32 	%r3008, %r3005, %r3006, 21;
	mov.b64 	%rd4483, {%r3008, %r3007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3009}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd4480;
	}
	shf.l.wrap.b32 	%r3011, %r3010, %r3009, 14;
	shf.l.wrap.b32 	%r3012, %r3009, %r3010, 14;
	mov.b64 	%rd4484, {%r3012, %r3011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3013}, %rd4459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd4459;
	}
	shf.l.wrap.b32 	%r3015, %r3014, %r3013, 28;
	shf.l.wrap.b32 	%r3016, %r3013, %r3014, 28;
	mov.b64 	%rd4485, {%r3016, %r3015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3017}, %rd4465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd4465;
	}
	shf.l.wrap.b32 	%r3019, %r3018, %r3017, 20;
	shf.l.wrap.b32 	%r3020, %r3017, %r3018, 20;
	mov.b64 	%rd4486, {%r3020, %r3019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3021}, %rd4466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3022,%dummy}, %rd4466;
	}
	shf.l.wrap.b32 	%r3023, %r3022, %r3021, 3;
	shf.l.wrap.b32 	%r3024, %r3021, %r3022, 3;
	mov.b64 	%rd4487, {%r3024, %r3023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3025,%dummy}, %rd4472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3026}, %rd4472;
	}
	shf.r.wrap.b32 	%r3027, %r3026, %r3025, 19;
	shf.r.wrap.b32 	%r3028, %r3025, %r3026, 19;
	mov.b64 	%rd4488, {%r3028, %r3027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3029,%dummy}, %rd4478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3030}, %rd4478;
	}
	shf.r.wrap.b32 	%r3031, %r3030, %r3029, 3;
	shf.r.wrap.b32 	%r3032, %r3029, %r3030, 3;
	mov.b64 	%rd4489, {%r3032, %r3031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3033}, %rd4457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3034,%dummy}, %rd4457;
	}
	shf.l.wrap.b32 	%r3035, %r3034, %r3033, 1;
	shf.l.wrap.b32 	%r3036, %r3033, %r3034, 1;
	mov.b64 	%rd4490, {%r3036, %r3035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3037}, %rd4463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3038,%dummy}, %rd4463;
	}
	shf.l.wrap.b32 	%r3039, %r3038, %r3037, 6;
	shf.l.wrap.b32 	%r3040, %r3037, %r3038, 6;
	mov.b64 	%rd4491, {%r3040, %r3039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd4469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd4469;
	}
	shf.l.wrap.b32 	%r3043, %r3042, %r3041, 25;
	shf.l.wrap.b32 	%r3044, %r3041, %r3042, 25;
	mov.b64 	%rd4492, {%r3044, %r3043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3045}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3046,%dummy}, %rd4475;
	}
	shf.l.wrap.b32 	%r3047, %r3046, %r3045, 8;
	shf.l.wrap.b32 	%r3048, %r3045, %r3046, 8;
	mov.b64 	%rd4493, {%r3048, %r3047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd4476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4476;
	}
	shf.l.wrap.b32 	%r3051, %r3050, %r3049, 18;
	shf.l.wrap.b32 	%r3052, %r3049, %r3050, 18;
	mov.b64 	%rd4494, {%r3052, %r3051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3053}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3054,%dummy}, %rd4460;
	}
	shf.l.wrap.b32 	%r3055, %r3054, %r3053, 27;
	shf.l.wrap.b32 	%r3056, %r3053, %r3054, 27;
	mov.b64 	%rd4495, {%r3056, %r3055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3057,%dummy}, %rd4461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3058}, %rd4461;
	}
	shf.r.wrap.b32 	%r3059, %r3058, %r3057, 28;
	shf.r.wrap.b32 	%r3060, %r3057, %r3058, 28;
	mov.b64 	%rd4496, {%r3060, %r3059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3061}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3062,%dummy}, %rd4467;
	}
	shf.l.wrap.b32 	%r3063, %r3062, %r3061, 10;
	shf.l.wrap.b32 	%r3064, %r3061, %r3062, 10;
	mov.b64 	%rd4497, {%r3064, %r3063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3065}, %rd4473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd4473;
	}
	shf.l.wrap.b32 	%r3067, %r3066, %r3065, 15;
	shf.l.wrap.b32 	%r3068, %r3065, %r3066, 15;
	mov.b64 	%rd4498, {%r3068, %r3067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3069,%dummy}, %rd4479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3070}, %rd4479;
	}
	shf.r.wrap.b32 	%r3071, %r3070, %r3069, 8;
	shf.r.wrap.b32 	%r3072, %r3069, %r3070, 8;
	mov.b64 	%rd4499, {%r3072, %r3071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3073,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3074}, %rd4458;
	}
	shf.r.wrap.b32 	%r3075, %r3074, %r3073, 2;
	shf.r.wrap.b32 	%r3076, %r3073, %r3074, 2;
	mov.b64 	%rd4500, {%r3076, %r3075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd4464;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 9;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 9;
	mov.b64 	%rd4501, {%r3080, %r3079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3081,%dummy}, %rd4470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3082}, %rd4470;
	}
	shf.r.wrap.b32 	%r3083, %r3082, %r3081, 25;
	shf.r.wrap.b32 	%r3084, %r3081, %r3082, 25;
	mov.b64 	%rd4502, {%r3084, %r3083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3085,%dummy}, %rd4471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3086}, %rd4471;
	}
	shf.r.wrap.b32 	%r3087, %r3086, %r3085, 23;
	shf.r.wrap.b32 	%r3088, %r3085, %r3086, 23;
	mov.b64 	%rd4503, {%r3088, %r3087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3089}, %rd4477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd4477;
	}
	shf.l.wrap.b32 	%r3091, %r3090, %r3089, 2;
	shf.l.wrap.b32 	%r3092, %r3089, %r3090, 2;
	mov.b64 	%rd4504, {%r3092, %r3091};
	not.b64 	%rd4505, %rd4481;
	and.b64  	%rd4506, %rd4482, %rd4505;
	xor.b64  	%rd4507, %rd4506, %rd4456;
	not.b64 	%rd4508, %rd4482;
	and.b64  	%rd4509, %rd4483, %rd4508;
	xor.b64  	%rd4510, %rd4509, %rd4481;
	not.b64 	%rd4511, %rd4483;
	and.b64  	%rd4512, %rd4484, %rd4511;
	xor.b64  	%rd4513, %rd4512, %rd4482;
	not.b64 	%rd4514, %rd4484;
	and.b64  	%rd4515, %rd4456, %rd4514;
	xor.b64  	%rd4516, %rd4515, %rd4483;
	not.b64 	%rd4517, %rd4456;
	and.b64  	%rd4518, %rd4481, %rd4517;
	xor.b64  	%rd4519, %rd4518, %rd4484;
	not.b64 	%rd4520, %rd4486;
	and.b64  	%rd4521, %rd4487, %rd4520;
	xor.b64  	%rd4522, %rd4521, %rd4485;
	not.b64 	%rd4523, %rd4487;
	and.b64  	%rd4524, %rd4488, %rd4523;
	xor.b64  	%rd4525, %rd4524, %rd4486;
	not.b64 	%rd4526, %rd4488;
	and.b64  	%rd4527, %rd4489, %rd4526;
	xor.b64  	%rd4528, %rd4527, %rd4487;
	not.b64 	%rd4529, %rd4489;
	and.b64  	%rd4530, %rd4485, %rd4529;
	xor.b64  	%rd4531, %rd4530, %rd4488;
	not.b64 	%rd4532, %rd4485;
	and.b64  	%rd4533, %rd4486, %rd4532;
	xor.b64  	%rd4534, %rd4533, %rd4489;
	not.b64 	%rd4535, %rd4491;
	and.b64  	%rd4536, %rd4492, %rd4535;
	xor.b64  	%rd4537, %rd4536, %rd4490;
	not.b64 	%rd4538, %rd4492;
	and.b64  	%rd4539, %rd4493, %rd4538;
	xor.b64  	%rd4540, %rd4539, %rd4491;
	not.b64 	%rd4541, %rd4493;
	and.b64  	%rd4542, %rd4494, %rd4541;
	xor.b64  	%rd4543, %rd4542, %rd4492;
	not.b64 	%rd4544, %rd4494;
	and.b64  	%rd4545, %rd4490, %rd4544;
	xor.b64  	%rd4546, %rd4545, %rd4493;
	not.b64 	%rd4547, %rd4490;
	and.b64  	%rd4548, %rd4491, %rd4547;
	xor.b64  	%rd4549, %rd4548, %rd4494;
	not.b64 	%rd4550, %rd4496;
	and.b64  	%rd4551, %rd4497, %rd4550;
	xor.b64  	%rd4552, %rd4551, %rd4495;
	not.b64 	%rd4553, %rd4497;
	and.b64  	%rd4554, %rd4498, %rd4553;
	xor.b64  	%rd4555, %rd4554, %rd4496;
	not.b64 	%rd4556, %rd4498;
	and.b64  	%rd4557, %rd4499, %rd4556;
	xor.b64  	%rd4558, %rd4557, %rd4497;
	not.b64 	%rd4559, %rd4499;
	and.b64  	%rd4560, %rd4495, %rd4559;
	xor.b64  	%rd4561, %rd4560, %rd4498;
	not.b64 	%rd4562, %rd4495;
	and.b64  	%rd4563, %rd4496, %rd4562;
	xor.b64  	%rd4564, %rd4563, %rd4499;
	not.b64 	%rd4565, %rd4501;
	and.b64  	%rd4566, %rd4502, %rd4565;
	xor.b64  	%rd4567, %rd4566, %rd4500;
	not.b64 	%rd4568, %rd4502;
	and.b64  	%rd4569, %rd4503, %rd4568;
	xor.b64  	%rd4570, %rd4569, %rd4501;
	not.b64 	%rd4571, %rd4503;
	and.b64  	%rd4572, %rd4504, %rd4571;
	xor.b64  	%rd4573, %rd4572, %rd4502;
	not.b64 	%rd4574, %rd4504;
	and.b64  	%rd4575, %rd4500, %rd4574;
	xor.b64  	%rd4576, %rd4575, %rd4503;
	not.b64 	%rd4577, %rd4500;
	and.b64  	%rd4578, %rd4501, %rd4577;
	xor.b64  	%rd4579, %rd4578, %rd4504;
	xor.b64  	%rd4580, %rd4507, %rd17;
	xor.b64  	%rd4581, %rd4522, %rd4580;
	xor.b64  	%rd4582, %rd4581, %rd4537;
	xor.b64  	%rd4583, %rd4582, %rd4552;
	xor.b64  	%rd4584, %rd4583, %rd4567;
	xor.b64  	%rd4585, %rd4525, %rd4510;
	xor.b64  	%rd4586, %rd4585, %rd4540;
	xor.b64  	%rd4587, %rd4586, %rd4555;
	xor.b64  	%rd4588, %rd4587, %rd4570;
	xor.b64  	%rd4589, %rd4528, %rd4513;
	xor.b64  	%rd4590, %rd4589, %rd4543;
	xor.b64  	%rd4591, %rd4590, %rd4558;
	xor.b64  	%rd4592, %rd4591, %rd4573;
	xor.b64  	%rd4593, %rd4531, %rd4516;
	xor.b64  	%rd4594, %rd4593, %rd4546;
	xor.b64  	%rd4595, %rd4594, %rd4561;
	xor.b64  	%rd4596, %rd4595, %rd4576;
	xor.b64  	%rd4597, %rd4534, %rd4519;
	xor.b64  	%rd4598, %rd4597, %rd4549;
	xor.b64  	%rd4599, %rd4598, %rd4564;
	xor.b64  	%rd4600, %rd4599, %rd4579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3093}, %rd4588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3094,%dummy}, %rd4588;
	}
	shf.l.wrap.b32 	%r3095, %r3094, %r3093, 1;
	shf.l.wrap.b32 	%r3096, %r3093, %r3094, 1;
	mov.b64 	%rd4601, {%r3096, %r3095};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3097}, %rd4592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd4592;
	}
	shf.l.wrap.b32 	%r3099, %r3098, %r3097, 1;
	shf.l.wrap.b32 	%r3100, %r3097, %r3098, 1;
	mov.b64 	%rd4603, {%r3100, %r3099};
	xor.b64  	%rd4604, %rd4603, %rd4584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd4596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3102,%dummy}, %rd4596;
	}
	shf.l.wrap.b32 	%r3103, %r3102, %r3101, 1;
	shf.l.wrap.b32 	%r3104, %r3101, %r3102, 1;
	mov.b64 	%rd4605, {%r3104, %r3103};
	xor.b64  	%rd4606, %rd4605, %rd4588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3105}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd4600;
	}
	shf.l.wrap.b32 	%r3107, %r3106, %r3105, 1;
	shf.l.wrap.b32 	%r3108, %r3105, %r3106, 1;
	mov.b64 	%rd4607, {%r3108, %r3107};
	xor.b64  	%rd4608, %rd4607, %rd4592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3109}, %rd4584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd4584;
	}
	shf.l.wrap.b32 	%r3111, %r3110, %r3109, 1;
	shf.l.wrap.b32 	%r3112, %r3109, %r3110, 1;
	mov.b64 	%rd4609, {%r3112, %r3111};
	xor.b64  	%rd4610, %rd4596, %rd4609;
	xor.b64  	%rd4611, %rd4602, %rd4580;
	xor.b64  	%rd4612, %rd4604, %rd4510;
	xor.b64  	%rd4613, %rd4606, %rd4513;
	xor.b64  	%rd4614, %rd4608, %rd4516;
	xor.b64  	%rd4615, %rd4610, %rd4519;
	xor.b64  	%rd4616, %rd4602, %rd4522;
	xor.b64  	%rd4617, %rd4604, %rd4525;
	xor.b64  	%rd4618, %rd4606, %rd4528;
	xor.b64  	%rd4619, %rd4608, %rd4531;
	xor.b64  	%rd4620, %rd4610, %rd4534;
	xor.b64  	%rd4621, %rd4602, %rd4537;
	xor.b64  	%rd4622, %rd4604, %rd4540;
	xor.b64  	%rd4623, %rd4606, %rd4543;
	xor.b64  	%rd4624, %rd4608, %rd4546;
	xor.b64  	%rd4625, %rd4610, %rd4549;
	xor.b64  	%rd4626, %rd4602, %rd4552;
	xor.b64  	%rd4627, %rd4604, %rd4555;
	xor.b64  	%rd4628, %rd4606, %rd4558;
	xor.b64  	%rd4629, %rd4608, %rd4561;
	xor.b64  	%rd4630, %rd4610, %rd4564;
	xor.b64  	%rd4631, %rd4602, %rd4567;
	xor.b64  	%rd4632, %rd4604, %rd4570;
	xor.b64  	%rd4633, %rd4606, %rd4573;
	xor.b64  	%rd4634, %rd4608, %rd4576;
	xor.b64  	%rd4635, %rd4610, %rd4579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3113,%dummy}, %rd4617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3114}, %rd4617;
	}
	shf.r.wrap.b32 	%r3115, %r3114, %r3113, 20;
	shf.r.wrap.b32 	%r3116, %r3113, %r3114, 20;
	mov.b64 	%rd4636, {%r3116, %r3115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3117,%dummy}, %rd4623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3118}, %rd4623;
	}
	shf.r.wrap.b32 	%r3119, %r3118, %r3117, 21;
	shf.r.wrap.b32 	%r3120, %r3117, %r3118, 21;
	mov.b64 	%rd4637, {%r3120, %r3119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd4629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3122,%dummy}, %rd4629;
	}
	shf.l.wrap.b32 	%r3123, %r3122, %r3121, 21;
	shf.l.wrap.b32 	%r3124, %r3121, %r3122, 21;
	mov.b64 	%rd4638, {%r3124, %r3123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3125}, %rd4635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd4635;
	}
	shf.l.wrap.b32 	%r3127, %r3126, %r3125, 14;
	shf.l.wrap.b32 	%r3128, %r3125, %r3126, 14;
	mov.b64 	%rd4639, {%r3128, %r3127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3129}, %rd4614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3130,%dummy}, %rd4614;
	}
	shf.l.wrap.b32 	%r3131, %r3130, %r3129, 28;
	shf.l.wrap.b32 	%r3132, %r3129, %r3130, 28;
	mov.b64 	%rd4640, {%r3132, %r3131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3133}, %rd4620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3134,%dummy}, %rd4620;
	}
	shf.l.wrap.b32 	%r3135, %r3134, %r3133, 20;
	shf.l.wrap.b32 	%r3136, %r3133, %r3134, 20;
	mov.b64 	%rd4641, {%r3136, %r3135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd4621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd4621;
	}
	shf.l.wrap.b32 	%r3139, %r3138, %r3137, 3;
	shf.l.wrap.b32 	%r3140, %r3137, %r3138, 3;
	mov.b64 	%rd4642, {%r3140, %r3139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3141,%dummy}, %rd4627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3142}, %rd4627;
	}
	shf.r.wrap.b32 	%r3143, %r3142, %r3141, 19;
	shf.r.wrap.b32 	%r3144, %r3141, %r3142, 19;
	mov.b64 	%rd4643, {%r3144, %r3143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3145,%dummy}, %rd4633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3146}, %rd4633;
	}
	shf.r.wrap.b32 	%r3147, %r3146, %r3145, 3;
	shf.r.wrap.b32 	%r3148, %r3145, %r3146, 3;
	mov.b64 	%rd4644, {%r3148, %r3147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3149}, %rd4612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3150,%dummy}, %rd4612;
	}
	shf.l.wrap.b32 	%r3151, %r3150, %r3149, 1;
	shf.l.wrap.b32 	%r3152, %r3149, %r3150, 1;
	mov.b64 	%rd4645, {%r3152, %r3151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd4618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3154,%dummy}, %rd4618;
	}
	shf.l.wrap.b32 	%r3155, %r3154, %r3153, 6;
	shf.l.wrap.b32 	%r3156, %r3153, %r3154, 6;
	mov.b64 	%rd4646, {%r3156, %r3155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3157}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd4624;
	}
	shf.l.wrap.b32 	%r3159, %r3158, %r3157, 25;
	shf.l.wrap.b32 	%r3160, %r3157, %r3158, 25;
	mov.b64 	%rd4647, {%r3160, %r3159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3161}, %rd4630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd4630;
	}
	shf.l.wrap.b32 	%r3163, %r3162, %r3161, 8;
	shf.l.wrap.b32 	%r3164, %r3161, %r3162, 8;
	mov.b64 	%rd4648, {%r3164, %r3163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3165}, %rd4631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3166,%dummy}, %rd4631;
	}
	shf.l.wrap.b32 	%r3167, %r3166, %r3165, 18;
	shf.l.wrap.b32 	%r3168, %r3165, %r3166, 18;
	mov.b64 	%rd4649, {%r3168, %r3167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd4615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd4615;
	}
	shf.l.wrap.b32 	%r3171, %r3170, %r3169, 27;
	shf.l.wrap.b32 	%r3172, %r3169, %r3170, 27;
	mov.b64 	%rd4650, {%r3172, %r3171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3173,%dummy}, %rd4616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3174}, %rd4616;
	}
	shf.r.wrap.b32 	%r3175, %r3174, %r3173, 28;
	shf.r.wrap.b32 	%r3176, %r3173, %r3174, 28;
	mov.b64 	%rd4651, {%r3176, %r3175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3177}, %rd4622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd4622;
	}
	shf.l.wrap.b32 	%r3179, %r3178, %r3177, 10;
	shf.l.wrap.b32 	%r3180, %r3177, %r3178, 10;
	mov.b64 	%rd4652, {%r3180, %r3179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd4628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3182,%dummy}, %rd4628;
	}
	shf.l.wrap.b32 	%r3183, %r3182, %r3181, 15;
	shf.l.wrap.b32 	%r3184, %r3181, %r3182, 15;
	mov.b64 	%rd4653, {%r3184, %r3183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3185,%dummy}, %rd4634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3186}, %rd4634;
	}
	shf.r.wrap.b32 	%r3187, %r3186, %r3185, 8;
	shf.r.wrap.b32 	%r3188, %r3185, %r3186, 8;
	mov.b64 	%rd4654, {%r3188, %r3187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3189,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3190}, %rd4613;
	}
	shf.r.wrap.b32 	%r3191, %r3190, %r3189, 2;
	shf.r.wrap.b32 	%r3192, %r3189, %r3190, 2;
	mov.b64 	%rd4655, {%r3192, %r3191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3193,%dummy}, %rd4619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3194}, %rd4619;
	}
	shf.r.wrap.b32 	%r3195, %r3194, %r3193, 9;
	shf.r.wrap.b32 	%r3196, %r3193, %r3194, 9;
	mov.b64 	%rd4656, {%r3196, %r3195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3197,%dummy}, %rd4625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3198}, %rd4625;
	}
	shf.r.wrap.b32 	%r3199, %r3198, %r3197, 25;
	shf.r.wrap.b32 	%r3200, %r3197, %r3198, 25;
	mov.b64 	%rd4657, {%r3200, %r3199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3201,%dummy}, %rd4626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3202}, %rd4626;
	}
	shf.r.wrap.b32 	%r3203, %r3202, %r3201, 23;
	shf.r.wrap.b32 	%r3204, %r3201, %r3202, 23;
	mov.b64 	%rd4658, {%r3204, %r3203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd4632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3206,%dummy}, %rd4632;
	}
	shf.l.wrap.b32 	%r3207, %r3206, %r3205, 2;
	shf.l.wrap.b32 	%r3208, %r3205, %r3206, 2;
	mov.b64 	%rd4659, {%r3208, %r3207};
	not.b64 	%rd4660, %rd4636;
	and.b64  	%rd4661, %rd4637, %rd4660;
	xor.b64  	%rd4662, %rd4661, %rd4611;
	not.b64 	%rd4663, %rd4637;
	and.b64  	%rd4664, %rd4638, %rd4663;
	xor.b64  	%rd4665, %rd4664, %rd4636;
	not.b64 	%rd4666, %rd4638;
	and.b64  	%rd4667, %rd4639, %rd4666;
	xor.b64  	%rd4668, %rd4667, %rd4637;
	not.b64 	%rd4669, %rd4639;
	and.b64  	%rd4670, %rd4611, %rd4669;
	xor.b64  	%rd4671, %rd4670, %rd4638;
	not.b64 	%rd4672, %rd4611;
	and.b64  	%rd4673, %rd4636, %rd4672;
	xor.b64  	%rd4674, %rd4673, %rd4639;
	not.b64 	%rd4675, %rd4641;
	and.b64  	%rd4676, %rd4642, %rd4675;
	xor.b64  	%rd4677, %rd4676, %rd4640;
	not.b64 	%rd4678, %rd4642;
	and.b64  	%rd4679, %rd4643, %rd4678;
	xor.b64  	%rd4680, %rd4679, %rd4641;
	not.b64 	%rd4681, %rd4643;
	and.b64  	%rd4682, %rd4644, %rd4681;
	xor.b64  	%rd4683, %rd4682, %rd4642;
	not.b64 	%rd4684, %rd4644;
	and.b64  	%rd4685, %rd4640, %rd4684;
	xor.b64  	%rd4686, %rd4685, %rd4643;
	not.b64 	%rd4687, %rd4640;
	and.b64  	%rd4688, %rd4641, %rd4687;
	xor.b64  	%rd4689, %rd4688, %rd4644;
	not.b64 	%rd4690, %rd4646;
	and.b64  	%rd4691, %rd4647, %rd4690;
	xor.b64  	%rd4692, %rd4691, %rd4645;
	not.b64 	%rd4693, %rd4647;
	and.b64  	%rd4694, %rd4648, %rd4693;
	xor.b64  	%rd4695, %rd4694, %rd4646;
	not.b64 	%rd4696, %rd4648;
	and.b64  	%rd4697, %rd4649, %rd4696;
	xor.b64  	%rd4698, %rd4697, %rd4647;
	not.b64 	%rd4699, %rd4649;
	and.b64  	%rd4700, %rd4645, %rd4699;
	xor.b64  	%rd4701, %rd4700, %rd4648;
	not.b64 	%rd4702, %rd4645;
	and.b64  	%rd4703, %rd4646, %rd4702;
	xor.b64  	%rd4704, %rd4703, %rd4649;
	not.b64 	%rd4705, %rd4651;
	and.b64  	%rd4706, %rd4652, %rd4705;
	xor.b64  	%rd4707, %rd4706, %rd4650;
	not.b64 	%rd4708, %rd4652;
	and.b64  	%rd4709, %rd4653, %rd4708;
	xor.b64  	%rd4710, %rd4709, %rd4651;
	not.b64 	%rd4711, %rd4653;
	and.b64  	%rd4712, %rd4654, %rd4711;
	xor.b64  	%rd4713, %rd4712, %rd4652;
	not.b64 	%rd4714, %rd4654;
	and.b64  	%rd4715, %rd4650, %rd4714;
	xor.b64  	%rd4716, %rd4715, %rd4653;
	not.b64 	%rd4717, %rd4650;
	and.b64  	%rd4718, %rd4651, %rd4717;
	xor.b64  	%rd4719, %rd4718, %rd4654;
	not.b64 	%rd4720, %rd4656;
	and.b64  	%rd4721, %rd4657, %rd4720;
	xor.b64  	%rd4722, %rd4721, %rd4655;
	not.b64 	%rd4723, %rd4657;
	and.b64  	%rd4724, %rd4658, %rd4723;
	xor.b64  	%rd4725, %rd4724, %rd4656;
	not.b64 	%rd4726, %rd4658;
	and.b64  	%rd4727, %rd4659, %rd4726;
	xor.b64  	%rd4728, %rd4727, %rd4657;
	not.b64 	%rd4729, %rd4659;
	and.b64  	%rd4730, %rd4655, %rd4729;
	xor.b64  	%rd4731, %rd4730, %rd4658;
	not.b64 	%rd4732, %rd4655;
	and.b64  	%rd4733, %rd4656, %rd4732;
	xor.b64  	%rd4734, %rd4733, %rd4659;
	xor.b64  	%rd4735, %rd4662, %rd18;
	xor.b64  	%rd4736, %rd4677, %rd4735;
	xor.b64  	%rd4737, %rd4736, %rd4692;
	xor.b64  	%rd4738, %rd4737, %rd4707;
	xor.b64  	%rd4739, %rd4738, %rd4722;
	xor.b64  	%rd4740, %rd4680, %rd4665;
	xor.b64  	%rd4741, %rd4740, %rd4695;
	xor.b64  	%rd4742, %rd4741, %rd4710;
	xor.b64  	%rd4743, %rd4742, %rd4725;
	xor.b64  	%rd4744, %rd4683, %rd4668;
	xor.b64  	%rd4745, %rd4744, %rd4698;
	xor.b64  	%rd4746, %rd4745, %rd4713;
	xor.b64  	%rd4747, %rd4746, %rd4728;
	xor.b64  	%rd4748, %rd4686, %rd4671;
	xor.b64  	%rd4749, %rd4748, %rd4701;
	xor.b64  	%rd4750, %rd4749, %rd4716;
	xor.b64  	%rd4751, %rd4750, %rd4731;
	xor.b64  	%rd4752, %rd4689, %rd4674;
	xor.b64  	%rd4753, %rd4752, %rd4704;
	xor.b64  	%rd4754, %rd4753, %rd4719;
	xor.b64  	%rd4755, %rd4754, %rd4734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3209}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd4743;
	}
	shf.l.wrap.b32 	%r3211, %r3210, %r3209, 1;
	shf.l.wrap.b32 	%r3212, %r3209, %r3210, 1;
	mov.b64 	%rd4756, {%r3212, %r3211};
	xor.b64  	%rd4757, %rd4755, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3213}, %rd4747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3214,%dummy}, %rd4747;
	}
	shf.l.wrap.b32 	%r3215, %r3214, %r3213, 1;
	shf.l.wrap.b32 	%r3216, %r3213, %r3214, 1;
	mov.b64 	%rd4758, {%r3216, %r3215};
	xor.b64  	%rd4759, %rd4758, %rd4739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3217}, %rd4751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd4751;
	}
	shf.l.wrap.b32 	%r3219, %r3218, %r3217, 1;
	shf.l.wrap.b32 	%r3220, %r3217, %r3218, 1;
	mov.b64 	%rd4760, {%r3220, %r3219};
	xor.b64  	%rd4761, %rd4760, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3221}, %rd4755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd4755;
	}
	shf.l.wrap.b32 	%r3223, %r3222, %r3221, 1;
	shf.l.wrap.b32 	%r3224, %r3221, %r3222, 1;
	mov.b64 	%rd4762, {%r3224, %r3223};
	xor.b64  	%rd4763, %rd4762, %rd4747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3225}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3226,%dummy}, %rd4739;
	}
	shf.l.wrap.b32 	%r3227, %r3226, %r3225, 1;
	shf.l.wrap.b32 	%r3228, %r3225, %r3226, 1;
	mov.b64 	%rd4764, {%r3228, %r3227};
	xor.b64  	%rd4765, %rd4751, %rd4764;
	xor.b64  	%rd4766, %rd4757, %rd4735;
	xor.b64  	%rd4767, %rd4759, %rd4665;
	xor.b64  	%rd4768, %rd4761, %rd4668;
	xor.b64  	%rd4769, %rd4763, %rd4671;
	xor.b64  	%rd4770, %rd4765, %rd4674;
	xor.b64  	%rd4771, %rd4757, %rd4677;
	xor.b64  	%rd4772, %rd4759, %rd4680;
	xor.b64  	%rd4773, %rd4761, %rd4683;
	xor.b64  	%rd4774, %rd4763, %rd4686;
	xor.b64  	%rd4775, %rd4765, %rd4689;
	xor.b64  	%rd4776, %rd4757, %rd4692;
	xor.b64  	%rd4777, %rd4759, %rd4695;
	xor.b64  	%rd4778, %rd4761, %rd4698;
	xor.b64  	%rd4779, %rd4763, %rd4701;
	xor.b64  	%rd4780, %rd4765, %rd4704;
	xor.b64  	%rd4781, %rd4757, %rd4707;
	xor.b64  	%rd4782, %rd4759, %rd4710;
	xor.b64  	%rd4783, %rd4761, %rd4713;
	xor.b64  	%rd4784, %rd4763, %rd4716;
	xor.b64  	%rd4785, %rd4765, %rd4719;
	xor.b64  	%rd4786, %rd4757, %rd4722;
	xor.b64  	%rd4787, %rd4759, %rd4725;
	xor.b64  	%rd4788, %rd4761, %rd4728;
	xor.b64  	%rd4789, %rd4763, %rd4731;
	xor.b64  	%rd4790, %rd4765, %rd4734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3229,%dummy}, %rd4772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3230}, %rd4772;
	}
	shf.r.wrap.b32 	%r3231, %r3230, %r3229, 20;
	shf.r.wrap.b32 	%r3232, %r3229, %r3230, 20;
	mov.b64 	%rd4791, {%r3232, %r3231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd4778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd4778;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 21;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 21;
	mov.b64 	%rd4792, {%r3236, %r3235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd4784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3238,%dummy}, %rd4784;
	}
	shf.l.wrap.b32 	%r3239, %r3238, %r3237, 21;
	shf.l.wrap.b32 	%r3240, %r3237, %r3238, 21;
	mov.b64 	%rd4793, {%r3240, %r3239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd4790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd4790;
	}
	shf.l.wrap.b32 	%r3243, %r3242, %r3241, 14;
	shf.l.wrap.b32 	%r3244, %r3241, %r3242, 14;
	mov.b64 	%rd4794, {%r3244, %r3243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3245}, %rd4769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3246,%dummy}, %rd4769;
	}
	shf.l.wrap.b32 	%r3247, %r3246, %r3245, 28;
	shf.l.wrap.b32 	%r3248, %r3245, %r3246, 28;
	mov.b64 	%rd4795, {%r3248, %r3247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd4775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd4775;
	}
	shf.l.wrap.b32 	%r3251, %r3250, %r3249, 20;
	shf.l.wrap.b32 	%r3252, %r3249, %r3250, 20;
	mov.b64 	%rd4796, {%r3252, %r3251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3253}, %rd4776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3254,%dummy}, %rd4776;
	}
	shf.l.wrap.b32 	%r3255, %r3254, %r3253, 3;
	shf.l.wrap.b32 	%r3256, %r3253, %r3254, 3;
	mov.b64 	%rd4797, {%r3256, %r3255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3257,%dummy}, %rd4782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3258}, %rd4782;
	}
	shf.r.wrap.b32 	%r3259, %r3258, %r3257, 19;
	shf.r.wrap.b32 	%r3260, %r3257, %r3258, 19;
	mov.b64 	%rd4798, {%r3260, %r3259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3261,%dummy}, %rd4788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3262}, %rd4788;
	}
	shf.r.wrap.b32 	%r3263, %r3262, %r3261, 3;
	shf.r.wrap.b32 	%r3264, %r3261, %r3262, 3;
	mov.b64 	%rd4799, {%r3264, %r3263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd4767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd4767;
	}
	shf.l.wrap.b32 	%r3267, %r3266, %r3265, 1;
	shf.l.wrap.b32 	%r3268, %r3265, %r3266, 1;
	mov.b64 	%rd4800, {%r3268, %r3267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3269}, %rd4773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3270,%dummy}, %rd4773;
	}
	shf.l.wrap.b32 	%r3271, %r3270, %r3269, 6;
	shf.l.wrap.b32 	%r3272, %r3269, %r3270, 6;
	mov.b64 	%rd4801, {%r3272, %r3271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3273}, %rd4779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd4779;
	}
	shf.l.wrap.b32 	%r3275, %r3274, %r3273, 25;
	shf.l.wrap.b32 	%r3276, %r3273, %r3274, 25;
	mov.b64 	%rd4802, {%r3276, %r3275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3277}, %rd4785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd4785;
	}
	shf.l.wrap.b32 	%r3279, %r3278, %r3277, 8;
	shf.l.wrap.b32 	%r3280, %r3277, %r3278, 8;
	mov.b64 	%rd4803, {%r3280, %r3279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3281}, %rd4786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4786;
	}
	shf.l.wrap.b32 	%r3283, %r3282, %r3281, 18;
	shf.l.wrap.b32 	%r3284, %r3281, %r3282, 18;
	mov.b64 	%rd4804, {%r3284, %r3283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3285}, %rd4770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3286,%dummy}, %rd4770;
	}
	shf.l.wrap.b32 	%r3287, %r3286, %r3285, 27;
	shf.l.wrap.b32 	%r3288, %r3285, %r3286, 27;
	mov.b64 	%rd4805, {%r3288, %r3287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3289,%dummy}, %rd4771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3290}, %rd4771;
	}
	shf.r.wrap.b32 	%r3291, %r3290, %r3289, 28;
	shf.r.wrap.b32 	%r3292, %r3289, %r3290, 28;
	mov.b64 	%rd4806, {%r3292, %r3291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3293}, %rd4777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3294,%dummy}, %rd4777;
	}
	shf.l.wrap.b32 	%r3295, %r3294, %r3293, 10;
	shf.l.wrap.b32 	%r3296, %r3293, %r3294, 10;
	mov.b64 	%rd4807, {%r3296, %r3295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3297}, %rd4783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd4783;
	}
	shf.l.wrap.b32 	%r3299, %r3298, %r3297, 15;
	shf.l.wrap.b32 	%r3300, %r3297, %r3298, 15;
	mov.b64 	%rd4808, {%r3300, %r3299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3301,%dummy}, %rd4789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3302}, %rd4789;
	}
	shf.r.wrap.b32 	%r3303, %r3302, %r3301, 8;
	shf.r.wrap.b32 	%r3304, %r3301, %r3302, 8;
	mov.b64 	%rd4809, {%r3304, %r3303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3305,%dummy}, %rd4768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3306}, %rd4768;
	}
	shf.r.wrap.b32 	%r3307, %r3306, %r3305, 2;
	shf.r.wrap.b32 	%r3308, %r3305, %r3306, 2;
	mov.b64 	%rd4810, {%r3308, %r3307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3309,%dummy}, %rd4774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3310}, %rd4774;
	}
	shf.r.wrap.b32 	%r3311, %r3310, %r3309, 9;
	shf.r.wrap.b32 	%r3312, %r3309, %r3310, 9;
	mov.b64 	%rd4811, {%r3312, %r3311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3313,%dummy}, %rd4780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3314}, %rd4780;
	}
	shf.r.wrap.b32 	%r3315, %r3314, %r3313, 25;
	shf.r.wrap.b32 	%r3316, %r3313, %r3314, 25;
	mov.b64 	%rd4812, {%r3316, %r3315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3317,%dummy}, %rd4781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3318}, %rd4781;
	}
	shf.r.wrap.b32 	%r3319, %r3318, %r3317, 23;
	shf.r.wrap.b32 	%r3320, %r3317, %r3318, 23;
	mov.b64 	%rd4813, {%r3320, %r3319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3321}, %rd4787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd4787;
	}
	shf.l.wrap.b32 	%r3323, %r3322, %r3321, 2;
	shf.l.wrap.b32 	%r3324, %r3321, %r3322, 2;
	mov.b64 	%rd4814, {%r3324, %r3323};
	not.b64 	%rd4815, %rd4791;
	and.b64  	%rd4816, %rd4792, %rd4815;
	xor.b64  	%rd4817, %rd4816, %rd4766;
	not.b64 	%rd4818, %rd4792;
	and.b64  	%rd4819, %rd4793, %rd4818;
	xor.b64  	%rd4820, %rd4819, %rd4791;
	not.b64 	%rd4821, %rd4793;
	and.b64  	%rd4822, %rd4794, %rd4821;
	xor.b64  	%rd4823, %rd4822, %rd4792;
	not.b64 	%rd4824, %rd4794;
	and.b64  	%rd4825, %rd4766, %rd4824;
	xor.b64  	%rd4826, %rd4825, %rd4793;
	not.b64 	%rd4827, %rd4766;
	and.b64  	%rd4828, %rd4791, %rd4827;
	xor.b64  	%rd4829, %rd4828, %rd4794;
	not.b64 	%rd4830, %rd4796;
	and.b64  	%rd4831, %rd4797, %rd4830;
	xor.b64  	%rd4832, %rd4831, %rd4795;
	not.b64 	%rd4833, %rd4797;
	and.b64  	%rd4834, %rd4798, %rd4833;
	xor.b64  	%rd4835, %rd4834, %rd4796;
	not.b64 	%rd4836, %rd4798;
	and.b64  	%rd4837, %rd4799, %rd4836;
	xor.b64  	%rd4838, %rd4837, %rd4797;
	not.b64 	%rd4839, %rd4799;
	and.b64  	%rd4840, %rd4795, %rd4839;
	xor.b64  	%rd4841, %rd4840, %rd4798;
	not.b64 	%rd4842, %rd4795;
	and.b64  	%rd4843, %rd4796, %rd4842;
	xor.b64  	%rd4844, %rd4843, %rd4799;
	not.b64 	%rd4845, %rd4801;
	and.b64  	%rd4846, %rd4802, %rd4845;
	xor.b64  	%rd4847, %rd4846, %rd4800;
	not.b64 	%rd4848, %rd4802;
	and.b64  	%rd4849, %rd4803, %rd4848;
	xor.b64  	%rd4850, %rd4849, %rd4801;
	not.b64 	%rd4851, %rd4803;
	and.b64  	%rd4852, %rd4804, %rd4851;
	xor.b64  	%rd4853, %rd4852, %rd4802;
	not.b64 	%rd4854, %rd4804;
	and.b64  	%rd4855, %rd4800, %rd4854;
	xor.b64  	%rd4856, %rd4855, %rd4803;
	not.b64 	%rd4857, %rd4800;
	and.b64  	%rd4858, %rd4801, %rd4857;
	xor.b64  	%rd4859, %rd4858, %rd4804;
	not.b64 	%rd4860, %rd4806;
	and.b64  	%rd4861, %rd4807, %rd4860;
	xor.b64  	%rd4862, %rd4861, %rd4805;
	not.b64 	%rd4863, %rd4807;
	and.b64  	%rd4864, %rd4808, %rd4863;
	xor.b64  	%rd4865, %rd4864, %rd4806;
	not.b64 	%rd4866, %rd4808;
	and.b64  	%rd4867, %rd4809, %rd4866;
	xor.b64  	%rd4868, %rd4867, %rd4807;
	not.b64 	%rd4869, %rd4809;
	and.b64  	%rd4870, %rd4805, %rd4869;
	xor.b64  	%rd4871, %rd4870, %rd4808;
	not.b64 	%rd4872, %rd4805;
	and.b64  	%rd4873, %rd4806, %rd4872;
	xor.b64  	%rd4874, %rd4873, %rd4809;
	not.b64 	%rd4875, %rd4811;
	and.b64  	%rd4876, %rd4812, %rd4875;
	xor.b64  	%rd4877, %rd4876, %rd4810;
	not.b64 	%rd4878, %rd4812;
	and.b64  	%rd4879, %rd4813, %rd4878;
	xor.b64  	%rd4880, %rd4879, %rd4811;
	not.b64 	%rd4881, %rd4813;
	and.b64  	%rd4882, %rd4814, %rd4881;
	xor.b64  	%rd4883, %rd4882, %rd4812;
	not.b64 	%rd4884, %rd4814;
	and.b64  	%rd4885, %rd4810, %rd4884;
	xor.b64  	%rd4886, %rd4885, %rd4813;
	not.b64 	%rd4887, %rd4810;
	and.b64  	%rd4888, %rd4811, %rd4887;
	xor.b64  	%rd4889, %rd4888, %rd4814;
	xor.b64  	%rd4890, %rd4817, %rd19;
	xor.b64  	%rd4891, %rd4832, %rd4890;
	xor.b64  	%rd4892, %rd4891, %rd4847;
	xor.b64  	%rd4893, %rd4892, %rd4862;
	xor.b64  	%rd4894, %rd4893, %rd4877;
	xor.b64  	%rd4895, %rd4835, %rd4820;
	xor.b64  	%rd4896, %rd4895, %rd4850;
	xor.b64  	%rd4897, %rd4896, %rd4865;
	xor.b64  	%rd4898, %rd4897, %rd4880;
	xor.b64  	%rd4899, %rd4838, %rd4823;
	xor.b64  	%rd4900, %rd4899, %rd4853;
	xor.b64  	%rd4901, %rd4900, %rd4868;
	xor.b64  	%rd4902, %rd4901, %rd4883;
	xor.b64  	%rd4903, %rd4841, %rd4826;
	xor.b64  	%rd4904, %rd4903, %rd4856;
	xor.b64  	%rd4905, %rd4904, %rd4871;
	xor.b64  	%rd4906, %rd4905, %rd4886;
	xor.b64  	%rd4907, %rd4844, %rd4829;
	xor.b64  	%rd4908, %rd4907, %rd4859;
	xor.b64  	%rd4909, %rd4908, %rd4874;
	xor.b64  	%rd4910, %rd4909, %rd4889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3325}, %rd4898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3326,%dummy}, %rd4898;
	}
	shf.l.wrap.b32 	%r3327, %r3326, %r3325, 1;
	shf.l.wrap.b32 	%r3328, %r3325, %r3326, 1;
	mov.b64 	%rd4911, {%r3328, %r3327};
	xor.b64  	%rd4912, %rd4910, %rd4911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3329}, %rd4902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd4902;
	}
	shf.l.wrap.b32 	%r3331, %r3330, %r3329, 1;
	shf.l.wrap.b32 	%r3332, %r3329, %r3330, 1;
	mov.b64 	%rd4913, {%r3332, %r3331};
	xor.b64  	%rd4914, %rd4913, %rd4894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3333}, %rd4906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3334,%dummy}, %rd4906;
	}
	shf.l.wrap.b32 	%r3335, %r3334, %r3333, 1;
	shf.l.wrap.b32 	%r3336, %r3333, %r3334, 1;
	mov.b64 	%rd4915, {%r3336, %r3335};
	xor.b64  	%rd4916, %rd4915, %rd4898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3337}, %rd4910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd4910;
	}
	shf.l.wrap.b32 	%r3339, %r3338, %r3337, 1;
	shf.l.wrap.b32 	%r3340, %r3337, %r3338, 1;
	mov.b64 	%rd4917, {%r3340, %r3339};
	xor.b64  	%rd4918, %rd4917, %rd4902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3341}, %rd4894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3342,%dummy}, %rd4894;
	}
	shf.l.wrap.b32 	%r3343, %r3342, %r3341, 1;
	shf.l.wrap.b32 	%r3344, %r3341, %r3342, 1;
	mov.b64 	%rd4919, {%r3344, %r3343};
	xor.b64  	%rd4920, %rd4906, %rd4919;
	xor.b64  	%rd4921, %rd4912, %rd4890;
	xor.b64  	%rd4922, %rd4914, %rd4820;
	xor.b64  	%rd4923, %rd4916, %rd4823;
	xor.b64  	%rd4924, %rd4918, %rd4826;
	xor.b64  	%rd4925, %rd4920, %rd4829;
	xor.b64  	%rd4926, %rd4912, %rd4832;
	xor.b64  	%rd4927, %rd4914, %rd4835;
	xor.b64  	%rd4928, %rd4916, %rd4838;
	xor.b64  	%rd4929, %rd4918, %rd4841;
	xor.b64  	%rd4930, %rd4920, %rd4844;
	xor.b64  	%rd4931, %rd4912, %rd4847;
	xor.b64  	%rd4932, %rd4914, %rd4850;
	xor.b64  	%rd4933, %rd4916, %rd4853;
	xor.b64  	%rd4934, %rd4918, %rd4856;
	xor.b64  	%rd4935, %rd4920, %rd4859;
	xor.b64  	%rd4936, %rd4912, %rd4862;
	xor.b64  	%rd4937, %rd4914, %rd4865;
	xor.b64  	%rd4938, %rd4916, %rd4868;
	xor.b64  	%rd4939, %rd4918, %rd4871;
	xor.b64  	%rd4940, %rd4920, %rd4874;
	xor.b64  	%rd4941, %rd4912, %rd4877;
	xor.b64  	%rd4942, %rd4914, %rd4880;
	xor.b64  	%rd4943, %rd4916, %rd4883;
	xor.b64  	%rd4944, %rd4918, %rd4886;
	xor.b64  	%rd4945, %rd4920, %rd4889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3345,%dummy}, %rd4927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3346}, %rd4927;
	}
	shf.r.wrap.b32 	%r3347, %r3346, %r3345, 20;
	shf.r.wrap.b32 	%r3348, %r3345, %r3346, 20;
	mov.b64 	%rd4946, {%r3348, %r3347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3349,%dummy}, %rd4933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3350}, %rd4933;
	}
	shf.r.wrap.b32 	%r3351, %r3350, %r3349, 21;
	shf.r.wrap.b32 	%r3352, %r3349, %r3350, 21;
	mov.b64 	%rd4947, {%r3352, %r3351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3353}, %rd4939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3354,%dummy}, %rd4939;
	}
	shf.l.wrap.b32 	%r3355, %r3354, %r3353, 21;
	shf.l.wrap.b32 	%r3356, %r3353, %r3354, 21;
	mov.b64 	%rd4948, {%r3356, %r3355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd4945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3358,%dummy}, %rd4945;
	}
	shf.l.wrap.b32 	%r3359, %r3358, %r3357, 14;
	shf.l.wrap.b32 	%r3360, %r3357, %r3358, 14;
	mov.b64 	%rd4949, {%r3360, %r3359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3361}, %rd4924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd4924;
	}
	shf.l.wrap.b32 	%r3363, %r3362, %r3361, 28;
	shf.l.wrap.b32 	%r3364, %r3361, %r3362, 28;
	mov.b64 	%rd4950, {%r3364, %r3363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3365}, %rd4930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3366,%dummy}, %rd4930;
	}
	shf.l.wrap.b32 	%r3367, %r3366, %r3365, 20;
	shf.l.wrap.b32 	%r3368, %r3365, %r3366, 20;
	mov.b64 	%rd4951, {%r3368, %r3367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3369}, %rd4931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd4931;
	}
	shf.l.wrap.b32 	%r3371, %r3370, %r3369, 3;
	shf.l.wrap.b32 	%r3372, %r3369, %r3370, 3;
	mov.b64 	%rd4952, {%r3372, %r3371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3373,%dummy}, %rd4937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3374}, %rd4937;
	}
	shf.r.wrap.b32 	%r3375, %r3374, %r3373, 19;
	shf.r.wrap.b32 	%r3376, %r3373, %r3374, 19;
	mov.b64 	%rd4953, {%r3376, %r3375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3377,%dummy}, %rd4943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3378}, %rd4943;
	}
	shf.r.wrap.b32 	%r3379, %r3378, %r3377, 3;
	shf.r.wrap.b32 	%r3380, %r3377, %r3378, 3;
	mov.b64 	%rd4954, {%r3380, %r3379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3381}, %rd4922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3382,%dummy}, %rd4922;
	}
	shf.l.wrap.b32 	%r3383, %r3382, %r3381, 1;
	shf.l.wrap.b32 	%r3384, %r3381, %r3382, 1;
	mov.b64 	%rd4955, {%r3384, %r3383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3385}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4928;
	}
	shf.l.wrap.b32 	%r3387, %r3386, %r3385, 6;
	shf.l.wrap.b32 	%r3388, %r3385, %r3386, 6;
	mov.b64 	%rd4956, {%r3388, %r3387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3389}, %rd4934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3390,%dummy}, %rd4934;
	}
	shf.l.wrap.b32 	%r3391, %r3390, %r3389, 25;
	shf.l.wrap.b32 	%r3392, %r3389, %r3390, 25;
	mov.b64 	%rd4957, {%r3392, %r3391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3393}, %rd4940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd4940;
	}
	shf.l.wrap.b32 	%r3395, %r3394, %r3393, 8;
	shf.l.wrap.b32 	%r3396, %r3393, %r3394, 8;
	mov.b64 	%rd4958, {%r3396, %r3395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd4941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3398,%dummy}, %rd4941;
	}
	shf.l.wrap.b32 	%r3399, %r3398, %r3397, 18;
	shf.l.wrap.b32 	%r3400, %r3397, %r3398, 18;
	mov.b64 	%rd4959, {%r3400, %r3399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3401}, %rd4925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3402,%dummy}, %rd4925;
	}
	shf.l.wrap.b32 	%r3403, %r3402, %r3401, 27;
	shf.l.wrap.b32 	%r3404, %r3401, %r3402, 27;
	mov.b64 	%rd4960, {%r3404, %r3403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3405,%dummy}, %rd4926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3406}, %rd4926;
	}
	shf.r.wrap.b32 	%r3407, %r3406, %r3405, 28;
	shf.r.wrap.b32 	%r3408, %r3405, %r3406, 28;
	mov.b64 	%rd4961, {%r3408, %r3407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3409}, %rd4932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3410,%dummy}, %rd4932;
	}
	shf.l.wrap.b32 	%r3411, %r3410, %r3409, 10;
	shf.l.wrap.b32 	%r3412, %r3409, %r3410, 10;
	mov.b64 	%rd4962, {%r3412, %r3411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3413}, %rd4938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3414,%dummy}, %rd4938;
	}
	shf.l.wrap.b32 	%r3415, %r3414, %r3413, 15;
	shf.l.wrap.b32 	%r3416, %r3413, %r3414, 15;
	mov.b64 	%rd4963, {%r3416, %r3415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3417,%dummy}, %rd4944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3418}, %rd4944;
	}
	shf.r.wrap.b32 	%r3419, %r3418, %r3417, 8;
	shf.r.wrap.b32 	%r3420, %r3417, %r3418, 8;
	mov.b64 	%rd4964, {%r3420, %r3419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3421,%dummy}, %rd4923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3422}, %rd4923;
	}
	shf.r.wrap.b32 	%r3423, %r3422, %r3421, 2;
	shf.r.wrap.b32 	%r3424, %r3421, %r3422, 2;
	mov.b64 	%rd4965, {%r3424, %r3423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3425,%dummy}, %rd4929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3426}, %rd4929;
	}
	shf.r.wrap.b32 	%r3427, %r3426, %r3425, 9;
	shf.r.wrap.b32 	%r3428, %r3425, %r3426, 9;
	mov.b64 	%rd4966, {%r3428, %r3427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3429,%dummy}, %rd4935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3430}, %rd4935;
	}
	shf.r.wrap.b32 	%r3431, %r3430, %r3429, 25;
	shf.r.wrap.b32 	%r3432, %r3429, %r3430, 25;
	mov.b64 	%rd4967, {%r3432, %r3431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3433,%dummy}, %rd4936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3434}, %rd4936;
	}
	shf.r.wrap.b32 	%r3435, %r3434, %r3433, 23;
	shf.r.wrap.b32 	%r3436, %r3433, %r3434, 23;
	mov.b64 	%rd4968, {%r3436, %r3435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3437}, %rd4942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3438,%dummy}, %rd4942;
	}
	shf.l.wrap.b32 	%r3439, %r3438, %r3437, 2;
	shf.l.wrap.b32 	%r3440, %r3437, %r3438, 2;
	mov.b64 	%rd4969, {%r3440, %r3439};
	not.b64 	%rd4970, %rd4946;
	and.b64  	%rd4971, %rd4947, %rd4970;
	xor.b64  	%rd4972, %rd4971, %rd4921;
	not.b64 	%rd4973, %rd4947;
	and.b64  	%rd4974, %rd4948, %rd4973;
	xor.b64  	%rd4975, %rd4974, %rd4946;
	not.b64 	%rd4976, %rd4948;
	and.b64  	%rd4977, %rd4949, %rd4976;
	xor.b64  	%rd4978, %rd4977, %rd4947;
	not.b64 	%rd4979, %rd4949;
	and.b64  	%rd4980, %rd4921, %rd4979;
	xor.b64  	%rd4981, %rd4980, %rd4948;
	not.b64 	%rd4982, %rd4921;
	and.b64  	%rd4983, %rd4946, %rd4982;
	xor.b64  	%rd4984, %rd4983, %rd4949;
	not.b64 	%rd4985, %rd4951;
	and.b64  	%rd4986, %rd4952, %rd4985;
	xor.b64  	%rd4987, %rd4986, %rd4950;
	not.b64 	%rd4988, %rd4952;
	and.b64  	%rd4989, %rd4953, %rd4988;
	xor.b64  	%rd4990, %rd4989, %rd4951;
	not.b64 	%rd4991, %rd4953;
	and.b64  	%rd4992, %rd4954, %rd4991;
	xor.b64  	%rd4993, %rd4992, %rd4952;
	not.b64 	%rd4994, %rd4954;
	and.b64  	%rd4995, %rd4950, %rd4994;
	xor.b64  	%rd4996, %rd4995, %rd4953;
	not.b64 	%rd4997, %rd4950;
	and.b64  	%rd4998, %rd4951, %rd4997;
	xor.b64  	%rd4999, %rd4998, %rd4954;
	not.b64 	%rd5000, %rd4956;
	and.b64  	%rd5001, %rd4957, %rd5000;
	xor.b64  	%rd5002, %rd5001, %rd4955;
	not.b64 	%rd5003, %rd4957;
	and.b64  	%rd5004, %rd4958, %rd5003;
	xor.b64  	%rd5005, %rd5004, %rd4956;
	not.b64 	%rd5006, %rd4958;
	and.b64  	%rd5007, %rd4959, %rd5006;
	xor.b64  	%rd5008, %rd5007, %rd4957;
	not.b64 	%rd5009, %rd4959;
	and.b64  	%rd5010, %rd4955, %rd5009;
	xor.b64  	%rd5011, %rd5010, %rd4958;
	not.b64 	%rd5012, %rd4955;
	and.b64  	%rd5013, %rd4956, %rd5012;
	xor.b64  	%rd5014, %rd5013, %rd4959;
	not.b64 	%rd5015, %rd4961;
	and.b64  	%rd5016, %rd4962, %rd5015;
	xor.b64  	%rd5017, %rd5016, %rd4960;
	not.b64 	%rd5018, %rd4962;
	and.b64  	%rd5019, %rd4963, %rd5018;
	xor.b64  	%rd5020, %rd5019, %rd4961;
	not.b64 	%rd5021, %rd4963;
	and.b64  	%rd5022, %rd4964, %rd5021;
	xor.b64  	%rd5023, %rd5022, %rd4962;
	not.b64 	%rd5024, %rd4964;
	and.b64  	%rd5025, %rd4960, %rd5024;
	xor.b64  	%rd5026, %rd5025, %rd4963;
	not.b64 	%rd5027, %rd4960;
	and.b64  	%rd5028, %rd4961, %rd5027;
	xor.b64  	%rd5029, %rd5028, %rd4964;
	not.b64 	%rd5030, %rd4966;
	and.b64  	%rd5031, %rd4967, %rd5030;
	xor.b64  	%rd5032, %rd5031, %rd4965;
	not.b64 	%rd5033, %rd4967;
	and.b64  	%rd5034, %rd4968, %rd5033;
	xor.b64  	%rd5035, %rd5034, %rd4966;
	not.b64 	%rd5036, %rd4968;
	and.b64  	%rd5037, %rd4969, %rd5036;
	xor.b64  	%rd5038, %rd5037, %rd4967;
	not.b64 	%rd5039, %rd4969;
	and.b64  	%rd5040, %rd4965, %rd5039;
	xor.b64  	%rd5041, %rd5040, %rd4968;
	not.b64 	%rd5042, %rd4965;
	and.b64  	%rd5043, %rd4966, %rd5042;
	xor.b64  	%rd5044, %rd5043, %rd4969;
	xor.b64  	%rd5045, %rd4972, %rd20;
	xor.b64  	%rd5046, %rd4987, %rd5045;
	xor.b64  	%rd5047, %rd5046, %rd5002;
	xor.b64  	%rd5048, %rd5047, %rd5017;
	xor.b64  	%rd5049, %rd5048, %rd5032;
	xor.b64  	%rd5050, %rd4990, %rd4975;
	xor.b64  	%rd5051, %rd5050, %rd5005;
	xor.b64  	%rd5052, %rd5051, %rd5020;
	xor.b64  	%rd5053, %rd5052, %rd5035;
	xor.b64  	%rd5054, %rd4993, %rd4978;
	xor.b64  	%rd5055, %rd5054, %rd5008;
	xor.b64  	%rd5056, %rd5055, %rd5023;
	xor.b64  	%rd5057, %rd5056, %rd5038;
	xor.b64  	%rd5058, %rd4996, %rd4981;
	xor.b64  	%rd5059, %rd5058, %rd5011;
	xor.b64  	%rd5060, %rd5059, %rd5026;
	xor.b64  	%rd5061, %rd5060, %rd5041;
	xor.b64  	%rd5062, %rd4999, %rd4984;
	xor.b64  	%rd5063, %rd5062, %rd5014;
	xor.b64  	%rd5064, %rd5063, %rd5029;
	xor.b64  	%rd5065, %rd5064, %rd5044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3441}, %rd5053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3442,%dummy}, %rd5053;
	}
	shf.l.wrap.b32 	%r3443, %r3442, %r3441, 1;
	shf.l.wrap.b32 	%r3444, %r3441, %r3442, 1;
	mov.b64 	%rd5066, {%r3444, %r3443};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3445}, %rd5057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3446,%dummy}, %rd5057;
	}
	shf.l.wrap.b32 	%r3447, %r3446, %r3445, 1;
	shf.l.wrap.b32 	%r3448, %r3445, %r3446, 1;
	mov.b64 	%rd5068, {%r3448, %r3447};
	xor.b64  	%rd5069, %rd5068, %rd5049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3449}, %rd5061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3450,%dummy}, %rd5061;
	}
	shf.l.wrap.b32 	%r3451, %r3450, %r3449, 1;
	shf.l.wrap.b32 	%r3452, %r3449, %r3450, 1;
	mov.b64 	%rd5070, {%r3452, %r3451};
	xor.b64  	%rd5071, %rd5070, %rd5053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3453}, %rd5065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3454,%dummy}, %rd5065;
	}
	shf.l.wrap.b32 	%r3455, %r3454, %r3453, 1;
	shf.l.wrap.b32 	%r3456, %r3453, %r3454, 1;
	mov.b64 	%rd5072, {%r3456, %r3455};
	xor.b64  	%rd5073, %rd5072, %rd5057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd5049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3458,%dummy}, %rd5049;
	}
	shf.l.wrap.b32 	%r3459, %r3458, %r3457, 1;
	shf.l.wrap.b32 	%r3460, %r3457, %r3458, 1;
	mov.b64 	%rd5074, {%r3460, %r3459};
	xor.b64  	%rd5075, %rd5061, %rd5074;
	xor.b64  	%rd5076, %rd5067, %rd5045;
	xor.b64  	%rd5077, %rd5069, %rd4975;
	xor.b64  	%rd5078, %rd5071, %rd4978;
	xor.b64  	%rd5079, %rd5073, %rd4981;
	xor.b64  	%rd5080, %rd5075, %rd4984;
	xor.b64  	%rd5081, %rd5067, %rd4987;
	xor.b64  	%rd5082, %rd5069, %rd4990;
	xor.b64  	%rd5083, %rd5071, %rd4993;
	xor.b64  	%rd5084, %rd5073, %rd4996;
	xor.b64  	%rd5085, %rd5075, %rd4999;
	xor.b64  	%rd5086, %rd5067, %rd5002;
	xor.b64  	%rd5087, %rd5069, %rd5005;
	xor.b64  	%rd5088, %rd5071, %rd5008;
	xor.b64  	%rd5089, %rd5073, %rd5011;
	xor.b64  	%rd5090, %rd5075, %rd5014;
	xor.b64  	%rd5091, %rd5067, %rd5017;
	xor.b64  	%rd5092, %rd5069, %rd5020;
	xor.b64  	%rd5093, %rd5071, %rd5023;
	xor.b64  	%rd5094, %rd5073, %rd5026;
	xor.b64  	%rd5095, %rd5075, %rd5029;
	xor.b64  	%rd5096, %rd5067, %rd5032;
	xor.b64  	%rd5097, %rd5069, %rd5035;
	xor.b64  	%rd5098, %rd5071, %rd5038;
	xor.b64  	%rd5099, %rd5073, %rd5041;
	xor.b64  	%rd5100, %rd5075, %rd5044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3461,%dummy}, %rd5082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3462}, %rd5082;
	}
	shf.r.wrap.b32 	%r3463, %r3462, %r3461, 20;
	shf.r.wrap.b32 	%r3464, %r3461, %r3462, 20;
	mov.b64 	%rd5101, {%r3464, %r3463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3465,%dummy}, %rd5088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3466}, %rd5088;
	}
	shf.r.wrap.b32 	%r3467, %r3466, %r3465, 21;
	shf.r.wrap.b32 	%r3468, %r3465, %r3466, 21;
	mov.b64 	%rd5102, {%r3468, %r3467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3469}, %rd5094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3470,%dummy}, %rd5094;
	}
	shf.l.wrap.b32 	%r3471, %r3470, %r3469, 21;
	shf.l.wrap.b32 	%r3472, %r3469, %r3470, 21;
	mov.b64 	%rd5103, {%r3472, %r3471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd5100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3474,%dummy}, %rd5100;
	}
	shf.l.wrap.b32 	%r3475, %r3474, %r3473, 14;
	shf.l.wrap.b32 	%r3476, %r3473, %r3474, 14;
	mov.b64 	%rd5104, {%r3476, %r3475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3477}, %rd5079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3478,%dummy}, %rd5079;
	}
	shf.l.wrap.b32 	%r3479, %r3478, %r3477, 28;
	shf.l.wrap.b32 	%r3480, %r3477, %r3478, 28;
	mov.b64 	%rd5105, {%r3480, %r3479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3481}, %rd5085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3482,%dummy}, %rd5085;
	}
	shf.l.wrap.b32 	%r3483, %r3482, %r3481, 20;
	shf.l.wrap.b32 	%r3484, %r3481, %r3482, 20;
	mov.b64 	%rd5106, {%r3484, %r3483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3485}, %rd5086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3486,%dummy}, %rd5086;
	}
	shf.l.wrap.b32 	%r3487, %r3486, %r3485, 3;
	shf.l.wrap.b32 	%r3488, %r3485, %r3486, 3;
	mov.b64 	%rd5107, {%r3488, %r3487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3489,%dummy}, %rd5092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3490}, %rd5092;
	}
	shf.r.wrap.b32 	%r3491, %r3490, %r3489, 19;
	shf.r.wrap.b32 	%r3492, %r3489, %r3490, 19;
	mov.b64 	%rd5108, {%r3492, %r3491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3493,%dummy}, %rd5098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3494}, %rd5098;
	}
	shf.r.wrap.b32 	%r3495, %r3494, %r3493, 3;
	shf.r.wrap.b32 	%r3496, %r3493, %r3494, 3;
	mov.b64 	%rd5109, {%r3496, %r3495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd5077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3498,%dummy}, %rd5077;
	}
	shf.l.wrap.b32 	%r3499, %r3498, %r3497, 1;
	shf.l.wrap.b32 	%r3500, %r3497, %r3498, 1;
	mov.b64 	%rd5110, {%r3500, %r3499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3501}, %rd5083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3502,%dummy}, %rd5083;
	}
	shf.l.wrap.b32 	%r3503, %r3502, %r3501, 6;
	shf.l.wrap.b32 	%r3504, %r3501, %r3502, 6;
	mov.b64 	%rd5111, {%r3504, %r3503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd5089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3506,%dummy}, %rd5089;
	}
	shf.l.wrap.b32 	%r3507, %r3506, %r3505, 25;
	shf.l.wrap.b32 	%r3508, %r3505, %r3506, 25;
	mov.b64 	%rd5112, {%r3508, %r3507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3509}, %rd5095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3510,%dummy}, %rd5095;
	}
	shf.l.wrap.b32 	%r3511, %r3510, %r3509, 8;
	shf.l.wrap.b32 	%r3512, %r3509, %r3510, 8;
	mov.b64 	%rd5113, {%r3512, %r3511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3514,%dummy}, %rd5096;
	}
	shf.l.wrap.b32 	%r3515, %r3514, %r3513, 18;
	shf.l.wrap.b32 	%r3516, %r3513, %r3514, 18;
	mov.b64 	%rd5114, {%r3516, %r3515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd5080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3518,%dummy}, %rd5080;
	}
	shf.l.wrap.b32 	%r3519, %r3518, %r3517, 27;
	shf.l.wrap.b32 	%r3520, %r3517, %r3518, 27;
	mov.b64 	%rd5115, {%r3520, %r3519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3521,%dummy}, %rd5081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3522}, %rd5081;
	}
	shf.r.wrap.b32 	%r3523, %r3522, %r3521, 28;
	shf.r.wrap.b32 	%r3524, %r3521, %r3522, 28;
	mov.b64 	%rd5116, {%r3524, %r3523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3525}, %rd5087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3526,%dummy}, %rd5087;
	}
	shf.l.wrap.b32 	%r3527, %r3526, %r3525, 10;
	shf.l.wrap.b32 	%r3528, %r3525, %r3526, 10;
	mov.b64 	%rd5117, {%r3528, %r3527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3529}, %rd5093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3530,%dummy}, %rd5093;
	}
	shf.l.wrap.b32 	%r3531, %r3530, %r3529, 15;
	shf.l.wrap.b32 	%r3532, %r3529, %r3530, 15;
	mov.b64 	%rd5118, {%r3532, %r3531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3533,%dummy}, %rd5099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3534}, %rd5099;
	}
	shf.r.wrap.b32 	%r3535, %r3534, %r3533, 8;
	shf.r.wrap.b32 	%r3536, %r3533, %r3534, 8;
	mov.b64 	%rd5119, {%r3536, %r3535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd5078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd5078;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 2;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 2;
	mov.b64 	%rd5120, {%r3540, %r3539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3541,%dummy}, %rd5084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3542}, %rd5084;
	}
	shf.r.wrap.b32 	%r3543, %r3542, %r3541, 9;
	shf.r.wrap.b32 	%r3544, %r3541, %r3542, 9;
	mov.b64 	%rd5121, {%r3544, %r3543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3545,%dummy}, %rd5090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3546}, %rd5090;
	}
	shf.r.wrap.b32 	%r3547, %r3546, %r3545, 25;
	shf.r.wrap.b32 	%r3548, %r3545, %r3546, 25;
	mov.b64 	%rd5122, {%r3548, %r3547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3549,%dummy}, %rd5091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3550}, %rd5091;
	}
	shf.r.wrap.b32 	%r3551, %r3550, %r3549, 23;
	shf.r.wrap.b32 	%r3552, %r3549, %r3550, 23;
	mov.b64 	%rd5123, {%r3552, %r3551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd5097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3554,%dummy}, %rd5097;
	}
	shf.l.wrap.b32 	%r3555, %r3554, %r3553, 2;
	shf.l.wrap.b32 	%r3556, %r3553, %r3554, 2;
	mov.b64 	%rd5124, {%r3556, %r3555};
	not.b64 	%rd5125, %rd5101;
	and.b64  	%rd5126, %rd5102, %rd5125;
	xor.b64  	%rd5127, %rd5126, %rd5076;
	not.b64 	%rd5128, %rd5102;
	and.b64  	%rd5129, %rd5103, %rd5128;
	xor.b64  	%rd5130, %rd5129, %rd5101;
	not.b64 	%rd5131, %rd5103;
	and.b64  	%rd5132, %rd5104, %rd5131;
	xor.b64  	%rd5133, %rd5132, %rd5102;
	not.b64 	%rd5134, %rd5104;
	and.b64  	%rd5135, %rd5076, %rd5134;
	xor.b64  	%rd5136, %rd5135, %rd5103;
	not.b64 	%rd5137, %rd5076;
	and.b64  	%rd5138, %rd5101, %rd5137;
	xor.b64  	%rd5139, %rd5138, %rd5104;
	not.b64 	%rd5140, %rd5106;
	and.b64  	%rd5141, %rd5107, %rd5140;
	xor.b64  	%rd5142, %rd5141, %rd5105;
	not.b64 	%rd5143, %rd5107;
	and.b64  	%rd5144, %rd5108, %rd5143;
	xor.b64  	%rd5145, %rd5144, %rd5106;
	not.b64 	%rd5146, %rd5108;
	and.b64  	%rd5147, %rd5109, %rd5146;
	xor.b64  	%rd5148, %rd5147, %rd5107;
	not.b64 	%rd5149, %rd5109;
	and.b64  	%rd5150, %rd5105, %rd5149;
	xor.b64  	%rd5151, %rd5150, %rd5108;
	not.b64 	%rd5152, %rd5105;
	and.b64  	%rd5153, %rd5106, %rd5152;
	xor.b64  	%rd5154, %rd5153, %rd5109;
	not.b64 	%rd5155, %rd5111;
	and.b64  	%rd5156, %rd5112, %rd5155;
	xor.b64  	%rd5157, %rd5156, %rd5110;
	not.b64 	%rd5158, %rd5112;
	and.b64  	%rd5159, %rd5113, %rd5158;
	xor.b64  	%rd5160, %rd5159, %rd5111;
	not.b64 	%rd5161, %rd5113;
	and.b64  	%rd5162, %rd5114, %rd5161;
	xor.b64  	%rd5163, %rd5162, %rd5112;
	not.b64 	%rd5164, %rd5114;
	and.b64  	%rd5165, %rd5110, %rd5164;
	xor.b64  	%rd5166, %rd5165, %rd5113;
	not.b64 	%rd5167, %rd5110;
	and.b64  	%rd5168, %rd5111, %rd5167;
	xor.b64  	%rd5169, %rd5168, %rd5114;
	not.b64 	%rd5170, %rd5116;
	and.b64  	%rd5171, %rd5117, %rd5170;
	xor.b64  	%rd5172, %rd5171, %rd5115;
	not.b64 	%rd5173, %rd5117;
	and.b64  	%rd5174, %rd5118, %rd5173;
	xor.b64  	%rd5175, %rd5174, %rd5116;
	not.b64 	%rd5176, %rd5118;
	and.b64  	%rd5177, %rd5119, %rd5176;
	xor.b64  	%rd5178, %rd5177, %rd5117;
	not.b64 	%rd5179, %rd5119;
	and.b64  	%rd5180, %rd5115, %rd5179;
	xor.b64  	%rd5181, %rd5180, %rd5118;
	not.b64 	%rd5182, %rd5115;
	and.b64  	%rd5183, %rd5116, %rd5182;
	xor.b64  	%rd5184, %rd5183, %rd5119;
	not.b64 	%rd5185, %rd5121;
	and.b64  	%rd5186, %rd5122, %rd5185;
	xor.b64  	%rd5187, %rd5186, %rd5120;
	not.b64 	%rd5188, %rd5122;
	and.b64  	%rd5189, %rd5123, %rd5188;
	xor.b64  	%rd5190, %rd5189, %rd5121;
	not.b64 	%rd5191, %rd5123;
	and.b64  	%rd5192, %rd5124, %rd5191;
	xor.b64  	%rd5193, %rd5192, %rd5122;
	not.b64 	%rd5194, %rd5124;
	and.b64  	%rd5195, %rd5120, %rd5194;
	xor.b64  	%rd5196, %rd5195, %rd5123;
	not.b64 	%rd5197, %rd5120;
	and.b64  	%rd5198, %rd5121, %rd5197;
	xor.b64  	%rd5199, %rd5198, %rd5124;
	xor.b64  	%rd5200, %rd5127, %rd21;
	xor.b64  	%rd5201, %rd5142, %rd5200;
	xor.b64  	%rd5202, %rd5201, %rd5157;
	xor.b64  	%rd5203, %rd5202, %rd5172;
	xor.b64  	%rd5204, %rd5203, %rd5187;
	xor.b64  	%rd5205, %rd5145, %rd5130;
	xor.b64  	%rd5206, %rd5205, %rd5160;
	xor.b64  	%rd5207, %rd5206, %rd5175;
	xor.b64  	%rd5208, %rd5207, %rd5190;
	xor.b64  	%rd5209, %rd5148, %rd5133;
	xor.b64  	%rd5210, %rd5209, %rd5163;
	xor.b64  	%rd5211, %rd5210, %rd5178;
	xor.b64  	%rd5212, %rd5211, %rd5193;
	xor.b64  	%rd5213, %rd5151, %rd5136;
	xor.b64  	%rd5214, %rd5213, %rd5166;
	xor.b64  	%rd5215, %rd5214, %rd5181;
	xor.b64  	%rd5216, %rd5215, %rd5196;
	xor.b64  	%rd5217, %rd5154, %rd5139;
	xor.b64  	%rd5218, %rd5217, %rd5169;
	xor.b64  	%rd5219, %rd5218, %rd5184;
	xor.b64  	%rd5220, %rd5219, %rd5199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3557}, %rd5208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3558,%dummy}, %rd5208;
	}
	shf.l.wrap.b32 	%r3559, %r3558, %r3557, 1;
	shf.l.wrap.b32 	%r3560, %r3557, %r3558, 1;
	mov.b64 	%rd5221, {%r3560, %r3559};
	xor.b64  	%rd5222, %rd5220, %rd5221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd5212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3562,%dummy}, %rd5212;
	}
	shf.l.wrap.b32 	%r3563, %r3562, %r3561, 1;
	shf.l.wrap.b32 	%r3564, %r3561, %r3562, 1;
	mov.b64 	%rd5223, {%r3564, %r3563};
	xor.b64  	%rd5224, %rd5223, %rd5204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3565}, %rd5216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3566,%dummy}, %rd5216;
	}
	shf.l.wrap.b32 	%r3567, %r3566, %r3565, 1;
	shf.l.wrap.b32 	%r3568, %r3565, %r3566, 1;
	mov.b64 	%rd5225, {%r3568, %r3567};
	xor.b64  	%rd5226, %rd5225, %rd5208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3570,%dummy}, %rd5220;
	}
	shf.l.wrap.b32 	%r3571, %r3570, %r3569, 1;
	shf.l.wrap.b32 	%r3572, %r3569, %r3570, 1;
	mov.b64 	%rd5227, {%r3572, %r3571};
	xor.b64  	%rd5228, %rd5227, %rd5212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3573}, %rd5204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3574,%dummy}, %rd5204;
	}
	shf.l.wrap.b32 	%r3575, %r3574, %r3573, 1;
	shf.l.wrap.b32 	%r3576, %r3573, %r3574, 1;
	mov.b64 	%rd5229, {%r3576, %r3575};
	xor.b64  	%rd5230, %rd5216, %rd5229;
	xor.b64  	%rd5231, %rd5222, %rd5200;
	xor.b64  	%rd5232, %rd5224, %rd5130;
	xor.b64  	%rd5233, %rd5226, %rd5133;
	xor.b64  	%rd5234, %rd5228, %rd5136;
	xor.b64  	%rd5235, %rd5230, %rd5139;
	xor.b64  	%rd5236, %rd5222, %rd5142;
	xor.b64  	%rd5237, %rd5224, %rd5145;
	xor.b64  	%rd5238, %rd5226, %rd5148;
	xor.b64  	%rd5239, %rd5228, %rd5151;
	xor.b64  	%rd5240, %rd5230, %rd5154;
	xor.b64  	%rd5241, %rd5222, %rd5157;
	xor.b64  	%rd5242, %rd5224, %rd5160;
	xor.b64  	%rd5243, %rd5226, %rd5163;
	xor.b64  	%rd5244, %rd5228, %rd5166;
	xor.b64  	%rd5245, %rd5230, %rd5169;
	xor.b64  	%rd5246, %rd5222, %rd5172;
	xor.b64  	%rd5247, %rd5224, %rd5175;
	xor.b64  	%rd5248, %rd5226, %rd5178;
	xor.b64  	%rd5249, %rd5228, %rd5181;
	xor.b64  	%rd5250, %rd5230, %rd5184;
	xor.b64  	%rd5251, %rd5222, %rd5187;
	xor.b64  	%rd5252, %rd5224, %rd5190;
	xor.b64  	%rd5253, %rd5226, %rd5193;
	xor.b64  	%rd5254, %rd5228, %rd5196;
	xor.b64  	%rd5255, %rd5230, %rd5199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3577,%dummy}, %rd5237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3578}, %rd5237;
	}
	shf.r.wrap.b32 	%r3579, %r3578, %r3577, 20;
	shf.r.wrap.b32 	%r3580, %r3577, %r3578, 20;
	mov.b64 	%rd5256, {%r3580, %r3579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3581,%dummy}, %rd5243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3582}, %rd5243;
	}
	shf.r.wrap.b32 	%r3583, %r3582, %r3581, 21;
	shf.r.wrap.b32 	%r3584, %r3581, %r3582, 21;
	mov.b64 	%rd5257, {%r3584, %r3583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3585}, %rd5249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd5249;
	}
	shf.l.wrap.b32 	%r3587, %r3586, %r3585, 21;
	shf.l.wrap.b32 	%r3588, %r3585, %r3586, 21;
	mov.b64 	%rd5258, {%r3588, %r3587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3589}, %rd5255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3590,%dummy}, %rd5255;
	}
	shf.l.wrap.b32 	%r3591, %r3590, %r3589, 14;
	shf.l.wrap.b32 	%r3592, %r3589, %r3590, 14;
	mov.b64 	%rd5259, {%r3592, %r3591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3593}, %rd5234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd5234;
	}
	shf.l.wrap.b32 	%r3595, %r3594, %r3593, 28;
	shf.l.wrap.b32 	%r3596, %r3593, %r3594, 28;
	mov.b64 	%rd5260, {%r3596, %r3595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3597}, %rd5240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3598,%dummy}, %rd5240;
	}
	shf.l.wrap.b32 	%r3599, %r3598, %r3597, 20;
	shf.l.wrap.b32 	%r3600, %r3597, %r3598, 20;
	mov.b64 	%rd5261, {%r3600, %r3599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3601}, %rd5241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd5241;
	}
	shf.l.wrap.b32 	%r3603, %r3602, %r3601, 3;
	shf.l.wrap.b32 	%r3604, %r3601, %r3602, 3;
	mov.b64 	%rd5262, {%r3604, %r3603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3605,%dummy}, %rd5247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3606}, %rd5247;
	}
	shf.r.wrap.b32 	%r3607, %r3606, %r3605, 19;
	shf.r.wrap.b32 	%r3608, %r3605, %r3606, 19;
	mov.b64 	%rd5263, {%r3608, %r3607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3609,%dummy}, %rd5253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3610}, %rd5253;
	}
	shf.r.wrap.b32 	%r3611, %r3610, %r3609, 3;
	shf.r.wrap.b32 	%r3612, %r3609, %r3610, 3;
	mov.b64 	%rd5264, {%r3612, %r3611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3613}, %rd5232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3614,%dummy}, %rd5232;
	}
	shf.l.wrap.b32 	%r3615, %r3614, %r3613, 1;
	shf.l.wrap.b32 	%r3616, %r3613, %r3614, 1;
	mov.b64 	%rd5265, {%r3616, %r3615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3617}, %rd5238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3618,%dummy}, %rd5238;
	}
	shf.l.wrap.b32 	%r3619, %r3618, %r3617, 6;
	shf.l.wrap.b32 	%r3620, %r3617, %r3618, 6;
	mov.b64 	%rd5266, {%r3620, %r3619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3621}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3622,%dummy}, %rd5244;
	}
	shf.l.wrap.b32 	%r3623, %r3622, %r3621, 25;
	shf.l.wrap.b32 	%r3624, %r3621, %r3622, 25;
	mov.b64 	%rd5267, {%r3624, %r3623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3625}, %rd5250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd5250;
	}
	shf.l.wrap.b32 	%r3627, %r3626, %r3625, 8;
	shf.l.wrap.b32 	%r3628, %r3625, %r3626, 8;
	mov.b64 	%rd5268, {%r3628, %r3627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3629}, %rd5251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3630,%dummy}, %rd5251;
	}
	shf.l.wrap.b32 	%r3631, %r3630, %r3629, 18;
	shf.l.wrap.b32 	%r3632, %r3629, %r3630, 18;
	mov.b64 	%rd5269, {%r3632, %r3631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3633}, %rd5235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd5235;
	}
	shf.l.wrap.b32 	%r3635, %r3634, %r3633, 27;
	shf.l.wrap.b32 	%r3636, %r3633, %r3634, 27;
	mov.b64 	%rd5270, {%r3636, %r3635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3637,%dummy}, %rd5236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3638}, %rd5236;
	}
	shf.r.wrap.b32 	%r3639, %r3638, %r3637, 28;
	shf.r.wrap.b32 	%r3640, %r3637, %r3638, 28;
	mov.b64 	%rd5271, {%r3640, %r3639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3641}, %rd5242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd5242;
	}
	shf.l.wrap.b32 	%r3643, %r3642, %r3641, 10;
	shf.l.wrap.b32 	%r3644, %r3641, %r3642, 10;
	mov.b64 	%rd5272, {%r3644, %r3643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3645}, %rd5248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3646,%dummy}, %rd5248;
	}
	shf.l.wrap.b32 	%r3647, %r3646, %r3645, 15;
	shf.l.wrap.b32 	%r3648, %r3645, %r3646, 15;
	mov.b64 	%rd5273, {%r3648, %r3647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3649,%dummy}, %rd5254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3650}, %rd5254;
	}
	shf.r.wrap.b32 	%r3651, %r3650, %r3649, 8;
	shf.r.wrap.b32 	%r3652, %r3649, %r3650, 8;
	mov.b64 	%rd5274, {%r3652, %r3651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3653,%dummy}, %rd5233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3654}, %rd5233;
	}
	shf.r.wrap.b32 	%r3655, %r3654, %r3653, 2;
	shf.r.wrap.b32 	%r3656, %r3653, %r3654, 2;
	mov.b64 	%rd5275, {%r3656, %r3655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3657,%dummy}, %rd5239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3658}, %rd5239;
	}
	shf.r.wrap.b32 	%r3659, %r3658, %r3657, 9;
	shf.r.wrap.b32 	%r3660, %r3657, %r3658, 9;
	mov.b64 	%rd5276, {%r3660, %r3659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3661,%dummy}, %rd5245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3662}, %rd5245;
	}
	shf.r.wrap.b32 	%r3663, %r3662, %r3661, 25;
	shf.r.wrap.b32 	%r3664, %r3661, %r3662, 25;
	mov.b64 	%rd5277, {%r3664, %r3663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3665,%dummy}, %rd5246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3666}, %rd5246;
	}
	shf.r.wrap.b32 	%r3667, %r3666, %r3665, 23;
	shf.r.wrap.b32 	%r3668, %r3665, %r3666, 23;
	mov.b64 	%rd5278, {%r3668, %r3667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3669}, %rd5252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3670,%dummy}, %rd5252;
	}
	shf.l.wrap.b32 	%r3671, %r3670, %r3669, 2;
	shf.l.wrap.b32 	%r3672, %r3669, %r3670, 2;
	mov.b64 	%rd5279, {%r3672, %r3671};
	not.b64 	%rd5280, %rd5256;
	and.b64  	%rd5281, %rd5257, %rd5280;
	xor.b64  	%rd5282, %rd5281, %rd5231;
	not.b64 	%rd5283, %rd5257;
	and.b64  	%rd5284, %rd5258, %rd5283;
	xor.b64  	%rd5285, %rd5284, %rd5256;
	not.b64 	%rd5286, %rd5258;
	and.b64  	%rd5287, %rd5259, %rd5286;
	xor.b64  	%rd5288, %rd5287, %rd5257;
	not.b64 	%rd5289, %rd5259;
	and.b64  	%rd5290, %rd5231, %rd5289;
	xor.b64  	%rd5291, %rd5290, %rd5258;
	not.b64 	%rd5292, %rd5231;
	and.b64  	%rd5293, %rd5256, %rd5292;
	xor.b64  	%rd5294, %rd5293, %rd5259;
	not.b64 	%rd5295, %rd5261;
	and.b64  	%rd5296, %rd5262, %rd5295;
	xor.b64  	%rd5297, %rd5296, %rd5260;
	not.b64 	%rd5298, %rd5262;
	and.b64  	%rd5299, %rd5263, %rd5298;
	xor.b64  	%rd5300, %rd5299, %rd5261;
	not.b64 	%rd5301, %rd5263;
	and.b64  	%rd5302, %rd5264, %rd5301;
	xor.b64  	%rd5303, %rd5302, %rd5262;
	not.b64 	%rd5304, %rd5264;
	and.b64  	%rd5305, %rd5260, %rd5304;
	xor.b64  	%rd5306, %rd5305, %rd5263;
	not.b64 	%rd5307, %rd5260;
	and.b64  	%rd5308, %rd5261, %rd5307;
	xor.b64  	%rd5309, %rd5308, %rd5264;
	not.b64 	%rd5310, %rd5266;
	and.b64  	%rd5311, %rd5267, %rd5310;
	xor.b64  	%rd5312, %rd5311, %rd5265;
	not.b64 	%rd5313, %rd5267;
	and.b64  	%rd5314, %rd5268, %rd5313;
	xor.b64  	%rd5315, %rd5314, %rd5266;
	not.b64 	%rd5316, %rd5268;
	and.b64  	%rd5317, %rd5269, %rd5316;
	xor.b64  	%rd5318, %rd5317, %rd5267;
	not.b64 	%rd5319, %rd5269;
	and.b64  	%rd5320, %rd5265, %rd5319;
	xor.b64  	%rd5321, %rd5320, %rd5268;
	not.b64 	%rd5322, %rd5265;
	and.b64  	%rd5323, %rd5266, %rd5322;
	xor.b64  	%rd5324, %rd5323, %rd5269;
	not.b64 	%rd5325, %rd5271;
	and.b64  	%rd5326, %rd5272, %rd5325;
	xor.b64  	%rd5327, %rd5326, %rd5270;
	not.b64 	%rd5328, %rd5272;
	and.b64  	%rd5329, %rd5273, %rd5328;
	xor.b64  	%rd5330, %rd5329, %rd5271;
	not.b64 	%rd5331, %rd5273;
	and.b64  	%rd5332, %rd5274, %rd5331;
	xor.b64  	%rd5333, %rd5332, %rd5272;
	not.b64 	%rd5334, %rd5274;
	and.b64  	%rd5335, %rd5270, %rd5334;
	xor.b64  	%rd5336, %rd5335, %rd5273;
	not.b64 	%rd5337, %rd5270;
	and.b64  	%rd5338, %rd5271, %rd5337;
	xor.b64  	%rd5339, %rd5338, %rd5274;
	not.b64 	%rd5340, %rd5276;
	and.b64  	%rd5341, %rd5277, %rd5340;
	xor.b64  	%rd5342, %rd5341, %rd5275;
	not.b64 	%rd5343, %rd5277;
	and.b64  	%rd5344, %rd5278, %rd5343;
	xor.b64  	%rd5345, %rd5344, %rd5276;
	not.b64 	%rd5346, %rd5278;
	and.b64  	%rd5347, %rd5279, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd5277;
	not.b64 	%rd5349, %rd5279;
	and.b64  	%rd5350, %rd5275, %rd5349;
	xor.b64  	%rd5351, %rd5350, %rd5278;
	not.b64 	%rd5352, %rd5275;
	and.b64  	%rd5353, %rd5276, %rd5352;
	xor.b64  	%rd5354, %rd5353, %rd5279;
	xor.b64  	%rd5355, %rd5282, %rd22;
	xor.b64  	%rd5356, %rd5297, %rd5355;
	xor.b64  	%rd5357, %rd5356, %rd5312;
	xor.b64  	%rd5358, %rd5357, %rd5327;
	xor.b64  	%rd5359, %rd5358, %rd5342;
	xor.b64  	%rd5360, %rd5300, %rd5285;
	xor.b64  	%rd5361, %rd5360, %rd5315;
	xor.b64  	%rd5362, %rd5361, %rd5330;
	xor.b64  	%rd5363, %rd5362, %rd5345;
	xor.b64  	%rd5364, %rd5303, %rd5288;
	xor.b64  	%rd5365, %rd5364, %rd5318;
	xor.b64  	%rd5366, %rd5365, %rd5333;
	xor.b64  	%rd5367, %rd5366, %rd5348;
	xor.b64  	%rd5368, %rd5306, %rd5291;
	xor.b64  	%rd5369, %rd5368, %rd5321;
	xor.b64  	%rd5370, %rd5369, %rd5336;
	xor.b64  	%rd5371, %rd5370, %rd5351;
	xor.b64  	%rd5372, %rd5309, %rd5294;
	xor.b64  	%rd5373, %rd5372, %rd5324;
	xor.b64  	%rd5374, %rd5373, %rd5339;
	xor.b64  	%rd5375, %rd5374, %rd5354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd5363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3674,%dummy}, %rd5363;
	}
	shf.l.wrap.b32 	%r3675, %r3674, %r3673, 1;
	shf.l.wrap.b32 	%r3676, %r3673, %r3674, 1;
	mov.b64 	%rd5376, {%r3676, %r3675};
	xor.b64  	%rd5377, %rd5375, %rd5376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3677}, %rd5367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3678,%dummy}, %rd5367;
	}
	shf.l.wrap.b32 	%r3679, %r3678, %r3677, 1;
	shf.l.wrap.b32 	%r3680, %r3677, %r3678, 1;
	mov.b64 	%rd5378, {%r3680, %r3679};
	xor.b64  	%rd5379, %rd5378, %rd5359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3681}, %rd5371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd5371;
	}
	shf.l.wrap.b32 	%r3683, %r3682, %r3681, 1;
	shf.l.wrap.b32 	%r3684, %r3681, %r3682, 1;
	mov.b64 	%rd5380, {%r3684, %r3683};
	xor.b64  	%rd5381, %rd5380, %rd5363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3685}, %rd5375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3686,%dummy}, %rd5375;
	}
	shf.l.wrap.b32 	%r3687, %r3686, %r3685, 1;
	shf.l.wrap.b32 	%r3688, %r3685, %r3686, 1;
	mov.b64 	%rd5382, {%r3688, %r3687};
	xor.b64  	%rd5383, %rd5382, %rd5367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3689}, %rd5359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd5359;
	}
	shf.l.wrap.b32 	%r3691, %r3690, %r3689, 1;
	shf.l.wrap.b32 	%r3692, %r3689, %r3690, 1;
	mov.b64 	%rd5384, {%r3692, %r3691};
	xor.b64  	%rd5385, %rd5371, %rd5384;
	xor.b64  	%rd5386, %rd5377, %rd5355;
	xor.b64  	%rd5387, %rd5379, %rd5285;
	xor.b64  	%rd5388, %rd5381, %rd5288;
	xor.b64  	%rd5389, %rd5383, %rd5291;
	xor.b64  	%rd5390, %rd5385, %rd5294;
	xor.b64  	%rd5391, %rd5377, %rd5297;
	xor.b64  	%rd5392, %rd5379, %rd5300;
	xor.b64  	%rd5393, %rd5381, %rd5303;
	xor.b64  	%rd5394, %rd5383, %rd5306;
	xor.b64  	%rd5395, %rd5385, %rd5309;
	xor.b64  	%rd5396, %rd5377, %rd5312;
	xor.b64  	%rd5397, %rd5379, %rd5315;
	xor.b64  	%rd5398, %rd5381, %rd5318;
	xor.b64  	%rd5399, %rd5383, %rd5321;
	xor.b64  	%rd5400, %rd5385, %rd5324;
	xor.b64  	%rd5401, %rd5377, %rd5327;
	xor.b64  	%rd5402, %rd5379, %rd5330;
	xor.b64  	%rd5403, %rd5381, %rd5333;
	xor.b64  	%rd5404, %rd5383, %rd5336;
	xor.b64  	%rd5405, %rd5385, %rd5339;
	xor.b64  	%rd5406, %rd5377, %rd5342;
	xor.b64  	%rd5407, %rd5379, %rd5345;
	xor.b64  	%rd5408, %rd5381, %rd5348;
	xor.b64  	%rd5409, %rd5383, %rd5351;
	xor.b64  	%rd5410, %rd5385, %rd5354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3693,%dummy}, %rd5392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3694}, %rd5392;
	}
	shf.r.wrap.b32 	%r3695, %r3694, %r3693, 20;
	shf.r.wrap.b32 	%r3696, %r3693, %r3694, 20;
	mov.b64 	%rd5411, {%r3696, %r3695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3697,%dummy}, %rd5398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3698}, %rd5398;
	}
	shf.r.wrap.b32 	%r3699, %r3698, %r3697, 21;
	shf.r.wrap.b32 	%r3700, %r3697, %r3698, 21;
	mov.b64 	%rd5412, {%r3700, %r3699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3701}, %rd5404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3702,%dummy}, %rd5404;
	}
	shf.l.wrap.b32 	%r3703, %r3702, %r3701, 21;
	shf.l.wrap.b32 	%r3704, %r3701, %r3702, 21;
	mov.b64 	%rd5413, {%r3704, %r3703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3705}, %rd5410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd5410;
	}
	shf.l.wrap.b32 	%r3707, %r3706, %r3705, 14;
	shf.l.wrap.b32 	%r3708, %r3705, %r3706, 14;
	mov.b64 	%rd5414, {%r3708, %r3707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3709}, %rd5389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3710,%dummy}, %rd5389;
	}
	shf.l.wrap.b32 	%r3711, %r3710, %r3709, 28;
	shf.l.wrap.b32 	%r3712, %r3709, %r3710, 28;
	mov.b64 	%rd5415, {%r3712, %r3711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3713}, %rd5395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3714,%dummy}, %rd5395;
	}
	shf.l.wrap.b32 	%r3715, %r3714, %r3713, 20;
	shf.l.wrap.b32 	%r3716, %r3713, %r3714, 20;
	mov.b64 	%rd5416, {%r3716, %r3715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3717}, %rd5396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3718,%dummy}, %rd5396;
	}
	shf.l.wrap.b32 	%r3719, %r3718, %r3717, 3;
	shf.l.wrap.b32 	%r3720, %r3717, %r3718, 3;
	mov.b64 	%rd5417, {%r3720, %r3719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3721,%dummy}, %rd5402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3722}, %rd5402;
	}
	shf.r.wrap.b32 	%r3723, %r3722, %r3721, 19;
	shf.r.wrap.b32 	%r3724, %r3721, %r3722, 19;
	mov.b64 	%rd5418, {%r3724, %r3723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3725,%dummy}, %rd5408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3726}, %rd5408;
	}
	shf.r.wrap.b32 	%r3727, %r3726, %r3725, 3;
	shf.r.wrap.b32 	%r3728, %r3725, %r3726, 3;
	mov.b64 	%rd5419, {%r3728, %r3727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3729}, %rd5387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd5387;
	}
	shf.l.wrap.b32 	%r3731, %r3730, %r3729, 1;
	shf.l.wrap.b32 	%r3732, %r3729, %r3730, 1;
	mov.b64 	%rd5420, {%r3732, %r3731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3733}, %rd5393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3734,%dummy}, %rd5393;
	}
	shf.l.wrap.b32 	%r3735, %r3734, %r3733, 6;
	shf.l.wrap.b32 	%r3736, %r3733, %r3734, 6;
	mov.b64 	%rd5421, {%r3736, %r3735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3737}, %rd5399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3738,%dummy}, %rd5399;
	}
	shf.l.wrap.b32 	%r3739, %r3738, %r3737, 25;
	shf.l.wrap.b32 	%r3740, %r3737, %r3738, 25;
	mov.b64 	%rd5422, {%r3740, %r3739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3741}, %rd5405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3742,%dummy}, %rd5405;
	}
	shf.l.wrap.b32 	%r3743, %r3742, %r3741, 8;
	shf.l.wrap.b32 	%r3744, %r3741, %r3742, 8;
	mov.b64 	%rd5423, {%r3744, %r3743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3745}, %rd5406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3746,%dummy}, %rd5406;
	}
	shf.l.wrap.b32 	%r3747, %r3746, %r3745, 18;
	shf.l.wrap.b32 	%r3748, %r3745, %r3746, 18;
	mov.b64 	%rd5424, {%r3748, %r3747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3749}, %rd5390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3750,%dummy}, %rd5390;
	}
	shf.l.wrap.b32 	%r3751, %r3750, %r3749, 27;
	shf.l.wrap.b32 	%r3752, %r3749, %r3750, 27;
	mov.b64 	%rd5425, {%r3752, %r3751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3753,%dummy}, %rd5391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3754}, %rd5391;
	}
	shf.r.wrap.b32 	%r3755, %r3754, %r3753, 28;
	shf.r.wrap.b32 	%r3756, %r3753, %r3754, 28;
	mov.b64 	%rd5426, {%r3756, %r3755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3757}, %rd5397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3758,%dummy}, %rd5397;
	}
	shf.l.wrap.b32 	%r3759, %r3758, %r3757, 10;
	shf.l.wrap.b32 	%r3760, %r3757, %r3758, 10;
	mov.b64 	%rd5427, {%r3760, %r3759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3761}, %rd5403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3762,%dummy}, %rd5403;
	}
	shf.l.wrap.b32 	%r3763, %r3762, %r3761, 15;
	shf.l.wrap.b32 	%r3764, %r3761, %r3762, 15;
	mov.b64 	%rd5428, {%r3764, %r3763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3765,%dummy}, %rd5409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3766}, %rd5409;
	}
	shf.r.wrap.b32 	%r3767, %r3766, %r3765, 8;
	shf.r.wrap.b32 	%r3768, %r3765, %r3766, 8;
	mov.b64 	%rd5429, {%r3768, %r3767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3769,%dummy}, %rd5388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3770}, %rd5388;
	}
	shf.r.wrap.b32 	%r3771, %r3770, %r3769, 2;
	shf.r.wrap.b32 	%r3772, %r3769, %r3770, 2;
	mov.b64 	%rd5430, {%r3772, %r3771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3773,%dummy}, %rd5394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3774}, %rd5394;
	}
	shf.r.wrap.b32 	%r3775, %r3774, %r3773, 9;
	shf.r.wrap.b32 	%r3776, %r3773, %r3774, 9;
	mov.b64 	%rd5431, {%r3776, %r3775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3777,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3778}, %rd5400;
	}
	shf.r.wrap.b32 	%r3779, %r3778, %r3777, 25;
	shf.r.wrap.b32 	%r3780, %r3777, %r3778, 25;
	mov.b64 	%rd5432, {%r3780, %r3779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3781,%dummy}, %rd5401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3782}, %rd5401;
	}
	shf.r.wrap.b32 	%r3783, %r3782, %r3781, 23;
	shf.r.wrap.b32 	%r3784, %r3781, %r3782, 23;
	mov.b64 	%rd5433, {%r3784, %r3783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3785}, %rd5407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd5407;
	}
	shf.l.wrap.b32 	%r3787, %r3786, %r3785, 2;
	shf.l.wrap.b32 	%r3788, %r3785, %r3786, 2;
	mov.b64 	%rd5434, {%r3788, %r3787};
	not.b64 	%rd5435, %rd5411;
	and.b64  	%rd5436, %rd5412, %rd5435;
	xor.b64  	%rd5437, %rd5436, %rd5386;
	not.b64 	%rd5438, %rd5412;
	and.b64  	%rd5439, %rd5413, %rd5438;
	xor.b64  	%rd5440, %rd5439, %rd5411;
	not.b64 	%rd5441, %rd5413;
	and.b64  	%rd5442, %rd5414, %rd5441;
	xor.b64  	%rd5443, %rd5442, %rd5412;
	not.b64 	%rd5444, %rd5414;
	and.b64  	%rd5445, %rd5386, %rd5444;
	xor.b64  	%rd5446, %rd5445, %rd5413;
	not.b64 	%rd5447, %rd5386;
	and.b64  	%rd5448, %rd5411, %rd5447;
	xor.b64  	%rd5449, %rd5448, %rd5414;
	not.b64 	%rd5450, %rd5416;
	and.b64  	%rd5451, %rd5417, %rd5450;
	xor.b64  	%rd5452, %rd5451, %rd5415;
	not.b64 	%rd5453, %rd5417;
	and.b64  	%rd5454, %rd5418, %rd5453;
	xor.b64  	%rd5455, %rd5454, %rd5416;
	not.b64 	%rd5456, %rd5418;
	and.b64  	%rd5457, %rd5419, %rd5456;
	xor.b64  	%rd5458, %rd5457, %rd5417;
	not.b64 	%rd5459, %rd5419;
	and.b64  	%rd5460, %rd5415, %rd5459;
	xor.b64  	%rd5461, %rd5460, %rd5418;
	not.b64 	%rd5462, %rd5415;
	and.b64  	%rd5463, %rd5416, %rd5462;
	xor.b64  	%rd5464, %rd5463, %rd5419;
	not.b64 	%rd5465, %rd5421;
	and.b64  	%rd5466, %rd5422, %rd5465;
	xor.b64  	%rd5467, %rd5466, %rd5420;
	not.b64 	%rd5468, %rd5422;
	and.b64  	%rd5469, %rd5423, %rd5468;
	xor.b64  	%rd5470, %rd5469, %rd5421;
	not.b64 	%rd5471, %rd5423;
	and.b64  	%rd5472, %rd5424, %rd5471;
	xor.b64  	%rd5473, %rd5472, %rd5422;
	not.b64 	%rd5474, %rd5424;
	and.b64  	%rd5475, %rd5420, %rd5474;
	xor.b64  	%rd5476, %rd5475, %rd5423;
	not.b64 	%rd5477, %rd5420;
	and.b64  	%rd5478, %rd5421, %rd5477;
	xor.b64  	%rd5479, %rd5478, %rd5424;
	not.b64 	%rd5480, %rd5426;
	and.b64  	%rd5481, %rd5427, %rd5480;
	xor.b64  	%rd5482, %rd5481, %rd5425;
	not.b64 	%rd5483, %rd5427;
	and.b64  	%rd5484, %rd5428, %rd5483;
	xor.b64  	%rd5485, %rd5484, %rd5426;
	not.b64 	%rd5486, %rd5428;
	and.b64  	%rd5487, %rd5429, %rd5486;
	xor.b64  	%rd5488, %rd5487, %rd5427;
	not.b64 	%rd5489, %rd5429;
	and.b64  	%rd5490, %rd5425, %rd5489;
	xor.b64  	%rd5491, %rd5490, %rd5428;
	not.b64 	%rd5492, %rd5425;
	and.b64  	%rd5493, %rd5426, %rd5492;
	xor.b64  	%rd5494, %rd5493, %rd5429;
	not.b64 	%rd5495, %rd5431;
	and.b64  	%rd5496, %rd5432, %rd5495;
	xor.b64  	%rd5497, %rd5496, %rd5430;
	not.b64 	%rd5498, %rd5432;
	and.b64  	%rd5499, %rd5433, %rd5498;
	xor.b64  	%rd5500, %rd5499, %rd5431;
	not.b64 	%rd5501, %rd5433;
	and.b64  	%rd5502, %rd5434, %rd5501;
	xor.b64  	%rd5503, %rd5502, %rd5432;
	not.b64 	%rd5504, %rd5434;
	and.b64  	%rd5505, %rd5430, %rd5504;
	xor.b64  	%rd5506, %rd5505, %rd5433;
	not.b64 	%rd5507, %rd5430;
	and.b64  	%rd5508, %rd5431, %rd5507;
	xor.b64  	%rd5509, %rd5508, %rd5434;
	xor.b64  	%rd5510, %rd5437, %rd23;
	xor.b64  	%rd5511, %rd5452, %rd5510;
	xor.b64  	%rd5512, %rd5511, %rd5467;
	xor.b64  	%rd5513, %rd5512, %rd5482;
	xor.b64  	%rd5514, %rd5513, %rd5497;
	xor.b64  	%rd5515, %rd5455, %rd5440;
	xor.b64  	%rd5516, %rd5515, %rd5470;
	xor.b64  	%rd5517, %rd5516, %rd5485;
	xor.b64  	%rd5518, %rd5517, %rd5500;
	xor.b64  	%rd5519, %rd5458, %rd5443;
	xor.b64  	%rd5520, %rd5519, %rd5473;
	xor.b64  	%rd5521, %rd5520, %rd5488;
	xor.b64  	%rd5522, %rd5521, %rd5503;
	xor.b64  	%rd5523, %rd5461, %rd5446;
	xor.b64  	%rd5524, %rd5523, %rd5476;
	xor.b64  	%rd5525, %rd5524, %rd5491;
	xor.b64  	%rd5526, %rd5525, %rd5506;
	xor.b64  	%rd5527, %rd5464, %rd5449;
	xor.b64  	%rd5528, %rd5527, %rd5479;
	xor.b64  	%rd5529, %rd5528, %rd5494;
	xor.b64  	%rd5530, %rd5529, %rd5509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3789}, %rd5518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3790,%dummy}, %rd5518;
	}
	shf.l.wrap.b32 	%r3791, %r3790, %r3789, 1;
	shf.l.wrap.b32 	%r3792, %r3789, %r3790, 1;
	mov.b64 	%rd5531, {%r3792, %r3791};
	xor.b64  	%rd5532, %rd5530, %rd5531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3793}, %rd5522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd5522;
	}
	shf.l.wrap.b32 	%r3795, %r3794, %r3793, 1;
	shf.l.wrap.b32 	%r3796, %r3793, %r3794, 1;
	mov.b64 	%rd5533, {%r3796, %r3795};
	xor.b64  	%rd5534, %rd5533, %rd5514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3797}, %rd5526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3798,%dummy}, %rd5526;
	}
	shf.l.wrap.b32 	%r3799, %r3798, %r3797, 1;
	shf.l.wrap.b32 	%r3800, %r3797, %r3798, 1;
	mov.b64 	%rd5535, {%r3800, %r3799};
	xor.b64  	%rd5536, %rd5535, %rd5518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3801}, %rd5530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd5530;
	}
	shf.l.wrap.b32 	%r3803, %r3802, %r3801, 1;
	shf.l.wrap.b32 	%r3804, %r3801, %r3802, 1;
	mov.b64 	%rd5537, {%r3804, %r3803};
	xor.b64  	%rd5538, %rd5537, %rd5522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3805}, %rd5514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3806,%dummy}, %rd5514;
	}
	shf.l.wrap.b32 	%r3807, %r3806, %r3805, 1;
	shf.l.wrap.b32 	%r3808, %r3805, %r3806, 1;
	mov.b64 	%rd5539, {%r3808, %r3807};
	xor.b64  	%rd5540, %rd5526, %rd5539;
	xor.b64  	%rd5541, %rd5532, %rd5510;
	xor.b64  	%rd5542, %rd5534, %rd5440;
	xor.b64  	%rd5543, %rd5536, %rd5443;
	xor.b64  	%rd5544, %rd5538, %rd5446;
	xor.b64  	%rd5545, %rd5540, %rd5449;
	xor.b64  	%rd5546, %rd5532, %rd5452;
	xor.b64  	%rd5547, %rd5534, %rd5455;
	xor.b64  	%rd5548, %rd5536, %rd5458;
	xor.b64  	%rd5549, %rd5538, %rd5461;
	xor.b64  	%rd5550, %rd5540, %rd5464;
	xor.b64  	%rd5551, %rd5532, %rd5467;
	xor.b64  	%rd5552, %rd5534, %rd5470;
	xor.b64  	%rd5553, %rd5536, %rd5473;
	xor.b64  	%rd5554, %rd5538, %rd5476;
	xor.b64  	%rd5555, %rd5540, %rd5479;
	xor.b64  	%rd5556, %rd5532, %rd5482;
	xor.b64  	%rd5557, %rd5534, %rd5485;
	xor.b64  	%rd5558, %rd5536, %rd5488;
	xor.b64  	%rd5559, %rd5538, %rd5491;
	xor.b64  	%rd5560, %rd5540, %rd5494;
	xor.b64  	%rd5561, %rd5532, %rd5497;
	xor.b64  	%rd5562, %rd5534, %rd5500;
	xor.b64  	%rd5563, %rd5536, %rd5503;
	xor.b64  	%rd5564, %rd5538, %rd5506;
	xor.b64  	%rd5565, %rd5540, %rd5509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3809,%dummy}, %rd5547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3810}, %rd5547;
	}
	shf.r.wrap.b32 	%r3811, %r3810, %r3809, 20;
	shf.r.wrap.b32 	%r3812, %r3809, %r3810, 20;
	mov.b64 	%rd5566, {%r3812, %r3811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd5553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd5553;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 21;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 21;
	mov.b64 	%rd5567, {%r3816, %r3815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3817}, %rd5559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3818,%dummy}, %rd5559;
	}
	shf.l.wrap.b32 	%r3819, %r3818, %r3817, 21;
	shf.l.wrap.b32 	%r3820, %r3817, %r3818, 21;
	mov.b64 	%rd5568, {%r3820, %r3819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd5565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3822,%dummy}, %rd5565;
	}
	shf.l.wrap.b32 	%r3823, %r3822, %r3821, 14;
	shf.l.wrap.b32 	%r3824, %r3821, %r3822, 14;
	mov.b64 	%rd5569, {%r3824, %r3823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3825}, %rd5544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3826,%dummy}, %rd5544;
	}
	shf.l.wrap.b32 	%r3827, %r3826, %r3825, 28;
	shf.l.wrap.b32 	%r3828, %r3825, %r3826, 28;
	mov.b64 	%rd5570, {%r3828, %r3827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3829}, %rd5550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3830,%dummy}, %rd5550;
	}
	shf.l.wrap.b32 	%r3831, %r3830, %r3829, 20;
	shf.l.wrap.b32 	%r3832, %r3829, %r3830, 20;
	mov.b64 	%rd5571, {%r3832, %r3831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3833}, %rd5551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3834,%dummy}, %rd5551;
	}
	shf.l.wrap.b32 	%r3835, %r3834, %r3833, 3;
	shf.l.wrap.b32 	%r3836, %r3833, %r3834, 3;
	mov.b64 	%rd5572, {%r3836, %r3835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3837,%dummy}, %rd5557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3838}, %rd5557;
	}
	shf.r.wrap.b32 	%r3839, %r3838, %r3837, 19;
	shf.r.wrap.b32 	%r3840, %r3837, %r3838, 19;
	mov.b64 	%rd5573, {%r3840, %r3839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3841,%dummy}, %rd5563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3842}, %rd5563;
	}
	shf.r.wrap.b32 	%r3843, %r3842, %r3841, 3;
	shf.r.wrap.b32 	%r3844, %r3841, %r3842, 3;
	mov.b64 	%rd5574, {%r3844, %r3843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3845}, %rd5542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3846,%dummy}, %rd5542;
	}
	shf.l.wrap.b32 	%r3847, %r3846, %r3845, 1;
	shf.l.wrap.b32 	%r3848, %r3845, %r3846, 1;
	mov.b64 	%rd5575, {%r3848, %r3847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3849}, %rd5548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3850,%dummy}, %rd5548;
	}
	shf.l.wrap.b32 	%r3851, %r3850, %r3849, 6;
	shf.l.wrap.b32 	%r3852, %r3849, %r3850, 6;
	mov.b64 	%rd5576, {%r3852, %r3851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3853}, %rd5554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3854,%dummy}, %rd5554;
	}
	shf.l.wrap.b32 	%r3855, %r3854, %r3853, 25;
	shf.l.wrap.b32 	%r3856, %r3853, %r3854, 25;
	mov.b64 	%rd5577, {%r3856, %r3855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3857}, %rd5560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3858,%dummy}, %rd5560;
	}
	shf.l.wrap.b32 	%r3859, %r3858, %r3857, 8;
	shf.l.wrap.b32 	%r3860, %r3857, %r3858, 8;
	mov.b64 	%rd5578, {%r3860, %r3859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3861}, %rd5561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3862,%dummy}, %rd5561;
	}
	shf.l.wrap.b32 	%r3863, %r3862, %r3861, 18;
	shf.l.wrap.b32 	%r3864, %r3861, %r3862, 18;
	mov.b64 	%rd5579, {%r3864, %r3863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd5545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3866,%dummy}, %rd5545;
	}
	shf.l.wrap.b32 	%r3867, %r3866, %r3865, 27;
	shf.l.wrap.b32 	%r3868, %r3865, %r3866, 27;
	mov.b64 	%rd5580, {%r3868, %r3867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3869,%dummy}, %rd5546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3870}, %rd5546;
	}
	shf.r.wrap.b32 	%r3871, %r3870, %r3869, 28;
	shf.r.wrap.b32 	%r3872, %r3869, %r3870, 28;
	mov.b64 	%rd5581, {%r3872, %r3871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3873}, %rd5552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3874,%dummy}, %rd5552;
	}
	shf.l.wrap.b32 	%r3875, %r3874, %r3873, 10;
	shf.l.wrap.b32 	%r3876, %r3873, %r3874, 10;
	mov.b64 	%rd5582, {%r3876, %r3875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3877}, %rd5558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3878,%dummy}, %rd5558;
	}
	shf.l.wrap.b32 	%r3879, %r3878, %r3877, 15;
	shf.l.wrap.b32 	%r3880, %r3877, %r3878, 15;
	mov.b64 	%rd5583, {%r3880, %r3879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3881,%dummy}, %rd5564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3882}, %rd5564;
	}
	shf.r.wrap.b32 	%r3883, %r3882, %r3881, 8;
	shf.r.wrap.b32 	%r3884, %r3881, %r3882, 8;
	mov.b64 	%rd5584, {%r3884, %r3883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3885,%dummy}, %rd5543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3886}, %rd5543;
	}
	shf.r.wrap.b32 	%r3887, %r3886, %r3885, 2;
	shf.r.wrap.b32 	%r3888, %r3885, %r3886, 2;
	mov.b64 	%rd5585, {%r3888, %r3887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3889,%dummy}, %rd5549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3890}, %rd5549;
	}
	shf.r.wrap.b32 	%r3891, %r3890, %r3889, 9;
	shf.r.wrap.b32 	%r3892, %r3889, %r3890, 9;
	mov.b64 	%rd5586, {%r3892, %r3891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3893,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3894}, %rd5555;
	}
	shf.r.wrap.b32 	%r3895, %r3894, %r3893, 25;
	shf.r.wrap.b32 	%r3896, %r3893, %r3894, 25;
	mov.b64 	%rd5587, {%r3896, %r3895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3897,%dummy}, %rd5556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3898}, %rd5556;
	}
	shf.r.wrap.b32 	%r3899, %r3898, %r3897, 23;
	shf.r.wrap.b32 	%r3900, %r3897, %r3898, 23;
	mov.b64 	%rd5588, {%r3900, %r3899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3901}, %rd5562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3902,%dummy}, %rd5562;
	}
	shf.l.wrap.b32 	%r3903, %r3902, %r3901, 2;
	shf.l.wrap.b32 	%r3904, %r3901, %r3902, 2;
	mov.b64 	%rd5589, {%r3904, %r3903};
	not.b64 	%rd5590, %rd5566;
	and.b64  	%rd5591, %rd5567, %rd5590;
	xor.b64  	%rd5592, %rd5591, %rd5541;
	not.b64 	%rd5593, %rd5567;
	and.b64  	%rd5594, %rd5568, %rd5593;
	xor.b64  	%rd5595, %rd5594, %rd5566;
	not.b64 	%rd5596, %rd5568;
	and.b64  	%rd5597, %rd5569, %rd5596;
	xor.b64  	%rd5598, %rd5597, %rd5567;
	not.b64 	%rd5599, %rd5569;
	and.b64  	%rd5600, %rd5541, %rd5599;
	xor.b64  	%rd5601, %rd5600, %rd5568;
	not.b64 	%rd5602, %rd5541;
	and.b64  	%rd5603, %rd5566, %rd5602;
	xor.b64  	%rd5604, %rd5603, %rd5569;
	not.b64 	%rd5605, %rd5571;
	and.b64  	%rd5606, %rd5572, %rd5605;
	xor.b64  	%rd5607, %rd5606, %rd5570;
	not.b64 	%rd5608, %rd5572;
	and.b64  	%rd5609, %rd5573, %rd5608;
	xor.b64  	%rd5610, %rd5609, %rd5571;
	not.b64 	%rd5611, %rd5573;
	and.b64  	%rd5612, %rd5574, %rd5611;
	xor.b64  	%rd5613, %rd5612, %rd5572;
	not.b64 	%rd5614, %rd5574;
	and.b64  	%rd5615, %rd5570, %rd5614;
	xor.b64  	%rd5616, %rd5615, %rd5573;
	not.b64 	%rd5617, %rd5570;
	and.b64  	%rd5618, %rd5571, %rd5617;
	xor.b64  	%rd5619, %rd5618, %rd5574;
	not.b64 	%rd5620, %rd5576;
	and.b64  	%rd5621, %rd5577, %rd5620;
	xor.b64  	%rd5622, %rd5621, %rd5575;
	not.b64 	%rd5623, %rd5577;
	and.b64  	%rd5624, %rd5578, %rd5623;
	xor.b64  	%rd5625, %rd5624, %rd5576;
	not.b64 	%rd5626, %rd5578;
	and.b64  	%rd5627, %rd5579, %rd5626;
	xor.b64  	%rd5628, %rd5627, %rd5577;
	not.b64 	%rd5629, %rd5579;
	and.b64  	%rd5630, %rd5575, %rd5629;
	xor.b64  	%rd5631, %rd5630, %rd5578;
	not.b64 	%rd5632, %rd5575;
	and.b64  	%rd5633, %rd5576, %rd5632;
	xor.b64  	%rd5634, %rd5633, %rd5579;
	not.b64 	%rd5635, %rd5581;
	and.b64  	%rd5636, %rd5582, %rd5635;
	xor.b64  	%rd5637, %rd5636, %rd5580;
	not.b64 	%rd5638, %rd5582;
	and.b64  	%rd5639, %rd5583, %rd5638;
	xor.b64  	%rd5640, %rd5639, %rd5581;
	not.b64 	%rd5641, %rd5583;
	and.b64  	%rd5642, %rd5584, %rd5641;
	xor.b64  	%rd5643, %rd5642, %rd5582;
	not.b64 	%rd5644, %rd5584;
	and.b64  	%rd5645, %rd5580, %rd5644;
	xor.b64  	%rd5646, %rd5645, %rd5583;
	not.b64 	%rd5647, %rd5580;
	and.b64  	%rd5648, %rd5581, %rd5647;
	xor.b64  	%rd5649, %rd5648, %rd5584;
	not.b64 	%rd5650, %rd5586;
	and.b64  	%rd5651, %rd5587, %rd5650;
	xor.b64  	%rd5652, %rd5651, %rd5585;
	not.b64 	%rd5653, %rd5587;
	and.b64  	%rd5654, %rd5588, %rd5653;
	xor.b64  	%rd5655, %rd5654, %rd5586;
	not.b64 	%rd5656, %rd5588;
	and.b64  	%rd5657, %rd5589, %rd5656;
	xor.b64  	%rd5658, %rd5657, %rd5587;
	not.b64 	%rd5659, %rd5589;
	and.b64  	%rd5660, %rd5585, %rd5659;
	xor.b64  	%rd5661, %rd5660, %rd5588;
	not.b64 	%rd5662, %rd5585;
	and.b64  	%rd5663, %rd5586, %rd5662;
	xor.b64  	%rd5664, %rd5663, %rd5589;
	xor.b64  	%rd5665, %rd5592, %rd24;
	xor.b64  	%rd5666, %rd5607, %rd5665;
	xor.b64  	%rd5667, %rd5666, %rd5622;
	xor.b64  	%rd5668, %rd5667, %rd5637;
	xor.b64  	%rd5669, %rd5668, %rd5652;
	xor.b64  	%rd5670, %rd5610, %rd5595;
	xor.b64  	%rd5671, %rd5670, %rd5625;
	xor.b64  	%rd5672, %rd5671, %rd5640;
	xor.b64  	%rd5673, %rd5672, %rd5655;
	xor.b64  	%rd5674, %rd5613, %rd5598;
	xor.b64  	%rd5675, %rd5674, %rd5628;
	xor.b64  	%rd5676, %rd5675, %rd5643;
	xor.b64  	%rd5677, %rd5676, %rd5658;
	xor.b64  	%rd5678, %rd5616, %rd5601;
	xor.b64  	%rd5679, %rd5678, %rd5631;
	xor.b64  	%rd5680, %rd5679, %rd5646;
	xor.b64  	%rd5681, %rd5680, %rd5661;
	xor.b64  	%rd5682, %rd5619, %rd5604;
	xor.b64  	%rd5683, %rd5682, %rd5634;
	xor.b64  	%rd5684, %rd5683, %rd5649;
	xor.b64  	%rd5685, %rd5684, %rd5664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3905}, %rd5673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3906,%dummy}, %rd5673;
	}
	shf.l.wrap.b32 	%r3907, %r3906, %r3905, 1;
	shf.l.wrap.b32 	%r3908, %r3905, %r3906, 1;
	mov.b64 	%rd5686, {%r3908, %r3907};
	xor.b64  	%rd5687, %rd5685, %rd5686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3909}, %rd5677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3910,%dummy}, %rd5677;
	}
	shf.l.wrap.b32 	%r3911, %r3910, %r3909, 1;
	shf.l.wrap.b32 	%r3912, %r3909, %r3910, 1;
	mov.b64 	%rd5688, {%r3912, %r3911};
	xor.b64  	%rd5689, %rd5688, %rd5669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3913}, %rd5681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3914,%dummy}, %rd5681;
	}
	shf.l.wrap.b32 	%r3915, %r3914, %r3913, 1;
	shf.l.wrap.b32 	%r3916, %r3913, %r3914, 1;
	mov.b64 	%rd5690, {%r3916, %r3915};
	xor.b64  	%rd5691, %rd5690, %rd5673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3917}, %rd5685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3918,%dummy}, %rd5685;
	}
	shf.l.wrap.b32 	%r3919, %r3918, %r3917, 1;
	shf.l.wrap.b32 	%r3920, %r3917, %r3918, 1;
	mov.b64 	%rd5692, {%r3920, %r3919};
	xor.b64  	%rd5693, %rd5692, %rd5677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3921}, %rd5669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3922,%dummy}, %rd5669;
	}
	shf.l.wrap.b32 	%r3923, %r3922, %r3921, 1;
	shf.l.wrap.b32 	%r3924, %r3921, %r3922, 1;
	mov.b64 	%rd5694, {%r3924, %r3923};
	xor.b64  	%rd5695, %rd5681, %rd5694;
	xor.b64  	%rd5696, %rd5687, %rd5665;
	xor.b64  	%rd5697, %rd5689, %rd5595;
	xor.b64  	%rd5698, %rd5691, %rd5598;
	xor.b64  	%rd5699, %rd5693, %rd5601;
	xor.b64  	%rd5700, %rd5695, %rd5604;
	xor.b64  	%rd5701, %rd5687, %rd5607;
	xor.b64  	%rd5702, %rd5689, %rd5610;
	xor.b64  	%rd5703, %rd5691, %rd5613;
	xor.b64  	%rd5704, %rd5693, %rd5616;
	xor.b64  	%rd5705, %rd5695, %rd5619;
	xor.b64  	%rd5706, %rd5687, %rd5622;
	xor.b64  	%rd5707, %rd5689, %rd5625;
	xor.b64  	%rd5708, %rd5691, %rd5628;
	xor.b64  	%rd5709, %rd5693, %rd5631;
	xor.b64  	%rd5710, %rd5695, %rd5634;
	xor.b64  	%rd5711, %rd5687, %rd5637;
	xor.b64  	%rd5712, %rd5689, %rd5640;
	xor.b64  	%rd5713, %rd5691, %rd5643;
	xor.b64  	%rd5714, %rd5693, %rd5646;
	xor.b64  	%rd5715, %rd5695, %rd5649;
	xor.b64  	%rd5716, %rd5687, %rd5652;
	xor.b64  	%rd5717, %rd5689, %rd5655;
	xor.b64  	%rd5718, %rd5691, %rd5658;
	xor.b64  	%rd5719, %rd5693, %rd5661;
	xor.b64  	%rd5720, %rd5695, %rd5664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd5702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd5702;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 20;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 20;
	mov.b64 	%rd5721, {%r3928, %r3927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3929,%dummy}, %rd5708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3930}, %rd5708;
	}
	shf.r.wrap.b32 	%r3931, %r3930, %r3929, 21;
	shf.r.wrap.b32 	%r3932, %r3929, %r3930, 21;
	mov.b64 	%rd5722, {%r3932, %r3931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3933}, %rd5714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3934,%dummy}, %rd5714;
	}
	shf.l.wrap.b32 	%r3935, %r3934, %r3933, 21;
	shf.l.wrap.b32 	%r3936, %r3933, %r3934, 21;
	mov.b64 	%rd5723, {%r3936, %r3935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3937}, %rd5720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3938,%dummy}, %rd5720;
	}
	shf.l.wrap.b32 	%r3939, %r3938, %r3937, 14;
	shf.l.wrap.b32 	%r3940, %r3937, %r3938, 14;
	mov.b64 	%rd5724, {%r3940, %r3939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3941}, %rd5699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3942,%dummy}, %rd5699;
	}
	shf.l.wrap.b32 	%r3943, %r3942, %r3941, 28;
	shf.l.wrap.b32 	%r3944, %r3941, %r3942, 28;
	mov.b64 	%rd5725, {%r3944, %r3943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3945}, %rd5705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3946,%dummy}, %rd5705;
	}
	shf.l.wrap.b32 	%r3947, %r3946, %r3945, 20;
	shf.l.wrap.b32 	%r3948, %r3945, %r3946, 20;
	mov.b64 	%rd5726, {%r3948, %r3947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3949}, %rd5706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3950,%dummy}, %rd5706;
	}
	shf.l.wrap.b32 	%r3951, %r3950, %r3949, 3;
	shf.l.wrap.b32 	%r3952, %r3949, %r3950, 3;
	mov.b64 	%rd5727, {%r3952, %r3951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3953,%dummy}, %rd5712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3954}, %rd5712;
	}
	shf.r.wrap.b32 	%r3955, %r3954, %r3953, 19;
	shf.r.wrap.b32 	%r3956, %r3953, %r3954, 19;
	mov.b64 	%rd5728, {%r3956, %r3955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3957,%dummy}, %rd5718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3958}, %rd5718;
	}
	shf.r.wrap.b32 	%r3959, %r3958, %r3957, 3;
	shf.r.wrap.b32 	%r3960, %r3957, %r3958, 3;
	mov.b64 	%rd5729, {%r3960, %r3959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3961}, %rd5697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3962,%dummy}, %rd5697;
	}
	shf.l.wrap.b32 	%r3963, %r3962, %r3961, 1;
	shf.l.wrap.b32 	%r3964, %r3961, %r3962, 1;
	mov.b64 	%rd5730, {%r3964, %r3963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3965}, %rd5703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3966,%dummy}, %rd5703;
	}
	shf.l.wrap.b32 	%r3967, %r3966, %r3965, 6;
	shf.l.wrap.b32 	%r3968, %r3965, %r3966, 6;
	mov.b64 	%rd5731, {%r3968, %r3967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd5709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3970,%dummy}, %rd5709;
	}
	shf.l.wrap.b32 	%r3971, %r3970, %r3969, 25;
	shf.l.wrap.b32 	%r3972, %r3969, %r3970, 25;
	mov.b64 	%rd5732, {%r3972, %r3971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3973}, %rd5715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3974,%dummy}, %rd5715;
	}
	shf.l.wrap.b32 	%r3975, %r3974, %r3973, 8;
	shf.l.wrap.b32 	%r3976, %r3973, %r3974, 8;
	mov.b64 	%rd5733, {%r3976, %r3975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd5716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3978,%dummy}, %rd5716;
	}
	shf.l.wrap.b32 	%r3979, %r3978, %r3977, 18;
	shf.l.wrap.b32 	%r3980, %r3977, %r3978, 18;
	mov.b64 	%rd5734, {%r3980, %r3979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3981}, %rd5700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3982,%dummy}, %rd5700;
	}
	shf.l.wrap.b32 	%r3983, %r3982, %r3981, 27;
	shf.l.wrap.b32 	%r3984, %r3981, %r3982, 27;
	mov.b64 	%rd5735, {%r3984, %r3983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3985,%dummy}, %rd5701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3986}, %rd5701;
	}
	shf.r.wrap.b32 	%r3987, %r3986, %r3985, 28;
	shf.r.wrap.b32 	%r3988, %r3985, %r3986, 28;
	mov.b64 	%rd5736, {%r3988, %r3987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3989}, %rd5707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3990,%dummy}, %rd5707;
	}
	shf.l.wrap.b32 	%r3991, %r3990, %r3989, 10;
	shf.l.wrap.b32 	%r3992, %r3989, %r3990, 10;
	mov.b64 	%rd5737, {%r3992, %r3991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3993}, %rd5713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3994,%dummy}, %rd5713;
	}
	shf.l.wrap.b32 	%r3995, %r3994, %r3993, 15;
	shf.l.wrap.b32 	%r3996, %r3993, %r3994, 15;
	mov.b64 	%rd5738, {%r3996, %r3995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3997,%dummy}, %rd5719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3998}, %rd5719;
	}
	shf.r.wrap.b32 	%r3999, %r3998, %r3997, 8;
	shf.r.wrap.b32 	%r4000, %r3997, %r3998, 8;
	mov.b64 	%rd5739, {%r4000, %r3999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4001,%dummy}, %rd5698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4002}, %rd5698;
	}
	shf.r.wrap.b32 	%r4003, %r4002, %r4001, 2;
	shf.r.wrap.b32 	%r4004, %r4001, %r4002, 2;
	mov.b64 	%rd5740, {%r4004, %r4003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd5704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd5704;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 9;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 9;
	mov.b64 	%rd5741, {%r4008, %r4007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4009,%dummy}, %rd5710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4010}, %rd5710;
	}
	shf.r.wrap.b32 	%r4011, %r4010, %r4009, 25;
	shf.r.wrap.b32 	%r4012, %r4009, %r4010, 25;
	mov.b64 	%rd5742, {%r4012, %r4011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd5711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd5711;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 23;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 23;
	mov.b64 	%rd5743, {%r4016, %r4015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4017}, %rd5717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4018,%dummy}, %rd5717;
	}
	shf.l.wrap.b32 	%r4019, %r4018, %r4017, 2;
	shf.l.wrap.b32 	%r4020, %r4017, %r4018, 2;
	mov.b64 	%rd5744, {%r4020, %r4019};
	not.b64 	%rd5745, %rd5721;
	and.b64  	%rd5746, %rd5722, %rd5745;
	xor.b64  	%rd5747, %rd5746, %rd5696;
	not.b64 	%rd5748, %rd5722;
	and.b64  	%rd5749, %rd5723, %rd5748;
	xor.b64  	%rd5750, %rd5749, %rd5721;
	not.b64 	%rd5751, %rd5723;
	and.b64  	%rd5752, %rd5724, %rd5751;
	xor.b64  	%rd5753, %rd5752, %rd5722;
	not.b64 	%rd5754, %rd5724;
	and.b64  	%rd5755, %rd5696, %rd5754;
	xor.b64  	%rd5756, %rd5755, %rd5723;
	not.b64 	%rd5757, %rd5696;
	and.b64  	%rd5758, %rd5721, %rd5757;
	xor.b64  	%rd5759, %rd5758, %rd5724;
	not.b64 	%rd5760, %rd5726;
	and.b64  	%rd5761, %rd5727, %rd5760;
	xor.b64  	%rd5762, %rd5761, %rd5725;
	not.b64 	%rd5763, %rd5727;
	and.b64  	%rd5764, %rd5728, %rd5763;
	xor.b64  	%rd5765, %rd5764, %rd5726;
	not.b64 	%rd5766, %rd5728;
	and.b64  	%rd5767, %rd5729, %rd5766;
	xor.b64  	%rd5768, %rd5767, %rd5727;
	not.b64 	%rd5769, %rd5729;
	and.b64  	%rd5770, %rd5725, %rd5769;
	xor.b64  	%rd5771, %rd5770, %rd5728;
	not.b64 	%rd5772, %rd5725;
	and.b64  	%rd5773, %rd5726, %rd5772;
	xor.b64  	%rd5774, %rd5773, %rd5729;
	not.b64 	%rd5775, %rd5731;
	and.b64  	%rd5776, %rd5732, %rd5775;
	xor.b64  	%rd5777, %rd5776, %rd5730;
	not.b64 	%rd5778, %rd5732;
	and.b64  	%rd5779, %rd5733, %rd5778;
	xor.b64  	%rd5780, %rd5779, %rd5731;
	not.b64 	%rd5781, %rd5733;
	and.b64  	%rd5782, %rd5734, %rd5781;
	xor.b64  	%rd5783, %rd5782, %rd5732;
	not.b64 	%rd5784, %rd5734;
	and.b64  	%rd5785, %rd5730, %rd5784;
	xor.b64  	%rd5786, %rd5785, %rd5733;
	not.b64 	%rd5787, %rd5730;
	and.b64  	%rd5788, %rd5731, %rd5787;
	xor.b64  	%rd5789, %rd5788, %rd5734;
	not.b64 	%rd5790, %rd5736;
	and.b64  	%rd5791, %rd5737, %rd5790;
	xor.b64  	%rd5792, %rd5791, %rd5735;
	not.b64 	%rd5793, %rd5737;
	and.b64  	%rd5794, %rd5738, %rd5793;
	xor.b64  	%rd5795, %rd5794, %rd5736;
	not.b64 	%rd5796, %rd5738;
	and.b64  	%rd5797, %rd5739, %rd5796;
	xor.b64  	%rd5798, %rd5797, %rd5737;
	not.b64 	%rd5799, %rd5739;
	and.b64  	%rd5800, %rd5735, %rd5799;
	xor.b64  	%rd5801, %rd5800, %rd5738;
	not.b64 	%rd5802, %rd5735;
	and.b64  	%rd5803, %rd5736, %rd5802;
	xor.b64  	%rd5804, %rd5803, %rd5739;
	not.b64 	%rd5805, %rd5741;
	and.b64  	%rd5806, %rd5742, %rd5805;
	xor.b64  	%rd5807, %rd5806, %rd5740;
	not.b64 	%rd5808, %rd5742;
	and.b64  	%rd5809, %rd5743, %rd5808;
	xor.b64  	%rd5810, %rd5809, %rd5741;
	not.b64 	%rd5811, %rd5743;
	and.b64  	%rd5812, %rd5744, %rd5811;
	xor.b64  	%rd5813, %rd5812, %rd5742;
	not.b64 	%rd5814, %rd5744;
	and.b64  	%rd5815, %rd5740, %rd5814;
	xor.b64  	%rd5816, %rd5815, %rd5743;
	not.b64 	%rd5817, %rd5740;
	and.b64  	%rd5818, %rd5741, %rd5817;
	xor.b64  	%rd5819, %rd5818, %rd5744;
	xor.b64  	%rd5820, %rd5747, %rd25;
	xor.b64  	%rd5821, %rd5762, %rd5820;
	xor.b64  	%rd5822, %rd5821, %rd5777;
	xor.b64  	%rd5823, %rd5822, %rd5792;
	xor.b64  	%rd5824, %rd5823, %rd5807;
	xor.b64  	%rd5825, %rd5765, %rd5750;
	xor.b64  	%rd5826, %rd5825, %rd5780;
	xor.b64  	%rd5827, %rd5826, %rd5795;
	xor.b64  	%rd5828, %rd5827, %rd5810;
	xor.b64  	%rd5829, %rd5768, %rd5753;
	xor.b64  	%rd5830, %rd5829, %rd5783;
	xor.b64  	%rd5831, %rd5830, %rd5798;
	xor.b64  	%rd5832, %rd5831, %rd5813;
	xor.b64  	%rd5833, %rd5771, %rd5756;
	xor.b64  	%rd5834, %rd5833, %rd5786;
	xor.b64  	%rd5835, %rd5834, %rd5801;
	xor.b64  	%rd5836, %rd5835, %rd5816;
	xor.b64  	%rd5837, %rd5774, %rd5759;
	xor.b64  	%rd5838, %rd5837, %rd5789;
	xor.b64  	%rd5839, %rd5838, %rd5804;
	xor.b64  	%rd5840, %rd5839, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4021}, %rd5828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4022,%dummy}, %rd5828;
	}
	shf.l.wrap.b32 	%r4023, %r4022, %r4021, 1;
	shf.l.wrap.b32 	%r4024, %r4021, %r4022, 1;
	mov.b64 	%rd5841, {%r4024, %r4023};
	xor.b64  	%rd5842, %rd5840, %rd5841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4025}, %rd5832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4026,%dummy}, %rd5832;
	}
	shf.l.wrap.b32 	%r4027, %r4026, %r4025, 1;
	shf.l.wrap.b32 	%r4028, %r4025, %r4026, 1;
	mov.b64 	%rd5843, {%r4028, %r4027};
	xor.b64  	%rd5844, %rd5843, %rd5824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4029}, %rd5836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4030,%dummy}, %rd5836;
	}
	shf.l.wrap.b32 	%r4031, %r4030, %r4029, 1;
	shf.l.wrap.b32 	%r4032, %r4029, %r4030, 1;
	mov.b64 	%rd5845, {%r4032, %r4031};
	xor.b64  	%rd5846, %rd5845, %rd5828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4033}, %rd5840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4034,%dummy}, %rd5840;
	}
	shf.l.wrap.b32 	%r4035, %r4034, %r4033, 1;
	shf.l.wrap.b32 	%r4036, %r4033, %r4034, 1;
	mov.b64 	%rd5847, {%r4036, %r4035};
	xor.b64  	%rd5848, %rd5847, %rd5832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4037}, %rd5824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4038,%dummy}, %rd5824;
	}
	shf.l.wrap.b32 	%r4039, %r4038, %r4037, 1;
	shf.l.wrap.b32 	%r4040, %r4037, %r4038, 1;
	mov.b64 	%rd5849, {%r4040, %r4039};
	xor.b64  	%rd5850, %rd5836, %rd5849;
	xor.b64  	%rd5851, %rd5842, %rd5820;
	xor.b64  	%rd5852, %rd5844, %rd5750;
	xor.b64  	%rd5853, %rd5846, %rd5753;
	xor.b64  	%rd5854, %rd5848, %rd5756;
	xor.b64  	%rd5855, %rd5850, %rd5759;
	xor.b64  	%rd5856, %rd5842, %rd5762;
	xor.b64  	%rd5857, %rd5844, %rd5765;
	xor.b64  	%rd5858, %rd5846, %rd5768;
	xor.b64  	%rd5859, %rd5848, %rd5771;
	xor.b64  	%rd5860, %rd5850, %rd5774;
	xor.b64  	%rd5861, %rd5842, %rd5777;
	xor.b64  	%rd5862, %rd5844, %rd5780;
	xor.b64  	%rd5863, %rd5846, %rd5783;
	xor.b64  	%rd5864, %rd5848, %rd5786;
	xor.b64  	%rd5865, %rd5850, %rd5789;
	xor.b64  	%rd5866, %rd5842, %rd5792;
	xor.b64  	%rd5867, %rd5844, %rd5795;
	xor.b64  	%rd5868, %rd5846, %rd5798;
	xor.b64  	%rd5869, %rd5848, %rd5801;
	xor.b64  	%rd5870, %rd5850, %rd5804;
	xor.b64  	%rd5871, %rd5842, %rd5807;
	xor.b64  	%rd5872, %rd5844, %rd5810;
	xor.b64  	%rd5873, %rd5846, %rd5813;
	xor.b64  	%rd5874, %rd5848, %rd5816;
	xor.b64  	%rd5875, %rd5850, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4041,%dummy}, %rd5857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4042}, %rd5857;
	}
	shf.r.wrap.b32 	%r4043, %r4042, %r4041, 20;
	shf.r.wrap.b32 	%r4044, %r4041, %r4042, 20;
	mov.b64 	%rd5876, {%r4044, %r4043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4045,%dummy}, %rd5863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4046}, %rd5863;
	}
	shf.r.wrap.b32 	%r4047, %r4046, %r4045, 21;
	shf.r.wrap.b32 	%r4048, %r4045, %r4046, 21;
	mov.b64 	%rd5877, {%r4048, %r4047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4049}, %rd5869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4050,%dummy}, %rd5869;
	}
	shf.l.wrap.b32 	%r4051, %r4050, %r4049, 21;
	shf.l.wrap.b32 	%r4052, %r4049, %r4050, 21;
	mov.b64 	%rd5878, {%r4052, %r4051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4053}, %rd5875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4054,%dummy}, %rd5875;
	}
	shf.l.wrap.b32 	%r4055, %r4054, %r4053, 14;
	shf.l.wrap.b32 	%r4056, %r4053, %r4054, 14;
	mov.b64 	%rd5879, {%r4056, %r4055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4057}, %rd5854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4058,%dummy}, %rd5854;
	}
	shf.l.wrap.b32 	%r4059, %r4058, %r4057, 28;
	shf.l.wrap.b32 	%r4060, %r4057, %r4058, 28;
	mov.b64 	%rd5880, {%r4060, %r4059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4061}, %rd5860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4062,%dummy}, %rd5860;
	}
	shf.l.wrap.b32 	%r4063, %r4062, %r4061, 20;
	shf.l.wrap.b32 	%r4064, %r4061, %r4062, 20;
	mov.b64 	%rd5881, {%r4064, %r4063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4065}, %rd5861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4066,%dummy}, %rd5861;
	}
	shf.l.wrap.b32 	%r4067, %r4066, %r4065, 3;
	shf.l.wrap.b32 	%r4068, %r4065, %r4066, 3;
	mov.b64 	%rd5882, {%r4068, %r4067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4069,%dummy}, %rd5867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4070}, %rd5867;
	}
	shf.r.wrap.b32 	%r4071, %r4070, %r4069, 19;
	shf.r.wrap.b32 	%r4072, %r4069, %r4070, 19;
	mov.b64 	%rd5883, {%r4072, %r4071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd5873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd5873;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 3;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 3;
	mov.b64 	%rd5884, {%r4076, %r4075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4077}, %rd5852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4078,%dummy}, %rd5852;
	}
	shf.l.wrap.b32 	%r4079, %r4078, %r4077, 1;
	shf.l.wrap.b32 	%r4080, %r4077, %r4078, 1;
	mov.b64 	%rd5885, {%r4080, %r4079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4081}, %rd5858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4082,%dummy}, %rd5858;
	}
	shf.l.wrap.b32 	%r4083, %r4082, %r4081, 6;
	shf.l.wrap.b32 	%r4084, %r4081, %r4082, 6;
	mov.b64 	%rd5886, {%r4084, %r4083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4085}, %rd5864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4086,%dummy}, %rd5864;
	}
	shf.l.wrap.b32 	%r4087, %r4086, %r4085, 25;
	shf.l.wrap.b32 	%r4088, %r4085, %r4086, 25;
	mov.b64 	%rd5887, {%r4088, %r4087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4089}, %rd5870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4090,%dummy}, %rd5870;
	}
	shf.l.wrap.b32 	%r4091, %r4090, %r4089, 8;
	shf.l.wrap.b32 	%r4092, %r4089, %r4090, 8;
	mov.b64 	%rd5888, {%r4092, %r4091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4093}, %rd5871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4094,%dummy}, %rd5871;
	}
	shf.l.wrap.b32 	%r4095, %r4094, %r4093, 18;
	shf.l.wrap.b32 	%r4096, %r4093, %r4094, 18;
	mov.b64 	%rd5889, {%r4096, %r4095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4097}, %rd5855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd5855;
	}
	shf.l.wrap.b32 	%r4099, %r4098, %r4097, 27;
	shf.l.wrap.b32 	%r4100, %r4097, %r4098, 27;
	mov.b64 	%rd5890, {%r4100, %r4099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4101,%dummy}, %rd5856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4102}, %rd5856;
	}
	shf.r.wrap.b32 	%r4103, %r4102, %r4101, 28;
	shf.r.wrap.b32 	%r4104, %r4101, %r4102, 28;
	mov.b64 	%rd5891, {%r4104, %r4103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4105}, %rd5862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4106,%dummy}, %rd5862;
	}
	shf.l.wrap.b32 	%r4107, %r4106, %r4105, 10;
	shf.l.wrap.b32 	%r4108, %r4105, %r4106, 10;
	mov.b64 	%rd5892, {%r4108, %r4107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4109}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4110,%dummy}, %rd5868;
	}
	shf.l.wrap.b32 	%r4111, %r4110, %r4109, 15;
	shf.l.wrap.b32 	%r4112, %r4109, %r4110, 15;
	mov.b64 	%rd5893, {%r4112, %r4111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4113,%dummy}, %rd5874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4114}, %rd5874;
	}
	shf.r.wrap.b32 	%r4115, %r4114, %r4113, 8;
	shf.r.wrap.b32 	%r4116, %r4113, %r4114, 8;
	mov.b64 	%rd5894, {%r4116, %r4115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4117,%dummy}, %rd5853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4118}, %rd5853;
	}
	shf.r.wrap.b32 	%r4119, %r4118, %r4117, 2;
	shf.r.wrap.b32 	%r4120, %r4117, %r4118, 2;
	mov.b64 	%rd5895, {%r4120, %r4119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4121,%dummy}, %rd5859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4122}, %rd5859;
	}
	shf.r.wrap.b32 	%r4123, %r4122, %r4121, 9;
	shf.r.wrap.b32 	%r4124, %r4121, %r4122, 9;
	mov.b64 	%rd5896, {%r4124, %r4123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd5865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd5865;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 25;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 25;
	mov.b64 	%rd5897, {%r4128, %r4127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4129,%dummy}, %rd5866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4130}, %rd5866;
	}
	shf.r.wrap.b32 	%r4131, %r4130, %r4129, 23;
	shf.r.wrap.b32 	%r4132, %r4129, %r4130, 23;
	mov.b64 	%rd5898, {%r4132, %r4131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4133}, %rd5872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4134,%dummy}, %rd5872;
	}
	shf.l.wrap.b32 	%r4135, %r4134, %r4133, 2;
	shf.l.wrap.b32 	%r4136, %r4133, %r4134, 2;
	mov.b64 	%rd5899, {%r4136, %r4135};
	not.b64 	%rd5900, %rd5876;
	and.b64  	%rd5901, %rd5877, %rd5900;
	xor.b64  	%rd5902, %rd5901, %rd5851;
	not.b64 	%rd5903, %rd5877;
	and.b64  	%rd5904, %rd5878, %rd5903;
	xor.b64  	%rd5905, %rd5904, %rd5876;
	not.b64 	%rd5906, %rd5878;
	and.b64  	%rd5907, %rd5879, %rd5906;
	xor.b64  	%rd5908, %rd5907, %rd5877;
	not.b64 	%rd5909, %rd5879;
	and.b64  	%rd5910, %rd5851, %rd5909;
	xor.b64  	%rd5911, %rd5910, %rd5878;
	not.b64 	%rd5912, %rd5851;
	and.b64  	%rd5913, %rd5876, %rd5912;
	xor.b64  	%rd5914, %rd5913, %rd5879;
	not.b64 	%rd5915, %rd5881;
	and.b64  	%rd5916, %rd5882, %rd5915;
	xor.b64  	%rd5917, %rd5916, %rd5880;
	not.b64 	%rd5918, %rd5882;
	and.b64  	%rd5919, %rd5883, %rd5918;
	xor.b64  	%rd5920, %rd5919, %rd5881;
	not.b64 	%rd5921, %rd5883;
	and.b64  	%rd5922, %rd5884, %rd5921;
	xor.b64  	%rd5923, %rd5922, %rd5882;
	not.b64 	%rd5924, %rd5884;
	and.b64  	%rd5925, %rd5880, %rd5924;
	xor.b64  	%rd5926, %rd5925, %rd5883;
	not.b64 	%rd5927, %rd5880;
	and.b64  	%rd5928, %rd5881, %rd5927;
	xor.b64  	%rd5929, %rd5928, %rd5884;
	not.b64 	%rd5930, %rd5886;
	and.b64  	%rd5931, %rd5887, %rd5930;
	xor.b64  	%rd5932, %rd5931, %rd5885;
	not.b64 	%rd5933, %rd5887;
	and.b64  	%rd5934, %rd5888, %rd5933;
	xor.b64  	%rd5935, %rd5934, %rd5886;
	not.b64 	%rd5936, %rd5888;
	and.b64  	%rd5937, %rd5889, %rd5936;
	xor.b64  	%rd5938, %rd5937, %rd5887;
	not.b64 	%rd5939, %rd5889;
	and.b64  	%rd5940, %rd5885, %rd5939;
	xor.b64  	%rd5941, %rd5940, %rd5888;
	not.b64 	%rd5942, %rd5885;
	and.b64  	%rd5943, %rd5886, %rd5942;
	xor.b64  	%rd5944, %rd5943, %rd5889;
	not.b64 	%rd5945, %rd5891;
	and.b64  	%rd5946, %rd5892, %rd5945;
	xor.b64  	%rd5947, %rd5946, %rd5890;
	not.b64 	%rd5948, %rd5892;
	and.b64  	%rd5949, %rd5893, %rd5948;
	xor.b64  	%rd5950, %rd5949, %rd5891;
	not.b64 	%rd5951, %rd5893;
	and.b64  	%rd5952, %rd5894, %rd5951;
	xor.b64  	%rd5953, %rd5952, %rd5892;
	not.b64 	%rd5954, %rd5894;
	and.b64  	%rd5955, %rd5890, %rd5954;
	xor.b64  	%rd5956, %rd5955, %rd5893;
	not.b64 	%rd5957, %rd5890;
	and.b64  	%rd5958, %rd5891, %rd5957;
	xor.b64  	%rd5959, %rd5958, %rd5894;
	not.b64 	%rd5960, %rd5896;
	and.b64  	%rd5961, %rd5897, %rd5960;
	xor.b64  	%rd5962, %rd5961, %rd5895;
	not.b64 	%rd5963, %rd5897;
	and.b64  	%rd5964, %rd5898, %rd5963;
	xor.b64  	%rd5965, %rd5964, %rd5896;
	not.b64 	%rd5966, %rd5898;
	and.b64  	%rd5967, %rd5899, %rd5966;
	xor.b64  	%rd5968, %rd5967, %rd5897;
	not.b64 	%rd5969, %rd5899;
	and.b64  	%rd5970, %rd5895, %rd5969;
	xor.b64  	%rd5971, %rd5970, %rd5898;
	not.b64 	%rd5972, %rd5895;
	and.b64  	%rd5973, %rd5896, %rd5972;
	xor.b64  	%rd5974, %rd5973, %rd5899;
	xor.b64  	%rd5975, %rd5902, %rd26;
	xor.b64  	%rd5976, %rd5917, %rd5975;
	xor.b64  	%rd5977, %rd5976, %rd5932;
	xor.b64  	%rd5978, %rd5977, %rd5947;
	xor.b64  	%rd5979, %rd5978, %rd5962;
	xor.b64  	%rd5980, %rd5920, %rd5905;
	xor.b64  	%rd5981, %rd5980, %rd5935;
	xor.b64  	%rd5982, %rd5981, %rd5950;
	xor.b64  	%rd5983, %rd5982, %rd5965;
	xor.b64  	%rd5984, %rd5923, %rd5908;
	xor.b64  	%rd5985, %rd5984, %rd5938;
	xor.b64  	%rd5986, %rd5985, %rd5953;
	xor.b64  	%rd5987, %rd5986, %rd5968;
	xor.b64  	%rd5988, %rd5926, %rd5911;
	xor.b64  	%rd5989, %rd5988, %rd5941;
	xor.b64  	%rd5990, %rd5989, %rd5956;
	xor.b64  	%rd5991, %rd5990, %rd5971;
	xor.b64  	%rd5992, %rd5929, %rd5914;
	xor.b64  	%rd5993, %rd5992, %rd5944;
	xor.b64  	%rd5994, %rd5993, %rd5959;
	xor.b64  	%rd5995, %rd5994, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4137}, %rd5983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4138,%dummy}, %rd5983;
	}
	shf.l.wrap.b32 	%r4139, %r4138, %r4137, 1;
	shf.l.wrap.b32 	%r4140, %r4137, %r4138, 1;
	mov.b64 	%rd5996, {%r4140, %r4139};
	xor.b64  	%rd5997, %rd5995, %rd5996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4141}, %rd5987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4142,%dummy}, %rd5987;
	}
	shf.l.wrap.b32 	%r4143, %r4142, %r4141, 1;
	shf.l.wrap.b32 	%r4144, %r4141, %r4142, 1;
	mov.b64 	%rd5998, {%r4144, %r4143};
	xor.b64  	%rd5999, %rd5998, %rd5979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4145}, %rd5991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4146,%dummy}, %rd5991;
	}
	shf.l.wrap.b32 	%r4147, %r4146, %r4145, 1;
	shf.l.wrap.b32 	%r4148, %r4145, %r4146, 1;
	mov.b64 	%rd6000, {%r4148, %r4147};
	xor.b64  	%rd6001, %rd6000, %rd5983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4149}, %rd5995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4150,%dummy}, %rd5995;
	}
	shf.l.wrap.b32 	%r4151, %r4150, %r4149, 1;
	shf.l.wrap.b32 	%r4152, %r4149, %r4150, 1;
	mov.b64 	%rd6002, {%r4152, %r4151};
	xor.b64  	%rd6003, %rd6002, %rd5987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4153}, %rd5979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4154,%dummy}, %rd5979;
	}
	shf.l.wrap.b32 	%r4155, %r4154, %r4153, 1;
	shf.l.wrap.b32 	%r4156, %r4153, %r4154, 1;
	mov.b64 	%rd6004, {%r4156, %r4155};
	xor.b64  	%rd6005, %rd5991, %rd6004;
	xor.b64  	%rd6006, %rd5997, %rd5975;
	xor.b64  	%rd6007, %rd5999, %rd5905;
	xor.b64  	%rd6008, %rd6001, %rd5908;
	xor.b64  	%rd6009, %rd6003, %rd5911;
	xor.b64  	%rd6010, %rd6005, %rd5914;
	xor.b64  	%rd6011, %rd5997, %rd5917;
	xor.b64  	%rd6012, %rd5999, %rd5920;
	xor.b64  	%rd6013, %rd6001, %rd5923;
	xor.b64  	%rd6014, %rd6003, %rd5926;
	xor.b64  	%rd6015, %rd6005, %rd5929;
	xor.b64  	%rd6016, %rd5997, %rd5932;
	xor.b64  	%rd6017, %rd5999, %rd5935;
	xor.b64  	%rd6018, %rd6001, %rd5938;
	xor.b64  	%rd6019, %rd6003, %rd5941;
	xor.b64  	%rd6020, %rd6005, %rd5944;
	xor.b64  	%rd6021, %rd5997, %rd5947;
	xor.b64  	%rd6022, %rd5999, %rd5950;
	xor.b64  	%rd6023, %rd6001, %rd5953;
	xor.b64  	%rd6024, %rd6003, %rd5956;
	xor.b64  	%rd6025, %rd6005, %rd5959;
	xor.b64  	%rd6026, %rd5997, %rd5962;
	xor.b64  	%rd6027, %rd5999, %rd5965;
	xor.b64  	%rd6028, %rd6001, %rd5968;
	xor.b64  	%rd6029, %rd6003, %rd5971;
	xor.b64  	%rd6030, %rd6005, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4157,%dummy}, %rd6012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4158}, %rd6012;
	}
	shf.r.wrap.b32 	%r4159, %r4158, %r4157, 20;
	shf.r.wrap.b32 	%r4160, %r4157, %r4158, 20;
	mov.b64 	%rd6031, {%r4160, %r4159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4161,%dummy}, %rd6018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4162}, %rd6018;
	}
	shf.r.wrap.b32 	%r4163, %r4162, %r4161, 21;
	shf.r.wrap.b32 	%r4164, %r4161, %r4162, 21;
	mov.b64 	%rd6032, {%r4164, %r4163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4165}, %rd6024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4166,%dummy}, %rd6024;
	}
	shf.l.wrap.b32 	%r4167, %r4166, %r4165, 21;
	shf.l.wrap.b32 	%r4168, %r4165, %r4166, 21;
	mov.b64 	%rd6033, {%r4168, %r4167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4169}, %rd6030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4170,%dummy}, %rd6030;
	}
	shf.l.wrap.b32 	%r4171, %r4170, %r4169, 14;
	shf.l.wrap.b32 	%r4172, %r4169, %r4170, 14;
	mov.b64 	%rd6034, {%r4172, %r4171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4173}, %rd6009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4174,%dummy}, %rd6009;
	}
	shf.l.wrap.b32 	%r4175, %r4174, %r4173, 28;
	shf.l.wrap.b32 	%r4176, %r4173, %r4174, 28;
	mov.b64 	%rd6035, {%r4176, %r4175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4177}, %rd6015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4178,%dummy}, %rd6015;
	}
	shf.l.wrap.b32 	%r4179, %r4178, %r4177, 20;
	shf.l.wrap.b32 	%r4180, %r4177, %r4178, 20;
	mov.b64 	%rd6036, {%r4180, %r4179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4181}, %rd6016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4182,%dummy}, %rd6016;
	}
	shf.l.wrap.b32 	%r4183, %r4182, %r4181, 3;
	shf.l.wrap.b32 	%r4184, %r4181, %r4182, 3;
	mov.b64 	%rd6037, {%r4184, %r4183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4185,%dummy}, %rd6022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4186}, %rd6022;
	}
	shf.r.wrap.b32 	%r4187, %r4186, %r4185, 19;
	shf.r.wrap.b32 	%r4188, %r4185, %r4186, 19;
	mov.b64 	%rd6038, {%r4188, %r4187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4189,%dummy}, %rd6028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4190}, %rd6028;
	}
	shf.r.wrap.b32 	%r4191, %r4190, %r4189, 3;
	shf.r.wrap.b32 	%r4192, %r4189, %r4190, 3;
	mov.b64 	%rd6039, {%r4192, %r4191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4193}, %rd6007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4194,%dummy}, %rd6007;
	}
	shf.l.wrap.b32 	%r4195, %r4194, %r4193, 1;
	shf.l.wrap.b32 	%r4196, %r4193, %r4194, 1;
	mov.b64 	%rd6040, {%r4196, %r4195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4197}, %rd6013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4198,%dummy}, %rd6013;
	}
	shf.l.wrap.b32 	%r4199, %r4198, %r4197, 6;
	shf.l.wrap.b32 	%r4200, %r4197, %r4198, 6;
	mov.b64 	%rd6041, {%r4200, %r4199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4201}, %rd6019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4202,%dummy}, %rd6019;
	}
	shf.l.wrap.b32 	%r4203, %r4202, %r4201, 25;
	shf.l.wrap.b32 	%r4204, %r4201, %r4202, 25;
	mov.b64 	%rd6042, {%r4204, %r4203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4205}, %rd6025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4206,%dummy}, %rd6025;
	}
	shf.l.wrap.b32 	%r4207, %r4206, %r4205, 8;
	shf.l.wrap.b32 	%r4208, %r4205, %r4206, 8;
	mov.b64 	%rd6043, {%r4208, %r4207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4209}, %rd6026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4210,%dummy}, %rd6026;
	}
	shf.l.wrap.b32 	%r4211, %r4210, %r4209, 18;
	shf.l.wrap.b32 	%r4212, %r4209, %r4210, 18;
	mov.b64 	%rd6044, {%r4212, %r4211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4213}, %rd6010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4214,%dummy}, %rd6010;
	}
	shf.l.wrap.b32 	%r4215, %r4214, %r4213, 27;
	shf.l.wrap.b32 	%r4216, %r4213, %r4214, 27;
	mov.b64 	%rd6045, {%r4216, %r4215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4217,%dummy}, %rd6011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4218}, %rd6011;
	}
	shf.r.wrap.b32 	%r4219, %r4218, %r4217, 28;
	shf.r.wrap.b32 	%r4220, %r4217, %r4218, 28;
	mov.b64 	%rd6046, {%r4220, %r4219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4221}, %rd6017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4222,%dummy}, %rd6017;
	}
	shf.l.wrap.b32 	%r4223, %r4222, %r4221, 10;
	shf.l.wrap.b32 	%r4224, %r4221, %r4222, 10;
	mov.b64 	%rd6047, {%r4224, %r4223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4225}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4226,%dummy}, %rd6023;
	}
	shf.l.wrap.b32 	%r4227, %r4226, %r4225, 15;
	shf.l.wrap.b32 	%r4228, %r4225, %r4226, 15;
	mov.b64 	%rd6048, {%r4228, %r4227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd6029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd6029;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 8;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 8;
	mov.b64 	%rd6049, {%r4232, %r4231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4233,%dummy}, %rd6008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4234}, %rd6008;
	}
	shf.r.wrap.b32 	%r4235, %r4234, %r4233, 2;
	shf.r.wrap.b32 	%r4236, %r4233, %r4234, 2;
	mov.b64 	%rd6050, {%r4236, %r4235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4237,%dummy}, %rd6014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4238}, %rd6014;
	}
	shf.r.wrap.b32 	%r4239, %r4238, %r4237, 9;
	shf.r.wrap.b32 	%r4240, %r4237, %r4238, 9;
	mov.b64 	%rd6051, {%r4240, %r4239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4241,%dummy}, %rd6020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4242}, %rd6020;
	}
	shf.r.wrap.b32 	%r4243, %r4242, %r4241, 25;
	shf.r.wrap.b32 	%r4244, %r4241, %r4242, 25;
	mov.b64 	%rd6052, {%r4244, %r4243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4245,%dummy}, %rd6021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4246}, %rd6021;
	}
	shf.r.wrap.b32 	%r4247, %r4246, %r4245, 23;
	shf.r.wrap.b32 	%r4248, %r4245, %r4246, 23;
	mov.b64 	%rd6053, {%r4248, %r4247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4249}, %rd6027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4250,%dummy}, %rd6027;
	}
	shf.l.wrap.b32 	%r4251, %r4250, %r4249, 2;
	shf.l.wrap.b32 	%r4252, %r4249, %r4250, 2;
	mov.b64 	%rd6054, {%r4252, %r4251};
	not.b64 	%rd6055, %rd6031;
	and.b64  	%rd6056, %rd6032, %rd6055;
	xor.b64  	%rd6057, %rd6056, %rd6006;
	not.b64 	%rd6058, %rd6032;
	and.b64  	%rd6059, %rd6033, %rd6058;
	xor.b64  	%rd6060, %rd6059, %rd6031;
	not.b64 	%rd6061, %rd6033;
	and.b64  	%rd6062, %rd6034, %rd6061;
	xor.b64  	%rd6063, %rd6062, %rd6032;
	not.b64 	%rd6064, %rd6034;
	and.b64  	%rd6065, %rd6006, %rd6064;
	xor.b64  	%rd6066, %rd6065, %rd6033;
	not.b64 	%rd6067, %rd6006;
	and.b64  	%rd6068, %rd6031, %rd6067;
	xor.b64  	%rd6069, %rd6068, %rd6034;
	not.b64 	%rd6070, %rd6036;
	and.b64  	%rd6071, %rd6037, %rd6070;
	xor.b64  	%rd6072, %rd6071, %rd6035;
	not.b64 	%rd6073, %rd6037;
	and.b64  	%rd6074, %rd6038, %rd6073;
	xor.b64  	%rd6075, %rd6074, %rd6036;
	not.b64 	%rd6076, %rd6038;
	and.b64  	%rd6077, %rd6039, %rd6076;
	xor.b64  	%rd6078, %rd6077, %rd6037;
	not.b64 	%rd6079, %rd6039;
	and.b64  	%rd6080, %rd6035, %rd6079;
	xor.b64  	%rd6081, %rd6080, %rd6038;
	not.b64 	%rd6082, %rd6035;
	and.b64  	%rd6083, %rd6036, %rd6082;
	xor.b64  	%rd6084, %rd6083, %rd6039;
	not.b64 	%rd6085, %rd6041;
	and.b64  	%rd6086, %rd6042, %rd6085;
	xor.b64  	%rd6087, %rd6086, %rd6040;
	not.b64 	%rd6088, %rd6042;
	and.b64  	%rd6089, %rd6043, %rd6088;
	xor.b64  	%rd6090, %rd6089, %rd6041;
	not.b64 	%rd6091, %rd6043;
	and.b64  	%rd6092, %rd6044, %rd6091;
	xor.b64  	%rd6093, %rd6092, %rd6042;
	not.b64 	%rd6094, %rd6044;
	and.b64  	%rd6095, %rd6040, %rd6094;
	xor.b64  	%rd6096, %rd6095, %rd6043;
	not.b64 	%rd6097, %rd6040;
	and.b64  	%rd6098, %rd6041, %rd6097;
	xor.b64  	%rd6099, %rd6098, %rd6044;
	not.b64 	%rd6100, %rd6046;
	and.b64  	%rd6101, %rd6047, %rd6100;
	xor.b64  	%rd6102, %rd6101, %rd6045;
	not.b64 	%rd6103, %rd6047;
	and.b64  	%rd6104, %rd6048, %rd6103;
	xor.b64  	%rd6105, %rd6104, %rd6046;
	not.b64 	%rd6106, %rd6048;
	and.b64  	%rd6107, %rd6049, %rd6106;
	xor.b64  	%rd6108, %rd6107, %rd6047;
	not.b64 	%rd6109, %rd6049;
	and.b64  	%rd6110, %rd6045, %rd6109;
	xor.b64  	%rd6111, %rd6110, %rd6048;
	not.b64 	%rd6112, %rd6045;
	and.b64  	%rd6113, %rd6046, %rd6112;
	xor.b64  	%rd6114, %rd6113, %rd6049;
	not.b64 	%rd6115, %rd6051;
	and.b64  	%rd6116, %rd6052, %rd6115;
	xor.b64  	%rd6117, %rd6116, %rd6050;
	not.b64 	%rd6118, %rd6052;
	and.b64  	%rd6119, %rd6053, %rd6118;
	xor.b64  	%rd6120, %rd6119, %rd6051;
	not.b64 	%rd6121, %rd6053;
	and.b64  	%rd6122, %rd6054, %rd6121;
	xor.b64  	%rd6123, %rd6122, %rd6052;
	not.b64 	%rd6124, %rd6054;
	and.b64  	%rd6125, %rd6050, %rd6124;
	xor.b64  	%rd6126, %rd6125, %rd6053;
	not.b64 	%rd6127, %rd6050;
	and.b64  	%rd6128, %rd6051, %rd6127;
	xor.b64  	%rd6129, %rd6128, %rd6054;
	xor.b64  	%rd6130, %rd6057, %rd27;
	xor.b64  	%rd6131, %rd6072, %rd6130;
	xor.b64  	%rd6132, %rd6131, %rd6087;
	xor.b64  	%rd6133, %rd6132, %rd6102;
	xor.b64  	%rd6134, %rd6133, %rd6117;
	xor.b64  	%rd6135, %rd6075, %rd6060;
	xor.b64  	%rd6136, %rd6135, %rd6090;
	xor.b64  	%rd6137, %rd6136, %rd6105;
	xor.b64  	%rd6138, %rd6137, %rd6120;
	xor.b64  	%rd6139, %rd6078, %rd6063;
	xor.b64  	%rd6140, %rd6139, %rd6093;
	xor.b64  	%rd6141, %rd6140, %rd6108;
	xor.b64  	%rd6142, %rd6141, %rd6123;
	xor.b64  	%rd6143, %rd6081, %rd6066;
	xor.b64  	%rd6144, %rd6143, %rd6096;
	xor.b64  	%rd6145, %rd6144, %rd6111;
	xor.b64  	%rd6146, %rd6145, %rd6126;
	xor.b64  	%rd6147, %rd6084, %rd6069;
	xor.b64  	%rd6148, %rd6147, %rd6099;
	xor.b64  	%rd6149, %rd6148, %rd6114;
	xor.b64  	%rd6150, %rd6149, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4253}, %rd6138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4254,%dummy}, %rd6138;
	}
	shf.l.wrap.b32 	%r4255, %r4254, %r4253, 1;
	shf.l.wrap.b32 	%r4256, %r4253, %r4254, 1;
	mov.b64 	%rd6151, {%r4256, %r4255};
	xor.b64  	%rd6152, %rd6150, %rd6151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4257}, %rd6142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd6142;
	}
	shf.l.wrap.b32 	%r4259, %r4258, %r4257, 1;
	shf.l.wrap.b32 	%r4260, %r4257, %r4258, 1;
	mov.b64 	%rd6153, {%r4260, %r4259};
	xor.b64  	%rd6154, %rd6153, %rd6134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4261}, %rd6146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4262,%dummy}, %rd6146;
	}
	shf.l.wrap.b32 	%r4263, %r4262, %r4261, 1;
	shf.l.wrap.b32 	%r4264, %r4261, %r4262, 1;
	mov.b64 	%rd6155, {%r4264, %r4263};
	xor.b64  	%rd6156, %rd6155, %rd6138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4265}, %rd6150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd6150;
	}
	shf.l.wrap.b32 	%r4267, %r4266, %r4265, 1;
	shf.l.wrap.b32 	%r4268, %r4265, %r4266, 1;
	mov.b64 	%rd6157, {%r4268, %r4267};
	xor.b64  	%rd6158, %rd6157, %rd6142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4269}, %rd6134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4270,%dummy}, %rd6134;
	}
	shf.l.wrap.b32 	%r4271, %r4270, %r4269, 1;
	shf.l.wrap.b32 	%r4272, %r4269, %r4270, 1;
	mov.b64 	%rd6159, {%r4272, %r4271};
	xor.b64  	%rd6160, %rd6146, %rd6159;
	xor.b64  	%rd6161, %rd6152, %rd6130;
	xor.b64  	%rd6162, %rd6154, %rd6060;
	xor.b64  	%rd6163, %rd6156, %rd6063;
	xor.b64  	%rd6164, %rd6158, %rd6066;
	xor.b64  	%rd6165, %rd6160, %rd6069;
	xor.b64  	%rd6166, %rd6152, %rd6072;
	xor.b64  	%rd6167, %rd6154, %rd6075;
	xor.b64  	%rd6168, %rd6156, %rd6078;
	xor.b64  	%rd6169, %rd6158, %rd6081;
	xor.b64  	%rd6170, %rd6160, %rd6084;
	xor.b64  	%rd6171, %rd6152, %rd6087;
	xor.b64  	%rd6172, %rd6154, %rd6090;
	xor.b64  	%rd6173, %rd6156, %rd6093;
	xor.b64  	%rd6174, %rd6158, %rd6096;
	xor.b64  	%rd6175, %rd6160, %rd6099;
	xor.b64  	%rd6176, %rd6152, %rd6102;
	xor.b64  	%rd6177, %rd6154, %rd6105;
	xor.b64  	%rd6178, %rd6156, %rd6108;
	xor.b64  	%rd6179, %rd6158, %rd6111;
	xor.b64  	%rd6180, %rd6160, %rd6114;
	xor.b64  	%rd6181, %rd6152, %rd6117;
	xor.b64  	%rd6182, %rd6154, %rd6120;
	xor.b64  	%rd6183, %rd6156, %rd6123;
	xor.b64  	%rd6184, %rd6158, %rd6126;
	xor.b64  	%rd6185, %rd6160, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4273,%dummy}, %rd6167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4274}, %rd6167;
	}
	shf.r.wrap.b32 	%r4275, %r4274, %r4273, 20;
	shf.r.wrap.b32 	%r4276, %r4273, %r4274, 20;
	mov.b64 	%rd6186, {%r4276, %r4275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4277,%dummy}, %rd6173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4278}, %rd6173;
	}
	shf.r.wrap.b32 	%r4279, %r4278, %r4277, 21;
	shf.r.wrap.b32 	%r4280, %r4277, %r4278, 21;
	mov.b64 	%rd6187, {%r4280, %r4279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4281}, %rd6179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4282,%dummy}, %rd6179;
	}
	shf.l.wrap.b32 	%r4283, %r4282, %r4281, 21;
	shf.l.wrap.b32 	%r4284, %r4281, %r4282, 21;
	mov.b64 	%rd6188, {%r4284, %r4283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4285}, %rd6185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4286,%dummy}, %rd6185;
	}
	shf.l.wrap.b32 	%r4287, %r4286, %r4285, 14;
	shf.l.wrap.b32 	%r4288, %r4285, %r4286, 14;
	mov.b64 	%rd6189, {%r4288, %r4287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4289}, %rd6164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4290,%dummy}, %rd6164;
	}
	shf.l.wrap.b32 	%r4291, %r4290, %r4289, 28;
	shf.l.wrap.b32 	%r4292, %r4289, %r4290, 28;
	mov.b64 	%rd6190, {%r4292, %r4291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4293}, %rd6170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4294,%dummy}, %rd6170;
	}
	shf.l.wrap.b32 	%r4295, %r4294, %r4293, 20;
	shf.l.wrap.b32 	%r4296, %r4293, %r4294, 20;
	mov.b64 	%rd6191, {%r4296, %r4295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4297}, %rd6171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4298,%dummy}, %rd6171;
	}
	shf.l.wrap.b32 	%r4299, %r4298, %r4297, 3;
	shf.l.wrap.b32 	%r4300, %r4297, %r4298, 3;
	mov.b64 	%rd6192, {%r4300, %r4299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4301,%dummy}, %rd6177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4302}, %rd6177;
	}
	shf.r.wrap.b32 	%r4303, %r4302, %r4301, 19;
	shf.r.wrap.b32 	%r4304, %r4301, %r4302, 19;
	mov.b64 	%rd6193, {%r4304, %r4303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4305,%dummy}, %rd6183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4306}, %rd6183;
	}
	shf.r.wrap.b32 	%r4307, %r4306, %r4305, 3;
	shf.r.wrap.b32 	%r4308, %r4305, %r4306, 3;
	mov.b64 	%rd6194, {%r4308, %r4307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4309}, %rd6162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4310,%dummy}, %rd6162;
	}
	shf.l.wrap.b32 	%r4311, %r4310, %r4309, 1;
	shf.l.wrap.b32 	%r4312, %r4309, %r4310, 1;
	mov.b64 	%rd6195, {%r4312, %r4311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4313}, %rd6168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4314,%dummy}, %rd6168;
	}
	shf.l.wrap.b32 	%r4315, %r4314, %r4313, 6;
	shf.l.wrap.b32 	%r4316, %r4313, %r4314, 6;
	mov.b64 	%rd6196, {%r4316, %r4315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4317}, %rd6174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4318,%dummy}, %rd6174;
	}
	shf.l.wrap.b32 	%r4319, %r4318, %r4317, 25;
	shf.l.wrap.b32 	%r4320, %r4317, %r4318, 25;
	mov.b64 	%rd6197, {%r4320, %r4319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4321}, %rd6180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4322,%dummy}, %rd6180;
	}
	shf.l.wrap.b32 	%r4323, %r4322, %r4321, 8;
	shf.l.wrap.b32 	%r4324, %r4321, %r4322, 8;
	mov.b64 	%rd6198, {%r4324, %r4323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4325}, %rd6181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4326,%dummy}, %rd6181;
	}
	shf.l.wrap.b32 	%r4327, %r4326, %r4325, 18;
	shf.l.wrap.b32 	%r4328, %r4325, %r4326, 18;
	mov.b64 	%rd6199, {%r4328, %r4327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4329}, %rd6165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4330,%dummy}, %rd6165;
	}
	shf.l.wrap.b32 	%r4331, %r4330, %r4329, 27;
	shf.l.wrap.b32 	%r4332, %r4329, %r4330, 27;
	mov.b64 	%rd6200, {%r4332, %r4331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4333,%dummy}, %rd6166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4334}, %rd6166;
	}
	shf.r.wrap.b32 	%r4335, %r4334, %r4333, 28;
	shf.r.wrap.b32 	%r4336, %r4333, %r4334, 28;
	mov.b64 	%rd6201, {%r4336, %r4335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd6172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4338,%dummy}, %rd6172;
	}
	shf.l.wrap.b32 	%r4339, %r4338, %r4337, 10;
	shf.l.wrap.b32 	%r4340, %r4337, %r4338, 10;
	mov.b64 	%rd6202, {%r4340, %r4339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4341}, %rd6178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4342,%dummy}, %rd6178;
	}
	shf.l.wrap.b32 	%r4343, %r4342, %r4341, 15;
	shf.l.wrap.b32 	%r4344, %r4341, %r4342, 15;
	mov.b64 	%rd6203, {%r4344, %r4343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4345,%dummy}, %rd6184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4346}, %rd6184;
	}
	shf.r.wrap.b32 	%r4347, %r4346, %r4345, 8;
	shf.r.wrap.b32 	%r4348, %r4345, %r4346, 8;
	mov.b64 	%rd6204, {%r4348, %r4347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4349,%dummy}, %rd6163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4350}, %rd6163;
	}
	shf.r.wrap.b32 	%r4351, %r4350, %r4349, 2;
	shf.r.wrap.b32 	%r4352, %r4349, %r4350, 2;
	mov.b64 	%rd6205, {%r4352, %r4351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4353,%dummy}, %rd6169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4354}, %rd6169;
	}
	shf.r.wrap.b32 	%r4355, %r4354, %r4353, 9;
	shf.r.wrap.b32 	%r4356, %r4353, %r4354, 9;
	mov.b64 	%rd6206, {%r4356, %r4355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4357,%dummy}, %rd6175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4358}, %rd6175;
	}
	shf.r.wrap.b32 	%r4359, %r4358, %r4357, 25;
	shf.r.wrap.b32 	%r4360, %r4357, %r4358, 25;
	mov.b64 	%rd6207, {%r4360, %r4359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4361,%dummy}, %rd6176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4362}, %rd6176;
	}
	shf.r.wrap.b32 	%r4363, %r4362, %r4361, 23;
	shf.r.wrap.b32 	%r4364, %r4361, %r4362, 23;
	mov.b64 	%rd6208, {%r4364, %r4363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4365}, %rd6182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4366,%dummy}, %rd6182;
	}
	shf.l.wrap.b32 	%r4367, %r4366, %r4365, 2;
	shf.l.wrap.b32 	%r4368, %r4365, %r4366, 2;
	mov.b64 	%rd6209, {%r4368, %r4367};
	not.b64 	%rd6210, %rd6186;
	and.b64  	%rd6211, %rd6187, %rd6210;
	xor.b64  	%rd6212, %rd6211, %rd6161;
	not.b64 	%rd6213, %rd6187;
	and.b64  	%rd6214, %rd6188, %rd6213;
	xor.b64  	%rd6215, %rd6214, %rd6186;
	not.b64 	%rd6216, %rd6188;
	and.b64  	%rd6217, %rd6189, %rd6216;
	xor.b64  	%rd6218, %rd6217, %rd6187;
	not.b64 	%rd6219, %rd6189;
	and.b64  	%rd6220, %rd6161, %rd6219;
	xor.b64  	%rd6221, %rd6220, %rd6188;
	not.b64 	%rd6222, %rd6161;
	and.b64  	%rd6223, %rd6186, %rd6222;
	xor.b64  	%rd6224, %rd6223, %rd6189;
	not.b64 	%rd6225, %rd6191;
	and.b64  	%rd6226, %rd6192, %rd6225;
	xor.b64  	%rd6227, %rd6226, %rd6190;
	not.b64 	%rd6228, %rd6192;
	and.b64  	%rd6229, %rd6193, %rd6228;
	xor.b64  	%rd6230, %rd6229, %rd6191;
	not.b64 	%rd6231, %rd6193;
	and.b64  	%rd6232, %rd6194, %rd6231;
	xor.b64  	%rd6233, %rd6232, %rd6192;
	not.b64 	%rd6234, %rd6194;
	and.b64  	%rd6235, %rd6190, %rd6234;
	xor.b64  	%rd6236, %rd6235, %rd6193;
	not.b64 	%rd6237, %rd6190;
	and.b64  	%rd6238, %rd6191, %rd6237;
	xor.b64  	%rd6239, %rd6238, %rd6194;
	not.b64 	%rd6240, %rd6196;
	and.b64  	%rd6241, %rd6197, %rd6240;
	xor.b64  	%rd6242, %rd6241, %rd6195;
	not.b64 	%rd6243, %rd6197;
	and.b64  	%rd6244, %rd6198, %rd6243;
	xor.b64  	%rd6245, %rd6244, %rd6196;
	not.b64 	%rd6246, %rd6198;
	and.b64  	%rd6247, %rd6199, %rd6246;
	xor.b64  	%rd6248, %rd6247, %rd6197;
	not.b64 	%rd6249, %rd6199;
	and.b64  	%rd6250, %rd6195, %rd6249;
	xor.b64  	%rd6251, %rd6250, %rd6198;
	not.b64 	%rd6252, %rd6195;
	and.b64  	%rd6253, %rd6196, %rd6252;
	xor.b64  	%rd6254, %rd6253, %rd6199;
	not.b64 	%rd6255, %rd6201;
	and.b64  	%rd6256, %rd6202, %rd6255;
	xor.b64  	%rd6257, %rd6256, %rd6200;
	not.b64 	%rd6258, %rd6202;
	and.b64  	%rd6259, %rd6203, %rd6258;
	xor.b64  	%rd6260, %rd6259, %rd6201;
	not.b64 	%rd6261, %rd6203;
	and.b64  	%rd6262, %rd6204, %rd6261;
	xor.b64  	%rd6263, %rd6262, %rd6202;
	not.b64 	%rd6264, %rd6204;
	and.b64  	%rd6265, %rd6200, %rd6264;
	xor.b64  	%rd6266, %rd6265, %rd6203;
	not.b64 	%rd6267, %rd6200;
	and.b64  	%rd6268, %rd6201, %rd6267;
	xor.b64  	%rd6269, %rd6268, %rd6204;
	not.b64 	%rd6270, %rd6206;
	and.b64  	%rd6271, %rd6207, %rd6270;
	xor.b64  	%rd6272, %rd6271, %rd6205;
	not.b64 	%rd6273, %rd6207;
	and.b64  	%rd6274, %rd6208, %rd6273;
	xor.b64  	%rd6275, %rd6274, %rd6206;
	not.b64 	%rd6276, %rd6208;
	and.b64  	%rd6277, %rd6209, %rd6276;
	xor.b64  	%rd6278, %rd6277, %rd6207;
	not.b64 	%rd6279, %rd6209;
	and.b64  	%rd6280, %rd6205, %rd6279;
	xor.b64  	%rd6281, %rd6280, %rd6208;
	not.b64 	%rd6282, %rd6205;
	and.b64  	%rd6283, %rd6206, %rd6282;
	xor.b64  	%rd6284, %rd6283, %rd6209;
	xor.b64  	%rd6285, %rd6212, %rd28;
	xor.b64  	%rd6286, %rd6227, %rd6285;
	xor.b64  	%rd6287, %rd6286, %rd6242;
	xor.b64  	%rd6288, %rd6287, %rd6257;
	xor.b64  	%rd6289, %rd6288, %rd6272;
	xor.b64  	%rd6290, %rd6230, %rd6215;
	xor.b64  	%rd6291, %rd6290, %rd6245;
	xor.b64  	%rd6292, %rd6291, %rd6260;
	xor.b64  	%rd6293, %rd6292, %rd6275;
	xor.b64  	%rd6294, %rd6233, %rd6218;
	xor.b64  	%rd6295, %rd6294, %rd6248;
	xor.b64  	%rd6296, %rd6295, %rd6263;
	xor.b64  	%rd6297, %rd6296, %rd6278;
	xor.b64  	%rd6298, %rd6236, %rd6221;
	xor.b64  	%rd6299, %rd6298, %rd6251;
	xor.b64  	%rd6300, %rd6299, %rd6266;
	xor.b64  	%rd6301, %rd6300, %rd6281;
	xor.b64  	%rd6302, %rd6239, %rd6224;
	xor.b64  	%rd6303, %rd6302, %rd6254;
	xor.b64  	%rd6304, %rd6303, %rd6269;
	xor.b64  	%rd6305, %rd6304, %rd6284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4369}, %rd6293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4370,%dummy}, %rd6293;
	}
	shf.l.wrap.b32 	%r4371, %r4370, %r4369, 1;
	shf.l.wrap.b32 	%r4372, %r4369, %r4370, 1;
	mov.b64 	%rd6306, {%r4372, %r4371};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4373}, %rd6297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4374,%dummy}, %rd6297;
	}
	shf.l.wrap.b32 	%r4375, %r4374, %r4373, 1;
	shf.l.wrap.b32 	%r4376, %r4373, %r4374, 1;
	mov.b64 	%rd6308, {%r4376, %r4375};
	xor.b64  	%rd6309, %rd6308, %rd6289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4377}, %rd6301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4378,%dummy}, %rd6301;
	}
	shf.l.wrap.b32 	%r4379, %r4378, %r4377, 1;
	shf.l.wrap.b32 	%r4380, %r4377, %r4378, 1;
	mov.b64 	%rd6310, {%r4380, %r4379};
	xor.b64  	%rd6311, %rd6310, %rd6293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4381}, %rd6305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4382,%dummy}, %rd6305;
	}
	shf.l.wrap.b32 	%r4383, %r4382, %r4381, 1;
	shf.l.wrap.b32 	%r4384, %r4381, %r4382, 1;
	mov.b64 	%rd6312, {%r4384, %r4383};
	xor.b64  	%rd6313, %rd6312, %rd6297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4385}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4386,%dummy}, %rd6289;
	}
	shf.l.wrap.b32 	%r4387, %r4386, %r4385, 1;
	shf.l.wrap.b32 	%r4388, %r4385, %r4386, 1;
	mov.b64 	%rd6314, {%r4388, %r4387};
	xor.b64  	%rd6315, %rd6301, %rd6314;
	xor.b64  	%rd6316, %rd6307, %rd6285;
	xor.b64  	%rd6317, %rd6309, %rd6215;
	xor.b64  	%rd6318, %rd6311, %rd6218;
	xor.b64  	%rd6319, %rd6313, %rd6221;
	xor.b64  	%rd6320, %rd6315, %rd6224;
	xor.b64  	%rd6321, %rd6307, %rd6227;
	xor.b64  	%rd6322, %rd6309, %rd6230;
	xor.b64  	%rd6323, %rd6311, %rd6233;
	xor.b64  	%rd6324, %rd6313, %rd6236;
	xor.b64  	%rd6325, %rd6315, %rd6239;
	xor.b64  	%rd6326, %rd6307, %rd6242;
	xor.b64  	%rd6327, %rd6309, %rd6245;
	xor.b64  	%rd6328, %rd6311, %rd6248;
	xor.b64  	%rd6329, %rd6313, %rd6251;
	xor.b64  	%rd6330, %rd6315, %rd6254;
	xor.b64  	%rd6331, %rd6307, %rd6257;
	xor.b64  	%rd6332, %rd6309, %rd6260;
	xor.b64  	%rd6333, %rd6311, %rd6263;
	xor.b64  	%rd6334, %rd6313, %rd6266;
	xor.b64  	%rd6335, %rd6315, %rd6269;
	xor.b64  	%rd6336, %rd6307, %rd6272;
	xor.b64  	%rd6337, %rd6309, %rd6275;
	xor.b64  	%rd6338, %rd6311, %rd6278;
	xor.b64  	%rd6339, %rd6313, %rd6281;
	xor.b64  	%rd6340, %rd6315, %rd6284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4389,%dummy}, %rd6322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4390}, %rd6322;
	}
	shf.r.wrap.b32 	%r4391, %r4390, %r4389, 20;
	shf.r.wrap.b32 	%r4392, %r4389, %r4390, 20;
	mov.b64 	%rd6341, {%r4392, %r4391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4393,%dummy}, %rd6328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4394}, %rd6328;
	}
	shf.r.wrap.b32 	%r4395, %r4394, %r4393, 21;
	shf.r.wrap.b32 	%r4396, %r4393, %r4394, 21;
	mov.b64 	%rd6342, {%r4396, %r4395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4397}, %rd6334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4398,%dummy}, %rd6334;
	}
	shf.l.wrap.b32 	%r4399, %r4398, %r4397, 21;
	shf.l.wrap.b32 	%r4400, %r4397, %r4398, 21;
	mov.b64 	%rd6343, {%r4400, %r4399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4401}, %rd6340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4402,%dummy}, %rd6340;
	}
	shf.l.wrap.b32 	%r4403, %r4402, %r4401, 14;
	shf.l.wrap.b32 	%r4404, %r4401, %r4402, 14;
	mov.b64 	%rd6344, {%r4404, %r4403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4405}, %rd6319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6319;
	}
	shf.l.wrap.b32 	%r4407, %r4406, %r4405, 28;
	shf.l.wrap.b32 	%r4408, %r4405, %r4406, 28;
	mov.b64 	%rd6345, {%r4408, %r4407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4409}, %rd6325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4410,%dummy}, %rd6325;
	}
	shf.l.wrap.b32 	%r4411, %r4410, %r4409, 20;
	shf.l.wrap.b32 	%r4412, %r4409, %r4410, 20;
	mov.b64 	%rd6346, {%r4412, %r4411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4413}, %rd6326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd6326;
	}
	shf.l.wrap.b32 	%r4415, %r4414, %r4413, 3;
	shf.l.wrap.b32 	%r4416, %r4413, %r4414, 3;
	mov.b64 	%rd6347, {%r4416, %r4415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4417,%dummy}, %rd6332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4418}, %rd6332;
	}
	shf.r.wrap.b32 	%r4419, %r4418, %r4417, 19;
	shf.r.wrap.b32 	%r4420, %r4417, %r4418, 19;
	mov.b64 	%rd6348, {%r4420, %r4419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4421,%dummy}, %rd6338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4422}, %rd6338;
	}
	shf.r.wrap.b32 	%r4423, %r4422, %r4421, 3;
	shf.r.wrap.b32 	%r4424, %r4421, %r4422, 3;
	mov.b64 	%rd6349, {%r4424, %r4423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4425}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4426,%dummy}, %rd6317;
	}
	shf.l.wrap.b32 	%r4427, %r4426, %r4425, 1;
	shf.l.wrap.b32 	%r4428, %r4425, %r4426, 1;
	mov.b64 	%rd6350, {%r4428, %r4427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4429}, %rd6323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4430,%dummy}, %rd6323;
	}
	shf.l.wrap.b32 	%r4431, %r4430, %r4429, 6;
	shf.l.wrap.b32 	%r4432, %r4429, %r4430, 6;
	mov.b64 	%rd6351, {%r4432, %r4431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4433}, %rd6329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4434,%dummy}, %rd6329;
	}
	shf.l.wrap.b32 	%r4435, %r4434, %r4433, 25;
	shf.l.wrap.b32 	%r4436, %r4433, %r4434, 25;
	mov.b64 	%rd6352, {%r4436, %r4435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4437}, %rd6335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4438,%dummy}, %rd6335;
	}
	shf.l.wrap.b32 	%r4439, %r4438, %r4437, 8;
	shf.l.wrap.b32 	%r4440, %r4437, %r4438, 8;
	mov.b64 	%rd6353, {%r4440, %r4439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4441}, %rd6336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4442,%dummy}, %rd6336;
	}
	shf.l.wrap.b32 	%r4443, %r4442, %r4441, 18;
	shf.l.wrap.b32 	%r4444, %r4441, %r4442, 18;
	mov.b64 	%rd6354, {%r4444, %r4443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4445}, %rd6320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4446,%dummy}, %rd6320;
	}
	shf.l.wrap.b32 	%r4447, %r4446, %r4445, 27;
	shf.l.wrap.b32 	%r4448, %r4445, %r4446, 27;
	mov.b64 	%rd6355, {%r4448, %r4447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4449,%dummy}, %rd6321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4450}, %rd6321;
	}
	shf.r.wrap.b32 	%r4451, %r4450, %r4449, 28;
	shf.r.wrap.b32 	%r4452, %r4449, %r4450, 28;
	mov.b64 	%rd6356, {%r4452, %r4451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4453}, %rd6327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd6327;
	}
	shf.l.wrap.b32 	%r4455, %r4454, %r4453, 10;
	shf.l.wrap.b32 	%r4456, %r4453, %r4454, 10;
	mov.b64 	%rd6357, {%r4456, %r4455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4457}, %rd6333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4458,%dummy}, %rd6333;
	}
	shf.l.wrap.b32 	%r4459, %r4458, %r4457, 15;
	shf.l.wrap.b32 	%r4460, %r4457, %r4458, 15;
	mov.b64 	%rd6358, {%r4460, %r4459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4461,%dummy}, %rd6339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4462}, %rd6339;
	}
	shf.r.wrap.b32 	%r4463, %r4462, %r4461, 8;
	shf.r.wrap.b32 	%r4464, %r4461, %r4462, 8;
	mov.b64 	%rd6359, {%r4464, %r4463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4465,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4466}, %rd6318;
	}
	shf.r.wrap.b32 	%r4467, %r4466, %r4465, 2;
	shf.r.wrap.b32 	%r4468, %r4465, %r4466, 2;
	mov.b64 	%rd6360, {%r4468, %r4467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4469,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4470}, %rd6324;
	}
	shf.r.wrap.b32 	%r4471, %r4470, %r4469, 9;
	shf.r.wrap.b32 	%r4472, %r4469, %r4470, 9;
	mov.b64 	%rd6361, {%r4472, %r4471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4473,%dummy}, %rd6330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4474}, %rd6330;
	}
	shf.r.wrap.b32 	%r4475, %r4474, %r4473, 25;
	shf.r.wrap.b32 	%r4476, %r4473, %r4474, 25;
	mov.b64 	%rd6362, {%r4476, %r4475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4477,%dummy}, %rd6331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4478}, %rd6331;
	}
	shf.r.wrap.b32 	%r4479, %r4478, %r4477, 23;
	shf.r.wrap.b32 	%r4480, %r4477, %r4478, 23;
	mov.b64 	%rd6363, {%r4480, %r4479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4481}, %rd6337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4482,%dummy}, %rd6337;
	}
	shf.l.wrap.b32 	%r4483, %r4482, %r4481, 2;
	shf.l.wrap.b32 	%r4484, %r4481, %r4482, 2;
	mov.b64 	%rd6364, {%r4484, %r4483};
	not.b64 	%rd6365, %rd6341;
	and.b64  	%rd6366, %rd6342, %rd6365;
	xor.b64  	%rd6367, %rd6366, %rd6316;
	not.b64 	%rd6368, %rd6342;
	and.b64  	%rd6369, %rd6343, %rd6368;
	xor.b64  	%rd6370, %rd6369, %rd6341;
	not.b64 	%rd6371, %rd6343;
	and.b64  	%rd6372, %rd6344, %rd6371;
	xor.b64  	%rd6373, %rd6372, %rd6342;
	not.b64 	%rd6374, %rd6344;
	and.b64  	%rd6375, %rd6316, %rd6374;
	xor.b64  	%rd6376, %rd6375, %rd6343;
	not.b64 	%rd6377, %rd6316;
	and.b64  	%rd6378, %rd6341, %rd6377;
	xor.b64  	%rd6379, %rd6378, %rd6344;
	not.b64 	%rd6380, %rd6346;
	and.b64  	%rd6381, %rd6347, %rd6380;
	xor.b64  	%rd6382, %rd6381, %rd6345;
	not.b64 	%rd6383, %rd6347;
	and.b64  	%rd6384, %rd6348, %rd6383;
	xor.b64  	%rd6385, %rd6384, %rd6346;
	not.b64 	%rd6386, %rd6348;
	and.b64  	%rd6387, %rd6349, %rd6386;
	xor.b64  	%rd6388, %rd6387, %rd6347;
	not.b64 	%rd6389, %rd6349;
	and.b64  	%rd6390, %rd6345, %rd6389;
	xor.b64  	%rd6391, %rd6390, %rd6348;
	not.b64 	%rd6392, %rd6345;
	and.b64  	%rd6393, %rd6346, %rd6392;
	xor.b64  	%rd6394, %rd6393, %rd6349;
	not.b64 	%rd6395, %rd6351;
	and.b64  	%rd6396, %rd6352, %rd6395;
	xor.b64  	%rd6397, %rd6396, %rd6350;
	not.b64 	%rd6398, %rd6352;
	and.b64  	%rd6399, %rd6353, %rd6398;
	xor.b64  	%rd6400, %rd6399, %rd6351;
	not.b64 	%rd6401, %rd6353;
	and.b64  	%rd6402, %rd6354, %rd6401;
	xor.b64  	%rd6403, %rd6402, %rd6352;
	not.b64 	%rd6404, %rd6354;
	and.b64  	%rd6405, %rd6350, %rd6404;
	xor.b64  	%rd6406, %rd6405, %rd6353;
	not.b64 	%rd6407, %rd6350;
	and.b64  	%rd6408, %rd6351, %rd6407;
	xor.b64  	%rd6409, %rd6408, %rd6354;
	not.b64 	%rd6410, %rd6356;
	and.b64  	%rd6411, %rd6357, %rd6410;
	xor.b64  	%rd6412, %rd6411, %rd6355;
	not.b64 	%rd6413, %rd6357;
	and.b64  	%rd6414, %rd6358, %rd6413;
	xor.b64  	%rd6415, %rd6414, %rd6356;
	not.b64 	%rd6416, %rd6358;
	and.b64  	%rd6417, %rd6359, %rd6416;
	xor.b64  	%rd6418, %rd6417, %rd6357;
	not.b64 	%rd6419, %rd6359;
	and.b64  	%rd6420, %rd6355, %rd6419;
	xor.b64  	%rd6421, %rd6420, %rd6358;
	not.b64 	%rd6422, %rd6355;
	and.b64  	%rd6423, %rd6356, %rd6422;
	xor.b64  	%rd6424, %rd6423, %rd6359;
	not.b64 	%rd6425, %rd6361;
	and.b64  	%rd6426, %rd6362, %rd6425;
	xor.b64  	%rd6427, %rd6426, %rd6360;
	not.b64 	%rd6428, %rd6362;
	and.b64  	%rd6429, %rd6363, %rd6428;
	xor.b64  	%rd6430, %rd6429, %rd6361;
	not.b64 	%rd6431, %rd6363;
	and.b64  	%rd6432, %rd6364, %rd6431;
	xor.b64  	%rd6433, %rd6432, %rd6362;
	not.b64 	%rd6434, %rd6364;
	and.b64  	%rd6435, %rd6360, %rd6434;
	xor.b64  	%rd6436, %rd6435, %rd6363;
	not.b64 	%rd6437, %rd6360;
	and.b64  	%rd6438, %rd6361, %rd6437;
	xor.b64  	%rd6439, %rd6438, %rd6364;
	xor.b64  	%rd6440, %rd6367, %rd29;
	xor.b64  	%rd6441, %rd6382, %rd6440;
	xor.b64  	%rd6442, %rd6441, %rd6397;
	xor.b64  	%rd6443, %rd6442, %rd6412;
	xor.b64  	%rd6444, %rd6443, %rd6427;
	xor.b64  	%rd6445, %rd6385, %rd6370;
	xor.b64  	%rd6446, %rd6445, %rd6400;
	xor.b64  	%rd6447, %rd6446, %rd6415;
	xor.b64  	%rd6448, %rd6447, %rd6430;
	xor.b64  	%rd6449, %rd6388, %rd6373;
	xor.b64  	%rd6450, %rd6449, %rd6403;
	xor.b64  	%rd6451, %rd6450, %rd6418;
	xor.b64  	%rd6452, %rd6451, %rd6433;
	xor.b64  	%rd6453, %rd6391, %rd6376;
	xor.b64  	%rd6454, %rd6453, %rd6406;
	xor.b64  	%rd6455, %rd6454, %rd6421;
	xor.b64  	%rd6456, %rd6455, %rd6436;
	xor.b64  	%rd6457, %rd6394, %rd6379;
	xor.b64  	%rd6458, %rd6457, %rd6409;
	xor.b64  	%rd6459, %rd6458, %rd6424;
	xor.b64  	%rd6460, %rd6459, %rd6439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4485}, %rd6448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4486,%dummy}, %rd6448;
	}
	shf.l.wrap.b32 	%r4487, %r4486, %r4485, 1;
	shf.l.wrap.b32 	%r4488, %r4485, %r4486, 1;
	mov.b64 	%rd6461, {%r4488, %r4487};
	xor.b64  	%rd6462, %rd6460, %rd6461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4489}, %rd6452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4490,%dummy}, %rd6452;
	}
	shf.l.wrap.b32 	%r4491, %r4490, %r4489, 1;
	shf.l.wrap.b32 	%r4492, %r4489, %r4490, 1;
	mov.b64 	%rd6463, {%r4492, %r4491};
	xor.b64  	%rd6464, %rd6463, %rd6444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4493}, %rd6456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd6456;
	}
	shf.l.wrap.b32 	%r4495, %r4494, %r4493, 1;
	shf.l.wrap.b32 	%r4496, %r4493, %r4494, 1;
	mov.b64 	%rd6465, {%r4496, %r4495};
	xor.b64  	%rd6466, %rd6465, %rd6448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4497}, %rd6460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4498,%dummy}, %rd6460;
	}
	shf.l.wrap.b32 	%r4499, %r4498, %r4497, 1;
	shf.l.wrap.b32 	%r4500, %r4497, %r4498, 1;
	mov.b64 	%rd6467, {%r4500, %r4499};
	xor.b64  	%rd6468, %rd6467, %rd6452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4501}, %rd6444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4502,%dummy}, %rd6444;
	}
	shf.l.wrap.b32 	%r4503, %r4502, %r4501, 1;
	shf.l.wrap.b32 	%r4504, %r4501, %r4502, 1;
	mov.b64 	%rd6469, {%r4504, %r4503};
	xor.b64  	%rd6470, %rd6456, %rd6469;
	xor.b64  	%rd6471, %rd6462, %rd6440;
	xor.b64  	%rd6472, %rd6464, %rd6370;
	xor.b64  	%rd6473, %rd6466, %rd6373;
	xor.b64  	%rd6474, %rd6468, %rd6376;
	xor.b64  	%rd6475, %rd6470, %rd6379;
	xor.b64  	%rd6476, %rd6462, %rd6382;
	xor.b64  	%rd6477, %rd6464, %rd6385;
	xor.b64  	%rd6478, %rd6466, %rd6388;
	xor.b64  	%rd6479, %rd6468, %rd6391;
	xor.b64  	%rd6480, %rd6470, %rd6394;
	xor.b64  	%rd6481, %rd6462, %rd6397;
	xor.b64  	%rd6482, %rd6464, %rd6400;
	xor.b64  	%rd6483, %rd6466, %rd6403;
	xor.b64  	%rd6484, %rd6468, %rd6406;
	xor.b64  	%rd6485, %rd6470, %rd6409;
	xor.b64  	%rd6486, %rd6462, %rd6412;
	xor.b64  	%rd6487, %rd6464, %rd6415;
	xor.b64  	%rd6488, %rd6466, %rd6418;
	xor.b64  	%rd6489, %rd6468, %rd6421;
	xor.b64  	%rd6490, %rd6470, %rd6424;
	xor.b64  	%rd6491, %rd6462, %rd6427;
	xor.b64  	%rd6492, %rd6464, %rd6430;
	xor.b64  	%rd6493, %rd6466, %rd6433;
	xor.b64  	%rd6494, %rd6468, %rd6436;
	xor.b64  	%rd6495, %rd6470, %rd6439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4505,%dummy}, %rd6477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4506}, %rd6477;
	}
	shf.r.wrap.b32 	%r4507, %r4506, %r4505, 20;
	shf.r.wrap.b32 	%r4508, %r4505, %r4506, 20;
	mov.b64 	%rd6496, {%r4508, %r4507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4509,%dummy}, %rd6483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4510}, %rd6483;
	}
	shf.r.wrap.b32 	%r4511, %r4510, %r4509, 21;
	shf.r.wrap.b32 	%r4512, %r4509, %r4510, 21;
	mov.b64 	%rd6497, {%r4512, %r4511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4513}, %rd6489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4514,%dummy}, %rd6489;
	}
	shf.l.wrap.b32 	%r4515, %r4514, %r4513, 21;
	shf.l.wrap.b32 	%r4516, %r4513, %r4514, 21;
	mov.b64 	%rd6498, {%r4516, %r4515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4517}, %rd6495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4518,%dummy}, %rd6495;
	}
	shf.l.wrap.b32 	%r4519, %r4518, %r4517, 14;
	shf.l.wrap.b32 	%r4520, %r4517, %r4518, 14;
	mov.b64 	%rd6499, {%r4520, %r4519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4521}, %rd6474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4522,%dummy}, %rd6474;
	}
	shf.l.wrap.b32 	%r4523, %r4522, %r4521, 28;
	shf.l.wrap.b32 	%r4524, %r4521, %r4522, 28;
	mov.b64 	%rd6500, {%r4524, %r4523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4525}, %rd6480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4526,%dummy}, %rd6480;
	}
	shf.l.wrap.b32 	%r4527, %r4526, %r4525, 20;
	shf.l.wrap.b32 	%r4528, %r4525, %r4526, 20;
	mov.b64 	%rd6501, {%r4528, %r4527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4529}, %rd6481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4530,%dummy}, %rd6481;
	}
	shf.l.wrap.b32 	%r4531, %r4530, %r4529, 3;
	shf.l.wrap.b32 	%r4532, %r4529, %r4530, 3;
	mov.b64 	%rd6502, {%r4532, %r4531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4533,%dummy}, %rd6487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4534}, %rd6487;
	}
	shf.r.wrap.b32 	%r4535, %r4534, %r4533, 19;
	shf.r.wrap.b32 	%r4536, %r4533, %r4534, 19;
	mov.b64 	%rd6503, {%r4536, %r4535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4537,%dummy}, %rd6493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4538}, %rd6493;
	}
	shf.r.wrap.b32 	%r4539, %r4538, %r4537, 3;
	shf.r.wrap.b32 	%r4540, %r4537, %r4538, 3;
	mov.b64 	%rd6504, {%r4540, %r4539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4541}, %rd6472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4542,%dummy}, %rd6472;
	}
	shf.l.wrap.b32 	%r4543, %r4542, %r4541, 1;
	shf.l.wrap.b32 	%r4544, %r4541, %r4542, 1;
	mov.b64 	%rd6505, {%r4544, %r4543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4545}, %rd6478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4546,%dummy}, %rd6478;
	}
	shf.l.wrap.b32 	%r4547, %r4546, %r4545, 6;
	shf.l.wrap.b32 	%r4548, %r4545, %r4546, 6;
	mov.b64 	%rd6506, {%r4548, %r4547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4549}, %rd6484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4550,%dummy}, %rd6484;
	}
	shf.l.wrap.b32 	%r4551, %r4550, %r4549, 25;
	shf.l.wrap.b32 	%r4552, %r4549, %r4550, 25;
	mov.b64 	%rd6507, {%r4552, %r4551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4553}, %rd6490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4554,%dummy}, %rd6490;
	}
	shf.l.wrap.b32 	%r4555, %r4554, %r4553, 8;
	shf.l.wrap.b32 	%r4556, %r4553, %r4554, 8;
	mov.b64 	%rd6508, {%r4556, %r4555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4557}, %rd6491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4558,%dummy}, %rd6491;
	}
	shf.l.wrap.b32 	%r4559, %r4558, %r4557, 18;
	shf.l.wrap.b32 	%r4560, %r4557, %r4558, 18;
	mov.b64 	%rd6509, {%r4560, %r4559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4561}, %rd6475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4562,%dummy}, %rd6475;
	}
	shf.l.wrap.b32 	%r4563, %r4562, %r4561, 27;
	shf.l.wrap.b32 	%r4564, %r4561, %r4562, 27;
	mov.b64 	%rd6510, {%r4564, %r4563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4565,%dummy}, %rd6476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4566}, %rd6476;
	}
	shf.r.wrap.b32 	%r4567, %r4566, %r4565, 28;
	shf.r.wrap.b32 	%r4568, %r4565, %r4566, 28;
	mov.b64 	%rd6511, {%r4568, %r4567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4569}, %rd6482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4570,%dummy}, %rd6482;
	}
	shf.l.wrap.b32 	%r4571, %r4570, %r4569, 10;
	shf.l.wrap.b32 	%r4572, %r4569, %r4570, 10;
	mov.b64 	%rd6512, {%r4572, %r4571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4573}, %rd6488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4574,%dummy}, %rd6488;
	}
	shf.l.wrap.b32 	%r4575, %r4574, %r4573, 15;
	shf.l.wrap.b32 	%r4576, %r4573, %r4574, 15;
	mov.b64 	%rd6513, {%r4576, %r4575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4577,%dummy}, %rd6494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4578}, %rd6494;
	}
	shf.r.wrap.b32 	%r4579, %r4578, %r4577, 8;
	shf.r.wrap.b32 	%r4580, %r4577, %r4578, 8;
	mov.b64 	%rd6514, {%r4580, %r4579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4581,%dummy}, %rd6473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4582}, %rd6473;
	}
	shf.r.wrap.b32 	%r4583, %r4582, %r4581, 2;
	shf.r.wrap.b32 	%r4584, %r4581, %r4582, 2;
	mov.b64 	%rd6515, {%r4584, %r4583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4585,%dummy}, %rd6479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4586}, %rd6479;
	}
	shf.r.wrap.b32 	%r4587, %r4586, %r4585, 9;
	shf.r.wrap.b32 	%r4588, %r4585, %r4586, 9;
	mov.b64 	%rd6516, {%r4588, %r4587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4589,%dummy}, %rd6485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4590}, %rd6485;
	}
	shf.r.wrap.b32 	%r4591, %r4590, %r4589, 25;
	shf.r.wrap.b32 	%r4592, %r4589, %r4590, 25;
	mov.b64 	%rd6517, {%r4592, %r4591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4593,%dummy}, %rd6486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4594}, %rd6486;
	}
	shf.r.wrap.b32 	%r4595, %r4594, %r4593, 23;
	shf.r.wrap.b32 	%r4596, %r4593, %r4594, 23;
	mov.b64 	%rd6518, {%r4596, %r4595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4597}, %rd6492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd6492;
	}
	shf.l.wrap.b32 	%r4599, %r4598, %r4597, 2;
	shf.l.wrap.b32 	%r4600, %r4597, %r4598, 2;
	mov.b64 	%rd6519, {%r4600, %r4599};
	not.b64 	%rd6520, %rd6496;
	and.b64  	%rd6521, %rd6497, %rd6520;
	xor.b64  	%rd6522, %rd6521, %rd6471;
	not.b64 	%rd6523, %rd6497;
	and.b64  	%rd6524, %rd6498, %rd6523;
	xor.b64  	%rd6525, %rd6524, %rd6496;
	not.b64 	%rd6526, %rd6498;
	and.b64  	%rd6527, %rd6499, %rd6526;
	xor.b64  	%rd6528, %rd6527, %rd6497;
	not.b64 	%rd6529, %rd6499;
	and.b64  	%rd6530, %rd6471, %rd6529;
	xor.b64  	%rd6531, %rd6530, %rd6498;
	not.b64 	%rd6532, %rd6471;
	and.b64  	%rd6533, %rd6496, %rd6532;
	xor.b64  	%rd6534, %rd6533, %rd6499;
	not.b64 	%rd6535, %rd6501;
	and.b64  	%rd6536, %rd6502, %rd6535;
	xor.b64  	%rd6537, %rd6536, %rd6500;
	not.b64 	%rd6538, %rd6502;
	and.b64  	%rd6539, %rd6503, %rd6538;
	xor.b64  	%rd6540, %rd6539, %rd6501;
	not.b64 	%rd6541, %rd6503;
	and.b64  	%rd6542, %rd6504, %rd6541;
	xor.b64  	%rd6543, %rd6542, %rd6502;
	not.b64 	%rd6544, %rd6504;
	and.b64  	%rd6545, %rd6500, %rd6544;
	xor.b64  	%rd6546, %rd6545, %rd6503;
	not.b64 	%rd6547, %rd6500;
	and.b64  	%rd6548, %rd6501, %rd6547;
	xor.b64  	%rd6549, %rd6548, %rd6504;
	not.b64 	%rd6550, %rd6506;
	and.b64  	%rd6551, %rd6507, %rd6550;
	xor.b64  	%rd6552, %rd6551, %rd6505;
	not.b64 	%rd6553, %rd6507;
	and.b64  	%rd6554, %rd6508, %rd6553;
	xor.b64  	%rd6555, %rd6554, %rd6506;
	not.b64 	%rd6556, %rd6508;
	and.b64  	%rd6557, %rd6509, %rd6556;
	xor.b64  	%rd6558, %rd6557, %rd6507;
	not.b64 	%rd6559, %rd6509;
	and.b64  	%rd6560, %rd6505, %rd6559;
	xor.b64  	%rd6561, %rd6560, %rd6508;
	not.b64 	%rd6562, %rd6505;
	and.b64  	%rd6563, %rd6506, %rd6562;
	xor.b64  	%rd6564, %rd6563, %rd6509;
	not.b64 	%rd6565, %rd6511;
	and.b64  	%rd6566, %rd6512, %rd6565;
	xor.b64  	%rd6567, %rd6566, %rd6510;
	not.b64 	%rd6568, %rd6512;
	and.b64  	%rd6569, %rd6513, %rd6568;
	xor.b64  	%rd6570, %rd6569, %rd6511;
	not.b64 	%rd6571, %rd6513;
	and.b64  	%rd6572, %rd6514, %rd6571;
	xor.b64  	%rd6573, %rd6572, %rd6512;
	not.b64 	%rd6574, %rd6514;
	and.b64  	%rd6575, %rd6510, %rd6574;
	xor.b64  	%rd6576, %rd6575, %rd6513;
	not.b64 	%rd6577, %rd6510;
	and.b64  	%rd6578, %rd6511, %rd6577;
	xor.b64  	%rd6579, %rd6578, %rd6514;
	not.b64 	%rd6580, %rd6516;
	and.b64  	%rd6581, %rd6517, %rd6580;
	xor.b64  	%rd6582, %rd6581, %rd6515;
	not.b64 	%rd6583, %rd6517;
	and.b64  	%rd6584, %rd6518, %rd6583;
	xor.b64  	%rd6585, %rd6584, %rd6516;
	not.b64 	%rd6586, %rd6518;
	and.b64  	%rd6587, %rd6519, %rd6586;
	xor.b64  	%rd6588, %rd6587, %rd6517;
	not.b64 	%rd6589, %rd6519;
	and.b64  	%rd6590, %rd6515, %rd6589;
	xor.b64  	%rd6591, %rd6590, %rd6518;
	not.b64 	%rd6592, %rd6515;
	and.b64  	%rd6593, %rd6516, %rd6592;
	xor.b64  	%rd6594, %rd6593, %rd6519;
	xor.b64  	%rd6595, %rd6522, %rd30;
	xor.b64  	%rd6596, %rd6537, %rd6595;
	xor.b64  	%rd6597, %rd6596, %rd6552;
	xor.b64  	%rd6598, %rd6597, %rd6567;
	xor.b64  	%rd6599, %rd6598, %rd6582;
	xor.b64  	%rd6600, %rd6540, %rd6525;
	xor.b64  	%rd6601, %rd6600, %rd6555;
	xor.b64  	%rd6602, %rd6601, %rd6570;
	xor.b64  	%rd6603, %rd6602, %rd6585;
	xor.b64  	%rd6604, %rd6543, %rd6528;
	xor.b64  	%rd6605, %rd6604, %rd6558;
	xor.b64  	%rd6606, %rd6605, %rd6573;
	xor.b64  	%rd6607, %rd6606, %rd6588;
	xor.b64  	%rd6608, %rd6546, %rd6531;
	xor.b64  	%rd6609, %rd6608, %rd6561;
	xor.b64  	%rd6610, %rd6609, %rd6576;
	xor.b64  	%rd6611, %rd6610, %rd6591;
	xor.b64  	%rd6612, %rd6549, %rd6534;
	xor.b64  	%rd6613, %rd6612, %rd6564;
	xor.b64  	%rd6614, %rd6613, %rd6579;
	xor.b64  	%rd6615, %rd6614, %rd6594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4601}, %rd6603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4602,%dummy}, %rd6603;
	}
	shf.l.wrap.b32 	%r4603, %r4602, %r4601, 1;
	shf.l.wrap.b32 	%r4604, %r4601, %r4602, 1;
	mov.b64 	%rd6616, {%r4604, %r4603};
	xor.b64  	%rd6617, %rd6615, %rd6616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4605}, %rd6607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd6607;
	}
	shf.l.wrap.b32 	%r4607, %r4606, %r4605, 1;
	shf.l.wrap.b32 	%r4608, %r4605, %r4606, 1;
	mov.b64 	%rd6618, {%r4608, %r4607};
	xor.b64  	%rd6619, %rd6618, %rd6599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4609}, %rd6611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4610,%dummy}, %rd6611;
	}
	shf.l.wrap.b32 	%r4611, %r4610, %r4609, 1;
	shf.l.wrap.b32 	%r4612, %r4609, %r4610, 1;
	mov.b64 	%rd6620, {%r4612, %r4611};
	xor.b64  	%rd6621, %rd6620, %rd6603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4613}, %rd6615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4614,%dummy}, %rd6615;
	}
	shf.l.wrap.b32 	%r4615, %r4614, %r4613, 1;
	shf.l.wrap.b32 	%r4616, %r4613, %r4614, 1;
	mov.b64 	%rd6622, {%r4616, %r4615};
	xor.b64  	%rd6623, %rd6622, %rd6607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4617}, %rd6599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4618,%dummy}, %rd6599;
	}
	shf.l.wrap.b32 	%r4619, %r4618, %r4617, 1;
	shf.l.wrap.b32 	%r4620, %r4617, %r4618, 1;
	mov.b64 	%rd6624, {%r4620, %r4619};
	xor.b64  	%rd6625, %rd6611, %rd6624;
	xor.b64  	%rd6626, %rd6617, %rd6595;
	xor.b64  	%rd6627, %rd6619, %rd6525;
	xor.b64  	%rd6628, %rd6621, %rd6528;
	xor.b64  	%rd6629, %rd6623, %rd6531;
	xor.b64  	%rd6630, %rd6625, %rd6534;
	xor.b64  	%rd6631, %rd6617, %rd6537;
	xor.b64  	%rd6632, %rd6619, %rd6540;
	xor.b64  	%rd6633, %rd6621, %rd6543;
	xor.b64  	%rd6634, %rd6623, %rd6546;
	xor.b64  	%rd6635, %rd6625, %rd6549;
	xor.b64  	%rd6636, %rd6617, %rd6552;
	xor.b64  	%rd6637, %rd6619, %rd6555;
	xor.b64  	%rd6638, %rd6621, %rd6558;
	xor.b64  	%rd6639, %rd6623, %rd6561;
	xor.b64  	%rd6640, %rd6625, %rd6564;
	xor.b64  	%rd6641, %rd6617, %rd6567;
	xor.b64  	%rd6642, %rd6619, %rd6570;
	xor.b64  	%rd6643, %rd6621, %rd6573;
	xor.b64  	%rd6644, %rd6623, %rd6576;
	xor.b64  	%rd6645, %rd6625, %rd6579;
	xor.b64  	%rd6646, %rd6617, %rd6582;
	xor.b64  	%rd6647, %rd6619, %rd6585;
	xor.b64  	%rd6648, %rd6621, %rd6588;
	xor.b64  	%rd6649, %rd6623, %rd6591;
	xor.b64  	%rd6650, %rd6625, %rd6594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4621,%dummy}, %rd6632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4622}, %rd6632;
	}
	shf.r.wrap.b32 	%r4623, %r4622, %r4621, 20;
	shf.r.wrap.b32 	%r4624, %r4621, %r4622, 20;
	mov.b64 	%rd6651, {%r4624, %r4623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4625,%dummy}, %rd6638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4626}, %rd6638;
	}
	shf.r.wrap.b32 	%r4627, %r4626, %r4625, 21;
	shf.r.wrap.b32 	%r4628, %r4625, %r4626, 21;
	mov.b64 	%rd6652, {%r4628, %r4627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4629}, %rd6644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4630,%dummy}, %rd6644;
	}
	shf.l.wrap.b32 	%r4631, %r4630, %r4629, 21;
	shf.l.wrap.b32 	%r4632, %r4629, %r4630, 21;
	mov.b64 	%rd6653, {%r4632, %r4631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4633}, %rd6650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4634,%dummy}, %rd6650;
	}
	shf.l.wrap.b32 	%r4635, %r4634, %r4633, 14;
	shf.l.wrap.b32 	%r4636, %r4633, %r4634, 14;
	mov.b64 	%rd6654, {%r4636, %r4635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4637}, %rd6629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4638,%dummy}, %rd6629;
	}
	shf.l.wrap.b32 	%r4639, %r4638, %r4637, 28;
	shf.l.wrap.b32 	%r4640, %r4637, %r4638, 28;
	mov.b64 	%rd6655, {%r4640, %r4639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4641}, %rd6635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4642,%dummy}, %rd6635;
	}
	shf.l.wrap.b32 	%r4643, %r4642, %r4641, 20;
	shf.l.wrap.b32 	%r4644, %r4641, %r4642, 20;
	mov.b64 	%rd6656, {%r4644, %r4643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4645}, %rd6636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4646,%dummy}, %rd6636;
	}
	shf.l.wrap.b32 	%r4647, %r4646, %r4645, 3;
	shf.l.wrap.b32 	%r4648, %r4645, %r4646, 3;
	mov.b64 	%rd6657, {%r4648, %r4647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4649,%dummy}, %rd6642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4650}, %rd6642;
	}
	shf.r.wrap.b32 	%r4651, %r4650, %r4649, 19;
	shf.r.wrap.b32 	%r4652, %r4649, %r4650, 19;
	mov.b64 	%rd6658, {%r4652, %r4651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4653,%dummy}, %rd6648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4654}, %rd6648;
	}
	shf.r.wrap.b32 	%r4655, %r4654, %r4653, 3;
	shf.r.wrap.b32 	%r4656, %r4653, %r4654, 3;
	mov.b64 	%rd6659, {%r4656, %r4655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4657}, %rd6627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4658,%dummy}, %rd6627;
	}
	shf.l.wrap.b32 	%r4659, %r4658, %r4657, 1;
	shf.l.wrap.b32 	%r4660, %r4657, %r4658, 1;
	mov.b64 	%rd6660, {%r4660, %r4659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4661}, %rd6633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4662,%dummy}, %rd6633;
	}
	shf.l.wrap.b32 	%r4663, %r4662, %r4661, 6;
	shf.l.wrap.b32 	%r4664, %r4661, %r4662, 6;
	mov.b64 	%rd6661, {%r4664, %r4663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4665}, %rd6639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4666,%dummy}, %rd6639;
	}
	shf.l.wrap.b32 	%r4667, %r4666, %r4665, 25;
	shf.l.wrap.b32 	%r4668, %r4665, %r4666, 25;
	mov.b64 	%rd6662, {%r4668, %r4667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd6645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4670,%dummy}, %rd6645;
	}
	shf.l.wrap.b32 	%r4671, %r4670, %r4669, 8;
	shf.l.wrap.b32 	%r4672, %r4669, %r4670, 8;
	mov.b64 	%rd6663, {%r4672, %r4671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4673}, %rd6646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4674,%dummy}, %rd6646;
	}
	shf.l.wrap.b32 	%r4675, %r4674, %r4673, 18;
	shf.l.wrap.b32 	%r4676, %r4673, %r4674, 18;
	mov.b64 	%rd6664, {%r4676, %r4675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4677}, %rd6630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4678,%dummy}, %rd6630;
	}
	shf.l.wrap.b32 	%r4679, %r4678, %r4677, 27;
	shf.l.wrap.b32 	%r4680, %r4677, %r4678, 27;
	mov.b64 	%rd6665, {%r4680, %r4679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4681,%dummy}, %rd6631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4682}, %rd6631;
	}
	shf.r.wrap.b32 	%r4683, %r4682, %r4681, 28;
	shf.r.wrap.b32 	%r4684, %r4681, %r4682, 28;
	mov.b64 	%rd6666, {%r4684, %r4683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4685}, %rd6637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4686,%dummy}, %rd6637;
	}
	shf.l.wrap.b32 	%r4687, %r4686, %r4685, 10;
	shf.l.wrap.b32 	%r4688, %r4685, %r4686, 10;
	mov.b64 	%rd6667, {%r4688, %r4687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4689}, %rd6643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4690,%dummy}, %rd6643;
	}
	shf.l.wrap.b32 	%r4691, %r4690, %r4689, 15;
	shf.l.wrap.b32 	%r4692, %r4689, %r4690, 15;
	mov.b64 	%rd6668, {%r4692, %r4691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4693,%dummy}, %rd6649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4694}, %rd6649;
	}
	shf.r.wrap.b32 	%r4695, %r4694, %r4693, 8;
	shf.r.wrap.b32 	%r4696, %r4693, %r4694, 8;
	mov.b64 	%rd6669, {%r4696, %r4695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4697,%dummy}, %rd6628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4698}, %rd6628;
	}
	shf.r.wrap.b32 	%r4699, %r4698, %r4697, 2;
	shf.r.wrap.b32 	%r4700, %r4697, %r4698, 2;
	mov.b64 	%rd6670, {%r4700, %r4699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4701,%dummy}, %rd6634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4702}, %rd6634;
	}
	shf.r.wrap.b32 	%r4703, %r4702, %r4701, 9;
	shf.r.wrap.b32 	%r4704, %r4701, %r4702, 9;
	mov.b64 	%rd6671, {%r4704, %r4703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4705,%dummy}, %rd6640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4706}, %rd6640;
	}
	shf.r.wrap.b32 	%r4707, %r4706, %r4705, 25;
	shf.r.wrap.b32 	%r4708, %r4705, %r4706, 25;
	mov.b64 	%rd6672, {%r4708, %r4707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4709,%dummy}, %rd6641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4710}, %rd6641;
	}
	shf.r.wrap.b32 	%r4711, %r4710, %r4709, 23;
	shf.r.wrap.b32 	%r4712, %r4709, %r4710, 23;
	mov.b64 	%rd6673, {%r4712, %r4711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4713}, %rd6647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4714,%dummy}, %rd6647;
	}
	shf.l.wrap.b32 	%r4715, %r4714, %r4713, 2;
	shf.l.wrap.b32 	%r4716, %r4713, %r4714, 2;
	mov.b64 	%rd6674, {%r4716, %r4715};
	not.b64 	%rd6675, %rd6651;
	and.b64  	%rd6676, %rd6652, %rd6675;
	xor.b64  	%rd6677, %rd6676, %rd6626;
	not.b64 	%rd6678, %rd6652;
	and.b64  	%rd6679, %rd6653, %rd6678;
	xor.b64  	%rd6680, %rd6679, %rd6651;
	not.b64 	%rd6681, %rd6653;
	and.b64  	%rd6682, %rd6654, %rd6681;
	xor.b64  	%rd6683, %rd6682, %rd6652;
	not.b64 	%rd6684, %rd6654;
	and.b64  	%rd6685, %rd6626, %rd6684;
	xor.b64  	%rd6686, %rd6685, %rd6653;
	not.b64 	%rd6687, %rd6626;
	and.b64  	%rd6688, %rd6651, %rd6687;
	xor.b64  	%rd6689, %rd6688, %rd6654;
	not.b64 	%rd6690, %rd6656;
	and.b64  	%rd6691, %rd6657, %rd6690;
	xor.b64  	%rd6692, %rd6691, %rd6655;
	not.b64 	%rd6693, %rd6657;
	and.b64  	%rd6694, %rd6658, %rd6693;
	xor.b64  	%rd6695, %rd6694, %rd6656;
	not.b64 	%rd6696, %rd6658;
	and.b64  	%rd6697, %rd6659, %rd6696;
	xor.b64  	%rd6698, %rd6697, %rd6657;
	not.b64 	%rd6699, %rd6659;
	and.b64  	%rd6700, %rd6655, %rd6699;
	xor.b64  	%rd6701, %rd6700, %rd6658;
	not.b64 	%rd6702, %rd6655;
	and.b64  	%rd6703, %rd6656, %rd6702;
	xor.b64  	%rd6704, %rd6703, %rd6659;
	not.b64 	%rd6705, %rd6661;
	and.b64  	%rd6706, %rd6662, %rd6705;
	xor.b64  	%rd6707, %rd6706, %rd6660;
	not.b64 	%rd6708, %rd6662;
	and.b64  	%rd6709, %rd6663, %rd6708;
	xor.b64  	%rd6710, %rd6709, %rd6661;
	not.b64 	%rd6711, %rd6663;
	and.b64  	%rd6712, %rd6664, %rd6711;
	xor.b64  	%rd6713, %rd6712, %rd6662;
	not.b64 	%rd6714, %rd6664;
	and.b64  	%rd6715, %rd6660, %rd6714;
	xor.b64  	%rd6716, %rd6715, %rd6663;
	not.b64 	%rd6717, %rd6660;
	and.b64  	%rd6718, %rd6661, %rd6717;
	xor.b64  	%rd6719, %rd6718, %rd6664;
	not.b64 	%rd6720, %rd6666;
	and.b64  	%rd6721, %rd6667, %rd6720;
	xor.b64  	%rd6722, %rd6721, %rd6665;
	not.b64 	%rd6723, %rd6667;
	and.b64  	%rd6724, %rd6668, %rd6723;
	xor.b64  	%rd6725, %rd6724, %rd6666;
	not.b64 	%rd6726, %rd6668;
	and.b64  	%rd6727, %rd6669, %rd6726;
	xor.b64  	%rd6728, %rd6727, %rd6667;
	not.b64 	%rd6729, %rd6669;
	and.b64  	%rd6730, %rd6665, %rd6729;
	xor.b64  	%rd6731, %rd6730, %rd6668;
	not.b64 	%rd6732, %rd6665;
	and.b64  	%rd6733, %rd6666, %rd6732;
	xor.b64  	%rd6734, %rd6733, %rd6669;
	not.b64 	%rd6735, %rd6671;
	and.b64  	%rd6736, %rd6672, %rd6735;
	xor.b64  	%rd6737, %rd6736, %rd6670;
	not.b64 	%rd6738, %rd6672;
	and.b64  	%rd6739, %rd6673, %rd6738;
	xor.b64  	%rd6740, %rd6739, %rd6671;
	not.b64 	%rd6741, %rd6673;
	and.b64  	%rd6742, %rd6674, %rd6741;
	xor.b64  	%rd6743, %rd6742, %rd6672;
	not.b64 	%rd6744, %rd6674;
	and.b64  	%rd6745, %rd6670, %rd6744;
	xor.b64  	%rd6746, %rd6745, %rd6673;
	not.b64 	%rd6747, %rd6670;
	and.b64  	%rd6748, %rd6671, %rd6747;
	xor.b64  	%rd6749, %rd6748, %rd6674;
	xor.b64  	%rd6750, %rd6677, %rd31;
	xor.b64  	%rd6751, %rd6692, %rd6750;
	xor.b64  	%rd6752, %rd6751, %rd6707;
	xor.b64  	%rd6753, %rd6752, %rd6722;
	xor.b64  	%rd6754, %rd6753, %rd6737;
	xor.b64  	%rd6755, %rd6695, %rd6680;
	xor.b64  	%rd6756, %rd6755, %rd6710;
	xor.b64  	%rd6757, %rd6756, %rd6725;
	xor.b64  	%rd6758, %rd6757, %rd6740;
	xor.b64  	%rd6759, %rd6698, %rd6683;
	xor.b64  	%rd6760, %rd6759, %rd6713;
	xor.b64  	%rd6761, %rd6760, %rd6728;
	xor.b64  	%rd6762, %rd6761, %rd6743;
	xor.b64  	%rd6763, %rd6701, %rd6686;
	xor.b64  	%rd6764, %rd6763, %rd6716;
	xor.b64  	%rd6765, %rd6764, %rd6731;
	xor.b64  	%rd6766, %rd6765, %rd6746;
	xor.b64  	%rd6767, %rd6704, %rd6689;
	xor.b64  	%rd6768, %rd6767, %rd6719;
	xor.b64  	%rd6769, %rd6768, %rd6734;
	xor.b64  	%rd6770, %rd6769, %rd6749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4717}, %rd6758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4718,%dummy}, %rd6758;
	}
	shf.l.wrap.b32 	%r4719, %r4718, %r4717, 1;
	shf.l.wrap.b32 	%r4720, %r4717, %r4718, 1;
	mov.b64 	%rd6771, {%r4720, %r4719};
	xor.b64  	%rd6772, %rd6770, %rd6771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4721}, %rd6762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4722,%dummy}, %rd6762;
	}
	shf.l.wrap.b32 	%r4723, %r4722, %r4721, 1;
	shf.l.wrap.b32 	%r4724, %r4721, %r4722, 1;
	mov.b64 	%rd6773, {%r4724, %r4723};
	xor.b64  	%rd6774, %rd6773, %rd6754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd6766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4726,%dummy}, %rd6766;
	}
	shf.l.wrap.b32 	%r4727, %r4726, %r4725, 1;
	shf.l.wrap.b32 	%r4728, %r4725, %r4726, 1;
	mov.b64 	%rd6775, {%r4728, %r4727};
	xor.b64  	%rd6776, %rd6775, %rd6758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4729}, %rd6770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4730,%dummy}, %rd6770;
	}
	shf.l.wrap.b32 	%r4731, %r4730, %r4729, 1;
	shf.l.wrap.b32 	%r4732, %r4729, %r4730, 1;
	mov.b64 	%rd6777, {%r4732, %r4731};
	xor.b64  	%rd6778, %rd6777, %rd6762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4733}, %rd6754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4734,%dummy}, %rd6754;
	}
	shf.l.wrap.b32 	%r4735, %r4734, %r4733, 1;
	shf.l.wrap.b32 	%r4736, %r4733, %r4734, 1;
	mov.b64 	%rd6779, {%r4736, %r4735};
	xor.b64  	%rd6780, %rd6766, %rd6779;
	xor.b64  	%rd6781, %rd6772, %rd6750;
	xor.b64  	%rd6782, %rd6774, %rd6680;
	xor.b64  	%rd6783, %rd6776, %rd6683;
	xor.b64  	%rd6784, %rd6778, %rd6686;
	xor.b64  	%rd6785, %rd6780, %rd6689;
	xor.b64  	%rd6786, %rd6772, %rd6692;
	xor.b64  	%rd6787, %rd6774, %rd6695;
	xor.b64  	%rd6788, %rd6776, %rd6698;
	xor.b64  	%rd6789, %rd6778, %rd6701;
	xor.b64  	%rd6790, %rd6780, %rd6704;
	xor.b64  	%rd6791, %rd6772, %rd6707;
	xor.b64  	%rd6792, %rd6774, %rd6710;
	xor.b64  	%rd6793, %rd6776, %rd6713;
	xor.b64  	%rd6794, %rd6778, %rd6716;
	xor.b64  	%rd6795, %rd6780, %rd6719;
	xor.b64  	%rd6796, %rd6772, %rd6722;
	xor.b64  	%rd6797, %rd6774, %rd6725;
	xor.b64  	%rd6798, %rd6776, %rd6728;
	xor.b64  	%rd6799, %rd6778, %rd6731;
	xor.b64  	%rd6800, %rd6780, %rd6734;
	xor.b64  	%rd6801, %rd6772, %rd6737;
	xor.b64  	%rd6802, %rd6774, %rd6740;
	xor.b64  	%rd6803, %rd6776, %rd6743;
	xor.b64  	%rd6804, %rd6778, %rd6746;
	xor.b64  	%rd6805, %rd6780, %rd6749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4737,%dummy}, %rd6787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4738}, %rd6787;
	}
	shf.r.wrap.b32 	%r4739, %r4738, %r4737, 20;
	shf.r.wrap.b32 	%r4740, %r4737, %r4738, 20;
	mov.b64 	%rd6806, {%r4740, %r4739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4741,%dummy}, %rd6793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4742}, %rd6793;
	}
	shf.r.wrap.b32 	%r4743, %r4742, %r4741, 21;
	shf.r.wrap.b32 	%r4744, %r4741, %r4742, 21;
	mov.b64 	%rd6807, {%r4744, %r4743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4745}, %rd6799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4746,%dummy}, %rd6799;
	}
	shf.l.wrap.b32 	%r4747, %r4746, %r4745, 21;
	shf.l.wrap.b32 	%r4748, %r4745, %r4746, 21;
	mov.b64 	%rd6808, {%r4748, %r4747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4749}, %rd6805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4750,%dummy}, %rd6805;
	}
	shf.l.wrap.b32 	%r4751, %r4750, %r4749, 14;
	shf.l.wrap.b32 	%r4752, %r4749, %r4750, 14;
	mov.b64 	%rd6809, {%r4752, %r4751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4753}, %rd6784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4754,%dummy}, %rd6784;
	}
	shf.l.wrap.b32 	%r4755, %r4754, %r4753, 28;
	shf.l.wrap.b32 	%r4756, %r4753, %r4754, 28;
	mov.b64 	%rd6810, {%r4756, %r4755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4757}, %rd6790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4758,%dummy}, %rd6790;
	}
	shf.l.wrap.b32 	%r4759, %r4758, %r4757, 20;
	shf.l.wrap.b32 	%r4760, %r4757, %r4758, 20;
	mov.b64 	%rd6811, {%r4760, %r4759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4761}, %rd6791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4762,%dummy}, %rd6791;
	}
	shf.l.wrap.b32 	%r4763, %r4762, %r4761, 3;
	shf.l.wrap.b32 	%r4764, %r4761, %r4762, 3;
	mov.b64 	%rd6812, {%r4764, %r4763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4765,%dummy}, %rd6797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4766}, %rd6797;
	}
	shf.r.wrap.b32 	%r4767, %r4766, %r4765, 19;
	shf.r.wrap.b32 	%r4768, %r4765, %r4766, 19;
	mov.b64 	%rd6813, {%r4768, %r4767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4769,%dummy}, %rd6803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4770}, %rd6803;
	}
	shf.r.wrap.b32 	%r4771, %r4770, %r4769, 3;
	shf.r.wrap.b32 	%r4772, %r4769, %r4770, 3;
	mov.b64 	%rd6814, {%r4772, %r4771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4773}, %rd6782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4774,%dummy}, %rd6782;
	}
	shf.l.wrap.b32 	%r4775, %r4774, %r4773, 1;
	shf.l.wrap.b32 	%r4776, %r4773, %r4774, 1;
	mov.b64 	%rd6815, {%r4776, %r4775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4777}, %rd6788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4778,%dummy}, %rd6788;
	}
	shf.l.wrap.b32 	%r4779, %r4778, %r4777, 6;
	shf.l.wrap.b32 	%r4780, %r4777, %r4778, 6;
	mov.b64 	%rd6816, {%r4780, %r4779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4781}, %rd6794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4782,%dummy}, %rd6794;
	}
	shf.l.wrap.b32 	%r4783, %r4782, %r4781, 25;
	shf.l.wrap.b32 	%r4784, %r4781, %r4782, 25;
	mov.b64 	%rd6817, {%r4784, %r4783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd6800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4786,%dummy}, %rd6800;
	}
	shf.l.wrap.b32 	%r4787, %r4786, %r4785, 8;
	shf.l.wrap.b32 	%r4788, %r4785, %r4786, 8;
	mov.b64 	%rd6818, {%r4788, %r4787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4789}, %rd6801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4790,%dummy}, %rd6801;
	}
	shf.l.wrap.b32 	%r4791, %r4790, %r4789, 18;
	shf.l.wrap.b32 	%r4792, %r4789, %r4790, 18;
	mov.b64 	%rd6819, {%r4792, %r4791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4793}, %rd6785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4794,%dummy}, %rd6785;
	}
	shf.l.wrap.b32 	%r4795, %r4794, %r4793, 27;
	shf.l.wrap.b32 	%r4796, %r4793, %r4794, 27;
	mov.b64 	%rd6820, {%r4796, %r4795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4797,%dummy}, %rd6786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4798}, %rd6786;
	}
	shf.r.wrap.b32 	%r4799, %r4798, %r4797, 28;
	shf.r.wrap.b32 	%r4800, %r4797, %r4798, 28;
	mov.b64 	%rd6821, {%r4800, %r4799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4801}, %rd6792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4802,%dummy}, %rd6792;
	}
	shf.l.wrap.b32 	%r4803, %r4802, %r4801, 10;
	shf.l.wrap.b32 	%r4804, %r4801, %r4802, 10;
	mov.b64 	%rd6822, {%r4804, %r4803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4805}, %rd6798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4806,%dummy}, %rd6798;
	}
	shf.l.wrap.b32 	%r4807, %r4806, %r4805, 15;
	shf.l.wrap.b32 	%r4808, %r4805, %r4806, 15;
	mov.b64 	%rd6823, {%r4808, %r4807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4809,%dummy}, %rd6804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4810}, %rd6804;
	}
	shf.r.wrap.b32 	%r4811, %r4810, %r4809, 8;
	shf.r.wrap.b32 	%r4812, %r4809, %r4810, 8;
	mov.b64 	%rd6824, {%r4812, %r4811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4813,%dummy}, %rd6783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4814}, %rd6783;
	}
	shf.r.wrap.b32 	%r4815, %r4814, %r4813, 2;
	shf.r.wrap.b32 	%r4816, %r4813, %r4814, 2;
	mov.b64 	%rd6825, {%r4816, %r4815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4817,%dummy}, %rd6789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4818}, %rd6789;
	}
	shf.r.wrap.b32 	%r4819, %r4818, %r4817, 9;
	shf.r.wrap.b32 	%r4820, %r4817, %r4818, 9;
	mov.b64 	%rd6826, {%r4820, %r4819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4821,%dummy}, %rd6795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4822}, %rd6795;
	}
	shf.r.wrap.b32 	%r4823, %r4822, %r4821, 25;
	shf.r.wrap.b32 	%r4824, %r4821, %r4822, 25;
	mov.b64 	%rd6827, {%r4824, %r4823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4825,%dummy}, %rd6796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4826}, %rd6796;
	}
	shf.r.wrap.b32 	%r4827, %r4826, %r4825, 23;
	shf.r.wrap.b32 	%r4828, %r4825, %r4826, 23;
	mov.b64 	%rd6828, {%r4828, %r4827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4829}, %rd6802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4830,%dummy}, %rd6802;
	}
	shf.l.wrap.b32 	%r4831, %r4830, %r4829, 2;
	shf.l.wrap.b32 	%r4832, %r4829, %r4830, 2;
	mov.b64 	%rd6829, {%r4832, %r4831};
	not.b64 	%rd6830, %rd6806;
	and.b64  	%rd6831, %rd6807, %rd6830;
	xor.b64  	%rd6832, %rd6831, %rd6781;
	not.b64 	%rd6833, %rd6807;
	and.b64  	%rd6834, %rd6808, %rd6833;
	xor.b64  	%rd6835, %rd6834, %rd6806;
	not.b64 	%rd6836, %rd6808;
	and.b64  	%rd6837, %rd6809, %rd6836;
	xor.b64  	%rd6838, %rd6837, %rd6807;
	not.b64 	%rd6839, %rd6809;
	and.b64  	%rd6840, %rd6781, %rd6839;
	xor.b64  	%rd6841, %rd6840, %rd6808;
	not.b64 	%rd6842, %rd6781;
	and.b64  	%rd6843, %rd6806, %rd6842;
	xor.b64  	%rd6844, %rd6843, %rd6809;
	not.b64 	%rd6845, %rd6811;
	and.b64  	%rd6846, %rd6812, %rd6845;
	xor.b64  	%rd6847, %rd6846, %rd6810;
	not.b64 	%rd6848, %rd6812;
	and.b64  	%rd6849, %rd6813, %rd6848;
	xor.b64  	%rd6850, %rd6849, %rd6811;
	not.b64 	%rd6851, %rd6813;
	and.b64  	%rd6852, %rd6814, %rd6851;
	xor.b64  	%rd6853, %rd6852, %rd6812;
	not.b64 	%rd6854, %rd6814;
	and.b64  	%rd6855, %rd6810, %rd6854;
	xor.b64  	%rd6856, %rd6855, %rd6813;
	not.b64 	%rd6857, %rd6810;
	and.b64  	%rd6858, %rd6811, %rd6857;
	xor.b64  	%rd6859, %rd6858, %rd6814;
	not.b64 	%rd6860, %rd6816;
	and.b64  	%rd6861, %rd6817, %rd6860;
	xor.b64  	%rd6862, %rd6861, %rd6815;
	not.b64 	%rd6863, %rd6817;
	and.b64  	%rd6864, %rd6818, %rd6863;
	xor.b64  	%rd6865, %rd6864, %rd6816;
	not.b64 	%rd6866, %rd6818;
	and.b64  	%rd6867, %rd6819, %rd6866;
	xor.b64  	%rd6868, %rd6867, %rd6817;
	not.b64 	%rd6869, %rd6819;
	and.b64  	%rd6870, %rd6815, %rd6869;
	xor.b64  	%rd6871, %rd6870, %rd6818;
	not.b64 	%rd6872, %rd6815;
	and.b64  	%rd6873, %rd6816, %rd6872;
	xor.b64  	%rd6874, %rd6873, %rd6819;
	not.b64 	%rd6875, %rd6821;
	and.b64  	%rd6876, %rd6822, %rd6875;
	xor.b64  	%rd6877, %rd6876, %rd6820;
	not.b64 	%rd6878, %rd6822;
	and.b64  	%rd6879, %rd6823, %rd6878;
	xor.b64  	%rd6880, %rd6879, %rd6821;
	not.b64 	%rd6881, %rd6823;
	and.b64  	%rd6882, %rd6824, %rd6881;
	xor.b64  	%rd6883, %rd6882, %rd6822;
	not.b64 	%rd6884, %rd6824;
	and.b64  	%rd6885, %rd6820, %rd6884;
	xor.b64  	%rd6886, %rd6885, %rd6823;
	not.b64 	%rd6887, %rd6820;
	and.b64  	%rd6888, %rd6821, %rd6887;
	xor.b64  	%rd6889, %rd6888, %rd6824;
	not.b64 	%rd6890, %rd6826;
	and.b64  	%rd6891, %rd6827, %rd6890;
	xor.b64  	%rd6892, %rd6891, %rd6825;
	not.b64 	%rd6893, %rd6827;
	and.b64  	%rd6894, %rd6828, %rd6893;
	xor.b64  	%rd6895, %rd6894, %rd6826;
	not.b64 	%rd6896, %rd6828;
	and.b64  	%rd6897, %rd6829, %rd6896;
	xor.b64  	%rd6898, %rd6897, %rd6827;
	not.b64 	%rd6899, %rd6829;
	and.b64  	%rd6900, %rd6825, %rd6899;
	xor.b64  	%rd6901, %rd6900, %rd6828;
	not.b64 	%rd6902, %rd6825;
	and.b64  	%rd6903, %rd6826, %rd6902;
	xor.b64  	%rd6904, %rd6903, %rd6829;
	xor.b64  	%rd6905, %rd6832, %rd32;
	xor.b64  	%rd6906, %rd6847, %rd6905;
	xor.b64  	%rd6907, %rd6906, %rd6862;
	xor.b64  	%rd6908, %rd6907, %rd6877;
	xor.b64  	%rd6909, %rd6908, %rd6892;
	xor.b64  	%rd6910, %rd6850, %rd6835;
	xor.b64  	%rd6911, %rd6910, %rd6865;
	xor.b64  	%rd6912, %rd6911, %rd6880;
	xor.b64  	%rd6913, %rd6912, %rd6895;
	xor.b64  	%rd6914, %rd6853, %rd6838;
	xor.b64  	%rd6915, %rd6914, %rd6868;
	xor.b64  	%rd6916, %rd6915, %rd6883;
	xor.b64  	%rd6917, %rd6916, %rd6898;
	xor.b64  	%rd6918, %rd6856, %rd6841;
	xor.b64  	%rd6919, %rd6918, %rd6871;
	xor.b64  	%rd6920, %rd6919, %rd6886;
	xor.b64  	%rd6921, %rd6920, %rd6901;
	xor.b64  	%rd6922, %rd6859, %rd6844;
	xor.b64  	%rd6923, %rd6922, %rd6874;
	xor.b64  	%rd6924, %rd6923, %rd6889;
	xor.b64  	%rd6925, %rd6924, %rd6904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4833}, %rd6913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4834,%dummy}, %rd6913;
	}
	shf.l.wrap.b32 	%r4835, %r4834, %r4833, 1;
	shf.l.wrap.b32 	%r4836, %r4833, %r4834, 1;
	mov.b64 	%rd6926, {%r4836, %r4835};
	xor.b64  	%rd6927, %rd6925, %rd6926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4837}, %rd6917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4838,%dummy}, %rd6917;
	}
	shf.l.wrap.b32 	%r4839, %r4838, %r4837, 1;
	shf.l.wrap.b32 	%r4840, %r4837, %r4838, 1;
	mov.b64 	%rd6928, {%r4840, %r4839};
	xor.b64  	%rd6929, %rd6928, %rd6909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4841}, %rd6921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4842,%dummy}, %rd6921;
	}
	shf.l.wrap.b32 	%r4843, %r4842, %r4841, 1;
	shf.l.wrap.b32 	%r4844, %r4841, %r4842, 1;
	mov.b64 	%rd6930, {%r4844, %r4843};
	xor.b64  	%rd6931, %rd6930, %rd6913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4845}, %rd6925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4846,%dummy}, %rd6925;
	}
	shf.l.wrap.b32 	%r4847, %r4846, %r4845, 1;
	shf.l.wrap.b32 	%r4848, %r4845, %r4846, 1;
	mov.b64 	%rd6932, {%r4848, %r4847};
	xor.b64  	%rd6933, %rd6932, %rd6917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4849}, %rd6909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4850,%dummy}, %rd6909;
	}
	shf.l.wrap.b32 	%r4851, %r4850, %r4849, 1;
	shf.l.wrap.b32 	%r4852, %r4849, %r4850, 1;
	mov.b64 	%rd6934, {%r4852, %r4851};
	xor.b64  	%rd6935, %rd6921, %rd6934;
	xor.b64  	%rd6936, %rd6927, %rd6905;
	xor.b64  	%rd6937, %rd6929, %rd6835;
	xor.b64  	%rd6938, %rd6931, %rd6838;
	xor.b64  	%rd6939, %rd6933, %rd6841;
	xor.b64  	%rd6940, %rd6935, %rd6844;
	xor.b64  	%rd6941, %rd6927, %rd6847;
	xor.b64  	%rd6942, %rd6929, %rd6850;
	xor.b64  	%rd6943, %rd6931, %rd6853;
	xor.b64  	%rd6944, %rd6933, %rd6856;
	xor.b64  	%rd6945, %rd6935, %rd6859;
	xor.b64  	%rd6946, %rd6927, %rd6862;
	xor.b64  	%rd6947, %rd6929, %rd6865;
	xor.b64  	%rd6948, %rd6931, %rd6868;
	xor.b64  	%rd6949, %rd6933, %rd6871;
	xor.b64  	%rd6950, %rd6935, %rd6874;
	xor.b64  	%rd6951, %rd6927, %rd6877;
	xor.b64  	%rd6952, %rd6929, %rd6880;
	xor.b64  	%rd6953, %rd6931, %rd6883;
	xor.b64  	%rd6954, %rd6933, %rd6886;
	xor.b64  	%rd6955, %rd6935, %rd6889;
	xor.b64  	%rd6956, %rd6927, %rd6892;
	xor.b64  	%rd6957, %rd6929, %rd6895;
	xor.b64  	%rd6958, %rd6931, %rd6898;
	xor.b64  	%rd6959, %rd6933, %rd6901;
	xor.b64  	%rd6960, %rd6935, %rd6904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4853,%dummy}, %rd6942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4854}, %rd6942;
	}
	shf.r.wrap.b32 	%r4855, %r4854, %r4853, 20;
	shf.r.wrap.b32 	%r4856, %r4853, %r4854, 20;
	mov.b64 	%rd6961, {%r4856, %r4855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4857,%dummy}, %rd6948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4858}, %rd6948;
	}
	shf.r.wrap.b32 	%r4859, %r4858, %r4857, 21;
	shf.r.wrap.b32 	%r4860, %r4857, %r4858, 21;
	mov.b64 	%rd6962, {%r4860, %r4859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4861}, %rd6954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4862,%dummy}, %rd6954;
	}
	shf.l.wrap.b32 	%r4863, %r4862, %r4861, 21;
	shf.l.wrap.b32 	%r4864, %r4861, %r4862, 21;
	mov.b64 	%rd6963, {%r4864, %r4863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4865}, %rd6960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4866,%dummy}, %rd6960;
	}
	shf.l.wrap.b32 	%r4867, %r4866, %r4865, 14;
	shf.l.wrap.b32 	%r4868, %r4865, %r4866, 14;
	mov.b64 	%rd6964, {%r4868, %r4867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4869}, %rd6939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4870,%dummy}, %rd6939;
	}
	shf.l.wrap.b32 	%r4871, %r4870, %r4869, 28;
	shf.l.wrap.b32 	%r4872, %r4869, %r4870, 28;
	mov.b64 	%rd6965, {%r4872, %r4871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd6945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4874,%dummy}, %rd6945;
	}
	shf.l.wrap.b32 	%r4875, %r4874, %r4873, 20;
	shf.l.wrap.b32 	%r4876, %r4873, %r4874, 20;
	mov.b64 	%rd6966, {%r4876, %r4875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4877}, %rd6946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4878,%dummy}, %rd6946;
	}
	shf.l.wrap.b32 	%r4879, %r4878, %r4877, 3;
	shf.l.wrap.b32 	%r4880, %r4877, %r4878, 3;
	mov.b64 	%rd6967, {%r4880, %r4879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4881,%dummy}, %rd6952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4882}, %rd6952;
	}
	shf.r.wrap.b32 	%r4883, %r4882, %r4881, 19;
	shf.r.wrap.b32 	%r4884, %r4881, %r4882, 19;
	mov.b64 	%rd6968, {%r4884, %r4883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4885,%dummy}, %rd6958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4886}, %rd6958;
	}
	shf.r.wrap.b32 	%r4887, %r4886, %r4885, 3;
	shf.r.wrap.b32 	%r4888, %r4885, %r4886, 3;
	mov.b64 	%rd6969, {%r4888, %r4887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4889}, %rd6937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4890,%dummy}, %rd6937;
	}
	shf.l.wrap.b32 	%r4891, %r4890, %r4889, 1;
	shf.l.wrap.b32 	%r4892, %r4889, %r4890, 1;
	mov.b64 	%rd6970, {%r4892, %r4891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4893}, %rd6943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4894,%dummy}, %rd6943;
	}
	shf.l.wrap.b32 	%r4895, %r4894, %r4893, 6;
	shf.l.wrap.b32 	%r4896, %r4893, %r4894, 6;
	mov.b64 	%rd6971, {%r4896, %r4895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd6949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4898,%dummy}, %rd6949;
	}
	shf.l.wrap.b32 	%r4899, %r4898, %r4897, 25;
	shf.l.wrap.b32 	%r4900, %r4897, %r4898, 25;
	mov.b64 	%rd6972, {%r4900, %r4899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4901}, %rd6955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4902,%dummy}, %rd6955;
	}
	shf.l.wrap.b32 	%r4903, %r4902, %r4901, 8;
	shf.l.wrap.b32 	%r4904, %r4901, %r4902, 8;
	mov.b64 	%rd6973, {%r4904, %r4903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4905}, %rd6956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4906,%dummy}, %rd6956;
	}
	shf.l.wrap.b32 	%r4907, %r4906, %r4905, 18;
	shf.l.wrap.b32 	%r4908, %r4905, %r4906, 18;
	mov.b64 	%rd6974, {%r4908, %r4907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4909}, %rd6940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4910,%dummy}, %rd6940;
	}
	shf.l.wrap.b32 	%r4911, %r4910, %r4909, 27;
	shf.l.wrap.b32 	%r4912, %r4909, %r4910, 27;
	mov.b64 	%rd6975, {%r4912, %r4911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4913,%dummy}, %rd6941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4914}, %rd6941;
	}
	shf.r.wrap.b32 	%r4915, %r4914, %r4913, 28;
	shf.r.wrap.b32 	%r4916, %r4913, %r4914, 28;
	mov.b64 	%rd6976, {%r4916, %r4915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4917}, %rd6947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4918,%dummy}, %rd6947;
	}
	shf.l.wrap.b32 	%r4919, %r4918, %r4917, 10;
	shf.l.wrap.b32 	%r4920, %r4917, %r4918, 10;
	mov.b64 	%rd6977, {%r4920, %r4919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4922,%dummy}, %rd6953;
	}
	shf.l.wrap.b32 	%r4923, %r4922, %r4921, 15;
	shf.l.wrap.b32 	%r4924, %r4921, %r4922, 15;
	mov.b64 	%rd6978, {%r4924, %r4923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4925,%dummy}, %rd6959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4926}, %rd6959;
	}
	shf.r.wrap.b32 	%r4927, %r4926, %r4925, 8;
	shf.r.wrap.b32 	%r4928, %r4925, %r4926, 8;
	mov.b64 	%rd6979, {%r4928, %r4927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4929,%dummy}, %rd6938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4930}, %rd6938;
	}
	shf.r.wrap.b32 	%r4931, %r4930, %r4929, 2;
	shf.r.wrap.b32 	%r4932, %r4929, %r4930, 2;
	mov.b64 	%rd6980, {%r4932, %r4931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4933,%dummy}, %rd6944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4934}, %rd6944;
	}
	shf.r.wrap.b32 	%r4935, %r4934, %r4933, 9;
	shf.r.wrap.b32 	%r4936, %r4933, %r4934, 9;
	mov.b64 	%rd6981, {%r4936, %r4935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4937,%dummy}, %rd6950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4938}, %rd6950;
	}
	shf.r.wrap.b32 	%r4939, %r4938, %r4937, 25;
	shf.r.wrap.b32 	%r4940, %r4937, %r4938, 25;
	mov.b64 	%rd6982, {%r4940, %r4939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4941,%dummy}, %rd6951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4942}, %rd6951;
	}
	shf.r.wrap.b32 	%r4943, %r4942, %r4941, 23;
	shf.r.wrap.b32 	%r4944, %r4941, %r4942, 23;
	mov.b64 	%rd6983, {%r4944, %r4943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4945}, %rd6957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4946,%dummy}, %rd6957;
	}
	shf.l.wrap.b32 	%r4947, %r4946, %r4945, 2;
	shf.l.wrap.b32 	%r4948, %r4945, %r4946, 2;
	mov.b64 	%rd6984, {%r4948, %r4947};
	not.b64 	%rd6985, %rd6961;
	and.b64  	%rd6986, %rd6962, %rd6985;
	xor.b64  	%rd6987, %rd6986, %rd6936;
	not.b64 	%rd6988, %rd6962;
	and.b64  	%rd6989, %rd6963, %rd6988;
	xor.b64  	%rd6990, %rd6989, %rd6961;
	not.b64 	%rd6991, %rd6963;
	and.b64  	%rd6992, %rd6964, %rd6991;
	xor.b64  	%rd6993, %rd6992, %rd6962;
	not.b64 	%rd6994, %rd6964;
	and.b64  	%rd6995, %rd6936, %rd6994;
	xor.b64  	%rd6996, %rd6995, %rd6963;
	not.b64 	%rd6997, %rd6936;
	and.b64  	%rd6998, %rd6961, %rd6997;
	xor.b64  	%rd6999, %rd6998, %rd6964;
	not.b64 	%rd7000, %rd6966;
	and.b64  	%rd7001, %rd6967, %rd7000;
	xor.b64  	%rd7002, %rd7001, %rd6965;
	not.b64 	%rd7003, %rd6967;
	and.b64  	%rd7004, %rd6968, %rd7003;
	xor.b64  	%rd7005, %rd7004, %rd6966;
	not.b64 	%rd7006, %rd6968;
	and.b64  	%rd7007, %rd6969, %rd7006;
	xor.b64  	%rd7008, %rd7007, %rd6967;
	not.b64 	%rd7009, %rd6969;
	and.b64  	%rd7010, %rd6965, %rd7009;
	xor.b64  	%rd7011, %rd7010, %rd6968;
	not.b64 	%rd7012, %rd6965;
	and.b64  	%rd7013, %rd6966, %rd7012;
	xor.b64  	%rd7014, %rd7013, %rd6969;
	not.b64 	%rd7015, %rd6971;
	and.b64  	%rd7016, %rd6972, %rd7015;
	xor.b64  	%rd7017, %rd7016, %rd6970;
	not.b64 	%rd7018, %rd6972;
	and.b64  	%rd7019, %rd6973, %rd7018;
	xor.b64  	%rd7020, %rd7019, %rd6971;
	not.b64 	%rd7021, %rd6973;
	and.b64  	%rd7022, %rd6974, %rd7021;
	xor.b64  	%rd7023, %rd7022, %rd6972;
	not.b64 	%rd7024, %rd6974;
	and.b64  	%rd7025, %rd6970, %rd7024;
	xor.b64  	%rd7026, %rd7025, %rd6973;
	not.b64 	%rd7027, %rd6970;
	and.b64  	%rd7028, %rd6971, %rd7027;
	xor.b64  	%rd7029, %rd7028, %rd6974;
	not.b64 	%rd7030, %rd6976;
	and.b64  	%rd7031, %rd6977, %rd7030;
	xor.b64  	%rd7032, %rd7031, %rd6975;
	not.b64 	%rd7033, %rd6977;
	and.b64  	%rd7034, %rd6978, %rd7033;
	xor.b64  	%rd7035, %rd7034, %rd6976;
	not.b64 	%rd7036, %rd6978;
	and.b64  	%rd7037, %rd6979, %rd7036;
	xor.b64  	%rd7038, %rd7037, %rd6977;
	not.b64 	%rd7039, %rd6979;
	and.b64  	%rd7040, %rd6975, %rd7039;
	xor.b64  	%rd7041, %rd7040, %rd6978;
	not.b64 	%rd7042, %rd6975;
	and.b64  	%rd7043, %rd6976, %rd7042;
	xor.b64  	%rd7044, %rd7043, %rd6979;
	not.b64 	%rd7045, %rd6981;
	and.b64  	%rd7046, %rd6982, %rd7045;
	xor.b64  	%rd7047, %rd7046, %rd6980;
	not.b64 	%rd7048, %rd6982;
	and.b64  	%rd7049, %rd6983, %rd7048;
	xor.b64  	%rd7050, %rd7049, %rd6981;
	not.b64 	%rd7051, %rd6983;
	and.b64  	%rd7052, %rd6984, %rd7051;
	xor.b64  	%rd7053, %rd7052, %rd6982;
	not.b64 	%rd7054, %rd6984;
	and.b64  	%rd7055, %rd6980, %rd7054;
	xor.b64  	%rd7056, %rd7055, %rd6983;
	not.b64 	%rd7057, %rd6980;
	and.b64  	%rd7058, %rd6981, %rd7057;
	xor.b64  	%rd7059, %rd7058, %rd6984;
	xor.b64  	%rd7060, %rd6987, %rd33;
	xor.b64  	%rd7061, %rd7002, %rd7060;
	xor.b64  	%rd7062, %rd7061, %rd7017;
	xor.b64  	%rd7063, %rd7062, %rd7032;
	xor.b64  	%rd7064, %rd7063, %rd7047;
	xor.b64  	%rd7065, %rd7005, %rd6990;
	xor.b64  	%rd7066, %rd7065, %rd7020;
	xor.b64  	%rd7067, %rd7066, %rd7035;
	xor.b64  	%rd7068, %rd7067, %rd7050;
	xor.b64  	%rd7069, %rd7008, %rd6993;
	xor.b64  	%rd7070, %rd7069, %rd7023;
	xor.b64  	%rd7071, %rd7070, %rd7038;
	xor.b64  	%rd7072, %rd7071, %rd7053;
	xor.b64  	%rd7073, %rd7011, %rd6996;
	xor.b64  	%rd7074, %rd7073, %rd7026;
	xor.b64  	%rd7075, %rd7074, %rd7041;
	xor.b64  	%rd7076, %rd7075, %rd7056;
	xor.b64  	%rd7077, %rd7014, %rd6999;
	xor.b64  	%rd7078, %rd7077, %rd7029;
	xor.b64  	%rd7079, %rd7078, %rd7044;
	xor.b64  	%rd7080, %rd7079, %rd7059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4949}, %rd7068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4950,%dummy}, %rd7068;
	}
	shf.l.wrap.b32 	%r4951, %r4950, %r4949, 1;
	shf.l.wrap.b32 	%r4952, %r4949, %r4950, 1;
	mov.b64 	%rd7081, {%r4952, %r4951};
	xor.b64  	%rd7082, %rd7080, %rd7081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4953}, %rd7072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4954,%dummy}, %rd7072;
	}
	shf.l.wrap.b32 	%r4955, %r4954, %r4953, 1;
	shf.l.wrap.b32 	%r4956, %r4953, %r4954, 1;
	mov.b64 	%rd7083, {%r4956, %r4955};
	xor.b64  	%rd7084, %rd7083, %rd7064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4957}, %rd7076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4958,%dummy}, %rd7076;
	}
	shf.l.wrap.b32 	%r4959, %r4958, %r4957, 1;
	shf.l.wrap.b32 	%r4960, %r4957, %r4958, 1;
	mov.b64 	%rd7085, {%r4960, %r4959};
	xor.b64  	%rd7086, %rd7085, %rd7068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4961}, %rd7080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4962,%dummy}, %rd7080;
	}
	shf.l.wrap.b32 	%r4963, %r4962, %r4961, 1;
	shf.l.wrap.b32 	%r4964, %r4961, %r4962, 1;
	mov.b64 	%rd7087, {%r4964, %r4963};
	xor.b64  	%rd7088, %rd7087, %rd7072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4965}, %rd7064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4966,%dummy}, %rd7064;
	}
	shf.l.wrap.b32 	%r4967, %r4966, %r4965, 1;
	shf.l.wrap.b32 	%r4968, %r4965, %r4966, 1;
	mov.b64 	%rd7089, {%r4968, %r4967};
	xor.b64  	%rd7090, %rd7076, %rd7089;
	xor.b64  	%rd7091, %rd7082, %rd7060;
	xor.b64  	%rd7092, %rd7084, %rd6990;
	xor.b64  	%rd7093, %rd7086, %rd6993;
	xor.b64  	%rd7094, %rd7088, %rd6996;
	xor.b64  	%rd7095, %rd7090, %rd6999;
	xor.b64  	%rd7096, %rd7082, %rd7002;
	xor.b64  	%rd7097, %rd7084, %rd7005;
	xor.b64  	%rd7098, %rd7086, %rd7008;
	xor.b64  	%rd7099, %rd7088, %rd7011;
	xor.b64  	%rd7100, %rd7090, %rd7014;
	xor.b64  	%rd7101, %rd7082, %rd7017;
	xor.b64  	%rd7102, %rd7084, %rd7020;
	xor.b64  	%rd7103, %rd7086, %rd7023;
	xor.b64  	%rd7104, %rd7088, %rd7026;
	xor.b64  	%rd7105, %rd7090, %rd7029;
	xor.b64  	%rd7106, %rd7082, %rd7032;
	xor.b64  	%rd7107, %rd7084, %rd7035;
	xor.b64  	%rd7108, %rd7086, %rd7038;
	xor.b64  	%rd7109, %rd7088, %rd7041;
	xor.b64  	%rd7110, %rd7090, %rd7044;
	xor.b64  	%rd7111, %rd7082, %rd7047;
	xor.b64  	%rd7112, %rd7084, %rd7050;
	xor.b64  	%rd7113, %rd7086, %rd7053;
	xor.b64  	%rd7114, %rd7088, %rd7056;
	xor.b64  	%rd7115, %rd7090, %rd7059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4969,%dummy}, %rd7097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4970}, %rd7097;
	}
	shf.r.wrap.b32 	%r4971, %r4970, %r4969, 20;
	shf.r.wrap.b32 	%r4972, %r4969, %r4970, 20;
	mov.b64 	%rd7116, {%r4972, %r4971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4973,%dummy}, %rd7103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4974}, %rd7103;
	}
	shf.r.wrap.b32 	%r4975, %r4974, %r4973, 21;
	shf.r.wrap.b32 	%r4976, %r4973, %r4974, 21;
	mov.b64 	%rd7117, {%r4976, %r4975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4977}, %rd7109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4978,%dummy}, %rd7109;
	}
	shf.l.wrap.b32 	%r4979, %r4978, %r4977, 21;
	shf.l.wrap.b32 	%r4980, %r4977, %r4978, 21;
	mov.b64 	%rd7118, {%r4980, %r4979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4981}, %rd7115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4982,%dummy}, %rd7115;
	}
	shf.l.wrap.b32 	%r4983, %r4982, %r4981, 14;
	shf.l.wrap.b32 	%r4984, %r4981, %r4982, 14;
	mov.b64 	%rd7119, {%r4984, %r4983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4985}, %rd7094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4986,%dummy}, %rd7094;
	}
	shf.l.wrap.b32 	%r4987, %r4986, %r4985, 28;
	shf.l.wrap.b32 	%r4988, %r4985, %r4986, 28;
	mov.b64 	%rd7120, {%r4988, %r4987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4989}, %rd7100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4990,%dummy}, %rd7100;
	}
	shf.l.wrap.b32 	%r4991, %r4990, %r4989, 20;
	shf.l.wrap.b32 	%r4992, %r4989, %r4990, 20;
	mov.b64 	%rd7121, {%r4992, %r4991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4993}, %rd7101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4994,%dummy}, %rd7101;
	}
	shf.l.wrap.b32 	%r4995, %r4994, %r4993, 3;
	shf.l.wrap.b32 	%r4996, %r4993, %r4994, 3;
	mov.b64 	%rd7122, {%r4996, %r4995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4997,%dummy}, %rd7107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4998}, %rd7107;
	}
	shf.r.wrap.b32 	%r4999, %r4998, %r4997, 19;
	shf.r.wrap.b32 	%r5000, %r4997, %r4998, 19;
	mov.b64 	%rd7123, {%r5000, %r4999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5001,%dummy}, %rd7113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5002}, %rd7113;
	}
	shf.r.wrap.b32 	%r5003, %r5002, %r5001, 3;
	shf.r.wrap.b32 	%r5004, %r5001, %r5002, 3;
	mov.b64 	%rd7124, {%r5004, %r5003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5005}, %rd7092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5006,%dummy}, %rd7092;
	}
	shf.l.wrap.b32 	%r5007, %r5006, %r5005, 1;
	shf.l.wrap.b32 	%r5008, %r5005, %r5006, 1;
	mov.b64 	%rd7125, {%r5008, %r5007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5009}, %rd7098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5010,%dummy}, %rd7098;
	}
	shf.l.wrap.b32 	%r5011, %r5010, %r5009, 6;
	shf.l.wrap.b32 	%r5012, %r5009, %r5010, 6;
	mov.b64 	%rd7126, {%r5012, %r5011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5013}, %rd7104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5014,%dummy}, %rd7104;
	}
	shf.l.wrap.b32 	%r5015, %r5014, %r5013, 25;
	shf.l.wrap.b32 	%r5016, %r5013, %r5014, 25;
	mov.b64 	%rd7127, {%r5016, %r5015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5017}, %rd7110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5018,%dummy}, %rd7110;
	}
	shf.l.wrap.b32 	%r5019, %r5018, %r5017, 8;
	shf.l.wrap.b32 	%r5020, %r5017, %r5018, 8;
	mov.b64 	%rd7128, {%r5020, %r5019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5021}, %rd7111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5022,%dummy}, %rd7111;
	}
	shf.l.wrap.b32 	%r5023, %r5022, %r5021, 18;
	shf.l.wrap.b32 	%r5024, %r5021, %r5022, 18;
	mov.b64 	%rd7129, {%r5024, %r5023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5025}, %rd7095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5026,%dummy}, %rd7095;
	}
	shf.l.wrap.b32 	%r5027, %r5026, %r5025, 27;
	shf.l.wrap.b32 	%r5028, %r5025, %r5026, 27;
	mov.b64 	%rd7130, {%r5028, %r5027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5029,%dummy}, %rd7096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5030}, %rd7096;
	}
	shf.r.wrap.b32 	%r5031, %r5030, %r5029, 28;
	shf.r.wrap.b32 	%r5032, %r5029, %r5030, 28;
	mov.b64 	%rd7131, {%r5032, %r5031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd7102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5034,%dummy}, %rd7102;
	}
	shf.l.wrap.b32 	%r5035, %r5034, %r5033, 10;
	shf.l.wrap.b32 	%r5036, %r5033, %r5034, 10;
	mov.b64 	%rd7132, {%r5036, %r5035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5037}, %rd7108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5038,%dummy}, %rd7108;
	}
	shf.l.wrap.b32 	%r5039, %r5038, %r5037, 15;
	shf.l.wrap.b32 	%r5040, %r5037, %r5038, 15;
	mov.b64 	%rd7133, {%r5040, %r5039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5041,%dummy}, %rd7114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5042}, %rd7114;
	}
	shf.r.wrap.b32 	%r5043, %r5042, %r5041, 8;
	shf.r.wrap.b32 	%r5044, %r5041, %r5042, 8;
	mov.b64 	%rd7134, {%r5044, %r5043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5045,%dummy}, %rd7093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5046}, %rd7093;
	}
	shf.r.wrap.b32 	%r5047, %r5046, %r5045, 2;
	shf.r.wrap.b32 	%r5048, %r5045, %r5046, 2;
	mov.b64 	%rd7135, {%r5048, %r5047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5049,%dummy}, %rd7099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5050}, %rd7099;
	}
	shf.r.wrap.b32 	%r5051, %r5050, %r5049, 9;
	shf.r.wrap.b32 	%r5052, %r5049, %r5050, 9;
	mov.b64 	%rd7136, {%r5052, %r5051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5053,%dummy}, %rd7105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5054}, %rd7105;
	}
	shf.r.wrap.b32 	%r5055, %r5054, %r5053, 25;
	shf.r.wrap.b32 	%r5056, %r5053, %r5054, 25;
	mov.b64 	%rd7137, {%r5056, %r5055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5057,%dummy}, %rd7106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5058}, %rd7106;
	}
	shf.r.wrap.b32 	%r5059, %r5058, %r5057, 23;
	shf.r.wrap.b32 	%r5060, %r5057, %r5058, 23;
	mov.b64 	%rd7138, {%r5060, %r5059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5061}, %rd7112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5062,%dummy}, %rd7112;
	}
	shf.l.wrap.b32 	%r5063, %r5062, %r5061, 2;
	shf.l.wrap.b32 	%r5064, %r5061, %r5062, 2;
	mov.b64 	%rd7139, {%r5064, %r5063};
	not.b64 	%rd7140, %rd7116;
	and.b64  	%rd7141, %rd7117, %rd7140;
	xor.b64  	%rd7142, %rd7141, %rd7091;
	not.b64 	%rd7143, %rd7117;
	and.b64  	%rd7144, %rd7118, %rd7143;
	xor.b64  	%rd7145, %rd7144, %rd7116;
	not.b64 	%rd7146, %rd7118;
	and.b64  	%rd7147, %rd7119, %rd7146;
	xor.b64  	%rd7148, %rd7147, %rd7117;
	not.b64 	%rd7149, %rd7119;
	and.b64  	%rd7150, %rd7091, %rd7149;
	xor.b64  	%rd7151, %rd7150, %rd7118;
	not.b64 	%rd7152, %rd7091;
	and.b64  	%rd7153, %rd7116, %rd7152;
	xor.b64  	%rd7154, %rd7153, %rd7119;
	not.b64 	%rd7155, %rd7121;
	and.b64  	%rd7156, %rd7122, %rd7155;
	xor.b64  	%rd7157, %rd7156, %rd7120;
	not.b64 	%rd7158, %rd7122;
	and.b64  	%rd7159, %rd7123, %rd7158;
	xor.b64  	%rd7160, %rd7159, %rd7121;
	not.b64 	%rd7161, %rd7123;
	and.b64  	%rd7162, %rd7124, %rd7161;
	xor.b64  	%rd7163, %rd7162, %rd7122;
	not.b64 	%rd7164, %rd7124;
	and.b64  	%rd7165, %rd7120, %rd7164;
	xor.b64  	%rd7166, %rd7165, %rd7123;
	not.b64 	%rd7167, %rd7120;
	and.b64  	%rd7168, %rd7121, %rd7167;
	xor.b64  	%rd7169, %rd7168, %rd7124;
	not.b64 	%rd7170, %rd7126;
	and.b64  	%rd7171, %rd7127, %rd7170;
	xor.b64  	%rd7172, %rd7171, %rd7125;
	not.b64 	%rd7173, %rd7127;
	and.b64  	%rd7174, %rd7128, %rd7173;
	xor.b64  	%rd7175, %rd7174, %rd7126;
	not.b64 	%rd7176, %rd7128;
	and.b64  	%rd7177, %rd7129, %rd7176;
	xor.b64  	%rd7178, %rd7177, %rd7127;
	not.b64 	%rd7179, %rd7129;
	and.b64  	%rd7180, %rd7125, %rd7179;
	xor.b64  	%rd7181, %rd7180, %rd7128;
	not.b64 	%rd7182, %rd7125;
	and.b64  	%rd7183, %rd7126, %rd7182;
	xor.b64  	%rd7184, %rd7183, %rd7129;
	not.b64 	%rd7185, %rd7131;
	and.b64  	%rd7186, %rd7132, %rd7185;
	xor.b64  	%rd7187, %rd7186, %rd7130;
	not.b64 	%rd7188, %rd7132;
	and.b64  	%rd7189, %rd7133, %rd7188;
	xor.b64  	%rd7190, %rd7189, %rd7131;
	not.b64 	%rd7191, %rd7133;
	and.b64  	%rd7192, %rd7134, %rd7191;
	xor.b64  	%rd7193, %rd7192, %rd7132;
	not.b64 	%rd7194, %rd7134;
	and.b64  	%rd7195, %rd7130, %rd7194;
	xor.b64  	%rd7196, %rd7195, %rd7133;
	not.b64 	%rd7197, %rd7130;
	and.b64  	%rd7198, %rd7131, %rd7197;
	xor.b64  	%rd7199, %rd7198, %rd7134;
	not.b64 	%rd7200, %rd7136;
	and.b64  	%rd7201, %rd7137, %rd7200;
	xor.b64  	%rd7202, %rd7201, %rd7135;
	not.b64 	%rd7203, %rd7137;
	and.b64  	%rd7204, %rd7138, %rd7203;
	xor.b64  	%rd7205, %rd7204, %rd7136;
	not.b64 	%rd7206, %rd7138;
	and.b64  	%rd7207, %rd7139, %rd7206;
	xor.b64  	%rd7208, %rd7207, %rd7137;
	not.b64 	%rd7209, %rd7139;
	and.b64  	%rd7210, %rd7135, %rd7209;
	xor.b64  	%rd7211, %rd7210, %rd7138;
	not.b64 	%rd7212, %rd7135;
	and.b64  	%rd7213, %rd7136, %rd7212;
	xor.b64  	%rd7214, %rd7213, %rd7139;
	xor.b64  	%rd7215, %rd7142, %rd34;
	xor.b64  	%rd7216, %rd7157, %rd7215;
	xor.b64  	%rd7217, %rd7216, %rd7172;
	xor.b64  	%rd7218, %rd7217, %rd7187;
	xor.b64  	%rd7219, %rd7218, %rd7202;
	xor.b64  	%rd7220, %rd7160, %rd7145;
	xor.b64  	%rd7221, %rd7220, %rd7175;
	xor.b64  	%rd7222, %rd7221, %rd7190;
	xor.b64  	%rd7223, %rd7222, %rd7205;
	xor.b64  	%rd7224, %rd7163, %rd7148;
	xor.b64  	%rd7225, %rd7224, %rd7178;
	xor.b64  	%rd7226, %rd7225, %rd7193;
	xor.b64  	%rd7227, %rd7226, %rd7208;
	xor.b64  	%rd7228, %rd7166, %rd7151;
	xor.b64  	%rd7229, %rd7228, %rd7181;
	xor.b64  	%rd7230, %rd7229, %rd7196;
	xor.b64  	%rd7231, %rd7230, %rd7211;
	xor.b64  	%rd7232, %rd7169, %rd7154;
	xor.b64  	%rd7233, %rd7232, %rd7184;
	xor.b64  	%rd7234, %rd7233, %rd7199;
	xor.b64  	%rd7235, %rd7234, %rd7214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5065}, %rd7223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5066,%dummy}, %rd7223;
	}
	shf.l.wrap.b32 	%r5067, %r5066, %r5065, 1;
	shf.l.wrap.b32 	%r5068, %r5065, %r5066, 1;
	mov.b64 	%rd7236, {%r5068, %r5067};
	xor.b64  	%rd7237, %rd7235, %rd7236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5069}, %rd7227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5070,%dummy}, %rd7227;
	}
	shf.l.wrap.b32 	%r5071, %r5070, %r5069, 1;
	shf.l.wrap.b32 	%r5072, %r5069, %r5070, 1;
	mov.b64 	%rd7238, {%r5072, %r5071};
	xor.b64  	%rd7239, %rd7238, %rd7219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5073}, %rd7231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5074,%dummy}, %rd7231;
	}
	shf.l.wrap.b32 	%r5075, %r5074, %r5073, 1;
	shf.l.wrap.b32 	%r5076, %r5073, %r5074, 1;
	mov.b64 	%rd7240, {%r5076, %r5075};
	xor.b64  	%rd7241, %rd7240, %rd7223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5077}, %rd7235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5078,%dummy}, %rd7235;
	}
	shf.l.wrap.b32 	%r5079, %r5078, %r5077, 1;
	shf.l.wrap.b32 	%r5080, %r5077, %r5078, 1;
	mov.b64 	%rd7242, {%r5080, %r5079};
	xor.b64  	%rd7243, %rd7242, %rd7227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5081}, %rd7219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5082,%dummy}, %rd7219;
	}
	shf.l.wrap.b32 	%r5083, %r5082, %r5081, 1;
	shf.l.wrap.b32 	%r5084, %r5081, %r5082, 1;
	mov.b64 	%rd7244, {%r5084, %r5083};
	xor.b64  	%rd7245, %rd7231, %rd7244;
	xor.b64  	%rd7246, %rd7237, %rd7215;
	xor.b64  	%rd7247, %rd7239, %rd7145;
	xor.b64  	%rd7248, %rd7241, %rd7148;
	xor.b64  	%rd7249, %rd7243, %rd7151;
	xor.b64  	%rd7250, %rd7245, %rd7154;
	xor.b64  	%rd7251, %rd7237, %rd7157;
	xor.b64  	%rd7252, %rd7239, %rd7160;
	xor.b64  	%rd7253, %rd7241, %rd7163;
	xor.b64  	%rd7254, %rd7243, %rd7166;
	xor.b64  	%rd7255, %rd7245, %rd7169;
	xor.b64  	%rd7256, %rd7237, %rd7172;
	xor.b64  	%rd7257, %rd7239, %rd7175;
	xor.b64  	%rd7258, %rd7241, %rd7178;
	xor.b64  	%rd7259, %rd7243, %rd7181;
	xor.b64  	%rd7260, %rd7245, %rd7184;
	xor.b64  	%rd7261, %rd7237, %rd7187;
	xor.b64  	%rd7262, %rd7239, %rd7190;
	xor.b64  	%rd7263, %rd7241, %rd7193;
	xor.b64  	%rd7264, %rd7243, %rd7196;
	xor.b64  	%rd7265, %rd7245, %rd7199;
	xor.b64  	%rd7266, %rd7237, %rd7202;
	xor.b64  	%rd7267, %rd7239, %rd7205;
	xor.b64  	%rd7268, %rd7241, %rd7208;
	xor.b64  	%rd7269, %rd7243, %rd7211;
	xor.b64  	%rd7270, %rd7245, %rd7214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5085,%dummy}, %rd7252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5086}, %rd7252;
	}
	shf.r.wrap.b32 	%r5087, %r5086, %r5085, 20;
	shf.r.wrap.b32 	%r5088, %r5085, %r5086, 20;
	mov.b64 	%rd7271, {%r5088, %r5087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5089,%dummy}, %rd7258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5090}, %rd7258;
	}
	shf.r.wrap.b32 	%r5091, %r5090, %r5089, 21;
	shf.r.wrap.b32 	%r5092, %r5089, %r5090, 21;
	mov.b64 	%rd7272, {%r5092, %r5091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5093}, %rd7264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5094,%dummy}, %rd7264;
	}
	shf.l.wrap.b32 	%r5095, %r5094, %r5093, 21;
	shf.l.wrap.b32 	%r5096, %r5093, %r5094, 21;
	mov.b64 	%rd7273, {%r5096, %r5095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5097}, %rd7270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5098,%dummy}, %rd7270;
	}
	shf.l.wrap.b32 	%r5099, %r5098, %r5097, 14;
	shf.l.wrap.b32 	%r5100, %r5097, %r5098, 14;
	mov.b64 	%rd7274, {%r5100, %r5099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5101}, %rd7249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5102,%dummy}, %rd7249;
	}
	shf.l.wrap.b32 	%r5103, %r5102, %r5101, 28;
	shf.l.wrap.b32 	%r5104, %r5101, %r5102, 28;
	mov.b64 	%rd7275, {%r5104, %r5103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5105}, %rd7255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5106,%dummy}, %rd7255;
	}
	shf.l.wrap.b32 	%r5107, %r5106, %r5105, 20;
	shf.l.wrap.b32 	%r5108, %r5105, %r5106, 20;
	mov.b64 	%rd7276, {%r5108, %r5107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5109}, %rd7256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5110,%dummy}, %rd7256;
	}
	shf.l.wrap.b32 	%r5111, %r5110, %r5109, 3;
	shf.l.wrap.b32 	%r5112, %r5109, %r5110, 3;
	mov.b64 	%rd7277, {%r5112, %r5111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5113,%dummy}, %rd7262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5114}, %rd7262;
	}
	shf.r.wrap.b32 	%r5115, %r5114, %r5113, 19;
	shf.r.wrap.b32 	%r5116, %r5113, %r5114, 19;
	mov.b64 	%rd7278, {%r5116, %r5115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5117,%dummy}, %rd7268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5118}, %rd7268;
	}
	shf.r.wrap.b32 	%r5119, %r5118, %r5117, 3;
	shf.r.wrap.b32 	%r5120, %r5117, %r5118, 3;
	mov.b64 	%rd7279, {%r5120, %r5119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5121}, %rd7247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5122,%dummy}, %rd7247;
	}
	shf.l.wrap.b32 	%r5123, %r5122, %r5121, 1;
	shf.l.wrap.b32 	%r5124, %r5121, %r5122, 1;
	mov.b64 	%rd7280, {%r5124, %r5123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5125}, %rd7253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5126,%dummy}, %rd7253;
	}
	shf.l.wrap.b32 	%r5127, %r5126, %r5125, 6;
	shf.l.wrap.b32 	%r5128, %r5125, %r5126, 6;
	mov.b64 	%rd7281, {%r5128, %r5127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5129}, %rd7259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5130,%dummy}, %rd7259;
	}
	shf.l.wrap.b32 	%r5131, %r5130, %r5129, 25;
	shf.l.wrap.b32 	%r5132, %r5129, %r5130, 25;
	mov.b64 	%rd7282, {%r5132, %r5131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5133}, %rd7265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5134,%dummy}, %rd7265;
	}
	shf.l.wrap.b32 	%r5135, %r5134, %r5133, 8;
	shf.l.wrap.b32 	%r5136, %r5133, %r5134, 8;
	mov.b64 	%rd7283, {%r5136, %r5135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5137}, %rd7266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5138,%dummy}, %rd7266;
	}
	shf.l.wrap.b32 	%r5139, %r5138, %r5137, 18;
	shf.l.wrap.b32 	%r5140, %r5137, %r5138, 18;
	mov.b64 	%rd7284, {%r5140, %r5139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5141}, %rd7250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5142,%dummy}, %rd7250;
	}
	shf.l.wrap.b32 	%r5143, %r5142, %r5141, 27;
	shf.l.wrap.b32 	%r5144, %r5141, %r5142, 27;
	mov.b64 	%rd7285, {%r5144, %r5143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5145,%dummy}, %rd7251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5146}, %rd7251;
	}
	shf.r.wrap.b32 	%r5147, %r5146, %r5145, 28;
	shf.r.wrap.b32 	%r5148, %r5145, %r5146, 28;
	mov.b64 	%rd7286, {%r5148, %r5147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5149}, %rd7257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5150,%dummy}, %rd7257;
	}
	shf.l.wrap.b32 	%r5151, %r5150, %r5149, 10;
	shf.l.wrap.b32 	%r5152, %r5149, %r5150, 10;
	mov.b64 	%rd7287, {%r5152, %r5151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5153}, %rd7263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5154,%dummy}, %rd7263;
	}
	shf.l.wrap.b32 	%r5155, %r5154, %r5153, 15;
	shf.l.wrap.b32 	%r5156, %r5153, %r5154, 15;
	mov.b64 	%rd7288, {%r5156, %r5155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5157,%dummy}, %rd7269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5158}, %rd7269;
	}
	shf.r.wrap.b32 	%r5159, %r5158, %r5157, 8;
	shf.r.wrap.b32 	%r5160, %r5157, %r5158, 8;
	mov.b64 	%rd7289, {%r5160, %r5159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5161,%dummy}, %rd7248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5162}, %rd7248;
	}
	shf.r.wrap.b32 	%r5163, %r5162, %r5161, 2;
	shf.r.wrap.b32 	%r5164, %r5161, %r5162, 2;
	mov.b64 	%rd7290, {%r5164, %r5163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5165,%dummy}, %rd7254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5166}, %rd7254;
	}
	shf.r.wrap.b32 	%r5167, %r5166, %r5165, 9;
	shf.r.wrap.b32 	%r5168, %r5165, %r5166, 9;
	mov.b64 	%rd7291, {%r5168, %r5167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5169,%dummy}, %rd7260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5170}, %rd7260;
	}
	shf.r.wrap.b32 	%r5171, %r5170, %r5169, 25;
	shf.r.wrap.b32 	%r5172, %r5169, %r5170, 25;
	mov.b64 	%rd7292, {%r5172, %r5171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5173,%dummy}, %rd7261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5174}, %rd7261;
	}
	shf.r.wrap.b32 	%r5175, %r5174, %r5173, 23;
	shf.r.wrap.b32 	%r5176, %r5173, %r5174, 23;
	mov.b64 	%rd7293, {%r5176, %r5175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5177}, %rd7267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5178,%dummy}, %rd7267;
	}
	shf.l.wrap.b32 	%r5179, %r5178, %r5177, 2;
	shf.l.wrap.b32 	%r5180, %r5177, %r5178, 2;
	mov.b64 	%rd7294, {%r5180, %r5179};
	not.b64 	%rd7295, %rd7271;
	and.b64  	%rd7296, %rd7272, %rd7295;
	xor.b64  	%rd7297, %rd7296, %rd7246;
	not.b64 	%rd7298, %rd7272;
	and.b64  	%rd7299, %rd7273, %rd7298;
	xor.b64  	%rd7300, %rd7299, %rd7271;
	not.b64 	%rd7301, %rd7273;
	and.b64  	%rd7302, %rd7274, %rd7301;
	xor.b64  	%rd7303, %rd7302, %rd7272;
	not.b64 	%rd7304, %rd7274;
	and.b64  	%rd7305, %rd7246, %rd7304;
	xor.b64  	%rd7306, %rd7305, %rd7273;
	not.b64 	%rd7307, %rd7246;
	and.b64  	%rd7308, %rd7271, %rd7307;
	xor.b64  	%rd7309, %rd7308, %rd7274;
	not.b64 	%rd7310, %rd7276;
	and.b64  	%rd7311, %rd7277, %rd7310;
	xor.b64  	%rd7312, %rd7311, %rd7275;
	not.b64 	%rd7313, %rd7277;
	and.b64  	%rd7314, %rd7278, %rd7313;
	xor.b64  	%rd7315, %rd7314, %rd7276;
	not.b64 	%rd7316, %rd7278;
	and.b64  	%rd7317, %rd7279, %rd7316;
	xor.b64  	%rd7318, %rd7317, %rd7277;
	not.b64 	%rd7319, %rd7279;
	and.b64  	%rd7320, %rd7275, %rd7319;
	xor.b64  	%rd7321, %rd7320, %rd7278;
	not.b64 	%rd7322, %rd7275;
	and.b64  	%rd7323, %rd7276, %rd7322;
	xor.b64  	%rd7324, %rd7323, %rd7279;
	not.b64 	%rd7325, %rd7281;
	and.b64  	%rd7326, %rd7282, %rd7325;
	xor.b64  	%rd7327, %rd7326, %rd7280;
	not.b64 	%rd7328, %rd7282;
	and.b64  	%rd7329, %rd7283, %rd7328;
	xor.b64  	%rd7330, %rd7329, %rd7281;
	not.b64 	%rd7331, %rd7283;
	and.b64  	%rd7332, %rd7284, %rd7331;
	xor.b64  	%rd7333, %rd7332, %rd7282;
	not.b64 	%rd7334, %rd7284;
	and.b64  	%rd7335, %rd7280, %rd7334;
	xor.b64  	%rd7336, %rd7335, %rd7283;
	not.b64 	%rd7337, %rd7280;
	and.b64  	%rd7338, %rd7281, %rd7337;
	xor.b64  	%rd7339, %rd7338, %rd7284;
	not.b64 	%rd7340, %rd7286;
	and.b64  	%rd7341, %rd7287, %rd7340;
	xor.b64  	%rd7342, %rd7341, %rd7285;
	not.b64 	%rd7343, %rd7287;
	and.b64  	%rd7344, %rd7288, %rd7343;
	xor.b64  	%rd7345, %rd7344, %rd7286;
	not.b64 	%rd7346, %rd7288;
	and.b64  	%rd7347, %rd7289, %rd7346;
	xor.b64  	%rd7348, %rd7347, %rd7287;
	not.b64 	%rd7349, %rd7289;
	and.b64  	%rd7350, %rd7285, %rd7349;
	xor.b64  	%rd7351, %rd7350, %rd7288;
	not.b64 	%rd7352, %rd7285;
	and.b64  	%rd7353, %rd7286, %rd7352;
	xor.b64  	%rd7354, %rd7353, %rd7289;
	not.b64 	%rd7355, %rd7291;
	and.b64  	%rd7356, %rd7292, %rd7355;
	xor.b64  	%rd7357, %rd7356, %rd7290;
	not.b64 	%rd7358, %rd7292;
	and.b64  	%rd7359, %rd7293, %rd7358;
	xor.b64  	%rd7360, %rd7359, %rd7291;
	not.b64 	%rd7361, %rd7293;
	and.b64  	%rd7362, %rd7294, %rd7361;
	xor.b64  	%rd7363, %rd7362, %rd7292;
	not.b64 	%rd7364, %rd7294;
	and.b64  	%rd7365, %rd7290, %rd7364;
	xor.b64  	%rd7366, %rd7365, %rd7293;
	not.b64 	%rd7367, %rd7290;
	and.b64  	%rd7368, %rd7291, %rd7367;
	xor.b64  	%rd7369, %rd7368, %rd7294;
	xor.b64  	%rd7370, %rd7297, %rd35;
	xor.b64  	%rd7371, %rd7312, %rd7370;
	xor.b64  	%rd7372, %rd7371, %rd7327;
	xor.b64  	%rd7373, %rd7372, %rd7342;
	xor.b64  	%rd7374, %rd7373, %rd7357;
	xor.b64  	%rd7375, %rd7315, %rd7300;
	xor.b64  	%rd7376, %rd7375, %rd7330;
	xor.b64  	%rd7377, %rd7376, %rd7345;
	xor.b64  	%rd7378, %rd7377, %rd7360;
	xor.b64  	%rd7379, %rd7318, %rd7303;
	xor.b64  	%rd7380, %rd7379, %rd7333;
	xor.b64  	%rd7381, %rd7380, %rd7348;
	xor.b64  	%rd7382, %rd7381, %rd7363;
	xor.b64  	%rd7383, %rd7321, %rd7306;
	xor.b64  	%rd7384, %rd7383, %rd7336;
	xor.b64  	%rd7385, %rd7384, %rd7351;
	xor.b64  	%rd7386, %rd7385, %rd7366;
	xor.b64  	%rd7387, %rd7324, %rd7309;
	xor.b64  	%rd7388, %rd7387, %rd7339;
	xor.b64  	%rd7389, %rd7388, %rd7354;
	xor.b64  	%rd7390, %rd7389, %rd7369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd7378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5182,%dummy}, %rd7378;
	}
	shf.l.wrap.b32 	%r5183, %r5182, %r5181, 1;
	shf.l.wrap.b32 	%r5184, %r5181, %r5182, 1;
	mov.b64 	%rd7391, {%r5184, %r5183};
	xor.b64  	%rd7392, %rd7390, %rd7391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5185}, %rd7382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5186,%dummy}, %rd7382;
	}
	shf.l.wrap.b32 	%r5187, %r5186, %r5185, 1;
	shf.l.wrap.b32 	%r5188, %r5185, %r5186, 1;
	mov.b64 	%rd7393, {%r5188, %r5187};
	xor.b64  	%rd7394, %rd7393, %rd7374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd7386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5190,%dummy}, %rd7386;
	}
	shf.l.wrap.b32 	%r5191, %r5190, %r5189, 1;
	shf.l.wrap.b32 	%r5192, %r5189, %r5190, 1;
	mov.b64 	%rd7395, {%r5192, %r5191};
	xor.b64  	%rd7396, %rd7395, %rd7378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5193}, %rd7390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5194,%dummy}, %rd7390;
	}
	shf.l.wrap.b32 	%r5195, %r5194, %r5193, 1;
	shf.l.wrap.b32 	%r5196, %r5193, %r5194, 1;
	mov.b64 	%rd7397, {%r5196, %r5195};
	xor.b64  	%rd7398, %rd7397, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5197}, %rd7374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5198,%dummy}, %rd7374;
	}
	shf.l.wrap.b32 	%r5199, %r5198, %r5197, 1;
	shf.l.wrap.b32 	%r5200, %r5197, %r5198, 1;
	mov.b64 	%rd7399, {%r5200, %r5199};
	xor.b64  	%rd7400, %rd7386, %rd7399;
	xor.b64  	%rd7401, %rd7392, %rd7370;
	xor.b64  	%rd7402, %rd7394, %rd7300;
	xor.b64  	%rd7403, %rd7396, %rd7303;
	xor.b64  	%rd7404, %rd7398, %rd7306;
	xor.b64  	%rd7405, %rd7400, %rd7309;
	xor.b64  	%rd7406, %rd7392, %rd7312;
	xor.b64  	%rd7407, %rd7394, %rd7315;
	xor.b64  	%rd7408, %rd7396, %rd7318;
	xor.b64  	%rd7409, %rd7398, %rd7321;
	xor.b64  	%rd7410, %rd7400, %rd7324;
	xor.b64  	%rd7411, %rd7392, %rd7327;
	xor.b64  	%rd7412, %rd7394, %rd7330;
	xor.b64  	%rd7413, %rd7396, %rd7333;
	xor.b64  	%rd7414, %rd7398, %rd7336;
	xor.b64  	%rd7415, %rd7400, %rd7339;
	xor.b64  	%rd7416, %rd7392, %rd7342;
	xor.b64  	%rd7417, %rd7394, %rd7345;
	xor.b64  	%rd7418, %rd7396, %rd7348;
	xor.b64  	%rd7419, %rd7398, %rd7351;
	xor.b64  	%rd7420, %rd7400, %rd7354;
	xor.b64  	%rd7421, %rd7392, %rd7357;
	xor.b64  	%rd7422, %rd7394, %rd7360;
	xor.b64  	%rd7423, %rd7396, %rd7363;
	xor.b64  	%rd7424, %rd7398, %rd7366;
	xor.b64  	%rd7425, %rd7400, %rd7369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5201,%dummy}, %rd7407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5202}, %rd7407;
	}
	shf.r.wrap.b32 	%r5203, %r5202, %r5201, 20;
	shf.r.wrap.b32 	%r5204, %r5201, %r5202, 20;
	mov.b64 	%rd7426, {%r5204, %r5203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5205,%dummy}, %rd7413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5206}, %rd7413;
	}
	shf.r.wrap.b32 	%r5207, %r5206, %r5205, 21;
	shf.r.wrap.b32 	%r5208, %r5205, %r5206, 21;
	mov.b64 	%rd7427, {%r5208, %r5207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5209}, %rd7419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5210,%dummy}, %rd7419;
	}
	shf.l.wrap.b32 	%r5211, %r5210, %r5209, 21;
	shf.l.wrap.b32 	%r5212, %r5209, %r5210, 21;
	mov.b64 	%rd7428, {%r5212, %r5211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5213}, %rd7425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd7425;
	}
	shf.l.wrap.b32 	%r5215, %r5214, %r5213, 14;
	shf.l.wrap.b32 	%r5216, %r5213, %r5214, 14;
	mov.b64 	%rd7429, {%r5216, %r5215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5217}, %rd7404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5218,%dummy}, %rd7404;
	}
	shf.l.wrap.b32 	%r5219, %r5218, %r5217, 28;
	shf.l.wrap.b32 	%r5220, %r5217, %r5218, 28;
	mov.b64 	%rd7430, {%r5220, %r5219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5221}, %rd7410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5222,%dummy}, %rd7410;
	}
	shf.l.wrap.b32 	%r5223, %r5222, %r5221, 20;
	shf.l.wrap.b32 	%r5224, %r5221, %r5222, 20;
	mov.b64 	%rd7431, {%r5224, %r5223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5225}, %rd7411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5226,%dummy}, %rd7411;
	}
	shf.l.wrap.b32 	%r5227, %r5226, %r5225, 3;
	shf.l.wrap.b32 	%r5228, %r5225, %r5226, 3;
	mov.b64 	%rd7432, {%r5228, %r5227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5229,%dummy}, %rd7417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5230}, %rd7417;
	}
	shf.r.wrap.b32 	%r5231, %r5230, %r5229, 19;
	shf.r.wrap.b32 	%r5232, %r5229, %r5230, 19;
	mov.b64 	%rd7433, {%r5232, %r5231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5233,%dummy}, %rd7423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5234}, %rd7423;
	}
	shf.r.wrap.b32 	%r5235, %r5234, %r5233, 3;
	shf.r.wrap.b32 	%r5236, %r5233, %r5234, 3;
	mov.b64 	%rd7434, {%r5236, %r5235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5237}, %rd7402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5238,%dummy}, %rd7402;
	}
	shf.l.wrap.b32 	%r5239, %r5238, %r5237, 1;
	shf.l.wrap.b32 	%r5240, %r5237, %r5238, 1;
	mov.b64 	%rd7435, {%r5240, %r5239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd7408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5242,%dummy}, %rd7408;
	}
	shf.l.wrap.b32 	%r5243, %r5242, %r5241, 6;
	shf.l.wrap.b32 	%r5244, %r5241, %r5242, 6;
	mov.b64 	%rd7436, {%r5244, %r5243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5245}, %rd7414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5246,%dummy}, %rd7414;
	}
	shf.l.wrap.b32 	%r5247, %r5246, %r5245, 25;
	shf.l.wrap.b32 	%r5248, %r5245, %r5246, 25;
	mov.b64 	%rd7437, {%r5248, %r5247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd7420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5250,%dummy}, %rd7420;
	}
	shf.l.wrap.b32 	%r5251, %r5250, %r5249, 8;
	shf.l.wrap.b32 	%r5252, %r5249, %r5250, 8;
	mov.b64 	%rd7438, {%r5252, %r5251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5253}, %rd7421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5254,%dummy}, %rd7421;
	}
	shf.l.wrap.b32 	%r5255, %r5254, %r5253, 18;
	shf.l.wrap.b32 	%r5256, %r5253, %r5254, 18;
	mov.b64 	%rd7439, {%r5256, %r5255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5257}, %rd7405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5258,%dummy}, %rd7405;
	}
	shf.l.wrap.b32 	%r5259, %r5258, %r5257, 27;
	shf.l.wrap.b32 	%r5260, %r5257, %r5258, 27;
	mov.b64 	%rd7440, {%r5260, %r5259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5261,%dummy}, %rd7406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5262}, %rd7406;
	}
	shf.r.wrap.b32 	%r5263, %r5262, %r5261, 28;
	shf.r.wrap.b32 	%r5264, %r5261, %r5262, 28;
	mov.b64 	%rd7441, {%r5264, %r5263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5265}, %rd7412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5266,%dummy}, %rd7412;
	}
	shf.l.wrap.b32 	%r5267, %r5266, %r5265, 10;
	shf.l.wrap.b32 	%r5268, %r5265, %r5266, 10;
	mov.b64 	%rd7442, {%r5268, %r5267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5269}, %rd7418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5270,%dummy}, %rd7418;
	}
	shf.l.wrap.b32 	%r5271, %r5270, %r5269, 15;
	shf.l.wrap.b32 	%r5272, %r5269, %r5270, 15;
	mov.b64 	%rd7443, {%r5272, %r5271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5273,%dummy}, %rd7424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5274}, %rd7424;
	}
	shf.r.wrap.b32 	%r5275, %r5274, %r5273, 8;
	shf.r.wrap.b32 	%r5276, %r5273, %r5274, 8;
	mov.b64 	%rd7444, {%r5276, %r5275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5277,%dummy}, %rd7403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5278}, %rd7403;
	}
	shf.r.wrap.b32 	%r5279, %r5278, %r5277, 2;
	shf.r.wrap.b32 	%r5280, %r5277, %r5278, 2;
	mov.b64 	%rd7445, {%r5280, %r5279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5281,%dummy}, %rd7409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5282}, %rd7409;
	}
	shf.r.wrap.b32 	%r5283, %r5282, %r5281, 9;
	shf.r.wrap.b32 	%r5284, %r5281, %r5282, 9;
	mov.b64 	%rd7446, {%r5284, %r5283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5285,%dummy}, %rd7415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5286}, %rd7415;
	}
	shf.r.wrap.b32 	%r5287, %r5286, %r5285, 25;
	shf.r.wrap.b32 	%r5288, %r5285, %r5286, 25;
	mov.b64 	%rd7447, {%r5288, %r5287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5289,%dummy}, %rd7416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5290}, %rd7416;
	}
	shf.r.wrap.b32 	%r5291, %r5290, %r5289, 23;
	shf.r.wrap.b32 	%r5292, %r5289, %r5290, 23;
	mov.b64 	%rd7448, {%r5292, %r5291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5293}, %rd7422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5294,%dummy}, %rd7422;
	}
	shf.l.wrap.b32 	%r5295, %r5294, %r5293, 2;
	shf.l.wrap.b32 	%r5296, %r5293, %r5294, 2;
	mov.b64 	%rd7449, {%r5296, %r5295};
	not.b64 	%rd7450, %rd7426;
	and.b64  	%rd7451, %rd7427, %rd7450;
	xor.b64  	%rd7452, %rd7451, %rd7401;
	not.b64 	%rd7453, %rd7427;
	and.b64  	%rd7454, %rd7428, %rd7453;
	xor.b64  	%rd7455, %rd7454, %rd7426;
	not.b64 	%rd7456, %rd7428;
	and.b64  	%rd7457, %rd7429, %rd7456;
	xor.b64  	%rd7458, %rd7457, %rd7427;
	not.b64 	%rd7459, %rd7429;
	and.b64  	%rd7460, %rd7401, %rd7459;
	xor.b64  	%rd7461, %rd7460, %rd7428;
	not.b64 	%rd7462, %rd7401;
	and.b64  	%rd7463, %rd7426, %rd7462;
	xor.b64  	%rd7464, %rd7463, %rd7429;
	not.b64 	%rd7465, %rd7431;
	and.b64  	%rd7466, %rd7432, %rd7465;
	xor.b64  	%rd7467, %rd7466, %rd7430;
	not.b64 	%rd7468, %rd7432;
	and.b64  	%rd7469, %rd7433, %rd7468;
	xor.b64  	%rd7470, %rd7469, %rd7431;
	not.b64 	%rd7471, %rd7433;
	and.b64  	%rd7472, %rd7434, %rd7471;
	xor.b64  	%rd7473, %rd7472, %rd7432;
	not.b64 	%rd7474, %rd7434;
	and.b64  	%rd7475, %rd7430, %rd7474;
	xor.b64  	%rd7476, %rd7475, %rd7433;
	not.b64 	%rd7477, %rd7430;
	and.b64  	%rd7478, %rd7431, %rd7477;
	xor.b64  	%rd7479, %rd7478, %rd7434;
	not.b64 	%rd7480, %rd7436;
	and.b64  	%rd7481, %rd7437, %rd7480;
	xor.b64  	%rd7482, %rd7481, %rd7435;
	not.b64 	%rd7483, %rd7437;
	and.b64  	%rd7484, %rd7438, %rd7483;
	xor.b64  	%rd7485, %rd7484, %rd7436;
	not.b64 	%rd7486, %rd7438;
	and.b64  	%rd7487, %rd7439, %rd7486;
	xor.b64  	%rd7488, %rd7487, %rd7437;
	not.b64 	%rd7489, %rd7439;
	and.b64  	%rd7490, %rd7435, %rd7489;
	xor.b64  	%rd7491, %rd7490, %rd7438;
	not.b64 	%rd7492, %rd7435;
	and.b64  	%rd7493, %rd7436, %rd7492;
	xor.b64  	%rd7494, %rd7493, %rd7439;
	not.b64 	%rd7495, %rd7441;
	and.b64  	%rd7496, %rd7442, %rd7495;
	xor.b64  	%rd7497, %rd7496, %rd7440;
	not.b64 	%rd7498, %rd7442;
	and.b64  	%rd7499, %rd7443, %rd7498;
	xor.b64  	%rd7500, %rd7499, %rd7441;
	not.b64 	%rd7501, %rd7443;
	and.b64  	%rd7502, %rd7444, %rd7501;
	xor.b64  	%rd7503, %rd7502, %rd7442;
	not.b64 	%rd7504, %rd7444;
	and.b64  	%rd7505, %rd7440, %rd7504;
	xor.b64  	%rd7506, %rd7505, %rd7443;
	not.b64 	%rd7507, %rd7440;
	and.b64  	%rd7508, %rd7441, %rd7507;
	xor.b64  	%rd7509, %rd7508, %rd7444;
	not.b64 	%rd7510, %rd7446;
	and.b64  	%rd7511, %rd7447, %rd7510;
	xor.b64  	%rd7512, %rd7511, %rd7445;
	not.b64 	%rd7513, %rd7447;
	and.b64  	%rd7514, %rd7448, %rd7513;
	xor.b64  	%rd7515, %rd7514, %rd7446;
	not.b64 	%rd7516, %rd7448;
	and.b64  	%rd7517, %rd7449, %rd7516;
	xor.b64  	%rd7518, %rd7517, %rd7447;
	not.b64 	%rd7519, %rd7449;
	and.b64  	%rd7520, %rd7445, %rd7519;
	xor.b64  	%rd7521, %rd7520, %rd7448;
	not.b64 	%rd7522, %rd7445;
	and.b64  	%rd7523, %rd7446, %rd7522;
	xor.b64  	%rd7524, %rd7523, %rd7449;
	xor.b64  	%rd7525, %rd7452, %rd36;
	xor.b64  	%rd7526, %rd7467, %rd7525;
	xor.b64  	%rd7527, %rd7526, %rd7482;
	xor.b64  	%rd7528, %rd7527, %rd7497;
	xor.b64  	%rd7529, %rd7528, %rd7512;
	xor.b64  	%rd7530, %rd7470, %rd7455;
	xor.b64  	%rd7531, %rd7530, %rd7485;
	xor.b64  	%rd7532, %rd7531, %rd7500;
	xor.b64  	%rd7533, %rd7532, %rd7515;
	xor.b64  	%rd7534, %rd7473, %rd7458;
	xor.b64  	%rd7535, %rd7534, %rd7488;
	xor.b64  	%rd7536, %rd7535, %rd7503;
	xor.b64  	%rd7537, %rd7536, %rd7518;
	xor.b64  	%rd7538, %rd7476, %rd7461;
	xor.b64  	%rd7539, %rd7538, %rd7491;
	xor.b64  	%rd7540, %rd7539, %rd7506;
	xor.b64  	%rd7541, %rd7540, %rd7521;
	xor.b64  	%rd7542, %rd7479, %rd7464;
	xor.b64  	%rd7543, %rd7542, %rd7494;
	xor.b64  	%rd7544, %rd7543, %rd7509;
	xor.b64  	%rd7545, %rd7544, %rd7524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5297}, %rd7533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5298,%dummy}, %rd7533;
	}
	shf.l.wrap.b32 	%r5299, %r5298, %r5297, 1;
	shf.l.wrap.b32 	%r5300, %r5297, %r5298, 1;
	mov.b64 	%rd7546, {%r5300, %r5299};
	xor.b64  	%rd7547, %rd7545, %rd7546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5301}, %rd7537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5302,%dummy}, %rd7537;
	}
	shf.l.wrap.b32 	%r5303, %r5302, %r5301, 1;
	shf.l.wrap.b32 	%r5304, %r5301, %r5302, 1;
	mov.b64 	%rd7548, {%r5304, %r5303};
	xor.b64  	%rd7549, %rd7548, %rd7529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5305}, %rd7541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5306,%dummy}, %rd7541;
	}
	shf.l.wrap.b32 	%r5307, %r5306, %r5305, 1;
	shf.l.wrap.b32 	%r5308, %r5305, %r5306, 1;
	mov.b64 	%rd7550, {%r5308, %r5307};
	xor.b64  	%rd7551, %rd7550, %rd7533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5309}, %rd7545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd7545;
	}
	shf.l.wrap.b32 	%r5311, %r5310, %r5309, 1;
	shf.l.wrap.b32 	%r5312, %r5309, %r5310, 1;
	mov.b64 	%rd7552, {%r5312, %r5311};
	xor.b64  	%rd7553, %rd7552, %rd7537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5313}, %rd7529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5314,%dummy}, %rd7529;
	}
	shf.l.wrap.b32 	%r5315, %r5314, %r5313, 1;
	shf.l.wrap.b32 	%r5316, %r5313, %r5314, 1;
	mov.b64 	%rd7554, {%r5316, %r5315};
	xor.b64  	%rd7555, %rd7541, %rd7554;
	xor.b64  	%rd7556, %rd7547, %rd7525;
	xor.b64  	%rd7557, %rd7549, %rd7455;
	xor.b64  	%rd7558, %rd7551, %rd7458;
	xor.b64  	%rd7559, %rd7553, %rd7461;
	xor.b64  	%rd7560, %rd7555, %rd7464;
	xor.b64  	%rd7561, %rd7547, %rd7467;
	xor.b64  	%rd7562, %rd7549, %rd7470;
	xor.b64  	%rd7563, %rd7551, %rd7473;
	xor.b64  	%rd7564, %rd7553, %rd7476;
	xor.b64  	%rd7565, %rd7555, %rd7479;
	xor.b64  	%rd7566, %rd7547, %rd7482;
	xor.b64  	%rd7567, %rd7549, %rd7485;
	xor.b64  	%rd7568, %rd7551, %rd7488;
	xor.b64  	%rd7569, %rd7553, %rd7491;
	xor.b64  	%rd7570, %rd7555, %rd7494;
	xor.b64  	%rd7571, %rd7547, %rd7497;
	xor.b64  	%rd7572, %rd7549, %rd7500;
	xor.b64  	%rd7573, %rd7551, %rd7503;
	xor.b64  	%rd7574, %rd7553, %rd7506;
	xor.b64  	%rd7575, %rd7555, %rd7509;
	xor.b64  	%rd7576, %rd7547, %rd7512;
	xor.b64  	%rd7577, %rd7549, %rd7515;
	xor.b64  	%rd7578, %rd7551, %rd7518;
	xor.b64  	%rd7579, %rd7553, %rd7521;
	xor.b64  	%rd7580, %rd7555, %rd7524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5317,%dummy}, %rd7562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5318}, %rd7562;
	}
	shf.r.wrap.b32 	%r5319, %r5318, %r5317, 20;
	shf.r.wrap.b32 	%r5320, %r5317, %r5318, 20;
	mov.b64 	%rd7581, {%r5320, %r5319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5321,%dummy}, %rd7568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5322}, %rd7568;
	}
	shf.r.wrap.b32 	%r5323, %r5322, %r5321, 21;
	shf.r.wrap.b32 	%r5324, %r5321, %r5322, 21;
	mov.b64 	%rd7582, {%r5324, %r5323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5325}, %rd7574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd7574;
	}
	shf.l.wrap.b32 	%r5327, %r5326, %r5325, 21;
	shf.l.wrap.b32 	%r5328, %r5325, %r5326, 21;
	mov.b64 	%rd7583, {%r5328, %r5327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5329}, %rd7580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5330,%dummy}, %rd7580;
	}
	shf.l.wrap.b32 	%r5331, %r5330, %r5329, 14;
	shf.l.wrap.b32 	%r5332, %r5329, %r5330, 14;
	mov.b64 	%rd7584, {%r5332, %r5331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5333}, %rd7559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5334,%dummy}, %rd7559;
	}
	shf.l.wrap.b32 	%r5335, %r5334, %r5333, 28;
	shf.l.wrap.b32 	%r5336, %r5333, %r5334, 28;
	mov.b64 	%rd7585, {%r5336, %r5335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5337}, %rd7565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5338,%dummy}, %rd7565;
	}
	shf.l.wrap.b32 	%r5339, %r5338, %r5337, 20;
	shf.l.wrap.b32 	%r5340, %r5337, %r5338, 20;
	mov.b64 	%rd7586, {%r5340, %r5339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5341}, %rd7566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5342,%dummy}, %rd7566;
	}
	shf.l.wrap.b32 	%r5343, %r5342, %r5341, 3;
	shf.l.wrap.b32 	%r5344, %r5341, %r5342, 3;
	mov.b64 	%rd7587, {%r5344, %r5343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5345,%dummy}, %rd7572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5346}, %rd7572;
	}
	shf.r.wrap.b32 	%r5347, %r5346, %r5345, 19;
	shf.r.wrap.b32 	%r5348, %r5345, %r5346, 19;
	mov.b64 	%rd7588, {%r5348, %r5347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5349,%dummy}, %rd7578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5350}, %rd7578;
	}
	shf.r.wrap.b32 	%r5351, %r5350, %r5349, 3;
	shf.r.wrap.b32 	%r5352, %r5349, %r5350, 3;
	mov.b64 	%rd7589, {%r5352, %r5351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5354,%dummy}, %rd7557;
	}
	shf.l.wrap.b32 	%r5355, %r5354, %r5353, 1;
	shf.l.wrap.b32 	%r5356, %r5353, %r5354, 1;
	mov.b64 	%rd7590, {%r5356, %r5355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5357}, %rd7563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5358,%dummy}, %rd7563;
	}
	shf.l.wrap.b32 	%r5359, %r5358, %r5357, 6;
	shf.l.wrap.b32 	%r5360, %r5357, %r5358, 6;
	mov.b64 	%rd7591, {%r5360, %r5359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5361}, %rd7569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5362,%dummy}, %rd7569;
	}
	shf.l.wrap.b32 	%r5363, %r5362, %r5361, 25;
	shf.l.wrap.b32 	%r5364, %r5361, %r5362, 25;
	mov.b64 	%rd7592, {%r5364, %r5363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5365}, %rd7575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5366,%dummy}, %rd7575;
	}
	shf.l.wrap.b32 	%r5367, %r5366, %r5365, 8;
	shf.l.wrap.b32 	%r5368, %r5365, %r5366, 8;
	mov.b64 	%rd7593, {%r5368, %r5367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5369}, %rd7576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5370,%dummy}, %rd7576;
	}
	shf.l.wrap.b32 	%r5371, %r5370, %r5369, 18;
	shf.l.wrap.b32 	%r5372, %r5369, %r5370, 18;
	mov.b64 	%rd7594, {%r5372, %r5371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5373}, %rd7560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5374,%dummy}, %rd7560;
	}
	shf.l.wrap.b32 	%r5375, %r5374, %r5373, 27;
	shf.l.wrap.b32 	%r5376, %r5373, %r5374, 27;
	mov.b64 	%rd7595, {%r5376, %r5375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5377,%dummy}, %rd7561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5378}, %rd7561;
	}
	shf.r.wrap.b32 	%r5379, %r5378, %r5377, 28;
	shf.r.wrap.b32 	%r5380, %r5377, %r5378, 28;
	mov.b64 	%rd7596, {%r5380, %r5379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5381}, %rd7567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5382,%dummy}, %rd7567;
	}
	shf.l.wrap.b32 	%r5383, %r5382, %r5381, 10;
	shf.l.wrap.b32 	%r5384, %r5381, %r5382, 10;
	mov.b64 	%rd7597, {%r5384, %r5383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5385}, %rd7573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5386,%dummy}, %rd7573;
	}
	shf.l.wrap.b32 	%r5387, %r5386, %r5385, 15;
	shf.l.wrap.b32 	%r5388, %r5385, %r5386, 15;
	mov.b64 	%rd7598, {%r5388, %r5387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5389,%dummy}, %rd7579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5390}, %rd7579;
	}
	shf.r.wrap.b32 	%r5391, %r5390, %r5389, 8;
	shf.r.wrap.b32 	%r5392, %r5389, %r5390, 8;
	mov.b64 	%rd7599, {%r5392, %r5391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5393,%dummy}, %rd7558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5394}, %rd7558;
	}
	shf.r.wrap.b32 	%r5395, %r5394, %r5393, 2;
	shf.r.wrap.b32 	%r5396, %r5393, %r5394, 2;
	mov.b64 	%rd7600, {%r5396, %r5395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5397,%dummy}, %rd7564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5398}, %rd7564;
	}
	shf.r.wrap.b32 	%r5399, %r5398, %r5397, 9;
	shf.r.wrap.b32 	%r5400, %r5397, %r5398, 9;
	mov.b64 	%rd7601, {%r5400, %r5399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5401,%dummy}, %rd7570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5402}, %rd7570;
	}
	shf.r.wrap.b32 	%r5403, %r5402, %r5401, 25;
	shf.r.wrap.b32 	%r5404, %r5401, %r5402, 25;
	mov.b64 	%rd7602, {%r5404, %r5403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5405,%dummy}, %rd7571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5406}, %rd7571;
	}
	shf.r.wrap.b32 	%r5407, %r5406, %r5405, 23;
	shf.r.wrap.b32 	%r5408, %r5405, %r5406, 23;
	mov.b64 	%rd7603, {%r5408, %r5407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5409}, %rd7577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5410,%dummy}, %rd7577;
	}
	shf.l.wrap.b32 	%r5411, %r5410, %r5409, 2;
	shf.l.wrap.b32 	%r5412, %r5409, %r5410, 2;
	mov.b64 	%rd7604, {%r5412, %r5411};
	not.b64 	%rd7605, %rd7581;
	and.b64  	%rd7606, %rd7582, %rd7605;
	xor.b64  	%rd7607, %rd7606, %rd7556;
	not.b64 	%rd7608, %rd7582;
	and.b64  	%rd7609, %rd7583, %rd7608;
	xor.b64  	%rd7610, %rd7609, %rd7581;
	not.b64 	%rd7611, %rd7583;
	and.b64  	%rd7612, %rd7584, %rd7611;
	xor.b64  	%rd7613, %rd7612, %rd7582;
	not.b64 	%rd7614, %rd7584;
	and.b64  	%rd7615, %rd7556, %rd7614;
	xor.b64  	%rd7616, %rd7615, %rd7583;
	not.b64 	%rd7617, %rd7556;
	and.b64  	%rd7618, %rd7581, %rd7617;
	xor.b64  	%rd7619, %rd7618, %rd7584;
	not.b64 	%rd7620, %rd7586;
	and.b64  	%rd7621, %rd7587, %rd7620;
	xor.b64  	%rd7622, %rd7621, %rd7585;
	not.b64 	%rd7623, %rd7587;
	and.b64  	%rd7624, %rd7588, %rd7623;
	xor.b64  	%rd7625, %rd7624, %rd7586;
	not.b64 	%rd7626, %rd7588;
	and.b64  	%rd7627, %rd7589, %rd7626;
	xor.b64  	%rd7628, %rd7627, %rd7587;
	not.b64 	%rd7629, %rd7589;
	and.b64  	%rd7630, %rd7585, %rd7629;
	xor.b64  	%rd7631, %rd7630, %rd7588;
	not.b64 	%rd7632, %rd7585;
	and.b64  	%rd7633, %rd7586, %rd7632;
	xor.b64  	%rd7634, %rd7633, %rd7589;
	not.b64 	%rd7635, %rd7591;
	and.b64  	%rd7636, %rd7592, %rd7635;
	xor.b64  	%rd7637, %rd7636, %rd7590;
	not.b64 	%rd7638, %rd7592;
	and.b64  	%rd7639, %rd7593, %rd7638;
	xor.b64  	%rd7640, %rd7639, %rd7591;
	not.b64 	%rd7641, %rd7593;
	and.b64  	%rd7642, %rd7594, %rd7641;
	xor.b64  	%rd7643, %rd7642, %rd7592;
	not.b64 	%rd7644, %rd7594;
	and.b64  	%rd7645, %rd7590, %rd7644;
	xor.b64  	%rd7646, %rd7645, %rd7593;
	not.b64 	%rd7647, %rd7590;
	and.b64  	%rd7648, %rd7591, %rd7647;
	xor.b64  	%rd7649, %rd7648, %rd7594;
	not.b64 	%rd7650, %rd7596;
	and.b64  	%rd7651, %rd7597, %rd7650;
	xor.b64  	%rd7652, %rd7651, %rd7595;
	not.b64 	%rd7653, %rd7597;
	and.b64  	%rd7654, %rd7598, %rd7653;
	xor.b64  	%rd7655, %rd7654, %rd7596;
	not.b64 	%rd7656, %rd7598;
	and.b64  	%rd7657, %rd7599, %rd7656;
	xor.b64  	%rd7658, %rd7657, %rd7597;
	not.b64 	%rd7659, %rd7599;
	and.b64  	%rd7660, %rd7595, %rd7659;
	xor.b64  	%rd7661, %rd7660, %rd7598;
	not.b64 	%rd7662, %rd7595;
	and.b64  	%rd7663, %rd7596, %rd7662;
	xor.b64  	%rd7664, %rd7663, %rd7599;
	not.b64 	%rd7665, %rd7601;
	and.b64  	%rd7666, %rd7602, %rd7665;
	xor.b64  	%rd7667, %rd7666, %rd7600;
	not.b64 	%rd7668, %rd7602;
	and.b64  	%rd7669, %rd7603, %rd7668;
	xor.b64  	%rd7670, %rd7669, %rd7601;
	not.b64 	%rd7671, %rd7603;
	and.b64  	%rd7672, %rd7604, %rd7671;
	xor.b64  	%rd7673, %rd7672, %rd7602;
	not.b64 	%rd7674, %rd7604;
	and.b64  	%rd7675, %rd7600, %rd7674;
	xor.b64  	%rd7676, %rd7675, %rd7603;
	not.b64 	%rd7677, %rd7600;
	and.b64  	%rd7678, %rd7601, %rd7677;
	xor.b64  	%rd7679, %rd7678, %rd7604;
	xor.b64  	%rd7680, %rd7607, %rd37;
	xor.b64  	%rd7681, %rd7622, %rd7680;
	xor.b64  	%rd7682, %rd7681, %rd7637;
	xor.b64  	%rd7683, %rd7682, %rd7652;
	xor.b64  	%rd7684, %rd7683, %rd7667;
	xor.b64  	%rd7685, %rd7625, %rd7610;
	xor.b64  	%rd7686, %rd7685, %rd7640;
	xor.b64  	%rd7687, %rd7686, %rd7655;
	xor.b64  	%rd7688, %rd7687, %rd7670;
	xor.b64  	%rd7689, %rd7628, %rd7613;
	xor.b64  	%rd7690, %rd7689, %rd7643;
	xor.b64  	%rd7691, %rd7690, %rd7658;
	xor.b64  	%rd7692, %rd7691, %rd7673;
	xor.b64  	%rd7693, %rd7631, %rd7616;
	xor.b64  	%rd7694, %rd7693, %rd7646;
	xor.b64  	%rd7695, %rd7694, %rd7661;
	xor.b64  	%rd7696, %rd7695, %rd7676;
	xor.b64  	%rd7697, %rd7634, %rd7619;
	xor.b64  	%rd7698, %rd7697, %rd7649;
	xor.b64  	%rd7699, %rd7698, %rd7664;
	xor.b64  	%rd7700, %rd7699, %rd7679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5413}, %rd7688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5414,%dummy}, %rd7688;
	}
	shf.l.wrap.b32 	%r5415, %r5414, %r5413, 1;
	shf.l.wrap.b32 	%r5416, %r5413, %r5414, 1;
	mov.b64 	%rd7701, {%r5416, %r5415};
	xor.b64  	%rd7702, %rd7700, %rd7701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5417}, %rd7692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5418,%dummy}, %rd7692;
	}
	shf.l.wrap.b32 	%r5419, %r5418, %r5417, 1;
	shf.l.wrap.b32 	%r5420, %r5417, %r5418, 1;
	mov.b64 	%rd7703, {%r5420, %r5419};
	xor.b64  	%rd7704, %rd7703, %rd7684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5421}, %rd7696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd7696;
	}
	shf.l.wrap.b32 	%r5423, %r5422, %r5421, 1;
	shf.l.wrap.b32 	%r5424, %r5421, %r5422, 1;
	mov.b64 	%rd7705, {%r5424, %r5423};
	xor.b64  	%rd7706, %rd7705, %rd7688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5425}, %rd7700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5426,%dummy}, %rd7700;
	}
	shf.l.wrap.b32 	%r5427, %r5426, %r5425, 1;
	shf.l.wrap.b32 	%r5428, %r5425, %r5426, 1;
	mov.b64 	%rd7707, {%r5428, %r5427};
	xor.b64  	%rd7708, %rd7707, %rd7692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5429}, %rd7684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5430,%dummy}, %rd7684;
	}
	shf.l.wrap.b32 	%r5431, %r5430, %r5429, 1;
	shf.l.wrap.b32 	%r5432, %r5429, %r5430, 1;
	mov.b64 	%rd7709, {%r5432, %r5431};
	xor.b64  	%rd7710, %rd7696, %rd7709;
	xor.b64  	%rd7711, %rd7702, %rd7680;
	xor.b64  	%rd7712, %rd7704, %rd7610;
	xor.b64  	%rd7713, %rd7706, %rd7613;
	xor.b64  	%rd7714, %rd7708, %rd7616;
	xor.b64  	%rd7715, %rd7710, %rd7619;
	xor.b64  	%rd7716, %rd7702, %rd7622;
	xor.b64  	%rd7717, %rd7704, %rd7625;
	xor.b64  	%rd7718, %rd7706, %rd7628;
	xor.b64  	%rd7719, %rd7708, %rd7631;
	xor.b64  	%rd7720, %rd7710, %rd7634;
	xor.b64  	%rd7721, %rd7702, %rd7637;
	xor.b64  	%rd7722, %rd7704, %rd7640;
	xor.b64  	%rd7723, %rd7706, %rd7643;
	xor.b64  	%rd7724, %rd7708, %rd7646;
	xor.b64  	%rd7725, %rd7710, %rd7649;
	xor.b64  	%rd7726, %rd7702, %rd7652;
	xor.b64  	%rd7727, %rd7704, %rd7655;
	xor.b64  	%rd7728, %rd7706, %rd7658;
	xor.b64  	%rd7729, %rd7708, %rd7661;
	xor.b64  	%rd7730, %rd7710, %rd7664;
	xor.b64  	%rd7731, %rd7702, %rd7667;
	xor.b64  	%rd7732, %rd7704, %rd7670;
	xor.b64  	%rd7733, %rd7706, %rd7673;
	xor.b64  	%rd7734, %rd7708, %rd7676;
	xor.b64  	%rd7735, %rd7710, %rd7679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5433,%dummy}, %rd7717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5434}, %rd7717;
	}
	shf.r.wrap.b32 	%r5435, %r5434, %r5433, 20;
	shf.r.wrap.b32 	%r5436, %r5433, %r5434, 20;
	mov.b64 	%rd7736, {%r5436, %r5435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5437,%dummy}, %rd7723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5438}, %rd7723;
	}
	shf.r.wrap.b32 	%r5439, %r5438, %r5437, 21;
	shf.r.wrap.b32 	%r5440, %r5437, %r5438, 21;
	mov.b64 	%rd7737, {%r5440, %r5439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd7729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5442,%dummy}, %rd7729;
	}
	shf.l.wrap.b32 	%r5443, %r5442, %r5441, 21;
	shf.l.wrap.b32 	%r5444, %r5441, %r5442, 21;
	mov.b64 	%rd7738, {%r5444, %r5443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5445}, %rd7735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5446,%dummy}, %rd7735;
	}
	shf.l.wrap.b32 	%r5447, %r5446, %r5445, 14;
	shf.l.wrap.b32 	%r5448, %r5445, %r5446, 14;
	mov.b64 	%rd7739, {%r5448, %r5447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd7714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5450,%dummy}, %rd7714;
	}
	shf.l.wrap.b32 	%r5451, %r5450, %r5449, 28;
	shf.l.wrap.b32 	%r5452, %r5449, %r5450, 28;
	mov.b64 	%rd7740, {%r5452, %r5451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5453}, %rd7720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5454,%dummy}, %rd7720;
	}
	shf.l.wrap.b32 	%r5455, %r5454, %r5453, 20;
	shf.l.wrap.b32 	%r5456, %r5453, %r5454, 20;
	mov.b64 	%rd7741, {%r5456, %r5455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd7721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5458,%dummy}, %rd7721;
	}
	shf.l.wrap.b32 	%r5459, %r5458, %r5457, 3;
	shf.l.wrap.b32 	%r5460, %r5457, %r5458, 3;
	mov.b64 	%rd7742, {%r5460, %r5459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5461,%dummy}, %rd7727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5462}, %rd7727;
	}
	shf.r.wrap.b32 	%r5463, %r5462, %r5461, 19;
	shf.r.wrap.b32 	%r5464, %r5461, %r5462, 19;
	mov.b64 	%rd7743, {%r5464, %r5463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5465,%dummy}, %rd7733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5466}, %rd7733;
	}
	shf.r.wrap.b32 	%r5467, %r5466, %r5465, 3;
	shf.r.wrap.b32 	%r5468, %r5465, %r5466, 3;
	mov.b64 	%rd7744, {%r5468, %r5467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5469}, %rd7712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5470,%dummy}, %rd7712;
	}
	shf.l.wrap.b32 	%r5471, %r5470, %r5469, 1;
	shf.l.wrap.b32 	%r5472, %r5469, %r5470, 1;
	mov.b64 	%rd7745, {%r5472, %r5471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5473}, %rd7718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd7718;
	}
	shf.l.wrap.b32 	%r5475, %r5474, %r5473, 6;
	shf.l.wrap.b32 	%r5476, %r5473, %r5474, 6;
	mov.b64 	%rd7746, {%r5476, %r5475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5477}, %rd7724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5478,%dummy}, %rd7724;
	}
	shf.l.wrap.b32 	%r5479, %r5478, %r5477, 25;
	shf.l.wrap.b32 	%r5480, %r5477, %r5478, 25;
	mov.b64 	%rd7747, {%r5480, %r5479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5481}, %rd7730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd7730;
	}
	shf.l.wrap.b32 	%r5483, %r5482, %r5481, 8;
	shf.l.wrap.b32 	%r5484, %r5481, %r5482, 8;
	mov.b64 	%rd7748, {%r5484, %r5483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5485}, %rd7731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5486,%dummy}, %rd7731;
	}
	shf.l.wrap.b32 	%r5487, %r5486, %r5485, 18;
	shf.l.wrap.b32 	%r5488, %r5485, %r5486, 18;
	mov.b64 	%rd7749, {%r5488, %r5487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd7715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5490,%dummy}, %rd7715;
	}
	shf.l.wrap.b32 	%r5491, %r5490, %r5489, 27;
	shf.l.wrap.b32 	%r5492, %r5489, %r5490, 27;
	mov.b64 	%rd7750, {%r5492, %r5491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd7716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd7716;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 28;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 28;
	mov.b64 	%rd7751, {%r5496, %r5495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd7722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5498,%dummy}, %rd7722;
	}
	shf.l.wrap.b32 	%r5499, %r5498, %r5497, 10;
	shf.l.wrap.b32 	%r5500, %r5497, %r5498, 10;
	mov.b64 	%rd7752, {%r5500, %r5499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd7728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5502,%dummy}, %rd7728;
	}
	shf.l.wrap.b32 	%r5503, %r5502, %r5501, 15;
	shf.l.wrap.b32 	%r5504, %r5501, %r5502, 15;
	mov.b64 	%rd7753, {%r5504, %r5503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5505,%dummy}, %rd7734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5506}, %rd7734;
	}
	shf.r.wrap.b32 	%r5507, %r5506, %r5505, 8;
	shf.r.wrap.b32 	%r5508, %r5505, %r5506, 8;
	mov.b64 	%rd7754, {%r5508, %r5507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd7713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd7713;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 2;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 2;
	mov.b64 	%rd7755, {%r5512, %r5511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5513,%dummy}, %rd7719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5514}, %rd7719;
	}
	shf.r.wrap.b32 	%r5515, %r5514, %r5513, 9;
	shf.r.wrap.b32 	%r5516, %r5513, %r5514, 9;
	mov.b64 	%rd7756, {%r5516, %r5515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd7725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd7725;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 25;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 25;
	mov.b64 	%rd7757, {%r5520, %r5519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5521,%dummy}, %rd7726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5522}, %rd7726;
	}
	shf.r.wrap.b32 	%r5523, %r5522, %r5521, 23;
	shf.r.wrap.b32 	%r5524, %r5521, %r5522, 23;
	mov.b64 	%rd7758, {%r5524, %r5523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5525}, %rd7732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd7732;
	}
	shf.l.wrap.b32 	%r5527, %r5526, %r5525, 2;
	shf.l.wrap.b32 	%r5528, %r5525, %r5526, 2;
	mov.b64 	%rd7759, {%r5528, %r5527};
	not.b64 	%rd7760, %rd7736;
	and.b64  	%rd7761, %rd7737, %rd7760;
	xor.b64  	%rd7762, %rd7761, %rd7711;
	not.b64 	%rd7763, %rd7737;
	and.b64  	%rd7764, %rd7738, %rd7763;
	xor.b64  	%rd7765, %rd7764, %rd7736;
	not.b64 	%rd7766, %rd7738;
	and.b64  	%rd7767, %rd7739, %rd7766;
	xor.b64  	%rd7768, %rd7767, %rd7737;
	not.b64 	%rd7769, %rd7739;
	and.b64  	%rd7770, %rd7711, %rd7769;
	xor.b64  	%rd7771, %rd7770, %rd7738;
	not.b64 	%rd7772, %rd7711;
	and.b64  	%rd7773, %rd7736, %rd7772;
	xor.b64  	%rd7774, %rd7773, %rd7739;
	not.b64 	%rd7775, %rd7741;
	and.b64  	%rd7776, %rd7742, %rd7775;
	xor.b64  	%rd7777, %rd7776, %rd7740;
	not.b64 	%rd7778, %rd7742;
	and.b64  	%rd7779, %rd7743, %rd7778;
	xor.b64  	%rd7780, %rd7779, %rd7741;
	not.b64 	%rd7781, %rd7743;
	and.b64  	%rd7782, %rd7744, %rd7781;
	xor.b64  	%rd7783, %rd7782, %rd7742;
	not.b64 	%rd7784, %rd7744;
	and.b64  	%rd7785, %rd7740, %rd7784;
	xor.b64  	%rd7786, %rd7785, %rd7743;
	not.b64 	%rd7787, %rd7740;
	and.b64  	%rd7788, %rd7741, %rd7787;
	xor.b64  	%rd7789, %rd7788, %rd7744;
	not.b64 	%rd7790, %rd7746;
	and.b64  	%rd7791, %rd7747, %rd7790;
	xor.b64  	%rd7792, %rd7791, %rd7745;
	not.b64 	%rd7793, %rd7747;
	and.b64  	%rd7794, %rd7748, %rd7793;
	xor.b64  	%rd7795, %rd7794, %rd7746;
	not.b64 	%rd7796, %rd7748;
	and.b64  	%rd7797, %rd7749, %rd7796;
	xor.b64  	%rd7798, %rd7797, %rd7747;
	not.b64 	%rd7799, %rd7749;
	and.b64  	%rd7800, %rd7745, %rd7799;
	xor.b64  	%rd7801, %rd7800, %rd7748;
	not.b64 	%rd7802, %rd7745;
	and.b64  	%rd7803, %rd7746, %rd7802;
	xor.b64  	%rd7804, %rd7803, %rd7749;
	not.b64 	%rd7805, %rd7751;
	and.b64  	%rd7806, %rd7752, %rd7805;
	xor.b64  	%rd7807, %rd7806, %rd7750;
	not.b64 	%rd7808, %rd7752;
	and.b64  	%rd7809, %rd7753, %rd7808;
	xor.b64  	%rd7810, %rd7809, %rd7751;
	not.b64 	%rd7811, %rd7753;
	and.b64  	%rd7812, %rd7754, %rd7811;
	xor.b64  	%rd7813, %rd7812, %rd7752;
	not.b64 	%rd7814, %rd7754;
	and.b64  	%rd7815, %rd7750, %rd7814;
	xor.b64  	%rd7816, %rd7815, %rd7753;
	not.b64 	%rd7817, %rd7750;
	and.b64  	%rd7818, %rd7751, %rd7817;
	xor.b64  	%rd7819, %rd7818, %rd7754;
	not.b64 	%rd7820, %rd7756;
	and.b64  	%rd7821, %rd7757, %rd7820;
	xor.b64  	%rd7822, %rd7821, %rd7755;
	not.b64 	%rd7823, %rd7757;
	and.b64  	%rd7824, %rd7758, %rd7823;
	xor.b64  	%rd7825, %rd7824, %rd7756;
	not.b64 	%rd7826, %rd7758;
	and.b64  	%rd7827, %rd7759, %rd7826;
	xor.b64  	%rd7828, %rd7827, %rd7757;
	not.b64 	%rd7829, %rd7759;
	and.b64  	%rd7830, %rd7755, %rd7829;
	xor.b64  	%rd7831, %rd7830, %rd7758;
	not.b64 	%rd7832, %rd7755;
	and.b64  	%rd7833, %rd7756, %rd7832;
	xor.b64  	%rd7834, %rd7833, %rd7759;
	xor.b64  	%rd7835, %rd7762, %rd38;
	xor.b64  	%rd7836, %rd7777, %rd7835;
	xor.b64  	%rd7837, %rd7836, %rd7792;
	xor.b64  	%rd7838, %rd7837, %rd7807;
	xor.b64  	%rd7839, %rd7838, %rd7822;
	xor.b64  	%rd7840, %rd7780, %rd7765;
	xor.b64  	%rd7841, %rd7840, %rd7795;
	xor.b64  	%rd7842, %rd7841, %rd7810;
	xor.b64  	%rd7843, %rd7842, %rd7825;
	xor.b64  	%rd7844, %rd7783, %rd7768;
	xor.b64  	%rd7845, %rd7844, %rd7798;
	xor.b64  	%rd7846, %rd7845, %rd7813;
	xor.b64  	%rd7847, %rd7846, %rd7828;
	xor.b64  	%rd7848, %rd7786, %rd7771;
	xor.b64  	%rd7849, %rd7848, %rd7801;
	xor.b64  	%rd7850, %rd7849, %rd7816;
	xor.b64  	%rd7851, %rd7850, %rd7831;
	xor.b64  	%rd7852, %rd7789, %rd7774;
	xor.b64  	%rd7853, %rd7852, %rd7804;
	xor.b64  	%rd7854, %rd7853, %rd7819;
	xor.b64  	%rd7855, %rd7854, %rd7834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd7843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5530,%dummy}, %rd7843;
	}
	shf.l.wrap.b32 	%r5531, %r5530, %r5529, 1;
	shf.l.wrap.b32 	%r5532, %r5529, %r5530, 1;
	mov.b64 	%rd7856, {%r5532, %r5531};
	xor.b64  	%rd7857, %rd7855, %rd7856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5533}, %rd7847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd7847;
	}
	shf.l.wrap.b32 	%r5535, %r5534, %r5533, 1;
	shf.l.wrap.b32 	%r5536, %r5533, %r5534, 1;
	mov.b64 	%rd7858, {%r5536, %r5535};
	xor.b64  	%rd7859, %rd7858, %rd7839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd7851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5538,%dummy}, %rd7851;
	}
	shf.l.wrap.b32 	%r5539, %r5538, %r5537, 1;
	shf.l.wrap.b32 	%r5540, %r5537, %r5538, 1;
	mov.b64 	%rd7860, {%r5540, %r5539};
	xor.b64  	%rd7861, %rd7860, %rd7843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5541}, %rd7855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5542,%dummy}, %rd7855;
	}
	shf.l.wrap.b32 	%r5543, %r5542, %r5541, 1;
	shf.l.wrap.b32 	%r5544, %r5541, %r5542, 1;
	mov.b64 	%rd7862, {%r5544, %r5543};
	xor.b64  	%rd7863, %rd7862, %rd7847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd7839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5546,%dummy}, %rd7839;
	}
	shf.l.wrap.b32 	%r5547, %r5546, %r5545, 1;
	shf.l.wrap.b32 	%r5548, %r5545, %r5546, 1;
	mov.b64 	%rd7864, {%r5548, %r5547};
	xor.b64  	%rd7865, %rd7851, %rd7864;
	xor.b64  	%rd7866, %rd7857, %rd7835;
	xor.b64  	%rd7867, %rd7859, %rd7765;
	xor.b64  	%rd7868, %rd7861, %rd7768;
	xor.b64  	%rd7869, %rd7863, %rd7771;
	xor.b64  	%rd7870, %rd7865, %rd7774;
	xor.b64  	%rd7871, %rd7857, %rd7777;
	xor.b64  	%rd7872, %rd7859, %rd7780;
	xor.b64  	%rd7873, %rd7861, %rd7783;
	xor.b64  	%rd7874, %rd7863, %rd7786;
	xor.b64  	%rd7875, %rd7865, %rd7789;
	xor.b64  	%rd7876, %rd7857, %rd7792;
	xor.b64  	%rd7877, %rd7859, %rd7795;
	xor.b64  	%rd7878, %rd7861, %rd7798;
	xor.b64  	%rd7879, %rd7863, %rd7801;
	xor.b64  	%rd7880, %rd7865, %rd7804;
	xor.b64  	%rd7881, %rd7857, %rd7807;
	xor.b64  	%rd7882, %rd7859, %rd7810;
	xor.b64  	%rd7883, %rd7861, %rd7813;
	xor.b64  	%rd7884, %rd7863, %rd7816;
	xor.b64  	%rd7885, %rd7865, %rd7819;
	xor.b64  	%rd7886, %rd7857, %rd7822;
	xor.b64  	%rd7887, %rd7859, %rd7825;
	xor.b64  	%rd7888, %rd7861, %rd7828;
	xor.b64  	%rd7889, %rd7863, %rd7831;
	xor.b64  	%rd7890, %rd7865, %rd7834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5549,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5550}, %rd7872;
	}
	shf.r.wrap.b32 	%r5551, %r5550, %r5549, 20;
	shf.r.wrap.b32 	%r5552, %r5549, %r5550, 20;
	mov.b64 	%rd7891, {%r5552, %r5551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5553,%dummy}, %rd7878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5554}, %rd7878;
	}
	shf.r.wrap.b32 	%r5555, %r5554, %r5553, 21;
	shf.r.wrap.b32 	%r5556, %r5553, %r5554, 21;
	mov.b64 	%rd7892, {%r5556, %r5555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5557}, %rd7884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5558,%dummy}, %rd7884;
	}
	shf.l.wrap.b32 	%r5559, %r5558, %r5557, 21;
	shf.l.wrap.b32 	%r5560, %r5557, %r5558, 21;
	mov.b64 	%rd7893, {%r5560, %r5559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd7890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5562,%dummy}, %rd7890;
	}
	shf.l.wrap.b32 	%r5563, %r5562, %r5561, 14;
	shf.l.wrap.b32 	%r5564, %r5561, %r5562, 14;
	mov.b64 	%rd7894, {%r5564, %r5563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5565}, %rd7869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5566,%dummy}, %rd7869;
	}
	shf.l.wrap.b32 	%r5567, %r5566, %r5565, 28;
	shf.l.wrap.b32 	%r5568, %r5565, %r5566, 28;
	mov.b64 	%rd7895, {%r5568, %r5567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd7875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5570,%dummy}, %rd7875;
	}
	shf.l.wrap.b32 	%r5571, %r5570, %r5569, 20;
	shf.l.wrap.b32 	%r5572, %r5569, %r5570, 20;
	mov.b64 	%rd7896, {%r5572, %r5571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5573}, %rd7876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5574,%dummy}, %rd7876;
	}
	shf.l.wrap.b32 	%r5575, %r5574, %r5573, 3;
	shf.l.wrap.b32 	%r5576, %r5573, %r5574, 3;
	mov.b64 	%rd7897, {%r5576, %r5575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5577,%dummy}, %rd7882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5578}, %rd7882;
	}
	shf.r.wrap.b32 	%r5579, %r5578, %r5577, 19;
	shf.r.wrap.b32 	%r5580, %r5577, %r5578, 19;
	mov.b64 	%rd7898, {%r5580, %r5579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5581,%dummy}, %rd7888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5582}, %rd7888;
	}
	shf.r.wrap.b32 	%r5583, %r5582, %r5581, 3;
	shf.r.wrap.b32 	%r5584, %r5581, %r5582, 3;
	mov.b64 	%rd7899, {%r5584, %r5583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd7867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd7867;
	}
	shf.l.wrap.b32 	%r5587, %r5586, %r5585, 1;
	shf.l.wrap.b32 	%r5588, %r5585, %r5586, 1;
	mov.b64 	%rd7900, {%r5588, %r5587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5589}, %rd7873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5590,%dummy}, %rd7873;
	}
	shf.l.wrap.b32 	%r5591, %r5590, %r5589, 6;
	shf.l.wrap.b32 	%r5592, %r5589, %r5590, 6;
	mov.b64 	%rd7901, {%r5592, %r5591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5593}, %rd7879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5594,%dummy}, %rd7879;
	}
	shf.l.wrap.b32 	%r5595, %r5594, %r5593, 25;
	shf.l.wrap.b32 	%r5596, %r5593, %r5594, 25;
	mov.b64 	%rd7902, {%r5596, %r5595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd7885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5598,%dummy}, %rd7885;
	}
	shf.l.wrap.b32 	%r5599, %r5598, %r5597, 8;
	shf.l.wrap.b32 	%r5600, %r5597, %r5598, 8;
	mov.b64 	%rd7903, {%r5600, %r5599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5601}, %rd7886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5602,%dummy}, %rd7886;
	}
	shf.l.wrap.b32 	%r5603, %r5602, %r5601, 18;
	shf.l.wrap.b32 	%r5604, %r5601, %r5602, 18;
	mov.b64 	%rd7904, {%r5604, %r5603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd7870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5606,%dummy}, %rd7870;
	}
	shf.l.wrap.b32 	%r5607, %r5606, %r5605, 27;
	shf.l.wrap.b32 	%r5608, %r5605, %r5606, 27;
	mov.b64 	%rd7905, {%r5608, %r5607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5609,%dummy}, %rd7871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5610}, %rd7871;
	}
	shf.r.wrap.b32 	%r5611, %r5610, %r5609, 28;
	shf.r.wrap.b32 	%r5612, %r5609, %r5610, 28;
	mov.b64 	%rd7906, {%r5612, %r5611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd7877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5614,%dummy}, %rd7877;
	}
	shf.l.wrap.b32 	%r5615, %r5614, %r5613, 10;
	shf.l.wrap.b32 	%r5616, %r5613, %r5614, 10;
	mov.b64 	%rd7907, {%r5616, %r5615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd7883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5618,%dummy}, %rd7883;
	}
	shf.l.wrap.b32 	%r5619, %r5618, %r5617, 15;
	shf.l.wrap.b32 	%r5620, %r5617, %r5618, 15;
	mov.b64 	%rd7908, {%r5620, %r5619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd7889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd7889;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 8;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 8;
	mov.b64 	%rd7909, {%r5624, %r5623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5625,%dummy}, %rd7868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5626}, %rd7868;
	}
	shf.r.wrap.b32 	%r5627, %r5626, %r5625, 2;
	shf.r.wrap.b32 	%r5628, %r5625, %r5626, 2;
	mov.b64 	%rd7910, {%r5628, %r5627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd7874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd7874;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 9;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 9;
	mov.b64 	%rd7911, {%r5632, %r5631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5633,%dummy}, %rd7880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5634}, %rd7880;
	}
	shf.r.wrap.b32 	%r5635, %r5634, %r5633, 25;
	shf.r.wrap.b32 	%r5636, %r5633, %r5634, 25;
	mov.b64 	%rd7912, {%r5636, %r5635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5637,%dummy}, %rd7881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5638}, %rd7881;
	}
	shf.r.wrap.b32 	%r5639, %r5638, %r5637, 23;
	shf.r.wrap.b32 	%r5640, %r5637, %r5638, 23;
	mov.b64 	%rd7913, {%r5640, %r5639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd7887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5642,%dummy}, %rd7887;
	}
	shf.l.wrap.b32 	%r5643, %r5642, %r5641, 2;
	shf.l.wrap.b32 	%r5644, %r5641, %r5642, 2;
	mov.b64 	%rd7914, {%r5644, %r5643};
	not.b64 	%rd7915, %rd7891;
	and.b64  	%rd7916, %rd7892, %rd7915;
	xor.b64  	%rd7917, %rd7916, %rd7866;
	not.b64 	%rd7918, %rd7892;
	and.b64  	%rd7919, %rd7893, %rd7918;
	xor.b64  	%rd7920, %rd7919, %rd7891;
	st.local.u64 	[%rd2+8], %rd7920;
	not.b64 	%rd7921, %rd7893;
	and.b64  	%rd7922, %rd7894, %rd7921;
	xor.b64  	%rd7923, %rd7922, %rd7892;
	st.local.u64 	[%rd2+16], %rd7923;
	not.b64 	%rd7924, %rd7894;
	and.b64  	%rd7925, %rd7866, %rd7924;
	xor.b64  	%rd7926, %rd7925, %rd7893;
	st.local.u64 	[%rd2+24], %rd7926;
	not.b64 	%rd7927, %rd7866;
	and.b64  	%rd7928, %rd7891, %rd7927;
	xor.b64  	%rd7929, %rd7928, %rd7894;
	st.local.u64 	[%rd2+32], %rd7929;
	not.b64 	%rd7930, %rd7896;
	and.b64  	%rd7931, %rd7897, %rd7930;
	xor.b64  	%rd7932, %rd7931, %rd7895;
	st.local.u64 	[%rd2+40], %rd7932;
	not.b64 	%rd7933, %rd7897;
	and.b64  	%rd7934, %rd7898, %rd7933;
	xor.b64  	%rd7935, %rd7934, %rd7896;
	st.local.u64 	[%rd2+48], %rd7935;
	not.b64 	%rd7936, %rd7898;
	and.b64  	%rd7937, %rd7899, %rd7936;
	xor.b64  	%rd7938, %rd7937, %rd7897;
	st.local.u64 	[%rd2+56], %rd7938;
	not.b64 	%rd7939, %rd7899;
	and.b64  	%rd7940, %rd7895, %rd7939;
	xor.b64  	%rd7941, %rd7940, %rd7898;
	st.local.u64 	[%rd2+64], %rd7941;
	not.b64 	%rd7942, %rd7895;
	and.b64  	%rd7943, %rd7896, %rd7942;
	xor.b64  	%rd7944, %rd7943, %rd7899;
	st.local.u64 	[%rd2+72], %rd7944;
	not.b64 	%rd7945, %rd7901;
	and.b64  	%rd7946, %rd7902, %rd7945;
	xor.b64  	%rd7947, %rd7946, %rd7900;
	st.local.u64 	[%rd2+80], %rd7947;
	not.b64 	%rd7948, %rd7902;
	and.b64  	%rd7949, %rd7903, %rd7948;
	xor.b64  	%rd7950, %rd7949, %rd7901;
	st.local.u64 	[%rd2+88], %rd7950;
	not.b64 	%rd7951, %rd7903;
	and.b64  	%rd7952, %rd7904, %rd7951;
	xor.b64  	%rd7953, %rd7952, %rd7902;
	st.local.u64 	[%rd2+96], %rd7953;
	not.b64 	%rd7954, %rd7904;
	and.b64  	%rd7955, %rd7900, %rd7954;
	xor.b64  	%rd7956, %rd7955, %rd7903;
	st.local.u64 	[%rd2+104], %rd7956;
	not.b64 	%rd7957, %rd7900;
	and.b64  	%rd7958, %rd7901, %rd7957;
	xor.b64  	%rd7959, %rd7958, %rd7904;
	st.local.u64 	[%rd2+112], %rd7959;
	not.b64 	%rd7960, %rd7906;
	and.b64  	%rd7961, %rd7907, %rd7960;
	xor.b64  	%rd7962, %rd7961, %rd7905;
	st.local.u64 	[%rd2+120], %rd7962;
	not.b64 	%rd7963, %rd7907;
	and.b64  	%rd7964, %rd7908, %rd7963;
	xor.b64  	%rd7965, %rd7964, %rd7906;
	st.local.u64 	[%rd2+128], %rd7965;
	not.b64 	%rd7966, %rd7908;
	and.b64  	%rd7967, %rd7909, %rd7966;
	xor.b64  	%rd7968, %rd7967, %rd7907;
	st.local.u64 	[%rd2+136], %rd7968;
	not.b64 	%rd7969, %rd7909;
	and.b64  	%rd7970, %rd7905, %rd7969;
	xor.b64  	%rd7971, %rd7970, %rd7908;
	st.local.u64 	[%rd2+144], %rd7971;
	not.b64 	%rd7972, %rd7905;
	and.b64  	%rd7973, %rd7906, %rd7972;
	xor.b64  	%rd7974, %rd7973, %rd7909;
	st.local.u64 	[%rd2+152], %rd7974;
	not.b64 	%rd7975, %rd7911;
	and.b64  	%rd7976, %rd7912, %rd7975;
	xor.b64  	%rd7977, %rd7976, %rd7910;
	st.local.u64 	[%rd2+160], %rd7977;
	not.b64 	%rd7978, %rd7912;
	and.b64  	%rd7979, %rd7913, %rd7978;
	xor.b64  	%rd7980, %rd7979, %rd7911;
	st.local.u64 	[%rd2+168], %rd7980;
	not.b64 	%rd7981, %rd7913;
	and.b64  	%rd7982, %rd7914, %rd7981;
	xor.b64  	%rd7983, %rd7982, %rd7912;
	st.local.u64 	[%rd2+176], %rd7983;
	not.b64 	%rd7984, %rd7914;
	and.b64  	%rd7985, %rd7910, %rd7984;
	xor.b64  	%rd7986, %rd7985, %rd7913;
	st.local.u64 	[%rd2+184], %rd7986;
	not.b64 	%rd7987, %rd7910;
	and.b64  	%rd7988, %rd7911, %rd7987;
	xor.b64  	%rd7989, %rd7988, %rd7914;
	st.local.u64 	[%rd2+192], %rd7989;
	xor.b64  	%rd7990, %rd7917, %rd39;
	st.local.u64 	[%rd2], %rd7990;
	bra.uni 	$L__BB2_29;

$L__BB2_7:
	setp.eq.s64 	%p10, %rd15, 0;
	@%p10 bra 	$L__BB2_15;

	max.u64 	%rd216, %rd15, 1;
	add.s64 	%rd217, %rd216, -1;
	setp.lt.u64 	%p11, %rd217, 3;
	mov.u64 	%rd19835, 0;
	mov.u64 	%rd19836, %rd19835;
	@%p11 bra 	$L__BB2_11;

	and.b64  	%rd221, %rd216, 3;
	sub.s64 	%rd19834, %rd216, %rd221;

$L__BB2_10:
	add.s64 	%rd222, %rd19836, %rd19844;
	add.s64 	%rd223, %rd1, %rd222;
	shl.b64 	%rd224, %rd19835, 3;
	add.s64 	%rd225, %rd2, %rd224;
	ld.local.u64 	%rd226, [%rd225];
	ld.local.u8 	%rd227, [%rd223];
	ld.local.u8 	%rd228, [%rd223+1];
	bfi.b64 	%rd229, %rd228, %rd227, 8, 8;
	ld.local.u8 	%rd230, [%rd223+2];
	ld.local.u8 	%rd231, [%rd223+3];
	bfi.b64 	%rd232, %rd231, %rd230, 8, 8;
	bfi.b64 	%rd233, %rd232, %rd229, 16, 16;
	ld.local.u8 	%rd234, [%rd223+4];
	ld.local.u8 	%rd235, [%rd223+5];
	bfi.b64 	%rd236, %rd235, %rd234, 8, 8;
	ld.local.u8 	%rd237, [%rd223+6];
	ld.local.u8 	%rd238, [%rd223+7];
	bfi.b64 	%rd239, %rd238, %rd237, 8, 8;
	bfi.b64 	%rd240, %rd239, %rd236, 16, 16;
	bfi.b64 	%rd241, %rd240, %rd233, 32, 32;
	xor.b64  	%rd242, %rd226, %rd241;
	st.local.u64 	[%rd225], %rd242;
	ld.local.u64 	%rd243, [%rd225+8];
	ld.local.u8 	%rd244, [%rd223+8];
	ld.local.u8 	%rd245, [%rd223+9];
	bfi.b64 	%rd246, %rd245, %rd244, 8, 8;
	ld.local.u8 	%rd247, [%rd223+10];
	ld.local.u8 	%rd248, [%rd223+11];
	bfi.b64 	%rd249, %rd248, %rd247, 8, 8;
	bfi.b64 	%rd250, %rd249, %rd246, 16, 16;
	ld.local.u8 	%rd251, [%rd223+12];
	ld.local.u8 	%rd252, [%rd223+13];
	bfi.b64 	%rd253, %rd252, %rd251, 8, 8;
	ld.local.u8 	%rd254, [%rd223+14];
	ld.local.u8 	%rd255, [%rd223+15];
	bfi.b64 	%rd256, %rd255, %rd254, 8, 8;
	bfi.b64 	%rd257, %rd256, %rd253, 16, 16;
	bfi.b64 	%rd258, %rd257, %rd250, 32, 32;
	xor.b64  	%rd259, %rd243, %rd258;
	st.local.u64 	[%rd225+8], %rd259;
	ld.local.u64 	%rd260, [%rd225+16];
	ld.local.u8 	%rd261, [%rd223+16];
	ld.local.u8 	%rd262, [%rd223+17];
	bfi.b64 	%rd263, %rd262, %rd261, 8, 8;
	ld.local.u8 	%rd264, [%rd223+18];
	ld.local.u8 	%rd265, [%rd223+19];
	bfi.b64 	%rd266, %rd265, %rd264, 8, 8;
	bfi.b64 	%rd267, %rd266, %rd263, 16, 16;
	ld.local.u8 	%rd268, [%rd223+20];
	ld.local.u8 	%rd269, [%rd223+21];
	bfi.b64 	%rd270, %rd269, %rd268, 8, 8;
	ld.local.u8 	%rd271, [%rd223+22];
	ld.local.u8 	%rd272, [%rd223+23];
	bfi.b64 	%rd273, %rd272, %rd271, 8, 8;
	bfi.b64 	%rd274, %rd273, %rd270, 16, 16;
	bfi.b64 	%rd275, %rd274, %rd267, 32, 32;
	xor.b64  	%rd276, %rd260, %rd275;
	st.local.u64 	[%rd225+16], %rd276;
	ld.local.u64 	%rd277, [%rd225+24];
	ld.local.u8 	%rd278, [%rd223+24];
	ld.local.u8 	%rd279, [%rd223+25];
	bfi.b64 	%rd280, %rd279, %rd278, 8, 8;
	ld.local.u8 	%rd281, [%rd223+26];
	ld.local.u8 	%rd282, [%rd223+27];
	bfi.b64 	%rd283, %rd282, %rd281, 8, 8;
	bfi.b64 	%rd284, %rd283, %rd280, 16, 16;
	ld.local.u8 	%rd285, [%rd223+28];
	ld.local.u8 	%rd286, [%rd223+29];
	bfi.b64 	%rd287, %rd286, %rd285, 8, 8;
	ld.local.u8 	%rd288, [%rd223+30];
	ld.local.u8 	%rd289, [%rd223+31];
	bfi.b64 	%rd290, %rd289, %rd288, 8, 8;
	bfi.b64 	%rd291, %rd290, %rd287, 16, 16;
	bfi.b64 	%rd292, %rd291, %rd284, 32, 32;
	xor.b64  	%rd293, %rd277, %rd292;
	st.local.u64 	[%rd225+24], %rd293;
	add.s64 	%rd19836, %rd19836, 32;
	add.s64 	%rd19835, %rd19835, 4;
	add.s64 	%rd19834, %rd19834, -4;
	setp.ne.s64 	%p12, %rd19834, 0;
	@%p12 bra 	$L__BB2_10;

$L__BB2_11:
	and.b64  	%rd295, %rd216, 3;
	setp.eq.s64 	%p13, %rd295, 0;
	@%p13 bra 	$L__BB2_15;

	setp.eq.s64 	%p14, %rd295, 1;
	add.s64 	%rd298, %rd19836, %rd19844;
	add.s64 	%rd52, %rd1, %rd298;
	shl.b64 	%rd299, %rd19835, 3;
	add.s64 	%rd53, %rd2, %rd299;
	ld.local.u64 	%rd300, [%rd53];
	ld.local.u8 	%rd301, [%rd52];
	ld.local.u8 	%rd302, [%rd52+1];
	bfi.b64 	%rd303, %rd302, %rd301, 8, 8;
	ld.local.u8 	%rd304, [%rd52+2];
	ld.local.u8 	%rd305, [%rd52+3];
	bfi.b64 	%rd306, %rd305, %rd304, 8, 8;
	bfi.b64 	%rd307, %rd306, %rd303, 16, 16;
	ld.local.u8 	%rd308, [%rd52+4];
	ld.local.u8 	%rd309, [%rd52+5];
	bfi.b64 	%rd310, %rd309, %rd308, 8, 8;
	ld.local.u8 	%rd311, [%rd52+6];
	ld.local.u8 	%rd312, [%rd52+7];
	bfi.b64 	%rd313, %rd312, %rd311, 8, 8;
	bfi.b64 	%rd314, %rd313, %rd310, 16, 16;
	bfi.b64 	%rd315, %rd314, %rd307, 32, 32;
	xor.b64  	%rd316, %rd300, %rd315;
	st.local.u64 	[%rd53], %rd316;
	@%p14 bra 	$L__BB2_15;

	setp.eq.s64 	%p15, %rd295, 2;
	ld.local.u64 	%rd319, [%rd53+8];
	ld.local.u8 	%rd320, [%rd52+8];
	ld.local.u8 	%rd321, [%rd52+9];
	bfi.b64 	%rd322, %rd321, %rd320, 8, 8;
	ld.local.u8 	%rd323, [%rd52+10];
	ld.local.u8 	%rd324, [%rd52+11];
	bfi.b64 	%rd325, %rd324, %rd323, 8, 8;
	bfi.b64 	%rd326, %rd325, %rd322, 16, 16;
	ld.local.u8 	%rd327, [%rd52+12];
	ld.local.u8 	%rd328, [%rd52+13];
	bfi.b64 	%rd329, %rd328, %rd327, 8, 8;
	ld.local.u8 	%rd330, [%rd52+14];
	ld.local.u8 	%rd331, [%rd52+15];
	bfi.b64 	%rd332, %rd331, %rd330, 8, 8;
	bfi.b64 	%rd333, %rd332, %rd329, 16, 16;
	bfi.b64 	%rd334, %rd333, %rd326, 32, 32;
	xor.b64  	%rd335, %rd319, %rd334;
	st.local.u64 	[%rd53+8], %rd335;
	@%p15 bra 	$L__BB2_15;

	ld.local.u64 	%rd336, [%rd53+16];
	ld.local.u8 	%rd337, [%rd52+16];
	ld.local.u8 	%rd338, [%rd52+17];
	bfi.b64 	%rd339, %rd338, %rd337, 8, 8;
	ld.local.u8 	%rd340, [%rd52+18];
	ld.local.u8 	%rd341, [%rd52+19];
	bfi.b64 	%rd342, %rd341, %rd340, 8, 8;
	bfi.b64 	%rd343, %rd342, %rd339, 16, 16;
	ld.local.u8 	%rd344, [%rd52+20];
	ld.local.u8 	%rd345, [%rd52+21];
	bfi.b64 	%rd346, %rd345, %rd344, 8, 8;
	ld.local.u8 	%rd347, [%rd52+22];
	ld.local.u8 	%rd348, [%rd52+23];
	bfi.b64 	%rd349, %rd348, %rd347, 8, 8;
	bfi.b64 	%rd350, %rd349, %rd346, 16, 16;
	bfi.b64 	%rd351, %rd350, %rd343, 32, 32;
	xor.b64  	%rd352, %rd336, %rd351;
	st.local.u64 	[%rd53+16], %rd352;

$L__BB2_15:
	ld.local.u64 	%rd354, [%rd2+40];
	mov.u64 	%rd19843, 0;
	ld.local.u64 	%rd355, [%rd2];
	xor.b64  	%rd356, %rd354, %rd355;
	ld.local.u64 	%rd357, [%rd2+80];
	xor.b64  	%rd358, %rd356, %rd357;
	ld.local.u64 	%rd359, [%rd2+120];
	xor.b64  	%rd360, %rd358, %rd359;
	ld.local.u64 	%rd361, [%rd2+160];
	xor.b64  	%rd362, %rd360, %rd361;
	ld.local.u64 	%rd363, [%rd2+48];
	ld.local.u64 	%rd364, [%rd2+8];
	xor.b64  	%rd365, %rd363, %rd364;
	ld.local.u64 	%rd366, [%rd2+88];
	xor.b64  	%rd367, %rd365, %rd366;
	ld.local.u64 	%rd368, [%rd2+128];
	xor.b64  	%rd369, %rd367, %rd368;
	ld.local.u64 	%rd370, [%rd2+168];
	xor.b64  	%rd371, %rd369, %rd370;
	ld.local.u64 	%rd372, [%rd2+56];
	ld.local.u64 	%rd373, [%rd2+16];
	xor.b64  	%rd374, %rd372, %rd373;
	ld.local.u64 	%rd375, [%rd2+96];
	xor.b64  	%rd376, %rd374, %rd375;
	ld.local.u64 	%rd377, [%rd2+136];
	xor.b64  	%rd378, %rd376, %rd377;
	ld.local.u64 	%rd379, [%rd2+176];
	xor.b64  	%rd380, %rd378, %rd379;
	mov.u64 	%rd381, 64;
	ld.local.u64 	%rd382, [%rd2+64];
	ld.local.u64 	%rd383, [%rd2+24];
	xor.b64  	%rd384, %rd382, %rd383;
	ld.local.u64 	%rd385, [%rd2+104];
	xor.b64  	%rd386, %rd384, %rd385;
	ld.local.u64 	%rd387, [%rd2+144];
	xor.b64  	%rd388, %rd386, %rd387;
	ld.local.u64 	%rd389, [%rd2+184];
	xor.b64  	%rd390, %rd388, %rd389;
	ld.local.u64 	%rd391, [%rd2+72];
	ld.local.u64 	%rd392, [%rd2+32];
	xor.b64  	%rd393, %rd391, %rd392;
	ld.local.u64 	%rd394, [%rd2+112];
	xor.b64  	%rd395, %rd393, %rd394;
	ld.local.u64 	%rd396, [%rd2+152];
	xor.b64  	%rd397, %rd395, %rd396;
	ld.local.u64 	%rd398, [%rd2+192];
	xor.b64  	%rd399, %rd397, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r78,%dummy}, %rd371;
	}
	shf.l.wrap.b32 	%r79, %r78, %r77, 1;
	shf.l.wrap.b32 	%r80, %r77, %r78, 1;
	mov.b64 	%rd400, {%r80, %r79};
	xor.b64  	%rd401, %rd399, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r82,%dummy}, %rd380;
	}
	shf.l.wrap.b32 	%r83, %r82, %r81, 1;
	shf.l.wrap.b32 	%r84, %r81, %r82, 1;
	mov.b64 	%rd402, {%r84, %r83};
	xor.b64  	%rd403, %rd402, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd390;
	}
	shf.l.wrap.b32 	%r87, %r86, %r85, 1;
	shf.l.wrap.b32 	%r88, %r85, %r86, 1;
	mov.b64 	%rd404, {%r88, %r87};
	xor.b64  	%rd405, %rd404, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r90,%dummy}, %rd399;
	}
	shf.l.wrap.b32 	%r91, %r90, %r89, 1;
	shf.l.wrap.b32 	%r92, %r89, %r90, 1;
	mov.b64 	%rd406, {%r92, %r91};
	xor.b64  	%rd407, %rd406, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r94,%dummy}, %rd362;
	}
	shf.l.wrap.b32 	%r95, %r94, %r93, 1;
	shf.l.wrap.b32 	%r96, %r93, %r94, 1;
	mov.b64 	%rd408, {%r96, %r95};
	xor.b64  	%rd409, %rd390, %rd408;
	xor.b64  	%rd410, %rd401, %rd355;
	xor.b64  	%rd411, %rd403, %rd364;
	xor.b64  	%rd412, %rd405, %rd373;
	xor.b64  	%rd413, %rd407, %rd383;
	xor.b64  	%rd414, %rd409, %rd392;
	xor.b64  	%rd415, %rd401, %rd354;
	xor.b64  	%rd416, %rd403, %rd363;
	xor.b64  	%rd417, %rd405, %rd372;
	xor.b64  	%rd418, %rd407, %rd382;
	xor.b64  	%rd419, %rd409, %rd391;
	xor.b64  	%rd420, %rd401, %rd357;
	xor.b64  	%rd421, %rd403, %rd366;
	xor.b64  	%rd422, %rd405, %rd375;
	xor.b64  	%rd423, %rd407, %rd385;
	xor.b64  	%rd424, %rd409, %rd394;
	xor.b64  	%rd425, %rd401, %rd359;
	xor.b64  	%rd426, %rd403, %rd368;
	xor.b64  	%rd427, %rd405, %rd377;
	xor.b64  	%rd428, %rd407, %rd387;
	xor.b64  	%rd429, %rd409, %rd396;
	xor.b64  	%rd430, %rd401, %rd361;
	xor.b64  	%rd431, %rd403, %rd370;
	xor.b64  	%rd432, %rd405, %rd379;
	xor.b64  	%rd433, %rd407, %rd389;
	xor.b64  	%rd434, %rd409, %rd398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd416;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 20;
	shf.r.wrap.b32 	%r100, %r97, %r98, 20;
	mov.b64 	%rd435, {%r100, %r99};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd422;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 21;
	shf.r.wrap.b32 	%r104, %r101, %r102, 21;
	mov.b64 	%rd436, {%r104, %r103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r106,%dummy}, %rd428;
	}
	shf.l.wrap.b32 	%r107, %r106, %r105, 21;
	shf.l.wrap.b32 	%r108, %r105, %r106, 21;
	mov.b64 	%rd437, {%r108, %r107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r110,%dummy}, %rd434;
	}
	shf.l.wrap.b32 	%r111, %r110, %r109, 14;
	shf.l.wrap.b32 	%r112, %r109, %r110, 14;
	mov.b64 	%rd438, {%r112, %r111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r114,%dummy}, %rd413;
	}
	shf.l.wrap.b32 	%r115, %r114, %r113, 28;
	shf.l.wrap.b32 	%r116, %r113, %r114, 28;
	mov.b64 	%rd439, {%r116, %r115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r118,%dummy}, %rd419;
	}
	shf.l.wrap.b32 	%r119, %r118, %r117, 20;
	shf.l.wrap.b32 	%r120, %r117, %r118, 20;
	mov.b64 	%rd440, {%r120, %r119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd420;
	}
	shf.l.wrap.b32 	%r123, %r122, %r121, 3;
	shf.l.wrap.b32 	%r124, %r121, %r122, 3;
	mov.b64 	%rd441, {%r124, %r123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd426;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 19;
	shf.r.wrap.b32 	%r128, %r125, %r126, 19;
	mov.b64 	%rd442, {%r128, %r127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd432;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 3;
	shf.r.wrap.b32 	%r132, %r129, %r130, 3;
	mov.b64 	%rd443, {%r132, %r131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r134,%dummy}, %rd411;
	}
	shf.l.wrap.b32 	%r135, %r134, %r133, 1;
	shf.l.wrap.b32 	%r136, %r133, %r134, 1;
	mov.b64 	%rd444, {%r136, %r135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd417;
	}
	shf.l.wrap.b32 	%r139, %r138, %r137, 6;
	shf.l.wrap.b32 	%r140, %r137, %r138, 6;
	mov.b64 	%rd445, {%r140, %r139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r142,%dummy}, %rd423;
	}
	shf.l.wrap.b32 	%r143, %r142, %r141, 25;
	shf.l.wrap.b32 	%r144, %r141, %r142, 25;
	mov.b64 	%rd446, {%r144, %r143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r146,%dummy}, %rd429;
	}
	shf.l.wrap.b32 	%r147, %r146, %r145, 8;
	shf.l.wrap.b32 	%r148, %r145, %r146, 8;
	mov.b64 	%rd447, {%r148, %r147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r150,%dummy}, %rd430;
	}
	shf.l.wrap.b32 	%r151, %r150, %r149, 18;
	shf.l.wrap.b32 	%r152, %r149, %r150, 18;
	mov.b64 	%rd448, {%r152, %r151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd414;
	}
	shf.l.wrap.b32 	%r155, %r154, %r153, 27;
	shf.l.wrap.b32 	%r156, %r153, %r154, 27;
	mov.b64 	%rd449, {%r156, %r155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd415;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 28;
	shf.r.wrap.b32 	%r160, %r157, %r158, 28;
	mov.b64 	%rd450, {%r160, %r159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd421;
	}
	shf.l.wrap.b32 	%r163, %r162, %r161, 10;
	shf.l.wrap.b32 	%r164, %r161, %r162, 10;
	mov.b64 	%rd451, {%r164, %r163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r166,%dummy}, %rd427;
	}
	shf.l.wrap.b32 	%r167, %r166, %r165, 15;
	shf.l.wrap.b32 	%r168, %r165, %r166, 15;
	mov.b64 	%rd452, {%r168, %r167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd433;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 8;
	shf.r.wrap.b32 	%r172, %r169, %r170, 8;
	mov.b64 	%rd453, {%r172, %r171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd412;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 2;
	shf.r.wrap.b32 	%r176, %r173, %r174, 2;
	mov.b64 	%rd454, {%r176, %r175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd418;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 9;
	shf.r.wrap.b32 	%r180, %r177, %r178, 9;
	mov.b64 	%rd455, {%r180, %r179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd424;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 25;
	shf.r.wrap.b32 	%r184, %r181, %r182, 25;
	mov.b64 	%rd456, {%r184, %r183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd425;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 23;
	shf.r.wrap.b32 	%r188, %r185, %r186, 23;
	mov.b64 	%rd457, {%r188, %r187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r190,%dummy}, %rd431;
	}
	shf.l.wrap.b32 	%r191, %r190, %r189, 2;
	shf.l.wrap.b32 	%r192, %r189, %r190, 2;
	mov.b64 	%rd458, {%r192, %r191};
	not.b64 	%rd459, %rd435;
	and.b64  	%rd460, %rd436, %rd459;
	xor.b64  	%rd461, %rd460, %rd410;
	not.b64 	%rd462, %rd436;
	and.b64  	%rd463, %rd437, %rd462;
	xor.b64  	%rd464, %rd463, %rd435;
	not.b64 	%rd465, %rd437;
	and.b64  	%rd466, %rd438, %rd465;
	xor.b64  	%rd467, %rd466, %rd436;
	not.b64 	%rd468, %rd438;
	and.b64  	%rd469, %rd410, %rd468;
	xor.b64  	%rd470, %rd469, %rd437;
	not.b64 	%rd471, %rd410;
	and.b64  	%rd472, %rd435, %rd471;
	xor.b64  	%rd473, %rd472, %rd438;
	not.b64 	%rd474, %rd440;
	and.b64  	%rd475, %rd441, %rd474;
	xor.b64  	%rd476, %rd475, %rd439;
	not.b64 	%rd477, %rd441;
	and.b64  	%rd478, %rd442, %rd477;
	xor.b64  	%rd479, %rd478, %rd440;
	not.b64 	%rd480, %rd442;
	and.b64  	%rd481, %rd443, %rd480;
	xor.b64  	%rd482, %rd481, %rd441;
	not.b64 	%rd483, %rd443;
	and.b64  	%rd484, %rd439, %rd483;
	xor.b64  	%rd485, %rd484, %rd442;
	not.b64 	%rd486, %rd439;
	and.b64  	%rd487, %rd440, %rd486;
	xor.b64  	%rd488, %rd487, %rd443;
	not.b64 	%rd489, %rd445;
	and.b64  	%rd490, %rd446, %rd489;
	xor.b64  	%rd491, %rd490, %rd444;
	not.b64 	%rd492, %rd446;
	and.b64  	%rd493, %rd447, %rd492;
	xor.b64  	%rd494, %rd493, %rd445;
	not.b64 	%rd495, %rd447;
	and.b64  	%rd496, %rd448, %rd495;
	xor.b64  	%rd497, %rd496, %rd446;
	not.b64 	%rd498, %rd448;
	and.b64  	%rd499, %rd444, %rd498;
	xor.b64  	%rd500, %rd499, %rd447;
	not.b64 	%rd501, %rd444;
	and.b64  	%rd502, %rd445, %rd501;
	xor.b64  	%rd503, %rd502, %rd448;
	not.b64 	%rd504, %rd450;
	and.b64  	%rd505, %rd451, %rd504;
	xor.b64  	%rd506, %rd505, %rd449;
	not.b64 	%rd507, %rd451;
	and.b64  	%rd508, %rd452, %rd507;
	xor.b64  	%rd509, %rd508, %rd450;
	not.b64 	%rd510, %rd452;
	and.b64  	%rd511, %rd453, %rd510;
	xor.b64  	%rd512, %rd511, %rd451;
	not.b64 	%rd513, %rd453;
	and.b64  	%rd514, %rd449, %rd513;
	xor.b64  	%rd515, %rd514, %rd452;
	not.b64 	%rd516, %rd449;
	and.b64  	%rd517, %rd450, %rd516;
	xor.b64  	%rd518, %rd517, %rd453;
	not.b64 	%rd519, %rd455;
	and.b64  	%rd520, %rd456, %rd519;
	xor.b64  	%rd521, %rd520, %rd454;
	not.b64 	%rd522, %rd456;
	and.b64  	%rd523, %rd457, %rd522;
	xor.b64  	%rd524, %rd523, %rd455;
	not.b64 	%rd525, %rd457;
	and.b64  	%rd526, %rd458, %rd525;
	xor.b64  	%rd527, %rd526, %rd456;
	not.b64 	%rd528, %rd458;
	and.b64  	%rd529, %rd454, %rd528;
	xor.b64  	%rd530, %rd529, %rd457;
	not.b64 	%rd531, %rd454;
	and.b64  	%rd532, %rd455, %rd531;
	xor.b64  	%rd533, %rd532, %rd458;
	xor.b64  	%rd534, %rd461, %rd16;
	xor.b64  	%rd535, %rd476, %rd534;
	xor.b64  	%rd536, %rd535, %rd491;
	xor.b64  	%rd537, %rd536, %rd506;
	xor.b64  	%rd538, %rd537, %rd521;
	xor.b64  	%rd539, %rd479, %rd464;
	xor.b64  	%rd540, %rd539, %rd494;
	xor.b64  	%rd541, %rd540, %rd509;
	xor.b64  	%rd542, %rd541, %rd524;
	xor.b64  	%rd543, %rd482, %rd467;
	xor.b64  	%rd544, %rd543, %rd497;
	xor.b64  	%rd545, %rd544, %rd512;
	xor.b64  	%rd546, %rd545, %rd527;
	xor.b64  	%rd547, %rd485, %rd470;
	xor.b64  	%rd548, %rd547, %rd500;
	xor.b64  	%rd549, %rd548, %rd515;
	xor.b64  	%rd550, %rd549, %rd530;
	xor.b64  	%rd551, %rd488, %rd473;
	xor.b64  	%rd552, %rd551, %rd503;
	xor.b64  	%rd553, %rd552, %rd518;
	xor.b64  	%rd554, %rd553, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd542;
	}
	shf.l.wrap.b32 	%r195, %r194, %r193, 1;
	shf.l.wrap.b32 	%r196, %r193, %r194, 1;
	mov.b64 	%rd555, {%r196, %r195};
	xor.b64  	%rd556, %rd554, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r198,%dummy}, %rd546;
	}
	shf.l.wrap.b32 	%r199, %r198, %r197, 1;
	shf.l.wrap.b32 	%r200, %r197, %r198, 1;
	mov.b64 	%rd557, {%r200, %r199};
	xor.b64  	%rd558, %rd557, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd550;
	}
	shf.l.wrap.b32 	%r203, %r202, %r201, 1;
	shf.l.wrap.b32 	%r204, %r201, %r202, 1;
	mov.b64 	%rd559, {%r204, %r203};
	xor.b64  	%rd560, %rd559, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd554;
	}
	shf.l.wrap.b32 	%r207, %r206, %r205, 1;
	shf.l.wrap.b32 	%r208, %r205, %r206, 1;
	mov.b64 	%rd561, {%r208, %r207};
	xor.b64  	%rd562, %rd561, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd538;
	}
	shf.l.wrap.b32 	%r211, %r210, %r209, 1;
	shf.l.wrap.b32 	%r212, %r209, %r210, 1;
	mov.b64 	%rd563, {%r212, %r211};
	xor.b64  	%rd564, %rd550, %rd563;
	xor.b64  	%rd565, %rd556, %rd534;
	xor.b64  	%rd566, %rd558, %rd464;
	xor.b64  	%rd567, %rd560, %rd467;
	xor.b64  	%rd568, %rd562, %rd470;
	xor.b64  	%rd569, %rd564, %rd473;
	xor.b64  	%rd570, %rd556, %rd476;
	xor.b64  	%rd571, %rd558, %rd479;
	xor.b64  	%rd572, %rd560, %rd482;
	xor.b64  	%rd573, %rd562, %rd485;
	xor.b64  	%rd574, %rd564, %rd488;
	xor.b64  	%rd575, %rd556, %rd491;
	xor.b64  	%rd576, %rd558, %rd494;
	xor.b64  	%rd577, %rd560, %rd497;
	xor.b64  	%rd578, %rd562, %rd500;
	xor.b64  	%rd579, %rd564, %rd503;
	xor.b64  	%rd580, %rd556, %rd506;
	xor.b64  	%rd581, %rd558, %rd509;
	xor.b64  	%rd582, %rd560, %rd512;
	xor.b64  	%rd583, %rd562, %rd515;
	xor.b64  	%rd584, %rd564, %rd518;
	xor.b64  	%rd585, %rd556, %rd521;
	xor.b64  	%rd586, %rd558, %rd524;
	xor.b64  	%rd587, %rd560, %rd527;
	xor.b64  	%rd588, %rd562, %rd530;
	xor.b64  	%rd589, %rd564, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd571;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 20;
	shf.r.wrap.b32 	%r216, %r213, %r214, 20;
	mov.b64 	%rd590, {%r216, %r215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd577;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 21;
	shf.r.wrap.b32 	%r220, %r217, %r218, 21;
	mov.b64 	%rd591, {%r220, %r219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r222,%dummy}, %rd583;
	}
	shf.l.wrap.b32 	%r223, %r222, %r221, 21;
	shf.l.wrap.b32 	%r224, %r221, %r222, 21;
	mov.b64 	%rd592, {%r224, %r223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd589;
	}
	shf.l.wrap.b32 	%r227, %r226, %r225, 14;
	shf.l.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd593, {%r228, %r227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r230,%dummy}, %rd568;
	}
	shf.l.wrap.b32 	%r231, %r230, %r229, 28;
	shf.l.wrap.b32 	%r232, %r229, %r230, 28;
	mov.b64 	%rd594, {%r232, %r231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd574;
	}
	shf.l.wrap.b32 	%r235, %r234, %r233, 20;
	shf.l.wrap.b32 	%r236, %r233, %r234, 20;
	mov.b64 	%rd595, {%r236, %r235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r238,%dummy}, %rd575;
	}
	shf.l.wrap.b32 	%r239, %r238, %r237, 3;
	shf.l.wrap.b32 	%r240, %r237, %r238, 3;
	mov.b64 	%rd596, {%r240, %r239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd581;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 19;
	shf.r.wrap.b32 	%r244, %r241, %r242, 19;
	mov.b64 	%rd597, {%r244, %r243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd587;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 3;
	shf.r.wrap.b32 	%r248, %r245, %r246, 3;
	mov.b64 	%rd598, {%r248, %r247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd566;
	}
	shf.l.wrap.b32 	%r251, %r250, %r249, 1;
	shf.l.wrap.b32 	%r252, %r249, %r250, 1;
	mov.b64 	%rd599, {%r252, %r251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd572;
	}
	shf.l.wrap.b32 	%r255, %r254, %r253, 6;
	shf.l.wrap.b32 	%r256, %r253, %r254, 6;
	mov.b64 	%rd600, {%r256, %r255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd578;
	}
	shf.l.wrap.b32 	%r259, %r258, %r257, 25;
	shf.l.wrap.b32 	%r260, %r257, %r258, 25;
	mov.b64 	%rd601, {%r260, %r259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r262,%dummy}, %rd584;
	}
	shf.l.wrap.b32 	%r263, %r262, %r261, 8;
	shf.l.wrap.b32 	%r264, %r261, %r262, 8;
	mov.b64 	%rd602, {%r264, %r263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd585;
	}
	shf.l.wrap.b32 	%r267, %r266, %r265, 18;
	shf.l.wrap.b32 	%r268, %r265, %r266, 18;
	mov.b64 	%rd603, {%r268, %r267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r270,%dummy}, %rd569;
	}
	shf.l.wrap.b32 	%r271, %r270, %r269, 27;
	shf.l.wrap.b32 	%r272, %r269, %r270, 27;
	mov.b64 	%rd604, {%r272, %r271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd570;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 28;
	shf.r.wrap.b32 	%r276, %r273, %r274, 28;
	mov.b64 	%rd605, {%r276, %r275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r278,%dummy}, %rd576;
	}
	shf.l.wrap.b32 	%r279, %r278, %r277, 10;
	shf.l.wrap.b32 	%r280, %r277, %r278, 10;
	mov.b64 	%rd606, {%r280, %r279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd582;
	}
	shf.l.wrap.b32 	%r283, %r282, %r281, 15;
	shf.l.wrap.b32 	%r284, %r281, %r282, 15;
	mov.b64 	%rd607, {%r284, %r283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd588;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 8;
	shf.r.wrap.b32 	%r288, %r285, %r286, 8;
	mov.b64 	%rd608, {%r288, %r287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd567;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 2;
	shf.r.wrap.b32 	%r292, %r289, %r290, 2;
	mov.b64 	%rd609, {%r292, %r291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd573;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 9;
	shf.r.wrap.b32 	%r296, %r293, %r294, 9;
	mov.b64 	%rd610, {%r296, %r295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r298}, %rd579;
	}
	shf.r.wrap.b32 	%r299, %r298, %r297, 25;
	shf.r.wrap.b32 	%r300, %r297, %r298, 25;
	mov.b64 	%rd611, {%r300, %r299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd580;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 23;
	shf.r.wrap.b32 	%r304, %r301, %r302, 23;
	mov.b64 	%rd612, {%r304, %r303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r305}, %rd586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd586;
	}
	shf.l.wrap.b32 	%r307, %r306, %r305, 2;
	shf.l.wrap.b32 	%r308, %r305, %r306, 2;
	mov.b64 	%rd613, {%r308, %r307};
	not.b64 	%rd614, %rd590;
	and.b64  	%rd615, %rd591, %rd614;
	xor.b64  	%rd616, %rd615, %rd565;
	not.b64 	%rd617, %rd591;
	and.b64  	%rd618, %rd592, %rd617;
	xor.b64  	%rd619, %rd618, %rd590;
	not.b64 	%rd620, %rd592;
	and.b64  	%rd621, %rd593, %rd620;
	xor.b64  	%rd622, %rd621, %rd591;
	not.b64 	%rd623, %rd593;
	and.b64  	%rd624, %rd565, %rd623;
	xor.b64  	%rd625, %rd624, %rd592;
	not.b64 	%rd626, %rd565;
	and.b64  	%rd627, %rd590, %rd626;
	xor.b64  	%rd628, %rd627, %rd593;
	not.b64 	%rd629, %rd595;
	and.b64  	%rd630, %rd596, %rd629;
	xor.b64  	%rd631, %rd630, %rd594;
	not.b64 	%rd632, %rd596;
	and.b64  	%rd633, %rd597, %rd632;
	xor.b64  	%rd634, %rd633, %rd595;
	not.b64 	%rd635, %rd597;
	and.b64  	%rd636, %rd598, %rd635;
	xor.b64  	%rd637, %rd636, %rd596;
	not.b64 	%rd638, %rd598;
	and.b64  	%rd639, %rd594, %rd638;
	xor.b64  	%rd640, %rd639, %rd597;
	not.b64 	%rd641, %rd594;
	and.b64  	%rd642, %rd595, %rd641;
	xor.b64  	%rd643, %rd642, %rd598;
	not.b64 	%rd644, %rd600;
	and.b64  	%rd645, %rd601, %rd644;
	xor.b64  	%rd646, %rd645, %rd599;
	not.b64 	%rd647, %rd601;
	and.b64  	%rd648, %rd602, %rd647;
	xor.b64  	%rd649, %rd648, %rd600;
	not.b64 	%rd650, %rd602;
	and.b64  	%rd651, %rd603, %rd650;
	xor.b64  	%rd652, %rd651, %rd601;
	not.b64 	%rd653, %rd603;
	and.b64  	%rd654, %rd599, %rd653;
	xor.b64  	%rd655, %rd654, %rd602;
	not.b64 	%rd656, %rd599;
	and.b64  	%rd657, %rd600, %rd656;
	xor.b64  	%rd658, %rd657, %rd603;
	not.b64 	%rd659, %rd605;
	and.b64  	%rd660, %rd606, %rd659;
	xor.b64  	%rd661, %rd660, %rd604;
	not.b64 	%rd662, %rd606;
	and.b64  	%rd663, %rd607, %rd662;
	xor.b64  	%rd664, %rd663, %rd605;
	not.b64 	%rd665, %rd607;
	and.b64  	%rd666, %rd608, %rd665;
	xor.b64  	%rd667, %rd666, %rd606;
	not.b64 	%rd668, %rd608;
	and.b64  	%rd669, %rd604, %rd668;
	xor.b64  	%rd670, %rd669, %rd607;
	not.b64 	%rd671, %rd604;
	and.b64  	%rd672, %rd605, %rd671;
	xor.b64  	%rd673, %rd672, %rd608;
	not.b64 	%rd674, %rd610;
	and.b64  	%rd675, %rd611, %rd674;
	xor.b64  	%rd676, %rd675, %rd609;
	not.b64 	%rd677, %rd611;
	and.b64  	%rd678, %rd612, %rd677;
	xor.b64  	%rd679, %rd678, %rd610;
	not.b64 	%rd680, %rd612;
	and.b64  	%rd681, %rd613, %rd680;
	xor.b64  	%rd682, %rd681, %rd611;
	not.b64 	%rd683, %rd613;
	and.b64  	%rd684, %rd609, %rd683;
	xor.b64  	%rd685, %rd684, %rd612;
	not.b64 	%rd686, %rd609;
	and.b64  	%rd687, %rd610, %rd686;
	xor.b64  	%rd688, %rd687, %rd613;
	xor.b64  	%rd689, %rd616, %rd17;
	xor.b64  	%rd690, %rd631, %rd689;
	xor.b64  	%rd691, %rd690, %rd646;
	xor.b64  	%rd692, %rd691, %rd661;
	xor.b64  	%rd693, %rd692, %rd676;
	xor.b64  	%rd694, %rd634, %rd619;
	xor.b64  	%rd695, %rd694, %rd649;
	xor.b64  	%rd696, %rd695, %rd664;
	xor.b64  	%rd697, %rd696, %rd679;
	xor.b64  	%rd698, %rd637, %rd622;
	xor.b64  	%rd699, %rd698, %rd652;
	xor.b64  	%rd700, %rd699, %rd667;
	xor.b64  	%rd701, %rd700, %rd682;
	xor.b64  	%rd702, %rd640, %rd625;
	xor.b64  	%rd703, %rd702, %rd655;
	xor.b64  	%rd704, %rd703, %rd670;
	xor.b64  	%rd705, %rd704, %rd685;
	xor.b64  	%rd706, %rd643, %rd628;
	xor.b64  	%rd707, %rd706, %rd658;
	xor.b64  	%rd708, %rd707, %rd673;
	xor.b64  	%rd709, %rd708, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r309}, %rd697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r310,%dummy}, %rd697;
	}
	shf.l.wrap.b32 	%r311, %r310, %r309, 1;
	shf.l.wrap.b32 	%r312, %r309, %r310, 1;
	mov.b64 	%rd710, {%r312, %r311};
	xor.b64  	%rd711, %rd709, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd701;
	}
	shf.l.wrap.b32 	%r315, %r314, %r313, 1;
	shf.l.wrap.b32 	%r316, %r313, %r314, 1;
	mov.b64 	%rd712, {%r316, %r315};
	xor.b64  	%rd713, %rd712, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd705;
	}
	shf.l.wrap.b32 	%r319, %r318, %r317, 1;
	shf.l.wrap.b32 	%r320, %r317, %r318, 1;
	mov.b64 	%rd714, {%r320, %r319};
	xor.b64  	%rd715, %rd714, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd709;
	}
	shf.l.wrap.b32 	%r323, %r322, %r321, 1;
	shf.l.wrap.b32 	%r324, %r321, %r322, 1;
	mov.b64 	%rd716, {%r324, %r323};
	xor.b64  	%rd717, %rd716, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r326,%dummy}, %rd693;
	}
	shf.l.wrap.b32 	%r327, %r326, %r325, 1;
	shf.l.wrap.b32 	%r328, %r325, %r326, 1;
	mov.b64 	%rd718, {%r328, %r327};
	xor.b64  	%rd719, %rd705, %rd718;
	xor.b64  	%rd720, %rd711, %rd689;
	xor.b64  	%rd721, %rd713, %rd619;
	xor.b64  	%rd722, %rd715, %rd622;
	xor.b64  	%rd723, %rd717, %rd625;
	xor.b64  	%rd724, %rd719, %rd628;
	xor.b64  	%rd725, %rd711, %rd631;
	xor.b64  	%rd726, %rd713, %rd634;
	xor.b64  	%rd727, %rd715, %rd637;
	xor.b64  	%rd728, %rd717, %rd640;
	xor.b64  	%rd729, %rd719, %rd643;
	xor.b64  	%rd730, %rd711, %rd646;
	xor.b64  	%rd731, %rd713, %rd649;
	xor.b64  	%rd732, %rd715, %rd652;
	xor.b64  	%rd733, %rd717, %rd655;
	xor.b64  	%rd734, %rd719, %rd658;
	xor.b64  	%rd735, %rd711, %rd661;
	xor.b64  	%rd736, %rd713, %rd664;
	xor.b64  	%rd737, %rd715, %rd667;
	xor.b64  	%rd738, %rd717, %rd670;
	xor.b64  	%rd739, %rd719, %rd673;
	xor.b64  	%rd740, %rd711, %rd676;
	xor.b64  	%rd741, %rd713, %rd679;
	xor.b64  	%rd742, %rd715, %rd682;
	xor.b64  	%rd743, %rd717, %rd685;
	xor.b64  	%rd744, %rd719, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd726;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 20;
	shf.r.wrap.b32 	%r332, %r329, %r330, 20;
	mov.b64 	%rd745, {%r332, %r331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd732;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 21;
	shf.r.wrap.b32 	%r336, %r333, %r334, 21;
	mov.b64 	%rd746, {%r336, %r335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd738;
	}
	shf.l.wrap.b32 	%r339, %r338, %r337, 21;
	shf.l.wrap.b32 	%r340, %r337, %r338, 21;
	mov.b64 	%rd747, {%r340, %r339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd744;
	}
	shf.l.wrap.b32 	%r343, %r342, %r341, 14;
	shf.l.wrap.b32 	%r344, %r341, %r342, 14;
	mov.b64 	%rd748, {%r344, %r343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd723;
	}
	shf.l.wrap.b32 	%r347, %r346, %r345, 28;
	shf.l.wrap.b32 	%r348, %r345, %r346, 28;
	mov.b64 	%rd749, {%r348, %r347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r350,%dummy}, %rd729;
	}
	shf.l.wrap.b32 	%r351, %r350, %r349, 20;
	shf.l.wrap.b32 	%r352, %r349, %r350, 20;
	mov.b64 	%rd750, {%r352, %r351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd730;
	}
	shf.l.wrap.b32 	%r355, %r354, %r353, 3;
	shf.l.wrap.b32 	%r356, %r353, %r354, 3;
	mov.b64 	%rd751, {%r356, %r355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd736;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 19;
	shf.r.wrap.b32 	%r360, %r357, %r358, 19;
	mov.b64 	%rd752, {%r360, %r359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd742;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 3;
	shf.r.wrap.b32 	%r364, %r361, %r362, 3;
	mov.b64 	%rd753, {%r364, %r363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd721;
	}
	shf.l.wrap.b32 	%r367, %r366, %r365, 1;
	shf.l.wrap.b32 	%r368, %r365, %r366, 1;
	mov.b64 	%rd754, {%r368, %r367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd727;
	}
	shf.l.wrap.b32 	%r371, %r370, %r369, 6;
	shf.l.wrap.b32 	%r372, %r369, %r370, 6;
	mov.b64 	%rd755, {%r372, %r371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd733;
	}
	shf.l.wrap.b32 	%r375, %r374, %r373, 25;
	shf.l.wrap.b32 	%r376, %r373, %r374, 25;
	mov.b64 	%rd756, {%r376, %r375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd739;
	}
	shf.l.wrap.b32 	%r379, %r378, %r377, 8;
	shf.l.wrap.b32 	%r380, %r377, %r378, 8;
	mov.b64 	%rd757, {%r380, %r379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd740;
	}
	shf.l.wrap.b32 	%r383, %r382, %r381, 18;
	shf.l.wrap.b32 	%r384, %r381, %r382, 18;
	mov.b64 	%rd758, {%r384, %r383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd724;
	}
	shf.l.wrap.b32 	%r387, %r386, %r385, 27;
	shf.l.wrap.b32 	%r388, %r385, %r386, 27;
	mov.b64 	%rd759, {%r388, %r387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd725;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 28;
	shf.r.wrap.b32 	%r392, %r389, %r390, 28;
	mov.b64 	%rd760, {%r392, %r391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd731;
	}
	shf.l.wrap.b32 	%r395, %r394, %r393, 10;
	shf.l.wrap.b32 	%r396, %r393, %r394, 10;
	mov.b64 	%rd761, {%r396, %r395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd737;
	}
	shf.l.wrap.b32 	%r399, %r398, %r397, 15;
	shf.l.wrap.b32 	%r400, %r397, %r398, 15;
	mov.b64 	%rd762, {%r400, %r399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd743;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 8;
	shf.r.wrap.b32 	%r404, %r401, %r402, 8;
	mov.b64 	%rd763, {%r404, %r403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r406}, %rd722;
	}
	shf.r.wrap.b32 	%r407, %r406, %r405, 2;
	shf.r.wrap.b32 	%r408, %r405, %r406, 2;
	mov.b64 	%rd764, {%r408, %r407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd728;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 9;
	shf.r.wrap.b32 	%r412, %r409, %r410, 9;
	mov.b64 	%rd765, {%r412, %r411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd734;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 25;
	shf.r.wrap.b32 	%r416, %r413, %r414, 25;
	mov.b64 	%rd766, {%r416, %r415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd735;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 23;
	shf.r.wrap.b32 	%r420, %r417, %r418, 23;
	mov.b64 	%rd767, {%r420, %r419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd741;
	}
	shf.l.wrap.b32 	%r423, %r422, %r421, 2;
	shf.l.wrap.b32 	%r424, %r421, %r422, 2;
	mov.b64 	%rd768, {%r424, %r423};
	not.b64 	%rd769, %rd745;
	and.b64  	%rd770, %rd746, %rd769;
	xor.b64  	%rd771, %rd770, %rd720;
	not.b64 	%rd772, %rd746;
	and.b64  	%rd773, %rd747, %rd772;
	xor.b64  	%rd774, %rd773, %rd745;
	not.b64 	%rd775, %rd747;
	and.b64  	%rd776, %rd748, %rd775;
	xor.b64  	%rd777, %rd776, %rd746;
	not.b64 	%rd778, %rd748;
	and.b64  	%rd779, %rd720, %rd778;
	xor.b64  	%rd780, %rd779, %rd747;
	not.b64 	%rd781, %rd720;
	and.b64  	%rd782, %rd745, %rd781;
	xor.b64  	%rd783, %rd782, %rd748;
	not.b64 	%rd784, %rd750;
	and.b64  	%rd785, %rd751, %rd784;
	xor.b64  	%rd786, %rd785, %rd749;
	not.b64 	%rd787, %rd751;
	and.b64  	%rd788, %rd752, %rd787;
	xor.b64  	%rd789, %rd788, %rd750;
	not.b64 	%rd790, %rd752;
	and.b64  	%rd791, %rd753, %rd790;
	xor.b64  	%rd792, %rd791, %rd751;
	not.b64 	%rd793, %rd753;
	and.b64  	%rd794, %rd749, %rd793;
	xor.b64  	%rd795, %rd794, %rd752;
	not.b64 	%rd796, %rd749;
	and.b64  	%rd797, %rd750, %rd796;
	xor.b64  	%rd798, %rd797, %rd753;
	not.b64 	%rd799, %rd755;
	and.b64  	%rd800, %rd756, %rd799;
	xor.b64  	%rd801, %rd800, %rd754;
	not.b64 	%rd802, %rd756;
	and.b64  	%rd803, %rd757, %rd802;
	xor.b64  	%rd804, %rd803, %rd755;
	not.b64 	%rd805, %rd757;
	and.b64  	%rd806, %rd758, %rd805;
	xor.b64  	%rd807, %rd806, %rd756;
	not.b64 	%rd808, %rd758;
	and.b64  	%rd809, %rd754, %rd808;
	xor.b64  	%rd810, %rd809, %rd757;
	not.b64 	%rd811, %rd754;
	and.b64  	%rd812, %rd755, %rd811;
	xor.b64  	%rd813, %rd812, %rd758;
	not.b64 	%rd814, %rd760;
	and.b64  	%rd815, %rd761, %rd814;
	xor.b64  	%rd816, %rd815, %rd759;
	not.b64 	%rd817, %rd761;
	and.b64  	%rd818, %rd762, %rd817;
	xor.b64  	%rd819, %rd818, %rd760;
	not.b64 	%rd820, %rd762;
	and.b64  	%rd821, %rd763, %rd820;
	xor.b64  	%rd822, %rd821, %rd761;
	not.b64 	%rd823, %rd763;
	and.b64  	%rd824, %rd759, %rd823;
	xor.b64  	%rd825, %rd824, %rd762;
	not.b64 	%rd826, %rd759;
	and.b64  	%rd827, %rd760, %rd826;
	xor.b64  	%rd828, %rd827, %rd763;
	not.b64 	%rd829, %rd765;
	and.b64  	%rd830, %rd766, %rd829;
	xor.b64  	%rd831, %rd830, %rd764;
	not.b64 	%rd832, %rd766;
	and.b64  	%rd833, %rd767, %rd832;
	xor.b64  	%rd834, %rd833, %rd765;
	not.b64 	%rd835, %rd767;
	and.b64  	%rd836, %rd768, %rd835;
	xor.b64  	%rd837, %rd836, %rd766;
	not.b64 	%rd838, %rd768;
	and.b64  	%rd839, %rd764, %rd838;
	xor.b64  	%rd840, %rd839, %rd767;
	not.b64 	%rd841, %rd764;
	and.b64  	%rd842, %rd765, %rd841;
	xor.b64  	%rd843, %rd842, %rd768;
	xor.b64  	%rd844, %rd771, %rd18;
	xor.b64  	%rd845, %rd786, %rd844;
	xor.b64  	%rd846, %rd845, %rd801;
	xor.b64  	%rd847, %rd846, %rd816;
	xor.b64  	%rd848, %rd847, %rd831;
	xor.b64  	%rd849, %rd789, %rd774;
	xor.b64  	%rd850, %rd849, %rd804;
	xor.b64  	%rd851, %rd850, %rd819;
	xor.b64  	%rd852, %rd851, %rd834;
	xor.b64  	%rd853, %rd792, %rd777;
	xor.b64  	%rd854, %rd853, %rd807;
	xor.b64  	%rd855, %rd854, %rd822;
	xor.b64  	%rd856, %rd855, %rd837;
	xor.b64  	%rd857, %rd795, %rd780;
	xor.b64  	%rd858, %rd857, %rd810;
	xor.b64  	%rd859, %rd858, %rd825;
	xor.b64  	%rd860, %rd859, %rd840;
	xor.b64  	%rd861, %rd798, %rd783;
	xor.b64  	%rd862, %rd861, %rd813;
	xor.b64  	%rd863, %rd862, %rd828;
	xor.b64  	%rd864, %rd863, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd852;
	}
	shf.l.wrap.b32 	%r427, %r426, %r425, 1;
	shf.l.wrap.b32 	%r428, %r425, %r426, 1;
	mov.b64 	%rd865, {%r428, %r427};
	xor.b64  	%rd866, %rd864, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd856;
	}
	shf.l.wrap.b32 	%r431, %r430, %r429, 1;
	shf.l.wrap.b32 	%r432, %r429, %r430, 1;
	mov.b64 	%rd867, {%r432, %r431};
	xor.b64  	%rd868, %rd867, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd860;
	}
	shf.l.wrap.b32 	%r435, %r434, %r433, 1;
	shf.l.wrap.b32 	%r436, %r433, %r434, 1;
	mov.b64 	%rd869, {%r436, %r435};
	xor.b64  	%rd870, %rd869, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd864;
	}
	shf.l.wrap.b32 	%r439, %r438, %r437, 1;
	shf.l.wrap.b32 	%r440, %r437, %r438, 1;
	mov.b64 	%rd871, {%r440, %r439};
	xor.b64  	%rd872, %rd871, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd848;
	}
	shf.l.wrap.b32 	%r443, %r442, %r441, 1;
	shf.l.wrap.b32 	%r444, %r441, %r442, 1;
	mov.b64 	%rd873, {%r444, %r443};
	xor.b64  	%rd874, %rd860, %rd873;
	xor.b64  	%rd875, %rd866, %rd844;
	xor.b64  	%rd876, %rd868, %rd774;
	xor.b64  	%rd877, %rd870, %rd777;
	xor.b64  	%rd878, %rd872, %rd780;
	xor.b64  	%rd879, %rd874, %rd783;
	xor.b64  	%rd880, %rd866, %rd786;
	xor.b64  	%rd881, %rd868, %rd789;
	xor.b64  	%rd882, %rd870, %rd792;
	xor.b64  	%rd883, %rd872, %rd795;
	xor.b64  	%rd884, %rd874, %rd798;
	xor.b64  	%rd885, %rd866, %rd801;
	xor.b64  	%rd886, %rd868, %rd804;
	xor.b64  	%rd887, %rd870, %rd807;
	xor.b64  	%rd888, %rd872, %rd810;
	xor.b64  	%rd889, %rd874, %rd813;
	xor.b64  	%rd890, %rd866, %rd816;
	xor.b64  	%rd891, %rd868, %rd819;
	xor.b64  	%rd892, %rd870, %rd822;
	xor.b64  	%rd893, %rd872, %rd825;
	xor.b64  	%rd894, %rd874, %rd828;
	xor.b64  	%rd895, %rd866, %rd831;
	xor.b64  	%rd896, %rd868, %rd834;
	xor.b64  	%rd897, %rd870, %rd837;
	xor.b64  	%rd898, %rd872, %rd840;
	xor.b64  	%rd899, %rd874, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd881;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 20;
	shf.r.wrap.b32 	%r448, %r445, %r446, 20;
	mov.b64 	%rd900, {%r448, %r447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd887;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 21;
	shf.r.wrap.b32 	%r452, %r449, %r450, 21;
	mov.b64 	%rd901, {%r452, %r451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r454,%dummy}, %rd893;
	}
	shf.l.wrap.b32 	%r455, %r454, %r453, 21;
	shf.l.wrap.b32 	%r456, %r453, %r454, 21;
	mov.b64 	%rd902, {%r456, %r455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd899;
	}
	shf.l.wrap.b32 	%r459, %r458, %r457, 14;
	shf.l.wrap.b32 	%r460, %r457, %r458, 14;
	mov.b64 	%rd903, {%r460, %r459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r462,%dummy}, %rd878;
	}
	shf.l.wrap.b32 	%r463, %r462, %r461, 28;
	shf.l.wrap.b32 	%r464, %r461, %r462, 28;
	mov.b64 	%rd904, {%r464, %r463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd884;
	}
	shf.l.wrap.b32 	%r467, %r466, %r465, 20;
	shf.l.wrap.b32 	%r468, %r465, %r466, 20;
	mov.b64 	%rd905, {%r468, %r467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r470,%dummy}, %rd885;
	}
	shf.l.wrap.b32 	%r471, %r470, %r469, 3;
	shf.l.wrap.b32 	%r472, %r469, %r470, 3;
	mov.b64 	%rd906, {%r472, %r471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd891;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 19;
	shf.r.wrap.b32 	%r476, %r473, %r474, 19;
	mov.b64 	%rd907, {%r476, %r475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd897;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 3;
	shf.r.wrap.b32 	%r480, %r477, %r478, 3;
	mov.b64 	%rd908, {%r480, %r479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd876;
	}
	shf.l.wrap.b32 	%r483, %r482, %r481, 1;
	shf.l.wrap.b32 	%r484, %r481, %r482, 1;
	mov.b64 	%rd909, {%r484, %r483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r486,%dummy}, %rd882;
	}
	shf.l.wrap.b32 	%r487, %r486, %r485, 6;
	shf.l.wrap.b32 	%r488, %r485, %r486, 6;
	mov.b64 	%rd910, {%r488, %r487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd888;
	}
	shf.l.wrap.b32 	%r491, %r490, %r489, 25;
	shf.l.wrap.b32 	%r492, %r489, %r490, 25;
	mov.b64 	%rd911, {%r492, %r491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd894;
	}
	shf.l.wrap.b32 	%r495, %r494, %r493, 8;
	shf.l.wrap.b32 	%r496, %r493, %r494, 8;
	mov.b64 	%rd912, {%r496, %r495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd895;
	}
	shf.l.wrap.b32 	%r499, %r498, %r497, 18;
	shf.l.wrap.b32 	%r500, %r497, %r498, 18;
	mov.b64 	%rd913, {%r500, %r499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r502,%dummy}, %rd879;
	}
	shf.l.wrap.b32 	%r503, %r502, %r501, 27;
	shf.l.wrap.b32 	%r504, %r501, %r502, 27;
	mov.b64 	%rd914, {%r504, %r503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd880;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 28;
	shf.r.wrap.b32 	%r508, %r505, %r506, 28;
	mov.b64 	%rd915, {%r508, %r507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r510,%dummy}, %rd886;
	}
	shf.l.wrap.b32 	%r511, %r510, %r509, 10;
	shf.l.wrap.b32 	%r512, %r509, %r510, 10;
	mov.b64 	%rd916, {%r512, %r511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd892;
	}
	shf.l.wrap.b32 	%r515, %r514, %r513, 15;
	shf.l.wrap.b32 	%r516, %r513, %r514, 15;
	mov.b64 	%rd917, {%r516, %r515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd898;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 8;
	shf.r.wrap.b32 	%r520, %r517, %r518, 8;
	mov.b64 	%rd918, {%r520, %r519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd877;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 2;
	shf.r.wrap.b32 	%r524, %r521, %r522, 2;
	mov.b64 	%rd919, {%r524, %r523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd883;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 9;
	shf.r.wrap.b32 	%r528, %r525, %r526, 9;
	mov.b64 	%rd920, {%r528, %r527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd889;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 25;
	shf.r.wrap.b32 	%r532, %r529, %r530, 25;
	mov.b64 	%rd921, {%r532, %r531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd890;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 23;
	shf.r.wrap.b32 	%r536, %r533, %r534, 23;
	mov.b64 	%rd922, {%r536, %r535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd896;
	}
	shf.l.wrap.b32 	%r539, %r538, %r537, 2;
	shf.l.wrap.b32 	%r540, %r537, %r538, 2;
	mov.b64 	%rd923, {%r540, %r539};
	not.b64 	%rd924, %rd900;
	and.b64  	%rd925, %rd901, %rd924;
	xor.b64  	%rd926, %rd925, %rd875;
	not.b64 	%rd927, %rd901;
	and.b64  	%rd928, %rd902, %rd927;
	xor.b64  	%rd929, %rd928, %rd900;
	not.b64 	%rd930, %rd902;
	and.b64  	%rd931, %rd903, %rd930;
	xor.b64  	%rd932, %rd931, %rd901;
	not.b64 	%rd933, %rd903;
	and.b64  	%rd934, %rd875, %rd933;
	xor.b64  	%rd935, %rd934, %rd902;
	not.b64 	%rd936, %rd875;
	and.b64  	%rd937, %rd900, %rd936;
	xor.b64  	%rd938, %rd937, %rd903;
	not.b64 	%rd939, %rd905;
	and.b64  	%rd940, %rd906, %rd939;
	xor.b64  	%rd941, %rd940, %rd904;
	not.b64 	%rd942, %rd906;
	and.b64  	%rd943, %rd907, %rd942;
	xor.b64  	%rd944, %rd943, %rd905;
	not.b64 	%rd945, %rd907;
	and.b64  	%rd946, %rd908, %rd945;
	xor.b64  	%rd947, %rd946, %rd906;
	not.b64 	%rd948, %rd908;
	and.b64  	%rd949, %rd904, %rd948;
	xor.b64  	%rd950, %rd949, %rd907;
	not.b64 	%rd951, %rd904;
	and.b64  	%rd952, %rd905, %rd951;
	xor.b64  	%rd953, %rd952, %rd908;
	not.b64 	%rd954, %rd910;
	and.b64  	%rd955, %rd911, %rd954;
	xor.b64  	%rd956, %rd955, %rd909;
	not.b64 	%rd957, %rd911;
	and.b64  	%rd958, %rd912, %rd957;
	xor.b64  	%rd959, %rd958, %rd910;
	not.b64 	%rd960, %rd912;
	and.b64  	%rd961, %rd913, %rd960;
	xor.b64  	%rd962, %rd961, %rd911;
	not.b64 	%rd963, %rd913;
	and.b64  	%rd964, %rd909, %rd963;
	xor.b64  	%rd965, %rd964, %rd912;
	not.b64 	%rd966, %rd909;
	and.b64  	%rd967, %rd910, %rd966;
	xor.b64  	%rd968, %rd967, %rd913;
	not.b64 	%rd969, %rd915;
	and.b64  	%rd970, %rd916, %rd969;
	xor.b64  	%rd971, %rd970, %rd914;
	not.b64 	%rd972, %rd916;
	and.b64  	%rd973, %rd917, %rd972;
	xor.b64  	%rd974, %rd973, %rd915;
	not.b64 	%rd975, %rd917;
	and.b64  	%rd976, %rd918, %rd975;
	xor.b64  	%rd977, %rd976, %rd916;
	not.b64 	%rd978, %rd918;
	and.b64  	%rd979, %rd914, %rd978;
	xor.b64  	%rd980, %rd979, %rd917;
	not.b64 	%rd981, %rd914;
	and.b64  	%rd982, %rd915, %rd981;
	xor.b64  	%rd983, %rd982, %rd918;
	not.b64 	%rd984, %rd920;
	and.b64  	%rd985, %rd921, %rd984;
	xor.b64  	%rd986, %rd985, %rd919;
	not.b64 	%rd987, %rd921;
	and.b64  	%rd988, %rd922, %rd987;
	xor.b64  	%rd989, %rd988, %rd920;
	not.b64 	%rd990, %rd922;
	and.b64  	%rd991, %rd923, %rd990;
	xor.b64  	%rd992, %rd991, %rd921;
	not.b64 	%rd993, %rd923;
	and.b64  	%rd994, %rd919, %rd993;
	xor.b64  	%rd995, %rd994, %rd922;
	not.b64 	%rd996, %rd919;
	and.b64  	%rd997, %rd920, %rd996;
	xor.b64  	%rd998, %rd997, %rd923;
	xor.b64  	%rd999, %rd926, %rd19;
	xor.b64  	%rd1000, %rd941, %rd999;
	xor.b64  	%rd1001, %rd1000, %rd956;
	xor.b64  	%rd1002, %rd1001, %rd971;
	xor.b64  	%rd1003, %rd1002, %rd986;
	xor.b64  	%rd1004, %rd944, %rd929;
	xor.b64  	%rd1005, %rd1004, %rd959;
	xor.b64  	%rd1006, %rd1005, %rd974;
	xor.b64  	%rd1007, %rd1006, %rd989;
	xor.b64  	%rd1008, %rd947, %rd932;
	xor.b64  	%rd1009, %rd1008, %rd962;
	xor.b64  	%rd1010, %rd1009, %rd977;
	xor.b64  	%rd1011, %rd1010, %rd992;
	xor.b64  	%rd1012, %rd950, %rd935;
	xor.b64  	%rd1013, %rd1012, %rd965;
	xor.b64  	%rd1014, %rd1013, %rd980;
	xor.b64  	%rd1015, %rd1014, %rd995;
	xor.b64  	%rd1016, %rd953, %rd938;
	xor.b64  	%rd1017, %rd1016, %rd968;
	xor.b64  	%rd1018, %rd1017, %rd983;
	xor.b64  	%rd1019, %rd1018, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd1007;
	}
	shf.l.wrap.b32 	%r543, %r542, %r541, 1;
	shf.l.wrap.b32 	%r544, %r541, %r542, 1;
	mov.b64 	%rd1020, {%r544, %r543};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd1011;
	}
	shf.l.wrap.b32 	%r547, %r546, %r545, 1;
	shf.l.wrap.b32 	%r548, %r545, %r546, 1;
	mov.b64 	%rd1022, {%r548, %r547};
	xor.b64  	%rd1023, %rd1022, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd1015;
	}
	shf.l.wrap.b32 	%r551, %r550, %r549, 1;
	shf.l.wrap.b32 	%r552, %r549, %r550, 1;
	mov.b64 	%rd1024, {%r552, %r551};
	xor.b64  	%rd1025, %rd1024, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd1019;
	}
	shf.l.wrap.b32 	%r555, %r554, %r553, 1;
	shf.l.wrap.b32 	%r556, %r553, %r554, 1;
	mov.b64 	%rd1026, {%r556, %r555};
	xor.b64  	%rd1027, %rd1026, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r558,%dummy}, %rd1003;
	}
	shf.l.wrap.b32 	%r559, %r558, %r557, 1;
	shf.l.wrap.b32 	%r560, %r557, %r558, 1;
	mov.b64 	%rd1028, {%r560, %r559};
	xor.b64  	%rd1029, %rd1015, %rd1028;
	xor.b64  	%rd1030, %rd1021, %rd999;
	xor.b64  	%rd1031, %rd1023, %rd929;
	xor.b64  	%rd1032, %rd1025, %rd932;
	xor.b64  	%rd1033, %rd1027, %rd935;
	xor.b64  	%rd1034, %rd1029, %rd938;
	xor.b64  	%rd1035, %rd1021, %rd941;
	xor.b64  	%rd1036, %rd1023, %rd944;
	xor.b64  	%rd1037, %rd1025, %rd947;
	xor.b64  	%rd1038, %rd1027, %rd950;
	xor.b64  	%rd1039, %rd1029, %rd953;
	xor.b64  	%rd1040, %rd1021, %rd956;
	xor.b64  	%rd1041, %rd1023, %rd959;
	xor.b64  	%rd1042, %rd1025, %rd962;
	xor.b64  	%rd1043, %rd1027, %rd965;
	xor.b64  	%rd1044, %rd1029, %rd968;
	xor.b64  	%rd1045, %rd1021, %rd971;
	xor.b64  	%rd1046, %rd1023, %rd974;
	xor.b64  	%rd1047, %rd1025, %rd977;
	xor.b64  	%rd1048, %rd1027, %rd980;
	xor.b64  	%rd1049, %rd1029, %rd983;
	xor.b64  	%rd1050, %rd1021, %rd986;
	xor.b64  	%rd1051, %rd1023, %rd989;
	xor.b64  	%rd1052, %rd1025, %rd992;
	xor.b64  	%rd1053, %rd1027, %rd995;
	xor.b64  	%rd1054, %rd1029, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd1036;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 20;
	shf.r.wrap.b32 	%r564, %r561, %r562, 20;
	mov.b64 	%rd1055, {%r564, %r563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd1042;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 21;
	shf.r.wrap.b32 	%r568, %r565, %r566, 21;
	mov.b64 	%rd1056, {%r568, %r567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd1048;
	}
	shf.l.wrap.b32 	%r571, %r570, %r569, 21;
	shf.l.wrap.b32 	%r572, %r569, %r570, 21;
	mov.b64 	%rd1057, {%r572, %r571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r574,%dummy}, %rd1054;
	}
	shf.l.wrap.b32 	%r575, %r574, %r573, 14;
	shf.l.wrap.b32 	%r576, %r573, %r574, 14;
	mov.b64 	%rd1058, {%r576, %r575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd1033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd1033;
	}
	shf.l.wrap.b32 	%r579, %r578, %r577, 28;
	shf.l.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd1059, {%r580, %r579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r582,%dummy}, %rd1039;
	}
	shf.l.wrap.b32 	%r583, %r582, %r581, 20;
	shf.l.wrap.b32 	%r584, %r581, %r582, 20;
	mov.b64 	%rd1060, {%r584, %r583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd1040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd1040;
	}
	shf.l.wrap.b32 	%r587, %r586, %r585, 3;
	shf.l.wrap.b32 	%r588, %r585, %r586, 3;
	mov.b64 	%rd1061, {%r588, %r587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd1046;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 19;
	shf.r.wrap.b32 	%r592, %r589, %r590, 19;
	mov.b64 	%rd1062, {%r592, %r591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd1052;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 3;
	shf.r.wrap.b32 	%r596, %r593, %r594, 3;
	mov.b64 	%rd1063, {%r596, %r595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r598,%dummy}, %rd1031;
	}
	shf.l.wrap.b32 	%r599, %r598, %r597, 1;
	shf.l.wrap.b32 	%r600, %r597, %r598, 1;
	mov.b64 	%rd1064, {%r600, %r599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd1037;
	}
	shf.l.wrap.b32 	%r603, %r602, %r601, 6;
	shf.l.wrap.b32 	%r604, %r601, %r602, 6;
	mov.b64 	%rd1065, {%r604, %r603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r606,%dummy}, %rd1043;
	}
	shf.l.wrap.b32 	%r607, %r606, %r605, 25;
	shf.l.wrap.b32 	%r608, %r605, %r606, 25;
	mov.b64 	%rd1066, {%r608, %r607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd1049;
	}
	shf.l.wrap.b32 	%r611, %r610, %r609, 8;
	shf.l.wrap.b32 	%r612, %r609, %r610, 8;
	mov.b64 	%rd1067, {%r612, %r611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r614,%dummy}, %rd1050;
	}
	shf.l.wrap.b32 	%r615, %r614, %r613, 18;
	shf.l.wrap.b32 	%r616, %r613, %r614, 18;
	mov.b64 	%rd1068, {%r616, %r615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd1034;
	}
	shf.l.wrap.b32 	%r619, %r618, %r617, 27;
	shf.l.wrap.b32 	%r620, %r617, %r618, 27;
	mov.b64 	%rd1069, {%r620, %r619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd1035;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 28;
	shf.r.wrap.b32 	%r624, %r621, %r622, 28;
	mov.b64 	%rd1070, {%r624, %r623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd1041;
	}
	shf.l.wrap.b32 	%r627, %r626, %r625, 10;
	shf.l.wrap.b32 	%r628, %r625, %r626, 10;
	mov.b64 	%rd1071, {%r628, %r627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r630,%dummy}, %rd1047;
	}
	shf.l.wrap.b32 	%r631, %r630, %r629, 15;
	shf.l.wrap.b32 	%r632, %r629, %r630, 15;
	mov.b64 	%rd1072, {%r632, %r631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd1053;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 8;
	shf.r.wrap.b32 	%r636, %r633, %r634, 8;
	mov.b64 	%rd1073, {%r636, %r635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd1032;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 2;
	shf.r.wrap.b32 	%r640, %r637, %r638, 2;
	mov.b64 	%rd1074, {%r640, %r639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd1038;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 9;
	shf.r.wrap.b32 	%r644, %r641, %r642, 9;
	mov.b64 	%rd1075, {%r644, %r643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1044;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 25;
	shf.r.wrap.b32 	%r648, %r645, %r646, 25;
	mov.b64 	%rd1076, {%r648, %r647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd1045;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 23;
	shf.r.wrap.b32 	%r652, %r649, %r650, 23;
	mov.b64 	%rd1077, {%r652, %r651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd1051;
	}
	shf.l.wrap.b32 	%r655, %r654, %r653, 2;
	shf.l.wrap.b32 	%r656, %r653, %r654, 2;
	mov.b64 	%rd1078, {%r656, %r655};
	not.b64 	%rd1079, %rd1055;
	and.b64  	%rd1080, %rd1056, %rd1079;
	xor.b64  	%rd1081, %rd1080, %rd1030;
	not.b64 	%rd1082, %rd1056;
	and.b64  	%rd1083, %rd1057, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1055;
	not.b64 	%rd1085, %rd1057;
	and.b64  	%rd1086, %rd1058, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1056;
	not.b64 	%rd1088, %rd1058;
	and.b64  	%rd1089, %rd1030, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1057;
	not.b64 	%rd1091, %rd1030;
	and.b64  	%rd1092, %rd1055, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1058;
	not.b64 	%rd1094, %rd1060;
	and.b64  	%rd1095, %rd1061, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1059;
	not.b64 	%rd1097, %rd1061;
	and.b64  	%rd1098, %rd1062, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1060;
	not.b64 	%rd1100, %rd1062;
	and.b64  	%rd1101, %rd1063, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1061;
	not.b64 	%rd1103, %rd1063;
	and.b64  	%rd1104, %rd1059, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1062;
	not.b64 	%rd1106, %rd1059;
	and.b64  	%rd1107, %rd1060, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd1063;
	not.b64 	%rd1109, %rd1065;
	and.b64  	%rd1110, %rd1066, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1064;
	not.b64 	%rd1112, %rd1066;
	and.b64  	%rd1113, %rd1067, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1065;
	not.b64 	%rd1115, %rd1067;
	and.b64  	%rd1116, %rd1068, %rd1115;
	xor.b64  	%rd1117, %rd1116, %rd1066;
	not.b64 	%rd1118, %rd1068;
	and.b64  	%rd1119, %rd1064, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1067;
	not.b64 	%rd1121, %rd1064;
	and.b64  	%rd1122, %rd1065, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1068;
	not.b64 	%rd1124, %rd1070;
	and.b64  	%rd1125, %rd1071, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1069;
	not.b64 	%rd1127, %rd1071;
	and.b64  	%rd1128, %rd1072, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1070;
	not.b64 	%rd1130, %rd1072;
	and.b64  	%rd1131, %rd1073, %rd1130;
	xor.b64  	%rd1132, %rd1131, %rd1071;
	not.b64 	%rd1133, %rd1073;
	and.b64  	%rd1134, %rd1069, %rd1133;
	xor.b64  	%rd1135, %rd1134, %rd1072;
	not.b64 	%rd1136, %rd1069;
	and.b64  	%rd1137, %rd1070, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1073;
	not.b64 	%rd1139, %rd1075;
	and.b64  	%rd1140, %rd1076, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1074;
	not.b64 	%rd1142, %rd1076;
	and.b64  	%rd1143, %rd1077, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1075;
	not.b64 	%rd1145, %rd1077;
	and.b64  	%rd1146, %rd1078, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1076;
	not.b64 	%rd1148, %rd1078;
	and.b64  	%rd1149, %rd1074, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1077;
	not.b64 	%rd1151, %rd1074;
	and.b64  	%rd1152, %rd1075, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1078;
	xor.b64  	%rd1154, %rd1081, %rd20;
	xor.b64  	%rd1155, %rd1096, %rd1154;
	xor.b64  	%rd1156, %rd1155, %rd1111;
	xor.b64  	%rd1157, %rd1156, %rd1126;
	xor.b64  	%rd1158, %rd1157, %rd1141;
	xor.b64  	%rd1159, %rd1099, %rd1084;
	xor.b64  	%rd1160, %rd1159, %rd1114;
	xor.b64  	%rd1161, %rd1160, %rd1129;
	xor.b64  	%rd1162, %rd1161, %rd1144;
	xor.b64  	%rd1163, %rd1102, %rd1087;
	xor.b64  	%rd1164, %rd1163, %rd1117;
	xor.b64  	%rd1165, %rd1164, %rd1132;
	xor.b64  	%rd1166, %rd1165, %rd1147;
	xor.b64  	%rd1167, %rd1105, %rd1090;
	xor.b64  	%rd1168, %rd1167, %rd1120;
	xor.b64  	%rd1169, %rd1168, %rd1135;
	xor.b64  	%rd1170, %rd1169, %rd1150;
	xor.b64  	%rd1171, %rd1108, %rd1093;
	xor.b64  	%rd1172, %rd1171, %rd1123;
	xor.b64  	%rd1173, %rd1172, %rd1138;
	xor.b64  	%rd1174, %rd1173, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd1162;
	}
	shf.l.wrap.b32 	%r659, %r658, %r657, 1;
	shf.l.wrap.b32 	%r660, %r657, %r658, 1;
	mov.b64 	%rd1175, {%r660, %r659};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd1166;
	}
	shf.l.wrap.b32 	%r663, %r662, %r661, 1;
	shf.l.wrap.b32 	%r664, %r661, %r662, 1;
	mov.b64 	%rd1177, {%r664, %r663};
	xor.b64  	%rd1178, %rd1177, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd1170;
	}
	shf.l.wrap.b32 	%r667, %r666, %r665, 1;
	shf.l.wrap.b32 	%r668, %r665, %r666, 1;
	mov.b64 	%rd1179, {%r668, %r667};
	xor.b64  	%rd1180, %rd1179, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd1174;
	}
	shf.l.wrap.b32 	%r671, %r670, %r669, 1;
	shf.l.wrap.b32 	%r672, %r669, %r670, 1;
	mov.b64 	%rd1181, {%r672, %r671};
	xor.b64  	%rd1182, %rd1181, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd1158;
	}
	shf.l.wrap.b32 	%r675, %r674, %r673, 1;
	shf.l.wrap.b32 	%r676, %r673, %r674, 1;
	mov.b64 	%rd1183, {%r676, %r675};
	xor.b64  	%rd1184, %rd1170, %rd1183;
	xor.b64  	%rd1185, %rd1176, %rd1154;
	xor.b64  	%rd1186, %rd1178, %rd1084;
	xor.b64  	%rd1187, %rd1180, %rd1087;
	xor.b64  	%rd1188, %rd1182, %rd1090;
	xor.b64  	%rd1189, %rd1184, %rd1093;
	xor.b64  	%rd1190, %rd1176, %rd1096;
	xor.b64  	%rd1191, %rd1178, %rd1099;
	xor.b64  	%rd1192, %rd1180, %rd1102;
	xor.b64  	%rd1193, %rd1182, %rd1105;
	xor.b64  	%rd1194, %rd1184, %rd1108;
	xor.b64  	%rd1195, %rd1176, %rd1111;
	xor.b64  	%rd1196, %rd1178, %rd1114;
	xor.b64  	%rd1197, %rd1180, %rd1117;
	xor.b64  	%rd1198, %rd1182, %rd1120;
	xor.b64  	%rd1199, %rd1184, %rd1123;
	xor.b64  	%rd1200, %rd1176, %rd1126;
	xor.b64  	%rd1201, %rd1178, %rd1129;
	xor.b64  	%rd1202, %rd1180, %rd1132;
	xor.b64  	%rd1203, %rd1182, %rd1135;
	xor.b64  	%rd1204, %rd1184, %rd1138;
	xor.b64  	%rd1205, %rd1176, %rd1141;
	xor.b64  	%rd1206, %rd1178, %rd1144;
	xor.b64  	%rd1207, %rd1180, %rd1147;
	xor.b64  	%rd1208, %rd1182, %rd1150;
	xor.b64  	%rd1209, %rd1184, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1191;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 20;
	shf.r.wrap.b32 	%r680, %r677, %r678, 20;
	mov.b64 	%rd1210, {%r680, %r679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1197;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 21;
	shf.r.wrap.b32 	%r684, %r681, %r682, 21;
	mov.b64 	%rd1211, {%r684, %r683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r686,%dummy}, %rd1203;
	}
	shf.l.wrap.b32 	%r687, %r686, %r685, 21;
	shf.l.wrap.b32 	%r688, %r685, %r686, 21;
	mov.b64 	%rd1212, {%r688, %r687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd1209;
	}
	shf.l.wrap.b32 	%r691, %r690, %r689, 14;
	shf.l.wrap.b32 	%r692, %r689, %r690, 14;
	mov.b64 	%rd1213, {%r692, %r691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd1188;
	}
	shf.l.wrap.b32 	%r695, %r694, %r693, 28;
	shf.l.wrap.b32 	%r696, %r693, %r694, 28;
	mov.b64 	%rd1214, {%r696, %r695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1194;
	}
	shf.l.wrap.b32 	%r699, %r698, %r697, 20;
	shf.l.wrap.b32 	%r700, %r697, %r698, 20;
	mov.b64 	%rd1215, {%r700, %r699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd1195;
	}
	shf.l.wrap.b32 	%r703, %r702, %r701, 3;
	shf.l.wrap.b32 	%r704, %r701, %r702, 3;
	mov.b64 	%rd1216, {%r704, %r703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1201;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 19;
	shf.r.wrap.b32 	%r708, %r705, %r706, 19;
	mov.b64 	%rd1217, {%r708, %r707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1207;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 3;
	shf.r.wrap.b32 	%r712, %r709, %r710, 3;
	mov.b64 	%rd1218, {%r712, %r711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd1186;
	}
	shf.l.wrap.b32 	%r715, %r714, %r713, 1;
	shf.l.wrap.b32 	%r716, %r713, %r714, 1;
	mov.b64 	%rd1219, {%r716, %r715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1192;
	}
	shf.l.wrap.b32 	%r719, %r718, %r717, 6;
	shf.l.wrap.b32 	%r720, %r717, %r718, 6;
	mov.b64 	%rd1220, {%r720, %r719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd1198;
	}
	shf.l.wrap.b32 	%r723, %r722, %r721, 25;
	shf.l.wrap.b32 	%r724, %r721, %r722, 25;
	mov.b64 	%rd1221, {%r724, %r723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd1204;
	}
	shf.l.wrap.b32 	%r727, %r726, %r725, 8;
	shf.l.wrap.b32 	%r728, %r725, %r726, 8;
	mov.b64 	%rd1222, {%r728, %r727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r729}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1205;
	}
	shf.l.wrap.b32 	%r731, %r730, %r729, 18;
	shf.l.wrap.b32 	%r732, %r729, %r730, 18;
	mov.b64 	%rd1223, {%r732, %r731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd1189;
	}
	shf.l.wrap.b32 	%r735, %r734, %r733, 27;
	shf.l.wrap.b32 	%r736, %r733, %r734, 27;
	mov.b64 	%rd1224, {%r736, %r735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1190;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 28;
	shf.r.wrap.b32 	%r740, %r737, %r738, 28;
	mov.b64 	%rd1225, {%r740, %r739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd1196;
	}
	shf.l.wrap.b32 	%r743, %r742, %r741, 10;
	shf.l.wrap.b32 	%r744, %r741, %r742, 10;
	mov.b64 	%rd1226, {%r744, %r743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd1202;
	}
	shf.l.wrap.b32 	%r747, %r746, %r745, 15;
	shf.l.wrap.b32 	%r748, %r745, %r746, 15;
	mov.b64 	%rd1227, {%r748, %r747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1208;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 8;
	shf.r.wrap.b32 	%r752, %r749, %r750, 8;
	mov.b64 	%rd1228, {%r752, %r751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r754}, %rd1187;
	}
	shf.r.wrap.b32 	%r755, %r754, %r753, 2;
	shf.r.wrap.b32 	%r756, %r753, %r754, 2;
	mov.b64 	%rd1229, {%r756, %r755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1193;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 9;
	shf.r.wrap.b32 	%r760, %r757, %r758, 9;
	mov.b64 	%rd1230, {%r760, %r759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd1199;
	}
	shf.r.wrap.b32 	%r763, %r762, %r761, 25;
	shf.r.wrap.b32 	%r764, %r761, %r762, 25;
	mov.b64 	%rd1231, {%r764, %r763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1200;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 23;
	shf.r.wrap.b32 	%r768, %r765, %r766, 23;
	mov.b64 	%rd1232, {%r768, %r767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd1206;
	}
	shf.l.wrap.b32 	%r771, %r770, %r769, 2;
	shf.l.wrap.b32 	%r772, %r769, %r770, 2;
	mov.b64 	%rd1233, {%r772, %r771};
	not.b64 	%rd1234, %rd1210;
	and.b64  	%rd1235, %rd1211, %rd1234;
	xor.b64  	%rd1236, %rd1235, %rd1185;
	not.b64 	%rd1237, %rd1211;
	and.b64  	%rd1238, %rd1212, %rd1237;
	xor.b64  	%rd1239, %rd1238, %rd1210;
	not.b64 	%rd1240, %rd1212;
	and.b64  	%rd1241, %rd1213, %rd1240;
	xor.b64  	%rd1242, %rd1241, %rd1211;
	not.b64 	%rd1243, %rd1213;
	and.b64  	%rd1244, %rd1185, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1212;
	not.b64 	%rd1246, %rd1185;
	and.b64  	%rd1247, %rd1210, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1213;
	not.b64 	%rd1249, %rd1215;
	and.b64  	%rd1250, %rd1216, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1214;
	not.b64 	%rd1252, %rd1216;
	and.b64  	%rd1253, %rd1217, %rd1252;
	xor.b64  	%rd1254, %rd1253, %rd1215;
	not.b64 	%rd1255, %rd1217;
	and.b64  	%rd1256, %rd1218, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd1216;
	not.b64 	%rd1258, %rd1218;
	and.b64  	%rd1259, %rd1214, %rd1258;
	xor.b64  	%rd1260, %rd1259, %rd1217;
	not.b64 	%rd1261, %rd1214;
	and.b64  	%rd1262, %rd1215, %rd1261;
	xor.b64  	%rd1263, %rd1262, %rd1218;
	not.b64 	%rd1264, %rd1220;
	and.b64  	%rd1265, %rd1221, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1219;
	not.b64 	%rd1267, %rd1221;
	and.b64  	%rd1268, %rd1222, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd1220;
	not.b64 	%rd1270, %rd1222;
	and.b64  	%rd1271, %rd1223, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1221;
	not.b64 	%rd1273, %rd1223;
	and.b64  	%rd1274, %rd1219, %rd1273;
	xor.b64  	%rd1275, %rd1274, %rd1222;
	not.b64 	%rd1276, %rd1219;
	and.b64  	%rd1277, %rd1220, %rd1276;
	xor.b64  	%rd1278, %rd1277, %rd1223;
	not.b64 	%rd1279, %rd1225;
	and.b64  	%rd1280, %rd1226, %rd1279;
	xor.b64  	%rd1281, %rd1280, %rd1224;
	not.b64 	%rd1282, %rd1226;
	and.b64  	%rd1283, %rd1227, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1225;
	not.b64 	%rd1285, %rd1227;
	and.b64  	%rd1286, %rd1228, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1226;
	not.b64 	%rd1288, %rd1228;
	and.b64  	%rd1289, %rd1224, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1227;
	not.b64 	%rd1291, %rd1224;
	and.b64  	%rd1292, %rd1225, %rd1291;
	xor.b64  	%rd1293, %rd1292, %rd1228;
	not.b64 	%rd1294, %rd1230;
	and.b64  	%rd1295, %rd1231, %rd1294;
	xor.b64  	%rd1296, %rd1295, %rd1229;
	not.b64 	%rd1297, %rd1231;
	and.b64  	%rd1298, %rd1232, %rd1297;
	xor.b64  	%rd1299, %rd1298, %rd1230;
	not.b64 	%rd1300, %rd1232;
	and.b64  	%rd1301, %rd1233, %rd1300;
	xor.b64  	%rd1302, %rd1301, %rd1231;
	not.b64 	%rd1303, %rd1233;
	and.b64  	%rd1304, %rd1229, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1232;
	not.b64 	%rd1306, %rd1229;
	and.b64  	%rd1307, %rd1230, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1233;
	xor.b64  	%rd1309, %rd1236, %rd21;
	xor.b64  	%rd1310, %rd1251, %rd1309;
	xor.b64  	%rd1311, %rd1310, %rd1266;
	xor.b64  	%rd1312, %rd1311, %rd1281;
	xor.b64  	%rd1313, %rd1312, %rd1296;
	xor.b64  	%rd1314, %rd1254, %rd1239;
	xor.b64  	%rd1315, %rd1314, %rd1269;
	xor.b64  	%rd1316, %rd1315, %rd1284;
	xor.b64  	%rd1317, %rd1316, %rd1299;
	xor.b64  	%rd1318, %rd1257, %rd1242;
	xor.b64  	%rd1319, %rd1318, %rd1272;
	xor.b64  	%rd1320, %rd1319, %rd1287;
	xor.b64  	%rd1321, %rd1320, %rd1302;
	xor.b64  	%rd1322, %rd1260, %rd1245;
	xor.b64  	%rd1323, %rd1322, %rd1275;
	xor.b64  	%rd1324, %rd1323, %rd1290;
	xor.b64  	%rd1325, %rd1324, %rd1305;
	xor.b64  	%rd1326, %rd1263, %rd1248;
	xor.b64  	%rd1327, %rd1326, %rd1278;
	xor.b64  	%rd1328, %rd1327, %rd1293;
	xor.b64  	%rd1329, %rd1328, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd1317;
	}
	shf.l.wrap.b32 	%r775, %r774, %r773, 1;
	shf.l.wrap.b32 	%r776, %r773, %r774, 1;
	mov.b64 	%rd1330, {%r776, %r775};
	xor.b64  	%rd1331, %rd1329, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd1321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1321;
	}
	shf.l.wrap.b32 	%r779, %r778, %r777, 1;
	shf.l.wrap.b32 	%r780, %r777, %r778, 1;
	mov.b64 	%rd1332, {%r780, %r779};
	xor.b64  	%rd1333, %rd1332, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1325;
	}
	shf.l.wrap.b32 	%r783, %r782, %r781, 1;
	shf.l.wrap.b32 	%r784, %r781, %r782, 1;
	mov.b64 	%rd1334, {%r784, %r783};
	xor.b64  	%rd1335, %rd1334, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r785}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd1329;
	}
	shf.l.wrap.b32 	%r787, %r786, %r785, 1;
	shf.l.wrap.b32 	%r788, %r785, %r786, 1;
	mov.b64 	%rd1336, {%r788, %r787};
	xor.b64  	%rd1337, %rd1336, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1313;
	}
	shf.l.wrap.b32 	%r791, %r790, %r789, 1;
	shf.l.wrap.b32 	%r792, %r789, %r790, 1;
	mov.b64 	%rd1338, {%r792, %r791};
	xor.b64  	%rd1339, %rd1325, %rd1338;
	xor.b64  	%rd1340, %rd1331, %rd1309;
	xor.b64  	%rd1341, %rd1333, %rd1239;
	xor.b64  	%rd1342, %rd1335, %rd1242;
	xor.b64  	%rd1343, %rd1337, %rd1245;
	xor.b64  	%rd1344, %rd1339, %rd1248;
	xor.b64  	%rd1345, %rd1331, %rd1251;
	xor.b64  	%rd1346, %rd1333, %rd1254;
	xor.b64  	%rd1347, %rd1335, %rd1257;
	xor.b64  	%rd1348, %rd1337, %rd1260;
	xor.b64  	%rd1349, %rd1339, %rd1263;
	xor.b64  	%rd1350, %rd1331, %rd1266;
	xor.b64  	%rd1351, %rd1333, %rd1269;
	xor.b64  	%rd1352, %rd1335, %rd1272;
	xor.b64  	%rd1353, %rd1337, %rd1275;
	xor.b64  	%rd1354, %rd1339, %rd1278;
	xor.b64  	%rd1355, %rd1331, %rd1281;
	xor.b64  	%rd1356, %rd1333, %rd1284;
	xor.b64  	%rd1357, %rd1335, %rd1287;
	xor.b64  	%rd1358, %rd1337, %rd1290;
	xor.b64  	%rd1359, %rd1339, %rd1293;
	xor.b64  	%rd1360, %rd1331, %rd1296;
	xor.b64  	%rd1361, %rd1333, %rd1299;
	xor.b64  	%rd1362, %rd1335, %rd1302;
	xor.b64  	%rd1363, %rd1337, %rd1305;
	xor.b64  	%rd1364, %rd1339, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd1346;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 20;
	shf.r.wrap.b32 	%r796, %r793, %r794, 20;
	mov.b64 	%rd1365, {%r796, %r795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd1352;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 21;
	shf.r.wrap.b32 	%r800, %r797, %r798, 21;
	mov.b64 	%rd1366, {%r800, %r799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r801}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd1358;
	}
	shf.l.wrap.b32 	%r803, %r802, %r801, 21;
	shf.l.wrap.b32 	%r804, %r801, %r802, 21;
	mov.b64 	%rd1367, {%r804, %r803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1364;
	}
	shf.l.wrap.b32 	%r807, %r806, %r805, 14;
	shf.l.wrap.b32 	%r808, %r805, %r806, 14;
	mov.b64 	%rd1368, {%r808, %r807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r809}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd1343;
	}
	shf.l.wrap.b32 	%r811, %r810, %r809, 28;
	shf.l.wrap.b32 	%r812, %r809, %r810, 28;
	mov.b64 	%rd1369, {%r812, %r811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1349;
	}
	shf.l.wrap.b32 	%r815, %r814, %r813, 20;
	shf.l.wrap.b32 	%r816, %r813, %r814, 20;
	mov.b64 	%rd1370, {%r816, %r815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd1350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r818,%dummy}, %rd1350;
	}
	shf.l.wrap.b32 	%r819, %r818, %r817, 3;
	shf.l.wrap.b32 	%r820, %r817, %r818, 3;
	mov.b64 	%rd1371, {%r820, %r819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd1356;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 19;
	shf.r.wrap.b32 	%r824, %r821, %r822, 19;
	mov.b64 	%rd1372, {%r824, %r823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd1362;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 3;
	shf.r.wrap.b32 	%r828, %r825, %r826, 3;
	mov.b64 	%rd1373, {%r828, %r827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd1341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd1341;
	}
	shf.l.wrap.b32 	%r831, %r830, %r829, 1;
	shf.l.wrap.b32 	%r832, %r829, %r830, 1;
	mov.b64 	%rd1374, {%r832, %r831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r834,%dummy}, %rd1347;
	}
	shf.l.wrap.b32 	%r835, %r834, %r833, 6;
	shf.l.wrap.b32 	%r836, %r833, %r834, 6;
	mov.b64 	%rd1375, {%r836, %r835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r837}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1353;
	}
	shf.l.wrap.b32 	%r839, %r838, %r837, 25;
	shf.l.wrap.b32 	%r840, %r837, %r838, 25;
	mov.b64 	%rd1376, {%r840, %r839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1359;
	}
	shf.l.wrap.b32 	%r843, %r842, %r841, 8;
	shf.l.wrap.b32 	%r844, %r841, %r842, 8;
	mov.b64 	%rd1377, {%r844, %r843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd1360;
	}
	shf.l.wrap.b32 	%r847, %r846, %r845, 18;
	shf.l.wrap.b32 	%r848, %r845, %r846, 18;
	mov.b64 	%rd1378, {%r848, %r847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r849}, %rd1344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1344;
	}
	shf.l.wrap.b32 	%r851, %r850, %r849, 27;
	shf.l.wrap.b32 	%r852, %r849, %r850, 27;
	mov.b64 	%rd1379, {%r852, %r851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1345;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd1380, {%r856, %r855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd1351;
	}
	shf.l.wrap.b32 	%r859, %r858, %r857, 10;
	shf.l.wrap.b32 	%r860, %r857, %r858, 10;
	mov.b64 	%rd1381, {%r860, %r859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1357;
	}
	shf.l.wrap.b32 	%r863, %r862, %r861, 15;
	shf.l.wrap.b32 	%r864, %r861, %r862, 15;
	mov.b64 	%rd1382, {%r864, %r863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r866}, %rd1363;
	}
	shf.r.wrap.b32 	%r867, %r866, %r865, 8;
	shf.r.wrap.b32 	%r868, %r865, %r866, 8;
	mov.b64 	%rd1383, {%r868, %r867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1342;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 2;
	shf.r.wrap.b32 	%r872, %r869, %r870, 2;
	mov.b64 	%rd1384, {%r872, %r871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r874}, %rd1348;
	}
	shf.r.wrap.b32 	%r875, %r874, %r873, 9;
	shf.r.wrap.b32 	%r876, %r873, %r874, 9;
	mov.b64 	%rd1385, {%r876, %r875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd1354;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 25;
	shf.r.wrap.b32 	%r880, %r877, %r878, 25;
	mov.b64 	%rd1386, {%r880, %r879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r881,%dummy}, %rd1355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r882}, %rd1355;
	}
	shf.r.wrap.b32 	%r883, %r882, %r881, 23;
	shf.r.wrap.b32 	%r884, %r881, %r882, 23;
	mov.b64 	%rd1387, {%r884, %r883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd1361;
	}
	shf.l.wrap.b32 	%r887, %r886, %r885, 2;
	shf.l.wrap.b32 	%r888, %r885, %r886, 2;
	mov.b64 	%rd1388, {%r888, %r887};
	not.b64 	%rd1389, %rd1365;
	and.b64  	%rd1390, %rd1366, %rd1389;
	xor.b64  	%rd1391, %rd1390, %rd1340;
	not.b64 	%rd1392, %rd1366;
	and.b64  	%rd1393, %rd1367, %rd1392;
	xor.b64  	%rd1394, %rd1393, %rd1365;
	not.b64 	%rd1395, %rd1367;
	and.b64  	%rd1396, %rd1368, %rd1395;
	xor.b64  	%rd1397, %rd1396, %rd1366;
	not.b64 	%rd1398, %rd1368;
	and.b64  	%rd1399, %rd1340, %rd1398;
	xor.b64  	%rd1400, %rd1399, %rd1367;
	not.b64 	%rd1401, %rd1340;
	and.b64  	%rd1402, %rd1365, %rd1401;
	xor.b64  	%rd1403, %rd1402, %rd1368;
	not.b64 	%rd1404, %rd1370;
	and.b64  	%rd1405, %rd1371, %rd1404;
	xor.b64  	%rd1406, %rd1405, %rd1369;
	not.b64 	%rd1407, %rd1371;
	and.b64  	%rd1408, %rd1372, %rd1407;
	xor.b64  	%rd1409, %rd1408, %rd1370;
	not.b64 	%rd1410, %rd1372;
	and.b64  	%rd1411, %rd1373, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1371;
	not.b64 	%rd1413, %rd1373;
	and.b64  	%rd1414, %rd1369, %rd1413;
	xor.b64  	%rd1415, %rd1414, %rd1372;
	not.b64 	%rd1416, %rd1369;
	and.b64  	%rd1417, %rd1370, %rd1416;
	xor.b64  	%rd1418, %rd1417, %rd1373;
	not.b64 	%rd1419, %rd1375;
	and.b64  	%rd1420, %rd1376, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1374;
	not.b64 	%rd1422, %rd1376;
	and.b64  	%rd1423, %rd1377, %rd1422;
	xor.b64  	%rd1424, %rd1423, %rd1375;
	not.b64 	%rd1425, %rd1377;
	and.b64  	%rd1426, %rd1378, %rd1425;
	xor.b64  	%rd1427, %rd1426, %rd1376;
	not.b64 	%rd1428, %rd1378;
	and.b64  	%rd1429, %rd1374, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1377;
	not.b64 	%rd1431, %rd1374;
	and.b64  	%rd1432, %rd1375, %rd1431;
	xor.b64  	%rd1433, %rd1432, %rd1378;
	not.b64 	%rd1434, %rd1380;
	and.b64  	%rd1435, %rd1381, %rd1434;
	xor.b64  	%rd1436, %rd1435, %rd1379;
	not.b64 	%rd1437, %rd1381;
	and.b64  	%rd1438, %rd1382, %rd1437;
	xor.b64  	%rd1439, %rd1438, %rd1380;
	not.b64 	%rd1440, %rd1382;
	and.b64  	%rd1441, %rd1383, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1381;
	not.b64 	%rd1443, %rd1383;
	and.b64  	%rd1444, %rd1379, %rd1443;
	xor.b64  	%rd1445, %rd1444, %rd1382;
	not.b64 	%rd1446, %rd1379;
	and.b64  	%rd1447, %rd1380, %rd1446;
	xor.b64  	%rd1448, %rd1447, %rd1383;
	not.b64 	%rd1449, %rd1385;
	and.b64  	%rd1450, %rd1386, %rd1449;
	xor.b64  	%rd1451, %rd1450, %rd1384;
	not.b64 	%rd1452, %rd1386;
	and.b64  	%rd1453, %rd1387, %rd1452;
	xor.b64  	%rd1454, %rd1453, %rd1385;
	not.b64 	%rd1455, %rd1387;
	and.b64  	%rd1456, %rd1388, %rd1455;
	xor.b64  	%rd1457, %rd1456, %rd1386;
	not.b64 	%rd1458, %rd1388;
	and.b64  	%rd1459, %rd1384, %rd1458;
	xor.b64  	%rd1460, %rd1459, %rd1387;
	not.b64 	%rd1461, %rd1384;
	and.b64  	%rd1462, %rd1385, %rd1461;
	xor.b64  	%rd1463, %rd1462, %rd1388;
	xor.b64  	%rd1464, %rd1391, %rd22;
	xor.b64  	%rd1465, %rd1406, %rd1464;
	xor.b64  	%rd1466, %rd1465, %rd1421;
	xor.b64  	%rd1467, %rd1466, %rd1436;
	xor.b64  	%rd1468, %rd1467, %rd1451;
	xor.b64  	%rd1469, %rd1409, %rd1394;
	xor.b64  	%rd1470, %rd1469, %rd1424;
	xor.b64  	%rd1471, %rd1470, %rd1439;
	xor.b64  	%rd1472, %rd1471, %rd1454;
	xor.b64  	%rd1473, %rd1412, %rd1397;
	xor.b64  	%rd1474, %rd1473, %rd1427;
	xor.b64  	%rd1475, %rd1474, %rd1442;
	xor.b64  	%rd1476, %rd1475, %rd1457;
	xor.b64  	%rd1477, %rd1415, %rd1400;
	xor.b64  	%rd1478, %rd1477, %rd1430;
	xor.b64  	%rd1479, %rd1478, %rd1445;
	xor.b64  	%rd1480, %rd1479, %rd1460;
	xor.b64  	%rd1481, %rd1418, %rd1403;
	xor.b64  	%rd1482, %rd1481, %rd1433;
	xor.b64  	%rd1483, %rd1482, %rd1448;
	xor.b64  	%rd1484, %rd1483, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd1472;
	}
	shf.l.wrap.b32 	%r891, %r890, %r889, 1;
	shf.l.wrap.b32 	%r892, %r889, %r890, 1;
	mov.b64 	%rd1485, {%r892, %r891};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1476;
	}
	shf.l.wrap.b32 	%r895, %r894, %r893, 1;
	shf.l.wrap.b32 	%r896, %r893, %r894, 1;
	mov.b64 	%rd1487, {%r896, %r895};
	xor.b64  	%rd1488, %rd1487, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd1480;
	}
	shf.l.wrap.b32 	%r899, %r898, %r897, 1;
	shf.l.wrap.b32 	%r900, %r897, %r898, 1;
	mov.b64 	%rd1489, {%r900, %r899};
	xor.b64  	%rd1490, %rd1489, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1484;
	}
	shf.l.wrap.b32 	%r903, %r902, %r901, 1;
	shf.l.wrap.b32 	%r904, %r901, %r902, 1;
	mov.b64 	%rd1491, {%r904, %r903};
	xor.b64  	%rd1492, %rd1491, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd1468;
	}
	shf.l.wrap.b32 	%r907, %r906, %r905, 1;
	shf.l.wrap.b32 	%r908, %r905, %r906, 1;
	mov.b64 	%rd1493, {%r908, %r907};
	xor.b64  	%rd1494, %rd1480, %rd1493;
	xor.b64  	%rd1495, %rd1486, %rd1464;
	xor.b64  	%rd1496, %rd1488, %rd1394;
	xor.b64  	%rd1497, %rd1490, %rd1397;
	xor.b64  	%rd1498, %rd1492, %rd1400;
	xor.b64  	%rd1499, %rd1494, %rd1403;
	xor.b64  	%rd1500, %rd1486, %rd1406;
	xor.b64  	%rd1501, %rd1488, %rd1409;
	xor.b64  	%rd1502, %rd1490, %rd1412;
	xor.b64  	%rd1503, %rd1492, %rd1415;
	xor.b64  	%rd1504, %rd1494, %rd1418;
	xor.b64  	%rd1505, %rd1486, %rd1421;
	xor.b64  	%rd1506, %rd1488, %rd1424;
	xor.b64  	%rd1507, %rd1490, %rd1427;
	xor.b64  	%rd1508, %rd1492, %rd1430;
	xor.b64  	%rd1509, %rd1494, %rd1433;
	xor.b64  	%rd1510, %rd1486, %rd1436;
	xor.b64  	%rd1511, %rd1488, %rd1439;
	xor.b64  	%rd1512, %rd1490, %rd1442;
	xor.b64  	%rd1513, %rd1492, %rd1445;
	xor.b64  	%rd1514, %rd1494, %rd1448;
	xor.b64  	%rd1515, %rd1486, %rd1451;
	xor.b64  	%rd1516, %rd1488, %rd1454;
	xor.b64  	%rd1517, %rd1490, %rd1457;
	xor.b64  	%rd1518, %rd1492, %rd1460;
	xor.b64  	%rd1519, %rd1494, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd1501;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 20;
	shf.r.wrap.b32 	%r912, %r909, %r910, 20;
	mov.b64 	%rd1520, {%r912, %r911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1507;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 21;
	shf.r.wrap.b32 	%r916, %r913, %r914, 21;
	mov.b64 	%rd1521, {%r916, %r915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1513;
	}
	shf.l.wrap.b32 	%r919, %r918, %r917, 21;
	shf.l.wrap.b32 	%r920, %r917, %r918, 21;
	mov.b64 	%rd1522, {%r920, %r919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd1519;
	}
	shf.l.wrap.b32 	%r923, %r922, %r921, 14;
	shf.l.wrap.b32 	%r924, %r921, %r922, 14;
	mov.b64 	%rd1523, {%r924, %r923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1498;
	}
	shf.l.wrap.b32 	%r927, %r926, %r925, 28;
	shf.l.wrap.b32 	%r928, %r925, %r926, 28;
	mov.b64 	%rd1524, {%r928, %r927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd1504;
	}
	shf.l.wrap.b32 	%r931, %r930, %r929, 20;
	shf.l.wrap.b32 	%r932, %r929, %r930, 20;
	mov.b64 	%rd1525, {%r932, %r931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r933}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1505;
	}
	shf.l.wrap.b32 	%r935, %r934, %r933, 3;
	shf.l.wrap.b32 	%r936, %r933, %r934, 3;
	mov.b64 	%rd1526, {%r936, %r935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd1511;
	}
	shf.r.wrap.b32 	%r939, %r938, %r937, 19;
	shf.r.wrap.b32 	%r940, %r937, %r938, 19;
	mov.b64 	%rd1527, {%r940, %r939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1517;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 3;
	shf.r.wrap.b32 	%r944, %r941, %r942, 3;
	mov.b64 	%rd1528, {%r944, %r943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1496;
	}
	shf.l.wrap.b32 	%r947, %r946, %r945, 1;
	shf.l.wrap.b32 	%r948, %r945, %r946, 1;
	mov.b64 	%rd1529, {%r948, %r947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1502;
	}
	shf.l.wrap.b32 	%r951, %r950, %r949, 6;
	shf.l.wrap.b32 	%r952, %r949, %r950, 6;
	mov.b64 	%rd1530, {%r952, %r951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1508;
	}
	shf.l.wrap.b32 	%r955, %r954, %r953, 25;
	shf.l.wrap.b32 	%r956, %r953, %r954, 25;
	mov.b64 	%rd1531, {%r956, %r955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1514;
	}
	shf.l.wrap.b32 	%r959, %r958, %r957, 8;
	shf.l.wrap.b32 	%r960, %r957, %r958, 8;
	mov.b64 	%rd1532, {%r960, %r959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1515;
	}
	shf.l.wrap.b32 	%r963, %r962, %r961, 18;
	shf.l.wrap.b32 	%r964, %r961, %r962, 18;
	mov.b64 	%rd1533, {%r964, %r963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd1499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd1499;
	}
	shf.l.wrap.b32 	%r967, %r966, %r965, 27;
	shf.l.wrap.b32 	%r968, %r965, %r966, 27;
	mov.b64 	%rd1534, {%r968, %r967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r970}, %rd1500;
	}
	shf.r.wrap.b32 	%r971, %r970, %r969, 28;
	shf.r.wrap.b32 	%r972, %r969, %r970, 28;
	mov.b64 	%rd1535, {%r972, %r971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1506;
	}
	shf.l.wrap.b32 	%r975, %r974, %r973, 10;
	shf.l.wrap.b32 	%r976, %r973, %r974, 10;
	mov.b64 	%rd1536, {%r976, %r975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd1512;
	}
	shf.l.wrap.b32 	%r979, %r978, %r977, 15;
	shf.l.wrap.b32 	%r980, %r977, %r978, 15;
	mov.b64 	%rd1537, {%r980, %r979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd1518;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 8;
	shf.r.wrap.b32 	%r984, %r981, %r982, 8;
	mov.b64 	%rd1538, {%r984, %r983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r985,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd1497;
	}
	shf.r.wrap.b32 	%r987, %r986, %r985, 2;
	shf.r.wrap.b32 	%r988, %r985, %r986, 2;
	mov.b64 	%rd1539, {%r988, %r987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd1503;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 9;
	shf.r.wrap.b32 	%r992, %r989, %r990, 9;
	mov.b64 	%rd1540, {%r992, %r991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd1509;
	}
	shf.r.wrap.b32 	%r995, %r994, %r993, 25;
	shf.r.wrap.b32 	%r996, %r993, %r994, 25;
	mov.b64 	%rd1541, {%r996, %r995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1510;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 23;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 23;
	mov.b64 	%rd1542, {%r1000, %r999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd1516;
	}
	shf.l.wrap.b32 	%r1003, %r1002, %r1001, 2;
	shf.l.wrap.b32 	%r1004, %r1001, %r1002, 2;
	mov.b64 	%rd1543, {%r1004, %r1003};
	not.b64 	%rd1544, %rd1520;
	and.b64  	%rd1545, %rd1521, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1495;
	not.b64 	%rd1547, %rd1521;
	and.b64  	%rd1548, %rd1522, %rd1547;
	xor.b64  	%rd1549, %rd1548, %rd1520;
	not.b64 	%rd1550, %rd1522;
	and.b64  	%rd1551, %rd1523, %rd1550;
	xor.b64  	%rd1552, %rd1551, %rd1521;
	not.b64 	%rd1553, %rd1523;
	and.b64  	%rd1554, %rd1495, %rd1553;
	xor.b64  	%rd1555, %rd1554, %rd1522;
	not.b64 	%rd1556, %rd1495;
	and.b64  	%rd1557, %rd1520, %rd1556;
	xor.b64  	%rd1558, %rd1557, %rd1523;
	not.b64 	%rd1559, %rd1525;
	and.b64  	%rd1560, %rd1526, %rd1559;
	xor.b64  	%rd1561, %rd1560, %rd1524;
	not.b64 	%rd1562, %rd1526;
	and.b64  	%rd1563, %rd1527, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1525;
	not.b64 	%rd1565, %rd1527;
	and.b64  	%rd1566, %rd1528, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1526;
	not.b64 	%rd1568, %rd1528;
	and.b64  	%rd1569, %rd1524, %rd1568;
	xor.b64  	%rd1570, %rd1569, %rd1527;
	not.b64 	%rd1571, %rd1524;
	and.b64  	%rd1572, %rd1525, %rd1571;
	xor.b64  	%rd1573, %rd1572, %rd1528;
	not.b64 	%rd1574, %rd1530;
	and.b64  	%rd1575, %rd1531, %rd1574;
	xor.b64  	%rd1576, %rd1575, %rd1529;
	not.b64 	%rd1577, %rd1531;
	and.b64  	%rd1578, %rd1532, %rd1577;
	xor.b64  	%rd1579, %rd1578, %rd1530;
	not.b64 	%rd1580, %rd1532;
	and.b64  	%rd1581, %rd1533, %rd1580;
	xor.b64  	%rd1582, %rd1581, %rd1531;
	not.b64 	%rd1583, %rd1533;
	and.b64  	%rd1584, %rd1529, %rd1583;
	xor.b64  	%rd1585, %rd1584, %rd1532;
	not.b64 	%rd1586, %rd1529;
	and.b64  	%rd1587, %rd1530, %rd1586;
	xor.b64  	%rd1588, %rd1587, %rd1533;
	not.b64 	%rd1589, %rd1535;
	and.b64  	%rd1590, %rd1536, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1534;
	not.b64 	%rd1592, %rd1536;
	and.b64  	%rd1593, %rd1537, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1535;
	not.b64 	%rd1595, %rd1537;
	and.b64  	%rd1596, %rd1538, %rd1595;
	xor.b64  	%rd1597, %rd1596, %rd1536;
	not.b64 	%rd1598, %rd1538;
	and.b64  	%rd1599, %rd1534, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1537;
	not.b64 	%rd1601, %rd1534;
	and.b64  	%rd1602, %rd1535, %rd1601;
	xor.b64  	%rd1603, %rd1602, %rd1538;
	not.b64 	%rd1604, %rd1540;
	and.b64  	%rd1605, %rd1541, %rd1604;
	xor.b64  	%rd1606, %rd1605, %rd1539;
	not.b64 	%rd1607, %rd1541;
	and.b64  	%rd1608, %rd1542, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1540;
	not.b64 	%rd1610, %rd1542;
	and.b64  	%rd1611, %rd1543, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1541;
	not.b64 	%rd1613, %rd1543;
	and.b64  	%rd1614, %rd1539, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1542;
	not.b64 	%rd1616, %rd1539;
	and.b64  	%rd1617, %rd1540, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1543;
	xor.b64  	%rd1619, %rd1546, %rd23;
	xor.b64  	%rd1620, %rd1561, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1576;
	xor.b64  	%rd1622, %rd1621, %rd1591;
	xor.b64  	%rd1623, %rd1622, %rd1606;
	xor.b64  	%rd1624, %rd1564, %rd1549;
	xor.b64  	%rd1625, %rd1624, %rd1579;
	xor.b64  	%rd1626, %rd1625, %rd1594;
	xor.b64  	%rd1627, %rd1626, %rd1609;
	xor.b64  	%rd1628, %rd1567, %rd1552;
	xor.b64  	%rd1629, %rd1628, %rd1582;
	xor.b64  	%rd1630, %rd1629, %rd1597;
	xor.b64  	%rd1631, %rd1630, %rd1612;
	xor.b64  	%rd1632, %rd1570, %rd1555;
	xor.b64  	%rd1633, %rd1632, %rd1585;
	xor.b64  	%rd1634, %rd1633, %rd1600;
	xor.b64  	%rd1635, %rd1634, %rd1615;
	xor.b64  	%rd1636, %rd1573, %rd1558;
	xor.b64  	%rd1637, %rd1636, %rd1588;
	xor.b64  	%rd1638, %rd1637, %rd1603;
	xor.b64  	%rd1639, %rd1638, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1627;
	}
	shf.l.wrap.b32 	%r1007, %r1006, %r1005, 1;
	shf.l.wrap.b32 	%r1008, %r1005, %r1006, 1;
	mov.b64 	%rd1640, {%r1008, %r1007};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd1631;
	}
	shf.l.wrap.b32 	%r1011, %r1010, %r1009, 1;
	shf.l.wrap.b32 	%r1012, %r1009, %r1010, 1;
	mov.b64 	%rd1642, {%r1012, %r1011};
	xor.b64  	%rd1643, %rd1642, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1635;
	}
	shf.l.wrap.b32 	%r1015, %r1014, %r1013, 1;
	shf.l.wrap.b32 	%r1016, %r1013, %r1014, 1;
	mov.b64 	%rd1644, {%r1016, %r1015};
	xor.b64  	%rd1645, %rd1644, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd1639;
	}
	shf.l.wrap.b32 	%r1019, %r1018, %r1017, 1;
	shf.l.wrap.b32 	%r1020, %r1017, %r1018, 1;
	mov.b64 	%rd1646, {%r1020, %r1019};
	xor.b64  	%rd1647, %rd1646, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd1623;
	}
	shf.l.wrap.b32 	%r1023, %r1022, %r1021, 1;
	shf.l.wrap.b32 	%r1024, %r1021, %r1022, 1;
	mov.b64 	%rd1648, {%r1024, %r1023};
	xor.b64  	%rd1649, %rd1635, %rd1648;
	xor.b64  	%rd1650, %rd1641, %rd1619;
	xor.b64  	%rd1651, %rd1643, %rd1549;
	xor.b64  	%rd1652, %rd1645, %rd1552;
	xor.b64  	%rd1653, %rd1647, %rd1555;
	xor.b64  	%rd1654, %rd1649, %rd1558;
	xor.b64  	%rd1655, %rd1641, %rd1561;
	xor.b64  	%rd1656, %rd1643, %rd1564;
	xor.b64  	%rd1657, %rd1645, %rd1567;
	xor.b64  	%rd1658, %rd1647, %rd1570;
	xor.b64  	%rd1659, %rd1649, %rd1573;
	xor.b64  	%rd1660, %rd1641, %rd1576;
	xor.b64  	%rd1661, %rd1643, %rd1579;
	xor.b64  	%rd1662, %rd1645, %rd1582;
	xor.b64  	%rd1663, %rd1647, %rd1585;
	xor.b64  	%rd1664, %rd1649, %rd1588;
	xor.b64  	%rd1665, %rd1641, %rd1591;
	xor.b64  	%rd1666, %rd1643, %rd1594;
	xor.b64  	%rd1667, %rd1645, %rd1597;
	xor.b64  	%rd1668, %rd1647, %rd1600;
	xor.b64  	%rd1669, %rd1649, %rd1603;
	xor.b64  	%rd1670, %rd1641, %rd1606;
	xor.b64  	%rd1671, %rd1643, %rd1609;
	xor.b64  	%rd1672, %rd1645, %rd1612;
	xor.b64  	%rd1673, %rd1647, %rd1615;
	xor.b64  	%rd1674, %rd1649, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1656;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 20;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 20;
	mov.b64 	%rd1675, {%r1028, %r1027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1662;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 21;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 21;
	mov.b64 	%rd1676, {%r1032, %r1031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd1668;
	}
	shf.l.wrap.b32 	%r1035, %r1034, %r1033, 21;
	shf.l.wrap.b32 	%r1036, %r1033, %r1034, 21;
	mov.b64 	%rd1677, {%r1036, %r1035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd1674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1674;
	}
	shf.l.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.l.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1678, {%r1040, %r1039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1042,%dummy}, %rd1653;
	}
	shf.l.wrap.b32 	%r1043, %r1042, %r1041, 28;
	shf.l.wrap.b32 	%r1044, %r1041, %r1042, 28;
	mov.b64 	%rd1679, {%r1044, %r1043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1659;
	}
	shf.l.wrap.b32 	%r1047, %r1046, %r1045, 20;
	shf.l.wrap.b32 	%r1048, %r1045, %r1046, 20;
	mov.b64 	%rd1680, {%r1048, %r1047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd1660;
	}
	shf.l.wrap.b32 	%r1051, %r1050, %r1049, 3;
	shf.l.wrap.b32 	%r1052, %r1049, %r1050, 3;
	mov.b64 	%rd1681, {%r1052, %r1051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1666;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 19;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 19;
	mov.b64 	%rd1682, {%r1056, %r1055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd1672;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 3;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 3;
	mov.b64 	%rd1683, {%r1060, %r1059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1651;
	}
	shf.l.wrap.b32 	%r1063, %r1062, %r1061, 1;
	shf.l.wrap.b32 	%r1064, %r1061, %r1062, 1;
	mov.b64 	%rd1684, {%r1064, %r1063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1657;
	}
	shf.l.wrap.b32 	%r1067, %r1066, %r1065, 6;
	shf.l.wrap.b32 	%r1068, %r1065, %r1066, 6;
	mov.b64 	%rd1685, {%r1068, %r1067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1663;
	}
	shf.l.wrap.b32 	%r1071, %r1070, %r1069, 25;
	shf.l.wrap.b32 	%r1072, %r1069, %r1070, 25;
	mov.b64 	%rd1686, {%r1072, %r1071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd1669;
	}
	shf.l.wrap.b32 	%r1075, %r1074, %r1073, 8;
	shf.l.wrap.b32 	%r1076, %r1073, %r1074, 8;
	mov.b64 	%rd1687, {%r1076, %r1075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd1670;
	}
	shf.l.wrap.b32 	%r1079, %r1078, %r1077, 18;
	shf.l.wrap.b32 	%r1080, %r1077, %r1078, 18;
	mov.b64 	%rd1688, {%r1080, %r1079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd1654;
	}
	shf.l.wrap.b32 	%r1083, %r1082, %r1081, 27;
	shf.l.wrap.b32 	%r1084, %r1081, %r1082, 27;
	mov.b64 	%rd1689, {%r1084, %r1083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1655;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 28;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 28;
	mov.b64 	%rd1690, {%r1088, %r1087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1661;
	}
	shf.l.wrap.b32 	%r1091, %r1090, %r1089, 10;
	shf.l.wrap.b32 	%r1092, %r1089, %r1090, 10;
	mov.b64 	%rd1691, {%r1092, %r1091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1094,%dummy}, %rd1667;
	}
	shf.l.wrap.b32 	%r1095, %r1094, %r1093, 15;
	shf.l.wrap.b32 	%r1096, %r1093, %r1094, 15;
	mov.b64 	%rd1692, {%r1096, %r1095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd1673;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 8;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 8;
	mov.b64 	%rd1693, {%r1100, %r1099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1652;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 2;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 2;
	mov.b64 	%rd1694, {%r1104, %r1103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1658;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 9;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 9;
	mov.b64 	%rd1695, {%r1108, %r1107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1664;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 25;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 25;
	mov.b64 	%rd1696, {%r1112, %r1111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1665;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 23;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 23;
	mov.b64 	%rd1697, {%r1116, %r1115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1671;
	}
	shf.l.wrap.b32 	%r1119, %r1118, %r1117, 2;
	shf.l.wrap.b32 	%r1120, %r1117, %r1118, 2;
	mov.b64 	%rd1698, {%r1120, %r1119};
	not.b64 	%rd1699, %rd1675;
	and.b64  	%rd1700, %rd1676, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1650;
	not.b64 	%rd1702, %rd1676;
	and.b64  	%rd1703, %rd1677, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1675;
	not.b64 	%rd1705, %rd1677;
	and.b64  	%rd1706, %rd1678, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1676;
	not.b64 	%rd1708, %rd1678;
	and.b64  	%rd1709, %rd1650, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1677;
	not.b64 	%rd1711, %rd1650;
	and.b64  	%rd1712, %rd1675, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1678;
	not.b64 	%rd1714, %rd1680;
	and.b64  	%rd1715, %rd1681, %rd1714;
	xor.b64  	%rd1716, %rd1715, %rd1679;
	not.b64 	%rd1717, %rd1681;
	and.b64  	%rd1718, %rd1682, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1680;
	not.b64 	%rd1720, %rd1682;
	and.b64  	%rd1721, %rd1683, %rd1720;
	xor.b64  	%rd1722, %rd1721, %rd1681;
	not.b64 	%rd1723, %rd1683;
	and.b64  	%rd1724, %rd1679, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1682;
	not.b64 	%rd1726, %rd1679;
	and.b64  	%rd1727, %rd1680, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1683;
	not.b64 	%rd1729, %rd1685;
	and.b64  	%rd1730, %rd1686, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1684;
	not.b64 	%rd1732, %rd1686;
	and.b64  	%rd1733, %rd1687, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1685;
	not.b64 	%rd1735, %rd1687;
	and.b64  	%rd1736, %rd1688, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1686;
	not.b64 	%rd1738, %rd1688;
	and.b64  	%rd1739, %rd1684, %rd1738;
	xor.b64  	%rd1740, %rd1739, %rd1687;
	not.b64 	%rd1741, %rd1684;
	and.b64  	%rd1742, %rd1685, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1688;
	not.b64 	%rd1744, %rd1690;
	and.b64  	%rd1745, %rd1691, %rd1744;
	xor.b64  	%rd1746, %rd1745, %rd1689;
	not.b64 	%rd1747, %rd1691;
	and.b64  	%rd1748, %rd1692, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1690;
	not.b64 	%rd1750, %rd1692;
	and.b64  	%rd1751, %rd1693, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1691;
	not.b64 	%rd1753, %rd1693;
	and.b64  	%rd1754, %rd1689, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1692;
	not.b64 	%rd1756, %rd1689;
	and.b64  	%rd1757, %rd1690, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd1693;
	not.b64 	%rd1759, %rd1695;
	and.b64  	%rd1760, %rd1696, %rd1759;
	xor.b64  	%rd1761, %rd1760, %rd1694;
	not.b64 	%rd1762, %rd1696;
	and.b64  	%rd1763, %rd1697, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1695;
	not.b64 	%rd1765, %rd1697;
	and.b64  	%rd1766, %rd1698, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1696;
	not.b64 	%rd1768, %rd1698;
	and.b64  	%rd1769, %rd1694, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1697;
	not.b64 	%rd1771, %rd1694;
	and.b64  	%rd1772, %rd1695, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1698;
	xor.b64  	%rd1774, %rd1701, %rd24;
	xor.b64  	%rd1775, %rd1716, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1731;
	xor.b64  	%rd1777, %rd1776, %rd1746;
	xor.b64  	%rd1778, %rd1777, %rd1761;
	xor.b64  	%rd1779, %rd1719, %rd1704;
	xor.b64  	%rd1780, %rd1779, %rd1734;
	xor.b64  	%rd1781, %rd1780, %rd1749;
	xor.b64  	%rd1782, %rd1781, %rd1764;
	xor.b64  	%rd1783, %rd1722, %rd1707;
	xor.b64  	%rd1784, %rd1783, %rd1737;
	xor.b64  	%rd1785, %rd1784, %rd1752;
	xor.b64  	%rd1786, %rd1785, %rd1767;
	xor.b64  	%rd1787, %rd1725, %rd1710;
	xor.b64  	%rd1788, %rd1787, %rd1740;
	xor.b64  	%rd1789, %rd1788, %rd1755;
	xor.b64  	%rd1790, %rd1789, %rd1770;
	xor.b64  	%rd1791, %rd1728, %rd1713;
	xor.b64  	%rd1792, %rd1791, %rd1743;
	xor.b64  	%rd1793, %rd1792, %rd1758;
	xor.b64  	%rd1794, %rd1793, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd1782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd1782;
	}
	shf.l.wrap.b32 	%r1123, %r1122, %r1121, 1;
	shf.l.wrap.b32 	%r1124, %r1121, %r1122, 1;
	mov.b64 	%rd1795, {%r1124, %r1123};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1125}, %rd1786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd1786;
	}
	shf.l.wrap.b32 	%r1127, %r1126, %r1125, 1;
	shf.l.wrap.b32 	%r1128, %r1125, %r1126, 1;
	mov.b64 	%rd1797, {%r1128, %r1127};
	xor.b64  	%rd1798, %rd1797, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1790;
	}
	shf.l.wrap.b32 	%r1131, %r1130, %r1129, 1;
	shf.l.wrap.b32 	%r1132, %r1129, %r1130, 1;
	mov.b64 	%rd1799, {%r1132, %r1131};
	xor.b64  	%rd1800, %rd1799, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1133}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd1794;
	}
	shf.l.wrap.b32 	%r1135, %r1134, %r1133, 1;
	shf.l.wrap.b32 	%r1136, %r1133, %r1134, 1;
	mov.b64 	%rd1801, {%r1136, %r1135};
	xor.b64  	%rd1802, %rd1801, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1778;
	}
	shf.l.wrap.b32 	%r1139, %r1138, %r1137, 1;
	shf.l.wrap.b32 	%r1140, %r1137, %r1138, 1;
	mov.b64 	%rd1803, {%r1140, %r1139};
	xor.b64  	%rd1804, %rd1790, %rd1803;
	xor.b64  	%rd1805, %rd1796, %rd1774;
	xor.b64  	%rd1806, %rd1798, %rd1704;
	xor.b64  	%rd1807, %rd1800, %rd1707;
	xor.b64  	%rd1808, %rd1802, %rd1710;
	xor.b64  	%rd1809, %rd1804, %rd1713;
	xor.b64  	%rd1810, %rd1796, %rd1716;
	xor.b64  	%rd1811, %rd1798, %rd1719;
	xor.b64  	%rd1812, %rd1800, %rd1722;
	xor.b64  	%rd1813, %rd1802, %rd1725;
	xor.b64  	%rd1814, %rd1804, %rd1728;
	xor.b64  	%rd1815, %rd1796, %rd1731;
	xor.b64  	%rd1816, %rd1798, %rd1734;
	xor.b64  	%rd1817, %rd1800, %rd1737;
	xor.b64  	%rd1818, %rd1802, %rd1740;
	xor.b64  	%rd1819, %rd1804, %rd1743;
	xor.b64  	%rd1820, %rd1796, %rd1746;
	xor.b64  	%rd1821, %rd1798, %rd1749;
	xor.b64  	%rd1822, %rd1800, %rd1752;
	xor.b64  	%rd1823, %rd1802, %rd1755;
	xor.b64  	%rd1824, %rd1804, %rd1758;
	xor.b64  	%rd1825, %rd1796, %rd1761;
	xor.b64  	%rd1826, %rd1798, %rd1764;
	xor.b64  	%rd1827, %rd1800, %rd1767;
	xor.b64  	%rd1828, %rd1802, %rd1770;
	xor.b64  	%rd1829, %rd1804, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd1811;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 20;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 20;
	mov.b64 	%rd1830, {%r1144, %r1143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd1817;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 21;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 21;
	mov.b64 	%rd1831, {%r1148, %r1147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd1823;
	}
	shf.l.wrap.b32 	%r1151, %r1150, %r1149, 21;
	shf.l.wrap.b32 	%r1152, %r1149, %r1150, 21;
	mov.b64 	%rd1832, {%r1152, %r1151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd1829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd1829;
	}
	shf.l.wrap.b32 	%r1155, %r1154, %r1153, 14;
	shf.l.wrap.b32 	%r1156, %r1153, %r1154, 14;
	mov.b64 	%rd1833, {%r1156, %r1155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1808;
	}
	shf.l.wrap.b32 	%r1159, %r1158, %r1157, 28;
	shf.l.wrap.b32 	%r1160, %r1157, %r1158, 28;
	mov.b64 	%rd1834, {%r1160, %r1159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd1814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1814;
	}
	shf.l.wrap.b32 	%r1163, %r1162, %r1161, 20;
	shf.l.wrap.b32 	%r1164, %r1161, %r1162, 20;
	mov.b64 	%rd1835, {%r1164, %r1163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd1815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd1815;
	}
	shf.l.wrap.b32 	%r1167, %r1166, %r1165, 3;
	shf.l.wrap.b32 	%r1168, %r1165, %r1166, 3;
	mov.b64 	%rd1836, {%r1168, %r1167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd1821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd1821;
	}
	shf.r.wrap.b32 	%r1171, %r1170, %r1169, 19;
	shf.r.wrap.b32 	%r1172, %r1169, %r1170, 19;
	mov.b64 	%rd1837, {%r1172, %r1171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1827;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 3;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 3;
	mov.b64 	%rd1838, {%r1176, %r1175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1806;
	}
	shf.l.wrap.b32 	%r1179, %r1178, %r1177, 1;
	shf.l.wrap.b32 	%r1180, %r1177, %r1178, 1;
	mov.b64 	%rd1839, {%r1180, %r1179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd1812;
	}
	shf.l.wrap.b32 	%r1183, %r1182, %r1181, 6;
	shf.l.wrap.b32 	%r1184, %r1181, %r1182, 6;
	mov.b64 	%rd1840, {%r1184, %r1183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1185}, %rd1818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd1818;
	}
	shf.l.wrap.b32 	%r1187, %r1186, %r1185, 25;
	shf.l.wrap.b32 	%r1188, %r1185, %r1186, 25;
	mov.b64 	%rd1841, {%r1188, %r1187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd1824;
	}
	shf.l.wrap.b32 	%r1191, %r1190, %r1189, 8;
	shf.l.wrap.b32 	%r1192, %r1189, %r1190, 8;
	mov.b64 	%rd1842, {%r1192, %r1191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd1825;
	}
	shf.l.wrap.b32 	%r1195, %r1194, %r1193, 18;
	shf.l.wrap.b32 	%r1196, %r1193, %r1194, 18;
	mov.b64 	%rd1843, {%r1196, %r1195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd1809;
	}
	shf.l.wrap.b32 	%r1199, %r1198, %r1197, 27;
	shf.l.wrap.b32 	%r1200, %r1197, %r1198, 27;
	mov.b64 	%rd1844, {%r1200, %r1199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1202}, %rd1810;
	}
	shf.r.wrap.b32 	%r1203, %r1202, %r1201, 28;
	shf.r.wrap.b32 	%r1204, %r1201, %r1202, 28;
	mov.b64 	%rd1845, {%r1204, %r1203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1816;
	}
	shf.l.wrap.b32 	%r1207, %r1206, %r1205, 10;
	shf.l.wrap.b32 	%r1208, %r1205, %r1206, 10;
	mov.b64 	%rd1846, {%r1208, %r1207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd1822;
	}
	shf.l.wrap.b32 	%r1211, %r1210, %r1209, 15;
	shf.l.wrap.b32 	%r1212, %r1209, %r1210, 15;
	mov.b64 	%rd1847, {%r1212, %r1211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1828;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 8;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 8;
	mov.b64 	%rd1848, {%r1216, %r1215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd1807;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 2;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 2;
	mov.b64 	%rd1849, {%r1220, %r1219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1813;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 9;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 9;
	mov.b64 	%rd1850, {%r1224, %r1223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1819;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 25;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 25;
	mov.b64 	%rd1851, {%r1228, %r1227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1820;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 23;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 23;
	mov.b64 	%rd1852, {%r1232, %r1231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd1826;
	}
	shf.l.wrap.b32 	%r1235, %r1234, %r1233, 2;
	shf.l.wrap.b32 	%r1236, %r1233, %r1234, 2;
	mov.b64 	%rd1853, {%r1236, %r1235};
	not.b64 	%rd1854, %rd1830;
	and.b64  	%rd1855, %rd1831, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1805;
	not.b64 	%rd1857, %rd1831;
	and.b64  	%rd1858, %rd1832, %rd1857;
	xor.b64  	%rd1859, %rd1858, %rd1830;
	not.b64 	%rd1860, %rd1832;
	and.b64  	%rd1861, %rd1833, %rd1860;
	xor.b64  	%rd1862, %rd1861, %rd1831;
	not.b64 	%rd1863, %rd1833;
	and.b64  	%rd1864, %rd1805, %rd1863;
	xor.b64  	%rd1865, %rd1864, %rd1832;
	not.b64 	%rd1866, %rd1805;
	and.b64  	%rd1867, %rd1830, %rd1866;
	xor.b64  	%rd1868, %rd1867, %rd1833;
	not.b64 	%rd1869, %rd1835;
	and.b64  	%rd1870, %rd1836, %rd1869;
	xor.b64  	%rd1871, %rd1870, %rd1834;
	not.b64 	%rd1872, %rd1836;
	and.b64  	%rd1873, %rd1837, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1835;
	not.b64 	%rd1875, %rd1837;
	and.b64  	%rd1876, %rd1838, %rd1875;
	xor.b64  	%rd1877, %rd1876, %rd1836;
	not.b64 	%rd1878, %rd1838;
	and.b64  	%rd1879, %rd1834, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1837;
	not.b64 	%rd1881, %rd1834;
	and.b64  	%rd1882, %rd1835, %rd1881;
	xor.b64  	%rd1883, %rd1882, %rd1838;
	not.b64 	%rd1884, %rd1840;
	and.b64  	%rd1885, %rd1841, %rd1884;
	xor.b64  	%rd1886, %rd1885, %rd1839;
	not.b64 	%rd1887, %rd1841;
	and.b64  	%rd1888, %rd1842, %rd1887;
	xor.b64  	%rd1889, %rd1888, %rd1840;
	not.b64 	%rd1890, %rd1842;
	and.b64  	%rd1891, %rd1843, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1841;
	not.b64 	%rd1893, %rd1843;
	and.b64  	%rd1894, %rd1839, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1842;
	not.b64 	%rd1896, %rd1839;
	and.b64  	%rd1897, %rd1840, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1843;
	not.b64 	%rd1899, %rd1845;
	and.b64  	%rd1900, %rd1846, %rd1899;
	xor.b64  	%rd1901, %rd1900, %rd1844;
	not.b64 	%rd1902, %rd1846;
	and.b64  	%rd1903, %rd1847, %rd1902;
	xor.b64  	%rd1904, %rd1903, %rd1845;
	not.b64 	%rd1905, %rd1847;
	and.b64  	%rd1906, %rd1848, %rd1905;
	xor.b64  	%rd1907, %rd1906, %rd1846;
	not.b64 	%rd1908, %rd1848;
	and.b64  	%rd1909, %rd1844, %rd1908;
	xor.b64  	%rd1910, %rd1909, %rd1847;
	not.b64 	%rd1911, %rd1844;
	and.b64  	%rd1912, %rd1845, %rd1911;
	xor.b64  	%rd1913, %rd1912, %rd1848;
	not.b64 	%rd1914, %rd1850;
	and.b64  	%rd1915, %rd1851, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1849;
	not.b64 	%rd1917, %rd1851;
	and.b64  	%rd1918, %rd1852, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1850;
	not.b64 	%rd1920, %rd1852;
	and.b64  	%rd1921, %rd1853, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1851;
	not.b64 	%rd1923, %rd1853;
	and.b64  	%rd1924, %rd1849, %rd1923;
	xor.b64  	%rd1925, %rd1924, %rd1852;
	not.b64 	%rd1926, %rd1849;
	and.b64  	%rd1927, %rd1850, %rd1926;
	xor.b64  	%rd1928, %rd1927, %rd1853;
	xor.b64  	%rd1929, %rd1856, %rd25;
	xor.b64  	%rd1930, %rd1871, %rd1929;
	xor.b64  	%rd1931, %rd1930, %rd1886;
	xor.b64  	%rd1932, %rd1931, %rd1901;
	xor.b64  	%rd1933, %rd1932, %rd1916;
	xor.b64  	%rd1934, %rd1874, %rd1859;
	xor.b64  	%rd1935, %rd1934, %rd1889;
	xor.b64  	%rd1936, %rd1935, %rd1904;
	xor.b64  	%rd1937, %rd1936, %rd1919;
	xor.b64  	%rd1938, %rd1877, %rd1862;
	xor.b64  	%rd1939, %rd1938, %rd1892;
	xor.b64  	%rd1940, %rd1939, %rd1907;
	xor.b64  	%rd1941, %rd1940, %rd1922;
	xor.b64  	%rd1942, %rd1880, %rd1865;
	xor.b64  	%rd1943, %rd1942, %rd1895;
	xor.b64  	%rd1944, %rd1943, %rd1910;
	xor.b64  	%rd1945, %rd1944, %rd1925;
	xor.b64  	%rd1946, %rd1883, %rd1868;
	xor.b64  	%rd1947, %rd1946, %rd1898;
	xor.b64  	%rd1948, %rd1947, %rd1913;
	xor.b64  	%rd1949, %rd1948, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd1937;
	}
	shf.l.wrap.b32 	%r1239, %r1238, %r1237, 1;
	shf.l.wrap.b32 	%r1240, %r1237, %r1238, 1;
	mov.b64 	%rd1950, {%r1240, %r1239};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd1941;
	}
	shf.l.wrap.b32 	%r1243, %r1242, %r1241, 1;
	shf.l.wrap.b32 	%r1244, %r1241, %r1242, 1;
	mov.b64 	%rd1952, {%r1244, %r1243};
	xor.b64  	%rd1953, %rd1952, %rd1933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1245}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1945;
	}
	shf.l.wrap.b32 	%r1247, %r1246, %r1245, 1;
	shf.l.wrap.b32 	%r1248, %r1245, %r1246, 1;
	mov.b64 	%rd1954, {%r1248, %r1247};
	xor.b64  	%rd1955, %rd1954, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd1949;
	}
	shf.l.wrap.b32 	%r1251, %r1250, %r1249, 1;
	shf.l.wrap.b32 	%r1252, %r1249, %r1250, 1;
	mov.b64 	%rd1956, {%r1252, %r1251};
	xor.b64  	%rd1957, %rd1956, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd1933;
	}
	shf.l.wrap.b32 	%r1255, %r1254, %r1253, 1;
	shf.l.wrap.b32 	%r1256, %r1253, %r1254, 1;
	mov.b64 	%rd1958, {%r1256, %r1255};
	xor.b64  	%rd1959, %rd1945, %rd1958;
	xor.b64  	%rd1960, %rd1951, %rd1929;
	xor.b64  	%rd1961, %rd1953, %rd1859;
	xor.b64  	%rd1962, %rd1955, %rd1862;
	xor.b64  	%rd1963, %rd1957, %rd1865;
	xor.b64  	%rd1964, %rd1959, %rd1868;
	xor.b64  	%rd1965, %rd1951, %rd1871;
	xor.b64  	%rd1966, %rd1953, %rd1874;
	xor.b64  	%rd1967, %rd1955, %rd1877;
	xor.b64  	%rd1968, %rd1957, %rd1880;
	xor.b64  	%rd1969, %rd1959, %rd1883;
	xor.b64  	%rd1970, %rd1951, %rd1886;
	xor.b64  	%rd1971, %rd1953, %rd1889;
	xor.b64  	%rd1972, %rd1955, %rd1892;
	xor.b64  	%rd1973, %rd1957, %rd1895;
	xor.b64  	%rd1974, %rd1959, %rd1898;
	xor.b64  	%rd1975, %rd1951, %rd1901;
	xor.b64  	%rd1976, %rd1953, %rd1904;
	xor.b64  	%rd1977, %rd1955, %rd1907;
	xor.b64  	%rd1978, %rd1957, %rd1910;
	xor.b64  	%rd1979, %rd1959, %rd1913;
	xor.b64  	%rd1980, %rd1951, %rd1916;
	xor.b64  	%rd1981, %rd1953, %rd1919;
	xor.b64  	%rd1982, %rd1955, %rd1922;
	xor.b64  	%rd1983, %rd1957, %rd1925;
	xor.b64  	%rd1984, %rd1959, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd1966;
	}
	shf.r.wrap.b32 	%r1259, %r1258, %r1257, 20;
	shf.r.wrap.b32 	%r1260, %r1257, %r1258, 20;
	mov.b64 	%rd1985, {%r1260, %r1259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1972;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 21;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 21;
	mov.b64 	%rd1986, {%r1264, %r1263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1265}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1978;
	}
	shf.l.wrap.b32 	%r1267, %r1266, %r1265, 21;
	shf.l.wrap.b32 	%r1268, %r1265, %r1266, 21;
	mov.b64 	%rd1987, {%r1268, %r1267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd1984;
	}
	shf.l.wrap.b32 	%r1271, %r1270, %r1269, 14;
	shf.l.wrap.b32 	%r1272, %r1269, %r1270, 14;
	mov.b64 	%rd1988, {%r1272, %r1271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd1963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1963;
	}
	shf.l.wrap.b32 	%r1275, %r1274, %r1273, 28;
	shf.l.wrap.b32 	%r1276, %r1273, %r1274, 28;
	mov.b64 	%rd1989, {%r1276, %r1275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1969;
	}
	shf.l.wrap.b32 	%r1279, %r1278, %r1277, 20;
	shf.l.wrap.b32 	%r1280, %r1277, %r1278, 20;
	mov.b64 	%rd1990, {%r1280, %r1279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1281}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd1970;
	}
	shf.l.wrap.b32 	%r1283, %r1282, %r1281, 3;
	shf.l.wrap.b32 	%r1284, %r1281, %r1282, 3;
	mov.b64 	%rd1991, {%r1284, %r1283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1976;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 19;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 19;
	mov.b64 	%rd1992, {%r1288, %r1287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd1982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1290}, %rd1982;
	}
	shf.r.wrap.b32 	%r1291, %r1290, %r1289, 3;
	shf.r.wrap.b32 	%r1292, %r1289, %r1290, 3;
	mov.b64 	%rd1993, {%r1292, %r1291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd1961;
	}
	shf.l.wrap.b32 	%r1295, %r1294, %r1293, 1;
	shf.l.wrap.b32 	%r1296, %r1293, %r1294, 1;
	mov.b64 	%rd1994, {%r1296, %r1295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1297}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd1967;
	}
	shf.l.wrap.b32 	%r1299, %r1298, %r1297, 6;
	shf.l.wrap.b32 	%r1300, %r1297, %r1298, 6;
	mov.b64 	%rd1995, {%r1300, %r1299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1973;
	}
	shf.l.wrap.b32 	%r1303, %r1302, %r1301, 25;
	shf.l.wrap.b32 	%r1304, %r1301, %r1302, 25;
	mov.b64 	%rd1996, {%r1304, %r1303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd1979;
	}
	shf.l.wrap.b32 	%r1307, %r1306, %r1305, 8;
	shf.l.wrap.b32 	%r1308, %r1305, %r1306, 8;
	mov.b64 	%rd1997, {%r1308, %r1307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1980;
	}
	shf.l.wrap.b32 	%r1311, %r1310, %r1309, 18;
	shf.l.wrap.b32 	%r1312, %r1309, %r1310, 18;
	mov.b64 	%rd1998, {%r1312, %r1311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1314,%dummy}, %rd1964;
	}
	shf.l.wrap.b32 	%r1315, %r1314, %r1313, 27;
	shf.l.wrap.b32 	%r1316, %r1313, %r1314, 27;
	mov.b64 	%rd1999, {%r1316, %r1315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1965;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd2000, {%r1320, %r1319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1321}, %rd1971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd1971;
	}
	shf.l.wrap.b32 	%r1323, %r1322, %r1321, 10;
	shf.l.wrap.b32 	%r1324, %r1321, %r1322, 10;
	mov.b64 	%rd2001, {%r1324, %r1323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd1977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1977;
	}
	shf.l.wrap.b32 	%r1327, %r1326, %r1325, 15;
	shf.l.wrap.b32 	%r1328, %r1325, %r1326, 15;
	mov.b64 	%rd2002, {%r1328, %r1327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd1983;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 8;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 8;
	mov.b64 	%rd2003, {%r1332, %r1331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd1962;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 2;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 2;
	mov.b64 	%rd2004, {%r1336, %r1335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd1968;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 9;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 9;
	mov.b64 	%rd2005, {%r1340, %r1339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1974;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 25;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 25;
	mov.b64 	%rd2006, {%r1344, %r1343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd1975;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 23;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 23;
	mov.b64 	%rd2007, {%r1348, %r1347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1981;
	}
	shf.l.wrap.b32 	%r1351, %r1350, %r1349, 2;
	shf.l.wrap.b32 	%r1352, %r1349, %r1350, 2;
	mov.b64 	%rd2008, {%r1352, %r1351};
	not.b64 	%rd2009, %rd1985;
	and.b64  	%rd2010, %rd1986, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd1960;
	not.b64 	%rd2012, %rd1986;
	and.b64  	%rd2013, %rd1987, %rd2012;
	xor.b64  	%rd2014, %rd2013, %rd1985;
	not.b64 	%rd2015, %rd1987;
	and.b64  	%rd2016, %rd1988, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd1986;
	not.b64 	%rd2018, %rd1988;
	and.b64  	%rd2019, %rd1960, %rd2018;
	xor.b64  	%rd2020, %rd2019, %rd1987;
	not.b64 	%rd2021, %rd1960;
	and.b64  	%rd2022, %rd1985, %rd2021;
	xor.b64  	%rd2023, %rd2022, %rd1988;
	not.b64 	%rd2024, %rd1990;
	and.b64  	%rd2025, %rd1991, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd1989;
	not.b64 	%rd2027, %rd1991;
	and.b64  	%rd2028, %rd1992, %rd2027;
	xor.b64  	%rd2029, %rd2028, %rd1990;
	not.b64 	%rd2030, %rd1992;
	and.b64  	%rd2031, %rd1993, %rd2030;
	xor.b64  	%rd2032, %rd2031, %rd1991;
	not.b64 	%rd2033, %rd1993;
	and.b64  	%rd2034, %rd1989, %rd2033;
	xor.b64  	%rd2035, %rd2034, %rd1992;
	not.b64 	%rd2036, %rd1989;
	and.b64  	%rd2037, %rd1990, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1993;
	not.b64 	%rd2039, %rd1995;
	and.b64  	%rd2040, %rd1996, %rd2039;
	xor.b64  	%rd2041, %rd2040, %rd1994;
	not.b64 	%rd2042, %rd1996;
	and.b64  	%rd2043, %rd1997, %rd2042;
	xor.b64  	%rd2044, %rd2043, %rd1995;
	not.b64 	%rd2045, %rd1997;
	and.b64  	%rd2046, %rd1998, %rd2045;
	xor.b64  	%rd2047, %rd2046, %rd1996;
	not.b64 	%rd2048, %rd1998;
	and.b64  	%rd2049, %rd1994, %rd2048;
	xor.b64  	%rd2050, %rd2049, %rd1997;
	not.b64 	%rd2051, %rd1994;
	and.b64  	%rd2052, %rd1995, %rd2051;
	xor.b64  	%rd2053, %rd2052, %rd1998;
	not.b64 	%rd2054, %rd2000;
	and.b64  	%rd2055, %rd2001, %rd2054;
	xor.b64  	%rd2056, %rd2055, %rd1999;
	not.b64 	%rd2057, %rd2001;
	and.b64  	%rd2058, %rd2002, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd2000;
	not.b64 	%rd2060, %rd2002;
	and.b64  	%rd2061, %rd2003, %rd2060;
	xor.b64  	%rd2062, %rd2061, %rd2001;
	not.b64 	%rd2063, %rd2003;
	and.b64  	%rd2064, %rd1999, %rd2063;
	xor.b64  	%rd2065, %rd2064, %rd2002;
	not.b64 	%rd2066, %rd1999;
	and.b64  	%rd2067, %rd2000, %rd2066;
	xor.b64  	%rd2068, %rd2067, %rd2003;
	not.b64 	%rd2069, %rd2005;
	and.b64  	%rd2070, %rd2006, %rd2069;
	xor.b64  	%rd2071, %rd2070, %rd2004;
	not.b64 	%rd2072, %rd2006;
	and.b64  	%rd2073, %rd2007, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2005;
	not.b64 	%rd2075, %rd2007;
	and.b64  	%rd2076, %rd2008, %rd2075;
	xor.b64  	%rd2077, %rd2076, %rd2006;
	not.b64 	%rd2078, %rd2008;
	and.b64  	%rd2079, %rd2004, %rd2078;
	xor.b64  	%rd2080, %rd2079, %rd2007;
	not.b64 	%rd2081, %rd2004;
	and.b64  	%rd2082, %rd2005, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2008;
	xor.b64  	%rd2084, %rd2011, %rd26;
	xor.b64  	%rd2085, %rd2026, %rd2084;
	xor.b64  	%rd2086, %rd2085, %rd2041;
	xor.b64  	%rd2087, %rd2086, %rd2056;
	xor.b64  	%rd2088, %rd2087, %rd2071;
	xor.b64  	%rd2089, %rd2029, %rd2014;
	xor.b64  	%rd2090, %rd2089, %rd2044;
	xor.b64  	%rd2091, %rd2090, %rd2059;
	xor.b64  	%rd2092, %rd2091, %rd2074;
	xor.b64  	%rd2093, %rd2032, %rd2017;
	xor.b64  	%rd2094, %rd2093, %rd2047;
	xor.b64  	%rd2095, %rd2094, %rd2062;
	xor.b64  	%rd2096, %rd2095, %rd2077;
	xor.b64  	%rd2097, %rd2035, %rd2020;
	xor.b64  	%rd2098, %rd2097, %rd2050;
	xor.b64  	%rd2099, %rd2098, %rd2065;
	xor.b64  	%rd2100, %rd2099, %rd2080;
	xor.b64  	%rd2101, %rd2038, %rd2023;
	xor.b64  	%rd2102, %rd2101, %rd2053;
	xor.b64  	%rd2103, %rd2102, %rd2068;
	xor.b64  	%rd2104, %rd2103, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1354,%dummy}, %rd2092;
	}
	shf.l.wrap.b32 	%r1355, %r1354, %r1353, 1;
	shf.l.wrap.b32 	%r1356, %r1353, %r1354, 1;
	mov.b64 	%rd2105, {%r1356, %r1355};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd2096;
	}
	shf.l.wrap.b32 	%r1359, %r1358, %r1357, 1;
	shf.l.wrap.b32 	%r1360, %r1357, %r1358, 1;
	mov.b64 	%rd2107, {%r1360, %r1359};
	xor.b64  	%rd2108, %rd2107, %rd2088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd2100;
	}
	shf.l.wrap.b32 	%r1363, %r1362, %r1361, 1;
	shf.l.wrap.b32 	%r1364, %r1361, %r1362, 1;
	mov.b64 	%rd2109, {%r1364, %r1363};
	xor.b64  	%rd2110, %rd2109, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd2104;
	}
	shf.l.wrap.b32 	%r1367, %r1366, %r1365, 1;
	shf.l.wrap.b32 	%r1368, %r1365, %r1366, 1;
	mov.b64 	%rd2111, {%r1368, %r1367};
	xor.b64  	%rd2112, %rd2111, %rd2096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd2088;
	}
	shf.l.wrap.b32 	%r1371, %r1370, %r1369, 1;
	shf.l.wrap.b32 	%r1372, %r1369, %r1370, 1;
	mov.b64 	%rd2113, {%r1372, %r1371};
	xor.b64  	%rd2114, %rd2100, %rd2113;
	xor.b64  	%rd2115, %rd2106, %rd2084;
	xor.b64  	%rd2116, %rd2108, %rd2014;
	xor.b64  	%rd2117, %rd2110, %rd2017;
	xor.b64  	%rd2118, %rd2112, %rd2020;
	xor.b64  	%rd2119, %rd2114, %rd2023;
	xor.b64  	%rd2120, %rd2106, %rd2026;
	xor.b64  	%rd2121, %rd2108, %rd2029;
	xor.b64  	%rd2122, %rd2110, %rd2032;
	xor.b64  	%rd2123, %rd2112, %rd2035;
	xor.b64  	%rd2124, %rd2114, %rd2038;
	xor.b64  	%rd2125, %rd2106, %rd2041;
	xor.b64  	%rd2126, %rd2108, %rd2044;
	xor.b64  	%rd2127, %rd2110, %rd2047;
	xor.b64  	%rd2128, %rd2112, %rd2050;
	xor.b64  	%rd2129, %rd2114, %rd2053;
	xor.b64  	%rd2130, %rd2106, %rd2056;
	xor.b64  	%rd2131, %rd2108, %rd2059;
	xor.b64  	%rd2132, %rd2110, %rd2062;
	xor.b64  	%rd2133, %rd2112, %rd2065;
	xor.b64  	%rd2134, %rd2114, %rd2068;
	xor.b64  	%rd2135, %rd2106, %rd2071;
	xor.b64  	%rd2136, %rd2108, %rd2074;
	xor.b64  	%rd2137, %rd2110, %rd2077;
	xor.b64  	%rd2138, %rd2112, %rd2080;
	xor.b64  	%rd2139, %rd2114, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd2121;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 20;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 20;
	mov.b64 	%rd2140, {%r1376, %r1375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd2127;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 21;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 21;
	mov.b64 	%rd2141, {%r1380, %r1379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd2133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd2133;
	}
	shf.l.wrap.b32 	%r1383, %r1382, %r1381, 21;
	shf.l.wrap.b32 	%r1384, %r1381, %r1382, 21;
	mov.b64 	%rd2142, {%r1384, %r1383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd2139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd2139;
	}
	shf.l.wrap.b32 	%r1387, %r1386, %r1385, 14;
	shf.l.wrap.b32 	%r1388, %r1385, %r1386, 14;
	mov.b64 	%rd2143, {%r1388, %r1387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd2118;
	}
	shf.l.wrap.b32 	%r1391, %r1390, %r1389, 28;
	shf.l.wrap.b32 	%r1392, %r1389, %r1390, 28;
	mov.b64 	%rd2144, {%r1392, %r1391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1393}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd2124;
	}
	shf.l.wrap.b32 	%r1395, %r1394, %r1393, 20;
	shf.l.wrap.b32 	%r1396, %r1393, %r1394, 20;
	mov.b64 	%rd2145, {%r1396, %r1395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd2125;
	}
	shf.l.wrap.b32 	%r1399, %r1398, %r1397, 3;
	shf.l.wrap.b32 	%r1400, %r1397, %r1398, 3;
	mov.b64 	%rd2146, {%r1400, %r1399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1401,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd2131;
	}
	shf.r.wrap.b32 	%r1403, %r1402, %r1401, 19;
	shf.r.wrap.b32 	%r1404, %r1401, %r1402, 19;
	mov.b64 	%rd2147, {%r1404, %r1403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2137;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 3;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 3;
	mov.b64 	%rd2148, {%r1408, %r1407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1409}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd2116;
	}
	shf.l.wrap.b32 	%r1411, %r1410, %r1409, 1;
	shf.l.wrap.b32 	%r1412, %r1409, %r1410, 1;
	mov.b64 	%rd2149, {%r1412, %r1411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2122;
	}
	shf.l.wrap.b32 	%r1415, %r1414, %r1413, 6;
	shf.l.wrap.b32 	%r1416, %r1413, %r1414, 6;
	mov.b64 	%rd2150, {%r1416, %r1415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1417}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd2128;
	}
	shf.l.wrap.b32 	%r1419, %r1418, %r1417, 25;
	shf.l.wrap.b32 	%r1420, %r1417, %r1418, 25;
	mov.b64 	%rd2151, {%r1420, %r1419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2134;
	}
	shf.l.wrap.b32 	%r1423, %r1422, %r1421, 8;
	shf.l.wrap.b32 	%r1424, %r1421, %r1422, 8;
	mov.b64 	%rd2152, {%r1424, %r1423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1425}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd2135;
	}
	shf.l.wrap.b32 	%r1427, %r1426, %r1425, 18;
	shf.l.wrap.b32 	%r1428, %r1425, %r1426, 18;
	mov.b64 	%rd2153, {%r1428, %r1427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd2119;
	}
	shf.l.wrap.b32 	%r1431, %r1430, %r1429, 27;
	shf.l.wrap.b32 	%r1432, %r1429, %r1430, 27;
	mov.b64 	%rd2154, {%r1432, %r1431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd2120;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 28;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 28;
	mov.b64 	%rd2155, {%r1436, %r1435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd2126;
	}
	shf.l.wrap.b32 	%r1439, %r1438, %r1437, 10;
	shf.l.wrap.b32 	%r1440, %r1437, %r1438, 10;
	mov.b64 	%rd2156, {%r1440, %r1439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd2132;
	}
	shf.l.wrap.b32 	%r1443, %r1442, %r1441, 15;
	shf.l.wrap.b32 	%r1444, %r1441, %r1442, 15;
	mov.b64 	%rd2157, {%r1444, %r1443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd2138;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 8;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 8;
	mov.b64 	%rd2158, {%r1448, %r1447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1449,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1450}, %rd2117;
	}
	shf.r.wrap.b32 	%r1451, %r1450, %r1449, 2;
	shf.r.wrap.b32 	%r1452, %r1449, %r1450, 2;
	mov.b64 	%rd2159, {%r1452, %r1451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2123;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 9;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 9;
	mov.b64 	%rd2160, {%r1456, %r1455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1458}, %rd2129;
	}
	shf.r.wrap.b32 	%r1459, %r1458, %r1457, 25;
	shf.r.wrap.b32 	%r1460, %r1457, %r1458, 25;
	mov.b64 	%rd2161, {%r1460, %r1459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd2130;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 23;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 23;
	mov.b64 	%rd2162, {%r1464, %r1463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1465}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd2136;
	}
	shf.l.wrap.b32 	%r1467, %r1466, %r1465, 2;
	shf.l.wrap.b32 	%r1468, %r1465, %r1466, 2;
	mov.b64 	%rd2163, {%r1468, %r1467};
	not.b64 	%rd2164, %rd2140;
	and.b64  	%rd2165, %rd2141, %rd2164;
	xor.b64  	%rd2166, %rd2165, %rd2115;
	not.b64 	%rd2167, %rd2141;
	and.b64  	%rd2168, %rd2142, %rd2167;
	xor.b64  	%rd2169, %rd2168, %rd2140;
	not.b64 	%rd2170, %rd2142;
	and.b64  	%rd2171, %rd2143, %rd2170;
	xor.b64  	%rd2172, %rd2171, %rd2141;
	not.b64 	%rd2173, %rd2143;
	and.b64  	%rd2174, %rd2115, %rd2173;
	xor.b64  	%rd2175, %rd2174, %rd2142;
	not.b64 	%rd2176, %rd2115;
	and.b64  	%rd2177, %rd2140, %rd2176;
	xor.b64  	%rd2178, %rd2177, %rd2143;
	not.b64 	%rd2179, %rd2145;
	and.b64  	%rd2180, %rd2146, %rd2179;
	xor.b64  	%rd2181, %rd2180, %rd2144;
	not.b64 	%rd2182, %rd2146;
	and.b64  	%rd2183, %rd2147, %rd2182;
	xor.b64  	%rd2184, %rd2183, %rd2145;
	not.b64 	%rd2185, %rd2147;
	and.b64  	%rd2186, %rd2148, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2146;
	not.b64 	%rd2188, %rd2148;
	and.b64  	%rd2189, %rd2144, %rd2188;
	xor.b64  	%rd2190, %rd2189, %rd2147;
	not.b64 	%rd2191, %rd2144;
	and.b64  	%rd2192, %rd2145, %rd2191;
	xor.b64  	%rd2193, %rd2192, %rd2148;
	not.b64 	%rd2194, %rd2150;
	and.b64  	%rd2195, %rd2151, %rd2194;
	xor.b64  	%rd2196, %rd2195, %rd2149;
	not.b64 	%rd2197, %rd2151;
	and.b64  	%rd2198, %rd2152, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2150;
	not.b64 	%rd2200, %rd2152;
	and.b64  	%rd2201, %rd2153, %rd2200;
	xor.b64  	%rd2202, %rd2201, %rd2151;
	not.b64 	%rd2203, %rd2153;
	and.b64  	%rd2204, %rd2149, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2152;
	not.b64 	%rd2206, %rd2149;
	and.b64  	%rd2207, %rd2150, %rd2206;
	xor.b64  	%rd2208, %rd2207, %rd2153;
	not.b64 	%rd2209, %rd2155;
	and.b64  	%rd2210, %rd2156, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2154;
	not.b64 	%rd2212, %rd2156;
	and.b64  	%rd2213, %rd2157, %rd2212;
	xor.b64  	%rd2214, %rd2213, %rd2155;
	not.b64 	%rd2215, %rd2157;
	and.b64  	%rd2216, %rd2158, %rd2215;
	xor.b64  	%rd2217, %rd2216, %rd2156;
	not.b64 	%rd2218, %rd2158;
	and.b64  	%rd2219, %rd2154, %rd2218;
	xor.b64  	%rd2220, %rd2219, %rd2157;
	not.b64 	%rd2221, %rd2154;
	and.b64  	%rd2222, %rd2155, %rd2221;
	xor.b64  	%rd2223, %rd2222, %rd2158;
	not.b64 	%rd2224, %rd2160;
	and.b64  	%rd2225, %rd2161, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2159;
	not.b64 	%rd2227, %rd2161;
	and.b64  	%rd2228, %rd2162, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2160;
	not.b64 	%rd2230, %rd2162;
	and.b64  	%rd2231, %rd2163, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2161;
	not.b64 	%rd2233, %rd2163;
	and.b64  	%rd2234, %rd2159, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2162;
	not.b64 	%rd2236, %rd2159;
	and.b64  	%rd2237, %rd2160, %rd2236;
	xor.b64  	%rd2238, %rd2237, %rd2163;
	xor.b64  	%rd2239, %rd2166, %rd27;
	xor.b64  	%rd2240, %rd2181, %rd2239;
	xor.b64  	%rd2241, %rd2240, %rd2196;
	xor.b64  	%rd2242, %rd2241, %rd2211;
	xor.b64  	%rd2243, %rd2242, %rd2226;
	xor.b64  	%rd2244, %rd2184, %rd2169;
	xor.b64  	%rd2245, %rd2244, %rd2199;
	xor.b64  	%rd2246, %rd2245, %rd2214;
	xor.b64  	%rd2247, %rd2246, %rd2229;
	xor.b64  	%rd2248, %rd2187, %rd2172;
	xor.b64  	%rd2249, %rd2248, %rd2202;
	xor.b64  	%rd2250, %rd2249, %rd2217;
	xor.b64  	%rd2251, %rd2250, %rd2232;
	xor.b64  	%rd2252, %rd2190, %rd2175;
	xor.b64  	%rd2253, %rd2252, %rd2205;
	xor.b64  	%rd2254, %rd2253, %rd2220;
	xor.b64  	%rd2255, %rd2254, %rd2235;
	xor.b64  	%rd2256, %rd2193, %rd2178;
	xor.b64  	%rd2257, %rd2256, %rd2208;
	xor.b64  	%rd2258, %rd2257, %rd2223;
	xor.b64  	%rd2259, %rd2258, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd2247;
	}
	shf.l.wrap.b32 	%r1471, %r1470, %r1469, 1;
	shf.l.wrap.b32 	%r1472, %r1469, %r1470, 1;
	mov.b64 	%rd2260, {%r1472, %r1471};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1473}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2251;
	}
	shf.l.wrap.b32 	%r1475, %r1474, %r1473, 1;
	shf.l.wrap.b32 	%r1476, %r1473, %r1474, 1;
	mov.b64 	%rd2262, {%r1476, %r1475};
	xor.b64  	%rd2263, %rd2262, %rd2243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd2255;
	}
	shf.l.wrap.b32 	%r1479, %r1478, %r1477, 1;
	shf.l.wrap.b32 	%r1480, %r1477, %r1478, 1;
	mov.b64 	%rd2264, {%r1480, %r1479};
	xor.b64  	%rd2265, %rd2264, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1481}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2259;
	}
	shf.l.wrap.b32 	%r1483, %r1482, %r1481, 1;
	shf.l.wrap.b32 	%r1484, %r1481, %r1482, 1;
	mov.b64 	%rd2266, {%r1484, %r1483};
	xor.b64  	%rd2267, %rd2266, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd2243;
	}
	shf.l.wrap.b32 	%r1487, %r1486, %r1485, 1;
	shf.l.wrap.b32 	%r1488, %r1485, %r1486, 1;
	mov.b64 	%rd2268, {%r1488, %r1487};
	xor.b64  	%rd2269, %rd2255, %rd2268;
	xor.b64  	%rd2270, %rd2261, %rd2239;
	xor.b64  	%rd2271, %rd2263, %rd2169;
	xor.b64  	%rd2272, %rd2265, %rd2172;
	xor.b64  	%rd2273, %rd2267, %rd2175;
	xor.b64  	%rd2274, %rd2269, %rd2178;
	xor.b64  	%rd2275, %rd2261, %rd2181;
	xor.b64  	%rd2276, %rd2263, %rd2184;
	xor.b64  	%rd2277, %rd2265, %rd2187;
	xor.b64  	%rd2278, %rd2267, %rd2190;
	xor.b64  	%rd2279, %rd2269, %rd2193;
	xor.b64  	%rd2280, %rd2261, %rd2196;
	xor.b64  	%rd2281, %rd2263, %rd2199;
	xor.b64  	%rd2282, %rd2265, %rd2202;
	xor.b64  	%rd2283, %rd2267, %rd2205;
	xor.b64  	%rd2284, %rd2269, %rd2208;
	xor.b64  	%rd2285, %rd2261, %rd2211;
	xor.b64  	%rd2286, %rd2263, %rd2214;
	xor.b64  	%rd2287, %rd2265, %rd2217;
	xor.b64  	%rd2288, %rd2267, %rd2220;
	xor.b64  	%rd2289, %rd2269, %rd2223;
	xor.b64  	%rd2290, %rd2261, %rd2226;
	xor.b64  	%rd2291, %rd2263, %rd2229;
	xor.b64  	%rd2292, %rd2265, %rd2232;
	xor.b64  	%rd2293, %rd2267, %rd2235;
	xor.b64  	%rd2294, %rd2269, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd2276;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 20;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 20;
	mov.b64 	%rd2295, {%r1492, %r1491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2282;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 21;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 21;
	mov.b64 	%rd2296, {%r1496, %r1495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd2288;
	}
	shf.l.wrap.b32 	%r1499, %r1498, %r1497, 21;
	shf.l.wrap.b32 	%r1500, %r1497, %r1498, 21;
	mov.b64 	%rd2297, {%r1500, %r1499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd2294;
	}
	shf.l.wrap.b32 	%r1503, %r1502, %r1501, 14;
	shf.l.wrap.b32 	%r1504, %r1501, %r1502, 14;
	mov.b64 	%rd2298, {%r1504, %r1503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1505}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2273;
	}
	shf.l.wrap.b32 	%r1507, %r1506, %r1505, 28;
	shf.l.wrap.b32 	%r1508, %r1505, %r1506, 28;
	mov.b64 	%rd2299, {%r1508, %r1507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd2279;
	}
	shf.l.wrap.b32 	%r1511, %r1510, %r1509, 20;
	shf.l.wrap.b32 	%r1512, %r1509, %r1510, 20;
	mov.b64 	%rd2300, {%r1512, %r1511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1513}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd2280;
	}
	shf.l.wrap.b32 	%r1515, %r1514, %r1513, 3;
	shf.l.wrap.b32 	%r1516, %r1513, %r1514, 3;
	mov.b64 	%rd2301, {%r1516, %r1515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd2286;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 19;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 19;
	mov.b64 	%rd2302, {%r1520, %r1519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd2292;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 3;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 3;
	mov.b64 	%rd2303, {%r1524, %r1523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd2271;
	}
	shf.l.wrap.b32 	%r1527, %r1526, %r1525, 1;
	shf.l.wrap.b32 	%r1528, %r1525, %r1526, 1;
	mov.b64 	%rd2304, {%r1528, %r1527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1529}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd2277;
	}
	shf.l.wrap.b32 	%r1531, %r1530, %r1529, 6;
	shf.l.wrap.b32 	%r1532, %r1529, %r1530, 6;
	mov.b64 	%rd2305, {%r1532, %r1531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd2283;
	}
	shf.l.wrap.b32 	%r1535, %r1534, %r1533, 25;
	shf.l.wrap.b32 	%r1536, %r1533, %r1534, 25;
	mov.b64 	%rd2306, {%r1536, %r1535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2289;
	}
	shf.l.wrap.b32 	%r1539, %r1538, %r1537, 8;
	shf.l.wrap.b32 	%r1540, %r1537, %r1538, 8;
	mov.b64 	%rd2307, {%r1540, %r1539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1541}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd2290;
	}
	shf.l.wrap.b32 	%r1543, %r1542, %r1541, 18;
	shf.l.wrap.b32 	%r1544, %r1541, %r1542, 18;
	mov.b64 	%rd2308, {%r1544, %r1543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2274;
	}
	shf.l.wrap.b32 	%r1547, %r1546, %r1545, 27;
	shf.l.wrap.b32 	%r1548, %r1545, %r1546, 27;
	mov.b64 	%rd2309, {%r1548, %r1547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd2275;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 28;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 28;
	mov.b64 	%rd2310, {%r1552, %r1551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd2281;
	}
	shf.l.wrap.b32 	%r1555, %r1554, %r1553, 10;
	shf.l.wrap.b32 	%r1556, %r1553, %r1554, 10;
	mov.b64 	%rd2311, {%r1556, %r1555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1557}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd2287;
	}
	shf.l.wrap.b32 	%r1559, %r1558, %r1557, 15;
	shf.l.wrap.b32 	%r1560, %r1557, %r1558, 15;
	mov.b64 	%rd2312, {%r1560, %r1559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd2293;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 8;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 8;
	mov.b64 	%rd2313, {%r1564, %r1563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd2272;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 2;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 2;
	mov.b64 	%rd2314, {%r1568, %r1567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd2278;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 9;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 9;
	mov.b64 	%rd2315, {%r1572, %r1571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd2284;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 25;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 25;
	mov.b64 	%rd2316, {%r1576, %r1575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1577,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1578}, %rd2285;
	}
	shf.r.wrap.b32 	%r1579, %r1578, %r1577, 23;
	shf.r.wrap.b32 	%r1580, %r1577, %r1578, 23;
	mov.b64 	%rd2317, {%r1580, %r1579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1581}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1582,%dummy}, %rd2291;
	}
	shf.l.wrap.b32 	%r1583, %r1582, %r1581, 2;
	shf.l.wrap.b32 	%r1584, %r1581, %r1582, 2;
	mov.b64 	%rd2318, {%r1584, %r1583};
	not.b64 	%rd2319, %rd2295;
	and.b64  	%rd2320, %rd2296, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2270;
	not.b64 	%rd2322, %rd2296;
	and.b64  	%rd2323, %rd2297, %rd2322;
	xor.b64  	%rd2324, %rd2323, %rd2295;
	not.b64 	%rd2325, %rd2297;
	and.b64  	%rd2326, %rd2298, %rd2325;
	xor.b64  	%rd2327, %rd2326, %rd2296;
	not.b64 	%rd2328, %rd2298;
	and.b64  	%rd2329, %rd2270, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2297;
	not.b64 	%rd2331, %rd2270;
	and.b64  	%rd2332, %rd2295, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2298;
	not.b64 	%rd2334, %rd2300;
	and.b64  	%rd2335, %rd2301, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2299;
	not.b64 	%rd2337, %rd2301;
	and.b64  	%rd2338, %rd2302, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2300;
	not.b64 	%rd2340, %rd2302;
	and.b64  	%rd2341, %rd2303, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2301;
	not.b64 	%rd2343, %rd2303;
	and.b64  	%rd2344, %rd2299, %rd2343;
	xor.b64  	%rd2345, %rd2344, %rd2302;
	not.b64 	%rd2346, %rd2299;
	and.b64  	%rd2347, %rd2300, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2303;
	not.b64 	%rd2349, %rd2305;
	and.b64  	%rd2350, %rd2306, %rd2349;
	xor.b64  	%rd2351, %rd2350, %rd2304;
	not.b64 	%rd2352, %rd2306;
	and.b64  	%rd2353, %rd2307, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2305;
	not.b64 	%rd2355, %rd2307;
	and.b64  	%rd2356, %rd2308, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2306;
	not.b64 	%rd2358, %rd2308;
	and.b64  	%rd2359, %rd2304, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2307;
	not.b64 	%rd2361, %rd2304;
	and.b64  	%rd2362, %rd2305, %rd2361;
	xor.b64  	%rd2363, %rd2362, %rd2308;
	not.b64 	%rd2364, %rd2310;
	and.b64  	%rd2365, %rd2311, %rd2364;
	xor.b64  	%rd2366, %rd2365, %rd2309;
	not.b64 	%rd2367, %rd2311;
	and.b64  	%rd2368, %rd2312, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd2310;
	not.b64 	%rd2370, %rd2312;
	and.b64  	%rd2371, %rd2313, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2311;
	not.b64 	%rd2373, %rd2313;
	and.b64  	%rd2374, %rd2309, %rd2373;
	xor.b64  	%rd2375, %rd2374, %rd2312;
	not.b64 	%rd2376, %rd2309;
	and.b64  	%rd2377, %rd2310, %rd2376;
	xor.b64  	%rd2378, %rd2377, %rd2313;
	not.b64 	%rd2379, %rd2315;
	and.b64  	%rd2380, %rd2316, %rd2379;
	xor.b64  	%rd2381, %rd2380, %rd2314;
	not.b64 	%rd2382, %rd2316;
	and.b64  	%rd2383, %rd2317, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2315;
	not.b64 	%rd2385, %rd2317;
	and.b64  	%rd2386, %rd2318, %rd2385;
	xor.b64  	%rd2387, %rd2386, %rd2316;
	not.b64 	%rd2388, %rd2318;
	and.b64  	%rd2389, %rd2314, %rd2388;
	xor.b64  	%rd2390, %rd2389, %rd2317;
	not.b64 	%rd2391, %rd2314;
	and.b64  	%rd2392, %rd2315, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2318;
	xor.b64  	%rd2394, %rd2321, %rd28;
	xor.b64  	%rd2395, %rd2336, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2351;
	xor.b64  	%rd2397, %rd2396, %rd2366;
	xor.b64  	%rd2398, %rd2397, %rd2381;
	xor.b64  	%rd2399, %rd2339, %rd2324;
	xor.b64  	%rd2400, %rd2399, %rd2354;
	xor.b64  	%rd2401, %rd2400, %rd2369;
	xor.b64  	%rd2402, %rd2401, %rd2384;
	xor.b64  	%rd2403, %rd2342, %rd2327;
	xor.b64  	%rd2404, %rd2403, %rd2357;
	xor.b64  	%rd2405, %rd2404, %rd2372;
	xor.b64  	%rd2406, %rd2405, %rd2387;
	xor.b64  	%rd2407, %rd2345, %rd2330;
	xor.b64  	%rd2408, %rd2407, %rd2360;
	xor.b64  	%rd2409, %rd2408, %rd2375;
	xor.b64  	%rd2410, %rd2409, %rd2390;
	xor.b64  	%rd2411, %rd2348, %rd2333;
	xor.b64  	%rd2412, %rd2411, %rd2363;
	xor.b64  	%rd2413, %rd2412, %rd2378;
	xor.b64  	%rd2414, %rd2413, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2402;
	}
	shf.l.wrap.b32 	%r1587, %r1586, %r1585, 1;
	shf.l.wrap.b32 	%r1588, %r1585, %r1586, 1;
	mov.b64 	%rd2415, {%r1588, %r1587};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1589}, %rd2406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1590,%dummy}, %rd2406;
	}
	shf.l.wrap.b32 	%r1591, %r1590, %r1589, 1;
	shf.l.wrap.b32 	%r1592, %r1589, %r1590, 1;
	mov.b64 	%rd2417, {%r1592, %r1591};
	xor.b64  	%rd2418, %rd2417, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd2410;
	}
	shf.l.wrap.b32 	%r1595, %r1594, %r1593, 1;
	shf.l.wrap.b32 	%r1596, %r1593, %r1594, 1;
	mov.b64 	%rd2419, {%r1596, %r1595};
	xor.b64  	%rd2420, %rd2419, %rd2402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1598,%dummy}, %rd2414;
	}
	shf.l.wrap.b32 	%r1599, %r1598, %r1597, 1;
	shf.l.wrap.b32 	%r1600, %r1597, %r1598, 1;
	mov.b64 	%rd2421, {%r1600, %r1599};
	xor.b64  	%rd2422, %rd2421, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1601}, %rd2398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd2398;
	}
	shf.l.wrap.b32 	%r1603, %r1602, %r1601, 1;
	shf.l.wrap.b32 	%r1604, %r1601, %r1602, 1;
	mov.b64 	%rd2423, {%r1604, %r1603};
	xor.b64  	%rd2424, %rd2410, %rd2423;
	xor.b64  	%rd2425, %rd2416, %rd2394;
	xor.b64  	%rd2426, %rd2418, %rd2324;
	xor.b64  	%rd2427, %rd2420, %rd2327;
	xor.b64  	%rd2428, %rd2422, %rd2330;
	xor.b64  	%rd2429, %rd2424, %rd2333;
	xor.b64  	%rd2430, %rd2416, %rd2336;
	xor.b64  	%rd2431, %rd2418, %rd2339;
	xor.b64  	%rd2432, %rd2420, %rd2342;
	xor.b64  	%rd2433, %rd2422, %rd2345;
	xor.b64  	%rd2434, %rd2424, %rd2348;
	xor.b64  	%rd2435, %rd2416, %rd2351;
	xor.b64  	%rd2436, %rd2418, %rd2354;
	xor.b64  	%rd2437, %rd2420, %rd2357;
	xor.b64  	%rd2438, %rd2422, %rd2360;
	xor.b64  	%rd2439, %rd2424, %rd2363;
	xor.b64  	%rd2440, %rd2416, %rd2366;
	xor.b64  	%rd2441, %rd2418, %rd2369;
	xor.b64  	%rd2442, %rd2420, %rd2372;
	xor.b64  	%rd2443, %rd2422, %rd2375;
	xor.b64  	%rd2444, %rd2424, %rd2378;
	xor.b64  	%rd2445, %rd2416, %rd2381;
	xor.b64  	%rd2446, %rd2418, %rd2384;
	xor.b64  	%rd2447, %rd2420, %rd2387;
	xor.b64  	%rd2448, %rd2422, %rd2390;
	xor.b64  	%rd2449, %rd2424, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd2431;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 20;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 20;
	mov.b64 	%rd2450, {%r1608, %r1607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd2437;
	}
	shf.r.wrap.b32 	%r1611, %r1610, %r1609, 21;
	shf.r.wrap.b32 	%r1612, %r1609, %r1610, 21;
	mov.b64 	%rd2451, {%r1612, %r1611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd2443;
	}
	shf.l.wrap.b32 	%r1615, %r1614, %r1613, 21;
	shf.l.wrap.b32 	%r1616, %r1613, %r1614, 21;
	mov.b64 	%rd2452, {%r1616, %r1615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1617}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd2449;
	}
	shf.l.wrap.b32 	%r1619, %r1618, %r1617, 14;
	shf.l.wrap.b32 	%r1620, %r1617, %r1618, 14;
	mov.b64 	%rd2453, {%r1620, %r1619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd2428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd2428;
	}
	shf.l.wrap.b32 	%r1623, %r1622, %r1621, 28;
	shf.l.wrap.b32 	%r1624, %r1621, %r1622, 28;
	mov.b64 	%rd2454, {%r1624, %r1623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd2434;
	}
	shf.l.wrap.b32 	%r1627, %r1626, %r1625, 20;
	shf.l.wrap.b32 	%r1628, %r1625, %r1626, 20;
	mov.b64 	%rd2455, {%r1628, %r1627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd2435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd2435;
	}
	shf.l.wrap.b32 	%r1631, %r1630, %r1629, 3;
	shf.l.wrap.b32 	%r1632, %r1629, %r1630, 3;
	mov.b64 	%rd2456, {%r1632, %r1631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd2441;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 19;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 19;
	mov.b64 	%rd2457, {%r1636, %r1635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd2447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd2447;
	}
	shf.r.wrap.b32 	%r1639, %r1638, %r1637, 3;
	shf.r.wrap.b32 	%r1640, %r1637, %r1638, 3;
	mov.b64 	%rd2458, {%r1640, %r1639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd2426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd2426;
	}
	shf.l.wrap.b32 	%r1643, %r1642, %r1641, 1;
	shf.l.wrap.b32 	%r1644, %r1641, %r1642, 1;
	mov.b64 	%rd2459, {%r1644, %r1643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd2432;
	}
	shf.l.wrap.b32 	%r1647, %r1646, %r1645, 6;
	shf.l.wrap.b32 	%r1648, %r1645, %r1646, 6;
	mov.b64 	%rd2460, {%r1648, %r1647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd2438;
	}
	shf.l.wrap.b32 	%r1651, %r1650, %r1649, 25;
	shf.l.wrap.b32 	%r1652, %r1649, %r1650, 25;
	mov.b64 	%rd2461, {%r1652, %r1651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd2444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd2444;
	}
	shf.l.wrap.b32 	%r1655, %r1654, %r1653, 8;
	shf.l.wrap.b32 	%r1656, %r1653, %r1654, 8;
	mov.b64 	%rd2462, {%r1656, %r1655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd2445;
	}
	shf.l.wrap.b32 	%r1659, %r1658, %r1657, 18;
	shf.l.wrap.b32 	%r1660, %r1657, %r1658, 18;
	mov.b64 	%rd2463, {%r1660, %r1659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1661}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2429;
	}
	shf.l.wrap.b32 	%r1663, %r1662, %r1661, 27;
	shf.l.wrap.b32 	%r1664, %r1661, %r1662, 27;
	mov.b64 	%rd2464, {%r1664, %r1663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd2430;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 28;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 28;
	mov.b64 	%rd2465, {%r1668, %r1667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2436;
	}
	shf.l.wrap.b32 	%r1671, %r1670, %r1669, 10;
	shf.l.wrap.b32 	%r1672, %r1669, %r1670, 10;
	mov.b64 	%rd2466, {%r1672, %r1671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd2442;
	}
	shf.l.wrap.b32 	%r1675, %r1674, %r1673, 15;
	shf.l.wrap.b32 	%r1676, %r1673, %r1674, 15;
	mov.b64 	%rd2467, {%r1676, %r1675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1677,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd2448;
	}
	shf.r.wrap.b32 	%r1679, %r1678, %r1677, 8;
	shf.r.wrap.b32 	%r1680, %r1677, %r1678, 8;
	mov.b64 	%rd2468, {%r1680, %r1679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1681,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1682}, %rd2427;
	}
	shf.r.wrap.b32 	%r1683, %r1682, %r1681, 2;
	shf.r.wrap.b32 	%r1684, %r1681, %r1682, 2;
	mov.b64 	%rd2469, {%r1684, %r1683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2433;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 9;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 9;
	mov.b64 	%rd2470, {%r1688, %r1687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1689,%dummy}, %rd2439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1690}, %rd2439;
	}
	shf.r.wrap.b32 	%r1691, %r1690, %r1689, 25;
	shf.r.wrap.b32 	%r1692, %r1689, %r1690, 25;
	mov.b64 	%rd2471, {%r1692, %r1691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2440;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 23;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 23;
	mov.b64 	%rd2472, {%r1696, %r1695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd2446;
	}
	shf.l.wrap.b32 	%r1699, %r1698, %r1697, 2;
	shf.l.wrap.b32 	%r1700, %r1697, %r1698, 2;
	mov.b64 	%rd2473, {%r1700, %r1699};
	not.b64 	%rd2474, %rd2450;
	and.b64  	%rd2475, %rd2451, %rd2474;
	xor.b64  	%rd2476, %rd2475, %rd2425;
	not.b64 	%rd2477, %rd2451;
	and.b64  	%rd2478, %rd2452, %rd2477;
	xor.b64  	%rd2479, %rd2478, %rd2450;
	not.b64 	%rd2480, %rd2452;
	and.b64  	%rd2481, %rd2453, %rd2480;
	xor.b64  	%rd2482, %rd2481, %rd2451;
	not.b64 	%rd2483, %rd2453;
	and.b64  	%rd2484, %rd2425, %rd2483;
	xor.b64  	%rd2485, %rd2484, %rd2452;
	not.b64 	%rd2486, %rd2425;
	and.b64  	%rd2487, %rd2450, %rd2486;
	xor.b64  	%rd2488, %rd2487, %rd2453;
	not.b64 	%rd2489, %rd2455;
	and.b64  	%rd2490, %rd2456, %rd2489;
	xor.b64  	%rd2491, %rd2490, %rd2454;
	not.b64 	%rd2492, %rd2456;
	and.b64  	%rd2493, %rd2457, %rd2492;
	xor.b64  	%rd2494, %rd2493, %rd2455;
	not.b64 	%rd2495, %rd2457;
	and.b64  	%rd2496, %rd2458, %rd2495;
	xor.b64  	%rd2497, %rd2496, %rd2456;
	not.b64 	%rd2498, %rd2458;
	and.b64  	%rd2499, %rd2454, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2457;
	not.b64 	%rd2501, %rd2454;
	and.b64  	%rd2502, %rd2455, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2458;
	not.b64 	%rd2504, %rd2460;
	and.b64  	%rd2505, %rd2461, %rd2504;
	xor.b64  	%rd2506, %rd2505, %rd2459;
	not.b64 	%rd2507, %rd2461;
	and.b64  	%rd2508, %rd2462, %rd2507;
	xor.b64  	%rd2509, %rd2508, %rd2460;
	not.b64 	%rd2510, %rd2462;
	and.b64  	%rd2511, %rd2463, %rd2510;
	xor.b64  	%rd2512, %rd2511, %rd2461;
	not.b64 	%rd2513, %rd2463;
	and.b64  	%rd2514, %rd2459, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2462;
	not.b64 	%rd2516, %rd2459;
	and.b64  	%rd2517, %rd2460, %rd2516;
	xor.b64  	%rd2518, %rd2517, %rd2463;
	not.b64 	%rd2519, %rd2465;
	and.b64  	%rd2520, %rd2466, %rd2519;
	xor.b64  	%rd2521, %rd2520, %rd2464;
	not.b64 	%rd2522, %rd2466;
	and.b64  	%rd2523, %rd2467, %rd2522;
	xor.b64  	%rd2524, %rd2523, %rd2465;
	not.b64 	%rd2525, %rd2467;
	and.b64  	%rd2526, %rd2468, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2466;
	not.b64 	%rd2528, %rd2468;
	and.b64  	%rd2529, %rd2464, %rd2528;
	xor.b64  	%rd2530, %rd2529, %rd2467;
	not.b64 	%rd2531, %rd2464;
	and.b64  	%rd2532, %rd2465, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2468;
	not.b64 	%rd2534, %rd2470;
	and.b64  	%rd2535, %rd2471, %rd2534;
	xor.b64  	%rd2536, %rd2535, %rd2469;
	not.b64 	%rd2537, %rd2471;
	and.b64  	%rd2538, %rd2472, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd2470;
	not.b64 	%rd2540, %rd2472;
	and.b64  	%rd2541, %rd2473, %rd2540;
	xor.b64  	%rd2542, %rd2541, %rd2471;
	not.b64 	%rd2543, %rd2473;
	and.b64  	%rd2544, %rd2469, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2472;
	not.b64 	%rd2546, %rd2469;
	and.b64  	%rd2547, %rd2470, %rd2546;
	xor.b64  	%rd2548, %rd2547, %rd2473;
	xor.b64  	%rd2549, %rd2476, %rd29;
	xor.b64  	%rd2550, %rd2491, %rd2549;
	xor.b64  	%rd2551, %rd2550, %rd2506;
	xor.b64  	%rd2552, %rd2551, %rd2521;
	xor.b64  	%rd2553, %rd2552, %rd2536;
	xor.b64  	%rd2554, %rd2494, %rd2479;
	xor.b64  	%rd2555, %rd2554, %rd2509;
	xor.b64  	%rd2556, %rd2555, %rd2524;
	xor.b64  	%rd2557, %rd2556, %rd2539;
	xor.b64  	%rd2558, %rd2497, %rd2482;
	xor.b64  	%rd2559, %rd2558, %rd2512;
	xor.b64  	%rd2560, %rd2559, %rd2527;
	xor.b64  	%rd2561, %rd2560, %rd2542;
	xor.b64  	%rd2562, %rd2500, %rd2485;
	xor.b64  	%rd2563, %rd2562, %rd2515;
	xor.b64  	%rd2564, %rd2563, %rd2530;
	xor.b64  	%rd2565, %rd2564, %rd2545;
	xor.b64  	%rd2566, %rd2503, %rd2488;
	xor.b64  	%rd2567, %rd2566, %rd2518;
	xor.b64  	%rd2568, %rd2567, %rd2533;
	xor.b64  	%rd2569, %rd2568, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd2557;
	}
	shf.l.wrap.b32 	%r1703, %r1702, %r1701, 1;
	shf.l.wrap.b32 	%r1704, %r1701, %r1702, 1;
	mov.b64 	%rd2570, {%r1704, %r1703};
	xor.b64  	%rd2571, %rd2569, %rd2570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1706,%dummy}, %rd2561;
	}
	shf.l.wrap.b32 	%r1707, %r1706, %r1705, 1;
	shf.l.wrap.b32 	%r1708, %r1705, %r1706, 1;
	mov.b64 	%rd2572, {%r1708, %r1707};
	xor.b64  	%rd2573, %rd2572, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd2565;
	}
	shf.l.wrap.b32 	%r1711, %r1710, %r1709, 1;
	shf.l.wrap.b32 	%r1712, %r1709, %r1710, 1;
	mov.b64 	%rd2574, {%r1712, %r1711};
	xor.b64  	%rd2575, %rd2574, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd2569;
	}
	shf.l.wrap.b32 	%r1715, %r1714, %r1713, 1;
	shf.l.wrap.b32 	%r1716, %r1713, %r1714, 1;
	mov.b64 	%rd2576, {%r1716, %r1715};
	xor.b64  	%rd2577, %rd2576, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd2553;
	}
	shf.l.wrap.b32 	%r1719, %r1718, %r1717, 1;
	shf.l.wrap.b32 	%r1720, %r1717, %r1718, 1;
	mov.b64 	%rd2578, {%r1720, %r1719};
	xor.b64  	%rd2579, %rd2565, %rd2578;
	xor.b64  	%rd2580, %rd2571, %rd2549;
	xor.b64  	%rd2581, %rd2573, %rd2479;
	xor.b64  	%rd2582, %rd2575, %rd2482;
	xor.b64  	%rd2583, %rd2577, %rd2485;
	xor.b64  	%rd2584, %rd2579, %rd2488;
	xor.b64  	%rd2585, %rd2571, %rd2491;
	xor.b64  	%rd2586, %rd2573, %rd2494;
	xor.b64  	%rd2587, %rd2575, %rd2497;
	xor.b64  	%rd2588, %rd2577, %rd2500;
	xor.b64  	%rd2589, %rd2579, %rd2503;
	xor.b64  	%rd2590, %rd2571, %rd2506;
	xor.b64  	%rd2591, %rd2573, %rd2509;
	xor.b64  	%rd2592, %rd2575, %rd2512;
	xor.b64  	%rd2593, %rd2577, %rd2515;
	xor.b64  	%rd2594, %rd2579, %rd2518;
	xor.b64  	%rd2595, %rd2571, %rd2521;
	xor.b64  	%rd2596, %rd2573, %rd2524;
	xor.b64  	%rd2597, %rd2575, %rd2527;
	xor.b64  	%rd2598, %rd2577, %rd2530;
	xor.b64  	%rd2599, %rd2579, %rd2533;
	xor.b64  	%rd2600, %rd2571, %rd2536;
	xor.b64  	%rd2601, %rd2573, %rd2539;
	xor.b64  	%rd2602, %rd2575, %rd2542;
	xor.b64  	%rd2603, %rd2577, %rd2545;
	xor.b64  	%rd2604, %rd2579, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1721,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1722}, %rd2586;
	}
	shf.r.wrap.b32 	%r1723, %r1722, %r1721, 20;
	shf.r.wrap.b32 	%r1724, %r1721, %r1722, 20;
	mov.b64 	%rd2605, {%r1724, %r1723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd2592;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 21;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 21;
	mov.b64 	%rd2606, {%r1728, %r1727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1730,%dummy}, %rd2598;
	}
	shf.l.wrap.b32 	%r1731, %r1730, %r1729, 21;
	shf.l.wrap.b32 	%r1732, %r1729, %r1730, 21;
	mov.b64 	%rd2607, {%r1732, %r1731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1733}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2604;
	}
	shf.l.wrap.b32 	%r1735, %r1734, %r1733, 14;
	shf.l.wrap.b32 	%r1736, %r1733, %r1734, 14;
	mov.b64 	%rd2608, {%r1736, %r1735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd2583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1738,%dummy}, %rd2583;
	}
	shf.l.wrap.b32 	%r1739, %r1738, %r1737, 28;
	shf.l.wrap.b32 	%r1740, %r1737, %r1738, 28;
	mov.b64 	%rd2609, {%r1740, %r1739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd2589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2589;
	}
	shf.l.wrap.b32 	%r1743, %r1742, %r1741, 20;
	shf.l.wrap.b32 	%r1744, %r1741, %r1742, 20;
	mov.b64 	%rd2610, {%r1744, %r1743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd2590;
	}
	shf.l.wrap.b32 	%r1747, %r1746, %r1745, 3;
	shf.l.wrap.b32 	%r1748, %r1745, %r1746, 3;
	mov.b64 	%rd2611, {%r1748, %r1747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd2596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd2596;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 19;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 19;
	mov.b64 	%rd2612, {%r1752, %r1751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd2602;
	}
	shf.r.wrap.b32 	%r1755, %r1754, %r1753, 3;
	shf.r.wrap.b32 	%r1756, %r1753, %r1754, 3;
	mov.b64 	%rd2613, {%r1756, %r1755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1757}, %rd2581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd2581;
	}
	shf.l.wrap.b32 	%r1759, %r1758, %r1757, 1;
	shf.l.wrap.b32 	%r1760, %r1757, %r1758, 1;
	mov.b64 	%rd2614, {%r1760, %r1759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1762,%dummy}, %rd2587;
	}
	shf.l.wrap.b32 	%r1763, %r1762, %r1761, 6;
	shf.l.wrap.b32 	%r1764, %r1761, %r1762, 6;
	mov.b64 	%rd2615, {%r1764, %r1763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1765}, %rd2593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd2593;
	}
	shf.l.wrap.b32 	%r1767, %r1766, %r1765, 25;
	shf.l.wrap.b32 	%r1768, %r1765, %r1766, 25;
	mov.b64 	%rd2616, {%r1768, %r1767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1770,%dummy}, %rd2599;
	}
	shf.l.wrap.b32 	%r1771, %r1770, %r1769, 8;
	shf.l.wrap.b32 	%r1772, %r1769, %r1770, 8;
	mov.b64 	%rd2617, {%r1772, %r1771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1773}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd2600;
	}
	shf.l.wrap.b32 	%r1775, %r1774, %r1773, 18;
	shf.l.wrap.b32 	%r1776, %r1773, %r1774, 18;
	mov.b64 	%rd2618, {%r1776, %r1775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd2584;
	}
	shf.l.wrap.b32 	%r1779, %r1778, %r1777, 27;
	shf.l.wrap.b32 	%r1780, %r1777, %r1778, 27;
	mov.b64 	%rd2619, {%r1780, %r1779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd2585;
	}
	shf.r.wrap.b32 	%r1783, %r1782, %r1781, 28;
	shf.r.wrap.b32 	%r1784, %r1781, %r1782, 28;
	mov.b64 	%rd2620, {%r1784, %r1783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd2591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd2591;
	}
	shf.l.wrap.b32 	%r1787, %r1786, %r1785, 10;
	shf.l.wrap.b32 	%r1788, %r1785, %r1786, 10;
	mov.b64 	%rd2621, {%r1788, %r1787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd2597;
	}
	shf.l.wrap.b32 	%r1791, %r1790, %r1789, 15;
	shf.l.wrap.b32 	%r1792, %r1789, %r1790, 15;
	mov.b64 	%rd2622, {%r1792, %r1791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1793,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1794}, %rd2603;
	}
	shf.r.wrap.b32 	%r1795, %r1794, %r1793, 8;
	shf.r.wrap.b32 	%r1796, %r1793, %r1794, 8;
	mov.b64 	%rd2623, {%r1796, %r1795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2582;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 2;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 2;
	mov.b64 	%rd2624, {%r1800, %r1799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1801,%dummy}, %rd2588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1802}, %rd2588;
	}
	shf.r.wrap.b32 	%r1803, %r1802, %r1801, 9;
	shf.r.wrap.b32 	%r1804, %r1801, %r1802, 9;
	mov.b64 	%rd2625, {%r1804, %r1803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd2594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd2594;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 25;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 25;
	mov.b64 	%rd2626, {%r1808, %r1807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1809,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1810}, %rd2595;
	}
	shf.r.wrap.b32 	%r1811, %r1810, %r1809, 23;
	shf.r.wrap.b32 	%r1812, %r1809, %r1810, 23;
	mov.b64 	%rd2627, {%r1812, %r1811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd2601;
	}
	shf.l.wrap.b32 	%r1815, %r1814, %r1813, 2;
	shf.l.wrap.b32 	%r1816, %r1813, %r1814, 2;
	mov.b64 	%rd2628, {%r1816, %r1815};
	not.b64 	%rd2629, %rd2605;
	and.b64  	%rd2630, %rd2606, %rd2629;
	xor.b64  	%rd2631, %rd2630, %rd2580;
	not.b64 	%rd2632, %rd2606;
	and.b64  	%rd2633, %rd2607, %rd2632;
	xor.b64  	%rd2634, %rd2633, %rd2605;
	not.b64 	%rd2635, %rd2607;
	and.b64  	%rd2636, %rd2608, %rd2635;
	xor.b64  	%rd2637, %rd2636, %rd2606;
	not.b64 	%rd2638, %rd2608;
	and.b64  	%rd2639, %rd2580, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2607;
	not.b64 	%rd2641, %rd2580;
	and.b64  	%rd2642, %rd2605, %rd2641;
	xor.b64  	%rd2643, %rd2642, %rd2608;
	not.b64 	%rd2644, %rd2610;
	and.b64  	%rd2645, %rd2611, %rd2644;
	xor.b64  	%rd2646, %rd2645, %rd2609;
	not.b64 	%rd2647, %rd2611;
	and.b64  	%rd2648, %rd2612, %rd2647;
	xor.b64  	%rd2649, %rd2648, %rd2610;
	not.b64 	%rd2650, %rd2612;
	and.b64  	%rd2651, %rd2613, %rd2650;
	xor.b64  	%rd2652, %rd2651, %rd2611;
	not.b64 	%rd2653, %rd2613;
	and.b64  	%rd2654, %rd2609, %rd2653;
	xor.b64  	%rd2655, %rd2654, %rd2612;
	not.b64 	%rd2656, %rd2609;
	and.b64  	%rd2657, %rd2610, %rd2656;
	xor.b64  	%rd2658, %rd2657, %rd2613;
	not.b64 	%rd2659, %rd2615;
	and.b64  	%rd2660, %rd2616, %rd2659;
	xor.b64  	%rd2661, %rd2660, %rd2614;
	not.b64 	%rd2662, %rd2616;
	and.b64  	%rd2663, %rd2617, %rd2662;
	xor.b64  	%rd2664, %rd2663, %rd2615;
	not.b64 	%rd2665, %rd2617;
	and.b64  	%rd2666, %rd2618, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2616;
	not.b64 	%rd2668, %rd2618;
	and.b64  	%rd2669, %rd2614, %rd2668;
	xor.b64  	%rd2670, %rd2669, %rd2617;
	not.b64 	%rd2671, %rd2614;
	and.b64  	%rd2672, %rd2615, %rd2671;
	xor.b64  	%rd2673, %rd2672, %rd2618;
	not.b64 	%rd2674, %rd2620;
	and.b64  	%rd2675, %rd2621, %rd2674;
	xor.b64  	%rd2676, %rd2675, %rd2619;
	not.b64 	%rd2677, %rd2621;
	and.b64  	%rd2678, %rd2622, %rd2677;
	xor.b64  	%rd2679, %rd2678, %rd2620;
	not.b64 	%rd2680, %rd2622;
	and.b64  	%rd2681, %rd2623, %rd2680;
	xor.b64  	%rd2682, %rd2681, %rd2621;
	not.b64 	%rd2683, %rd2623;
	and.b64  	%rd2684, %rd2619, %rd2683;
	xor.b64  	%rd2685, %rd2684, %rd2622;
	not.b64 	%rd2686, %rd2619;
	and.b64  	%rd2687, %rd2620, %rd2686;
	xor.b64  	%rd2688, %rd2687, %rd2623;
	not.b64 	%rd2689, %rd2625;
	and.b64  	%rd2690, %rd2626, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2624;
	not.b64 	%rd2692, %rd2626;
	and.b64  	%rd2693, %rd2627, %rd2692;
	xor.b64  	%rd2694, %rd2693, %rd2625;
	not.b64 	%rd2695, %rd2627;
	and.b64  	%rd2696, %rd2628, %rd2695;
	xor.b64  	%rd2697, %rd2696, %rd2626;
	not.b64 	%rd2698, %rd2628;
	and.b64  	%rd2699, %rd2624, %rd2698;
	xor.b64  	%rd2700, %rd2699, %rd2627;
	not.b64 	%rd2701, %rd2624;
	and.b64  	%rd2702, %rd2625, %rd2701;
	xor.b64  	%rd2703, %rd2702, %rd2628;
	xor.b64  	%rd2704, %rd2631, %rd30;
	xor.b64  	%rd2705, %rd2646, %rd2704;
	xor.b64  	%rd2706, %rd2705, %rd2661;
	xor.b64  	%rd2707, %rd2706, %rd2676;
	xor.b64  	%rd2708, %rd2707, %rd2691;
	xor.b64  	%rd2709, %rd2649, %rd2634;
	xor.b64  	%rd2710, %rd2709, %rd2664;
	xor.b64  	%rd2711, %rd2710, %rd2679;
	xor.b64  	%rd2712, %rd2711, %rd2694;
	xor.b64  	%rd2713, %rd2652, %rd2637;
	xor.b64  	%rd2714, %rd2713, %rd2667;
	xor.b64  	%rd2715, %rd2714, %rd2682;
	xor.b64  	%rd2716, %rd2715, %rd2697;
	xor.b64  	%rd2717, %rd2655, %rd2640;
	xor.b64  	%rd2718, %rd2717, %rd2670;
	xor.b64  	%rd2719, %rd2718, %rd2685;
	xor.b64  	%rd2720, %rd2719, %rd2700;
	xor.b64  	%rd2721, %rd2658, %rd2643;
	xor.b64  	%rd2722, %rd2721, %rd2673;
	xor.b64  	%rd2723, %rd2722, %rd2688;
	xor.b64  	%rd2724, %rd2723, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd2712;
	}
	shf.l.wrap.b32 	%r1819, %r1818, %r1817, 1;
	shf.l.wrap.b32 	%r1820, %r1817, %r1818, 1;
	mov.b64 	%rd2725, {%r1820, %r1819};
	xor.b64  	%rd2726, %rd2724, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd2716;
	}
	shf.l.wrap.b32 	%r1823, %r1822, %r1821, 1;
	shf.l.wrap.b32 	%r1824, %r1821, %r1822, 1;
	mov.b64 	%rd2727, {%r1824, %r1823};
	xor.b64  	%rd2728, %rd2727, %rd2708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1825}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd2720;
	}
	shf.l.wrap.b32 	%r1827, %r1826, %r1825, 1;
	shf.l.wrap.b32 	%r1828, %r1825, %r1826, 1;
	mov.b64 	%rd2729, {%r1828, %r1827};
	xor.b64  	%rd2730, %rd2729, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd2724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2724;
	}
	shf.l.wrap.b32 	%r1831, %r1830, %r1829, 1;
	shf.l.wrap.b32 	%r1832, %r1829, %r1830, 1;
	mov.b64 	%rd2731, {%r1832, %r1831};
	xor.b64  	%rd2732, %rd2731, %rd2716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd2708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd2708;
	}
	shf.l.wrap.b32 	%r1835, %r1834, %r1833, 1;
	shf.l.wrap.b32 	%r1836, %r1833, %r1834, 1;
	mov.b64 	%rd2733, {%r1836, %r1835};
	xor.b64  	%rd2734, %rd2720, %rd2733;
	xor.b64  	%rd2735, %rd2726, %rd2704;
	xor.b64  	%rd2736, %rd2728, %rd2634;
	xor.b64  	%rd2737, %rd2730, %rd2637;
	xor.b64  	%rd2738, %rd2732, %rd2640;
	xor.b64  	%rd2739, %rd2734, %rd2643;
	xor.b64  	%rd2740, %rd2726, %rd2646;
	xor.b64  	%rd2741, %rd2728, %rd2649;
	xor.b64  	%rd2742, %rd2730, %rd2652;
	xor.b64  	%rd2743, %rd2732, %rd2655;
	xor.b64  	%rd2744, %rd2734, %rd2658;
	xor.b64  	%rd2745, %rd2726, %rd2661;
	xor.b64  	%rd2746, %rd2728, %rd2664;
	xor.b64  	%rd2747, %rd2730, %rd2667;
	xor.b64  	%rd2748, %rd2732, %rd2670;
	xor.b64  	%rd2749, %rd2734, %rd2673;
	xor.b64  	%rd2750, %rd2726, %rd2676;
	xor.b64  	%rd2751, %rd2728, %rd2679;
	xor.b64  	%rd2752, %rd2730, %rd2682;
	xor.b64  	%rd2753, %rd2732, %rd2685;
	xor.b64  	%rd2754, %rd2734, %rd2688;
	xor.b64  	%rd2755, %rd2726, %rd2691;
	xor.b64  	%rd2756, %rd2728, %rd2694;
	xor.b64  	%rd2757, %rd2730, %rd2697;
	xor.b64  	%rd2758, %rd2732, %rd2700;
	xor.b64  	%rd2759, %rd2734, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd2741;
	}
	shf.r.wrap.b32 	%r1839, %r1838, %r1837, 20;
	shf.r.wrap.b32 	%r1840, %r1837, %r1838, 20;
	mov.b64 	%rd2760, {%r1840, %r1839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd2747;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 21;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 21;
	mov.b64 	%rd2761, {%r1844, %r1843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2753;
	}
	shf.l.wrap.b32 	%r1847, %r1846, %r1845, 21;
	shf.l.wrap.b32 	%r1848, %r1845, %r1846, 21;
	mov.b64 	%rd2762, {%r1848, %r1847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd2759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1850,%dummy}, %rd2759;
	}
	shf.l.wrap.b32 	%r1851, %r1850, %r1849, 14;
	shf.l.wrap.b32 	%r1852, %r1849, %r1850, 14;
	mov.b64 	%rd2763, {%r1852, %r1851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd2738;
	}
	shf.l.wrap.b32 	%r1855, %r1854, %r1853, 28;
	shf.l.wrap.b32 	%r1856, %r1853, %r1854, 28;
	mov.b64 	%rd2764, {%r1856, %r1855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd2744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1858,%dummy}, %rd2744;
	}
	shf.l.wrap.b32 	%r1859, %r1858, %r1857, 20;
	shf.l.wrap.b32 	%r1860, %r1857, %r1858, 20;
	mov.b64 	%rd2765, {%r1860, %r1859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1862,%dummy}, %rd2745;
	}
	shf.l.wrap.b32 	%r1863, %r1862, %r1861, 3;
	shf.l.wrap.b32 	%r1864, %r1861, %r1862, 3;
	mov.b64 	%rd2766, {%r1864, %r1863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1865,%dummy}, %rd2751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1866}, %rd2751;
	}
	shf.r.wrap.b32 	%r1867, %r1866, %r1865, 19;
	shf.r.wrap.b32 	%r1868, %r1865, %r1866, 19;
	mov.b64 	%rd2767, {%r1868, %r1867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1869,%dummy}, %rd2757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1870}, %rd2757;
	}
	shf.r.wrap.b32 	%r1871, %r1870, %r1869, 3;
	shf.r.wrap.b32 	%r1872, %r1869, %r1870, 3;
	mov.b64 	%rd2768, {%r1872, %r1871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd2736;
	}
	shf.l.wrap.b32 	%r1875, %r1874, %r1873, 1;
	shf.l.wrap.b32 	%r1876, %r1873, %r1874, 1;
	mov.b64 	%rd2769, {%r1876, %r1875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd2742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1878,%dummy}, %rd2742;
	}
	shf.l.wrap.b32 	%r1879, %r1878, %r1877, 6;
	shf.l.wrap.b32 	%r1880, %r1877, %r1878, 6;
	mov.b64 	%rd2770, {%r1880, %r1879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1881}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd2748;
	}
	shf.l.wrap.b32 	%r1883, %r1882, %r1881, 25;
	shf.l.wrap.b32 	%r1884, %r1881, %r1882, 25;
	mov.b64 	%rd2771, {%r1884, %r1883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd2754;
	}
	shf.l.wrap.b32 	%r1887, %r1886, %r1885, 8;
	shf.l.wrap.b32 	%r1888, %r1885, %r1886, 8;
	mov.b64 	%rd2772, {%r1888, %r1887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1889}, %rd2755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd2755;
	}
	shf.l.wrap.b32 	%r1891, %r1890, %r1889, 18;
	shf.l.wrap.b32 	%r1892, %r1889, %r1890, 18;
	mov.b64 	%rd2773, {%r1892, %r1891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd2739;
	}
	shf.l.wrap.b32 	%r1895, %r1894, %r1893, 27;
	shf.l.wrap.b32 	%r1896, %r1893, %r1894, 27;
	mov.b64 	%rd2774, {%r1896, %r1895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1897,%dummy}, %rd2740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1898}, %rd2740;
	}
	shf.r.wrap.b32 	%r1899, %r1898, %r1897, 28;
	shf.r.wrap.b32 	%r1900, %r1897, %r1898, 28;
	mov.b64 	%rd2775, {%r1900, %r1899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd2746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd2746;
	}
	shf.l.wrap.b32 	%r1903, %r1902, %r1901, 10;
	shf.l.wrap.b32 	%r1904, %r1901, %r1902, 10;
	mov.b64 	%rd2776, {%r1904, %r1903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1905}, %rd2752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd2752;
	}
	shf.l.wrap.b32 	%r1907, %r1906, %r1905, 15;
	shf.l.wrap.b32 	%r1908, %r1905, %r1906, 15;
	mov.b64 	%rd2777, {%r1908, %r1907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd2758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd2758;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 8;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 8;
	mov.b64 	%rd2778, {%r1912, %r1911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1913,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1914}, %rd2737;
	}
	shf.r.wrap.b32 	%r1915, %r1914, %r1913, 2;
	shf.r.wrap.b32 	%r1916, %r1913, %r1914, 2;
	mov.b64 	%rd2779, {%r1916, %r1915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd2743;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 9;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 9;
	mov.b64 	%rd2780, {%r1920, %r1919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1921,%dummy}, %rd2749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1922}, %rd2749;
	}
	shf.r.wrap.b32 	%r1923, %r1922, %r1921, 25;
	shf.r.wrap.b32 	%r1924, %r1921, %r1922, 25;
	mov.b64 	%rd2781, {%r1924, %r1923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd2750;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 23;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 23;
	mov.b64 	%rd2782, {%r1928, %r1927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1929}, %rd2756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd2756;
	}
	shf.l.wrap.b32 	%r1931, %r1930, %r1929, 2;
	shf.l.wrap.b32 	%r1932, %r1929, %r1930, 2;
	mov.b64 	%rd2783, {%r1932, %r1931};
	not.b64 	%rd2784, %rd2760;
	and.b64  	%rd2785, %rd2761, %rd2784;
	xor.b64  	%rd2786, %rd2785, %rd2735;
	not.b64 	%rd2787, %rd2761;
	and.b64  	%rd2788, %rd2762, %rd2787;
	xor.b64  	%rd2789, %rd2788, %rd2760;
	not.b64 	%rd2790, %rd2762;
	and.b64  	%rd2791, %rd2763, %rd2790;
	xor.b64  	%rd2792, %rd2791, %rd2761;
	not.b64 	%rd2793, %rd2763;
	and.b64  	%rd2794, %rd2735, %rd2793;
	xor.b64  	%rd2795, %rd2794, %rd2762;
	not.b64 	%rd2796, %rd2735;
	and.b64  	%rd2797, %rd2760, %rd2796;
	xor.b64  	%rd2798, %rd2797, %rd2763;
	not.b64 	%rd2799, %rd2765;
	and.b64  	%rd2800, %rd2766, %rd2799;
	xor.b64  	%rd2801, %rd2800, %rd2764;
	not.b64 	%rd2802, %rd2766;
	and.b64  	%rd2803, %rd2767, %rd2802;
	xor.b64  	%rd2804, %rd2803, %rd2765;
	not.b64 	%rd2805, %rd2767;
	and.b64  	%rd2806, %rd2768, %rd2805;
	xor.b64  	%rd2807, %rd2806, %rd2766;
	not.b64 	%rd2808, %rd2768;
	and.b64  	%rd2809, %rd2764, %rd2808;
	xor.b64  	%rd2810, %rd2809, %rd2767;
	not.b64 	%rd2811, %rd2764;
	and.b64  	%rd2812, %rd2765, %rd2811;
	xor.b64  	%rd2813, %rd2812, %rd2768;
	not.b64 	%rd2814, %rd2770;
	and.b64  	%rd2815, %rd2771, %rd2814;
	xor.b64  	%rd2816, %rd2815, %rd2769;
	not.b64 	%rd2817, %rd2771;
	and.b64  	%rd2818, %rd2772, %rd2817;
	xor.b64  	%rd2819, %rd2818, %rd2770;
	not.b64 	%rd2820, %rd2772;
	and.b64  	%rd2821, %rd2773, %rd2820;
	xor.b64  	%rd2822, %rd2821, %rd2771;
	not.b64 	%rd2823, %rd2773;
	and.b64  	%rd2824, %rd2769, %rd2823;
	xor.b64  	%rd2825, %rd2824, %rd2772;
	not.b64 	%rd2826, %rd2769;
	and.b64  	%rd2827, %rd2770, %rd2826;
	xor.b64  	%rd2828, %rd2827, %rd2773;
	not.b64 	%rd2829, %rd2775;
	and.b64  	%rd2830, %rd2776, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2774;
	not.b64 	%rd2832, %rd2776;
	and.b64  	%rd2833, %rd2777, %rd2832;
	xor.b64  	%rd2834, %rd2833, %rd2775;
	not.b64 	%rd2835, %rd2777;
	and.b64  	%rd2836, %rd2778, %rd2835;
	xor.b64  	%rd2837, %rd2836, %rd2776;
	not.b64 	%rd2838, %rd2778;
	and.b64  	%rd2839, %rd2774, %rd2838;
	xor.b64  	%rd2840, %rd2839, %rd2777;
	not.b64 	%rd2841, %rd2774;
	and.b64  	%rd2842, %rd2775, %rd2841;
	xor.b64  	%rd2843, %rd2842, %rd2778;
	not.b64 	%rd2844, %rd2780;
	and.b64  	%rd2845, %rd2781, %rd2844;
	xor.b64  	%rd2846, %rd2845, %rd2779;
	not.b64 	%rd2847, %rd2781;
	and.b64  	%rd2848, %rd2782, %rd2847;
	xor.b64  	%rd2849, %rd2848, %rd2780;
	not.b64 	%rd2850, %rd2782;
	and.b64  	%rd2851, %rd2783, %rd2850;
	xor.b64  	%rd2852, %rd2851, %rd2781;
	not.b64 	%rd2853, %rd2783;
	and.b64  	%rd2854, %rd2779, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd2782;
	not.b64 	%rd2856, %rd2779;
	and.b64  	%rd2857, %rd2780, %rd2856;
	xor.b64  	%rd2858, %rd2857, %rd2783;
	xor.b64  	%rd2859, %rd2786, %rd31;
	xor.b64  	%rd2860, %rd2801, %rd2859;
	xor.b64  	%rd2861, %rd2860, %rd2816;
	xor.b64  	%rd2862, %rd2861, %rd2831;
	xor.b64  	%rd2863, %rd2862, %rd2846;
	xor.b64  	%rd2864, %rd2804, %rd2789;
	xor.b64  	%rd2865, %rd2864, %rd2819;
	xor.b64  	%rd2866, %rd2865, %rd2834;
	xor.b64  	%rd2867, %rd2866, %rd2849;
	xor.b64  	%rd2868, %rd2807, %rd2792;
	xor.b64  	%rd2869, %rd2868, %rd2822;
	xor.b64  	%rd2870, %rd2869, %rd2837;
	xor.b64  	%rd2871, %rd2870, %rd2852;
	xor.b64  	%rd2872, %rd2810, %rd2795;
	xor.b64  	%rd2873, %rd2872, %rd2825;
	xor.b64  	%rd2874, %rd2873, %rd2840;
	xor.b64  	%rd2875, %rd2874, %rd2855;
	xor.b64  	%rd2876, %rd2813, %rd2798;
	xor.b64  	%rd2877, %rd2876, %rd2828;
	xor.b64  	%rd2878, %rd2877, %rd2843;
	xor.b64  	%rd2879, %rd2878, %rd2858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd2867;
	}
	shf.l.wrap.b32 	%r1935, %r1934, %r1933, 1;
	shf.l.wrap.b32 	%r1936, %r1933, %r1934, 1;
	mov.b64 	%rd2880, {%r1936, %r1935};
	xor.b64  	%rd2881, %rd2879, %rd2880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1937}, %rd2871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1938,%dummy}, %rd2871;
	}
	shf.l.wrap.b32 	%r1939, %r1938, %r1937, 1;
	shf.l.wrap.b32 	%r1940, %r1937, %r1938, 1;
	mov.b64 	%rd2882, {%r1940, %r1939};
	xor.b64  	%rd2883, %rd2882, %rd2863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd2875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd2875;
	}
	shf.l.wrap.b32 	%r1943, %r1942, %r1941, 1;
	shf.l.wrap.b32 	%r1944, %r1941, %r1942, 1;
	mov.b64 	%rd2884, {%r1944, %r1943};
	xor.b64  	%rd2885, %rd2884, %rd2867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1945}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1946,%dummy}, %rd2879;
	}
	shf.l.wrap.b32 	%r1947, %r1946, %r1945, 1;
	shf.l.wrap.b32 	%r1948, %r1945, %r1946, 1;
	mov.b64 	%rd2886, {%r1948, %r1947};
	xor.b64  	%rd2887, %rd2886, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd2863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2863;
	}
	shf.l.wrap.b32 	%r1951, %r1950, %r1949, 1;
	shf.l.wrap.b32 	%r1952, %r1949, %r1950, 1;
	mov.b64 	%rd2888, {%r1952, %r1951};
	xor.b64  	%rd2889, %rd2875, %rd2888;
	xor.b64  	%rd2890, %rd2881, %rd2859;
	xor.b64  	%rd2891, %rd2883, %rd2789;
	xor.b64  	%rd2892, %rd2885, %rd2792;
	xor.b64  	%rd2893, %rd2887, %rd2795;
	xor.b64  	%rd2894, %rd2889, %rd2798;
	xor.b64  	%rd2895, %rd2881, %rd2801;
	xor.b64  	%rd2896, %rd2883, %rd2804;
	xor.b64  	%rd2897, %rd2885, %rd2807;
	xor.b64  	%rd2898, %rd2887, %rd2810;
	xor.b64  	%rd2899, %rd2889, %rd2813;
	xor.b64  	%rd2900, %rd2881, %rd2816;
	xor.b64  	%rd2901, %rd2883, %rd2819;
	xor.b64  	%rd2902, %rd2885, %rd2822;
	xor.b64  	%rd2903, %rd2887, %rd2825;
	xor.b64  	%rd2904, %rd2889, %rd2828;
	xor.b64  	%rd2905, %rd2881, %rd2831;
	xor.b64  	%rd2906, %rd2883, %rd2834;
	xor.b64  	%rd2907, %rd2885, %rd2837;
	xor.b64  	%rd2908, %rd2887, %rd2840;
	xor.b64  	%rd2909, %rd2889, %rd2843;
	xor.b64  	%rd2910, %rd2881, %rd2846;
	xor.b64  	%rd2911, %rd2883, %rd2849;
	xor.b64  	%rd2912, %rd2885, %rd2852;
	xor.b64  	%rd2913, %rd2887, %rd2855;
	xor.b64  	%rd2914, %rd2889, %rd2858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd2896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd2896;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 20;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 20;
	mov.b64 	%rd2915, {%r1956, %r1955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd2902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1958}, %rd2902;
	}
	shf.r.wrap.b32 	%r1959, %r1958, %r1957, 21;
	shf.r.wrap.b32 	%r1960, %r1957, %r1958, 21;
	mov.b64 	%rd2916, {%r1960, %r1959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd2908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd2908;
	}
	shf.l.wrap.b32 	%r1963, %r1962, %r1961, 21;
	shf.l.wrap.b32 	%r1964, %r1961, %r1962, 21;
	mov.b64 	%rd2917, {%r1964, %r1963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd2914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1966,%dummy}, %rd2914;
	}
	shf.l.wrap.b32 	%r1967, %r1966, %r1965, 14;
	shf.l.wrap.b32 	%r1968, %r1965, %r1966, 14;
	mov.b64 	%rd2918, {%r1968, %r1967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd2893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd2893;
	}
	shf.l.wrap.b32 	%r1971, %r1970, %r1969, 28;
	shf.l.wrap.b32 	%r1972, %r1969, %r1970, 28;
	mov.b64 	%rd2919, {%r1972, %r1971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd2899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1974,%dummy}, %rd2899;
	}
	shf.l.wrap.b32 	%r1975, %r1974, %r1973, 20;
	shf.l.wrap.b32 	%r1976, %r1973, %r1974, 20;
	mov.b64 	%rd2920, {%r1976, %r1975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd2900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd2900;
	}
	shf.l.wrap.b32 	%r1979, %r1978, %r1977, 3;
	shf.l.wrap.b32 	%r1980, %r1977, %r1978, 3;
	mov.b64 	%rd2921, {%r1980, %r1979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd2906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd2906;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 19;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 19;
	mov.b64 	%rd2922, {%r1984, %r1983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1985,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1986}, %rd2912;
	}
	shf.r.wrap.b32 	%r1987, %r1986, %r1985, 3;
	shf.r.wrap.b32 	%r1988, %r1985, %r1986, 3;
	mov.b64 	%rd2923, {%r1988, %r1987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd2891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1990,%dummy}, %rd2891;
	}
	shf.l.wrap.b32 	%r1991, %r1990, %r1989, 1;
	shf.l.wrap.b32 	%r1992, %r1989, %r1990, 1;
	mov.b64 	%rd2924, {%r1992, %r1991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1993}, %rd2897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2897;
	}
	shf.l.wrap.b32 	%r1995, %r1994, %r1993, 6;
	shf.l.wrap.b32 	%r1996, %r1993, %r1994, 6;
	mov.b64 	%rd2925, {%r1996, %r1995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd2903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1998,%dummy}, %rd2903;
	}
	shf.l.wrap.b32 	%r1999, %r1998, %r1997, 25;
	shf.l.wrap.b32 	%r2000, %r1997, %r1998, 25;
	mov.b64 	%rd2926, {%r2000, %r1999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2909;
	}
	shf.l.wrap.b32 	%r2003, %r2002, %r2001, 8;
	shf.l.wrap.b32 	%r2004, %r2001, %r2002, 8;
	mov.b64 	%rd2927, {%r2004, %r2003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd2910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2006,%dummy}, %rd2910;
	}
	shf.l.wrap.b32 	%r2007, %r2006, %r2005, 18;
	shf.l.wrap.b32 	%r2008, %r2005, %r2006, 18;
	mov.b64 	%rd2928, {%r2008, %r2007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2009}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2894;
	}
	shf.l.wrap.b32 	%r2011, %r2010, %r2009, 27;
	shf.l.wrap.b32 	%r2012, %r2009, %r2010, 27;
	mov.b64 	%rd2929, {%r2012, %r2011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd2895;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 28;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 28;
	mov.b64 	%rd2930, {%r2016, %r2015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2017}, %rd2901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd2901;
	}
	shf.l.wrap.b32 	%r2019, %r2018, %r2017, 10;
	shf.l.wrap.b32 	%r2020, %r2017, %r2018, 10;
	mov.b64 	%rd2931, {%r2020, %r2019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2022,%dummy}, %rd2907;
	}
	shf.l.wrap.b32 	%r2023, %r2022, %r2021, 15;
	shf.l.wrap.b32 	%r2024, %r2021, %r2022, 15;
	mov.b64 	%rd2932, {%r2024, %r2023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2025,%dummy}, %rd2913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2026}, %rd2913;
	}
	shf.r.wrap.b32 	%r2027, %r2026, %r2025, 8;
	shf.r.wrap.b32 	%r2028, %r2025, %r2026, 8;
	mov.b64 	%rd2933, {%r2028, %r2027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2029,%dummy}, %rd2892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2030}, %rd2892;
	}
	shf.r.wrap.b32 	%r2031, %r2030, %r2029, 2;
	shf.r.wrap.b32 	%r2032, %r2029, %r2030, 2;
	mov.b64 	%rd2934, {%r2032, %r2031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2033,%dummy}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2034}, %rd2898;
	}
	shf.r.wrap.b32 	%r2035, %r2034, %r2033, 9;
	shf.r.wrap.b32 	%r2036, %r2033, %r2034, 9;
	mov.b64 	%rd2935, {%r2036, %r2035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd2904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd2904;
	}
	shf.r.wrap.b32 	%r2039, %r2038, %r2037, 25;
	shf.r.wrap.b32 	%r2040, %r2037, %r2038, 25;
	mov.b64 	%rd2936, {%r2040, %r2039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2041,%dummy}, %rd2905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2042}, %rd2905;
	}
	shf.r.wrap.b32 	%r2043, %r2042, %r2041, 23;
	shf.r.wrap.b32 	%r2044, %r2041, %r2042, 23;
	mov.b64 	%rd2937, {%r2044, %r2043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2046,%dummy}, %rd2911;
	}
	shf.l.wrap.b32 	%r2047, %r2046, %r2045, 2;
	shf.l.wrap.b32 	%r2048, %r2045, %r2046, 2;
	mov.b64 	%rd2938, {%r2048, %r2047};
	not.b64 	%rd2939, %rd2915;
	and.b64  	%rd2940, %rd2916, %rd2939;
	xor.b64  	%rd2941, %rd2940, %rd2890;
	not.b64 	%rd2942, %rd2916;
	and.b64  	%rd2943, %rd2917, %rd2942;
	xor.b64  	%rd2944, %rd2943, %rd2915;
	not.b64 	%rd2945, %rd2917;
	and.b64  	%rd2946, %rd2918, %rd2945;
	xor.b64  	%rd2947, %rd2946, %rd2916;
	not.b64 	%rd2948, %rd2918;
	and.b64  	%rd2949, %rd2890, %rd2948;
	xor.b64  	%rd2950, %rd2949, %rd2917;
	not.b64 	%rd2951, %rd2890;
	and.b64  	%rd2952, %rd2915, %rd2951;
	xor.b64  	%rd2953, %rd2952, %rd2918;
	not.b64 	%rd2954, %rd2920;
	and.b64  	%rd2955, %rd2921, %rd2954;
	xor.b64  	%rd2956, %rd2955, %rd2919;
	not.b64 	%rd2957, %rd2921;
	and.b64  	%rd2958, %rd2922, %rd2957;
	xor.b64  	%rd2959, %rd2958, %rd2920;
	not.b64 	%rd2960, %rd2922;
	and.b64  	%rd2961, %rd2923, %rd2960;
	xor.b64  	%rd2962, %rd2961, %rd2921;
	not.b64 	%rd2963, %rd2923;
	and.b64  	%rd2964, %rd2919, %rd2963;
	xor.b64  	%rd2965, %rd2964, %rd2922;
	not.b64 	%rd2966, %rd2919;
	and.b64  	%rd2967, %rd2920, %rd2966;
	xor.b64  	%rd2968, %rd2967, %rd2923;
	not.b64 	%rd2969, %rd2925;
	and.b64  	%rd2970, %rd2926, %rd2969;
	xor.b64  	%rd2971, %rd2970, %rd2924;
	not.b64 	%rd2972, %rd2926;
	and.b64  	%rd2973, %rd2927, %rd2972;
	xor.b64  	%rd2974, %rd2973, %rd2925;
	not.b64 	%rd2975, %rd2927;
	and.b64  	%rd2976, %rd2928, %rd2975;
	xor.b64  	%rd2977, %rd2976, %rd2926;
	not.b64 	%rd2978, %rd2928;
	and.b64  	%rd2979, %rd2924, %rd2978;
	xor.b64  	%rd2980, %rd2979, %rd2927;
	not.b64 	%rd2981, %rd2924;
	and.b64  	%rd2982, %rd2925, %rd2981;
	xor.b64  	%rd2983, %rd2982, %rd2928;
	not.b64 	%rd2984, %rd2930;
	and.b64  	%rd2985, %rd2931, %rd2984;
	xor.b64  	%rd2986, %rd2985, %rd2929;
	not.b64 	%rd2987, %rd2931;
	and.b64  	%rd2988, %rd2932, %rd2987;
	xor.b64  	%rd2989, %rd2988, %rd2930;
	not.b64 	%rd2990, %rd2932;
	and.b64  	%rd2991, %rd2933, %rd2990;
	xor.b64  	%rd2992, %rd2991, %rd2931;
	not.b64 	%rd2993, %rd2933;
	and.b64  	%rd2994, %rd2929, %rd2993;
	xor.b64  	%rd2995, %rd2994, %rd2932;
	not.b64 	%rd2996, %rd2929;
	and.b64  	%rd2997, %rd2930, %rd2996;
	xor.b64  	%rd2998, %rd2997, %rd2933;
	not.b64 	%rd2999, %rd2935;
	and.b64  	%rd3000, %rd2936, %rd2999;
	xor.b64  	%rd3001, %rd3000, %rd2934;
	not.b64 	%rd3002, %rd2936;
	and.b64  	%rd3003, %rd2937, %rd3002;
	xor.b64  	%rd3004, %rd3003, %rd2935;
	not.b64 	%rd3005, %rd2937;
	and.b64  	%rd3006, %rd2938, %rd3005;
	xor.b64  	%rd3007, %rd3006, %rd2936;
	not.b64 	%rd3008, %rd2938;
	and.b64  	%rd3009, %rd2934, %rd3008;
	xor.b64  	%rd3010, %rd3009, %rd2937;
	not.b64 	%rd3011, %rd2934;
	and.b64  	%rd3012, %rd2935, %rd3011;
	xor.b64  	%rd3013, %rd3012, %rd2938;
	xor.b64  	%rd3014, %rd2941, %rd32;
	xor.b64  	%rd3015, %rd2956, %rd3014;
	xor.b64  	%rd3016, %rd3015, %rd2971;
	xor.b64  	%rd3017, %rd3016, %rd2986;
	xor.b64  	%rd3018, %rd3017, %rd3001;
	xor.b64  	%rd3019, %rd2959, %rd2944;
	xor.b64  	%rd3020, %rd3019, %rd2974;
	xor.b64  	%rd3021, %rd3020, %rd2989;
	xor.b64  	%rd3022, %rd3021, %rd3004;
	xor.b64  	%rd3023, %rd2962, %rd2947;
	xor.b64  	%rd3024, %rd3023, %rd2977;
	xor.b64  	%rd3025, %rd3024, %rd2992;
	xor.b64  	%rd3026, %rd3025, %rd3007;
	xor.b64  	%rd3027, %rd2965, %rd2950;
	xor.b64  	%rd3028, %rd3027, %rd2980;
	xor.b64  	%rd3029, %rd3028, %rd2995;
	xor.b64  	%rd3030, %rd3029, %rd3010;
	xor.b64  	%rd3031, %rd2968, %rd2953;
	xor.b64  	%rd3032, %rd3031, %rd2983;
	xor.b64  	%rd3033, %rd3032, %rd2998;
	xor.b64  	%rd3034, %rd3033, %rd3013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2049}, %rd3022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd3022;
	}
	shf.l.wrap.b32 	%r2051, %r2050, %r2049, 1;
	shf.l.wrap.b32 	%r2052, %r2049, %r2050, 1;
	mov.b64 	%rd3035, {%r2052, %r2051};
	xor.b64  	%rd3036, %rd3034, %rd3035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2053}, %rd3026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd3026;
	}
	shf.l.wrap.b32 	%r2055, %r2054, %r2053, 1;
	shf.l.wrap.b32 	%r2056, %r2053, %r2054, 1;
	mov.b64 	%rd3037, {%r2056, %r2055};
	xor.b64  	%rd3038, %rd3037, %rd3018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2057}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2058,%dummy}, %rd3030;
	}
	shf.l.wrap.b32 	%r2059, %r2058, %r2057, 1;
	shf.l.wrap.b32 	%r2060, %r2057, %r2058, 1;
	mov.b64 	%rd3039, {%r2060, %r2059};
	xor.b64  	%rd3040, %rd3039, %rd3022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd3034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2062,%dummy}, %rd3034;
	}
	shf.l.wrap.b32 	%r2063, %r2062, %r2061, 1;
	shf.l.wrap.b32 	%r2064, %r2061, %r2062, 1;
	mov.b64 	%rd3041, {%r2064, %r2063};
	xor.b64  	%rd3042, %rd3041, %rd3026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd3018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2066,%dummy}, %rd3018;
	}
	shf.l.wrap.b32 	%r2067, %r2066, %r2065, 1;
	shf.l.wrap.b32 	%r2068, %r2065, %r2066, 1;
	mov.b64 	%rd3043, {%r2068, %r2067};
	xor.b64  	%rd3044, %rd3030, %rd3043;
	xor.b64  	%rd3045, %rd3036, %rd3014;
	xor.b64  	%rd3046, %rd3038, %rd2944;
	xor.b64  	%rd3047, %rd3040, %rd2947;
	xor.b64  	%rd3048, %rd3042, %rd2950;
	xor.b64  	%rd3049, %rd3044, %rd2953;
	xor.b64  	%rd3050, %rd3036, %rd2956;
	xor.b64  	%rd3051, %rd3038, %rd2959;
	xor.b64  	%rd3052, %rd3040, %rd2962;
	xor.b64  	%rd3053, %rd3042, %rd2965;
	xor.b64  	%rd3054, %rd3044, %rd2968;
	xor.b64  	%rd3055, %rd3036, %rd2971;
	xor.b64  	%rd3056, %rd3038, %rd2974;
	xor.b64  	%rd3057, %rd3040, %rd2977;
	xor.b64  	%rd3058, %rd3042, %rd2980;
	xor.b64  	%rd3059, %rd3044, %rd2983;
	xor.b64  	%rd3060, %rd3036, %rd2986;
	xor.b64  	%rd3061, %rd3038, %rd2989;
	xor.b64  	%rd3062, %rd3040, %rd2992;
	xor.b64  	%rd3063, %rd3042, %rd2995;
	xor.b64  	%rd3064, %rd3044, %rd2998;
	xor.b64  	%rd3065, %rd3036, %rd3001;
	xor.b64  	%rd3066, %rd3038, %rd3004;
	xor.b64  	%rd3067, %rd3040, %rd3007;
	xor.b64  	%rd3068, %rd3042, %rd3010;
	xor.b64  	%rd3069, %rd3044, %rd3013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd3051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2070}, %rd3051;
	}
	shf.r.wrap.b32 	%r2071, %r2070, %r2069, 20;
	shf.r.wrap.b32 	%r2072, %r2069, %r2070, 20;
	mov.b64 	%rd3070, {%r2072, %r2071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2073,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2074}, %rd3057;
	}
	shf.r.wrap.b32 	%r2075, %r2074, %r2073, 21;
	shf.r.wrap.b32 	%r2076, %r2073, %r2074, 21;
	mov.b64 	%rd3071, {%r2076, %r2075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2077}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2078,%dummy}, %rd3063;
	}
	shf.l.wrap.b32 	%r2079, %r2078, %r2077, 21;
	shf.l.wrap.b32 	%r2080, %r2077, %r2078, 21;
	mov.b64 	%rd3072, {%r2080, %r2079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd3069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2082,%dummy}, %rd3069;
	}
	shf.l.wrap.b32 	%r2083, %r2082, %r2081, 14;
	shf.l.wrap.b32 	%r2084, %r2081, %r2082, 14;
	mov.b64 	%rd3073, {%r2084, %r2083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd3048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2086,%dummy}, %rd3048;
	}
	shf.l.wrap.b32 	%r2087, %r2086, %r2085, 28;
	shf.l.wrap.b32 	%r2088, %r2085, %r2086, 28;
	mov.b64 	%rd3074, {%r2088, %r2087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2089}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd3054;
	}
	shf.l.wrap.b32 	%r2091, %r2090, %r2089, 20;
	shf.l.wrap.b32 	%r2092, %r2089, %r2090, 20;
	mov.b64 	%rd3075, {%r2092, %r2091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2093}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2094,%dummy}, %rd3055;
	}
	shf.l.wrap.b32 	%r2095, %r2094, %r2093, 3;
	shf.l.wrap.b32 	%r2096, %r2093, %r2094, 3;
	mov.b64 	%rd3076, {%r2096, %r2095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2097,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2098}, %rd3061;
	}
	shf.r.wrap.b32 	%r2099, %r2098, %r2097, 19;
	shf.r.wrap.b32 	%r2100, %r2097, %r2098, 19;
	mov.b64 	%rd3077, {%r2100, %r2099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd3067;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 3;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 3;
	mov.b64 	%rd3078, {%r2104, %r2103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2105}, %rd3046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd3046;
	}
	shf.l.wrap.b32 	%r2107, %r2106, %r2105, 1;
	shf.l.wrap.b32 	%r2108, %r2105, %r2106, 1;
	mov.b64 	%rd3079, {%r2108, %r2107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2109}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2110,%dummy}, %rd3052;
	}
	shf.l.wrap.b32 	%r2111, %r2110, %r2109, 6;
	shf.l.wrap.b32 	%r2112, %r2109, %r2110, 6;
	mov.b64 	%rd3080, {%r2112, %r2111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2113}, %rd3058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd3058;
	}
	shf.l.wrap.b32 	%r2115, %r2114, %r2113, 25;
	shf.l.wrap.b32 	%r2116, %r2113, %r2114, 25;
	mov.b64 	%rd3081, {%r2116, %r2115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2117}, %rd3064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2118,%dummy}, %rd3064;
	}
	shf.l.wrap.b32 	%r2119, %r2118, %r2117, 8;
	shf.l.wrap.b32 	%r2120, %r2117, %r2118, 8;
	mov.b64 	%rd3082, {%r2120, %r2119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2121}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd3065;
	}
	shf.l.wrap.b32 	%r2123, %r2122, %r2121, 18;
	shf.l.wrap.b32 	%r2124, %r2121, %r2122, 18;
	mov.b64 	%rd3083, {%r2124, %r2123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2125}, %rd3049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2126,%dummy}, %rd3049;
	}
	shf.l.wrap.b32 	%r2127, %r2126, %r2125, 27;
	shf.l.wrap.b32 	%r2128, %r2125, %r2126, 27;
	mov.b64 	%rd3084, {%r2128, %r2127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2129,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2130}, %rd3050;
	}
	shf.r.wrap.b32 	%r2131, %r2130, %r2129, 28;
	shf.r.wrap.b32 	%r2132, %r2129, %r2130, 28;
	mov.b64 	%rd3085, {%r2132, %r2131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd3056;
	}
	shf.l.wrap.b32 	%r2135, %r2134, %r2133, 10;
	shf.l.wrap.b32 	%r2136, %r2133, %r2134, 10;
	mov.b64 	%rd3086, {%r2136, %r2135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2137}, %rd3062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2138,%dummy}, %rd3062;
	}
	shf.l.wrap.b32 	%r2139, %r2138, %r2137, 15;
	shf.l.wrap.b32 	%r2140, %r2137, %r2138, 15;
	mov.b64 	%rd3087, {%r2140, %r2139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd3068;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 8;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 8;
	mov.b64 	%rd3088, {%r2144, %r2143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2145,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2146}, %rd3047;
	}
	shf.r.wrap.b32 	%r2147, %r2146, %r2145, 2;
	shf.r.wrap.b32 	%r2148, %r2145, %r2146, 2;
	mov.b64 	%rd3089, {%r2148, %r2147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd3053;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 9;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 9;
	mov.b64 	%rd3090, {%r2152, %r2151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2153,%dummy}, %rd3059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2154}, %rd3059;
	}
	shf.r.wrap.b32 	%r2155, %r2154, %r2153, 25;
	shf.r.wrap.b32 	%r2156, %r2153, %r2154, 25;
	mov.b64 	%rd3091, {%r2156, %r2155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd3060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd3060;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 23;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 23;
	mov.b64 	%rd3092, {%r2160, %r2159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd3066;
	}
	shf.l.wrap.b32 	%r2163, %r2162, %r2161, 2;
	shf.l.wrap.b32 	%r2164, %r2161, %r2162, 2;
	mov.b64 	%rd3093, {%r2164, %r2163};
	not.b64 	%rd3094, %rd3070;
	and.b64  	%rd3095, %rd3071, %rd3094;
	xor.b64  	%rd3096, %rd3095, %rd3045;
	not.b64 	%rd3097, %rd3071;
	and.b64  	%rd3098, %rd3072, %rd3097;
	xor.b64  	%rd3099, %rd3098, %rd3070;
	not.b64 	%rd3100, %rd3072;
	and.b64  	%rd3101, %rd3073, %rd3100;
	xor.b64  	%rd3102, %rd3101, %rd3071;
	not.b64 	%rd3103, %rd3073;
	and.b64  	%rd3104, %rd3045, %rd3103;
	xor.b64  	%rd3105, %rd3104, %rd3072;
	not.b64 	%rd3106, %rd3045;
	and.b64  	%rd3107, %rd3070, %rd3106;
	xor.b64  	%rd3108, %rd3107, %rd3073;
	not.b64 	%rd3109, %rd3075;
	and.b64  	%rd3110, %rd3076, %rd3109;
	xor.b64  	%rd3111, %rd3110, %rd3074;
	not.b64 	%rd3112, %rd3076;
	and.b64  	%rd3113, %rd3077, %rd3112;
	xor.b64  	%rd3114, %rd3113, %rd3075;
	not.b64 	%rd3115, %rd3077;
	and.b64  	%rd3116, %rd3078, %rd3115;
	xor.b64  	%rd3117, %rd3116, %rd3076;
	not.b64 	%rd3118, %rd3078;
	and.b64  	%rd3119, %rd3074, %rd3118;
	xor.b64  	%rd3120, %rd3119, %rd3077;
	not.b64 	%rd3121, %rd3074;
	and.b64  	%rd3122, %rd3075, %rd3121;
	xor.b64  	%rd3123, %rd3122, %rd3078;
	not.b64 	%rd3124, %rd3080;
	and.b64  	%rd3125, %rd3081, %rd3124;
	xor.b64  	%rd3126, %rd3125, %rd3079;
	not.b64 	%rd3127, %rd3081;
	and.b64  	%rd3128, %rd3082, %rd3127;
	xor.b64  	%rd3129, %rd3128, %rd3080;
	not.b64 	%rd3130, %rd3082;
	and.b64  	%rd3131, %rd3083, %rd3130;
	xor.b64  	%rd3132, %rd3131, %rd3081;
	not.b64 	%rd3133, %rd3083;
	and.b64  	%rd3134, %rd3079, %rd3133;
	xor.b64  	%rd3135, %rd3134, %rd3082;
	not.b64 	%rd3136, %rd3079;
	and.b64  	%rd3137, %rd3080, %rd3136;
	xor.b64  	%rd3138, %rd3137, %rd3083;
	not.b64 	%rd3139, %rd3085;
	and.b64  	%rd3140, %rd3086, %rd3139;
	xor.b64  	%rd3141, %rd3140, %rd3084;
	not.b64 	%rd3142, %rd3086;
	and.b64  	%rd3143, %rd3087, %rd3142;
	xor.b64  	%rd3144, %rd3143, %rd3085;
	not.b64 	%rd3145, %rd3087;
	and.b64  	%rd3146, %rd3088, %rd3145;
	xor.b64  	%rd3147, %rd3146, %rd3086;
	not.b64 	%rd3148, %rd3088;
	and.b64  	%rd3149, %rd3084, %rd3148;
	xor.b64  	%rd3150, %rd3149, %rd3087;
	not.b64 	%rd3151, %rd3084;
	and.b64  	%rd3152, %rd3085, %rd3151;
	xor.b64  	%rd3153, %rd3152, %rd3088;
	not.b64 	%rd3154, %rd3090;
	and.b64  	%rd3155, %rd3091, %rd3154;
	xor.b64  	%rd3156, %rd3155, %rd3089;
	not.b64 	%rd3157, %rd3091;
	and.b64  	%rd3158, %rd3092, %rd3157;
	xor.b64  	%rd3159, %rd3158, %rd3090;
	not.b64 	%rd3160, %rd3092;
	and.b64  	%rd3161, %rd3093, %rd3160;
	xor.b64  	%rd3162, %rd3161, %rd3091;
	not.b64 	%rd3163, %rd3093;
	and.b64  	%rd3164, %rd3089, %rd3163;
	xor.b64  	%rd3165, %rd3164, %rd3092;
	not.b64 	%rd3166, %rd3089;
	and.b64  	%rd3167, %rd3090, %rd3166;
	xor.b64  	%rd3168, %rd3167, %rd3093;
	xor.b64  	%rd3169, %rd3096, %rd33;
	xor.b64  	%rd3170, %rd3111, %rd3169;
	xor.b64  	%rd3171, %rd3170, %rd3126;
	xor.b64  	%rd3172, %rd3171, %rd3141;
	xor.b64  	%rd3173, %rd3172, %rd3156;
	xor.b64  	%rd3174, %rd3114, %rd3099;
	xor.b64  	%rd3175, %rd3174, %rd3129;
	xor.b64  	%rd3176, %rd3175, %rd3144;
	xor.b64  	%rd3177, %rd3176, %rd3159;
	xor.b64  	%rd3178, %rd3117, %rd3102;
	xor.b64  	%rd3179, %rd3178, %rd3132;
	xor.b64  	%rd3180, %rd3179, %rd3147;
	xor.b64  	%rd3181, %rd3180, %rd3162;
	xor.b64  	%rd3182, %rd3120, %rd3105;
	xor.b64  	%rd3183, %rd3182, %rd3135;
	xor.b64  	%rd3184, %rd3183, %rd3150;
	xor.b64  	%rd3185, %rd3184, %rd3165;
	xor.b64  	%rd3186, %rd3123, %rd3108;
	xor.b64  	%rd3187, %rd3186, %rd3138;
	xor.b64  	%rd3188, %rd3187, %rd3153;
	xor.b64  	%rd3189, %rd3188, %rd3168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2165}, %rd3177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd3177;
	}
	shf.l.wrap.b32 	%r2167, %r2166, %r2165, 1;
	shf.l.wrap.b32 	%r2168, %r2165, %r2166, 1;
	mov.b64 	%rd3190, {%r2168, %r2167};
	xor.b64  	%rd3191, %rd3189, %rd3190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2169}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd3181;
	}
	shf.l.wrap.b32 	%r2171, %r2170, %r2169, 1;
	shf.l.wrap.b32 	%r2172, %r2169, %r2170, 1;
	mov.b64 	%rd3192, {%r2172, %r2171};
	xor.b64  	%rd3193, %rd3192, %rd3173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2173}, %rd3185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd3185;
	}
	shf.l.wrap.b32 	%r2175, %r2174, %r2173, 1;
	shf.l.wrap.b32 	%r2176, %r2173, %r2174, 1;
	mov.b64 	%rd3194, {%r2176, %r2175};
	xor.b64  	%rd3195, %rd3194, %rd3177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2177}, %rd3189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2178,%dummy}, %rd3189;
	}
	shf.l.wrap.b32 	%r2179, %r2178, %r2177, 1;
	shf.l.wrap.b32 	%r2180, %r2177, %r2178, 1;
	mov.b64 	%rd3196, {%r2180, %r2179};
	xor.b64  	%rd3197, %rd3196, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2181}, %rd3173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd3173;
	}
	shf.l.wrap.b32 	%r2183, %r2182, %r2181, 1;
	shf.l.wrap.b32 	%r2184, %r2181, %r2182, 1;
	mov.b64 	%rd3198, {%r2184, %r2183};
	xor.b64  	%rd3199, %rd3185, %rd3198;
	xor.b64  	%rd3200, %rd3191, %rd3169;
	xor.b64  	%rd3201, %rd3193, %rd3099;
	xor.b64  	%rd3202, %rd3195, %rd3102;
	xor.b64  	%rd3203, %rd3197, %rd3105;
	xor.b64  	%rd3204, %rd3199, %rd3108;
	xor.b64  	%rd3205, %rd3191, %rd3111;
	xor.b64  	%rd3206, %rd3193, %rd3114;
	xor.b64  	%rd3207, %rd3195, %rd3117;
	xor.b64  	%rd3208, %rd3197, %rd3120;
	xor.b64  	%rd3209, %rd3199, %rd3123;
	xor.b64  	%rd3210, %rd3191, %rd3126;
	xor.b64  	%rd3211, %rd3193, %rd3129;
	xor.b64  	%rd3212, %rd3195, %rd3132;
	xor.b64  	%rd3213, %rd3197, %rd3135;
	xor.b64  	%rd3214, %rd3199, %rd3138;
	xor.b64  	%rd3215, %rd3191, %rd3141;
	xor.b64  	%rd3216, %rd3193, %rd3144;
	xor.b64  	%rd3217, %rd3195, %rd3147;
	xor.b64  	%rd3218, %rd3197, %rd3150;
	xor.b64  	%rd3219, %rd3199, %rd3153;
	xor.b64  	%rd3220, %rd3191, %rd3156;
	xor.b64  	%rd3221, %rd3193, %rd3159;
	xor.b64  	%rd3222, %rd3195, %rd3162;
	xor.b64  	%rd3223, %rd3197, %rd3165;
	xor.b64  	%rd3224, %rd3199, %rd3168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2185,%dummy}, %rd3206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2186}, %rd3206;
	}
	shf.r.wrap.b32 	%r2187, %r2186, %r2185, 20;
	shf.r.wrap.b32 	%r2188, %r2185, %r2186, 20;
	mov.b64 	%rd3225, {%r2188, %r2187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd3212;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 21;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 21;
	mov.b64 	%rd3226, {%r2192, %r2191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2193}, %rd3218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2194,%dummy}, %rd3218;
	}
	shf.l.wrap.b32 	%r2195, %r2194, %r2193, 21;
	shf.l.wrap.b32 	%r2196, %r2193, %r2194, 21;
	mov.b64 	%rd3227, {%r2196, %r2195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2197}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd3224;
	}
	shf.l.wrap.b32 	%r2199, %r2198, %r2197, 14;
	shf.l.wrap.b32 	%r2200, %r2197, %r2198, 14;
	mov.b64 	%rd3228, {%r2200, %r2199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2201}, %rd3203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2202,%dummy}, %rd3203;
	}
	shf.l.wrap.b32 	%r2203, %r2202, %r2201, 28;
	shf.l.wrap.b32 	%r2204, %r2201, %r2202, 28;
	mov.b64 	%rd3229, {%r2204, %r2203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2205}, %rd3209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd3209;
	}
	shf.l.wrap.b32 	%r2207, %r2206, %r2205, 20;
	shf.l.wrap.b32 	%r2208, %r2205, %r2206, 20;
	mov.b64 	%rd3230, {%r2208, %r2207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2209}, %rd3210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd3210;
	}
	shf.l.wrap.b32 	%r2211, %r2210, %r2209, 3;
	shf.l.wrap.b32 	%r2212, %r2209, %r2210, 3;
	mov.b64 	%rd3231, {%r2212, %r2211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd3216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd3216;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 19;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 19;
	mov.b64 	%rd3232, {%r2216, %r2215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2217,%dummy}, %rd3222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2218}, %rd3222;
	}
	shf.r.wrap.b32 	%r2219, %r2218, %r2217, 3;
	shf.r.wrap.b32 	%r2220, %r2217, %r2218, 3;
	mov.b64 	%rd3233, {%r2220, %r2219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd3201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2222,%dummy}, %rd3201;
	}
	shf.l.wrap.b32 	%r2223, %r2222, %r2221, 1;
	shf.l.wrap.b32 	%r2224, %r2221, %r2222, 1;
	mov.b64 	%rd3234, {%r2224, %r2223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2225}, %rd3207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd3207;
	}
	shf.l.wrap.b32 	%r2227, %r2226, %r2225, 6;
	shf.l.wrap.b32 	%r2228, %r2225, %r2226, 6;
	mov.b64 	%rd3235, {%r2228, %r2227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2229}, %rd3213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd3213;
	}
	shf.l.wrap.b32 	%r2231, %r2230, %r2229, 25;
	shf.l.wrap.b32 	%r2232, %r2229, %r2230, 25;
	mov.b64 	%rd3236, {%r2232, %r2231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2233}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2234,%dummy}, %rd3219;
	}
	shf.l.wrap.b32 	%r2235, %r2234, %r2233, 8;
	shf.l.wrap.b32 	%r2236, %r2233, %r2234, 8;
	mov.b64 	%rd3237, {%r2236, %r2235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2237}, %rd3220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd3220;
	}
	shf.l.wrap.b32 	%r2239, %r2238, %r2237, 18;
	shf.l.wrap.b32 	%r2240, %r2237, %r2238, 18;
	mov.b64 	%rd3238, {%r2240, %r2239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2241}, %rd3204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2242,%dummy}, %rd3204;
	}
	shf.l.wrap.b32 	%r2243, %r2242, %r2241, 27;
	shf.l.wrap.b32 	%r2244, %r2241, %r2242, 27;
	mov.b64 	%rd3239, {%r2244, %r2243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3205;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3240, {%r2248, %r2247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2249}, %rd3211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2250,%dummy}, %rd3211;
	}
	shf.l.wrap.b32 	%r2251, %r2250, %r2249, 10;
	shf.l.wrap.b32 	%r2252, %r2249, %r2250, 10;
	mov.b64 	%rd3241, {%r2252, %r2251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2253}, %rd3217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd3217;
	}
	shf.l.wrap.b32 	%r2255, %r2254, %r2253, 15;
	shf.l.wrap.b32 	%r2256, %r2253, %r2254, 15;
	mov.b64 	%rd3242, {%r2256, %r2255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2257,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2258}, %rd3223;
	}
	shf.r.wrap.b32 	%r2259, %r2258, %r2257, 8;
	shf.r.wrap.b32 	%r2260, %r2257, %r2258, 8;
	mov.b64 	%rd3243, {%r2260, %r2259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3202;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 2;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 2;
	mov.b64 	%rd3244, {%r2264, %r2263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2265,%dummy}, %rd3208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd3208;
	}
	shf.r.wrap.b32 	%r2267, %r2266, %r2265, 9;
	shf.r.wrap.b32 	%r2268, %r2265, %r2266, 9;
	mov.b64 	%rd3245, {%r2268, %r2267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3214;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 25;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 25;
	mov.b64 	%rd3246, {%r2272, %r2271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2273,%dummy}, %rd3215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2274}, %rd3215;
	}
	shf.r.wrap.b32 	%r2275, %r2274, %r2273, 23;
	shf.r.wrap.b32 	%r2276, %r2273, %r2274, 23;
	mov.b64 	%rd3247, {%r2276, %r2275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2277}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd3221;
	}
	shf.l.wrap.b32 	%r2279, %r2278, %r2277, 2;
	shf.l.wrap.b32 	%r2280, %r2277, %r2278, 2;
	mov.b64 	%rd3248, {%r2280, %r2279};
	not.b64 	%rd3249, %rd3225;
	and.b64  	%rd3250, %rd3226, %rd3249;
	xor.b64  	%rd3251, %rd3250, %rd3200;
	not.b64 	%rd3252, %rd3226;
	and.b64  	%rd3253, %rd3227, %rd3252;
	xor.b64  	%rd3254, %rd3253, %rd3225;
	not.b64 	%rd3255, %rd3227;
	and.b64  	%rd3256, %rd3228, %rd3255;
	xor.b64  	%rd3257, %rd3256, %rd3226;
	not.b64 	%rd3258, %rd3228;
	and.b64  	%rd3259, %rd3200, %rd3258;
	xor.b64  	%rd3260, %rd3259, %rd3227;
	not.b64 	%rd3261, %rd3200;
	and.b64  	%rd3262, %rd3225, %rd3261;
	xor.b64  	%rd3263, %rd3262, %rd3228;
	not.b64 	%rd3264, %rd3230;
	and.b64  	%rd3265, %rd3231, %rd3264;
	xor.b64  	%rd3266, %rd3265, %rd3229;
	not.b64 	%rd3267, %rd3231;
	and.b64  	%rd3268, %rd3232, %rd3267;
	xor.b64  	%rd3269, %rd3268, %rd3230;
	not.b64 	%rd3270, %rd3232;
	and.b64  	%rd3271, %rd3233, %rd3270;
	xor.b64  	%rd3272, %rd3271, %rd3231;
	not.b64 	%rd3273, %rd3233;
	and.b64  	%rd3274, %rd3229, %rd3273;
	xor.b64  	%rd3275, %rd3274, %rd3232;
	not.b64 	%rd3276, %rd3229;
	and.b64  	%rd3277, %rd3230, %rd3276;
	xor.b64  	%rd3278, %rd3277, %rd3233;
	not.b64 	%rd3279, %rd3235;
	and.b64  	%rd3280, %rd3236, %rd3279;
	xor.b64  	%rd3281, %rd3280, %rd3234;
	not.b64 	%rd3282, %rd3236;
	and.b64  	%rd3283, %rd3237, %rd3282;
	xor.b64  	%rd3284, %rd3283, %rd3235;
	not.b64 	%rd3285, %rd3237;
	and.b64  	%rd3286, %rd3238, %rd3285;
	xor.b64  	%rd3287, %rd3286, %rd3236;
	not.b64 	%rd3288, %rd3238;
	and.b64  	%rd3289, %rd3234, %rd3288;
	xor.b64  	%rd3290, %rd3289, %rd3237;
	not.b64 	%rd3291, %rd3234;
	and.b64  	%rd3292, %rd3235, %rd3291;
	xor.b64  	%rd3293, %rd3292, %rd3238;
	not.b64 	%rd3294, %rd3240;
	and.b64  	%rd3295, %rd3241, %rd3294;
	xor.b64  	%rd3296, %rd3295, %rd3239;
	not.b64 	%rd3297, %rd3241;
	and.b64  	%rd3298, %rd3242, %rd3297;
	xor.b64  	%rd3299, %rd3298, %rd3240;
	not.b64 	%rd3300, %rd3242;
	and.b64  	%rd3301, %rd3243, %rd3300;
	xor.b64  	%rd3302, %rd3301, %rd3241;
	not.b64 	%rd3303, %rd3243;
	and.b64  	%rd3304, %rd3239, %rd3303;
	xor.b64  	%rd3305, %rd3304, %rd3242;
	not.b64 	%rd3306, %rd3239;
	and.b64  	%rd3307, %rd3240, %rd3306;
	xor.b64  	%rd3308, %rd3307, %rd3243;
	not.b64 	%rd3309, %rd3245;
	and.b64  	%rd3310, %rd3246, %rd3309;
	xor.b64  	%rd3311, %rd3310, %rd3244;
	not.b64 	%rd3312, %rd3246;
	and.b64  	%rd3313, %rd3247, %rd3312;
	xor.b64  	%rd3314, %rd3313, %rd3245;
	not.b64 	%rd3315, %rd3247;
	and.b64  	%rd3316, %rd3248, %rd3315;
	xor.b64  	%rd3317, %rd3316, %rd3246;
	not.b64 	%rd3318, %rd3248;
	and.b64  	%rd3319, %rd3244, %rd3318;
	xor.b64  	%rd3320, %rd3319, %rd3247;
	not.b64 	%rd3321, %rd3244;
	and.b64  	%rd3322, %rd3245, %rd3321;
	xor.b64  	%rd3323, %rd3322, %rd3248;
	xor.b64  	%rd3324, %rd3251, %rd34;
	xor.b64  	%rd3325, %rd3266, %rd3324;
	xor.b64  	%rd3326, %rd3325, %rd3281;
	xor.b64  	%rd3327, %rd3326, %rd3296;
	xor.b64  	%rd3328, %rd3327, %rd3311;
	xor.b64  	%rd3329, %rd3269, %rd3254;
	xor.b64  	%rd3330, %rd3329, %rd3284;
	xor.b64  	%rd3331, %rd3330, %rd3299;
	xor.b64  	%rd3332, %rd3331, %rd3314;
	xor.b64  	%rd3333, %rd3272, %rd3257;
	xor.b64  	%rd3334, %rd3333, %rd3287;
	xor.b64  	%rd3335, %rd3334, %rd3302;
	xor.b64  	%rd3336, %rd3335, %rd3317;
	xor.b64  	%rd3337, %rd3275, %rd3260;
	xor.b64  	%rd3338, %rd3337, %rd3290;
	xor.b64  	%rd3339, %rd3338, %rd3305;
	xor.b64  	%rd3340, %rd3339, %rd3320;
	xor.b64  	%rd3341, %rd3278, %rd3263;
	xor.b64  	%rd3342, %rd3341, %rd3293;
	xor.b64  	%rd3343, %rd3342, %rd3308;
	xor.b64  	%rd3344, %rd3343, %rd3323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2281}, %rd3332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2282,%dummy}, %rd3332;
	}
	shf.l.wrap.b32 	%r2283, %r2282, %r2281, 1;
	shf.l.wrap.b32 	%r2284, %r2281, %r2282, 1;
	mov.b64 	%rd3345, {%r2284, %r2283};
	xor.b64  	%rd3346, %rd3344, %rd3345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2285}, %rd3336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd3336;
	}
	shf.l.wrap.b32 	%r2287, %r2286, %r2285, 1;
	shf.l.wrap.b32 	%r2288, %r2285, %r2286, 1;
	mov.b64 	%rd3347, {%r2288, %r2287};
	xor.b64  	%rd3348, %rd3347, %rd3328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2289}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2290,%dummy}, %rd3340;
	}
	shf.l.wrap.b32 	%r2291, %r2290, %r2289, 1;
	shf.l.wrap.b32 	%r2292, %r2289, %r2290, 1;
	mov.b64 	%rd3349, {%r2292, %r2291};
	xor.b64  	%rd3350, %rd3349, %rd3332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2293}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd3344;
	}
	shf.l.wrap.b32 	%r2295, %r2294, %r2293, 1;
	shf.l.wrap.b32 	%r2296, %r2293, %r2294, 1;
	mov.b64 	%rd3351, {%r2296, %r2295};
	xor.b64  	%rd3352, %rd3351, %rd3336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2297}, %rd3328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2298,%dummy}, %rd3328;
	}
	shf.l.wrap.b32 	%r2299, %r2298, %r2297, 1;
	shf.l.wrap.b32 	%r2300, %r2297, %r2298, 1;
	mov.b64 	%rd3353, {%r2300, %r2299};
	xor.b64  	%rd3354, %rd3340, %rd3353;
	xor.b64  	%rd3355, %rd3346, %rd3324;
	xor.b64  	%rd3356, %rd3348, %rd3254;
	xor.b64  	%rd3357, %rd3350, %rd3257;
	xor.b64  	%rd3358, %rd3352, %rd3260;
	xor.b64  	%rd3359, %rd3354, %rd3263;
	xor.b64  	%rd3360, %rd3346, %rd3266;
	xor.b64  	%rd3361, %rd3348, %rd3269;
	xor.b64  	%rd3362, %rd3350, %rd3272;
	xor.b64  	%rd3363, %rd3352, %rd3275;
	xor.b64  	%rd3364, %rd3354, %rd3278;
	xor.b64  	%rd3365, %rd3346, %rd3281;
	xor.b64  	%rd3366, %rd3348, %rd3284;
	xor.b64  	%rd3367, %rd3350, %rd3287;
	xor.b64  	%rd3368, %rd3352, %rd3290;
	xor.b64  	%rd3369, %rd3354, %rd3293;
	xor.b64  	%rd3370, %rd3346, %rd3296;
	xor.b64  	%rd3371, %rd3348, %rd3299;
	xor.b64  	%rd3372, %rd3350, %rd3302;
	xor.b64  	%rd3373, %rd3352, %rd3305;
	xor.b64  	%rd3374, %rd3354, %rd3308;
	xor.b64  	%rd3375, %rd3346, %rd3311;
	xor.b64  	%rd3376, %rd3348, %rd3314;
	xor.b64  	%rd3377, %rd3350, %rd3317;
	xor.b64  	%rd3378, %rd3352, %rd3320;
	xor.b64  	%rd3379, %rd3354, %rd3323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd3361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd3361;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 20;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 20;
	mov.b64 	%rd3380, {%r2304, %r2303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2305,%dummy}, %rd3367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2306}, %rd3367;
	}
	shf.r.wrap.b32 	%r2307, %r2306, %r2305, 21;
	shf.r.wrap.b32 	%r2308, %r2305, %r2306, 21;
	mov.b64 	%rd3381, {%r2308, %r2307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2309}, %rd3373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd3373;
	}
	shf.l.wrap.b32 	%r2311, %r2310, %r2309, 21;
	shf.l.wrap.b32 	%r2312, %r2309, %r2310, 21;
	mov.b64 	%rd3382, {%r2312, %r2311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2313}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2314,%dummy}, %rd3379;
	}
	shf.l.wrap.b32 	%r2315, %r2314, %r2313, 14;
	shf.l.wrap.b32 	%r2316, %r2313, %r2314, 14;
	mov.b64 	%rd3383, {%r2316, %r2315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd3358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd3358;
	}
	shf.l.wrap.b32 	%r2319, %r2318, %r2317, 28;
	shf.l.wrap.b32 	%r2320, %r2317, %r2318, 28;
	mov.b64 	%rd3384, {%r2320, %r2319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2321}, %rd3364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2322,%dummy}, %rd3364;
	}
	shf.l.wrap.b32 	%r2323, %r2322, %r2321, 20;
	shf.l.wrap.b32 	%r2324, %r2321, %r2322, 20;
	mov.b64 	%rd3385, {%r2324, %r2323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2325}, %rd3365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd3365;
	}
	shf.l.wrap.b32 	%r2327, %r2326, %r2325, 3;
	shf.l.wrap.b32 	%r2328, %r2325, %r2326, 3;
	mov.b64 	%rd3386, {%r2328, %r2327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2329,%dummy}, %rd3371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2330}, %rd3371;
	}
	shf.r.wrap.b32 	%r2331, %r2330, %r2329, 19;
	shf.r.wrap.b32 	%r2332, %r2329, %r2330, 19;
	mov.b64 	%rd3387, {%r2332, %r2331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd3377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd3377;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 3;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 3;
	mov.b64 	%rd3388, {%r2336, %r2335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2337}, %rd3356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2338,%dummy}, %rd3356;
	}
	shf.l.wrap.b32 	%r2339, %r2338, %r2337, 1;
	shf.l.wrap.b32 	%r2340, %r2337, %r2338, 1;
	mov.b64 	%rd3389, {%r2340, %r2339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd3362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd3362;
	}
	shf.l.wrap.b32 	%r2343, %r2342, %r2341, 6;
	shf.l.wrap.b32 	%r2344, %r2341, %r2342, 6;
	mov.b64 	%rd3390, {%r2344, %r2343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2345}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2346,%dummy}, %rd3368;
	}
	shf.l.wrap.b32 	%r2347, %r2346, %r2345, 25;
	shf.l.wrap.b32 	%r2348, %r2345, %r2346, 25;
	mov.b64 	%rd3391, {%r2348, %r2347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd3374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd3374;
	}
	shf.l.wrap.b32 	%r2351, %r2350, %r2349, 8;
	shf.l.wrap.b32 	%r2352, %r2349, %r2350, 8;
	mov.b64 	%rd3392, {%r2352, %r2351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2353}, %rd3375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2354,%dummy}, %rd3375;
	}
	shf.l.wrap.b32 	%r2355, %r2354, %r2353, 18;
	shf.l.wrap.b32 	%r2356, %r2353, %r2354, 18;
	mov.b64 	%rd3393, {%r2356, %r2355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd3359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd3359;
	}
	shf.l.wrap.b32 	%r2359, %r2358, %r2357, 27;
	shf.l.wrap.b32 	%r2360, %r2357, %r2358, 27;
	mov.b64 	%rd3394, {%r2360, %r2359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2361,%dummy}, %rd3360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2362}, %rd3360;
	}
	shf.r.wrap.b32 	%r2363, %r2362, %r2361, 28;
	shf.r.wrap.b32 	%r2364, %r2361, %r2362, 28;
	mov.b64 	%rd3395, {%r2364, %r2363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd3366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd3366;
	}
	shf.l.wrap.b32 	%r2367, %r2366, %r2365, 10;
	shf.l.wrap.b32 	%r2368, %r2365, %r2366, 10;
	mov.b64 	%rd3396, {%r2368, %r2367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2369}, %rd3372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2370,%dummy}, %rd3372;
	}
	shf.l.wrap.b32 	%r2371, %r2370, %r2369, 15;
	shf.l.wrap.b32 	%r2372, %r2369, %r2370, 15;
	mov.b64 	%rd3397, {%r2372, %r2371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd3378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd3378;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 8;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 8;
	mov.b64 	%rd3398, {%r2376, %r2375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd3357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd3357;
	}
	shf.r.wrap.b32 	%r2379, %r2378, %r2377, 2;
	shf.r.wrap.b32 	%r2380, %r2377, %r2378, 2;
	mov.b64 	%rd3399, {%r2380, %r2379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2381,%dummy}, %rd3363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd3363;
	}
	shf.r.wrap.b32 	%r2383, %r2382, %r2381, 9;
	shf.r.wrap.b32 	%r2384, %r2381, %r2382, 9;
	mov.b64 	%rd3400, {%r2384, %r2383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2385,%dummy}, %rd3369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2386}, %rd3369;
	}
	shf.r.wrap.b32 	%r2387, %r2386, %r2385, 25;
	shf.r.wrap.b32 	%r2388, %r2385, %r2386, 25;
	mov.b64 	%rd3401, {%r2388, %r2387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2389,%dummy}, %rd3370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2390}, %rd3370;
	}
	shf.r.wrap.b32 	%r2391, %r2390, %r2389, 23;
	shf.r.wrap.b32 	%r2392, %r2389, %r2390, 23;
	mov.b64 	%rd3402, {%r2392, %r2391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd3376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2394,%dummy}, %rd3376;
	}
	shf.l.wrap.b32 	%r2395, %r2394, %r2393, 2;
	shf.l.wrap.b32 	%r2396, %r2393, %r2394, 2;
	mov.b64 	%rd3403, {%r2396, %r2395};
	not.b64 	%rd3404, %rd3380;
	and.b64  	%rd3405, %rd3381, %rd3404;
	xor.b64  	%rd3406, %rd3405, %rd3355;
	not.b64 	%rd3407, %rd3381;
	and.b64  	%rd3408, %rd3382, %rd3407;
	xor.b64  	%rd3409, %rd3408, %rd3380;
	not.b64 	%rd3410, %rd3382;
	and.b64  	%rd3411, %rd3383, %rd3410;
	xor.b64  	%rd3412, %rd3411, %rd3381;
	not.b64 	%rd3413, %rd3383;
	and.b64  	%rd3414, %rd3355, %rd3413;
	xor.b64  	%rd3415, %rd3414, %rd3382;
	not.b64 	%rd3416, %rd3355;
	and.b64  	%rd3417, %rd3380, %rd3416;
	xor.b64  	%rd3418, %rd3417, %rd3383;
	not.b64 	%rd3419, %rd3385;
	and.b64  	%rd3420, %rd3386, %rd3419;
	xor.b64  	%rd3421, %rd3420, %rd3384;
	not.b64 	%rd3422, %rd3386;
	and.b64  	%rd3423, %rd3387, %rd3422;
	xor.b64  	%rd3424, %rd3423, %rd3385;
	not.b64 	%rd3425, %rd3387;
	and.b64  	%rd3426, %rd3388, %rd3425;
	xor.b64  	%rd3427, %rd3426, %rd3386;
	not.b64 	%rd3428, %rd3388;
	and.b64  	%rd3429, %rd3384, %rd3428;
	xor.b64  	%rd3430, %rd3429, %rd3387;
	not.b64 	%rd3431, %rd3384;
	and.b64  	%rd3432, %rd3385, %rd3431;
	xor.b64  	%rd3433, %rd3432, %rd3388;
	not.b64 	%rd3434, %rd3390;
	and.b64  	%rd3435, %rd3391, %rd3434;
	xor.b64  	%rd3436, %rd3435, %rd3389;
	not.b64 	%rd3437, %rd3391;
	and.b64  	%rd3438, %rd3392, %rd3437;
	xor.b64  	%rd3439, %rd3438, %rd3390;
	not.b64 	%rd3440, %rd3392;
	and.b64  	%rd3441, %rd3393, %rd3440;
	xor.b64  	%rd3442, %rd3441, %rd3391;
	not.b64 	%rd3443, %rd3393;
	and.b64  	%rd3444, %rd3389, %rd3443;
	xor.b64  	%rd3445, %rd3444, %rd3392;
	not.b64 	%rd3446, %rd3389;
	and.b64  	%rd3447, %rd3390, %rd3446;
	xor.b64  	%rd3448, %rd3447, %rd3393;
	not.b64 	%rd3449, %rd3395;
	and.b64  	%rd3450, %rd3396, %rd3449;
	xor.b64  	%rd3451, %rd3450, %rd3394;
	not.b64 	%rd3452, %rd3396;
	and.b64  	%rd3453, %rd3397, %rd3452;
	xor.b64  	%rd3454, %rd3453, %rd3395;
	not.b64 	%rd3455, %rd3397;
	and.b64  	%rd3456, %rd3398, %rd3455;
	xor.b64  	%rd3457, %rd3456, %rd3396;
	not.b64 	%rd3458, %rd3398;
	and.b64  	%rd3459, %rd3394, %rd3458;
	xor.b64  	%rd3460, %rd3459, %rd3397;
	not.b64 	%rd3461, %rd3394;
	and.b64  	%rd3462, %rd3395, %rd3461;
	xor.b64  	%rd3463, %rd3462, %rd3398;
	not.b64 	%rd3464, %rd3400;
	and.b64  	%rd3465, %rd3401, %rd3464;
	xor.b64  	%rd3466, %rd3465, %rd3399;
	not.b64 	%rd3467, %rd3401;
	and.b64  	%rd3468, %rd3402, %rd3467;
	xor.b64  	%rd3469, %rd3468, %rd3400;
	not.b64 	%rd3470, %rd3402;
	and.b64  	%rd3471, %rd3403, %rd3470;
	xor.b64  	%rd3472, %rd3471, %rd3401;
	not.b64 	%rd3473, %rd3403;
	and.b64  	%rd3474, %rd3399, %rd3473;
	xor.b64  	%rd3475, %rd3474, %rd3402;
	not.b64 	%rd3476, %rd3399;
	and.b64  	%rd3477, %rd3400, %rd3476;
	xor.b64  	%rd3478, %rd3477, %rd3403;
	xor.b64  	%rd3479, %rd3406, %rd35;
	xor.b64  	%rd3480, %rd3421, %rd3479;
	xor.b64  	%rd3481, %rd3480, %rd3436;
	xor.b64  	%rd3482, %rd3481, %rd3451;
	xor.b64  	%rd3483, %rd3482, %rd3466;
	xor.b64  	%rd3484, %rd3424, %rd3409;
	xor.b64  	%rd3485, %rd3484, %rd3439;
	xor.b64  	%rd3486, %rd3485, %rd3454;
	xor.b64  	%rd3487, %rd3486, %rd3469;
	xor.b64  	%rd3488, %rd3427, %rd3412;
	xor.b64  	%rd3489, %rd3488, %rd3442;
	xor.b64  	%rd3490, %rd3489, %rd3457;
	xor.b64  	%rd3491, %rd3490, %rd3472;
	xor.b64  	%rd3492, %rd3430, %rd3415;
	xor.b64  	%rd3493, %rd3492, %rd3445;
	xor.b64  	%rd3494, %rd3493, %rd3460;
	xor.b64  	%rd3495, %rd3494, %rd3475;
	xor.b64  	%rd3496, %rd3433, %rd3418;
	xor.b64  	%rd3497, %rd3496, %rd3448;
	xor.b64  	%rd3498, %rd3497, %rd3463;
	xor.b64  	%rd3499, %rd3498, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2397}, %rd3487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2398,%dummy}, %rd3487;
	}
	shf.l.wrap.b32 	%r2399, %r2398, %r2397, 1;
	shf.l.wrap.b32 	%r2400, %r2397, %r2398, 1;
	mov.b64 	%rd3500, {%r2400, %r2399};
	xor.b64  	%rd3501, %rd3499, %rd3500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd3491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2402,%dummy}, %rd3491;
	}
	shf.l.wrap.b32 	%r2403, %r2402, %r2401, 1;
	shf.l.wrap.b32 	%r2404, %r2401, %r2402, 1;
	mov.b64 	%rd3502, {%r2404, %r2403};
	xor.b64  	%rd3503, %rd3502, %rd3483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2405}, %rd3495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd3495;
	}
	shf.l.wrap.b32 	%r2407, %r2406, %r2405, 1;
	shf.l.wrap.b32 	%r2408, %r2405, %r2406, 1;
	mov.b64 	%rd3504, {%r2408, %r2407};
	xor.b64  	%rd3505, %rd3504, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2409}, %rd3499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2410,%dummy}, %rd3499;
	}
	shf.l.wrap.b32 	%r2411, %r2410, %r2409, 1;
	shf.l.wrap.b32 	%r2412, %r2409, %r2410, 1;
	mov.b64 	%rd3506, {%r2412, %r2411};
	xor.b64  	%rd3507, %rd3506, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd3483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2414,%dummy}, %rd3483;
	}
	shf.l.wrap.b32 	%r2415, %r2414, %r2413, 1;
	shf.l.wrap.b32 	%r2416, %r2413, %r2414, 1;
	mov.b64 	%rd3508, {%r2416, %r2415};
	xor.b64  	%rd3509, %rd3495, %rd3508;
	xor.b64  	%rd3510, %rd3501, %rd3479;
	xor.b64  	%rd3511, %rd3503, %rd3409;
	xor.b64  	%rd3512, %rd3505, %rd3412;
	xor.b64  	%rd3513, %rd3507, %rd3415;
	xor.b64  	%rd3514, %rd3509, %rd3418;
	xor.b64  	%rd3515, %rd3501, %rd3421;
	xor.b64  	%rd3516, %rd3503, %rd3424;
	xor.b64  	%rd3517, %rd3505, %rd3427;
	xor.b64  	%rd3518, %rd3507, %rd3430;
	xor.b64  	%rd3519, %rd3509, %rd3433;
	xor.b64  	%rd3520, %rd3501, %rd3436;
	xor.b64  	%rd3521, %rd3503, %rd3439;
	xor.b64  	%rd3522, %rd3505, %rd3442;
	xor.b64  	%rd3523, %rd3507, %rd3445;
	xor.b64  	%rd3524, %rd3509, %rd3448;
	xor.b64  	%rd3525, %rd3501, %rd3451;
	xor.b64  	%rd3526, %rd3503, %rd3454;
	xor.b64  	%rd3527, %rd3505, %rd3457;
	xor.b64  	%rd3528, %rd3507, %rd3460;
	xor.b64  	%rd3529, %rd3509, %rd3463;
	xor.b64  	%rd3530, %rd3501, %rd3466;
	xor.b64  	%rd3531, %rd3503, %rd3469;
	xor.b64  	%rd3532, %rd3505, %rd3472;
	xor.b64  	%rd3533, %rd3507, %rd3475;
	xor.b64  	%rd3534, %rd3509, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd3516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd3516;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 20;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 20;
	mov.b64 	%rd3535, {%r2420, %r2419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2421,%dummy}, %rd3522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2422}, %rd3522;
	}
	shf.r.wrap.b32 	%r2423, %r2422, %r2421, 21;
	shf.r.wrap.b32 	%r2424, %r2421, %r2422, 21;
	mov.b64 	%rd3536, {%r2424, %r2423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2425}, %rd3528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd3528;
	}
	shf.l.wrap.b32 	%r2427, %r2426, %r2425, 21;
	shf.l.wrap.b32 	%r2428, %r2425, %r2426, 21;
	mov.b64 	%rd3537, {%r2428, %r2427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2429}, %rd3534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2430,%dummy}, %rd3534;
	}
	shf.l.wrap.b32 	%r2431, %r2430, %r2429, 14;
	shf.l.wrap.b32 	%r2432, %r2429, %r2430, 14;
	mov.b64 	%rd3538, {%r2432, %r2431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2433}, %rd3513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2434,%dummy}, %rd3513;
	}
	shf.l.wrap.b32 	%r2435, %r2434, %r2433, 28;
	shf.l.wrap.b32 	%r2436, %r2433, %r2434, 28;
	mov.b64 	%rd3539, {%r2436, %r2435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd3519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2438,%dummy}, %rd3519;
	}
	shf.l.wrap.b32 	%r2439, %r2438, %r2437, 20;
	shf.l.wrap.b32 	%r2440, %r2437, %r2438, 20;
	mov.b64 	%rd3540, {%r2440, %r2439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2441}, %rd3520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2442,%dummy}, %rd3520;
	}
	shf.l.wrap.b32 	%r2443, %r2442, %r2441, 3;
	shf.l.wrap.b32 	%r2444, %r2441, %r2442, 3;
	mov.b64 	%rd3541, {%r2444, %r2443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2445,%dummy}, %rd3526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2446}, %rd3526;
	}
	shf.r.wrap.b32 	%r2447, %r2446, %r2445, 19;
	shf.r.wrap.b32 	%r2448, %r2445, %r2446, 19;
	mov.b64 	%rd3542, {%r2448, %r2447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2449,%dummy}, %rd3532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2450}, %rd3532;
	}
	shf.r.wrap.b32 	%r2451, %r2450, %r2449, 3;
	shf.r.wrap.b32 	%r2452, %r2449, %r2450, 3;
	mov.b64 	%rd3543, {%r2452, %r2451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2454,%dummy}, %rd3511;
	}
	shf.l.wrap.b32 	%r2455, %r2454, %r2453, 1;
	shf.l.wrap.b32 	%r2456, %r2453, %r2454, 1;
	mov.b64 	%rd3544, {%r2456, %r2455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd3517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2458,%dummy}, %rd3517;
	}
	shf.l.wrap.b32 	%r2459, %r2458, %r2457, 6;
	shf.l.wrap.b32 	%r2460, %r2457, %r2458, 6;
	mov.b64 	%rd3545, {%r2460, %r2459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd3523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2462,%dummy}, %rd3523;
	}
	shf.l.wrap.b32 	%r2463, %r2462, %r2461, 25;
	shf.l.wrap.b32 	%r2464, %r2461, %r2462, 25;
	mov.b64 	%rd3546, {%r2464, %r2463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2465}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd3529;
	}
	shf.l.wrap.b32 	%r2467, %r2466, %r2465, 8;
	shf.l.wrap.b32 	%r2468, %r2465, %r2466, 8;
	mov.b64 	%rd3547, {%r2468, %r2467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2469}, %rd3530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2470,%dummy}, %rd3530;
	}
	shf.l.wrap.b32 	%r2471, %r2470, %r2469, 18;
	shf.l.wrap.b32 	%r2472, %r2469, %r2470, 18;
	mov.b64 	%rd3548, {%r2472, %r2471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2473}, %rd3514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2474,%dummy}, %rd3514;
	}
	shf.l.wrap.b32 	%r2475, %r2474, %r2473, 27;
	shf.l.wrap.b32 	%r2476, %r2473, %r2474, 27;
	mov.b64 	%rd3549, {%r2476, %r2475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd3515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd3515;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 28;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 28;
	mov.b64 	%rd3550, {%r2480, %r2479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2481}, %rd3521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2482,%dummy}, %rd3521;
	}
	shf.l.wrap.b32 	%r2483, %r2482, %r2481, 10;
	shf.l.wrap.b32 	%r2484, %r2481, %r2482, 10;
	mov.b64 	%rd3551, {%r2484, %r2483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2485}, %rd3527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2486,%dummy}, %rd3527;
	}
	shf.l.wrap.b32 	%r2487, %r2486, %r2485, 15;
	shf.l.wrap.b32 	%r2488, %r2485, %r2486, 15;
	mov.b64 	%rd3552, {%r2488, %r2487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd3533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd3533;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 8;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 8;
	mov.b64 	%rd3553, {%r2492, %r2491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2493,%dummy}, %rd3512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2494}, %rd3512;
	}
	shf.r.wrap.b32 	%r2495, %r2494, %r2493, 2;
	shf.r.wrap.b32 	%r2496, %r2493, %r2494, 2;
	mov.b64 	%rd3554, {%r2496, %r2495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2497,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2498}, %rd3518;
	}
	shf.r.wrap.b32 	%r2499, %r2498, %r2497, 9;
	shf.r.wrap.b32 	%r2500, %r2497, %r2498, 9;
	mov.b64 	%rd3555, {%r2500, %r2499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2502}, %rd3524;
	}
	shf.r.wrap.b32 	%r2503, %r2502, %r2501, 25;
	shf.r.wrap.b32 	%r2504, %r2501, %r2502, 25;
	mov.b64 	%rd3556, {%r2504, %r2503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2506}, %rd3525;
	}
	shf.r.wrap.b32 	%r2507, %r2506, %r2505, 23;
	shf.r.wrap.b32 	%r2508, %r2505, %r2506, 23;
	mov.b64 	%rd3557, {%r2508, %r2507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2509}, %rd3531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2510,%dummy}, %rd3531;
	}
	shf.l.wrap.b32 	%r2511, %r2510, %r2509, 2;
	shf.l.wrap.b32 	%r2512, %r2509, %r2510, 2;
	mov.b64 	%rd3558, {%r2512, %r2511};
	not.b64 	%rd3559, %rd3535;
	and.b64  	%rd3560, %rd3536, %rd3559;
	xor.b64  	%rd3561, %rd3560, %rd3510;
	not.b64 	%rd3562, %rd3536;
	and.b64  	%rd3563, %rd3537, %rd3562;
	xor.b64  	%rd3564, %rd3563, %rd3535;
	not.b64 	%rd3565, %rd3537;
	and.b64  	%rd3566, %rd3538, %rd3565;
	xor.b64  	%rd3567, %rd3566, %rd3536;
	not.b64 	%rd3568, %rd3538;
	and.b64  	%rd3569, %rd3510, %rd3568;
	xor.b64  	%rd3570, %rd3569, %rd3537;
	not.b64 	%rd3571, %rd3510;
	and.b64  	%rd3572, %rd3535, %rd3571;
	xor.b64  	%rd3573, %rd3572, %rd3538;
	not.b64 	%rd3574, %rd3540;
	and.b64  	%rd3575, %rd3541, %rd3574;
	xor.b64  	%rd3576, %rd3575, %rd3539;
	not.b64 	%rd3577, %rd3541;
	and.b64  	%rd3578, %rd3542, %rd3577;
	xor.b64  	%rd3579, %rd3578, %rd3540;
	not.b64 	%rd3580, %rd3542;
	and.b64  	%rd3581, %rd3543, %rd3580;
	xor.b64  	%rd3582, %rd3581, %rd3541;
	not.b64 	%rd3583, %rd3543;
	and.b64  	%rd3584, %rd3539, %rd3583;
	xor.b64  	%rd3585, %rd3584, %rd3542;
	not.b64 	%rd3586, %rd3539;
	and.b64  	%rd3587, %rd3540, %rd3586;
	xor.b64  	%rd3588, %rd3587, %rd3543;
	not.b64 	%rd3589, %rd3545;
	and.b64  	%rd3590, %rd3546, %rd3589;
	xor.b64  	%rd3591, %rd3590, %rd3544;
	not.b64 	%rd3592, %rd3546;
	and.b64  	%rd3593, %rd3547, %rd3592;
	xor.b64  	%rd3594, %rd3593, %rd3545;
	not.b64 	%rd3595, %rd3547;
	and.b64  	%rd3596, %rd3548, %rd3595;
	xor.b64  	%rd3597, %rd3596, %rd3546;
	not.b64 	%rd3598, %rd3548;
	and.b64  	%rd3599, %rd3544, %rd3598;
	xor.b64  	%rd3600, %rd3599, %rd3547;
	not.b64 	%rd3601, %rd3544;
	and.b64  	%rd3602, %rd3545, %rd3601;
	xor.b64  	%rd3603, %rd3602, %rd3548;
	not.b64 	%rd3604, %rd3550;
	and.b64  	%rd3605, %rd3551, %rd3604;
	xor.b64  	%rd3606, %rd3605, %rd3549;
	not.b64 	%rd3607, %rd3551;
	and.b64  	%rd3608, %rd3552, %rd3607;
	xor.b64  	%rd3609, %rd3608, %rd3550;
	not.b64 	%rd3610, %rd3552;
	and.b64  	%rd3611, %rd3553, %rd3610;
	xor.b64  	%rd3612, %rd3611, %rd3551;
	not.b64 	%rd3613, %rd3553;
	and.b64  	%rd3614, %rd3549, %rd3613;
	xor.b64  	%rd3615, %rd3614, %rd3552;
	not.b64 	%rd3616, %rd3549;
	and.b64  	%rd3617, %rd3550, %rd3616;
	xor.b64  	%rd3618, %rd3617, %rd3553;
	not.b64 	%rd3619, %rd3555;
	and.b64  	%rd3620, %rd3556, %rd3619;
	xor.b64  	%rd3621, %rd3620, %rd3554;
	not.b64 	%rd3622, %rd3556;
	and.b64  	%rd3623, %rd3557, %rd3622;
	xor.b64  	%rd3624, %rd3623, %rd3555;
	not.b64 	%rd3625, %rd3557;
	and.b64  	%rd3626, %rd3558, %rd3625;
	xor.b64  	%rd3627, %rd3626, %rd3556;
	not.b64 	%rd3628, %rd3558;
	and.b64  	%rd3629, %rd3554, %rd3628;
	xor.b64  	%rd3630, %rd3629, %rd3557;
	not.b64 	%rd3631, %rd3554;
	and.b64  	%rd3632, %rd3555, %rd3631;
	xor.b64  	%rd3633, %rd3632, %rd3558;
	xor.b64  	%rd3634, %rd3561, %rd36;
	xor.b64  	%rd3635, %rd3576, %rd3634;
	xor.b64  	%rd3636, %rd3635, %rd3591;
	xor.b64  	%rd3637, %rd3636, %rd3606;
	xor.b64  	%rd3638, %rd3637, %rd3621;
	xor.b64  	%rd3639, %rd3579, %rd3564;
	xor.b64  	%rd3640, %rd3639, %rd3594;
	xor.b64  	%rd3641, %rd3640, %rd3609;
	xor.b64  	%rd3642, %rd3641, %rd3624;
	xor.b64  	%rd3643, %rd3582, %rd3567;
	xor.b64  	%rd3644, %rd3643, %rd3597;
	xor.b64  	%rd3645, %rd3644, %rd3612;
	xor.b64  	%rd3646, %rd3645, %rd3627;
	xor.b64  	%rd3647, %rd3585, %rd3570;
	xor.b64  	%rd3648, %rd3647, %rd3600;
	xor.b64  	%rd3649, %rd3648, %rd3615;
	xor.b64  	%rd3650, %rd3649, %rd3630;
	xor.b64  	%rd3651, %rd3588, %rd3573;
	xor.b64  	%rd3652, %rd3651, %rd3603;
	xor.b64  	%rd3653, %rd3652, %rd3618;
	xor.b64  	%rd3654, %rd3653, %rd3633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd3642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2514,%dummy}, %rd3642;
	}
	shf.l.wrap.b32 	%r2515, %r2514, %r2513, 1;
	shf.l.wrap.b32 	%r2516, %r2513, %r2514, 1;
	mov.b64 	%rd3655, {%r2516, %r2515};
	xor.b64  	%rd3656, %rd3654, %rd3655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd3646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2518,%dummy}, %rd3646;
	}
	shf.l.wrap.b32 	%r2519, %r2518, %r2517, 1;
	shf.l.wrap.b32 	%r2520, %r2517, %r2518, 1;
	mov.b64 	%rd3657, {%r2520, %r2519};
	xor.b64  	%rd3658, %rd3657, %rd3638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2521}, %rd3650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2522,%dummy}, %rd3650;
	}
	shf.l.wrap.b32 	%r2523, %r2522, %r2521, 1;
	shf.l.wrap.b32 	%r2524, %r2521, %r2522, 1;
	mov.b64 	%rd3659, {%r2524, %r2523};
	xor.b64  	%rd3660, %rd3659, %rd3642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd3654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2526,%dummy}, %rd3654;
	}
	shf.l.wrap.b32 	%r2527, %r2526, %r2525, 1;
	shf.l.wrap.b32 	%r2528, %r2525, %r2526, 1;
	mov.b64 	%rd3661, {%r2528, %r2527};
	xor.b64  	%rd3662, %rd3661, %rd3646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd3638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2530,%dummy}, %rd3638;
	}
	shf.l.wrap.b32 	%r2531, %r2530, %r2529, 1;
	shf.l.wrap.b32 	%r2532, %r2529, %r2530, 1;
	mov.b64 	%rd3663, {%r2532, %r2531};
	xor.b64  	%rd3664, %rd3650, %rd3663;
	xor.b64  	%rd3665, %rd3656, %rd3634;
	xor.b64  	%rd3666, %rd3658, %rd3564;
	xor.b64  	%rd3667, %rd3660, %rd3567;
	xor.b64  	%rd3668, %rd3662, %rd3570;
	xor.b64  	%rd3669, %rd3664, %rd3573;
	xor.b64  	%rd3670, %rd3656, %rd3576;
	xor.b64  	%rd3671, %rd3658, %rd3579;
	xor.b64  	%rd3672, %rd3660, %rd3582;
	xor.b64  	%rd3673, %rd3662, %rd3585;
	xor.b64  	%rd3674, %rd3664, %rd3588;
	xor.b64  	%rd3675, %rd3656, %rd3591;
	xor.b64  	%rd3676, %rd3658, %rd3594;
	xor.b64  	%rd3677, %rd3660, %rd3597;
	xor.b64  	%rd3678, %rd3662, %rd3600;
	xor.b64  	%rd3679, %rd3664, %rd3603;
	xor.b64  	%rd3680, %rd3656, %rd3606;
	xor.b64  	%rd3681, %rd3658, %rd3609;
	xor.b64  	%rd3682, %rd3660, %rd3612;
	xor.b64  	%rd3683, %rd3662, %rd3615;
	xor.b64  	%rd3684, %rd3664, %rd3618;
	xor.b64  	%rd3685, %rd3656, %rd3621;
	xor.b64  	%rd3686, %rd3658, %rd3624;
	xor.b64  	%rd3687, %rd3660, %rd3627;
	xor.b64  	%rd3688, %rd3662, %rd3630;
	xor.b64  	%rd3689, %rd3664, %rd3633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2533,%dummy}, %rd3671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2534}, %rd3671;
	}
	shf.r.wrap.b32 	%r2535, %r2534, %r2533, 20;
	shf.r.wrap.b32 	%r2536, %r2533, %r2534, 20;
	mov.b64 	%rd3690, {%r2536, %r2535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd3677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2538}, %rd3677;
	}
	shf.r.wrap.b32 	%r2539, %r2538, %r2537, 21;
	shf.r.wrap.b32 	%r2540, %r2537, %r2538, 21;
	mov.b64 	%rd3691, {%r2540, %r2539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2541}, %rd3683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2542,%dummy}, %rd3683;
	}
	shf.l.wrap.b32 	%r2543, %r2542, %r2541, 21;
	shf.l.wrap.b32 	%r2544, %r2541, %r2542, 21;
	mov.b64 	%rd3692, {%r2544, %r2543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd3689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2546,%dummy}, %rd3689;
	}
	shf.l.wrap.b32 	%r2547, %r2546, %r2545, 14;
	shf.l.wrap.b32 	%r2548, %r2545, %r2546, 14;
	mov.b64 	%rd3693, {%r2548, %r2547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2549}, %rd3668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2550,%dummy}, %rd3668;
	}
	shf.l.wrap.b32 	%r2551, %r2550, %r2549, 28;
	shf.l.wrap.b32 	%r2552, %r2549, %r2550, 28;
	mov.b64 	%rd3694, {%r2552, %r2551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2554,%dummy}, %rd3674;
	}
	shf.l.wrap.b32 	%r2555, %r2554, %r2553, 20;
	shf.l.wrap.b32 	%r2556, %r2553, %r2554, 20;
	mov.b64 	%rd3695, {%r2556, %r2555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd3675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2558,%dummy}, %rd3675;
	}
	shf.l.wrap.b32 	%r2559, %r2558, %r2557, 3;
	shf.l.wrap.b32 	%r2560, %r2557, %r2558, 3;
	mov.b64 	%rd3696, {%r2560, %r2559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2561,%dummy}, %rd3681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2562}, %rd3681;
	}
	shf.r.wrap.b32 	%r2563, %r2562, %r2561, 19;
	shf.r.wrap.b32 	%r2564, %r2561, %r2562, 19;
	mov.b64 	%rd3697, {%r2564, %r2563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd3687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd3687;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 3;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 3;
	mov.b64 	%rd3698, {%r2568, %r2567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd3666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2570,%dummy}, %rd3666;
	}
	shf.l.wrap.b32 	%r2571, %r2570, %r2569, 1;
	shf.l.wrap.b32 	%r2572, %r2569, %r2570, 1;
	mov.b64 	%rd3699, {%r2572, %r2571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2573}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2574,%dummy}, %rd3672;
	}
	shf.l.wrap.b32 	%r2575, %r2574, %r2573, 6;
	shf.l.wrap.b32 	%r2576, %r2573, %r2574, 6;
	mov.b64 	%rd3700, {%r2576, %r2575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2577}, %rd3678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2578,%dummy}, %rd3678;
	}
	shf.l.wrap.b32 	%r2579, %r2578, %r2577, 25;
	shf.l.wrap.b32 	%r2580, %r2577, %r2578, 25;
	mov.b64 	%rd3701, {%r2580, %r2579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd3684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2582,%dummy}, %rd3684;
	}
	shf.l.wrap.b32 	%r2583, %r2582, %r2581, 8;
	shf.l.wrap.b32 	%r2584, %r2581, %r2582, 8;
	mov.b64 	%rd3702, {%r2584, %r2583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd3685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2586,%dummy}, %rd3685;
	}
	shf.l.wrap.b32 	%r2587, %r2586, %r2585, 18;
	shf.l.wrap.b32 	%r2588, %r2585, %r2586, 18;
	mov.b64 	%rd3703, {%r2588, %r2587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd3669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2590,%dummy}, %rd3669;
	}
	shf.l.wrap.b32 	%r2591, %r2590, %r2589, 27;
	shf.l.wrap.b32 	%r2592, %r2589, %r2590, 27;
	mov.b64 	%rd3704, {%r2592, %r2591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2593,%dummy}, %rd3670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2594}, %rd3670;
	}
	shf.r.wrap.b32 	%r2595, %r2594, %r2593, 28;
	shf.r.wrap.b32 	%r2596, %r2593, %r2594, 28;
	mov.b64 	%rd3705, {%r2596, %r2595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd3676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2598,%dummy}, %rd3676;
	}
	shf.l.wrap.b32 	%r2599, %r2598, %r2597, 10;
	shf.l.wrap.b32 	%r2600, %r2597, %r2598, 10;
	mov.b64 	%rd3706, {%r2600, %r2599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd3682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2602,%dummy}, %rd3682;
	}
	shf.l.wrap.b32 	%r2603, %r2602, %r2601, 15;
	shf.l.wrap.b32 	%r2604, %r2601, %r2602, 15;
	mov.b64 	%rd3707, {%r2604, %r2603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2605,%dummy}, %rd3688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2606}, %rd3688;
	}
	shf.r.wrap.b32 	%r2607, %r2606, %r2605, 8;
	shf.r.wrap.b32 	%r2608, %r2605, %r2606, 8;
	mov.b64 	%rd3708, {%r2608, %r2607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2609,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2610}, %rd3667;
	}
	shf.r.wrap.b32 	%r2611, %r2610, %r2609, 2;
	shf.r.wrap.b32 	%r2612, %r2609, %r2610, 2;
	mov.b64 	%rd3709, {%r2612, %r2611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd3673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd3673;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 9;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 9;
	mov.b64 	%rd3710, {%r2616, %r2615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2617,%dummy}, %rd3679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2618}, %rd3679;
	}
	shf.r.wrap.b32 	%r2619, %r2618, %r2617, 25;
	shf.r.wrap.b32 	%r2620, %r2617, %r2618, 25;
	mov.b64 	%rd3711, {%r2620, %r2619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2621,%dummy}, %rd3680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2622}, %rd3680;
	}
	shf.r.wrap.b32 	%r2623, %r2622, %r2621, 23;
	shf.r.wrap.b32 	%r2624, %r2621, %r2622, 23;
	mov.b64 	%rd3712, {%r2624, %r2623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2625}, %rd3686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2626,%dummy}, %rd3686;
	}
	shf.l.wrap.b32 	%r2627, %r2626, %r2625, 2;
	shf.l.wrap.b32 	%r2628, %r2625, %r2626, 2;
	mov.b64 	%rd3713, {%r2628, %r2627};
	not.b64 	%rd3714, %rd3690;
	and.b64  	%rd3715, %rd3691, %rd3714;
	xor.b64  	%rd3716, %rd3715, %rd3665;
	not.b64 	%rd3717, %rd3691;
	and.b64  	%rd3718, %rd3692, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3690;
	not.b64 	%rd3720, %rd3692;
	and.b64  	%rd3721, %rd3693, %rd3720;
	xor.b64  	%rd3722, %rd3721, %rd3691;
	not.b64 	%rd3723, %rd3693;
	and.b64  	%rd3724, %rd3665, %rd3723;
	xor.b64  	%rd3725, %rd3724, %rd3692;
	not.b64 	%rd3726, %rd3665;
	and.b64  	%rd3727, %rd3690, %rd3726;
	xor.b64  	%rd3728, %rd3727, %rd3693;
	not.b64 	%rd3729, %rd3695;
	and.b64  	%rd3730, %rd3696, %rd3729;
	xor.b64  	%rd3731, %rd3730, %rd3694;
	not.b64 	%rd3732, %rd3696;
	and.b64  	%rd3733, %rd3697, %rd3732;
	xor.b64  	%rd3734, %rd3733, %rd3695;
	not.b64 	%rd3735, %rd3697;
	and.b64  	%rd3736, %rd3698, %rd3735;
	xor.b64  	%rd3737, %rd3736, %rd3696;
	not.b64 	%rd3738, %rd3698;
	and.b64  	%rd3739, %rd3694, %rd3738;
	xor.b64  	%rd3740, %rd3739, %rd3697;
	not.b64 	%rd3741, %rd3694;
	and.b64  	%rd3742, %rd3695, %rd3741;
	xor.b64  	%rd3743, %rd3742, %rd3698;
	not.b64 	%rd3744, %rd3700;
	and.b64  	%rd3745, %rd3701, %rd3744;
	xor.b64  	%rd3746, %rd3745, %rd3699;
	not.b64 	%rd3747, %rd3701;
	and.b64  	%rd3748, %rd3702, %rd3747;
	xor.b64  	%rd3749, %rd3748, %rd3700;
	not.b64 	%rd3750, %rd3702;
	and.b64  	%rd3751, %rd3703, %rd3750;
	xor.b64  	%rd3752, %rd3751, %rd3701;
	not.b64 	%rd3753, %rd3703;
	and.b64  	%rd3754, %rd3699, %rd3753;
	xor.b64  	%rd3755, %rd3754, %rd3702;
	not.b64 	%rd3756, %rd3699;
	and.b64  	%rd3757, %rd3700, %rd3756;
	xor.b64  	%rd3758, %rd3757, %rd3703;
	not.b64 	%rd3759, %rd3705;
	and.b64  	%rd3760, %rd3706, %rd3759;
	xor.b64  	%rd3761, %rd3760, %rd3704;
	not.b64 	%rd3762, %rd3706;
	and.b64  	%rd3763, %rd3707, %rd3762;
	xor.b64  	%rd3764, %rd3763, %rd3705;
	not.b64 	%rd3765, %rd3707;
	and.b64  	%rd3766, %rd3708, %rd3765;
	xor.b64  	%rd3767, %rd3766, %rd3706;
	not.b64 	%rd3768, %rd3708;
	and.b64  	%rd3769, %rd3704, %rd3768;
	xor.b64  	%rd3770, %rd3769, %rd3707;
	not.b64 	%rd3771, %rd3704;
	and.b64  	%rd3772, %rd3705, %rd3771;
	xor.b64  	%rd3773, %rd3772, %rd3708;
	not.b64 	%rd3774, %rd3710;
	and.b64  	%rd3775, %rd3711, %rd3774;
	xor.b64  	%rd3776, %rd3775, %rd3709;
	not.b64 	%rd3777, %rd3711;
	and.b64  	%rd3778, %rd3712, %rd3777;
	xor.b64  	%rd3779, %rd3778, %rd3710;
	not.b64 	%rd3780, %rd3712;
	and.b64  	%rd3781, %rd3713, %rd3780;
	xor.b64  	%rd3782, %rd3781, %rd3711;
	not.b64 	%rd3783, %rd3713;
	and.b64  	%rd3784, %rd3709, %rd3783;
	xor.b64  	%rd3785, %rd3784, %rd3712;
	not.b64 	%rd3786, %rd3709;
	and.b64  	%rd3787, %rd3710, %rd3786;
	xor.b64  	%rd3788, %rd3787, %rd3713;
	xor.b64  	%rd3789, %rd3716, %rd37;
	xor.b64  	%rd3790, %rd3731, %rd3789;
	xor.b64  	%rd3791, %rd3790, %rd3746;
	xor.b64  	%rd3792, %rd3791, %rd3761;
	xor.b64  	%rd3793, %rd3792, %rd3776;
	xor.b64  	%rd3794, %rd3734, %rd3719;
	xor.b64  	%rd3795, %rd3794, %rd3749;
	xor.b64  	%rd3796, %rd3795, %rd3764;
	xor.b64  	%rd3797, %rd3796, %rd3779;
	xor.b64  	%rd3798, %rd3737, %rd3722;
	xor.b64  	%rd3799, %rd3798, %rd3752;
	xor.b64  	%rd3800, %rd3799, %rd3767;
	xor.b64  	%rd3801, %rd3800, %rd3782;
	xor.b64  	%rd3802, %rd3740, %rd3725;
	xor.b64  	%rd3803, %rd3802, %rd3755;
	xor.b64  	%rd3804, %rd3803, %rd3770;
	xor.b64  	%rd3805, %rd3804, %rd3785;
	xor.b64  	%rd3806, %rd3743, %rd3728;
	xor.b64  	%rd3807, %rd3806, %rd3758;
	xor.b64  	%rd3808, %rd3807, %rd3773;
	xor.b64  	%rd3809, %rd3808, %rd3788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2629}, %rd3797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2630,%dummy}, %rd3797;
	}
	shf.l.wrap.b32 	%r2631, %r2630, %r2629, 1;
	shf.l.wrap.b32 	%r2632, %r2629, %r2630, 1;
	mov.b64 	%rd3810, {%r2632, %r2631};
	xor.b64  	%rd3811, %rd3809, %rd3810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd3801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2634,%dummy}, %rd3801;
	}
	shf.l.wrap.b32 	%r2635, %r2634, %r2633, 1;
	shf.l.wrap.b32 	%r2636, %r2633, %r2634, 1;
	mov.b64 	%rd3812, {%r2636, %r2635};
	xor.b64  	%rd3813, %rd3812, %rd3793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2638,%dummy}, %rd3805;
	}
	shf.l.wrap.b32 	%r2639, %r2638, %r2637, 1;
	shf.l.wrap.b32 	%r2640, %r2637, %r2638, 1;
	mov.b64 	%rd3814, {%r2640, %r2639};
	xor.b64  	%rd3815, %rd3814, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2641}, %rd3809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2642,%dummy}, %rd3809;
	}
	shf.l.wrap.b32 	%r2643, %r2642, %r2641, 1;
	shf.l.wrap.b32 	%r2644, %r2641, %r2642, 1;
	mov.b64 	%rd3816, {%r2644, %r2643};
	xor.b64  	%rd3817, %rd3816, %rd3801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd3793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2646,%dummy}, %rd3793;
	}
	shf.l.wrap.b32 	%r2647, %r2646, %r2645, 1;
	shf.l.wrap.b32 	%r2648, %r2645, %r2646, 1;
	mov.b64 	%rd3818, {%r2648, %r2647};
	xor.b64  	%rd3819, %rd3805, %rd3818;
	xor.b64  	%rd3820, %rd3811, %rd3789;
	xor.b64  	%rd3821, %rd3813, %rd3719;
	xor.b64  	%rd3822, %rd3815, %rd3722;
	xor.b64  	%rd3823, %rd3817, %rd3725;
	xor.b64  	%rd3824, %rd3819, %rd3728;
	xor.b64  	%rd3825, %rd3811, %rd3731;
	xor.b64  	%rd3826, %rd3813, %rd3734;
	xor.b64  	%rd3827, %rd3815, %rd3737;
	xor.b64  	%rd3828, %rd3817, %rd3740;
	xor.b64  	%rd3829, %rd3819, %rd3743;
	xor.b64  	%rd3830, %rd3811, %rd3746;
	xor.b64  	%rd3831, %rd3813, %rd3749;
	xor.b64  	%rd3832, %rd3815, %rd3752;
	xor.b64  	%rd3833, %rd3817, %rd3755;
	xor.b64  	%rd3834, %rd3819, %rd3758;
	xor.b64  	%rd3835, %rd3811, %rd3761;
	xor.b64  	%rd3836, %rd3813, %rd3764;
	xor.b64  	%rd3837, %rd3815, %rd3767;
	xor.b64  	%rd3838, %rd3817, %rd3770;
	xor.b64  	%rd3839, %rd3819, %rd3773;
	xor.b64  	%rd3840, %rd3811, %rd3776;
	xor.b64  	%rd3841, %rd3813, %rd3779;
	xor.b64  	%rd3842, %rd3815, %rd3782;
	xor.b64  	%rd3843, %rd3817, %rd3785;
	xor.b64  	%rd3844, %rd3819, %rd3788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd3826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd3826;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 20;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 20;
	mov.b64 	%rd3845, {%r2652, %r2651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2653,%dummy}, %rd3832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2654}, %rd3832;
	}
	shf.r.wrap.b32 	%r2655, %r2654, %r2653, 21;
	shf.r.wrap.b32 	%r2656, %r2653, %r2654, 21;
	mov.b64 	%rd3846, {%r2656, %r2655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd3838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2658,%dummy}, %rd3838;
	}
	shf.l.wrap.b32 	%r2659, %r2658, %r2657, 21;
	shf.l.wrap.b32 	%r2660, %r2657, %r2658, 21;
	mov.b64 	%rd3847, {%r2660, %r2659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2661}, %rd3844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2662,%dummy}, %rd3844;
	}
	shf.l.wrap.b32 	%r2663, %r2662, %r2661, 14;
	shf.l.wrap.b32 	%r2664, %r2661, %r2662, 14;
	mov.b64 	%rd3848, {%r2664, %r2663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd3823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd3823;
	}
	shf.l.wrap.b32 	%r2667, %r2666, %r2665, 28;
	shf.l.wrap.b32 	%r2668, %r2665, %r2666, 28;
	mov.b64 	%rd3849, {%r2668, %r2667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd3829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2670,%dummy}, %rd3829;
	}
	shf.l.wrap.b32 	%r2671, %r2670, %r2669, 20;
	shf.l.wrap.b32 	%r2672, %r2669, %r2670, 20;
	mov.b64 	%rd3850, {%r2672, %r2671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd3830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2674,%dummy}, %rd3830;
	}
	shf.l.wrap.b32 	%r2675, %r2674, %r2673, 3;
	shf.l.wrap.b32 	%r2676, %r2673, %r2674, 3;
	mov.b64 	%rd3851, {%r2676, %r2675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd3836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd3836;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 19;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 19;
	mov.b64 	%rd3852, {%r2680, %r2679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2681,%dummy}, %rd3842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2682}, %rd3842;
	}
	shf.r.wrap.b32 	%r2683, %r2682, %r2681, 3;
	shf.r.wrap.b32 	%r2684, %r2681, %r2682, 3;
	mov.b64 	%rd3853, {%r2684, %r2683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2686,%dummy}, %rd3821;
	}
	shf.l.wrap.b32 	%r2687, %r2686, %r2685, 1;
	shf.l.wrap.b32 	%r2688, %r2685, %r2686, 1;
	mov.b64 	%rd3854, {%r2688, %r2687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2689}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2690,%dummy}, %rd3827;
	}
	shf.l.wrap.b32 	%r2691, %r2690, %r2689, 6;
	shf.l.wrap.b32 	%r2692, %r2689, %r2690, 6;
	mov.b64 	%rd3855, {%r2692, %r2691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2693}, %rd3833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd3833;
	}
	shf.l.wrap.b32 	%r2695, %r2694, %r2693, 25;
	shf.l.wrap.b32 	%r2696, %r2693, %r2694, 25;
	mov.b64 	%rd3856, {%r2696, %r2695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2697}, %rd3839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2698,%dummy}, %rd3839;
	}
	shf.l.wrap.b32 	%r2699, %r2698, %r2697, 8;
	shf.l.wrap.b32 	%r2700, %r2697, %r2698, 8;
	mov.b64 	%rd3857, {%r2700, %r2699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2701}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2702,%dummy}, %rd3840;
	}
	shf.l.wrap.b32 	%r2703, %r2702, %r2701, 18;
	shf.l.wrap.b32 	%r2704, %r2701, %r2702, 18;
	mov.b64 	%rd3858, {%r2704, %r2703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd3824;
	}
	shf.l.wrap.b32 	%r2707, %r2706, %r2705, 27;
	shf.l.wrap.b32 	%r2708, %r2705, %r2706, 27;
	mov.b64 	%rd3859, {%r2708, %r2707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd3825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2710}, %rd3825;
	}
	shf.r.wrap.b32 	%r2711, %r2710, %r2709, 28;
	shf.r.wrap.b32 	%r2712, %r2709, %r2710, 28;
	mov.b64 	%rd3860, {%r2712, %r2711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd3831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2714,%dummy}, %rd3831;
	}
	shf.l.wrap.b32 	%r2715, %r2714, %r2713, 10;
	shf.l.wrap.b32 	%r2716, %r2713, %r2714, 10;
	mov.b64 	%rd3861, {%r2716, %r2715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2717}, %rd3837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2718,%dummy}, %rd3837;
	}
	shf.l.wrap.b32 	%r2719, %r2718, %r2717, 15;
	shf.l.wrap.b32 	%r2720, %r2717, %r2718, 15;
	mov.b64 	%rd3862, {%r2720, %r2719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2721,%dummy}, %rd3843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2722}, %rd3843;
	}
	shf.r.wrap.b32 	%r2723, %r2722, %r2721, 8;
	shf.r.wrap.b32 	%r2724, %r2721, %r2722, 8;
	mov.b64 	%rd3863, {%r2724, %r2723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd3822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2726}, %rd3822;
	}
	shf.r.wrap.b32 	%r2727, %r2726, %r2725, 2;
	shf.r.wrap.b32 	%r2728, %r2725, %r2726, 2;
	mov.b64 	%rd3864, {%r2728, %r2727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2729,%dummy}, %rd3828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2730}, %rd3828;
	}
	shf.r.wrap.b32 	%r2731, %r2730, %r2729, 9;
	shf.r.wrap.b32 	%r2732, %r2729, %r2730, 9;
	mov.b64 	%rd3865, {%r2732, %r2731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2733,%dummy}, %rd3834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2734}, %rd3834;
	}
	shf.r.wrap.b32 	%r2735, %r2734, %r2733, 25;
	shf.r.wrap.b32 	%r2736, %r2733, %r2734, 25;
	mov.b64 	%rd3866, {%r2736, %r2735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2737,%dummy}, %rd3835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2738}, %rd3835;
	}
	shf.r.wrap.b32 	%r2739, %r2738, %r2737, 23;
	shf.r.wrap.b32 	%r2740, %r2737, %r2738, 23;
	mov.b64 	%rd3867, {%r2740, %r2739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2741}, %rd3841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2742,%dummy}, %rd3841;
	}
	shf.l.wrap.b32 	%r2743, %r2742, %r2741, 2;
	shf.l.wrap.b32 	%r2744, %r2741, %r2742, 2;
	mov.b64 	%rd3868, {%r2744, %r2743};
	not.b64 	%rd3869, %rd3845;
	and.b64  	%rd3870, %rd3846, %rd3869;
	xor.b64  	%rd3871, %rd3870, %rd3820;
	not.b64 	%rd3872, %rd3846;
	and.b64  	%rd3873, %rd3847, %rd3872;
	xor.b64  	%rd3874, %rd3873, %rd3845;
	not.b64 	%rd3875, %rd3847;
	and.b64  	%rd3876, %rd3848, %rd3875;
	xor.b64  	%rd3877, %rd3876, %rd3846;
	not.b64 	%rd3878, %rd3848;
	and.b64  	%rd3879, %rd3820, %rd3878;
	xor.b64  	%rd3880, %rd3879, %rd3847;
	not.b64 	%rd3881, %rd3820;
	and.b64  	%rd3882, %rd3845, %rd3881;
	xor.b64  	%rd3883, %rd3882, %rd3848;
	not.b64 	%rd3884, %rd3850;
	and.b64  	%rd3885, %rd3851, %rd3884;
	xor.b64  	%rd3886, %rd3885, %rd3849;
	not.b64 	%rd3887, %rd3851;
	and.b64  	%rd3888, %rd3852, %rd3887;
	xor.b64  	%rd3889, %rd3888, %rd3850;
	not.b64 	%rd3890, %rd3852;
	and.b64  	%rd3891, %rd3853, %rd3890;
	xor.b64  	%rd3892, %rd3891, %rd3851;
	not.b64 	%rd3893, %rd3853;
	and.b64  	%rd3894, %rd3849, %rd3893;
	xor.b64  	%rd3895, %rd3894, %rd3852;
	not.b64 	%rd3896, %rd3849;
	and.b64  	%rd3897, %rd3850, %rd3896;
	xor.b64  	%rd3898, %rd3897, %rd3853;
	not.b64 	%rd3899, %rd3855;
	and.b64  	%rd3900, %rd3856, %rd3899;
	xor.b64  	%rd3901, %rd3900, %rd3854;
	not.b64 	%rd3902, %rd3856;
	and.b64  	%rd3903, %rd3857, %rd3902;
	xor.b64  	%rd3904, %rd3903, %rd3855;
	not.b64 	%rd3905, %rd3857;
	and.b64  	%rd3906, %rd3858, %rd3905;
	xor.b64  	%rd3907, %rd3906, %rd3856;
	not.b64 	%rd3908, %rd3858;
	and.b64  	%rd3909, %rd3854, %rd3908;
	xor.b64  	%rd3910, %rd3909, %rd3857;
	not.b64 	%rd3911, %rd3854;
	and.b64  	%rd3912, %rd3855, %rd3911;
	xor.b64  	%rd3913, %rd3912, %rd3858;
	not.b64 	%rd3914, %rd3860;
	and.b64  	%rd3915, %rd3861, %rd3914;
	xor.b64  	%rd3916, %rd3915, %rd3859;
	not.b64 	%rd3917, %rd3861;
	and.b64  	%rd3918, %rd3862, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd3860;
	not.b64 	%rd3920, %rd3862;
	and.b64  	%rd3921, %rd3863, %rd3920;
	xor.b64  	%rd3922, %rd3921, %rd3861;
	not.b64 	%rd3923, %rd3863;
	and.b64  	%rd3924, %rd3859, %rd3923;
	xor.b64  	%rd3925, %rd3924, %rd3862;
	not.b64 	%rd3926, %rd3859;
	and.b64  	%rd3927, %rd3860, %rd3926;
	xor.b64  	%rd3928, %rd3927, %rd3863;
	not.b64 	%rd3929, %rd3865;
	and.b64  	%rd3930, %rd3866, %rd3929;
	xor.b64  	%rd3931, %rd3930, %rd3864;
	not.b64 	%rd3932, %rd3866;
	and.b64  	%rd3933, %rd3867, %rd3932;
	xor.b64  	%rd3934, %rd3933, %rd3865;
	not.b64 	%rd3935, %rd3867;
	and.b64  	%rd3936, %rd3868, %rd3935;
	xor.b64  	%rd3937, %rd3936, %rd3866;
	not.b64 	%rd3938, %rd3868;
	and.b64  	%rd3939, %rd3864, %rd3938;
	xor.b64  	%rd3940, %rd3939, %rd3867;
	not.b64 	%rd3941, %rd3864;
	and.b64  	%rd3942, %rd3865, %rd3941;
	xor.b64  	%rd3943, %rd3942, %rd3868;
	xor.b64  	%rd3944, %rd3871, %rd38;
	xor.b64  	%rd3945, %rd3886, %rd3944;
	xor.b64  	%rd3946, %rd3945, %rd3901;
	xor.b64  	%rd3947, %rd3946, %rd3916;
	xor.b64  	%rd3948, %rd3947, %rd3931;
	xor.b64  	%rd3949, %rd3889, %rd3874;
	xor.b64  	%rd3950, %rd3949, %rd3904;
	xor.b64  	%rd3951, %rd3950, %rd3919;
	xor.b64  	%rd3952, %rd3951, %rd3934;
	xor.b64  	%rd3953, %rd3892, %rd3877;
	xor.b64  	%rd3954, %rd3953, %rd3907;
	xor.b64  	%rd3955, %rd3954, %rd3922;
	xor.b64  	%rd3956, %rd3955, %rd3937;
	xor.b64  	%rd3957, %rd3895, %rd3880;
	xor.b64  	%rd3958, %rd3957, %rd3910;
	xor.b64  	%rd3959, %rd3958, %rd3925;
	xor.b64  	%rd3960, %rd3959, %rd3940;
	xor.b64  	%rd3961, %rd3898, %rd3883;
	xor.b64  	%rd3962, %rd3961, %rd3913;
	xor.b64  	%rd3963, %rd3962, %rd3928;
	xor.b64  	%rd3964, %rd3963, %rd3943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd3952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2746,%dummy}, %rd3952;
	}
	shf.l.wrap.b32 	%r2747, %r2746, %r2745, 1;
	shf.l.wrap.b32 	%r2748, %r2745, %r2746, 1;
	mov.b64 	%rd3965, {%r2748, %r2747};
	xor.b64  	%rd3966, %rd3964, %rd3965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2749}, %rd3956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2750,%dummy}, %rd3956;
	}
	shf.l.wrap.b32 	%r2751, %r2750, %r2749, 1;
	shf.l.wrap.b32 	%r2752, %r2749, %r2750, 1;
	mov.b64 	%rd3967, {%r2752, %r2751};
	xor.b64  	%rd3968, %rd3967, %rd3948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2753}, %rd3960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2754,%dummy}, %rd3960;
	}
	shf.l.wrap.b32 	%r2755, %r2754, %r2753, 1;
	shf.l.wrap.b32 	%r2756, %r2753, %r2754, 1;
	mov.b64 	%rd3969, {%r2756, %r2755};
	xor.b64  	%rd3970, %rd3969, %rd3952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2758,%dummy}, %rd3964;
	}
	shf.l.wrap.b32 	%r2759, %r2758, %r2757, 1;
	shf.l.wrap.b32 	%r2760, %r2757, %r2758, 1;
	mov.b64 	%rd3971, {%r2760, %r2759};
	xor.b64  	%rd3972, %rd3971, %rd3956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd3948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd3948;
	}
	shf.l.wrap.b32 	%r2763, %r2762, %r2761, 1;
	shf.l.wrap.b32 	%r2764, %r2761, %r2762, 1;
	mov.b64 	%rd3973, {%r2764, %r2763};
	xor.b64  	%rd3974, %rd3960, %rd3973;
	xor.b64  	%rd3975, %rd3966, %rd3944;
	xor.b64  	%rd3976, %rd3968, %rd3874;
	xor.b64  	%rd3977, %rd3970, %rd3877;
	xor.b64  	%rd3978, %rd3972, %rd3880;
	xor.b64  	%rd3979, %rd3974, %rd3883;
	xor.b64  	%rd3980, %rd3966, %rd3886;
	xor.b64  	%rd3981, %rd3968, %rd3889;
	xor.b64  	%rd3982, %rd3970, %rd3892;
	xor.b64  	%rd3983, %rd3972, %rd3895;
	xor.b64  	%rd3984, %rd3974, %rd3898;
	xor.b64  	%rd3985, %rd3966, %rd3901;
	xor.b64  	%rd3986, %rd3968, %rd3904;
	xor.b64  	%rd3987, %rd3970, %rd3907;
	xor.b64  	%rd3988, %rd3972, %rd3910;
	xor.b64  	%rd3989, %rd3974, %rd3913;
	xor.b64  	%rd3990, %rd3966, %rd3916;
	xor.b64  	%rd3991, %rd3968, %rd3919;
	xor.b64  	%rd3992, %rd3970, %rd3922;
	xor.b64  	%rd3993, %rd3972, %rd3925;
	xor.b64  	%rd3994, %rd3974, %rd3928;
	xor.b64  	%rd3995, %rd3966, %rd3931;
	xor.b64  	%rd3996, %rd3968, %rd3934;
	xor.b64  	%rd3997, %rd3970, %rd3937;
	xor.b64  	%rd3998, %rd3972, %rd3940;
	xor.b64  	%rd3999, %rd3974, %rd3943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2765,%dummy}, %rd3981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2766}, %rd3981;
	}
	shf.r.wrap.b32 	%r2767, %r2766, %r2765, 20;
	shf.r.wrap.b32 	%r2768, %r2765, %r2766, 20;
	mov.b64 	%rd4000, {%r2768, %r2767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd3987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd3987;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 21;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 21;
	mov.b64 	%rd4001, {%r2772, %r2771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2773}, %rd3993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2774,%dummy}, %rd3993;
	}
	shf.l.wrap.b32 	%r2775, %r2774, %r2773, 21;
	shf.l.wrap.b32 	%r2776, %r2773, %r2774, 21;
	mov.b64 	%rd4002, {%r2776, %r2775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd3999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd3999;
	}
	shf.l.wrap.b32 	%r2779, %r2778, %r2777, 14;
	shf.l.wrap.b32 	%r2780, %r2777, %r2778, 14;
	mov.b64 	%rd4003, {%r2780, %r2779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2781}, %rd3978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2782,%dummy}, %rd3978;
	}
	shf.l.wrap.b32 	%r2783, %r2782, %r2781, 28;
	shf.l.wrap.b32 	%r2784, %r2781, %r2782, 28;
	mov.b64 	%rd4004, {%r2784, %r2783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd3984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd3984;
	}
	shf.l.wrap.b32 	%r2787, %r2786, %r2785, 20;
	shf.l.wrap.b32 	%r2788, %r2785, %r2786, 20;
	mov.b64 	%rd4005, {%r2788, %r2787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2789}, %rd3985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd3985;
	}
	shf.l.wrap.b32 	%r2791, %r2790, %r2789, 3;
	shf.l.wrap.b32 	%r2792, %r2789, %r2790, 3;
	mov.b64 	%rd4006, {%r2792, %r2791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2793,%dummy}, %rd3991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2794}, %rd3991;
	}
	shf.r.wrap.b32 	%r2795, %r2794, %r2793, 19;
	shf.r.wrap.b32 	%r2796, %r2793, %r2794, 19;
	mov.b64 	%rd4007, {%r2796, %r2795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2797,%dummy}, %rd3997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2798}, %rd3997;
	}
	shf.r.wrap.b32 	%r2799, %r2798, %r2797, 3;
	shf.r.wrap.b32 	%r2800, %r2797, %r2798, 3;
	mov.b64 	%rd4008, {%r2800, %r2799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2801}, %rd3976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2802,%dummy}, %rd3976;
	}
	shf.l.wrap.b32 	%r2803, %r2802, %r2801, 1;
	shf.l.wrap.b32 	%r2804, %r2801, %r2802, 1;
	mov.b64 	%rd4009, {%r2804, %r2803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd3982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2806,%dummy}, %rd3982;
	}
	shf.l.wrap.b32 	%r2807, %r2806, %r2805, 6;
	shf.l.wrap.b32 	%r2808, %r2805, %r2806, 6;
	mov.b64 	%rd4010, {%r2808, %r2807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd3988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2810,%dummy}, %rd3988;
	}
	shf.l.wrap.b32 	%r2811, %r2810, %r2809, 25;
	shf.l.wrap.b32 	%r2812, %r2809, %r2810, 25;
	mov.b64 	%rd4011, {%r2812, %r2811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2813}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2814,%dummy}, %rd3994;
	}
	shf.l.wrap.b32 	%r2815, %r2814, %r2813, 8;
	shf.l.wrap.b32 	%r2816, %r2813, %r2814, 8;
	mov.b64 	%rd4012, {%r2816, %r2815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2817}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd3995;
	}
	shf.l.wrap.b32 	%r2819, %r2818, %r2817, 18;
	shf.l.wrap.b32 	%r2820, %r2817, %r2818, 18;
	mov.b64 	%rd4013, {%r2820, %r2819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2821}, %rd3979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2822,%dummy}, %rd3979;
	}
	shf.l.wrap.b32 	%r2823, %r2822, %r2821, 27;
	shf.l.wrap.b32 	%r2824, %r2821, %r2822, 27;
	mov.b64 	%rd4014, {%r2824, %r2823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd3980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2826}, %rd3980;
	}
	shf.r.wrap.b32 	%r2827, %r2826, %r2825, 28;
	shf.r.wrap.b32 	%r2828, %r2825, %r2826, 28;
	mov.b64 	%rd4015, {%r2828, %r2827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2829}, %rd3986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2830,%dummy}, %rd3986;
	}
	shf.l.wrap.b32 	%r2831, %r2830, %r2829, 10;
	shf.l.wrap.b32 	%r2832, %r2829, %r2830, 10;
	mov.b64 	%rd4016, {%r2832, %r2831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd3992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd3992;
	}
	shf.l.wrap.b32 	%r2835, %r2834, %r2833, 15;
	shf.l.wrap.b32 	%r2836, %r2833, %r2834, 15;
	mov.b64 	%rd4017, {%r2836, %r2835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2837,%dummy}, %rd3998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2838}, %rd3998;
	}
	shf.r.wrap.b32 	%r2839, %r2838, %r2837, 8;
	shf.r.wrap.b32 	%r2840, %r2837, %r2838, 8;
	mov.b64 	%rd4018, {%r2840, %r2839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2841,%dummy}, %rd3977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2842}, %rd3977;
	}
	shf.r.wrap.b32 	%r2843, %r2842, %r2841, 2;
	shf.r.wrap.b32 	%r2844, %r2841, %r2842, 2;
	mov.b64 	%rd4019, {%r2844, %r2843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2845,%dummy}, %rd3983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2846}, %rd3983;
	}
	shf.r.wrap.b32 	%r2847, %r2846, %r2845, 9;
	shf.r.wrap.b32 	%r2848, %r2845, %r2846, 9;
	mov.b64 	%rd4020, {%r2848, %r2847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2849,%dummy}, %rd3989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2850}, %rd3989;
	}
	shf.r.wrap.b32 	%r2851, %r2850, %r2849, 25;
	shf.r.wrap.b32 	%r2852, %r2849, %r2850, 25;
	mov.b64 	%rd4021, {%r2852, %r2851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2853,%dummy}, %rd3990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2854}, %rd3990;
	}
	shf.r.wrap.b32 	%r2855, %r2854, %r2853, 23;
	shf.r.wrap.b32 	%r2856, %r2853, %r2854, 23;
	mov.b64 	%rd4022, {%r2856, %r2855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2857}, %rd3996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd3996;
	}
	shf.l.wrap.b32 	%r2859, %r2858, %r2857, 2;
	shf.l.wrap.b32 	%r2860, %r2857, %r2858, 2;
	mov.b64 	%rd4023, {%r2860, %r2859};
	not.b64 	%rd4024, %rd4000;
	and.b64  	%rd4025, %rd4001, %rd4024;
	xor.b64  	%rd4026, %rd4025, %rd3975;
	not.b64 	%rd4027, %rd4001;
	and.b64  	%rd4028, %rd4002, %rd4027;
	xor.b64  	%rd4029, %rd4028, %rd4000;
	st.local.u64 	[%rd2+8], %rd4029;
	not.b64 	%rd4030, %rd4002;
	and.b64  	%rd4031, %rd4003, %rd4030;
	xor.b64  	%rd4032, %rd4031, %rd4001;
	st.local.u64 	[%rd2+16], %rd4032;
	not.b64 	%rd4033, %rd4003;
	and.b64  	%rd4034, %rd3975, %rd4033;
	xor.b64  	%rd4035, %rd4034, %rd4002;
	st.local.u64 	[%rd2+24], %rd4035;
	not.b64 	%rd4036, %rd3975;
	and.b64  	%rd4037, %rd4000, %rd4036;
	xor.b64  	%rd4038, %rd4037, %rd4003;
	st.local.u64 	[%rd2+32], %rd4038;
	not.b64 	%rd4039, %rd4005;
	and.b64  	%rd4040, %rd4006, %rd4039;
	xor.b64  	%rd4041, %rd4040, %rd4004;
	st.local.u64 	[%rd2+40], %rd4041;
	not.b64 	%rd4042, %rd4006;
	and.b64  	%rd4043, %rd4007, %rd4042;
	xor.b64  	%rd4044, %rd4043, %rd4005;
	st.local.u64 	[%rd2+48], %rd4044;
	not.b64 	%rd4045, %rd4007;
	and.b64  	%rd4046, %rd4008, %rd4045;
	xor.b64  	%rd4047, %rd4046, %rd4006;
	st.local.u64 	[%rd2+56], %rd4047;
	not.b64 	%rd4048, %rd4008;
	and.b64  	%rd4049, %rd4004, %rd4048;
	xor.b64  	%rd4050, %rd4049, %rd4007;
	st.local.u64 	[%rd2+64], %rd4050;
	not.b64 	%rd4051, %rd4004;
	and.b64  	%rd4052, %rd4005, %rd4051;
	xor.b64  	%rd4053, %rd4052, %rd4008;
	st.local.u64 	[%rd2+72], %rd4053;
	not.b64 	%rd4054, %rd4010;
	and.b64  	%rd4055, %rd4011, %rd4054;
	xor.b64  	%rd4056, %rd4055, %rd4009;
	st.local.u64 	[%rd2+80], %rd4056;
	not.b64 	%rd4057, %rd4011;
	and.b64  	%rd4058, %rd4012, %rd4057;
	xor.b64  	%rd4059, %rd4058, %rd4010;
	st.local.u64 	[%rd2+88], %rd4059;
	not.b64 	%rd4060, %rd4012;
	and.b64  	%rd4061, %rd4013, %rd4060;
	xor.b64  	%rd4062, %rd4061, %rd4011;
	st.local.u64 	[%rd2+96], %rd4062;
	not.b64 	%rd4063, %rd4013;
	and.b64  	%rd4064, %rd4009, %rd4063;
	xor.b64  	%rd4065, %rd4064, %rd4012;
	st.local.u64 	[%rd2+104], %rd4065;
	not.b64 	%rd4066, %rd4009;
	and.b64  	%rd4067, %rd4010, %rd4066;
	xor.b64  	%rd4068, %rd4067, %rd4013;
	st.local.u64 	[%rd2+112], %rd4068;
	not.b64 	%rd4069, %rd4015;
	and.b64  	%rd4070, %rd4016, %rd4069;
	xor.b64  	%rd4071, %rd4070, %rd4014;
	st.local.u64 	[%rd2+120], %rd4071;
	not.b64 	%rd4072, %rd4016;
	and.b64  	%rd4073, %rd4017, %rd4072;
	xor.b64  	%rd4074, %rd4073, %rd4015;
	st.local.u64 	[%rd2+128], %rd4074;
	not.b64 	%rd4075, %rd4017;
	and.b64  	%rd4076, %rd4018, %rd4075;
	xor.b64  	%rd4077, %rd4076, %rd4016;
	st.local.u64 	[%rd2+136], %rd4077;
	not.b64 	%rd4078, %rd4018;
	and.b64  	%rd4079, %rd4014, %rd4078;
	xor.b64  	%rd4080, %rd4079, %rd4017;
	st.local.u64 	[%rd2+144], %rd4080;
	not.b64 	%rd4081, %rd4014;
	and.b64  	%rd4082, %rd4015, %rd4081;
	xor.b64  	%rd4083, %rd4082, %rd4018;
	st.local.u64 	[%rd2+152], %rd4083;
	not.b64 	%rd4084, %rd4020;
	and.b64  	%rd4085, %rd4021, %rd4084;
	xor.b64  	%rd4086, %rd4085, %rd4019;
	st.local.u64 	[%rd2+160], %rd4086;
	not.b64 	%rd4087, %rd4021;
	and.b64  	%rd4088, %rd4022, %rd4087;
	xor.b64  	%rd4089, %rd4088, %rd4020;
	st.local.u64 	[%rd2+168], %rd4089;
	not.b64 	%rd4090, %rd4022;
	and.b64  	%rd4091, %rd4023, %rd4090;
	xor.b64  	%rd4092, %rd4091, %rd4021;
	st.local.u64 	[%rd2+176], %rd4092;
	not.b64 	%rd4093, %rd4023;
	and.b64  	%rd4094, %rd4019, %rd4093;
	xor.b64  	%rd4095, %rd4094, %rd4022;
	st.local.u64 	[%rd2+184], %rd4095;
	not.b64 	%rd4096, %rd4019;
	and.b64  	%rd4097, %rd4020, %rd4096;
	xor.b64  	%rd4098, %rd4097, %rd4023;
	st.local.u64 	[%rd2+192], %rd4098;
	xor.b64  	%rd4099, %rd4026, %rd39;
	st.local.u64 	[%rd2], %rd4099;
	sub.s64 	%rd4100, %rd381, %rd14;
	add.s64 	%rd19844, %rd14, %rd19844;
	setp.gt.s64 	%p16, %rd19844, %rd4100;
	@%p16 bra 	$L__BB2_29;
	bra.uni 	$L__BB2_7;

$L__BB2_29:
	setp.lt.u64 	%p26, %rd19844, 64;
	@%p26 bra 	$L__BB2_6;

	shl.b64 	%rd7991, %rd19843, 3;
	st.local.u64 	[%rd2+392], %rd7991;
	and.b64  	%rd7992, %rd19843, 2305843009213693951;
	add.s64 	%rd7993, %rd2, %rd7992;
	ld.local.u8 	%rs46, [%rd7993+200];
	or.b16  	%rs47, %rs46, 1;
	st.local.u8 	[%rd7993+200], %rs47;
	ld.local.u64 	%rd7994, [%rd2+392];
	add.s64 	%rd19853, %rd7994, 1;
	st.local.u64 	[%rd2+392], %rd19853;
	ld.const.u64 	%rd7995, [rate_bits];
	setp.ne.s64 	%p27, %rd19853, %rd7995;
	@%p27 bra 	$L__BB2_38;

	setp.eq.s64 	%p28, %rd15, 0;
	@%p28 bra 	$L__BB2_37;

	add.s64 	%rd7998, %rd15, -1;
	and.b64  	%rd19852, %rd15, 3;
	setp.lt.u64 	%p29, %rd7998, 3;
	mov.u64 	%rd19848, 0;
	mov.u64 	%rd19849, %rd19848;
	@%p29 bra 	$L__BB2_35;

	sub.s64 	%rd19847, %rd15, %rd19852;

$L__BB2_34:
	add.s64 	%rd8001, %rd2, %rd19849;
	ld.local.u64 	%rd8002, [%rd8001];
	ld.local.u8 	%rd8003, [%rd8001+200];
	ld.local.u8 	%rd8004, [%rd8001+201];
	bfi.b64 	%rd8005, %rd8004, %rd8003, 8, 8;
	ld.local.u8 	%rd8006, [%rd8001+202];
	ld.local.u8 	%rd8007, [%rd8001+203];
	bfi.b64 	%rd8008, %rd8007, %rd8006, 8, 8;
	bfi.b64 	%rd8009, %rd8008, %rd8005, 16, 16;
	ld.local.u8 	%rd8010, [%rd8001+204];
	ld.local.u8 	%rd8011, [%rd8001+205];
	bfi.b64 	%rd8012, %rd8011, %rd8010, 8, 8;
	ld.local.u8 	%rd8013, [%rd8001+206];
	ld.local.u8 	%rd8014, [%rd8001+207];
	bfi.b64 	%rd8015, %rd8014, %rd8013, 8, 8;
	bfi.b64 	%rd8016, %rd8015, %rd8012, 16, 16;
	bfi.b64 	%rd8017, %rd8016, %rd8009, 32, 32;
	xor.b64  	%rd8018, %rd8002, %rd8017;
	st.local.u64 	[%rd8001], %rd8018;
	ld.local.u64 	%rd8019, [%rd8001+8];
	ld.local.u8 	%rd8020, [%rd8001+208];
	ld.local.u8 	%rd8021, [%rd8001+209];
	bfi.b64 	%rd8022, %rd8021, %rd8020, 8, 8;
	ld.local.u8 	%rd8023, [%rd8001+210];
	ld.local.u8 	%rd8024, [%rd8001+211];
	bfi.b64 	%rd8025, %rd8024, %rd8023, 8, 8;
	bfi.b64 	%rd8026, %rd8025, %rd8022, 16, 16;
	ld.local.u8 	%rd8027, [%rd8001+212];
	ld.local.u8 	%rd8028, [%rd8001+213];
	bfi.b64 	%rd8029, %rd8028, %rd8027, 8, 8;
	ld.local.u8 	%rd8030, [%rd8001+214];
	ld.local.u8 	%rd8031, [%rd8001+215];
	bfi.b64 	%rd8032, %rd8031, %rd8030, 8, 8;
	bfi.b64 	%rd8033, %rd8032, %rd8029, 16, 16;
	bfi.b64 	%rd8034, %rd8033, %rd8026, 32, 32;
	xor.b64  	%rd8035, %rd8019, %rd8034;
	st.local.u64 	[%rd8001+8], %rd8035;
	ld.local.u64 	%rd8036, [%rd8001+16];
	ld.local.u8 	%rd8037, [%rd8001+216];
	ld.local.u8 	%rd8038, [%rd8001+217];
	bfi.b64 	%rd8039, %rd8038, %rd8037, 8, 8;
	ld.local.u8 	%rd8040, [%rd8001+218];
	ld.local.u8 	%rd8041, [%rd8001+219];
	bfi.b64 	%rd8042, %rd8041, %rd8040, 8, 8;
	bfi.b64 	%rd8043, %rd8042, %rd8039, 16, 16;
	ld.local.u8 	%rd8044, [%rd8001+220];
	ld.local.u8 	%rd8045, [%rd8001+221];
	bfi.b64 	%rd8046, %rd8045, %rd8044, 8, 8;
	ld.local.u8 	%rd8047, [%rd8001+222];
	ld.local.u8 	%rd8048, [%rd8001+223];
	bfi.b64 	%rd8049, %rd8048, %rd8047, 8, 8;
	bfi.b64 	%rd8050, %rd8049, %rd8046, 16, 16;
	bfi.b64 	%rd8051, %rd8050, %rd8043, 32, 32;
	xor.b64  	%rd8052, %rd8036, %rd8051;
	st.local.u64 	[%rd8001+16], %rd8052;
	ld.local.u64 	%rd8053, [%rd8001+24];
	ld.local.u8 	%rd8054, [%rd8001+224];
	ld.local.u8 	%rd8055, [%rd8001+225];
	bfi.b64 	%rd8056, %rd8055, %rd8054, 8, 8;
	ld.local.u8 	%rd8057, [%rd8001+226];
	ld.local.u8 	%rd8058, [%rd8001+227];
	bfi.b64 	%rd8059, %rd8058, %rd8057, 8, 8;
	bfi.b64 	%rd8060, %rd8059, %rd8056, 16, 16;
	ld.local.u8 	%rd8061, [%rd8001+228];
	ld.local.u8 	%rd8062, [%rd8001+229];
	bfi.b64 	%rd8063, %rd8062, %rd8061, 8, 8;
	ld.local.u8 	%rd8064, [%rd8001+230];
	ld.local.u8 	%rd8065, [%rd8001+231];
	bfi.b64 	%rd8066, %rd8065, %rd8064, 8, 8;
	bfi.b64 	%rd8067, %rd8066, %rd8063, 16, 16;
	bfi.b64 	%rd8068, %rd8067, %rd8060, 32, 32;
	xor.b64  	%rd8069, %rd8053, %rd8068;
	st.local.u64 	[%rd8001+24], %rd8069;
	add.s64 	%rd19849, %rd19849, 32;
	add.s64 	%rd19848, %rd19848, 4;
	add.s64 	%rd19847, %rd19847, -4;
	setp.ne.s64 	%p30, %rd19847, 0;
	@%p30 bra 	$L__BB2_34;

$L__BB2_35:
	setp.eq.s64 	%p31, %rd19852, 0;
	@%p31 bra 	$L__BB2_37;

$L__BB2_36:
	.pragma "nounroll";
	add.s64 	%rd8070, %rd2, %rd19849;
	shl.b64 	%rd8071, %rd19848, 3;
	add.s64 	%rd8072, %rd2, %rd8071;
	ld.local.u64 	%rd8073, [%rd8072];
	ld.local.u8 	%rd8074, [%rd8070+200];
	ld.local.u8 	%rd8075, [%rd8070+201];
	bfi.b64 	%rd8076, %rd8075, %rd8074, 8, 8;
	ld.local.u8 	%rd8077, [%rd8070+202];
	ld.local.u8 	%rd8078, [%rd8070+203];
	bfi.b64 	%rd8079, %rd8078, %rd8077, 8, 8;
	bfi.b64 	%rd8080, %rd8079, %rd8076, 16, 16;
	ld.local.u8 	%rd8081, [%rd8070+204];
	ld.local.u8 	%rd8082, [%rd8070+205];
	bfi.b64 	%rd8083, %rd8082, %rd8081, 8, 8;
	ld.local.u8 	%rd8084, [%rd8070+206];
	ld.local.u8 	%rd8085, [%rd8070+207];
	bfi.b64 	%rd8086, %rd8085, %rd8084, 8, 8;
	bfi.b64 	%rd8087, %rd8086, %rd8083, 16, 16;
	bfi.b64 	%rd8088, %rd8087, %rd8080, 32, 32;
	xor.b64  	%rd8089, %rd8073, %rd8088;
	st.local.u64 	[%rd8072], %rd8089;
	add.s64 	%rd19849, %rd19849, 8;
	add.s64 	%rd19848, %rd19848, 1;
	add.s64 	%rd19852, %rd19852, -1;
	setp.ne.s64 	%p32, %rd19852, 0;
	@%p32 bra 	$L__BB2_36;

$L__BB2_37:
	ld.local.u64 	%rd8091, [%rd2+40];
	mov.u64 	%rd19853, 0;
	ld.local.u64 	%rd8092, [%rd2];
	xor.b64  	%rd8093, %rd8091, %rd8092;
	ld.local.u64 	%rd8094, [%rd2+80];
	xor.b64  	%rd8095, %rd8093, %rd8094;
	ld.local.u64 	%rd8096, [%rd2+120];
	xor.b64  	%rd8097, %rd8095, %rd8096;
	ld.local.u64 	%rd8098, [%rd2+160];
	xor.b64  	%rd8099, %rd8097, %rd8098;
	ld.local.u64 	%rd8100, [%rd2+48];
	ld.local.u64 	%rd8101, [%rd2+8];
	xor.b64  	%rd8102, %rd8100, %rd8101;
	ld.local.u64 	%rd8103, [%rd2+88];
	xor.b64  	%rd8104, %rd8102, %rd8103;
	ld.local.u64 	%rd8105, [%rd2+128];
	xor.b64  	%rd8106, %rd8104, %rd8105;
	ld.local.u64 	%rd8107, [%rd2+168];
	xor.b64  	%rd8108, %rd8106, %rd8107;
	ld.local.u64 	%rd8109, [%rd2+56];
	ld.local.u64 	%rd8110, [%rd2+16];
	xor.b64  	%rd8111, %rd8109, %rd8110;
	ld.local.u64 	%rd8112, [%rd2+96];
	xor.b64  	%rd8113, %rd8111, %rd8112;
	ld.local.u64 	%rd8114, [%rd2+136];
	xor.b64  	%rd8115, %rd8113, %rd8114;
	ld.local.u64 	%rd8116, [%rd2+176];
	xor.b64  	%rd8117, %rd8115, %rd8116;
	ld.local.u64 	%rd8118, [%rd2+64];
	ld.local.u64 	%rd8119, [%rd2+24];
	xor.b64  	%rd8120, %rd8118, %rd8119;
	ld.local.u64 	%rd8121, [%rd2+104];
	xor.b64  	%rd8122, %rd8120, %rd8121;
	ld.local.u64 	%rd8123, [%rd2+144];
	xor.b64  	%rd8124, %rd8122, %rd8123;
	ld.local.u64 	%rd8125, [%rd2+184];
	xor.b64  	%rd8126, %rd8124, %rd8125;
	ld.local.u64 	%rd8127, [%rd2+72];
	ld.local.u64 	%rd8128, [%rd2+32];
	xor.b64  	%rd8129, %rd8127, %rd8128;
	ld.local.u64 	%rd8130, [%rd2+112];
	xor.b64  	%rd8131, %rd8129, %rd8130;
	ld.local.u64 	%rd8132, [%rd2+152];
	xor.b64  	%rd8133, %rd8131, %rd8132;
	ld.local.u64 	%rd8134, [%rd2+192];
	xor.b64  	%rd8135, %rd8133, %rd8134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5645}, %rd8108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5646,%dummy}, %rd8108;
	}
	shf.l.wrap.b32 	%r5647, %r5646, %r5645, 1;
	shf.l.wrap.b32 	%r5648, %r5645, %r5646, 1;
	mov.b64 	%rd8136, {%r5648, %r5647};
	xor.b64  	%rd8137, %rd8135, %rd8136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd8117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5650,%dummy}, %rd8117;
	}
	shf.l.wrap.b32 	%r5651, %r5650, %r5649, 1;
	shf.l.wrap.b32 	%r5652, %r5649, %r5650, 1;
	mov.b64 	%rd8138, {%r5652, %r5651};
	xor.b64  	%rd8139, %rd8138, %rd8099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5653}, %rd8126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5654,%dummy}, %rd8126;
	}
	shf.l.wrap.b32 	%r5655, %r5654, %r5653, 1;
	shf.l.wrap.b32 	%r5656, %r5653, %r5654, 1;
	mov.b64 	%rd8140, {%r5656, %r5655};
	xor.b64  	%rd8141, %rd8140, %rd8108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd8135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5658,%dummy}, %rd8135;
	}
	shf.l.wrap.b32 	%r5659, %r5658, %r5657, 1;
	shf.l.wrap.b32 	%r5660, %r5657, %r5658, 1;
	mov.b64 	%rd8142, {%r5660, %r5659};
	xor.b64  	%rd8143, %rd8142, %rd8117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5661}, %rd8099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5662,%dummy}, %rd8099;
	}
	shf.l.wrap.b32 	%r5663, %r5662, %r5661, 1;
	shf.l.wrap.b32 	%r5664, %r5661, %r5662, 1;
	mov.b64 	%rd8144, {%r5664, %r5663};
	xor.b64  	%rd8145, %rd8126, %rd8144;
	xor.b64  	%rd8146, %rd8137, %rd8092;
	xor.b64  	%rd8147, %rd8139, %rd8101;
	xor.b64  	%rd8148, %rd8141, %rd8110;
	xor.b64  	%rd8149, %rd8143, %rd8119;
	xor.b64  	%rd8150, %rd8145, %rd8128;
	xor.b64  	%rd8151, %rd8137, %rd8091;
	xor.b64  	%rd8152, %rd8139, %rd8100;
	xor.b64  	%rd8153, %rd8141, %rd8109;
	xor.b64  	%rd8154, %rd8143, %rd8118;
	xor.b64  	%rd8155, %rd8145, %rd8127;
	xor.b64  	%rd8156, %rd8137, %rd8094;
	xor.b64  	%rd8157, %rd8139, %rd8103;
	xor.b64  	%rd8158, %rd8141, %rd8112;
	xor.b64  	%rd8159, %rd8143, %rd8121;
	xor.b64  	%rd8160, %rd8145, %rd8130;
	xor.b64  	%rd8161, %rd8137, %rd8096;
	xor.b64  	%rd8162, %rd8139, %rd8105;
	xor.b64  	%rd8163, %rd8141, %rd8114;
	xor.b64  	%rd8164, %rd8143, %rd8123;
	xor.b64  	%rd8165, %rd8145, %rd8132;
	xor.b64  	%rd8166, %rd8137, %rd8098;
	xor.b64  	%rd8167, %rd8139, %rd8107;
	xor.b64  	%rd8168, %rd8141, %rd8116;
	xor.b64  	%rd8169, %rd8143, %rd8125;
	xor.b64  	%rd8170, %rd8145, %rd8134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5665,%dummy}, %rd8152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5666}, %rd8152;
	}
	shf.r.wrap.b32 	%r5667, %r5666, %r5665, 20;
	shf.r.wrap.b32 	%r5668, %r5665, %r5666, 20;
	mov.b64 	%rd8171, {%r5668, %r5667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5669,%dummy}, %rd8158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5670}, %rd8158;
	}
	shf.r.wrap.b32 	%r5671, %r5670, %r5669, 21;
	shf.r.wrap.b32 	%r5672, %r5669, %r5670, 21;
	mov.b64 	%rd8172, {%r5672, %r5671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd8164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd8164;
	}
	shf.l.wrap.b32 	%r5675, %r5674, %r5673, 21;
	shf.l.wrap.b32 	%r5676, %r5673, %r5674, 21;
	mov.b64 	%rd8173, {%r5676, %r5675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5677}, %rd8170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5678,%dummy}, %rd8170;
	}
	shf.l.wrap.b32 	%r5679, %r5678, %r5677, 14;
	shf.l.wrap.b32 	%r5680, %r5677, %r5678, 14;
	mov.b64 	%rd8174, {%r5680, %r5679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd8149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd8149;
	}
	shf.l.wrap.b32 	%r5683, %r5682, %r5681, 28;
	shf.l.wrap.b32 	%r5684, %r5681, %r5682, 28;
	mov.b64 	%rd8175, {%r5684, %r5683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5685}, %rd8155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5686,%dummy}, %rd8155;
	}
	shf.l.wrap.b32 	%r5687, %r5686, %r5685, 20;
	shf.l.wrap.b32 	%r5688, %r5685, %r5686, 20;
	mov.b64 	%rd8176, {%r5688, %r5687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd8156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd8156;
	}
	shf.l.wrap.b32 	%r5691, %r5690, %r5689, 3;
	shf.l.wrap.b32 	%r5692, %r5689, %r5690, 3;
	mov.b64 	%rd8177, {%r5692, %r5691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5693,%dummy}, %rd8162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5694}, %rd8162;
	}
	shf.r.wrap.b32 	%r5695, %r5694, %r5693, 19;
	shf.r.wrap.b32 	%r5696, %r5693, %r5694, 19;
	mov.b64 	%rd8178, {%r5696, %r5695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5697,%dummy}, %rd8168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5698}, %rd8168;
	}
	shf.r.wrap.b32 	%r5699, %r5698, %r5697, 3;
	shf.r.wrap.b32 	%r5700, %r5697, %r5698, 3;
	mov.b64 	%rd8179, {%r5700, %r5699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5701}, %rd8147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5702,%dummy}, %rd8147;
	}
	shf.l.wrap.b32 	%r5703, %r5702, %r5701, 1;
	shf.l.wrap.b32 	%r5704, %r5701, %r5702, 1;
	mov.b64 	%rd8180, {%r5704, %r5703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd8153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5706,%dummy}, %rd8153;
	}
	shf.l.wrap.b32 	%r5707, %r5706, %r5705, 6;
	shf.l.wrap.b32 	%r5708, %r5705, %r5706, 6;
	mov.b64 	%rd8181, {%r5708, %r5707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5709}, %rd8159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5710,%dummy}, %rd8159;
	}
	shf.l.wrap.b32 	%r5711, %r5710, %r5709, 25;
	shf.l.wrap.b32 	%r5712, %r5709, %r5710, 25;
	mov.b64 	%rd8182, {%r5712, %r5711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd8165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5714,%dummy}, %rd8165;
	}
	shf.l.wrap.b32 	%r5715, %r5714, %r5713, 8;
	shf.l.wrap.b32 	%r5716, %r5713, %r5714, 8;
	mov.b64 	%rd8183, {%r5716, %r5715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd8166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5718,%dummy}, %rd8166;
	}
	shf.l.wrap.b32 	%r5719, %r5718, %r5717, 18;
	shf.l.wrap.b32 	%r5720, %r5717, %r5718, 18;
	mov.b64 	%rd8184, {%r5720, %r5719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd8150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5722,%dummy}, %rd8150;
	}
	shf.l.wrap.b32 	%r5723, %r5722, %r5721, 27;
	shf.l.wrap.b32 	%r5724, %r5721, %r5722, 27;
	mov.b64 	%rd8185, {%r5724, %r5723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5725,%dummy}, %rd8151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd8151;
	}
	shf.r.wrap.b32 	%r5727, %r5726, %r5725, 28;
	shf.r.wrap.b32 	%r5728, %r5725, %r5726, 28;
	mov.b64 	%rd8186, {%r5728, %r5727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd8157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5730,%dummy}, %rd8157;
	}
	shf.l.wrap.b32 	%r5731, %r5730, %r5729, 10;
	shf.l.wrap.b32 	%r5732, %r5729, %r5730, 10;
	mov.b64 	%rd8187, {%r5732, %r5731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5733}, %rd8163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5734,%dummy}, %rd8163;
	}
	shf.l.wrap.b32 	%r5735, %r5734, %r5733, 15;
	shf.l.wrap.b32 	%r5736, %r5733, %r5734, 15;
	mov.b64 	%rd8188, {%r5736, %r5735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5737,%dummy}, %rd8169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5738}, %rd8169;
	}
	shf.r.wrap.b32 	%r5739, %r5738, %r5737, 8;
	shf.r.wrap.b32 	%r5740, %r5737, %r5738, 8;
	mov.b64 	%rd8189, {%r5740, %r5739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5741,%dummy}, %rd8148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5742}, %rd8148;
	}
	shf.r.wrap.b32 	%r5743, %r5742, %r5741, 2;
	shf.r.wrap.b32 	%r5744, %r5741, %r5742, 2;
	mov.b64 	%rd8190, {%r5744, %r5743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5745,%dummy}, %rd8154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5746}, %rd8154;
	}
	shf.r.wrap.b32 	%r5747, %r5746, %r5745, 9;
	shf.r.wrap.b32 	%r5748, %r5745, %r5746, 9;
	mov.b64 	%rd8191, {%r5748, %r5747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5749,%dummy}, %rd8160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5750}, %rd8160;
	}
	shf.r.wrap.b32 	%r5751, %r5750, %r5749, 25;
	shf.r.wrap.b32 	%r5752, %r5749, %r5750, 25;
	mov.b64 	%rd8192, {%r5752, %r5751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5753,%dummy}, %rd8161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5754}, %rd8161;
	}
	shf.r.wrap.b32 	%r5755, %r5754, %r5753, 23;
	shf.r.wrap.b32 	%r5756, %r5753, %r5754, 23;
	mov.b64 	%rd8193, {%r5756, %r5755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd8167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5758,%dummy}, %rd8167;
	}
	shf.l.wrap.b32 	%r5759, %r5758, %r5757, 2;
	shf.l.wrap.b32 	%r5760, %r5757, %r5758, 2;
	mov.b64 	%rd8194, {%r5760, %r5759};
	not.b64 	%rd8195, %rd8171;
	and.b64  	%rd8196, %rd8172, %rd8195;
	xor.b64  	%rd8197, %rd8196, %rd8146;
	not.b64 	%rd8198, %rd8172;
	and.b64  	%rd8199, %rd8173, %rd8198;
	xor.b64  	%rd8200, %rd8199, %rd8171;
	not.b64 	%rd8201, %rd8173;
	and.b64  	%rd8202, %rd8174, %rd8201;
	xor.b64  	%rd8203, %rd8202, %rd8172;
	not.b64 	%rd8204, %rd8174;
	and.b64  	%rd8205, %rd8146, %rd8204;
	xor.b64  	%rd8206, %rd8205, %rd8173;
	not.b64 	%rd8207, %rd8146;
	and.b64  	%rd8208, %rd8171, %rd8207;
	xor.b64  	%rd8209, %rd8208, %rd8174;
	not.b64 	%rd8210, %rd8176;
	and.b64  	%rd8211, %rd8177, %rd8210;
	xor.b64  	%rd8212, %rd8211, %rd8175;
	not.b64 	%rd8213, %rd8177;
	and.b64  	%rd8214, %rd8178, %rd8213;
	xor.b64  	%rd8215, %rd8214, %rd8176;
	not.b64 	%rd8216, %rd8178;
	and.b64  	%rd8217, %rd8179, %rd8216;
	xor.b64  	%rd8218, %rd8217, %rd8177;
	not.b64 	%rd8219, %rd8179;
	and.b64  	%rd8220, %rd8175, %rd8219;
	xor.b64  	%rd8221, %rd8220, %rd8178;
	not.b64 	%rd8222, %rd8175;
	and.b64  	%rd8223, %rd8176, %rd8222;
	xor.b64  	%rd8224, %rd8223, %rd8179;
	not.b64 	%rd8225, %rd8181;
	and.b64  	%rd8226, %rd8182, %rd8225;
	xor.b64  	%rd8227, %rd8226, %rd8180;
	not.b64 	%rd8228, %rd8182;
	and.b64  	%rd8229, %rd8183, %rd8228;
	xor.b64  	%rd8230, %rd8229, %rd8181;
	not.b64 	%rd8231, %rd8183;
	and.b64  	%rd8232, %rd8184, %rd8231;
	xor.b64  	%rd8233, %rd8232, %rd8182;
	not.b64 	%rd8234, %rd8184;
	and.b64  	%rd8235, %rd8180, %rd8234;
	xor.b64  	%rd8236, %rd8235, %rd8183;
	not.b64 	%rd8237, %rd8180;
	and.b64  	%rd8238, %rd8181, %rd8237;
	xor.b64  	%rd8239, %rd8238, %rd8184;
	not.b64 	%rd8240, %rd8186;
	and.b64  	%rd8241, %rd8187, %rd8240;
	xor.b64  	%rd8242, %rd8241, %rd8185;
	not.b64 	%rd8243, %rd8187;
	and.b64  	%rd8244, %rd8188, %rd8243;
	xor.b64  	%rd8245, %rd8244, %rd8186;
	not.b64 	%rd8246, %rd8188;
	and.b64  	%rd8247, %rd8189, %rd8246;
	xor.b64  	%rd8248, %rd8247, %rd8187;
	not.b64 	%rd8249, %rd8189;
	and.b64  	%rd8250, %rd8185, %rd8249;
	xor.b64  	%rd8251, %rd8250, %rd8188;
	not.b64 	%rd8252, %rd8185;
	and.b64  	%rd8253, %rd8186, %rd8252;
	xor.b64  	%rd8254, %rd8253, %rd8189;
	not.b64 	%rd8255, %rd8191;
	and.b64  	%rd8256, %rd8192, %rd8255;
	xor.b64  	%rd8257, %rd8256, %rd8190;
	not.b64 	%rd8258, %rd8192;
	and.b64  	%rd8259, %rd8193, %rd8258;
	xor.b64  	%rd8260, %rd8259, %rd8191;
	not.b64 	%rd8261, %rd8193;
	and.b64  	%rd8262, %rd8194, %rd8261;
	xor.b64  	%rd8263, %rd8262, %rd8192;
	not.b64 	%rd8264, %rd8194;
	and.b64  	%rd8265, %rd8190, %rd8264;
	xor.b64  	%rd8266, %rd8265, %rd8193;
	not.b64 	%rd8267, %rd8190;
	and.b64  	%rd8268, %rd8191, %rd8267;
	xor.b64  	%rd8269, %rd8268, %rd8194;
	xor.b64  	%rd8271, %rd8197, %rd16;
	xor.b64  	%rd8272, %rd8212, %rd8271;
	xor.b64  	%rd8273, %rd8272, %rd8227;
	xor.b64  	%rd8274, %rd8273, %rd8242;
	xor.b64  	%rd8275, %rd8274, %rd8257;
	xor.b64  	%rd8276, %rd8215, %rd8200;
	xor.b64  	%rd8277, %rd8276, %rd8230;
	xor.b64  	%rd8278, %rd8277, %rd8245;
	xor.b64  	%rd8279, %rd8278, %rd8260;
	xor.b64  	%rd8280, %rd8218, %rd8203;
	xor.b64  	%rd8281, %rd8280, %rd8233;
	xor.b64  	%rd8282, %rd8281, %rd8248;
	xor.b64  	%rd8283, %rd8282, %rd8263;
	xor.b64  	%rd8284, %rd8221, %rd8206;
	xor.b64  	%rd8285, %rd8284, %rd8236;
	xor.b64  	%rd8286, %rd8285, %rd8251;
	xor.b64  	%rd8287, %rd8286, %rd8266;
	xor.b64  	%rd8288, %rd8224, %rd8209;
	xor.b64  	%rd8289, %rd8288, %rd8239;
	xor.b64  	%rd8290, %rd8289, %rd8254;
	xor.b64  	%rd8291, %rd8290, %rd8269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd8279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd8279;
	}
	shf.l.wrap.b32 	%r5763, %r5762, %r5761, 1;
	shf.l.wrap.b32 	%r5764, %r5761, %r5762, 1;
	mov.b64 	%rd8292, {%r5764, %r5763};
	xor.b64  	%rd8293, %rd8291, %rd8292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5765}, %rd8283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5766,%dummy}, %rd8283;
	}
	shf.l.wrap.b32 	%r5767, %r5766, %r5765, 1;
	shf.l.wrap.b32 	%r5768, %r5765, %r5766, 1;
	mov.b64 	%rd8294, {%r5768, %r5767};
	xor.b64  	%rd8295, %rd8294, %rd8275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd8287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5770,%dummy}, %rd8287;
	}
	shf.l.wrap.b32 	%r5771, %r5770, %r5769, 1;
	shf.l.wrap.b32 	%r5772, %r5769, %r5770, 1;
	mov.b64 	%rd8296, {%r5772, %r5771};
	xor.b64  	%rd8297, %rd8296, %rd8279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5773}, %rd8291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd8291;
	}
	shf.l.wrap.b32 	%r5775, %r5774, %r5773, 1;
	shf.l.wrap.b32 	%r5776, %r5773, %r5774, 1;
	mov.b64 	%rd8298, {%r5776, %r5775};
	xor.b64  	%rd8299, %rd8298, %rd8283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5777}, %rd8275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5778,%dummy}, %rd8275;
	}
	shf.l.wrap.b32 	%r5779, %r5778, %r5777, 1;
	shf.l.wrap.b32 	%r5780, %r5777, %r5778, 1;
	mov.b64 	%rd8300, {%r5780, %r5779};
	xor.b64  	%rd8301, %rd8287, %rd8300;
	xor.b64  	%rd8302, %rd8293, %rd8271;
	xor.b64  	%rd8303, %rd8295, %rd8200;
	xor.b64  	%rd8304, %rd8297, %rd8203;
	xor.b64  	%rd8305, %rd8299, %rd8206;
	xor.b64  	%rd8306, %rd8301, %rd8209;
	xor.b64  	%rd8307, %rd8293, %rd8212;
	xor.b64  	%rd8308, %rd8295, %rd8215;
	xor.b64  	%rd8309, %rd8297, %rd8218;
	xor.b64  	%rd8310, %rd8299, %rd8221;
	xor.b64  	%rd8311, %rd8301, %rd8224;
	xor.b64  	%rd8312, %rd8293, %rd8227;
	xor.b64  	%rd8313, %rd8295, %rd8230;
	xor.b64  	%rd8314, %rd8297, %rd8233;
	xor.b64  	%rd8315, %rd8299, %rd8236;
	xor.b64  	%rd8316, %rd8301, %rd8239;
	xor.b64  	%rd8317, %rd8293, %rd8242;
	xor.b64  	%rd8318, %rd8295, %rd8245;
	xor.b64  	%rd8319, %rd8297, %rd8248;
	xor.b64  	%rd8320, %rd8299, %rd8251;
	xor.b64  	%rd8321, %rd8301, %rd8254;
	xor.b64  	%rd8322, %rd8293, %rd8257;
	xor.b64  	%rd8323, %rd8295, %rd8260;
	xor.b64  	%rd8324, %rd8297, %rd8263;
	xor.b64  	%rd8325, %rd8299, %rd8266;
	xor.b64  	%rd8326, %rd8301, %rd8269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5781,%dummy}, %rd8308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5782}, %rd8308;
	}
	shf.r.wrap.b32 	%r5783, %r5782, %r5781, 20;
	shf.r.wrap.b32 	%r5784, %r5781, %r5782, 20;
	mov.b64 	%rd8327, {%r5784, %r5783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5785,%dummy}, %rd8314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5786}, %rd8314;
	}
	shf.r.wrap.b32 	%r5787, %r5786, %r5785, 21;
	shf.r.wrap.b32 	%r5788, %r5785, %r5786, 21;
	mov.b64 	%rd8328, {%r5788, %r5787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5789}, %rd8320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5790,%dummy}, %rd8320;
	}
	shf.l.wrap.b32 	%r5791, %r5790, %r5789, 21;
	shf.l.wrap.b32 	%r5792, %r5789, %r5790, 21;
	mov.b64 	%rd8329, {%r5792, %r5791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd8326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd8326;
	}
	shf.l.wrap.b32 	%r5795, %r5794, %r5793, 14;
	shf.l.wrap.b32 	%r5796, %r5793, %r5794, 14;
	mov.b64 	%rd8330, {%r5796, %r5795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5797}, %rd8305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd8305;
	}
	shf.l.wrap.b32 	%r5799, %r5798, %r5797, 28;
	shf.l.wrap.b32 	%r5800, %r5797, %r5798, 28;
	mov.b64 	%rd8331, {%r5800, %r5799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5801}, %rd8311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5802,%dummy}, %rd8311;
	}
	shf.l.wrap.b32 	%r5803, %r5802, %r5801, 20;
	shf.l.wrap.b32 	%r5804, %r5801, %r5802, 20;
	mov.b64 	%rd8332, {%r5804, %r5803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd8312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5806,%dummy}, %rd8312;
	}
	shf.l.wrap.b32 	%r5807, %r5806, %r5805, 3;
	shf.l.wrap.b32 	%r5808, %r5805, %r5806, 3;
	mov.b64 	%rd8333, {%r5808, %r5807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5809,%dummy}, %rd8318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5810}, %rd8318;
	}
	shf.r.wrap.b32 	%r5811, %r5810, %r5809, 19;
	shf.r.wrap.b32 	%r5812, %r5809, %r5810, 19;
	mov.b64 	%rd8334, {%r5812, %r5811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5813,%dummy}, %rd8324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5814}, %rd8324;
	}
	shf.r.wrap.b32 	%r5815, %r5814, %r5813, 3;
	shf.r.wrap.b32 	%r5816, %r5813, %r5814, 3;
	mov.b64 	%rd8335, {%r5816, %r5815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd8303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5818,%dummy}, %rd8303;
	}
	shf.l.wrap.b32 	%r5819, %r5818, %r5817, 1;
	shf.l.wrap.b32 	%r5820, %r5817, %r5818, 1;
	mov.b64 	%rd8336, {%r5820, %r5819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd8309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd8309;
	}
	shf.l.wrap.b32 	%r5823, %r5822, %r5821, 6;
	shf.l.wrap.b32 	%r5824, %r5821, %r5822, 6;
	mov.b64 	%rd8337, {%r5824, %r5823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5825}, %rd8315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5826,%dummy}, %rd8315;
	}
	shf.l.wrap.b32 	%r5827, %r5826, %r5825, 25;
	shf.l.wrap.b32 	%r5828, %r5825, %r5826, 25;
	mov.b64 	%rd8338, {%r5828, %r5827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd8321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5830,%dummy}, %rd8321;
	}
	shf.l.wrap.b32 	%r5831, %r5830, %r5829, 8;
	shf.l.wrap.b32 	%r5832, %r5829, %r5830, 8;
	mov.b64 	%rd8339, {%r5832, %r5831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5833}, %rd8322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd8322;
	}
	shf.l.wrap.b32 	%r5835, %r5834, %r5833, 18;
	shf.l.wrap.b32 	%r5836, %r5833, %r5834, 18;
	mov.b64 	%rd8340, {%r5836, %r5835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5837}, %rd8306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5838,%dummy}, %rd8306;
	}
	shf.l.wrap.b32 	%r5839, %r5838, %r5837, 27;
	shf.l.wrap.b32 	%r5840, %r5837, %r5838, 27;
	mov.b64 	%rd8341, {%r5840, %r5839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5841,%dummy}, %rd8307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5842}, %rd8307;
	}
	shf.r.wrap.b32 	%r5843, %r5842, %r5841, 28;
	shf.r.wrap.b32 	%r5844, %r5841, %r5842, 28;
	mov.b64 	%rd8342, {%r5844, %r5843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5845}, %rd8313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd8313;
	}
	shf.l.wrap.b32 	%r5847, %r5846, %r5845, 10;
	shf.l.wrap.b32 	%r5848, %r5845, %r5846, 10;
	mov.b64 	%rd8343, {%r5848, %r5847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5849}, %rd8319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5850,%dummy}, %rd8319;
	}
	shf.l.wrap.b32 	%r5851, %r5850, %r5849, 15;
	shf.l.wrap.b32 	%r5852, %r5849, %r5850, 15;
	mov.b64 	%rd8344, {%r5852, %r5851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5853,%dummy}, %rd8325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5854}, %rd8325;
	}
	shf.r.wrap.b32 	%r5855, %r5854, %r5853, 8;
	shf.r.wrap.b32 	%r5856, %r5853, %r5854, 8;
	mov.b64 	%rd8345, {%r5856, %r5855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5857,%dummy}, %rd8304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5858}, %rd8304;
	}
	shf.r.wrap.b32 	%r5859, %r5858, %r5857, 2;
	shf.r.wrap.b32 	%r5860, %r5857, %r5858, 2;
	mov.b64 	%rd8346, {%r5860, %r5859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5861,%dummy}, %rd8310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5862}, %rd8310;
	}
	shf.r.wrap.b32 	%r5863, %r5862, %r5861, 9;
	shf.r.wrap.b32 	%r5864, %r5861, %r5862, 9;
	mov.b64 	%rd8347, {%r5864, %r5863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5865,%dummy}, %rd8316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5866}, %rd8316;
	}
	shf.r.wrap.b32 	%r5867, %r5866, %r5865, 25;
	shf.r.wrap.b32 	%r5868, %r5865, %r5866, 25;
	mov.b64 	%rd8348, {%r5868, %r5867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd8317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd8317;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 23;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 23;
	mov.b64 	%rd8349, {%r5872, %r5871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5873}, %rd8323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5874,%dummy}, %rd8323;
	}
	shf.l.wrap.b32 	%r5875, %r5874, %r5873, 2;
	shf.l.wrap.b32 	%r5876, %r5873, %r5874, 2;
	mov.b64 	%rd8350, {%r5876, %r5875};
	not.b64 	%rd8351, %rd8327;
	and.b64  	%rd8352, %rd8328, %rd8351;
	xor.b64  	%rd8353, %rd8352, %rd8302;
	not.b64 	%rd8354, %rd8328;
	and.b64  	%rd8355, %rd8329, %rd8354;
	xor.b64  	%rd8356, %rd8355, %rd8327;
	not.b64 	%rd8357, %rd8329;
	and.b64  	%rd8358, %rd8330, %rd8357;
	xor.b64  	%rd8359, %rd8358, %rd8328;
	not.b64 	%rd8360, %rd8330;
	and.b64  	%rd8361, %rd8302, %rd8360;
	xor.b64  	%rd8362, %rd8361, %rd8329;
	not.b64 	%rd8363, %rd8302;
	and.b64  	%rd8364, %rd8327, %rd8363;
	xor.b64  	%rd8365, %rd8364, %rd8330;
	not.b64 	%rd8366, %rd8332;
	and.b64  	%rd8367, %rd8333, %rd8366;
	xor.b64  	%rd8368, %rd8367, %rd8331;
	not.b64 	%rd8369, %rd8333;
	and.b64  	%rd8370, %rd8334, %rd8369;
	xor.b64  	%rd8371, %rd8370, %rd8332;
	not.b64 	%rd8372, %rd8334;
	and.b64  	%rd8373, %rd8335, %rd8372;
	xor.b64  	%rd8374, %rd8373, %rd8333;
	not.b64 	%rd8375, %rd8335;
	and.b64  	%rd8376, %rd8331, %rd8375;
	xor.b64  	%rd8377, %rd8376, %rd8334;
	not.b64 	%rd8378, %rd8331;
	and.b64  	%rd8379, %rd8332, %rd8378;
	xor.b64  	%rd8380, %rd8379, %rd8335;
	not.b64 	%rd8381, %rd8337;
	and.b64  	%rd8382, %rd8338, %rd8381;
	xor.b64  	%rd8383, %rd8382, %rd8336;
	not.b64 	%rd8384, %rd8338;
	and.b64  	%rd8385, %rd8339, %rd8384;
	xor.b64  	%rd8386, %rd8385, %rd8337;
	not.b64 	%rd8387, %rd8339;
	and.b64  	%rd8388, %rd8340, %rd8387;
	xor.b64  	%rd8389, %rd8388, %rd8338;
	not.b64 	%rd8390, %rd8340;
	and.b64  	%rd8391, %rd8336, %rd8390;
	xor.b64  	%rd8392, %rd8391, %rd8339;
	not.b64 	%rd8393, %rd8336;
	and.b64  	%rd8394, %rd8337, %rd8393;
	xor.b64  	%rd8395, %rd8394, %rd8340;
	not.b64 	%rd8396, %rd8342;
	and.b64  	%rd8397, %rd8343, %rd8396;
	xor.b64  	%rd8398, %rd8397, %rd8341;
	not.b64 	%rd8399, %rd8343;
	and.b64  	%rd8400, %rd8344, %rd8399;
	xor.b64  	%rd8401, %rd8400, %rd8342;
	not.b64 	%rd8402, %rd8344;
	and.b64  	%rd8403, %rd8345, %rd8402;
	xor.b64  	%rd8404, %rd8403, %rd8343;
	not.b64 	%rd8405, %rd8345;
	and.b64  	%rd8406, %rd8341, %rd8405;
	xor.b64  	%rd8407, %rd8406, %rd8344;
	not.b64 	%rd8408, %rd8341;
	and.b64  	%rd8409, %rd8342, %rd8408;
	xor.b64  	%rd8410, %rd8409, %rd8345;
	not.b64 	%rd8411, %rd8347;
	and.b64  	%rd8412, %rd8348, %rd8411;
	xor.b64  	%rd8413, %rd8412, %rd8346;
	not.b64 	%rd8414, %rd8348;
	and.b64  	%rd8415, %rd8349, %rd8414;
	xor.b64  	%rd8416, %rd8415, %rd8347;
	not.b64 	%rd8417, %rd8349;
	and.b64  	%rd8418, %rd8350, %rd8417;
	xor.b64  	%rd8419, %rd8418, %rd8348;
	not.b64 	%rd8420, %rd8350;
	and.b64  	%rd8421, %rd8346, %rd8420;
	xor.b64  	%rd8422, %rd8421, %rd8349;
	not.b64 	%rd8423, %rd8346;
	and.b64  	%rd8424, %rd8347, %rd8423;
	xor.b64  	%rd8425, %rd8424, %rd8350;
	xor.b64  	%rd8427, %rd8353, %rd17;
	xor.b64  	%rd8428, %rd8368, %rd8427;
	xor.b64  	%rd8429, %rd8428, %rd8383;
	xor.b64  	%rd8430, %rd8429, %rd8398;
	xor.b64  	%rd8431, %rd8430, %rd8413;
	xor.b64  	%rd8432, %rd8371, %rd8356;
	xor.b64  	%rd8433, %rd8432, %rd8386;
	xor.b64  	%rd8434, %rd8433, %rd8401;
	xor.b64  	%rd8435, %rd8434, %rd8416;
	xor.b64  	%rd8436, %rd8374, %rd8359;
	xor.b64  	%rd8437, %rd8436, %rd8389;
	xor.b64  	%rd8438, %rd8437, %rd8404;
	xor.b64  	%rd8439, %rd8438, %rd8419;
	xor.b64  	%rd8440, %rd8377, %rd8362;
	xor.b64  	%rd8441, %rd8440, %rd8392;
	xor.b64  	%rd8442, %rd8441, %rd8407;
	xor.b64  	%rd8443, %rd8442, %rd8422;
	xor.b64  	%rd8444, %rd8380, %rd8365;
	xor.b64  	%rd8445, %rd8444, %rd8395;
	xor.b64  	%rd8446, %rd8445, %rd8410;
	xor.b64  	%rd8447, %rd8446, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd8435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5878,%dummy}, %rd8435;
	}
	shf.l.wrap.b32 	%r5879, %r5878, %r5877, 1;
	shf.l.wrap.b32 	%r5880, %r5877, %r5878, 1;
	mov.b64 	%rd8448, {%r5880, %r5879};
	xor.b64  	%rd8449, %rd8447, %rd8448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5881}, %rd8439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd8439;
	}
	shf.l.wrap.b32 	%r5883, %r5882, %r5881, 1;
	shf.l.wrap.b32 	%r5884, %r5881, %r5882, 1;
	mov.b64 	%rd8450, {%r5884, %r5883};
	xor.b64  	%rd8451, %rd8450, %rd8431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5885}, %rd8443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5886,%dummy}, %rd8443;
	}
	shf.l.wrap.b32 	%r5887, %r5886, %r5885, 1;
	shf.l.wrap.b32 	%r5888, %r5885, %r5886, 1;
	mov.b64 	%rd8452, {%r5888, %r5887};
	xor.b64  	%rd8453, %rd8452, %rd8435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd8447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd8447;
	}
	shf.l.wrap.b32 	%r5891, %r5890, %r5889, 1;
	shf.l.wrap.b32 	%r5892, %r5889, %r5890, 1;
	mov.b64 	%rd8454, {%r5892, %r5891};
	xor.b64  	%rd8455, %rd8454, %rd8439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5893}, %rd8431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd8431;
	}
	shf.l.wrap.b32 	%r5895, %r5894, %r5893, 1;
	shf.l.wrap.b32 	%r5896, %r5893, %r5894, 1;
	mov.b64 	%rd8456, {%r5896, %r5895};
	xor.b64  	%rd8457, %rd8443, %rd8456;
	xor.b64  	%rd8458, %rd8449, %rd8427;
	xor.b64  	%rd8459, %rd8451, %rd8356;
	xor.b64  	%rd8460, %rd8453, %rd8359;
	xor.b64  	%rd8461, %rd8455, %rd8362;
	xor.b64  	%rd8462, %rd8457, %rd8365;
	xor.b64  	%rd8463, %rd8449, %rd8368;
	xor.b64  	%rd8464, %rd8451, %rd8371;
	xor.b64  	%rd8465, %rd8453, %rd8374;
	xor.b64  	%rd8466, %rd8455, %rd8377;
	xor.b64  	%rd8467, %rd8457, %rd8380;
	xor.b64  	%rd8468, %rd8449, %rd8383;
	xor.b64  	%rd8469, %rd8451, %rd8386;
	xor.b64  	%rd8470, %rd8453, %rd8389;
	xor.b64  	%rd8471, %rd8455, %rd8392;
	xor.b64  	%rd8472, %rd8457, %rd8395;
	xor.b64  	%rd8473, %rd8449, %rd8398;
	xor.b64  	%rd8474, %rd8451, %rd8401;
	xor.b64  	%rd8475, %rd8453, %rd8404;
	xor.b64  	%rd8476, %rd8455, %rd8407;
	xor.b64  	%rd8477, %rd8457, %rd8410;
	xor.b64  	%rd8478, %rd8449, %rd8413;
	xor.b64  	%rd8479, %rd8451, %rd8416;
	xor.b64  	%rd8480, %rd8453, %rd8419;
	xor.b64  	%rd8481, %rd8455, %rd8422;
	xor.b64  	%rd8482, %rd8457, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5897,%dummy}, %rd8464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5898}, %rd8464;
	}
	shf.r.wrap.b32 	%r5899, %r5898, %r5897, 20;
	shf.r.wrap.b32 	%r5900, %r5897, %r5898, 20;
	mov.b64 	%rd8483, {%r5900, %r5899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5901,%dummy}, %rd8470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5902}, %rd8470;
	}
	shf.r.wrap.b32 	%r5903, %r5902, %r5901, 21;
	shf.r.wrap.b32 	%r5904, %r5901, %r5902, 21;
	mov.b64 	%rd8484, {%r5904, %r5903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5905}, %rd8476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5906,%dummy}, %rd8476;
	}
	shf.l.wrap.b32 	%r5907, %r5906, %r5905, 21;
	shf.l.wrap.b32 	%r5908, %r5905, %r5906, 21;
	mov.b64 	%rd8485, {%r5908, %r5907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5909}, %rd8482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd8482;
	}
	shf.l.wrap.b32 	%r5911, %r5910, %r5909, 14;
	shf.l.wrap.b32 	%r5912, %r5909, %r5910, 14;
	mov.b64 	%rd8486, {%r5912, %r5911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5913}, %rd8461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5914,%dummy}, %rd8461;
	}
	shf.l.wrap.b32 	%r5915, %r5914, %r5913, 28;
	shf.l.wrap.b32 	%r5916, %r5913, %r5914, 28;
	mov.b64 	%rd8487, {%r5916, %r5915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5917}, %rd8467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5918,%dummy}, %rd8467;
	}
	shf.l.wrap.b32 	%r5919, %r5918, %r5917, 20;
	shf.l.wrap.b32 	%r5920, %r5917, %r5918, 20;
	mov.b64 	%rd8488, {%r5920, %r5919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd8468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5922,%dummy}, %rd8468;
	}
	shf.l.wrap.b32 	%r5923, %r5922, %r5921, 3;
	shf.l.wrap.b32 	%r5924, %r5921, %r5922, 3;
	mov.b64 	%rd8489, {%r5924, %r5923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd8474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd8474;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 19;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 19;
	mov.b64 	%rd8490, {%r5928, %r5927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5929,%dummy}, %rd8480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5930}, %rd8480;
	}
	shf.r.wrap.b32 	%r5931, %r5930, %r5929, 3;
	shf.r.wrap.b32 	%r5932, %r5929, %r5930, 3;
	mov.b64 	%rd8491, {%r5932, %r5931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5933}, %rd8459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5934,%dummy}, %rd8459;
	}
	shf.l.wrap.b32 	%r5935, %r5934, %r5933, 1;
	shf.l.wrap.b32 	%r5936, %r5933, %r5934, 1;
	mov.b64 	%rd8492, {%r5936, %r5935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5937}, %rd8465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd8465;
	}
	shf.l.wrap.b32 	%r5939, %r5938, %r5937, 6;
	shf.l.wrap.b32 	%r5940, %r5937, %r5938, 6;
	mov.b64 	%rd8493, {%r5940, %r5939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5941}, %rd8471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd8471;
	}
	shf.l.wrap.b32 	%r5943, %r5942, %r5941, 25;
	shf.l.wrap.b32 	%r5944, %r5941, %r5942, 25;
	mov.b64 	%rd8494, {%r5944, %r5943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5945}, %rd8477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd8477;
	}
	shf.l.wrap.b32 	%r5947, %r5946, %r5945, 8;
	shf.l.wrap.b32 	%r5948, %r5945, %r5946, 8;
	mov.b64 	%rd8495, {%r5948, %r5947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5949}, %rd8478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd8478;
	}
	shf.l.wrap.b32 	%r5951, %r5950, %r5949, 18;
	shf.l.wrap.b32 	%r5952, %r5949, %r5950, 18;
	mov.b64 	%rd8496, {%r5952, %r5951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5953}, %rd8462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd8462;
	}
	shf.l.wrap.b32 	%r5955, %r5954, %r5953, 27;
	shf.l.wrap.b32 	%r5956, %r5953, %r5954, 27;
	mov.b64 	%rd8497, {%r5956, %r5955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5957,%dummy}, %rd8463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5958}, %rd8463;
	}
	shf.r.wrap.b32 	%r5959, %r5958, %r5957, 28;
	shf.r.wrap.b32 	%r5960, %r5957, %r5958, 28;
	mov.b64 	%rd8498, {%r5960, %r5959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd8469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd8469;
	}
	shf.l.wrap.b32 	%r5963, %r5962, %r5961, 10;
	shf.l.wrap.b32 	%r5964, %r5961, %r5962, 10;
	mov.b64 	%rd8499, {%r5964, %r5963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5965}, %rd8475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5966,%dummy}, %rd8475;
	}
	shf.l.wrap.b32 	%r5967, %r5966, %r5965, 15;
	shf.l.wrap.b32 	%r5968, %r5965, %r5966, 15;
	mov.b64 	%rd8500, {%r5968, %r5967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5969,%dummy}, %rd8481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5970}, %rd8481;
	}
	shf.r.wrap.b32 	%r5971, %r5970, %r5969, 8;
	shf.r.wrap.b32 	%r5972, %r5969, %r5970, 8;
	mov.b64 	%rd8501, {%r5972, %r5971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5973,%dummy}, %rd8460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5974}, %rd8460;
	}
	shf.r.wrap.b32 	%r5975, %r5974, %r5973, 2;
	shf.r.wrap.b32 	%r5976, %r5973, %r5974, 2;
	mov.b64 	%rd8502, {%r5976, %r5975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5977,%dummy}, %rd8466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5978}, %rd8466;
	}
	shf.r.wrap.b32 	%r5979, %r5978, %r5977, 9;
	shf.r.wrap.b32 	%r5980, %r5977, %r5978, 9;
	mov.b64 	%rd8503, {%r5980, %r5979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5981,%dummy}, %rd8472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5982}, %rd8472;
	}
	shf.r.wrap.b32 	%r5983, %r5982, %r5981, 25;
	shf.r.wrap.b32 	%r5984, %r5981, %r5982, 25;
	mov.b64 	%rd8504, {%r5984, %r5983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5985,%dummy}, %rd8473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5986}, %rd8473;
	}
	shf.r.wrap.b32 	%r5987, %r5986, %r5985, 23;
	shf.r.wrap.b32 	%r5988, %r5985, %r5986, 23;
	mov.b64 	%rd8505, {%r5988, %r5987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5989}, %rd8479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5990,%dummy}, %rd8479;
	}
	shf.l.wrap.b32 	%r5991, %r5990, %r5989, 2;
	shf.l.wrap.b32 	%r5992, %r5989, %r5990, 2;
	mov.b64 	%rd8506, {%r5992, %r5991};
	not.b64 	%rd8507, %rd8483;
	and.b64  	%rd8508, %rd8484, %rd8507;
	xor.b64  	%rd8509, %rd8508, %rd8458;
	not.b64 	%rd8510, %rd8484;
	and.b64  	%rd8511, %rd8485, %rd8510;
	xor.b64  	%rd8512, %rd8511, %rd8483;
	not.b64 	%rd8513, %rd8485;
	and.b64  	%rd8514, %rd8486, %rd8513;
	xor.b64  	%rd8515, %rd8514, %rd8484;
	not.b64 	%rd8516, %rd8486;
	and.b64  	%rd8517, %rd8458, %rd8516;
	xor.b64  	%rd8518, %rd8517, %rd8485;
	not.b64 	%rd8519, %rd8458;
	and.b64  	%rd8520, %rd8483, %rd8519;
	xor.b64  	%rd8521, %rd8520, %rd8486;
	not.b64 	%rd8522, %rd8488;
	and.b64  	%rd8523, %rd8489, %rd8522;
	xor.b64  	%rd8524, %rd8523, %rd8487;
	not.b64 	%rd8525, %rd8489;
	and.b64  	%rd8526, %rd8490, %rd8525;
	xor.b64  	%rd8527, %rd8526, %rd8488;
	not.b64 	%rd8528, %rd8490;
	and.b64  	%rd8529, %rd8491, %rd8528;
	xor.b64  	%rd8530, %rd8529, %rd8489;
	not.b64 	%rd8531, %rd8491;
	and.b64  	%rd8532, %rd8487, %rd8531;
	xor.b64  	%rd8533, %rd8532, %rd8490;
	not.b64 	%rd8534, %rd8487;
	and.b64  	%rd8535, %rd8488, %rd8534;
	xor.b64  	%rd8536, %rd8535, %rd8491;
	not.b64 	%rd8537, %rd8493;
	and.b64  	%rd8538, %rd8494, %rd8537;
	xor.b64  	%rd8539, %rd8538, %rd8492;
	not.b64 	%rd8540, %rd8494;
	and.b64  	%rd8541, %rd8495, %rd8540;
	xor.b64  	%rd8542, %rd8541, %rd8493;
	not.b64 	%rd8543, %rd8495;
	and.b64  	%rd8544, %rd8496, %rd8543;
	xor.b64  	%rd8545, %rd8544, %rd8494;
	not.b64 	%rd8546, %rd8496;
	and.b64  	%rd8547, %rd8492, %rd8546;
	xor.b64  	%rd8548, %rd8547, %rd8495;
	not.b64 	%rd8549, %rd8492;
	and.b64  	%rd8550, %rd8493, %rd8549;
	xor.b64  	%rd8551, %rd8550, %rd8496;
	not.b64 	%rd8552, %rd8498;
	and.b64  	%rd8553, %rd8499, %rd8552;
	xor.b64  	%rd8554, %rd8553, %rd8497;
	not.b64 	%rd8555, %rd8499;
	and.b64  	%rd8556, %rd8500, %rd8555;
	xor.b64  	%rd8557, %rd8556, %rd8498;
	not.b64 	%rd8558, %rd8500;
	and.b64  	%rd8559, %rd8501, %rd8558;
	xor.b64  	%rd8560, %rd8559, %rd8499;
	not.b64 	%rd8561, %rd8501;
	and.b64  	%rd8562, %rd8497, %rd8561;
	xor.b64  	%rd8563, %rd8562, %rd8500;
	not.b64 	%rd8564, %rd8497;
	and.b64  	%rd8565, %rd8498, %rd8564;
	xor.b64  	%rd8566, %rd8565, %rd8501;
	not.b64 	%rd8567, %rd8503;
	and.b64  	%rd8568, %rd8504, %rd8567;
	xor.b64  	%rd8569, %rd8568, %rd8502;
	not.b64 	%rd8570, %rd8504;
	and.b64  	%rd8571, %rd8505, %rd8570;
	xor.b64  	%rd8572, %rd8571, %rd8503;
	not.b64 	%rd8573, %rd8505;
	and.b64  	%rd8574, %rd8506, %rd8573;
	xor.b64  	%rd8575, %rd8574, %rd8504;
	not.b64 	%rd8576, %rd8506;
	and.b64  	%rd8577, %rd8502, %rd8576;
	xor.b64  	%rd8578, %rd8577, %rd8505;
	not.b64 	%rd8579, %rd8502;
	and.b64  	%rd8580, %rd8503, %rd8579;
	xor.b64  	%rd8581, %rd8580, %rd8506;
	xor.b64  	%rd8583, %rd8509, %rd18;
	xor.b64  	%rd8584, %rd8524, %rd8583;
	xor.b64  	%rd8585, %rd8584, %rd8539;
	xor.b64  	%rd8586, %rd8585, %rd8554;
	xor.b64  	%rd8587, %rd8586, %rd8569;
	xor.b64  	%rd8588, %rd8527, %rd8512;
	xor.b64  	%rd8589, %rd8588, %rd8542;
	xor.b64  	%rd8590, %rd8589, %rd8557;
	xor.b64  	%rd8591, %rd8590, %rd8572;
	xor.b64  	%rd8592, %rd8530, %rd8515;
	xor.b64  	%rd8593, %rd8592, %rd8545;
	xor.b64  	%rd8594, %rd8593, %rd8560;
	xor.b64  	%rd8595, %rd8594, %rd8575;
	xor.b64  	%rd8596, %rd8533, %rd8518;
	xor.b64  	%rd8597, %rd8596, %rd8548;
	xor.b64  	%rd8598, %rd8597, %rd8563;
	xor.b64  	%rd8599, %rd8598, %rd8578;
	xor.b64  	%rd8600, %rd8536, %rd8521;
	xor.b64  	%rd8601, %rd8600, %rd8551;
	xor.b64  	%rd8602, %rd8601, %rd8566;
	xor.b64  	%rd8603, %rd8602, %rd8581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5993}, %rd8591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd8591;
	}
	shf.l.wrap.b32 	%r5995, %r5994, %r5993, 1;
	shf.l.wrap.b32 	%r5996, %r5993, %r5994, 1;
	mov.b64 	%rd8604, {%r5996, %r5995};
	xor.b64  	%rd8605, %rd8603, %rd8604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5997}, %rd8595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5998,%dummy}, %rd8595;
	}
	shf.l.wrap.b32 	%r5999, %r5998, %r5997, 1;
	shf.l.wrap.b32 	%r6000, %r5997, %r5998, 1;
	mov.b64 	%rd8606, {%r6000, %r5999};
	xor.b64  	%rd8607, %rd8606, %rd8587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6001}, %rd8599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd8599;
	}
	shf.l.wrap.b32 	%r6003, %r6002, %r6001, 1;
	shf.l.wrap.b32 	%r6004, %r6001, %r6002, 1;
	mov.b64 	%rd8608, {%r6004, %r6003};
	xor.b64  	%rd8609, %rd8608, %rd8591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6005}, %rd8603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6006,%dummy}, %rd8603;
	}
	shf.l.wrap.b32 	%r6007, %r6006, %r6005, 1;
	shf.l.wrap.b32 	%r6008, %r6005, %r6006, 1;
	mov.b64 	%rd8610, {%r6008, %r6007};
	xor.b64  	%rd8611, %rd8610, %rd8595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6009}, %rd8587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd8587;
	}
	shf.l.wrap.b32 	%r6011, %r6010, %r6009, 1;
	shf.l.wrap.b32 	%r6012, %r6009, %r6010, 1;
	mov.b64 	%rd8612, {%r6012, %r6011};
	xor.b64  	%rd8613, %rd8599, %rd8612;
	xor.b64  	%rd8614, %rd8605, %rd8583;
	xor.b64  	%rd8615, %rd8607, %rd8512;
	xor.b64  	%rd8616, %rd8609, %rd8515;
	xor.b64  	%rd8617, %rd8611, %rd8518;
	xor.b64  	%rd8618, %rd8613, %rd8521;
	xor.b64  	%rd8619, %rd8605, %rd8524;
	xor.b64  	%rd8620, %rd8607, %rd8527;
	xor.b64  	%rd8621, %rd8609, %rd8530;
	xor.b64  	%rd8622, %rd8611, %rd8533;
	xor.b64  	%rd8623, %rd8613, %rd8536;
	xor.b64  	%rd8624, %rd8605, %rd8539;
	xor.b64  	%rd8625, %rd8607, %rd8542;
	xor.b64  	%rd8626, %rd8609, %rd8545;
	xor.b64  	%rd8627, %rd8611, %rd8548;
	xor.b64  	%rd8628, %rd8613, %rd8551;
	xor.b64  	%rd8629, %rd8605, %rd8554;
	xor.b64  	%rd8630, %rd8607, %rd8557;
	xor.b64  	%rd8631, %rd8609, %rd8560;
	xor.b64  	%rd8632, %rd8611, %rd8563;
	xor.b64  	%rd8633, %rd8613, %rd8566;
	xor.b64  	%rd8634, %rd8605, %rd8569;
	xor.b64  	%rd8635, %rd8607, %rd8572;
	xor.b64  	%rd8636, %rd8609, %rd8575;
	xor.b64  	%rd8637, %rd8611, %rd8578;
	xor.b64  	%rd8638, %rd8613, %rd8581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6013,%dummy}, %rd8620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6014}, %rd8620;
	}
	shf.r.wrap.b32 	%r6015, %r6014, %r6013, 20;
	shf.r.wrap.b32 	%r6016, %r6013, %r6014, 20;
	mov.b64 	%rd8639, {%r6016, %r6015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6017,%dummy}, %rd8626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6018}, %rd8626;
	}
	shf.r.wrap.b32 	%r6019, %r6018, %r6017, 21;
	shf.r.wrap.b32 	%r6020, %r6017, %r6018, 21;
	mov.b64 	%rd8640, {%r6020, %r6019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd8632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6022,%dummy}, %rd8632;
	}
	shf.l.wrap.b32 	%r6023, %r6022, %r6021, 21;
	shf.l.wrap.b32 	%r6024, %r6021, %r6022, 21;
	mov.b64 	%rd8641, {%r6024, %r6023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6025}, %rd8638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd8638;
	}
	shf.l.wrap.b32 	%r6027, %r6026, %r6025, 14;
	shf.l.wrap.b32 	%r6028, %r6025, %r6026, 14;
	mov.b64 	%rd8642, {%r6028, %r6027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd8617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6030,%dummy}, %rd8617;
	}
	shf.l.wrap.b32 	%r6031, %r6030, %r6029, 28;
	shf.l.wrap.b32 	%r6032, %r6029, %r6030, 28;
	mov.b64 	%rd8643, {%r6032, %r6031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6033}, %rd8623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd8623;
	}
	shf.l.wrap.b32 	%r6035, %r6034, %r6033, 20;
	shf.l.wrap.b32 	%r6036, %r6033, %r6034, 20;
	mov.b64 	%rd8644, {%r6036, %r6035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6037}, %rd8624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6038,%dummy}, %rd8624;
	}
	shf.l.wrap.b32 	%r6039, %r6038, %r6037, 3;
	shf.l.wrap.b32 	%r6040, %r6037, %r6038, 3;
	mov.b64 	%rd8645, {%r6040, %r6039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6041,%dummy}, %rd8630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6042}, %rd8630;
	}
	shf.r.wrap.b32 	%r6043, %r6042, %r6041, 19;
	shf.r.wrap.b32 	%r6044, %r6041, %r6042, 19;
	mov.b64 	%rd8646, {%r6044, %r6043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6045,%dummy}, %rd8636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6046}, %rd8636;
	}
	shf.r.wrap.b32 	%r6047, %r6046, %r6045, 3;
	shf.r.wrap.b32 	%r6048, %r6045, %r6046, 3;
	mov.b64 	%rd8647, {%r6048, %r6047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6049}, %rd8615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6050,%dummy}, %rd8615;
	}
	shf.l.wrap.b32 	%r6051, %r6050, %r6049, 1;
	shf.l.wrap.b32 	%r6052, %r6049, %r6050, 1;
	mov.b64 	%rd8648, {%r6052, %r6051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd8621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd8621;
	}
	shf.l.wrap.b32 	%r6055, %r6054, %r6053, 6;
	shf.l.wrap.b32 	%r6056, %r6053, %r6054, 6;
	mov.b64 	%rd8649, {%r6056, %r6055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6057}, %rd8627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6058,%dummy}, %rd8627;
	}
	shf.l.wrap.b32 	%r6059, %r6058, %r6057, 25;
	shf.l.wrap.b32 	%r6060, %r6057, %r6058, 25;
	mov.b64 	%rd8650, {%r6060, %r6059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6061}, %rd8633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd8633;
	}
	shf.l.wrap.b32 	%r6063, %r6062, %r6061, 8;
	shf.l.wrap.b32 	%r6064, %r6061, %r6062, 8;
	mov.b64 	%rd8651, {%r6064, %r6063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6065}, %rd8634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6066,%dummy}, %rd8634;
	}
	shf.l.wrap.b32 	%r6067, %r6066, %r6065, 18;
	shf.l.wrap.b32 	%r6068, %r6065, %r6066, 18;
	mov.b64 	%rd8652, {%r6068, %r6067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6069}, %rd8618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6070,%dummy}, %rd8618;
	}
	shf.l.wrap.b32 	%r6071, %r6070, %r6069, 27;
	shf.l.wrap.b32 	%r6072, %r6069, %r6070, 27;
	mov.b64 	%rd8653, {%r6072, %r6071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6073,%dummy}, %rd8619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6074}, %rd8619;
	}
	shf.r.wrap.b32 	%r6075, %r6074, %r6073, 28;
	shf.r.wrap.b32 	%r6076, %r6073, %r6074, 28;
	mov.b64 	%rd8654, {%r6076, %r6075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6077}, %rd8625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6078,%dummy}, %rd8625;
	}
	shf.l.wrap.b32 	%r6079, %r6078, %r6077, 10;
	shf.l.wrap.b32 	%r6080, %r6077, %r6078, 10;
	mov.b64 	%rd8655, {%r6080, %r6079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd8631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6082,%dummy}, %rd8631;
	}
	shf.l.wrap.b32 	%r6083, %r6082, %r6081, 15;
	shf.l.wrap.b32 	%r6084, %r6081, %r6082, 15;
	mov.b64 	%rd8656, {%r6084, %r6083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6085,%dummy}, %rd8637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6086}, %rd8637;
	}
	shf.r.wrap.b32 	%r6087, %r6086, %r6085, 8;
	shf.r.wrap.b32 	%r6088, %r6085, %r6086, 8;
	mov.b64 	%rd8657, {%r6088, %r6087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6089,%dummy}, %rd8616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6090}, %rd8616;
	}
	shf.r.wrap.b32 	%r6091, %r6090, %r6089, 2;
	shf.r.wrap.b32 	%r6092, %r6089, %r6090, 2;
	mov.b64 	%rd8658, {%r6092, %r6091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6093,%dummy}, %rd8622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6094}, %rd8622;
	}
	shf.r.wrap.b32 	%r6095, %r6094, %r6093, 9;
	shf.r.wrap.b32 	%r6096, %r6093, %r6094, 9;
	mov.b64 	%rd8659, {%r6096, %r6095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6097,%dummy}, %rd8628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6098}, %rd8628;
	}
	shf.r.wrap.b32 	%r6099, %r6098, %r6097, 25;
	shf.r.wrap.b32 	%r6100, %r6097, %r6098, 25;
	mov.b64 	%rd8660, {%r6100, %r6099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6101,%dummy}, %rd8629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6102}, %rd8629;
	}
	shf.r.wrap.b32 	%r6103, %r6102, %r6101, 23;
	shf.r.wrap.b32 	%r6104, %r6101, %r6102, 23;
	mov.b64 	%rd8661, {%r6104, %r6103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6105}, %rd8635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd8635;
	}
	shf.l.wrap.b32 	%r6107, %r6106, %r6105, 2;
	shf.l.wrap.b32 	%r6108, %r6105, %r6106, 2;
	mov.b64 	%rd8662, {%r6108, %r6107};
	not.b64 	%rd8663, %rd8639;
	and.b64  	%rd8664, %rd8640, %rd8663;
	xor.b64  	%rd8665, %rd8664, %rd8614;
	not.b64 	%rd8666, %rd8640;
	and.b64  	%rd8667, %rd8641, %rd8666;
	xor.b64  	%rd8668, %rd8667, %rd8639;
	not.b64 	%rd8669, %rd8641;
	and.b64  	%rd8670, %rd8642, %rd8669;
	xor.b64  	%rd8671, %rd8670, %rd8640;
	not.b64 	%rd8672, %rd8642;
	and.b64  	%rd8673, %rd8614, %rd8672;
	xor.b64  	%rd8674, %rd8673, %rd8641;
	not.b64 	%rd8675, %rd8614;
	and.b64  	%rd8676, %rd8639, %rd8675;
	xor.b64  	%rd8677, %rd8676, %rd8642;
	not.b64 	%rd8678, %rd8644;
	and.b64  	%rd8679, %rd8645, %rd8678;
	xor.b64  	%rd8680, %rd8679, %rd8643;
	not.b64 	%rd8681, %rd8645;
	and.b64  	%rd8682, %rd8646, %rd8681;
	xor.b64  	%rd8683, %rd8682, %rd8644;
	not.b64 	%rd8684, %rd8646;
	and.b64  	%rd8685, %rd8647, %rd8684;
	xor.b64  	%rd8686, %rd8685, %rd8645;
	not.b64 	%rd8687, %rd8647;
	and.b64  	%rd8688, %rd8643, %rd8687;
	xor.b64  	%rd8689, %rd8688, %rd8646;
	not.b64 	%rd8690, %rd8643;
	and.b64  	%rd8691, %rd8644, %rd8690;
	xor.b64  	%rd8692, %rd8691, %rd8647;
	not.b64 	%rd8693, %rd8649;
	and.b64  	%rd8694, %rd8650, %rd8693;
	xor.b64  	%rd8695, %rd8694, %rd8648;
	not.b64 	%rd8696, %rd8650;
	and.b64  	%rd8697, %rd8651, %rd8696;
	xor.b64  	%rd8698, %rd8697, %rd8649;
	not.b64 	%rd8699, %rd8651;
	and.b64  	%rd8700, %rd8652, %rd8699;
	xor.b64  	%rd8701, %rd8700, %rd8650;
	not.b64 	%rd8702, %rd8652;
	and.b64  	%rd8703, %rd8648, %rd8702;
	xor.b64  	%rd8704, %rd8703, %rd8651;
	not.b64 	%rd8705, %rd8648;
	and.b64  	%rd8706, %rd8649, %rd8705;
	xor.b64  	%rd8707, %rd8706, %rd8652;
	not.b64 	%rd8708, %rd8654;
	and.b64  	%rd8709, %rd8655, %rd8708;
	xor.b64  	%rd8710, %rd8709, %rd8653;
	not.b64 	%rd8711, %rd8655;
	and.b64  	%rd8712, %rd8656, %rd8711;
	xor.b64  	%rd8713, %rd8712, %rd8654;
	not.b64 	%rd8714, %rd8656;
	and.b64  	%rd8715, %rd8657, %rd8714;
	xor.b64  	%rd8716, %rd8715, %rd8655;
	not.b64 	%rd8717, %rd8657;
	and.b64  	%rd8718, %rd8653, %rd8717;
	xor.b64  	%rd8719, %rd8718, %rd8656;
	not.b64 	%rd8720, %rd8653;
	and.b64  	%rd8721, %rd8654, %rd8720;
	xor.b64  	%rd8722, %rd8721, %rd8657;
	not.b64 	%rd8723, %rd8659;
	and.b64  	%rd8724, %rd8660, %rd8723;
	xor.b64  	%rd8725, %rd8724, %rd8658;
	not.b64 	%rd8726, %rd8660;
	and.b64  	%rd8727, %rd8661, %rd8726;
	xor.b64  	%rd8728, %rd8727, %rd8659;
	not.b64 	%rd8729, %rd8661;
	and.b64  	%rd8730, %rd8662, %rd8729;
	xor.b64  	%rd8731, %rd8730, %rd8660;
	not.b64 	%rd8732, %rd8662;
	and.b64  	%rd8733, %rd8658, %rd8732;
	xor.b64  	%rd8734, %rd8733, %rd8661;
	not.b64 	%rd8735, %rd8658;
	and.b64  	%rd8736, %rd8659, %rd8735;
	xor.b64  	%rd8737, %rd8736, %rd8662;
	xor.b64  	%rd8739, %rd8665, %rd19;
	xor.b64  	%rd8740, %rd8680, %rd8739;
	xor.b64  	%rd8741, %rd8740, %rd8695;
	xor.b64  	%rd8742, %rd8741, %rd8710;
	xor.b64  	%rd8743, %rd8742, %rd8725;
	xor.b64  	%rd8744, %rd8683, %rd8668;
	xor.b64  	%rd8745, %rd8744, %rd8698;
	xor.b64  	%rd8746, %rd8745, %rd8713;
	xor.b64  	%rd8747, %rd8746, %rd8728;
	xor.b64  	%rd8748, %rd8686, %rd8671;
	xor.b64  	%rd8749, %rd8748, %rd8701;
	xor.b64  	%rd8750, %rd8749, %rd8716;
	xor.b64  	%rd8751, %rd8750, %rd8731;
	xor.b64  	%rd8752, %rd8689, %rd8674;
	xor.b64  	%rd8753, %rd8752, %rd8704;
	xor.b64  	%rd8754, %rd8753, %rd8719;
	xor.b64  	%rd8755, %rd8754, %rd8734;
	xor.b64  	%rd8756, %rd8692, %rd8677;
	xor.b64  	%rd8757, %rd8756, %rd8707;
	xor.b64  	%rd8758, %rd8757, %rd8722;
	xor.b64  	%rd8759, %rd8758, %rd8737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6109}, %rd8747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6110,%dummy}, %rd8747;
	}
	shf.l.wrap.b32 	%r6111, %r6110, %r6109, 1;
	shf.l.wrap.b32 	%r6112, %r6109, %r6110, 1;
	mov.b64 	%rd8760, {%r6112, %r6111};
	xor.b64  	%rd8761, %rd8759, %rd8760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd8751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6114,%dummy}, %rd8751;
	}
	shf.l.wrap.b32 	%r6115, %r6114, %r6113, 1;
	shf.l.wrap.b32 	%r6116, %r6113, %r6114, 1;
	mov.b64 	%rd8762, {%r6116, %r6115};
	xor.b64  	%rd8763, %rd8762, %rd8743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6117}, %rd8755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6118,%dummy}, %rd8755;
	}
	shf.l.wrap.b32 	%r6119, %r6118, %r6117, 1;
	shf.l.wrap.b32 	%r6120, %r6117, %r6118, 1;
	mov.b64 	%rd8764, {%r6120, %r6119};
	xor.b64  	%rd8765, %rd8764, %rd8747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd8759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd8759;
	}
	shf.l.wrap.b32 	%r6123, %r6122, %r6121, 1;
	shf.l.wrap.b32 	%r6124, %r6121, %r6122, 1;
	mov.b64 	%rd8766, {%r6124, %r6123};
	xor.b64  	%rd8767, %rd8766, %rd8751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6125}, %rd8743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6126,%dummy}, %rd8743;
	}
	shf.l.wrap.b32 	%r6127, %r6126, %r6125, 1;
	shf.l.wrap.b32 	%r6128, %r6125, %r6126, 1;
	mov.b64 	%rd8768, {%r6128, %r6127};
	xor.b64  	%rd8769, %rd8755, %rd8768;
	xor.b64  	%rd8770, %rd8761, %rd8739;
	xor.b64  	%rd8771, %rd8763, %rd8668;
	xor.b64  	%rd8772, %rd8765, %rd8671;
	xor.b64  	%rd8773, %rd8767, %rd8674;
	xor.b64  	%rd8774, %rd8769, %rd8677;
	xor.b64  	%rd8775, %rd8761, %rd8680;
	xor.b64  	%rd8776, %rd8763, %rd8683;
	xor.b64  	%rd8777, %rd8765, %rd8686;
	xor.b64  	%rd8778, %rd8767, %rd8689;
	xor.b64  	%rd8779, %rd8769, %rd8692;
	xor.b64  	%rd8780, %rd8761, %rd8695;
	xor.b64  	%rd8781, %rd8763, %rd8698;
	xor.b64  	%rd8782, %rd8765, %rd8701;
	xor.b64  	%rd8783, %rd8767, %rd8704;
	xor.b64  	%rd8784, %rd8769, %rd8707;
	xor.b64  	%rd8785, %rd8761, %rd8710;
	xor.b64  	%rd8786, %rd8763, %rd8713;
	xor.b64  	%rd8787, %rd8765, %rd8716;
	xor.b64  	%rd8788, %rd8767, %rd8719;
	xor.b64  	%rd8789, %rd8769, %rd8722;
	xor.b64  	%rd8790, %rd8761, %rd8725;
	xor.b64  	%rd8791, %rd8763, %rd8728;
	xor.b64  	%rd8792, %rd8765, %rd8731;
	xor.b64  	%rd8793, %rd8767, %rd8734;
	xor.b64  	%rd8794, %rd8769, %rd8737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6129,%dummy}, %rd8776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6130}, %rd8776;
	}
	shf.r.wrap.b32 	%r6131, %r6130, %r6129, 20;
	shf.r.wrap.b32 	%r6132, %r6129, %r6130, 20;
	mov.b64 	%rd8795, {%r6132, %r6131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6133,%dummy}, %rd8782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6134}, %rd8782;
	}
	shf.r.wrap.b32 	%r6135, %r6134, %r6133, 21;
	shf.r.wrap.b32 	%r6136, %r6133, %r6134, 21;
	mov.b64 	%rd8796, {%r6136, %r6135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6137}, %rd8788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd8788;
	}
	shf.l.wrap.b32 	%r6139, %r6138, %r6137, 21;
	shf.l.wrap.b32 	%r6140, %r6137, %r6138, 21;
	mov.b64 	%rd8797, {%r6140, %r6139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6141}, %rd8794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6142,%dummy}, %rd8794;
	}
	shf.l.wrap.b32 	%r6143, %r6142, %r6141, 14;
	shf.l.wrap.b32 	%r6144, %r6141, %r6142, 14;
	mov.b64 	%rd8798, {%r6144, %r6143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6145}, %rd8773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd8773;
	}
	shf.l.wrap.b32 	%r6147, %r6146, %r6145, 28;
	shf.l.wrap.b32 	%r6148, %r6145, %r6146, 28;
	mov.b64 	%rd8799, {%r6148, %r6147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6149}, %rd8779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6150,%dummy}, %rd8779;
	}
	shf.l.wrap.b32 	%r6151, %r6150, %r6149, 20;
	shf.l.wrap.b32 	%r6152, %r6149, %r6150, 20;
	mov.b64 	%rd8800, {%r6152, %r6151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6153}, %rd8780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd8780;
	}
	shf.l.wrap.b32 	%r6155, %r6154, %r6153, 3;
	shf.l.wrap.b32 	%r6156, %r6153, %r6154, 3;
	mov.b64 	%rd8801, {%r6156, %r6155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6157,%dummy}, %rd8786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6158}, %rd8786;
	}
	shf.r.wrap.b32 	%r6159, %r6158, %r6157, 19;
	shf.r.wrap.b32 	%r6160, %r6157, %r6158, 19;
	mov.b64 	%rd8802, {%r6160, %r6159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6161,%dummy}, %rd8792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6162}, %rd8792;
	}
	shf.r.wrap.b32 	%r6163, %r6162, %r6161, 3;
	shf.r.wrap.b32 	%r6164, %r6161, %r6162, 3;
	mov.b64 	%rd8803, {%r6164, %r6163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6165}, %rd8771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6166,%dummy}, %rd8771;
	}
	shf.l.wrap.b32 	%r6167, %r6166, %r6165, 1;
	shf.l.wrap.b32 	%r6168, %r6165, %r6166, 1;
	mov.b64 	%rd8804, {%r6168, %r6167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd8777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd8777;
	}
	shf.l.wrap.b32 	%r6171, %r6170, %r6169, 6;
	shf.l.wrap.b32 	%r6172, %r6169, %r6170, 6;
	mov.b64 	%rd8805, {%r6172, %r6171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6173}, %rd8783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6174,%dummy}, %rd8783;
	}
	shf.l.wrap.b32 	%r6175, %r6174, %r6173, 25;
	shf.l.wrap.b32 	%r6176, %r6173, %r6174, 25;
	mov.b64 	%rd8806, {%r6176, %r6175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6178,%dummy}, %rd8789;
	}
	shf.l.wrap.b32 	%r6179, %r6178, %r6177, 8;
	shf.l.wrap.b32 	%r6180, %r6177, %r6178, 8;
	mov.b64 	%rd8807, {%r6180, %r6179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6181}, %rd8790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6182,%dummy}, %rd8790;
	}
	shf.l.wrap.b32 	%r6183, %r6182, %r6181, 18;
	shf.l.wrap.b32 	%r6184, %r6181, %r6182, 18;
	mov.b64 	%rd8808, {%r6184, %r6183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6185}, %rd8774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd8774;
	}
	shf.l.wrap.b32 	%r6187, %r6186, %r6185, 27;
	shf.l.wrap.b32 	%r6188, %r6185, %r6186, 27;
	mov.b64 	%rd8809, {%r6188, %r6187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd8775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd8775;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 28;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 28;
	mov.b64 	%rd8810, {%r6192, %r6191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6193}, %rd8781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6194,%dummy}, %rd8781;
	}
	shf.l.wrap.b32 	%r6195, %r6194, %r6193, 10;
	shf.l.wrap.b32 	%r6196, %r6193, %r6194, 10;
	mov.b64 	%rd8811, {%r6196, %r6195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd8787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6198,%dummy}, %rd8787;
	}
	shf.l.wrap.b32 	%r6199, %r6198, %r6197, 15;
	shf.l.wrap.b32 	%r6200, %r6197, %r6198, 15;
	mov.b64 	%rd8812, {%r6200, %r6199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6201,%dummy}, %rd8793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6202}, %rd8793;
	}
	shf.r.wrap.b32 	%r6203, %r6202, %r6201, 8;
	shf.r.wrap.b32 	%r6204, %r6201, %r6202, 8;
	mov.b64 	%rd8813, {%r6204, %r6203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6205,%dummy}, %rd8772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6206}, %rd8772;
	}
	shf.r.wrap.b32 	%r6207, %r6206, %r6205, 2;
	shf.r.wrap.b32 	%r6208, %r6205, %r6206, 2;
	mov.b64 	%rd8814, {%r6208, %r6207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6209,%dummy}, %rd8778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6210}, %rd8778;
	}
	shf.r.wrap.b32 	%r6211, %r6210, %r6209, 9;
	shf.r.wrap.b32 	%r6212, %r6209, %r6210, 9;
	mov.b64 	%rd8815, {%r6212, %r6211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6213,%dummy}, %rd8784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6214}, %rd8784;
	}
	shf.r.wrap.b32 	%r6215, %r6214, %r6213, 25;
	shf.r.wrap.b32 	%r6216, %r6213, %r6214, 25;
	mov.b64 	%rd8816, {%r6216, %r6215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6217,%dummy}, %rd8785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6218}, %rd8785;
	}
	shf.r.wrap.b32 	%r6219, %r6218, %r6217, 23;
	shf.r.wrap.b32 	%r6220, %r6217, %r6218, 23;
	mov.b64 	%rd8817, {%r6220, %r6219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6221}, %rd8791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6222,%dummy}, %rd8791;
	}
	shf.l.wrap.b32 	%r6223, %r6222, %r6221, 2;
	shf.l.wrap.b32 	%r6224, %r6221, %r6222, 2;
	mov.b64 	%rd8818, {%r6224, %r6223};
	not.b64 	%rd8819, %rd8795;
	and.b64  	%rd8820, %rd8796, %rd8819;
	xor.b64  	%rd8821, %rd8820, %rd8770;
	not.b64 	%rd8822, %rd8796;
	and.b64  	%rd8823, %rd8797, %rd8822;
	xor.b64  	%rd8824, %rd8823, %rd8795;
	not.b64 	%rd8825, %rd8797;
	and.b64  	%rd8826, %rd8798, %rd8825;
	xor.b64  	%rd8827, %rd8826, %rd8796;
	not.b64 	%rd8828, %rd8798;
	and.b64  	%rd8829, %rd8770, %rd8828;
	xor.b64  	%rd8830, %rd8829, %rd8797;
	not.b64 	%rd8831, %rd8770;
	and.b64  	%rd8832, %rd8795, %rd8831;
	xor.b64  	%rd8833, %rd8832, %rd8798;
	not.b64 	%rd8834, %rd8800;
	and.b64  	%rd8835, %rd8801, %rd8834;
	xor.b64  	%rd8836, %rd8835, %rd8799;
	not.b64 	%rd8837, %rd8801;
	and.b64  	%rd8838, %rd8802, %rd8837;
	xor.b64  	%rd8839, %rd8838, %rd8800;
	not.b64 	%rd8840, %rd8802;
	and.b64  	%rd8841, %rd8803, %rd8840;
	xor.b64  	%rd8842, %rd8841, %rd8801;
	not.b64 	%rd8843, %rd8803;
	and.b64  	%rd8844, %rd8799, %rd8843;
	xor.b64  	%rd8845, %rd8844, %rd8802;
	not.b64 	%rd8846, %rd8799;
	and.b64  	%rd8847, %rd8800, %rd8846;
	xor.b64  	%rd8848, %rd8847, %rd8803;
	not.b64 	%rd8849, %rd8805;
	and.b64  	%rd8850, %rd8806, %rd8849;
	xor.b64  	%rd8851, %rd8850, %rd8804;
	not.b64 	%rd8852, %rd8806;
	and.b64  	%rd8853, %rd8807, %rd8852;
	xor.b64  	%rd8854, %rd8853, %rd8805;
	not.b64 	%rd8855, %rd8807;
	and.b64  	%rd8856, %rd8808, %rd8855;
	xor.b64  	%rd8857, %rd8856, %rd8806;
	not.b64 	%rd8858, %rd8808;
	and.b64  	%rd8859, %rd8804, %rd8858;
	xor.b64  	%rd8860, %rd8859, %rd8807;
	not.b64 	%rd8861, %rd8804;
	and.b64  	%rd8862, %rd8805, %rd8861;
	xor.b64  	%rd8863, %rd8862, %rd8808;
	not.b64 	%rd8864, %rd8810;
	and.b64  	%rd8865, %rd8811, %rd8864;
	xor.b64  	%rd8866, %rd8865, %rd8809;
	not.b64 	%rd8867, %rd8811;
	and.b64  	%rd8868, %rd8812, %rd8867;
	xor.b64  	%rd8869, %rd8868, %rd8810;
	not.b64 	%rd8870, %rd8812;
	and.b64  	%rd8871, %rd8813, %rd8870;
	xor.b64  	%rd8872, %rd8871, %rd8811;
	not.b64 	%rd8873, %rd8813;
	and.b64  	%rd8874, %rd8809, %rd8873;
	xor.b64  	%rd8875, %rd8874, %rd8812;
	not.b64 	%rd8876, %rd8809;
	and.b64  	%rd8877, %rd8810, %rd8876;
	xor.b64  	%rd8878, %rd8877, %rd8813;
	not.b64 	%rd8879, %rd8815;
	and.b64  	%rd8880, %rd8816, %rd8879;
	xor.b64  	%rd8881, %rd8880, %rd8814;
	not.b64 	%rd8882, %rd8816;
	and.b64  	%rd8883, %rd8817, %rd8882;
	xor.b64  	%rd8884, %rd8883, %rd8815;
	not.b64 	%rd8885, %rd8817;
	and.b64  	%rd8886, %rd8818, %rd8885;
	xor.b64  	%rd8887, %rd8886, %rd8816;
	not.b64 	%rd8888, %rd8818;
	and.b64  	%rd8889, %rd8814, %rd8888;
	xor.b64  	%rd8890, %rd8889, %rd8817;
	not.b64 	%rd8891, %rd8814;
	and.b64  	%rd8892, %rd8815, %rd8891;
	xor.b64  	%rd8893, %rd8892, %rd8818;
	xor.b64  	%rd8895, %rd8821, %rd20;
	xor.b64  	%rd8896, %rd8836, %rd8895;
	xor.b64  	%rd8897, %rd8896, %rd8851;
	xor.b64  	%rd8898, %rd8897, %rd8866;
	xor.b64  	%rd8899, %rd8898, %rd8881;
	xor.b64  	%rd8900, %rd8839, %rd8824;
	xor.b64  	%rd8901, %rd8900, %rd8854;
	xor.b64  	%rd8902, %rd8901, %rd8869;
	xor.b64  	%rd8903, %rd8902, %rd8884;
	xor.b64  	%rd8904, %rd8842, %rd8827;
	xor.b64  	%rd8905, %rd8904, %rd8857;
	xor.b64  	%rd8906, %rd8905, %rd8872;
	xor.b64  	%rd8907, %rd8906, %rd8887;
	xor.b64  	%rd8908, %rd8845, %rd8830;
	xor.b64  	%rd8909, %rd8908, %rd8860;
	xor.b64  	%rd8910, %rd8909, %rd8875;
	xor.b64  	%rd8911, %rd8910, %rd8890;
	xor.b64  	%rd8912, %rd8848, %rd8833;
	xor.b64  	%rd8913, %rd8912, %rd8863;
	xor.b64  	%rd8914, %rd8913, %rd8878;
	xor.b64  	%rd8915, %rd8914, %rd8893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6225}, %rd8903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd8903;
	}
	shf.l.wrap.b32 	%r6227, %r6226, %r6225, 1;
	shf.l.wrap.b32 	%r6228, %r6225, %r6226, 1;
	mov.b64 	%rd8916, {%r6228, %r6227};
	xor.b64  	%rd8917, %rd8915, %rd8916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6229}, %rd8907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6230,%dummy}, %rd8907;
	}
	shf.l.wrap.b32 	%r6231, %r6230, %r6229, 1;
	shf.l.wrap.b32 	%r6232, %r6229, %r6230, 1;
	mov.b64 	%rd8918, {%r6232, %r6231};
	xor.b64  	%rd8919, %rd8918, %rd8899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6233}, %rd8911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6234,%dummy}, %rd8911;
	}
	shf.l.wrap.b32 	%r6235, %r6234, %r6233, 1;
	shf.l.wrap.b32 	%r6236, %r6233, %r6234, 1;
	mov.b64 	%rd8920, {%r6236, %r6235};
	xor.b64  	%rd8921, %rd8920, %rd8903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd8915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6238,%dummy}, %rd8915;
	}
	shf.l.wrap.b32 	%r6239, %r6238, %r6237, 1;
	shf.l.wrap.b32 	%r6240, %r6237, %r6238, 1;
	mov.b64 	%rd8922, {%r6240, %r6239};
	xor.b64  	%rd8923, %rd8922, %rd8907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6241}, %rd8899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6242,%dummy}, %rd8899;
	}
	shf.l.wrap.b32 	%r6243, %r6242, %r6241, 1;
	shf.l.wrap.b32 	%r6244, %r6241, %r6242, 1;
	mov.b64 	%rd8924, {%r6244, %r6243};
	xor.b64  	%rd8925, %rd8911, %rd8924;
	xor.b64  	%rd8926, %rd8917, %rd8895;
	xor.b64  	%rd8927, %rd8919, %rd8824;
	xor.b64  	%rd8928, %rd8921, %rd8827;
	xor.b64  	%rd8929, %rd8923, %rd8830;
	xor.b64  	%rd8930, %rd8925, %rd8833;
	xor.b64  	%rd8931, %rd8917, %rd8836;
	xor.b64  	%rd8932, %rd8919, %rd8839;
	xor.b64  	%rd8933, %rd8921, %rd8842;
	xor.b64  	%rd8934, %rd8923, %rd8845;
	xor.b64  	%rd8935, %rd8925, %rd8848;
	xor.b64  	%rd8936, %rd8917, %rd8851;
	xor.b64  	%rd8937, %rd8919, %rd8854;
	xor.b64  	%rd8938, %rd8921, %rd8857;
	xor.b64  	%rd8939, %rd8923, %rd8860;
	xor.b64  	%rd8940, %rd8925, %rd8863;
	xor.b64  	%rd8941, %rd8917, %rd8866;
	xor.b64  	%rd8942, %rd8919, %rd8869;
	xor.b64  	%rd8943, %rd8921, %rd8872;
	xor.b64  	%rd8944, %rd8923, %rd8875;
	xor.b64  	%rd8945, %rd8925, %rd8878;
	xor.b64  	%rd8946, %rd8917, %rd8881;
	xor.b64  	%rd8947, %rd8919, %rd8884;
	xor.b64  	%rd8948, %rd8921, %rd8887;
	xor.b64  	%rd8949, %rd8923, %rd8890;
	xor.b64  	%rd8950, %rd8925, %rd8893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6245,%dummy}, %rd8932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6246}, %rd8932;
	}
	shf.r.wrap.b32 	%r6247, %r6246, %r6245, 20;
	shf.r.wrap.b32 	%r6248, %r6245, %r6246, 20;
	mov.b64 	%rd8951, {%r6248, %r6247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6249,%dummy}, %rd8938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6250}, %rd8938;
	}
	shf.r.wrap.b32 	%r6251, %r6250, %r6249, 21;
	shf.r.wrap.b32 	%r6252, %r6249, %r6250, 21;
	mov.b64 	%rd8952, {%r6252, %r6251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6253}, %rd8944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6254,%dummy}, %rd8944;
	}
	shf.l.wrap.b32 	%r6255, %r6254, %r6253, 21;
	shf.l.wrap.b32 	%r6256, %r6253, %r6254, 21;
	mov.b64 	%rd8953, {%r6256, %r6255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd8950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6258,%dummy}, %rd8950;
	}
	shf.l.wrap.b32 	%r6259, %r6258, %r6257, 14;
	shf.l.wrap.b32 	%r6260, %r6257, %r6258, 14;
	mov.b64 	%rd8954, {%r6260, %r6259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6261}, %rd8929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6262,%dummy}, %rd8929;
	}
	shf.l.wrap.b32 	%r6263, %r6262, %r6261, 28;
	shf.l.wrap.b32 	%r6264, %r6261, %r6262, 28;
	mov.b64 	%rd8955, {%r6264, %r6263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6265}, %rd8935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd8935;
	}
	shf.l.wrap.b32 	%r6267, %r6266, %r6265, 20;
	shf.l.wrap.b32 	%r6268, %r6265, %r6266, 20;
	mov.b64 	%rd8956, {%r6268, %r6267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6269}, %rd8936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6270,%dummy}, %rd8936;
	}
	shf.l.wrap.b32 	%r6271, %r6270, %r6269, 3;
	shf.l.wrap.b32 	%r6272, %r6269, %r6270, 3;
	mov.b64 	%rd8957, {%r6272, %r6271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6273,%dummy}, %rd8942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6274}, %rd8942;
	}
	shf.r.wrap.b32 	%r6275, %r6274, %r6273, 19;
	shf.r.wrap.b32 	%r6276, %r6273, %r6274, 19;
	mov.b64 	%rd8958, {%r6276, %r6275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6277,%dummy}, %rd8948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6278}, %rd8948;
	}
	shf.r.wrap.b32 	%r6279, %r6278, %r6277, 3;
	shf.r.wrap.b32 	%r6280, %r6277, %r6278, 3;
	mov.b64 	%rd8959, {%r6280, %r6279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6281}, %rd8927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6282,%dummy}, %rd8927;
	}
	shf.l.wrap.b32 	%r6283, %r6282, %r6281, 1;
	shf.l.wrap.b32 	%r6284, %r6281, %r6282, 1;
	mov.b64 	%rd8960, {%r6284, %r6283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6285}, %rd8933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd8933;
	}
	shf.l.wrap.b32 	%r6287, %r6286, %r6285, 6;
	shf.l.wrap.b32 	%r6288, %r6285, %r6286, 6;
	mov.b64 	%rd8961, {%r6288, %r6287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6289}, %rd8939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6290,%dummy}, %rd8939;
	}
	shf.l.wrap.b32 	%r6291, %r6290, %r6289, 25;
	shf.l.wrap.b32 	%r6292, %r6289, %r6290, 25;
	mov.b64 	%rd8962, {%r6292, %r6291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6293}, %rd8945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6294,%dummy}, %rd8945;
	}
	shf.l.wrap.b32 	%r6295, %r6294, %r6293, 8;
	shf.l.wrap.b32 	%r6296, %r6293, %r6294, 8;
	mov.b64 	%rd8963, {%r6296, %r6295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd8946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6298,%dummy}, %rd8946;
	}
	shf.l.wrap.b32 	%r6299, %r6298, %r6297, 18;
	shf.l.wrap.b32 	%r6300, %r6297, %r6298, 18;
	mov.b64 	%rd8964, {%r6300, %r6299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6301}, %rd8930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6302,%dummy}, %rd8930;
	}
	shf.l.wrap.b32 	%r6303, %r6302, %r6301, 27;
	shf.l.wrap.b32 	%r6304, %r6301, %r6302, 27;
	mov.b64 	%rd8965, {%r6304, %r6303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6305,%dummy}, %rd8931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6306}, %rd8931;
	}
	shf.r.wrap.b32 	%r6307, %r6306, %r6305, 28;
	shf.r.wrap.b32 	%r6308, %r6305, %r6306, 28;
	mov.b64 	%rd8966, {%r6308, %r6307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6309}, %rd8937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6310,%dummy}, %rd8937;
	}
	shf.l.wrap.b32 	%r6311, %r6310, %r6309, 10;
	shf.l.wrap.b32 	%r6312, %r6309, %r6310, 10;
	mov.b64 	%rd8967, {%r6312, %r6311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6313}, %rd8943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6314,%dummy}, %rd8943;
	}
	shf.l.wrap.b32 	%r6315, %r6314, %r6313, 15;
	shf.l.wrap.b32 	%r6316, %r6313, %r6314, 15;
	mov.b64 	%rd8968, {%r6316, %r6315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6317,%dummy}, %rd8949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6318}, %rd8949;
	}
	shf.r.wrap.b32 	%r6319, %r6318, %r6317, 8;
	shf.r.wrap.b32 	%r6320, %r6317, %r6318, 8;
	mov.b64 	%rd8969, {%r6320, %r6319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6321,%dummy}, %rd8928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6322}, %rd8928;
	}
	shf.r.wrap.b32 	%r6323, %r6322, %r6321, 2;
	shf.r.wrap.b32 	%r6324, %r6321, %r6322, 2;
	mov.b64 	%rd8970, {%r6324, %r6323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6325,%dummy}, %rd8934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6326}, %rd8934;
	}
	shf.r.wrap.b32 	%r6327, %r6326, %r6325, 9;
	shf.r.wrap.b32 	%r6328, %r6325, %r6326, 9;
	mov.b64 	%rd8971, {%r6328, %r6327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6329,%dummy}, %rd8940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6330}, %rd8940;
	}
	shf.r.wrap.b32 	%r6331, %r6330, %r6329, 25;
	shf.r.wrap.b32 	%r6332, %r6329, %r6330, 25;
	mov.b64 	%rd8972, {%r6332, %r6331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6333,%dummy}, %rd8941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6334}, %rd8941;
	}
	shf.r.wrap.b32 	%r6335, %r6334, %r6333, 23;
	shf.r.wrap.b32 	%r6336, %r6333, %r6334, 23;
	mov.b64 	%rd8973, {%r6336, %r6335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd8947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6338,%dummy}, %rd8947;
	}
	shf.l.wrap.b32 	%r6339, %r6338, %r6337, 2;
	shf.l.wrap.b32 	%r6340, %r6337, %r6338, 2;
	mov.b64 	%rd8974, {%r6340, %r6339};
	not.b64 	%rd8975, %rd8951;
	and.b64  	%rd8976, %rd8952, %rd8975;
	xor.b64  	%rd8977, %rd8976, %rd8926;
	not.b64 	%rd8978, %rd8952;
	and.b64  	%rd8979, %rd8953, %rd8978;
	xor.b64  	%rd8980, %rd8979, %rd8951;
	not.b64 	%rd8981, %rd8953;
	and.b64  	%rd8982, %rd8954, %rd8981;
	xor.b64  	%rd8983, %rd8982, %rd8952;
	not.b64 	%rd8984, %rd8954;
	and.b64  	%rd8985, %rd8926, %rd8984;
	xor.b64  	%rd8986, %rd8985, %rd8953;
	not.b64 	%rd8987, %rd8926;
	and.b64  	%rd8988, %rd8951, %rd8987;
	xor.b64  	%rd8989, %rd8988, %rd8954;
	not.b64 	%rd8990, %rd8956;
	and.b64  	%rd8991, %rd8957, %rd8990;
	xor.b64  	%rd8992, %rd8991, %rd8955;
	not.b64 	%rd8993, %rd8957;
	and.b64  	%rd8994, %rd8958, %rd8993;
	xor.b64  	%rd8995, %rd8994, %rd8956;
	not.b64 	%rd8996, %rd8958;
	and.b64  	%rd8997, %rd8959, %rd8996;
	xor.b64  	%rd8998, %rd8997, %rd8957;
	not.b64 	%rd8999, %rd8959;
	and.b64  	%rd9000, %rd8955, %rd8999;
	xor.b64  	%rd9001, %rd9000, %rd8958;
	not.b64 	%rd9002, %rd8955;
	and.b64  	%rd9003, %rd8956, %rd9002;
	xor.b64  	%rd9004, %rd9003, %rd8959;
	not.b64 	%rd9005, %rd8961;
	and.b64  	%rd9006, %rd8962, %rd9005;
	xor.b64  	%rd9007, %rd9006, %rd8960;
	not.b64 	%rd9008, %rd8962;
	and.b64  	%rd9009, %rd8963, %rd9008;
	xor.b64  	%rd9010, %rd9009, %rd8961;
	not.b64 	%rd9011, %rd8963;
	and.b64  	%rd9012, %rd8964, %rd9011;
	xor.b64  	%rd9013, %rd9012, %rd8962;
	not.b64 	%rd9014, %rd8964;
	and.b64  	%rd9015, %rd8960, %rd9014;
	xor.b64  	%rd9016, %rd9015, %rd8963;
	not.b64 	%rd9017, %rd8960;
	and.b64  	%rd9018, %rd8961, %rd9017;
	xor.b64  	%rd9019, %rd9018, %rd8964;
	not.b64 	%rd9020, %rd8966;
	and.b64  	%rd9021, %rd8967, %rd9020;
	xor.b64  	%rd9022, %rd9021, %rd8965;
	not.b64 	%rd9023, %rd8967;
	and.b64  	%rd9024, %rd8968, %rd9023;
	xor.b64  	%rd9025, %rd9024, %rd8966;
	not.b64 	%rd9026, %rd8968;
	and.b64  	%rd9027, %rd8969, %rd9026;
	xor.b64  	%rd9028, %rd9027, %rd8967;
	not.b64 	%rd9029, %rd8969;
	and.b64  	%rd9030, %rd8965, %rd9029;
	xor.b64  	%rd9031, %rd9030, %rd8968;
	not.b64 	%rd9032, %rd8965;
	and.b64  	%rd9033, %rd8966, %rd9032;
	xor.b64  	%rd9034, %rd9033, %rd8969;
	not.b64 	%rd9035, %rd8971;
	and.b64  	%rd9036, %rd8972, %rd9035;
	xor.b64  	%rd9037, %rd9036, %rd8970;
	not.b64 	%rd9038, %rd8972;
	and.b64  	%rd9039, %rd8973, %rd9038;
	xor.b64  	%rd9040, %rd9039, %rd8971;
	not.b64 	%rd9041, %rd8973;
	and.b64  	%rd9042, %rd8974, %rd9041;
	xor.b64  	%rd9043, %rd9042, %rd8972;
	not.b64 	%rd9044, %rd8974;
	and.b64  	%rd9045, %rd8970, %rd9044;
	xor.b64  	%rd9046, %rd9045, %rd8973;
	not.b64 	%rd9047, %rd8970;
	and.b64  	%rd9048, %rd8971, %rd9047;
	xor.b64  	%rd9049, %rd9048, %rd8974;
	xor.b64  	%rd9051, %rd8977, %rd21;
	xor.b64  	%rd9052, %rd8992, %rd9051;
	xor.b64  	%rd9053, %rd9052, %rd9007;
	xor.b64  	%rd9054, %rd9053, %rd9022;
	xor.b64  	%rd9055, %rd9054, %rd9037;
	xor.b64  	%rd9056, %rd8995, %rd8980;
	xor.b64  	%rd9057, %rd9056, %rd9010;
	xor.b64  	%rd9058, %rd9057, %rd9025;
	xor.b64  	%rd9059, %rd9058, %rd9040;
	xor.b64  	%rd9060, %rd8998, %rd8983;
	xor.b64  	%rd9061, %rd9060, %rd9013;
	xor.b64  	%rd9062, %rd9061, %rd9028;
	xor.b64  	%rd9063, %rd9062, %rd9043;
	xor.b64  	%rd9064, %rd9001, %rd8986;
	xor.b64  	%rd9065, %rd9064, %rd9016;
	xor.b64  	%rd9066, %rd9065, %rd9031;
	xor.b64  	%rd9067, %rd9066, %rd9046;
	xor.b64  	%rd9068, %rd9004, %rd8989;
	xor.b64  	%rd9069, %rd9068, %rd9019;
	xor.b64  	%rd9070, %rd9069, %rd9034;
	xor.b64  	%rd9071, %rd9070, %rd9049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6341}, %rd9059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6342,%dummy}, %rd9059;
	}
	shf.l.wrap.b32 	%r6343, %r6342, %r6341, 1;
	shf.l.wrap.b32 	%r6344, %r6341, %r6342, 1;
	mov.b64 	%rd9072, {%r6344, %r6343};
	xor.b64  	%rd9073, %rd9071, %rd9072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6345}, %rd9063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd9063;
	}
	shf.l.wrap.b32 	%r6347, %r6346, %r6345, 1;
	shf.l.wrap.b32 	%r6348, %r6345, %r6346, 1;
	mov.b64 	%rd9074, {%r6348, %r6347};
	xor.b64  	%rd9075, %rd9074, %rd9055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6349}, %rd9067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6350,%dummy}, %rd9067;
	}
	shf.l.wrap.b32 	%r6351, %r6350, %r6349, 1;
	shf.l.wrap.b32 	%r6352, %r6349, %r6350, 1;
	mov.b64 	%rd9076, {%r6352, %r6351};
	xor.b64  	%rd9077, %rd9076, %rd9059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6353}, %rd9071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd9071;
	}
	shf.l.wrap.b32 	%r6355, %r6354, %r6353, 1;
	shf.l.wrap.b32 	%r6356, %r6353, %r6354, 1;
	mov.b64 	%rd9078, {%r6356, %r6355};
	xor.b64  	%rd9079, %rd9078, %rd9063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6357}, %rd9055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6358,%dummy}, %rd9055;
	}
	shf.l.wrap.b32 	%r6359, %r6358, %r6357, 1;
	shf.l.wrap.b32 	%r6360, %r6357, %r6358, 1;
	mov.b64 	%rd9080, {%r6360, %r6359};
	xor.b64  	%rd9081, %rd9067, %rd9080;
	xor.b64  	%rd9082, %rd9073, %rd9051;
	xor.b64  	%rd9083, %rd9075, %rd8980;
	xor.b64  	%rd9084, %rd9077, %rd8983;
	xor.b64  	%rd9085, %rd9079, %rd8986;
	xor.b64  	%rd9086, %rd9081, %rd8989;
	xor.b64  	%rd9087, %rd9073, %rd8992;
	xor.b64  	%rd9088, %rd9075, %rd8995;
	xor.b64  	%rd9089, %rd9077, %rd8998;
	xor.b64  	%rd9090, %rd9079, %rd9001;
	xor.b64  	%rd9091, %rd9081, %rd9004;
	xor.b64  	%rd9092, %rd9073, %rd9007;
	xor.b64  	%rd9093, %rd9075, %rd9010;
	xor.b64  	%rd9094, %rd9077, %rd9013;
	xor.b64  	%rd9095, %rd9079, %rd9016;
	xor.b64  	%rd9096, %rd9081, %rd9019;
	xor.b64  	%rd9097, %rd9073, %rd9022;
	xor.b64  	%rd9098, %rd9075, %rd9025;
	xor.b64  	%rd9099, %rd9077, %rd9028;
	xor.b64  	%rd9100, %rd9079, %rd9031;
	xor.b64  	%rd9101, %rd9081, %rd9034;
	xor.b64  	%rd9102, %rd9073, %rd9037;
	xor.b64  	%rd9103, %rd9075, %rd9040;
	xor.b64  	%rd9104, %rd9077, %rd9043;
	xor.b64  	%rd9105, %rd9079, %rd9046;
	xor.b64  	%rd9106, %rd9081, %rd9049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6361,%dummy}, %rd9088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6362}, %rd9088;
	}
	shf.r.wrap.b32 	%r6363, %r6362, %r6361, 20;
	shf.r.wrap.b32 	%r6364, %r6361, %r6362, 20;
	mov.b64 	%rd9107, {%r6364, %r6363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6365,%dummy}, %rd9094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6366}, %rd9094;
	}
	shf.r.wrap.b32 	%r6367, %r6366, %r6365, 21;
	shf.r.wrap.b32 	%r6368, %r6365, %r6366, 21;
	mov.b64 	%rd9108, {%r6368, %r6367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6369}, %rd9100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd9100;
	}
	shf.l.wrap.b32 	%r6371, %r6370, %r6369, 21;
	shf.l.wrap.b32 	%r6372, %r6369, %r6370, 21;
	mov.b64 	%rd9109, {%r6372, %r6371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6373}, %rd9106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6374,%dummy}, %rd9106;
	}
	shf.l.wrap.b32 	%r6375, %r6374, %r6373, 14;
	shf.l.wrap.b32 	%r6376, %r6373, %r6374, 14;
	mov.b64 	%rd9110, {%r6376, %r6375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6377}, %rd9085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd9085;
	}
	shf.l.wrap.b32 	%r6379, %r6378, %r6377, 28;
	shf.l.wrap.b32 	%r6380, %r6377, %r6378, 28;
	mov.b64 	%rd9111, {%r6380, %r6379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6381}, %rd9091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6382,%dummy}, %rd9091;
	}
	shf.l.wrap.b32 	%r6383, %r6382, %r6381, 20;
	shf.l.wrap.b32 	%r6384, %r6381, %r6382, 20;
	mov.b64 	%rd9112, {%r6384, %r6383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6385}, %rd9092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd9092;
	}
	shf.l.wrap.b32 	%r6387, %r6386, %r6385, 3;
	shf.l.wrap.b32 	%r6388, %r6385, %r6386, 3;
	mov.b64 	%rd9113, {%r6388, %r6387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6389,%dummy}, %rd9098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6390}, %rd9098;
	}
	shf.r.wrap.b32 	%r6391, %r6390, %r6389, 19;
	shf.r.wrap.b32 	%r6392, %r6389, %r6390, 19;
	mov.b64 	%rd9114, {%r6392, %r6391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6393,%dummy}, %rd9104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6394}, %rd9104;
	}
	shf.r.wrap.b32 	%r6395, %r6394, %r6393, 3;
	shf.r.wrap.b32 	%r6396, %r6393, %r6394, 3;
	mov.b64 	%rd9115, {%r6396, %r6395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6397}, %rd9083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6398,%dummy}, %rd9083;
	}
	shf.l.wrap.b32 	%r6399, %r6398, %r6397, 1;
	shf.l.wrap.b32 	%r6400, %r6397, %r6398, 1;
	mov.b64 	%rd9116, {%r6400, %r6399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6401}, %rd9089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd9089;
	}
	shf.l.wrap.b32 	%r6403, %r6402, %r6401, 6;
	shf.l.wrap.b32 	%r6404, %r6401, %r6402, 6;
	mov.b64 	%rd9117, {%r6404, %r6403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6405}, %rd9095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6406,%dummy}, %rd9095;
	}
	shf.l.wrap.b32 	%r6407, %r6406, %r6405, 25;
	shf.l.wrap.b32 	%r6408, %r6405, %r6406, 25;
	mov.b64 	%rd9118, {%r6408, %r6407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6409}, %rd9101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6410,%dummy}, %rd9101;
	}
	shf.l.wrap.b32 	%r6411, %r6410, %r6409, 8;
	shf.l.wrap.b32 	%r6412, %r6409, %r6410, 8;
	mov.b64 	%rd9119, {%r6412, %r6411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6413}, %rd9102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6414,%dummy}, %rd9102;
	}
	shf.l.wrap.b32 	%r6415, %r6414, %r6413, 18;
	shf.l.wrap.b32 	%r6416, %r6413, %r6414, 18;
	mov.b64 	%rd9120, {%r6416, %r6415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6417}, %rd9086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6418,%dummy}, %rd9086;
	}
	shf.l.wrap.b32 	%r6419, %r6418, %r6417, 27;
	shf.l.wrap.b32 	%r6420, %r6417, %r6418, 27;
	mov.b64 	%rd9121, {%r6420, %r6419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6421,%dummy}, %rd9087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6422}, %rd9087;
	}
	shf.r.wrap.b32 	%r6423, %r6422, %r6421, 28;
	shf.r.wrap.b32 	%r6424, %r6421, %r6422, 28;
	mov.b64 	%rd9122, {%r6424, %r6423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6425}, %rd9093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd9093;
	}
	shf.l.wrap.b32 	%r6427, %r6426, %r6425, 10;
	shf.l.wrap.b32 	%r6428, %r6425, %r6426, 10;
	mov.b64 	%rd9123, {%r6428, %r6427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6429}, %rd9099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6430,%dummy}, %rd9099;
	}
	shf.l.wrap.b32 	%r6431, %r6430, %r6429, 15;
	shf.l.wrap.b32 	%r6432, %r6429, %r6430, 15;
	mov.b64 	%rd9124, {%r6432, %r6431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6433,%dummy}, %rd9105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6434}, %rd9105;
	}
	shf.r.wrap.b32 	%r6435, %r6434, %r6433, 8;
	shf.r.wrap.b32 	%r6436, %r6433, %r6434, 8;
	mov.b64 	%rd9125, {%r6436, %r6435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6437,%dummy}, %rd9084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6438}, %rd9084;
	}
	shf.r.wrap.b32 	%r6439, %r6438, %r6437, 2;
	shf.r.wrap.b32 	%r6440, %r6437, %r6438, 2;
	mov.b64 	%rd9126, {%r6440, %r6439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6441,%dummy}, %rd9090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6442}, %rd9090;
	}
	shf.r.wrap.b32 	%r6443, %r6442, %r6441, 9;
	shf.r.wrap.b32 	%r6444, %r6441, %r6442, 9;
	mov.b64 	%rd9127, {%r6444, %r6443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6445,%dummy}, %rd9096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6446}, %rd9096;
	}
	shf.r.wrap.b32 	%r6447, %r6446, %r6445, 25;
	shf.r.wrap.b32 	%r6448, %r6445, %r6446, 25;
	mov.b64 	%rd9128, {%r6448, %r6447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6449,%dummy}, %rd9097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6450}, %rd9097;
	}
	shf.r.wrap.b32 	%r6451, %r6450, %r6449, 23;
	shf.r.wrap.b32 	%r6452, %r6449, %r6450, 23;
	mov.b64 	%rd9129, {%r6452, %r6451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6453}, %rd9103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6454,%dummy}, %rd9103;
	}
	shf.l.wrap.b32 	%r6455, %r6454, %r6453, 2;
	shf.l.wrap.b32 	%r6456, %r6453, %r6454, 2;
	mov.b64 	%rd9130, {%r6456, %r6455};
	not.b64 	%rd9131, %rd9107;
	and.b64  	%rd9132, %rd9108, %rd9131;
	xor.b64  	%rd9133, %rd9132, %rd9082;
	not.b64 	%rd9134, %rd9108;
	and.b64  	%rd9135, %rd9109, %rd9134;
	xor.b64  	%rd9136, %rd9135, %rd9107;
	not.b64 	%rd9137, %rd9109;
	and.b64  	%rd9138, %rd9110, %rd9137;
	xor.b64  	%rd9139, %rd9138, %rd9108;
	not.b64 	%rd9140, %rd9110;
	and.b64  	%rd9141, %rd9082, %rd9140;
	xor.b64  	%rd9142, %rd9141, %rd9109;
	not.b64 	%rd9143, %rd9082;
	and.b64  	%rd9144, %rd9107, %rd9143;
	xor.b64  	%rd9145, %rd9144, %rd9110;
	not.b64 	%rd9146, %rd9112;
	and.b64  	%rd9147, %rd9113, %rd9146;
	xor.b64  	%rd9148, %rd9147, %rd9111;
	not.b64 	%rd9149, %rd9113;
	and.b64  	%rd9150, %rd9114, %rd9149;
	xor.b64  	%rd9151, %rd9150, %rd9112;
	not.b64 	%rd9152, %rd9114;
	and.b64  	%rd9153, %rd9115, %rd9152;
	xor.b64  	%rd9154, %rd9153, %rd9113;
	not.b64 	%rd9155, %rd9115;
	and.b64  	%rd9156, %rd9111, %rd9155;
	xor.b64  	%rd9157, %rd9156, %rd9114;
	not.b64 	%rd9158, %rd9111;
	and.b64  	%rd9159, %rd9112, %rd9158;
	xor.b64  	%rd9160, %rd9159, %rd9115;
	not.b64 	%rd9161, %rd9117;
	and.b64  	%rd9162, %rd9118, %rd9161;
	xor.b64  	%rd9163, %rd9162, %rd9116;
	not.b64 	%rd9164, %rd9118;
	and.b64  	%rd9165, %rd9119, %rd9164;
	xor.b64  	%rd9166, %rd9165, %rd9117;
	not.b64 	%rd9167, %rd9119;
	and.b64  	%rd9168, %rd9120, %rd9167;
	xor.b64  	%rd9169, %rd9168, %rd9118;
	not.b64 	%rd9170, %rd9120;
	and.b64  	%rd9171, %rd9116, %rd9170;
	xor.b64  	%rd9172, %rd9171, %rd9119;
	not.b64 	%rd9173, %rd9116;
	and.b64  	%rd9174, %rd9117, %rd9173;
	xor.b64  	%rd9175, %rd9174, %rd9120;
	not.b64 	%rd9176, %rd9122;
	and.b64  	%rd9177, %rd9123, %rd9176;
	xor.b64  	%rd9178, %rd9177, %rd9121;
	not.b64 	%rd9179, %rd9123;
	and.b64  	%rd9180, %rd9124, %rd9179;
	xor.b64  	%rd9181, %rd9180, %rd9122;
	not.b64 	%rd9182, %rd9124;
	and.b64  	%rd9183, %rd9125, %rd9182;
	xor.b64  	%rd9184, %rd9183, %rd9123;
	not.b64 	%rd9185, %rd9125;
	and.b64  	%rd9186, %rd9121, %rd9185;
	xor.b64  	%rd9187, %rd9186, %rd9124;
	not.b64 	%rd9188, %rd9121;
	and.b64  	%rd9189, %rd9122, %rd9188;
	xor.b64  	%rd9190, %rd9189, %rd9125;
	not.b64 	%rd9191, %rd9127;
	and.b64  	%rd9192, %rd9128, %rd9191;
	xor.b64  	%rd9193, %rd9192, %rd9126;
	not.b64 	%rd9194, %rd9128;
	and.b64  	%rd9195, %rd9129, %rd9194;
	xor.b64  	%rd9196, %rd9195, %rd9127;
	not.b64 	%rd9197, %rd9129;
	and.b64  	%rd9198, %rd9130, %rd9197;
	xor.b64  	%rd9199, %rd9198, %rd9128;
	not.b64 	%rd9200, %rd9130;
	and.b64  	%rd9201, %rd9126, %rd9200;
	xor.b64  	%rd9202, %rd9201, %rd9129;
	not.b64 	%rd9203, %rd9126;
	and.b64  	%rd9204, %rd9127, %rd9203;
	xor.b64  	%rd9205, %rd9204, %rd9130;
	xor.b64  	%rd9207, %rd9133, %rd22;
	xor.b64  	%rd9208, %rd9148, %rd9207;
	xor.b64  	%rd9209, %rd9208, %rd9163;
	xor.b64  	%rd9210, %rd9209, %rd9178;
	xor.b64  	%rd9211, %rd9210, %rd9193;
	xor.b64  	%rd9212, %rd9151, %rd9136;
	xor.b64  	%rd9213, %rd9212, %rd9166;
	xor.b64  	%rd9214, %rd9213, %rd9181;
	xor.b64  	%rd9215, %rd9214, %rd9196;
	xor.b64  	%rd9216, %rd9154, %rd9139;
	xor.b64  	%rd9217, %rd9216, %rd9169;
	xor.b64  	%rd9218, %rd9217, %rd9184;
	xor.b64  	%rd9219, %rd9218, %rd9199;
	xor.b64  	%rd9220, %rd9157, %rd9142;
	xor.b64  	%rd9221, %rd9220, %rd9172;
	xor.b64  	%rd9222, %rd9221, %rd9187;
	xor.b64  	%rd9223, %rd9222, %rd9202;
	xor.b64  	%rd9224, %rd9160, %rd9145;
	xor.b64  	%rd9225, %rd9224, %rd9175;
	xor.b64  	%rd9226, %rd9225, %rd9190;
	xor.b64  	%rd9227, %rd9226, %rd9205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6457}, %rd9215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd9215;
	}
	shf.l.wrap.b32 	%r6459, %r6458, %r6457, 1;
	shf.l.wrap.b32 	%r6460, %r6457, %r6458, 1;
	mov.b64 	%rd9228, {%r6460, %r6459};
	xor.b64  	%rd9229, %rd9227, %rd9228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6461}, %rd9219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6462,%dummy}, %rd9219;
	}
	shf.l.wrap.b32 	%r6463, %r6462, %r6461, 1;
	shf.l.wrap.b32 	%r6464, %r6461, %r6462, 1;
	mov.b64 	%rd9230, {%r6464, %r6463};
	xor.b64  	%rd9231, %rd9230, %rd9211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6465}, %rd9223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd9223;
	}
	shf.l.wrap.b32 	%r6467, %r6466, %r6465, 1;
	shf.l.wrap.b32 	%r6468, %r6465, %r6466, 1;
	mov.b64 	%rd9232, {%r6468, %r6467};
	xor.b64  	%rd9233, %rd9232, %rd9215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6469}, %rd9227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6470,%dummy}, %rd9227;
	}
	shf.l.wrap.b32 	%r6471, %r6470, %r6469, 1;
	shf.l.wrap.b32 	%r6472, %r6469, %r6470, 1;
	mov.b64 	%rd9234, {%r6472, %r6471};
	xor.b64  	%rd9235, %rd9234, %rd9219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6473}, %rd9211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd9211;
	}
	shf.l.wrap.b32 	%r6475, %r6474, %r6473, 1;
	shf.l.wrap.b32 	%r6476, %r6473, %r6474, 1;
	mov.b64 	%rd9236, {%r6476, %r6475};
	xor.b64  	%rd9237, %rd9223, %rd9236;
	xor.b64  	%rd9238, %rd9229, %rd9207;
	xor.b64  	%rd9239, %rd9231, %rd9136;
	xor.b64  	%rd9240, %rd9233, %rd9139;
	xor.b64  	%rd9241, %rd9235, %rd9142;
	xor.b64  	%rd9242, %rd9237, %rd9145;
	xor.b64  	%rd9243, %rd9229, %rd9148;
	xor.b64  	%rd9244, %rd9231, %rd9151;
	xor.b64  	%rd9245, %rd9233, %rd9154;
	xor.b64  	%rd9246, %rd9235, %rd9157;
	xor.b64  	%rd9247, %rd9237, %rd9160;
	xor.b64  	%rd9248, %rd9229, %rd9163;
	xor.b64  	%rd9249, %rd9231, %rd9166;
	xor.b64  	%rd9250, %rd9233, %rd9169;
	xor.b64  	%rd9251, %rd9235, %rd9172;
	xor.b64  	%rd9252, %rd9237, %rd9175;
	xor.b64  	%rd9253, %rd9229, %rd9178;
	xor.b64  	%rd9254, %rd9231, %rd9181;
	xor.b64  	%rd9255, %rd9233, %rd9184;
	xor.b64  	%rd9256, %rd9235, %rd9187;
	xor.b64  	%rd9257, %rd9237, %rd9190;
	xor.b64  	%rd9258, %rd9229, %rd9193;
	xor.b64  	%rd9259, %rd9231, %rd9196;
	xor.b64  	%rd9260, %rd9233, %rd9199;
	xor.b64  	%rd9261, %rd9235, %rd9202;
	xor.b64  	%rd9262, %rd9237, %rd9205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6477,%dummy}, %rd9244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6478}, %rd9244;
	}
	shf.r.wrap.b32 	%r6479, %r6478, %r6477, 20;
	shf.r.wrap.b32 	%r6480, %r6477, %r6478, 20;
	mov.b64 	%rd9263, {%r6480, %r6479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6481,%dummy}, %rd9250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6482}, %rd9250;
	}
	shf.r.wrap.b32 	%r6483, %r6482, %r6481, 21;
	shf.r.wrap.b32 	%r6484, %r6481, %r6482, 21;
	mov.b64 	%rd9264, {%r6484, %r6483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6485}, %rd9256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6486,%dummy}, %rd9256;
	}
	shf.l.wrap.b32 	%r6487, %r6486, %r6485, 21;
	shf.l.wrap.b32 	%r6488, %r6485, %r6486, 21;
	mov.b64 	%rd9265, {%r6488, %r6487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6489}, %rd9262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd9262;
	}
	shf.l.wrap.b32 	%r6491, %r6490, %r6489, 14;
	shf.l.wrap.b32 	%r6492, %r6489, %r6490, 14;
	mov.b64 	%rd9266, {%r6492, %r6491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6493}, %rd9241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6494,%dummy}, %rd9241;
	}
	shf.l.wrap.b32 	%r6495, %r6494, %r6493, 28;
	shf.l.wrap.b32 	%r6496, %r6493, %r6494, 28;
	mov.b64 	%rd9267, {%r6496, %r6495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6497}, %rd9247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd9247;
	}
	shf.l.wrap.b32 	%r6499, %r6498, %r6497, 20;
	shf.l.wrap.b32 	%r6500, %r6497, %r6498, 20;
	mov.b64 	%rd9268, {%r6500, %r6499};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6501}, %rd9248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6502,%dummy}, %rd9248;
	}
	shf.l.wrap.b32 	%r6503, %r6502, %r6501, 3;
	shf.l.wrap.b32 	%r6504, %r6501, %r6502, 3;
	mov.b64 	%rd9269, {%r6504, %r6503};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6505,%dummy}, %rd9254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6506}, %rd9254;
	}
	shf.r.wrap.b32 	%r6507, %r6506, %r6505, 19;
	shf.r.wrap.b32 	%r6508, %r6505, %r6506, 19;
	mov.b64 	%rd9270, {%r6508, %r6507};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6509,%dummy}, %rd9260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6510}, %rd9260;
	}
	shf.r.wrap.b32 	%r6511, %r6510, %r6509, 3;
	shf.r.wrap.b32 	%r6512, %r6509, %r6510, 3;
	mov.b64 	%rd9271, {%r6512, %r6511};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6513}, %rd9239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd9239;
	}
	shf.l.wrap.b32 	%r6515, %r6514, %r6513, 1;
	shf.l.wrap.b32 	%r6516, %r6513, %r6514, 1;
	mov.b64 	%rd9272, {%r6516, %r6515};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6517}, %rd9245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6518,%dummy}, %rd9245;
	}
	shf.l.wrap.b32 	%r6519, %r6518, %r6517, 6;
	shf.l.wrap.b32 	%r6520, %r6517, %r6518, 6;
	mov.b64 	%rd9273, {%r6520, %r6519};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6521}, %rd9251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd9251;
	}
	shf.l.wrap.b32 	%r6523, %r6522, %r6521, 25;
	shf.l.wrap.b32 	%r6524, %r6521, %r6522, 25;
	mov.b64 	%rd9274, {%r6524, %r6523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6525}, %rd9257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6526,%dummy}, %rd9257;
	}
	shf.l.wrap.b32 	%r6527, %r6526, %r6525, 8;
	shf.l.wrap.b32 	%r6528, %r6525, %r6526, 8;
	mov.b64 	%rd9275, {%r6528, %r6527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6529}, %rd9258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd9258;
	}
	shf.l.wrap.b32 	%r6531, %r6530, %r6529, 18;
	shf.l.wrap.b32 	%r6532, %r6529, %r6530, 18;
	mov.b64 	%rd9276, {%r6532, %r6531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6533}, %rd9242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6534,%dummy}, %rd9242;
	}
	shf.l.wrap.b32 	%r6535, %r6534, %r6533, 27;
	shf.l.wrap.b32 	%r6536, %r6533, %r6534, 27;
	mov.b64 	%rd9277, {%r6536, %r6535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6537,%dummy}, %rd9243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6538}, %rd9243;
	}
	shf.r.wrap.b32 	%r6539, %r6538, %r6537, 28;
	shf.r.wrap.b32 	%r6540, %r6537, %r6538, 28;
	mov.b64 	%rd9278, {%r6540, %r6539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6541}, %rd9249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6542,%dummy}, %rd9249;
	}
	shf.l.wrap.b32 	%r6543, %r6542, %r6541, 10;
	shf.l.wrap.b32 	%r6544, %r6541, %r6542, 10;
	mov.b64 	%rd9279, {%r6544, %r6543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6545}, %rd9255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd9255;
	}
	shf.l.wrap.b32 	%r6547, %r6546, %r6545, 15;
	shf.l.wrap.b32 	%r6548, %r6545, %r6546, 15;
	mov.b64 	%rd9280, {%r6548, %r6547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6549,%dummy}, %rd9261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6550}, %rd9261;
	}
	shf.r.wrap.b32 	%r6551, %r6550, %r6549, 8;
	shf.r.wrap.b32 	%r6552, %r6549, %r6550, 8;
	mov.b64 	%rd9281, {%r6552, %r6551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6553,%dummy}, %rd9240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6554}, %rd9240;
	}
	shf.r.wrap.b32 	%r6555, %r6554, %r6553, 2;
	shf.r.wrap.b32 	%r6556, %r6553, %r6554, 2;
	mov.b64 	%rd9282, {%r6556, %r6555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6557,%dummy}, %rd9246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6558}, %rd9246;
	}
	shf.r.wrap.b32 	%r6559, %r6558, %r6557, 9;
	shf.r.wrap.b32 	%r6560, %r6557, %r6558, 9;
	mov.b64 	%rd9283, {%r6560, %r6559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6561,%dummy}, %rd9252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6562}, %rd9252;
	}
	shf.r.wrap.b32 	%r6563, %r6562, %r6561, 25;
	shf.r.wrap.b32 	%r6564, %r6561, %r6562, 25;
	mov.b64 	%rd9284, {%r6564, %r6563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6565,%dummy}, %rd9253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6566}, %rd9253;
	}
	shf.r.wrap.b32 	%r6567, %r6566, %r6565, 23;
	shf.r.wrap.b32 	%r6568, %r6565, %r6566, 23;
	mov.b64 	%rd9285, {%r6568, %r6567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6569}, %rd9259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd9259;
	}
	shf.l.wrap.b32 	%r6571, %r6570, %r6569, 2;
	shf.l.wrap.b32 	%r6572, %r6569, %r6570, 2;
	mov.b64 	%rd9286, {%r6572, %r6571};
	not.b64 	%rd9287, %rd9263;
	and.b64  	%rd9288, %rd9264, %rd9287;
	xor.b64  	%rd9289, %rd9288, %rd9238;
	not.b64 	%rd9290, %rd9264;
	and.b64  	%rd9291, %rd9265, %rd9290;
	xor.b64  	%rd9292, %rd9291, %rd9263;
	not.b64 	%rd9293, %rd9265;
	and.b64  	%rd9294, %rd9266, %rd9293;
	xor.b64  	%rd9295, %rd9294, %rd9264;
	not.b64 	%rd9296, %rd9266;
	and.b64  	%rd9297, %rd9238, %rd9296;
	xor.b64  	%rd9298, %rd9297, %rd9265;
	not.b64 	%rd9299, %rd9238;
	and.b64  	%rd9300, %rd9263, %rd9299;
	xor.b64  	%rd9301, %rd9300, %rd9266;
	not.b64 	%rd9302, %rd9268;
	and.b64  	%rd9303, %rd9269, %rd9302;
	xor.b64  	%rd9304, %rd9303, %rd9267;
	not.b64 	%rd9305, %rd9269;
	and.b64  	%rd9306, %rd9270, %rd9305;
	xor.b64  	%rd9307, %rd9306, %rd9268;
	not.b64 	%rd9308, %rd9270;
	and.b64  	%rd9309, %rd9271, %rd9308;
	xor.b64  	%rd9310, %rd9309, %rd9269;
	not.b64 	%rd9311, %rd9271;
	and.b64  	%rd9312, %rd9267, %rd9311;
	xor.b64  	%rd9313, %rd9312, %rd9270;
	not.b64 	%rd9314, %rd9267;
	and.b64  	%rd9315, %rd9268, %rd9314;
	xor.b64  	%rd9316, %rd9315, %rd9271;
	not.b64 	%rd9317, %rd9273;
	and.b64  	%rd9318, %rd9274, %rd9317;
	xor.b64  	%rd9319, %rd9318, %rd9272;
	not.b64 	%rd9320, %rd9274;
	and.b64  	%rd9321, %rd9275, %rd9320;
	xor.b64  	%rd9322, %rd9321, %rd9273;
	not.b64 	%rd9323, %rd9275;
	and.b64  	%rd9324, %rd9276, %rd9323;
	xor.b64  	%rd9325, %rd9324, %rd9274;
	not.b64 	%rd9326, %rd9276;
	and.b64  	%rd9327, %rd9272, %rd9326;
	xor.b64  	%rd9328, %rd9327, %rd9275;
	not.b64 	%rd9329, %rd9272;
	and.b64  	%rd9330, %rd9273, %rd9329;
	xor.b64  	%rd9331, %rd9330, %rd9276;
	not.b64 	%rd9332, %rd9278;
	and.b64  	%rd9333, %rd9279, %rd9332;
	xor.b64  	%rd9334, %rd9333, %rd9277;
	not.b64 	%rd9335, %rd9279;
	and.b64  	%rd9336, %rd9280, %rd9335;
	xor.b64  	%rd9337, %rd9336, %rd9278;
	not.b64 	%rd9338, %rd9280;
	and.b64  	%rd9339, %rd9281, %rd9338;
	xor.b64  	%rd9340, %rd9339, %rd9279;
	not.b64 	%rd9341, %rd9281;
	and.b64  	%rd9342, %rd9277, %rd9341;
	xor.b64  	%rd9343, %rd9342, %rd9280;
	not.b64 	%rd9344, %rd9277;
	and.b64  	%rd9345, %rd9278, %rd9344;
	xor.b64  	%rd9346, %rd9345, %rd9281;
	not.b64 	%rd9347, %rd9283;
	and.b64  	%rd9348, %rd9284, %rd9347;
	xor.b64  	%rd9349, %rd9348, %rd9282;
	not.b64 	%rd9350, %rd9284;
	and.b64  	%rd9351, %rd9285, %rd9350;
	xor.b64  	%rd9352, %rd9351, %rd9283;
	not.b64 	%rd9353, %rd9285;
	and.b64  	%rd9354, %rd9286, %rd9353;
	xor.b64  	%rd9355, %rd9354, %rd9284;
	not.b64 	%rd9356, %rd9286;
	and.b64  	%rd9357, %rd9282, %rd9356;
	xor.b64  	%rd9358, %rd9357, %rd9285;
	not.b64 	%rd9359, %rd9282;
	and.b64  	%rd9360, %rd9283, %rd9359;
	xor.b64  	%rd9361, %rd9360, %rd9286;
	xor.b64  	%rd9363, %rd9289, %rd23;
	xor.b64  	%rd9364, %rd9304, %rd9363;
	xor.b64  	%rd9365, %rd9364, %rd9319;
	xor.b64  	%rd9366, %rd9365, %rd9334;
	xor.b64  	%rd9367, %rd9366, %rd9349;
	xor.b64  	%rd9368, %rd9307, %rd9292;
	xor.b64  	%rd9369, %rd9368, %rd9322;
	xor.b64  	%rd9370, %rd9369, %rd9337;
	xor.b64  	%rd9371, %rd9370, %rd9352;
	xor.b64  	%rd9372, %rd9310, %rd9295;
	xor.b64  	%rd9373, %rd9372, %rd9325;
	xor.b64  	%rd9374, %rd9373, %rd9340;
	xor.b64  	%rd9375, %rd9374, %rd9355;
	xor.b64  	%rd9376, %rd9313, %rd9298;
	xor.b64  	%rd9377, %rd9376, %rd9328;
	xor.b64  	%rd9378, %rd9377, %rd9343;
	xor.b64  	%rd9379, %rd9378, %rd9358;
	xor.b64  	%rd9380, %rd9316, %rd9301;
	xor.b64  	%rd9381, %rd9380, %rd9331;
	xor.b64  	%rd9382, %rd9381, %rd9346;
	xor.b64  	%rd9383, %rd9382, %rd9361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6573}, %rd9371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6574,%dummy}, %rd9371;
	}
	shf.l.wrap.b32 	%r6575, %r6574, %r6573, 1;
	shf.l.wrap.b32 	%r6576, %r6573, %r6574, 1;
	mov.b64 	%rd9384, {%r6576, %r6575};
	xor.b64  	%rd9385, %rd9383, %rd9384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6577}, %rd9375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd9375;
	}
	shf.l.wrap.b32 	%r6579, %r6578, %r6577, 1;
	shf.l.wrap.b32 	%r6580, %r6577, %r6578, 1;
	mov.b64 	%rd9386, {%r6580, %r6579};
	xor.b64  	%rd9387, %rd9386, %rd9367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6581}, %rd9379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6582,%dummy}, %rd9379;
	}
	shf.l.wrap.b32 	%r6583, %r6582, %r6581, 1;
	shf.l.wrap.b32 	%r6584, %r6581, %r6582, 1;
	mov.b64 	%rd9388, {%r6584, %r6583};
	xor.b64  	%rd9389, %rd9388, %rd9371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6585}, %rd9383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd9383;
	}
	shf.l.wrap.b32 	%r6587, %r6586, %r6585, 1;
	shf.l.wrap.b32 	%r6588, %r6585, %r6586, 1;
	mov.b64 	%rd9390, {%r6588, %r6587};
	xor.b64  	%rd9391, %rd9390, %rd9375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6589}, %rd9367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6590,%dummy}, %rd9367;
	}
	shf.l.wrap.b32 	%r6591, %r6590, %r6589, 1;
	shf.l.wrap.b32 	%r6592, %r6589, %r6590, 1;
	mov.b64 	%rd9392, {%r6592, %r6591};
	xor.b64  	%rd9393, %rd9379, %rd9392;
	xor.b64  	%rd9394, %rd9385, %rd9363;
	xor.b64  	%rd9395, %rd9387, %rd9292;
	xor.b64  	%rd9396, %rd9389, %rd9295;
	xor.b64  	%rd9397, %rd9391, %rd9298;
	xor.b64  	%rd9398, %rd9393, %rd9301;
	xor.b64  	%rd9399, %rd9385, %rd9304;
	xor.b64  	%rd9400, %rd9387, %rd9307;
	xor.b64  	%rd9401, %rd9389, %rd9310;
	xor.b64  	%rd9402, %rd9391, %rd9313;
	xor.b64  	%rd9403, %rd9393, %rd9316;
	xor.b64  	%rd9404, %rd9385, %rd9319;
	xor.b64  	%rd9405, %rd9387, %rd9322;
	xor.b64  	%rd9406, %rd9389, %rd9325;
	xor.b64  	%rd9407, %rd9391, %rd9328;
	xor.b64  	%rd9408, %rd9393, %rd9331;
	xor.b64  	%rd9409, %rd9385, %rd9334;
	xor.b64  	%rd9410, %rd9387, %rd9337;
	xor.b64  	%rd9411, %rd9389, %rd9340;
	xor.b64  	%rd9412, %rd9391, %rd9343;
	xor.b64  	%rd9413, %rd9393, %rd9346;
	xor.b64  	%rd9414, %rd9385, %rd9349;
	xor.b64  	%rd9415, %rd9387, %rd9352;
	xor.b64  	%rd9416, %rd9389, %rd9355;
	xor.b64  	%rd9417, %rd9391, %rd9358;
	xor.b64  	%rd9418, %rd9393, %rd9361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6593,%dummy}, %rd9400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6594}, %rd9400;
	}
	shf.r.wrap.b32 	%r6595, %r6594, %r6593, 20;
	shf.r.wrap.b32 	%r6596, %r6593, %r6594, 20;
	mov.b64 	%rd9419, {%r6596, %r6595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6597,%dummy}, %rd9406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6598}, %rd9406;
	}
	shf.r.wrap.b32 	%r6599, %r6598, %r6597, 21;
	shf.r.wrap.b32 	%r6600, %r6597, %r6598, 21;
	mov.b64 	%rd9420, {%r6600, %r6599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6601}, %rd9412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd9412;
	}
	shf.l.wrap.b32 	%r6603, %r6602, %r6601, 21;
	shf.l.wrap.b32 	%r6604, %r6601, %r6602, 21;
	mov.b64 	%rd9421, {%r6604, %r6603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6605}, %rd9418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6606,%dummy}, %rd9418;
	}
	shf.l.wrap.b32 	%r6607, %r6606, %r6605, 14;
	shf.l.wrap.b32 	%r6608, %r6605, %r6606, 14;
	mov.b64 	%rd9422, {%r6608, %r6607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6609}, %rd9397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6610,%dummy}, %rd9397;
	}
	shf.l.wrap.b32 	%r6611, %r6610, %r6609, 28;
	shf.l.wrap.b32 	%r6612, %r6609, %r6610, 28;
	mov.b64 	%rd9423, {%r6612, %r6611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd9403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6614,%dummy}, %rd9403;
	}
	shf.l.wrap.b32 	%r6615, %r6614, %r6613, 20;
	shf.l.wrap.b32 	%r6616, %r6613, %r6614, 20;
	mov.b64 	%rd9424, {%r6616, %r6615};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6617}, %rd9404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6618,%dummy}, %rd9404;
	}
	shf.l.wrap.b32 	%r6619, %r6618, %r6617, 3;
	shf.l.wrap.b32 	%r6620, %r6617, %r6618, 3;
	mov.b64 	%rd9425, {%r6620, %r6619};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6621,%dummy}, %rd9410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6622}, %rd9410;
	}
	shf.r.wrap.b32 	%r6623, %r6622, %r6621, 19;
	shf.r.wrap.b32 	%r6624, %r6621, %r6622, 19;
	mov.b64 	%rd9426, {%r6624, %r6623};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6625,%dummy}, %rd9416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6626}, %rd9416;
	}
	shf.r.wrap.b32 	%r6627, %r6626, %r6625, 3;
	shf.r.wrap.b32 	%r6628, %r6625, %r6626, 3;
	mov.b64 	%rd9427, {%r6628, %r6627};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6629}, %rd9395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6630,%dummy}, %rd9395;
	}
	shf.l.wrap.b32 	%r6631, %r6630, %r6629, 1;
	shf.l.wrap.b32 	%r6632, %r6629, %r6630, 1;
	mov.b64 	%rd9428, {%r6632, %r6631};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd9401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6634,%dummy}, %rd9401;
	}
	shf.l.wrap.b32 	%r6635, %r6634, %r6633, 6;
	shf.l.wrap.b32 	%r6636, %r6633, %r6634, 6;
	mov.b64 	%rd9429, {%r6636, %r6635};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6637}, %rd9407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6638,%dummy}, %rd9407;
	}
	shf.l.wrap.b32 	%r6639, %r6638, %r6637, 25;
	shf.l.wrap.b32 	%r6640, %r6637, %r6638, 25;
	mov.b64 	%rd9430, {%r6640, %r6639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6641}, %rd9413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd9413;
	}
	shf.l.wrap.b32 	%r6643, %r6642, %r6641, 8;
	shf.l.wrap.b32 	%r6644, %r6641, %r6642, 8;
	mov.b64 	%rd9431, {%r6644, %r6643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6645}, %rd9414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6646,%dummy}, %rd9414;
	}
	shf.l.wrap.b32 	%r6647, %r6646, %r6645, 18;
	shf.l.wrap.b32 	%r6648, %r6645, %r6646, 18;
	mov.b64 	%rd9432, {%r6648, %r6647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6649}, %rd9398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6650,%dummy}, %rd9398;
	}
	shf.l.wrap.b32 	%r6651, %r6650, %r6649, 27;
	shf.l.wrap.b32 	%r6652, %r6649, %r6650, 27;
	mov.b64 	%rd9433, {%r6652, %r6651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6653,%dummy}, %rd9399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6654}, %rd9399;
	}
	shf.r.wrap.b32 	%r6655, %r6654, %r6653, 28;
	shf.r.wrap.b32 	%r6656, %r6653, %r6654, 28;
	mov.b64 	%rd9434, {%r6656, %r6655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6657}, %rd9405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6658,%dummy}, %rd9405;
	}
	shf.l.wrap.b32 	%r6659, %r6658, %r6657, 10;
	shf.l.wrap.b32 	%r6660, %r6657, %r6658, 10;
	mov.b64 	%rd9435, {%r6660, %r6659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6661}, %rd9411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6662,%dummy}, %rd9411;
	}
	shf.l.wrap.b32 	%r6663, %r6662, %r6661, 15;
	shf.l.wrap.b32 	%r6664, %r6661, %r6662, 15;
	mov.b64 	%rd9436, {%r6664, %r6663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6665,%dummy}, %rd9417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6666}, %rd9417;
	}
	shf.r.wrap.b32 	%r6667, %r6666, %r6665, 8;
	shf.r.wrap.b32 	%r6668, %r6665, %r6666, 8;
	mov.b64 	%rd9437, {%r6668, %r6667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6669,%dummy}, %rd9396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6670}, %rd9396;
	}
	shf.r.wrap.b32 	%r6671, %r6670, %r6669, 2;
	shf.r.wrap.b32 	%r6672, %r6669, %r6670, 2;
	mov.b64 	%rd9438, {%r6672, %r6671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6673,%dummy}, %rd9402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6674}, %rd9402;
	}
	shf.r.wrap.b32 	%r6675, %r6674, %r6673, 9;
	shf.r.wrap.b32 	%r6676, %r6673, %r6674, 9;
	mov.b64 	%rd9439, {%r6676, %r6675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6677,%dummy}, %rd9408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6678}, %rd9408;
	}
	shf.r.wrap.b32 	%r6679, %r6678, %r6677, 25;
	shf.r.wrap.b32 	%r6680, %r6677, %r6678, 25;
	mov.b64 	%rd9440, {%r6680, %r6679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6681,%dummy}, %rd9409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6682}, %rd9409;
	}
	shf.r.wrap.b32 	%r6683, %r6682, %r6681, 23;
	shf.r.wrap.b32 	%r6684, %r6681, %r6682, 23;
	mov.b64 	%rd9441, {%r6684, %r6683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6685}, %rd9415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6686,%dummy}, %rd9415;
	}
	shf.l.wrap.b32 	%r6687, %r6686, %r6685, 2;
	shf.l.wrap.b32 	%r6688, %r6685, %r6686, 2;
	mov.b64 	%rd9442, {%r6688, %r6687};
	not.b64 	%rd9443, %rd9419;
	and.b64  	%rd9444, %rd9420, %rd9443;
	xor.b64  	%rd9445, %rd9444, %rd9394;
	not.b64 	%rd9446, %rd9420;
	and.b64  	%rd9447, %rd9421, %rd9446;
	xor.b64  	%rd9448, %rd9447, %rd9419;
	not.b64 	%rd9449, %rd9421;
	and.b64  	%rd9450, %rd9422, %rd9449;
	xor.b64  	%rd9451, %rd9450, %rd9420;
	not.b64 	%rd9452, %rd9422;
	and.b64  	%rd9453, %rd9394, %rd9452;
	xor.b64  	%rd9454, %rd9453, %rd9421;
	not.b64 	%rd9455, %rd9394;
	and.b64  	%rd9456, %rd9419, %rd9455;
	xor.b64  	%rd9457, %rd9456, %rd9422;
	not.b64 	%rd9458, %rd9424;
	and.b64  	%rd9459, %rd9425, %rd9458;
	xor.b64  	%rd9460, %rd9459, %rd9423;
	not.b64 	%rd9461, %rd9425;
	and.b64  	%rd9462, %rd9426, %rd9461;
	xor.b64  	%rd9463, %rd9462, %rd9424;
	not.b64 	%rd9464, %rd9426;
	and.b64  	%rd9465, %rd9427, %rd9464;
	xor.b64  	%rd9466, %rd9465, %rd9425;
	not.b64 	%rd9467, %rd9427;
	and.b64  	%rd9468, %rd9423, %rd9467;
	xor.b64  	%rd9469, %rd9468, %rd9426;
	not.b64 	%rd9470, %rd9423;
	and.b64  	%rd9471, %rd9424, %rd9470;
	xor.b64  	%rd9472, %rd9471, %rd9427;
	not.b64 	%rd9473, %rd9429;
	and.b64  	%rd9474, %rd9430, %rd9473;
	xor.b64  	%rd9475, %rd9474, %rd9428;
	not.b64 	%rd9476, %rd9430;
	and.b64  	%rd9477, %rd9431, %rd9476;
	xor.b64  	%rd9478, %rd9477, %rd9429;
	not.b64 	%rd9479, %rd9431;
	and.b64  	%rd9480, %rd9432, %rd9479;
	xor.b64  	%rd9481, %rd9480, %rd9430;
	not.b64 	%rd9482, %rd9432;
	and.b64  	%rd9483, %rd9428, %rd9482;
	xor.b64  	%rd9484, %rd9483, %rd9431;
	not.b64 	%rd9485, %rd9428;
	and.b64  	%rd9486, %rd9429, %rd9485;
	xor.b64  	%rd9487, %rd9486, %rd9432;
	not.b64 	%rd9488, %rd9434;
	and.b64  	%rd9489, %rd9435, %rd9488;
	xor.b64  	%rd9490, %rd9489, %rd9433;
	not.b64 	%rd9491, %rd9435;
	and.b64  	%rd9492, %rd9436, %rd9491;
	xor.b64  	%rd9493, %rd9492, %rd9434;
	not.b64 	%rd9494, %rd9436;
	and.b64  	%rd9495, %rd9437, %rd9494;
	xor.b64  	%rd9496, %rd9495, %rd9435;
	not.b64 	%rd9497, %rd9437;
	and.b64  	%rd9498, %rd9433, %rd9497;
	xor.b64  	%rd9499, %rd9498, %rd9436;
	not.b64 	%rd9500, %rd9433;
	and.b64  	%rd9501, %rd9434, %rd9500;
	xor.b64  	%rd9502, %rd9501, %rd9437;
	not.b64 	%rd9503, %rd9439;
	and.b64  	%rd9504, %rd9440, %rd9503;
	xor.b64  	%rd9505, %rd9504, %rd9438;
	not.b64 	%rd9506, %rd9440;
	and.b64  	%rd9507, %rd9441, %rd9506;
	xor.b64  	%rd9508, %rd9507, %rd9439;
	not.b64 	%rd9509, %rd9441;
	and.b64  	%rd9510, %rd9442, %rd9509;
	xor.b64  	%rd9511, %rd9510, %rd9440;
	not.b64 	%rd9512, %rd9442;
	and.b64  	%rd9513, %rd9438, %rd9512;
	xor.b64  	%rd9514, %rd9513, %rd9441;
	not.b64 	%rd9515, %rd9438;
	and.b64  	%rd9516, %rd9439, %rd9515;
	xor.b64  	%rd9517, %rd9516, %rd9442;
	xor.b64  	%rd9519, %rd9445, %rd24;
	xor.b64  	%rd9520, %rd9460, %rd9519;
	xor.b64  	%rd9521, %rd9520, %rd9475;
	xor.b64  	%rd9522, %rd9521, %rd9490;
	xor.b64  	%rd9523, %rd9522, %rd9505;
	xor.b64  	%rd9524, %rd9463, %rd9448;
	xor.b64  	%rd9525, %rd9524, %rd9478;
	xor.b64  	%rd9526, %rd9525, %rd9493;
	xor.b64  	%rd9527, %rd9526, %rd9508;
	xor.b64  	%rd9528, %rd9466, %rd9451;
	xor.b64  	%rd9529, %rd9528, %rd9481;
	xor.b64  	%rd9530, %rd9529, %rd9496;
	xor.b64  	%rd9531, %rd9530, %rd9511;
	xor.b64  	%rd9532, %rd9469, %rd9454;
	xor.b64  	%rd9533, %rd9532, %rd9484;
	xor.b64  	%rd9534, %rd9533, %rd9499;
	xor.b64  	%rd9535, %rd9534, %rd9514;
	xor.b64  	%rd9536, %rd9472, %rd9457;
	xor.b64  	%rd9537, %rd9536, %rd9487;
	xor.b64  	%rd9538, %rd9537, %rd9502;
	xor.b64  	%rd9539, %rd9538, %rd9517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6689}, %rd9527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6690,%dummy}, %rd9527;
	}
	shf.l.wrap.b32 	%r6691, %r6690, %r6689, 1;
	shf.l.wrap.b32 	%r6692, %r6689, %r6690, 1;
	mov.b64 	%rd9540, {%r6692, %r6691};
	xor.b64  	%rd9541, %rd9539, %rd9540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd9531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6694,%dummy}, %rd9531;
	}
	shf.l.wrap.b32 	%r6695, %r6694, %r6693, 1;
	shf.l.wrap.b32 	%r6696, %r6693, %r6694, 1;
	mov.b64 	%rd9542, {%r6696, %r6695};
	xor.b64  	%rd9543, %rd9542, %rd9523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6697}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6698,%dummy}, %rd9535;
	}
	shf.l.wrap.b32 	%r6699, %r6698, %r6697, 1;
	shf.l.wrap.b32 	%r6700, %r6697, %r6698, 1;
	mov.b64 	%rd9544, {%r6700, %r6699};
	xor.b64  	%rd9545, %rd9544, %rd9527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6701}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6702,%dummy}, %rd9539;
	}
	shf.l.wrap.b32 	%r6703, %r6702, %r6701, 1;
	shf.l.wrap.b32 	%r6704, %r6701, %r6702, 1;
	mov.b64 	%rd9546, {%r6704, %r6703};
	xor.b64  	%rd9547, %rd9546, %rd9531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6705}, %rd9523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6706,%dummy}, %rd9523;
	}
	shf.l.wrap.b32 	%r6707, %r6706, %r6705, 1;
	shf.l.wrap.b32 	%r6708, %r6705, %r6706, 1;
	mov.b64 	%rd9548, {%r6708, %r6707};
	xor.b64  	%rd9549, %rd9535, %rd9548;
	xor.b64  	%rd9550, %rd9541, %rd9519;
	xor.b64  	%rd9551, %rd9543, %rd9448;
	xor.b64  	%rd9552, %rd9545, %rd9451;
	xor.b64  	%rd9553, %rd9547, %rd9454;
	xor.b64  	%rd9554, %rd9549, %rd9457;
	xor.b64  	%rd9555, %rd9541, %rd9460;
	xor.b64  	%rd9556, %rd9543, %rd9463;
	xor.b64  	%rd9557, %rd9545, %rd9466;
	xor.b64  	%rd9558, %rd9547, %rd9469;
	xor.b64  	%rd9559, %rd9549, %rd9472;
	xor.b64  	%rd9560, %rd9541, %rd9475;
	xor.b64  	%rd9561, %rd9543, %rd9478;
	xor.b64  	%rd9562, %rd9545, %rd9481;
	xor.b64  	%rd9563, %rd9547, %rd9484;
	xor.b64  	%rd9564, %rd9549, %rd9487;
	xor.b64  	%rd9565, %rd9541, %rd9490;
	xor.b64  	%rd9566, %rd9543, %rd9493;
	xor.b64  	%rd9567, %rd9545, %rd9496;
	xor.b64  	%rd9568, %rd9547, %rd9499;
	xor.b64  	%rd9569, %rd9549, %rd9502;
	xor.b64  	%rd9570, %rd9541, %rd9505;
	xor.b64  	%rd9571, %rd9543, %rd9508;
	xor.b64  	%rd9572, %rd9545, %rd9511;
	xor.b64  	%rd9573, %rd9547, %rd9514;
	xor.b64  	%rd9574, %rd9549, %rd9517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6709,%dummy}, %rd9556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6710}, %rd9556;
	}
	shf.r.wrap.b32 	%r6711, %r6710, %r6709, 20;
	shf.r.wrap.b32 	%r6712, %r6709, %r6710, 20;
	mov.b64 	%rd9575, {%r6712, %r6711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6713,%dummy}, %rd9562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6714}, %rd9562;
	}
	shf.r.wrap.b32 	%r6715, %r6714, %r6713, 21;
	shf.r.wrap.b32 	%r6716, %r6713, %r6714, 21;
	mov.b64 	%rd9576, {%r6716, %r6715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6717}, %rd9568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6718,%dummy}, %rd9568;
	}
	shf.l.wrap.b32 	%r6719, %r6718, %r6717, 21;
	shf.l.wrap.b32 	%r6720, %r6717, %r6718, 21;
	mov.b64 	%rd9577, {%r6720, %r6719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6721}, %rd9574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd9574;
	}
	shf.l.wrap.b32 	%r6723, %r6722, %r6721, 14;
	shf.l.wrap.b32 	%r6724, %r6721, %r6722, 14;
	mov.b64 	%rd9578, {%r6724, %r6723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6725}, %rd9553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6726,%dummy}, %rd9553;
	}
	shf.l.wrap.b32 	%r6727, %r6726, %r6725, 28;
	shf.l.wrap.b32 	%r6728, %r6725, %r6726, 28;
	mov.b64 	%rd9579, {%r6728, %r6727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6729}, %rd9559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6730,%dummy}, %rd9559;
	}
	shf.l.wrap.b32 	%r6731, %r6730, %r6729, 20;
	shf.l.wrap.b32 	%r6732, %r6729, %r6730, 20;
	mov.b64 	%rd9580, {%r6732, %r6731};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd9560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6734,%dummy}, %rd9560;
	}
	shf.l.wrap.b32 	%r6735, %r6734, %r6733, 3;
	shf.l.wrap.b32 	%r6736, %r6733, %r6734, 3;
	mov.b64 	%rd9581, {%r6736, %r6735};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6737,%dummy}, %rd9566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6738}, %rd9566;
	}
	shf.r.wrap.b32 	%r6739, %r6738, %r6737, 19;
	shf.r.wrap.b32 	%r6740, %r6737, %r6738, 19;
	mov.b64 	%rd9582, {%r6740, %r6739};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6741,%dummy}, %rd9572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6742}, %rd9572;
	}
	shf.r.wrap.b32 	%r6743, %r6742, %r6741, 3;
	shf.r.wrap.b32 	%r6744, %r6741, %r6742, 3;
	mov.b64 	%rd9583, {%r6744, %r6743};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6745}, %rd9551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd9551;
	}
	shf.l.wrap.b32 	%r6747, %r6746, %r6745, 1;
	shf.l.wrap.b32 	%r6748, %r6745, %r6746, 1;
	mov.b64 	%rd9584, {%r6748, %r6747};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6749}, %rd9557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6750,%dummy}, %rd9557;
	}
	shf.l.wrap.b32 	%r6751, %r6750, %r6749, 6;
	shf.l.wrap.b32 	%r6752, %r6749, %r6750, 6;
	mov.b64 	%rd9585, {%r6752, %r6751};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6753}, %rd9563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6754,%dummy}, %rd9563;
	}
	shf.l.wrap.b32 	%r6755, %r6754, %r6753, 25;
	shf.l.wrap.b32 	%r6756, %r6753, %r6754, 25;
	mov.b64 	%rd9586, {%r6756, %r6755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6757}, %rd9569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6758,%dummy}, %rd9569;
	}
	shf.l.wrap.b32 	%r6759, %r6758, %r6757, 8;
	shf.l.wrap.b32 	%r6760, %r6757, %r6758, 8;
	mov.b64 	%rd9587, {%r6760, %r6759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6761}, %rd9570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd9570;
	}
	shf.l.wrap.b32 	%r6763, %r6762, %r6761, 18;
	shf.l.wrap.b32 	%r6764, %r6761, %r6762, 18;
	mov.b64 	%rd9588, {%r6764, %r6763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6765}, %rd9554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6766,%dummy}, %rd9554;
	}
	shf.l.wrap.b32 	%r6767, %r6766, %r6765, 27;
	shf.l.wrap.b32 	%r6768, %r6765, %r6766, 27;
	mov.b64 	%rd9589, {%r6768, %r6767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6769,%dummy}, %rd9555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6770}, %rd9555;
	}
	shf.r.wrap.b32 	%r6771, %r6770, %r6769, 28;
	shf.r.wrap.b32 	%r6772, %r6769, %r6770, 28;
	mov.b64 	%rd9590, {%r6772, %r6771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6773}, %rd9561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6774,%dummy}, %rd9561;
	}
	shf.l.wrap.b32 	%r6775, %r6774, %r6773, 10;
	shf.l.wrap.b32 	%r6776, %r6773, %r6774, 10;
	mov.b64 	%rd9591, {%r6776, %r6775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6777}, %rd9567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd9567;
	}
	shf.l.wrap.b32 	%r6779, %r6778, %r6777, 15;
	shf.l.wrap.b32 	%r6780, %r6777, %r6778, 15;
	mov.b64 	%rd9592, {%r6780, %r6779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6781,%dummy}, %rd9573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6782}, %rd9573;
	}
	shf.r.wrap.b32 	%r6783, %r6782, %r6781, 8;
	shf.r.wrap.b32 	%r6784, %r6781, %r6782, 8;
	mov.b64 	%rd9593, {%r6784, %r6783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6785,%dummy}, %rd9552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6786}, %rd9552;
	}
	shf.r.wrap.b32 	%r6787, %r6786, %r6785, 2;
	shf.r.wrap.b32 	%r6788, %r6785, %r6786, 2;
	mov.b64 	%rd9594, {%r6788, %r6787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6789,%dummy}, %rd9558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6790}, %rd9558;
	}
	shf.r.wrap.b32 	%r6791, %r6790, %r6789, 9;
	shf.r.wrap.b32 	%r6792, %r6789, %r6790, 9;
	mov.b64 	%rd9595, {%r6792, %r6791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6793,%dummy}, %rd9564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6794}, %rd9564;
	}
	shf.r.wrap.b32 	%r6795, %r6794, %r6793, 25;
	shf.r.wrap.b32 	%r6796, %r6793, %r6794, 25;
	mov.b64 	%rd9596, {%r6796, %r6795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6797,%dummy}, %rd9565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6798}, %rd9565;
	}
	shf.r.wrap.b32 	%r6799, %r6798, %r6797, 23;
	shf.r.wrap.b32 	%r6800, %r6797, %r6798, 23;
	mov.b64 	%rd9597, {%r6800, %r6799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6801}, %rd9571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd9571;
	}
	shf.l.wrap.b32 	%r6803, %r6802, %r6801, 2;
	shf.l.wrap.b32 	%r6804, %r6801, %r6802, 2;
	mov.b64 	%rd9598, {%r6804, %r6803};
	not.b64 	%rd9599, %rd9575;
	and.b64  	%rd9600, %rd9576, %rd9599;
	xor.b64  	%rd9601, %rd9600, %rd9550;
	not.b64 	%rd9602, %rd9576;
	and.b64  	%rd9603, %rd9577, %rd9602;
	xor.b64  	%rd9604, %rd9603, %rd9575;
	not.b64 	%rd9605, %rd9577;
	and.b64  	%rd9606, %rd9578, %rd9605;
	xor.b64  	%rd9607, %rd9606, %rd9576;
	not.b64 	%rd9608, %rd9578;
	and.b64  	%rd9609, %rd9550, %rd9608;
	xor.b64  	%rd9610, %rd9609, %rd9577;
	not.b64 	%rd9611, %rd9550;
	and.b64  	%rd9612, %rd9575, %rd9611;
	xor.b64  	%rd9613, %rd9612, %rd9578;
	not.b64 	%rd9614, %rd9580;
	and.b64  	%rd9615, %rd9581, %rd9614;
	xor.b64  	%rd9616, %rd9615, %rd9579;
	not.b64 	%rd9617, %rd9581;
	and.b64  	%rd9618, %rd9582, %rd9617;
	xor.b64  	%rd9619, %rd9618, %rd9580;
	not.b64 	%rd9620, %rd9582;
	and.b64  	%rd9621, %rd9583, %rd9620;
	xor.b64  	%rd9622, %rd9621, %rd9581;
	not.b64 	%rd9623, %rd9583;
	and.b64  	%rd9624, %rd9579, %rd9623;
	xor.b64  	%rd9625, %rd9624, %rd9582;
	not.b64 	%rd9626, %rd9579;
	and.b64  	%rd9627, %rd9580, %rd9626;
	xor.b64  	%rd9628, %rd9627, %rd9583;
	not.b64 	%rd9629, %rd9585;
	and.b64  	%rd9630, %rd9586, %rd9629;
	xor.b64  	%rd9631, %rd9630, %rd9584;
	not.b64 	%rd9632, %rd9586;
	and.b64  	%rd9633, %rd9587, %rd9632;
	xor.b64  	%rd9634, %rd9633, %rd9585;
	not.b64 	%rd9635, %rd9587;
	and.b64  	%rd9636, %rd9588, %rd9635;
	xor.b64  	%rd9637, %rd9636, %rd9586;
	not.b64 	%rd9638, %rd9588;
	and.b64  	%rd9639, %rd9584, %rd9638;
	xor.b64  	%rd9640, %rd9639, %rd9587;
	not.b64 	%rd9641, %rd9584;
	and.b64  	%rd9642, %rd9585, %rd9641;
	xor.b64  	%rd9643, %rd9642, %rd9588;
	not.b64 	%rd9644, %rd9590;
	and.b64  	%rd9645, %rd9591, %rd9644;
	xor.b64  	%rd9646, %rd9645, %rd9589;
	not.b64 	%rd9647, %rd9591;
	and.b64  	%rd9648, %rd9592, %rd9647;
	xor.b64  	%rd9649, %rd9648, %rd9590;
	not.b64 	%rd9650, %rd9592;
	and.b64  	%rd9651, %rd9593, %rd9650;
	xor.b64  	%rd9652, %rd9651, %rd9591;
	not.b64 	%rd9653, %rd9593;
	and.b64  	%rd9654, %rd9589, %rd9653;
	xor.b64  	%rd9655, %rd9654, %rd9592;
	not.b64 	%rd9656, %rd9589;
	and.b64  	%rd9657, %rd9590, %rd9656;
	xor.b64  	%rd9658, %rd9657, %rd9593;
	not.b64 	%rd9659, %rd9595;
	and.b64  	%rd9660, %rd9596, %rd9659;
	xor.b64  	%rd9661, %rd9660, %rd9594;
	not.b64 	%rd9662, %rd9596;
	and.b64  	%rd9663, %rd9597, %rd9662;
	xor.b64  	%rd9664, %rd9663, %rd9595;
	not.b64 	%rd9665, %rd9597;
	and.b64  	%rd9666, %rd9598, %rd9665;
	xor.b64  	%rd9667, %rd9666, %rd9596;
	not.b64 	%rd9668, %rd9598;
	and.b64  	%rd9669, %rd9594, %rd9668;
	xor.b64  	%rd9670, %rd9669, %rd9597;
	not.b64 	%rd9671, %rd9594;
	and.b64  	%rd9672, %rd9595, %rd9671;
	xor.b64  	%rd9673, %rd9672, %rd9598;
	xor.b64  	%rd9675, %rd9601, %rd25;
	xor.b64  	%rd9676, %rd9616, %rd9675;
	xor.b64  	%rd9677, %rd9676, %rd9631;
	xor.b64  	%rd9678, %rd9677, %rd9646;
	xor.b64  	%rd9679, %rd9678, %rd9661;
	xor.b64  	%rd9680, %rd9619, %rd9604;
	xor.b64  	%rd9681, %rd9680, %rd9634;
	xor.b64  	%rd9682, %rd9681, %rd9649;
	xor.b64  	%rd9683, %rd9682, %rd9664;
	xor.b64  	%rd9684, %rd9622, %rd9607;
	xor.b64  	%rd9685, %rd9684, %rd9637;
	xor.b64  	%rd9686, %rd9685, %rd9652;
	xor.b64  	%rd9687, %rd9686, %rd9667;
	xor.b64  	%rd9688, %rd9625, %rd9610;
	xor.b64  	%rd9689, %rd9688, %rd9640;
	xor.b64  	%rd9690, %rd9689, %rd9655;
	xor.b64  	%rd9691, %rd9690, %rd9670;
	xor.b64  	%rd9692, %rd9628, %rd9613;
	xor.b64  	%rd9693, %rd9692, %rd9643;
	xor.b64  	%rd9694, %rd9693, %rd9658;
	xor.b64  	%rd9695, %rd9694, %rd9673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6805}, %rd9683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6806,%dummy}, %rd9683;
	}
	shf.l.wrap.b32 	%r6807, %r6806, %r6805, 1;
	shf.l.wrap.b32 	%r6808, %r6805, %r6806, 1;
	mov.b64 	%rd9696, {%r6808, %r6807};
	xor.b64  	%rd9697, %rd9695, %rd9696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6809}, %rd9687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd9687;
	}
	shf.l.wrap.b32 	%r6811, %r6810, %r6809, 1;
	shf.l.wrap.b32 	%r6812, %r6809, %r6810, 1;
	mov.b64 	%rd9698, {%r6812, %r6811};
	xor.b64  	%rd9699, %rd9698, %rd9679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6813}, %rd9691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6814,%dummy}, %rd9691;
	}
	shf.l.wrap.b32 	%r6815, %r6814, %r6813, 1;
	shf.l.wrap.b32 	%r6816, %r6813, %r6814, 1;
	mov.b64 	%rd9700, {%r6816, %r6815};
	xor.b64  	%rd9701, %rd9700, %rd9683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6817}, %rd9695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd9695;
	}
	shf.l.wrap.b32 	%r6819, %r6818, %r6817, 1;
	shf.l.wrap.b32 	%r6820, %r6817, %r6818, 1;
	mov.b64 	%rd9702, {%r6820, %r6819};
	xor.b64  	%rd9703, %rd9702, %rd9687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6821}, %rd9679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6822,%dummy}, %rd9679;
	}
	shf.l.wrap.b32 	%r6823, %r6822, %r6821, 1;
	shf.l.wrap.b32 	%r6824, %r6821, %r6822, 1;
	mov.b64 	%rd9704, {%r6824, %r6823};
	xor.b64  	%rd9705, %rd9691, %rd9704;
	xor.b64  	%rd9706, %rd9697, %rd9675;
	xor.b64  	%rd9707, %rd9699, %rd9604;
	xor.b64  	%rd9708, %rd9701, %rd9607;
	xor.b64  	%rd9709, %rd9703, %rd9610;
	xor.b64  	%rd9710, %rd9705, %rd9613;
	xor.b64  	%rd9711, %rd9697, %rd9616;
	xor.b64  	%rd9712, %rd9699, %rd9619;
	xor.b64  	%rd9713, %rd9701, %rd9622;
	xor.b64  	%rd9714, %rd9703, %rd9625;
	xor.b64  	%rd9715, %rd9705, %rd9628;
	xor.b64  	%rd9716, %rd9697, %rd9631;
	xor.b64  	%rd9717, %rd9699, %rd9634;
	xor.b64  	%rd9718, %rd9701, %rd9637;
	xor.b64  	%rd9719, %rd9703, %rd9640;
	xor.b64  	%rd9720, %rd9705, %rd9643;
	xor.b64  	%rd9721, %rd9697, %rd9646;
	xor.b64  	%rd9722, %rd9699, %rd9649;
	xor.b64  	%rd9723, %rd9701, %rd9652;
	xor.b64  	%rd9724, %rd9703, %rd9655;
	xor.b64  	%rd9725, %rd9705, %rd9658;
	xor.b64  	%rd9726, %rd9697, %rd9661;
	xor.b64  	%rd9727, %rd9699, %rd9664;
	xor.b64  	%rd9728, %rd9701, %rd9667;
	xor.b64  	%rd9729, %rd9703, %rd9670;
	xor.b64  	%rd9730, %rd9705, %rd9673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6825,%dummy}, %rd9712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6826}, %rd9712;
	}
	shf.r.wrap.b32 	%r6827, %r6826, %r6825, 20;
	shf.r.wrap.b32 	%r6828, %r6825, %r6826, 20;
	mov.b64 	%rd9731, {%r6828, %r6827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6829,%dummy}, %rd9718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6830}, %rd9718;
	}
	shf.r.wrap.b32 	%r6831, %r6830, %r6829, 21;
	shf.r.wrap.b32 	%r6832, %r6829, %r6830, 21;
	mov.b64 	%rd9732, {%r6832, %r6831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6833}, %rd9724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd9724;
	}
	shf.l.wrap.b32 	%r6835, %r6834, %r6833, 21;
	shf.l.wrap.b32 	%r6836, %r6833, %r6834, 21;
	mov.b64 	%rd9733, {%r6836, %r6835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6837}, %rd9730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6838,%dummy}, %rd9730;
	}
	shf.l.wrap.b32 	%r6839, %r6838, %r6837, 14;
	shf.l.wrap.b32 	%r6840, %r6837, %r6838, 14;
	mov.b64 	%rd9734, {%r6840, %r6839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6841}, %rd9709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd9709;
	}
	shf.l.wrap.b32 	%r6843, %r6842, %r6841, 28;
	shf.l.wrap.b32 	%r6844, %r6841, %r6842, 28;
	mov.b64 	%rd9735, {%r6844, %r6843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6845}, %rd9715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6846,%dummy}, %rd9715;
	}
	shf.l.wrap.b32 	%r6847, %r6846, %r6845, 20;
	shf.l.wrap.b32 	%r6848, %r6845, %r6846, 20;
	mov.b64 	%rd9736, {%r6848, %r6847};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6849}, %rd9716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd9716;
	}
	shf.l.wrap.b32 	%r6851, %r6850, %r6849, 3;
	shf.l.wrap.b32 	%r6852, %r6849, %r6850, 3;
	mov.b64 	%rd9737, {%r6852, %r6851};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6853,%dummy}, %rd9722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6854}, %rd9722;
	}
	shf.r.wrap.b32 	%r6855, %r6854, %r6853, 19;
	shf.r.wrap.b32 	%r6856, %r6853, %r6854, 19;
	mov.b64 	%rd9738, {%r6856, %r6855};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6857,%dummy}, %rd9728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6858}, %rd9728;
	}
	shf.r.wrap.b32 	%r6859, %r6858, %r6857, 3;
	shf.r.wrap.b32 	%r6860, %r6857, %r6858, 3;
	mov.b64 	%rd9739, {%r6860, %r6859};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6861}, %rd9707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6862,%dummy}, %rd9707;
	}
	shf.l.wrap.b32 	%r6863, %r6862, %r6861, 1;
	shf.l.wrap.b32 	%r6864, %r6861, %r6862, 1;
	mov.b64 	%rd9740, {%r6864, %r6863};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6865}, %rd9713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd9713;
	}
	shf.l.wrap.b32 	%r6867, %r6866, %r6865, 6;
	shf.l.wrap.b32 	%r6868, %r6865, %r6866, 6;
	mov.b64 	%rd9741, {%r6868, %r6867};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6869}, %rd9719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6870,%dummy}, %rd9719;
	}
	shf.l.wrap.b32 	%r6871, %r6870, %r6869, 25;
	shf.l.wrap.b32 	%r6872, %r6869, %r6870, 25;
	mov.b64 	%rd9742, {%r6872, %r6871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6873}, %rd9725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd9725;
	}
	shf.l.wrap.b32 	%r6875, %r6874, %r6873, 8;
	shf.l.wrap.b32 	%r6876, %r6873, %r6874, 8;
	mov.b64 	%rd9743, {%r6876, %r6875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6877}, %rd9726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6878,%dummy}, %rd9726;
	}
	shf.l.wrap.b32 	%r6879, %r6878, %r6877, 18;
	shf.l.wrap.b32 	%r6880, %r6877, %r6878, 18;
	mov.b64 	%rd9744, {%r6880, %r6879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6881}, %rd9710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd9710;
	}
	shf.l.wrap.b32 	%r6883, %r6882, %r6881, 27;
	shf.l.wrap.b32 	%r6884, %r6881, %r6882, 27;
	mov.b64 	%rd9745, {%r6884, %r6883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6885,%dummy}, %rd9711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6886}, %rd9711;
	}
	shf.r.wrap.b32 	%r6887, %r6886, %r6885, 28;
	shf.r.wrap.b32 	%r6888, %r6885, %r6886, 28;
	mov.b64 	%rd9746, {%r6888, %r6887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6889}, %rd9717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd9717;
	}
	shf.l.wrap.b32 	%r6891, %r6890, %r6889, 10;
	shf.l.wrap.b32 	%r6892, %r6889, %r6890, 10;
	mov.b64 	%rd9747, {%r6892, %r6891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6893}, %rd9723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6894,%dummy}, %rd9723;
	}
	shf.l.wrap.b32 	%r6895, %r6894, %r6893, 15;
	shf.l.wrap.b32 	%r6896, %r6893, %r6894, 15;
	mov.b64 	%rd9748, {%r6896, %r6895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6897,%dummy}, %rd9729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6898}, %rd9729;
	}
	shf.r.wrap.b32 	%r6899, %r6898, %r6897, 8;
	shf.r.wrap.b32 	%r6900, %r6897, %r6898, 8;
	mov.b64 	%rd9749, {%r6900, %r6899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6901,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6902}, %rd9708;
	}
	shf.r.wrap.b32 	%r6903, %r6902, %r6901, 2;
	shf.r.wrap.b32 	%r6904, %r6901, %r6902, 2;
	mov.b64 	%rd9750, {%r6904, %r6903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6905,%dummy}, %rd9714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6906}, %rd9714;
	}
	shf.r.wrap.b32 	%r6907, %r6906, %r6905, 9;
	shf.r.wrap.b32 	%r6908, %r6905, %r6906, 9;
	mov.b64 	%rd9751, {%r6908, %r6907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6909,%dummy}, %rd9720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6910}, %rd9720;
	}
	shf.r.wrap.b32 	%r6911, %r6910, %r6909, 25;
	shf.r.wrap.b32 	%r6912, %r6909, %r6910, 25;
	mov.b64 	%rd9752, {%r6912, %r6911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6913,%dummy}, %rd9721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6914}, %rd9721;
	}
	shf.r.wrap.b32 	%r6915, %r6914, %r6913, 23;
	shf.r.wrap.b32 	%r6916, %r6913, %r6914, 23;
	mov.b64 	%rd9753, {%r6916, %r6915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd9727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6918,%dummy}, %rd9727;
	}
	shf.l.wrap.b32 	%r6919, %r6918, %r6917, 2;
	shf.l.wrap.b32 	%r6920, %r6917, %r6918, 2;
	mov.b64 	%rd9754, {%r6920, %r6919};
	not.b64 	%rd9755, %rd9731;
	and.b64  	%rd9756, %rd9732, %rd9755;
	xor.b64  	%rd9757, %rd9756, %rd9706;
	not.b64 	%rd9758, %rd9732;
	and.b64  	%rd9759, %rd9733, %rd9758;
	xor.b64  	%rd9760, %rd9759, %rd9731;
	not.b64 	%rd9761, %rd9733;
	and.b64  	%rd9762, %rd9734, %rd9761;
	xor.b64  	%rd9763, %rd9762, %rd9732;
	not.b64 	%rd9764, %rd9734;
	and.b64  	%rd9765, %rd9706, %rd9764;
	xor.b64  	%rd9766, %rd9765, %rd9733;
	not.b64 	%rd9767, %rd9706;
	and.b64  	%rd9768, %rd9731, %rd9767;
	xor.b64  	%rd9769, %rd9768, %rd9734;
	not.b64 	%rd9770, %rd9736;
	and.b64  	%rd9771, %rd9737, %rd9770;
	xor.b64  	%rd9772, %rd9771, %rd9735;
	not.b64 	%rd9773, %rd9737;
	and.b64  	%rd9774, %rd9738, %rd9773;
	xor.b64  	%rd9775, %rd9774, %rd9736;
	not.b64 	%rd9776, %rd9738;
	and.b64  	%rd9777, %rd9739, %rd9776;
	xor.b64  	%rd9778, %rd9777, %rd9737;
	not.b64 	%rd9779, %rd9739;
	and.b64  	%rd9780, %rd9735, %rd9779;
	xor.b64  	%rd9781, %rd9780, %rd9738;
	not.b64 	%rd9782, %rd9735;
	and.b64  	%rd9783, %rd9736, %rd9782;
	xor.b64  	%rd9784, %rd9783, %rd9739;
	not.b64 	%rd9785, %rd9741;
	and.b64  	%rd9786, %rd9742, %rd9785;
	xor.b64  	%rd9787, %rd9786, %rd9740;
	not.b64 	%rd9788, %rd9742;
	and.b64  	%rd9789, %rd9743, %rd9788;
	xor.b64  	%rd9790, %rd9789, %rd9741;
	not.b64 	%rd9791, %rd9743;
	and.b64  	%rd9792, %rd9744, %rd9791;
	xor.b64  	%rd9793, %rd9792, %rd9742;
	not.b64 	%rd9794, %rd9744;
	and.b64  	%rd9795, %rd9740, %rd9794;
	xor.b64  	%rd9796, %rd9795, %rd9743;
	not.b64 	%rd9797, %rd9740;
	and.b64  	%rd9798, %rd9741, %rd9797;
	xor.b64  	%rd9799, %rd9798, %rd9744;
	not.b64 	%rd9800, %rd9746;
	and.b64  	%rd9801, %rd9747, %rd9800;
	xor.b64  	%rd9802, %rd9801, %rd9745;
	not.b64 	%rd9803, %rd9747;
	and.b64  	%rd9804, %rd9748, %rd9803;
	xor.b64  	%rd9805, %rd9804, %rd9746;
	not.b64 	%rd9806, %rd9748;
	and.b64  	%rd9807, %rd9749, %rd9806;
	xor.b64  	%rd9808, %rd9807, %rd9747;
	not.b64 	%rd9809, %rd9749;
	and.b64  	%rd9810, %rd9745, %rd9809;
	xor.b64  	%rd9811, %rd9810, %rd9748;
	not.b64 	%rd9812, %rd9745;
	and.b64  	%rd9813, %rd9746, %rd9812;
	xor.b64  	%rd9814, %rd9813, %rd9749;
	not.b64 	%rd9815, %rd9751;
	and.b64  	%rd9816, %rd9752, %rd9815;
	xor.b64  	%rd9817, %rd9816, %rd9750;
	not.b64 	%rd9818, %rd9752;
	and.b64  	%rd9819, %rd9753, %rd9818;
	xor.b64  	%rd9820, %rd9819, %rd9751;
	not.b64 	%rd9821, %rd9753;
	and.b64  	%rd9822, %rd9754, %rd9821;
	xor.b64  	%rd9823, %rd9822, %rd9752;
	not.b64 	%rd9824, %rd9754;
	and.b64  	%rd9825, %rd9750, %rd9824;
	xor.b64  	%rd9826, %rd9825, %rd9753;
	not.b64 	%rd9827, %rd9750;
	and.b64  	%rd9828, %rd9751, %rd9827;
	xor.b64  	%rd9829, %rd9828, %rd9754;
	xor.b64  	%rd9831, %rd9757, %rd26;
	xor.b64  	%rd9832, %rd9772, %rd9831;
	xor.b64  	%rd9833, %rd9832, %rd9787;
	xor.b64  	%rd9834, %rd9833, %rd9802;
	xor.b64  	%rd9835, %rd9834, %rd9817;
	xor.b64  	%rd9836, %rd9775, %rd9760;
	xor.b64  	%rd9837, %rd9836, %rd9790;
	xor.b64  	%rd9838, %rd9837, %rd9805;
	xor.b64  	%rd9839, %rd9838, %rd9820;
	xor.b64  	%rd9840, %rd9778, %rd9763;
	xor.b64  	%rd9841, %rd9840, %rd9793;
	xor.b64  	%rd9842, %rd9841, %rd9808;
	xor.b64  	%rd9843, %rd9842, %rd9823;
	xor.b64  	%rd9844, %rd9781, %rd9766;
	xor.b64  	%rd9845, %rd9844, %rd9796;
	xor.b64  	%rd9846, %rd9845, %rd9811;
	xor.b64  	%rd9847, %rd9846, %rd9826;
	xor.b64  	%rd9848, %rd9784, %rd9769;
	xor.b64  	%rd9849, %rd9848, %rd9799;
	xor.b64  	%rd9850, %rd9849, %rd9814;
	xor.b64  	%rd9851, %rd9850, %rd9829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6921}, %rd9839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd9839;
	}
	shf.l.wrap.b32 	%r6923, %r6922, %r6921, 1;
	shf.l.wrap.b32 	%r6924, %r6921, %r6922, 1;
	mov.b64 	%rd9852, {%r6924, %r6923};
	xor.b64  	%rd9853, %rd9851, %rd9852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6925}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6926,%dummy}, %rd9843;
	}
	shf.l.wrap.b32 	%r6927, %r6926, %r6925, 1;
	shf.l.wrap.b32 	%r6928, %r6925, %r6926, 1;
	mov.b64 	%rd9854, {%r6928, %r6927};
	xor.b64  	%rd9855, %rd9854, %rd9835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd9847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd9847;
	}
	shf.l.wrap.b32 	%r6931, %r6930, %r6929, 1;
	shf.l.wrap.b32 	%r6932, %r6929, %r6930, 1;
	mov.b64 	%rd9856, {%r6932, %r6931};
	xor.b64  	%rd9857, %rd9856, %rd9839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6933}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd9851;
	}
	shf.l.wrap.b32 	%r6935, %r6934, %r6933, 1;
	shf.l.wrap.b32 	%r6936, %r6933, %r6934, 1;
	mov.b64 	%rd9858, {%r6936, %r6935};
	xor.b64  	%rd9859, %rd9858, %rd9843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6937}, %rd9835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd9835;
	}
	shf.l.wrap.b32 	%r6939, %r6938, %r6937, 1;
	shf.l.wrap.b32 	%r6940, %r6937, %r6938, 1;
	mov.b64 	%rd9860, {%r6940, %r6939};
	xor.b64  	%rd9861, %rd9847, %rd9860;
	xor.b64  	%rd9862, %rd9853, %rd9831;
	xor.b64  	%rd9863, %rd9855, %rd9760;
	xor.b64  	%rd9864, %rd9857, %rd9763;
	xor.b64  	%rd9865, %rd9859, %rd9766;
	xor.b64  	%rd9866, %rd9861, %rd9769;
	xor.b64  	%rd9867, %rd9853, %rd9772;
	xor.b64  	%rd9868, %rd9855, %rd9775;
	xor.b64  	%rd9869, %rd9857, %rd9778;
	xor.b64  	%rd9870, %rd9859, %rd9781;
	xor.b64  	%rd9871, %rd9861, %rd9784;
	xor.b64  	%rd9872, %rd9853, %rd9787;
	xor.b64  	%rd9873, %rd9855, %rd9790;
	xor.b64  	%rd9874, %rd9857, %rd9793;
	xor.b64  	%rd9875, %rd9859, %rd9796;
	xor.b64  	%rd9876, %rd9861, %rd9799;
	xor.b64  	%rd9877, %rd9853, %rd9802;
	xor.b64  	%rd9878, %rd9855, %rd9805;
	xor.b64  	%rd9879, %rd9857, %rd9808;
	xor.b64  	%rd9880, %rd9859, %rd9811;
	xor.b64  	%rd9881, %rd9861, %rd9814;
	xor.b64  	%rd9882, %rd9853, %rd9817;
	xor.b64  	%rd9883, %rd9855, %rd9820;
	xor.b64  	%rd9884, %rd9857, %rd9823;
	xor.b64  	%rd9885, %rd9859, %rd9826;
	xor.b64  	%rd9886, %rd9861, %rd9829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6941,%dummy}, %rd9868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6942}, %rd9868;
	}
	shf.r.wrap.b32 	%r6943, %r6942, %r6941, 20;
	shf.r.wrap.b32 	%r6944, %r6941, %r6942, 20;
	mov.b64 	%rd9887, {%r6944, %r6943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6945,%dummy}, %rd9874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6946}, %rd9874;
	}
	shf.r.wrap.b32 	%r6947, %r6946, %r6945, 21;
	shf.r.wrap.b32 	%r6948, %r6945, %r6946, 21;
	mov.b64 	%rd9888, {%r6948, %r6947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6949}, %rd9880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6950,%dummy}, %rd9880;
	}
	shf.l.wrap.b32 	%r6951, %r6950, %r6949, 21;
	shf.l.wrap.b32 	%r6952, %r6949, %r6950, 21;
	mov.b64 	%rd9889, {%r6952, %r6951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd9886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6954,%dummy}, %rd9886;
	}
	shf.l.wrap.b32 	%r6955, %r6954, %r6953, 14;
	shf.l.wrap.b32 	%r6956, %r6953, %r6954, 14;
	mov.b64 	%rd9890, {%r6956, %r6955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6957}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd9865;
	}
	shf.l.wrap.b32 	%r6959, %r6958, %r6957, 28;
	shf.l.wrap.b32 	%r6960, %r6957, %r6958, 28;
	mov.b64 	%rd9891, {%r6960, %r6959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6961}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd9871;
	}
	shf.l.wrap.b32 	%r6963, %r6962, %r6961, 20;
	shf.l.wrap.b32 	%r6964, %r6961, %r6962, 20;
	mov.b64 	%rd9892, {%r6964, %r6963};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd9872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6966,%dummy}, %rd9872;
	}
	shf.l.wrap.b32 	%r6967, %r6966, %r6965, 3;
	shf.l.wrap.b32 	%r6968, %r6965, %r6966, 3;
	mov.b64 	%rd9893, {%r6968, %r6967};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6969,%dummy}, %rd9878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6970}, %rd9878;
	}
	shf.r.wrap.b32 	%r6971, %r6970, %r6969, 19;
	shf.r.wrap.b32 	%r6972, %r6969, %r6970, 19;
	mov.b64 	%rd9894, {%r6972, %r6971};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6973,%dummy}, %rd9884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6974}, %rd9884;
	}
	shf.r.wrap.b32 	%r6975, %r6974, %r6973, 3;
	shf.r.wrap.b32 	%r6976, %r6973, %r6974, 3;
	mov.b64 	%rd9895, {%r6976, %r6975};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd9863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd9863;
	}
	shf.l.wrap.b32 	%r6979, %r6978, %r6977, 1;
	shf.l.wrap.b32 	%r6980, %r6977, %r6978, 1;
	mov.b64 	%rd9896, {%r6980, %r6979};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6981}, %rd9869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd9869;
	}
	shf.l.wrap.b32 	%r6983, %r6982, %r6981, 6;
	shf.l.wrap.b32 	%r6984, %r6981, %r6982, 6;
	mov.b64 	%rd9897, {%r6984, %r6983};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6985}, %rd9875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd9875;
	}
	shf.l.wrap.b32 	%r6987, %r6986, %r6985, 25;
	shf.l.wrap.b32 	%r6988, %r6985, %r6986, 25;
	mov.b64 	%rd9898, {%r6988, %r6987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd9881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6990,%dummy}, %rd9881;
	}
	shf.l.wrap.b32 	%r6991, %r6990, %r6989, 8;
	shf.l.wrap.b32 	%r6992, %r6989, %r6990, 8;
	mov.b64 	%rd9899, {%r6992, %r6991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6993}, %rd9882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd9882;
	}
	shf.l.wrap.b32 	%r6995, %r6994, %r6993, 18;
	shf.l.wrap.b32 	%r6996, %r6993, %r6994, 18;
	mov.b64 	%rd9900, {%r6996, %r6995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6997}, %rd9866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6998,%dummy}, %rd9866;
	}
	shf.l.wrap.b32 	%r6999, %r6998, %r6997, 27;
	shf.l.wrap.b32 	%r7000, %r6997, %r6998, 27;
	mov.b64 	%rd9901, {%r7000, %r6999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7001,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7002}, %rd9867;
	}
	shf.r.wrap.b32 	%r7003, %r7002, %r7001, 28;
	shf.r.wrap.b32 	%r7004, %r7001, %r7002, 28;
	mov.b64 	%rd9902, {%r7004, %r7003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7005}, %rd9873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd9873;
	}
	shf.l.wrap.b32 	%r7007, %r7006, %r7005, 10;
	shf.l.wrap.b32 	%r7008, %r7005, %r7006, 10;
	mov.b64 	%rd9903, {%r7008, %r7007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7009}, %rd9879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd9879;
	}
	shf.l.wrap.b32 	%r7011, %r7010, %r7009, 15;
	shf.l.wrap.b32 	%r7012, %r7009, %r7010, 15;
	mov.b64 	%rd9904, {%r7012, %r7011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7013,%dummy}, %rd9885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7014}, %rd9885;
	}
	shf.r.wrap.b32 	%r7015, %r7014, %r7013, 8;
	shf.r.wrap.b32 	%r7016, %r7013, %r7014, 8;
	mov.b64 	%rd9905, {%r7016, %r7015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7017,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7018}, %rd9864;
	}
	shf.r.wrap.b32 	%r7019, %r7018, %r7017, 2;
	shf.r.wrap.b32 	%r7020, %r7017, %r7018, 2;
	mov.b64 	%rd9906, {%r7020, %r7019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7021,%dummy}, %rd9870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7022}, %rd9870;
	}
	shf.r.wrap.b32 	%r7023, %r7022, %r7021, 9;
	shf.r.wrap.b32 	%r7024, %r7021, %r7022, 9;
	mov.b64 	%rd9907, {%r7024, %r7023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7025,%dummy}, %rd9876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7026}, %rd9876;
	}
	shf.r.wrap.b32 	%r7027, %r7026, %r7025, 25;
	shf.r.wrap.b32 	%r7028, %r7025, %r7026, 25;
	mov.b64 	%rd9908, {%r7028, %r7027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7029,%dummy}, %rd9877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7030}, %rd9877;
	}
	shf.r.wrap.b32 	%r7031, %r7030, %r7029, 23;
	shf.r.wrap.b32 	%r7032, %r7029, %r7030, 23;
	mov.b64 	%rd9909, {%r7032, %r7031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7033}, %rd9883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7034,%dummy}, %rd9883;
	}
	shf.l.wrap.b32 	%r7035, %r7034, %r7033, 2;
	shf.l.wrap.b32 	%r7036, %r7033, %r7034, 2;
	mov.b64 	%rd9910, {%r7036, %r7035};
	not.b64 	%rd9911, %rd9887;
	and.b64  	%rd9912, %rd9888, %rd9911;
	xor.b64  	%rd9913, %rd9912, %rd9862;
	not.b64 	%rd9914, %rd9888;
	and.b64  	%rd9915, %rd9889, %rd9914;
	xor.b64  	%rd9916, %rd9915, %rd9887;
	not.b64 	%rd9917, %rd9889;
	and.b64  	%rd9918, %rd9890, %rd9917;
	xor.b64  	%rd9919, %rd9918, %rd9888;
	not.b64 	%rd9920, %rd9890;
	and.b64  	%rd9921, %rd9862, %rd9920;
	xor.b64  	%rd9922, %rd9921, %rd9889;
	not.b64 	%rd9923, %rd9862;
	and.b64  	%rd9924, %rd9887, %rd9923;
	xor.b64  	%rd9925, %rd9924, %rd9890;
	not.b64 	%rd9926, %rd9892;
	and.b64  	%rd9927, %rd9893, %rd9926;
	xor.b64  	%rd9928, %rd9927, %rd9891;
	not.b64 	%rd9929, %rd9893;
	and.b64  	%rd9930, %rd9894, %rd9929;
	xor.b64  	%rd9931, %rd9930, %rd9892;
	not.b64 	%rd9932, %rd9894;
	and.b64  	%rd9933, %rd9895, %rd9932;
	xor.b64  	%rd9934, %rd9933, %rd9893;
	not.b64 	%rd9935, %rd9895;
	and.b64  	%rd9936, %rd9891, %rd9935;
	xor.b64  	%rd9937, %rd9936, %rd9894;
	not.b64 	%rd9938, %rd9891;
	and.b64  	%rd9939, %rd9892, %rd9938;
	xor.b64  	%rd9940, %rd9939, %rd9895;
	not.b64 	%rd9941, %rd9897;
	and.b64  	%rd9942, %rd9898, %rd9941;
	xor.b64  	%rd9943, %rd9942, %rd9896;
	not.b64 	%rd9944, %rd9898;
	and.b64  	%rd9945, %rd9899, %rd9944;
	xor.b64  	%rd9946, %rd9945, %rd9897;
	not.b64 	%rd9947, %rd9899;
	and.b64  	%rd9948, %rd9900, %rd9947;
	xor.b64  	%rd9949, %rd9948, %rd9898;
	not.b64 	%rd9950, %rd9900;
	and.b64  	%rd9951, %rd9896, %rd9950;
	xor.b64  	%rd9952, %rd9951, %rd9899;
	not.b64 	%rd9953, %rd9896;
	and.b64  	%rd9954, %rd9897, %rd9953;
	xor.b64  	%rd9955, %rd9954, %rd9900;
	not.b64 	%rd9956, %rd9902;
	and.b64  	%rd9957, %rd9903, %rd9956;
	xor.b64  	%rd9958, %rd9957, %rd9901;
	not.b64 	%rd9959, %rd9903;
	and.b64  	%rd9960, %rd9904, %rd9959;
	xor.b64  	%rd9961, %rd9960, %rd9902;
	not.b64 	%rd9962, %rd9904;
	and.b64  	%rd9963, %rd9905, %rd9962;
	xor.b64  	%rd9964, %rd9963, %rd9903;
	not.b64 	%rd9965, %rd9905;
	and.b64  	%rd9966, %rd9901, %rd9965;
	xor.b64  	%rd9967, %rd9966, %rd9904;
	not.b64 	%rd9968, %rd9901;
	and.b64  	%rd9969, %rd9902, %rd9968;
	xor.b64  	%rd9970, %rd9969, %rd9905;
	not.b64 	%rd9971, %rd9907;
	and.b64  	%rd9972, %rd9908, %rd9971;
	xor.b64  	%rd9973, %rd9972, %rd9906;
	not.b64 	%rd9974, %rd9908;
	and.b64  	%rd9975, %rd9909, %rd9974;
	xor.b64  	%rd9976, %rd9975, %rd9907;
	not.b64 	%rd9977, %rd9909;
	and.b64  	%rd9978, %rd9910, %rd9977;
	xor.b64  	%rd9979, %rd9978, %rd9908;
	not.b64 	%rd9980, %rd9910;
	and.b64  	%rd9981, %rd9906, %rd9980;
	xor.b64  	%rd9982, %rd9981, %rd9909;
	not.b64 	%rd9983, %rd9906;
	and.b64  	%rd9984, %rd9907, %rd9983;
	xor.b64  	%rd9985, %rd9984, %rd9910;
	xor.b64  	%rd9987, %rd9913, %rd27;
	xor.b64  	%rd9988, %rd9928, %rd9987;
	xor.b64  	%rd9989, %rd9988, %rd9943;
	xor.b64  	%rd9990, %rd9989, %rd9958;
	xor.b64  	%rd9991, %rd9990, %rd9973;
	xor.b64  	%rd9992, %rd9931, %rd9916;
	xor.b64  	%rd9993, %rd9992, %rd9946;
	xor.b64  	%rd9994, %rd9993, %rd9961;
	xor.b64  	%rd9995, %rd9994, %rd9976;
	xor.b64  	%rd9996, %rd9934, %rd9919;
	xor.b64  	%rd9997, %rd9996, %rd9949;
	xor.b64  	%rd9998, %rd9997, %rd9964;
	xor.b64  	%rd9999, %rd9998, %rd9979;
	xor.b64  	%rd10000, %rd9937, %rd9922;
	xor.b64  	%rd10001, %rd10000, %rd9952;
	xor.b64  	%rd10002, %rd10001, %rd9967;
	xor.b64  	%rd10003, %rd10002, %rd9982;
	xor.b64  	%rd10004, %rd9940, %rd9925;
	xor.b64  	%rd10005, %rd10004, %rd9955;
	xor.b64  	%rd10006, %rd10005, %rd9970;
	xor.b64  	%rd10007, %rd10006, %rd9985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7037}, %rd9995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd9995;
	}
	shf.l.wrap.b32 	%r7039, %r7038, %r7037, 1;
	shf.l.wrap.b32 	%r7040, %r7037, %r7038, 1;
	mov.b64 	%rd10008, {%r7040, %r7039};
	xor.b64  	%rd10009, %rd10007, %rd10008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7041}, %rd9999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd9999;
	}
	shf.l.wrap.b32 	%r7043, %r7042, %r7041, 1;
	shf.l.wrap.b32 	%r7044, %r7041, %r7042, 1;
	mov.b64 	%rd10010, {%r7044, %r7043};
	xor.b64  	%rd10011, %rd10010, %rd9991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7045}, %rd10003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7046,%dummy}, %rd10003;
	}
	shf.l.wrap.b32 	%r7047, %r7046, %r7045, 1;
	shf.l.wrap.b32 	%r7048, %r7045, %r7046, 1;
	mov.b64 	%rd10012, {%r7048, %r7047};
	xor.b64  	%rd10013, %rd10012, %rd9995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd10007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7050,%dummy}, %rd10007;
	}
	shf.l.wrap.b32 	%r7051, %r7050, %r7049, 1;
	shf.l.wrap.b32 	%r7052, %r7049, %r7050, 1;
	mov.b64 	%rd10014, {%r7052, %r7051};
	xor.b64  	%rd10015, %rd10014, %rd9999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7053}, %rd9991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd9991;
	}
	shf.l.wrap.b32 	%r7055, %r7054, %r7053, 1;
	shf.l.wrap.b32 	%r7056, %r7053, %r7054, 1;
	mov.b64 	%rd10016, {%r7056, %r7055};
	xor.b64  	%rd10017, %rd10003, %rd10016;
	xor.b64  	%rd10018, %rd10009, %rd9987;
	xor.b64  	%rd10019, %rd10011, %rd9916;
	xor.b64  	%rd10020, %rd10013, %rd9919;
	xor.b64  	%rd10021, %rd10015, %rd9922;
	xor.b64  	%rd10022, %rd10017, %rd9925;
	xor.b64  	%rd10023, %rd10009, %rd9928;
	xor.b64  	%rd10024, %rd10011, %rd9931;
	xor.b64  	%rd10025, %rd10013, %rd9934;
	xor.b64  	%rd10026, %rd10015, %rd9937;
	xor.b64  	%rd10027, %rd10017, %rd9940;
	xor.b64  	%rd10028, %rd10009, %rd9943;
	xor.b64  	%rd10029, %rd10011, %rd9946;
	xor.b64  	%rd10030, %rd10013, %rd9949;
	xor.b64  	%rd10031, %rd10015, %rd9952;
	xor.b64  	%rd10032, %rd10017, %rd9955;
	xor.b64  	%rd10033, %rd10009, %rd9958;
	xor.b64  	%rd10034, %rd10011, %rd9961;
	xor.b64  	%rd10035, %rd10013, %rd9964;
	xor.b64  	%rd10036, %rd10015, %rd9967;
	xor.b64  	%rd10037, %rd10017, %rd9970;
	xor.b64  	%rd10038, %rd10009, %rd9973;
	xor.b64  	%rd10039, %rd10011, %rd9976;
	xor.b64  	%rd10040, %rd10013, %rd9979;
	xor.b64  	%rd10041, %rd10015, %rd9982;
	xor.b64  	%rd10042, %rd10017, %rd9985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7057,%dummy}, %rd10024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7058}, %rd10024;
	}
	shf.r.wrap.b32 	%r7059, %r7058, %r7057, 20;
	shf.r.wrap.b32 	%r7060, %r7057, %r7058, 20;
	mov.b64 	%rd10043, {%r7060, %r7059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7061,%dummy}, %rd10030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7062}, %rd10030;
	}
	shf.r.wrap.b32 	%r7063, %r7062, %r7061, 21;
	shf.r.wrap.b32 	%r7064, %r7061, %r7062, 21;
	mov.b64 	%rd10044, {%r7064, %r7063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd10036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7066,%dummy}, %rd10036;
	}
	shf.l.wrap.b32 	%r7067, %r7066, %r7065, 21;
	shf.l.wrap.b32 	%r7068, %r7065, %r7066, 21;
	mov.b64 	%rd10045, {%r7068, %r7067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd10042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7070,%dummy}, %rd10042;
	}
	shf.l.wrap.b32 	%r7071, %r7070, %r7069, 14;
	shf.l.wrap.b32 	%r7072, %r7069, %r7070, 14;
	mov.b64 	%rd10046, {%r7072, %r7071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7073}, %rd10021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd10021;
	}
	shf.l.wrap.b32 	%r7075, %r7074, %r7073, 28;
	shf.l.wrap.b32 	%r7076, %r7073, %r7074, 28;
	mov.b64 	%rd10047, {%r7076, %r7075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7077}, %rd10027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd10027;
	}
	shf.l.wrap.b32 	%r7079, %r7078, %r7077, 20;
	shf.l.wrap.b32 	%r7080, %r7077, %r7078, 20;
	mov.b64 	%rd10048, {%r7080, %r7079};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7081}, %rd10028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7082,%dummy}, %rd10028;
	}
	shf.l.wrap.b32 	%r7083, %r7082, %r7081, 3;
	shf.l.wrap.b32 	%r7084, %r7081, %r7082, 3;
	mov.b64 	%rd10049, {%r7084, %r7083};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7085,%dummy}, %rd10034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7086}, %rd10034;
	}
	shf.r.wrap.b32 	%r7087, %r7086, %r7085, 19;
	shf.r.wrap.b32 	%r7088, %r7085, %r7086, 19;
	mov.b64 	%rd10050, {%r7088, %r7087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7089,%dummy}, %rd10040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7090}, %rd10040;
	}
	shf.r.wrap.b32 	%r7091, %r7090, %r7089, 3;
	shf.r.wrap.b32 	%r7092, %r7089, %r7090, 3;
	mov.b64 	%rd10051, {%r7092, %r7091};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7093}, %rd10019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7094,%dummy}, %rd10019;
	}
	shf.l.wrap.b32 	%r7095, %r7094, %r7093, 1;
	shf.l.wrap.b32 	%r7096, %r7093, %r7094, 1;
	mov.b64 	%rd10052, {%r7096, %r7095};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7097}, %rd10025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd10025;
	}
	shf.l.wrap.b32 	%r7099, %r7098, %r7097, 6;
	shf.l.wrap.b32 	%r7100, %r7097, %r7098, 6;
	mov.b64 	%rd10053, {%r7100, %r7099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7101}, %rd10031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7102,%dummy}, %rd10031;
	}
	shf.l.wrap.b32 	%r7103, %r7102, %r7101, 25;
	shf.l.wrap.b32 	%r7104, %r7101, %r7102, 25;
	mov.b64 	%rd10054, {%r7104, %r7103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7105}, %rd10037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7106,%dummy}, %rd10037;
	}
	shf.l.wrap.b32 	%r7107, %r7106, %r7105, 8;
	shf.l.wrap.b32 	%r7108, %r7105, %r7106, 8;
	mov.b64 	%rd10055, {%r7108, %r7107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7109}, %rd10038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7110,%dummy}, %rd10038;
	}
	shf.l.wrap.b32 	%r7111, %r7110, %r7109, 18;
	shf.l.wrap.b32 	%r7112, %r7109, %r7110, 18;
	mov.b64 	%rd10056, {%r7112, %r7111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7113}, %rd10022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7114,%dummy}, %rd10022;
	}
	shf.l.wrap.b32 	%r7115, %r7114, %r7113, 27;
	shf.l.wrap.b32 	%r7116, %r7113, %r7114, 27;
	mov.b64 	%rd10057, {%r7116, %r7115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7117,%dummy}, %rd10023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7118}, %rd10023;
	}
	shf.r.wrap.b32 	%r7119, %r7118, %r7117, 28;
	shf.r.wrap.b32 	%r7120, %r7117, %r7118, 28;
	mov.b64 	%rd10058, {%r7120, %r7119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7121}, %rd10029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7122,%dummy}, %rd10029;
	}
	shf.l.wrap.b32 	%r7123, %r7122, %r7121, 10;
	shf.l.wrap.b32 	%r7124, %r7121, %r7122, 10;
	mov.b64 	%rd10059, {%r7124, %r7123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7125}, %rd10035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd10035;
	}
	shf.l.wrap.b32 	%r7127, %r7126, %r7125, 15;
	shf.l.wrap.b32 	%r7128, %r7125, %r7126, 15;
	mov.b64 	%rd10060, {%r7128, %r7127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7129,%dummy}, %rd10041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7130}, %rd10041;
	}
	shf.r.wrap.b32 	%r7131, %r7130, %r7129, 8;
	shf.r.wrap.b32 	%r7132, %r7129, %r7130, 8;
	mov.b64 	%rd10061, {%r7132, %r7131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7133,%dummy}, %rd10020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7134}, %rd10020;
	}
	shf.r.wrap.b32 	%r7135, %r7134, %r7133, 2;
	shf.r.wrap.b32 	%r7136, %r7133, %r7134, 2;
	mov.b64 	%rd10062, {%r7136, %r7135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7137,%dummy}, %rd10026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7138}, %rd10026;
	}
	shf.r.wrap.b32 	%r7139, %r7138, %r7137, 9;
	shf.r.wrap.b32 	%r7140, %r7137, %r7138, 9;
	mov.b64 	%rd10063, {%r7140, %r7139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7141,%dummy}, %rd10032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7142}, %rd10032;
	}
	shf.r.wrap.b32 	%r7143, %r7142, %r7141, 25;
	shf.r.wrap.b32 	%r7144, %r7141, %r7142, 25;
	mov.b64 	%rd10064, {%r7144, %r7143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7145,%dummy}, %rd10033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7146}, %rd10033;
	}
	shf.r.wrap.b32 	%r7147, %r7146, %r7145, 23;
	shf.r.wrap.b32 	%r7148, %r7145, %r7146, 23;
	mov.b64 	%rd10065, {%r7148, %r7147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7149}, %rd10039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7150,%dummy}, %rd10039;
	}
	shf.l.wrap.b32 	%r7151, %r7150, %r7149, 2;
	shf.l.wrap.b32 	%r7152, %r7149, %r7150, 2;
	mov.b64 	%rd10066, {%r7152, %r7151};
	not.b64 	%rd10067, %rd10043;
	and.b64  	%rd10068, %rd10044, %rd10067;
	xor.b64  	%rd10069, %rd10068, %rd10018;
	not.b64 	%rd10070, %rd10044;
	and.b64  	%rd10071, %rd10045, %rd10070;
	xor.b64  	%rd10072, %rd10071, %rd10043;
	not.b64 	%rd10073, %rd10045;
	and.b64  	%rd10074, %rd10046, %rd10073;
	xor.b64  	%rd10075, %rd10074, %rd10044;
	not.b64 	%rd10076, %rd10046;
	and.b64  	%rd10077, %rd10018, %rd10076;
	xor.b64  	%rd10078, %rd10077, %rd10045;
	not.b64 	%rd10079, %rd10018;
	and.b64  	%rd10080, %rd10043, %rd10079;
	xor.b64  	%rd10081, %rd10080, %rd10046;
	not.b64 	%rd10082, %rd10048;
	and.b64  	%rd10083, %rd10049, %rd10082;
	xor.b64  	%rd10084, %rd10083, %rd10047;
	not.b64 	%rd10085, %rd10049;
	and.b64  	%rd10086, %rd10050, %rd10085;
	xor.b64  	%rd10087, %rd10086, %rd10048;
	not.b64 	%rd10088, %rd10050;
	and.b64  	%rd10089, %rd10051, %rd10088;
	xor.b64  	%rd10090, %rd10089, %rd10049;
	not.b64 	%rd10091, %rd10051;
	and.b64  	%rd10092, %rd10047, %rd10091;
	xor.b64  	%rd10093, %rd10092, %rd10050;
	not.b64 	%rd10094, %rd10047;
	and.b64  	%rd10095, %rd10048, %rd10094;
	xor.b64  	%rd10096, %rd10095, %rd10051;
	not.b64 	%rd10097, %rd10053;
	and.b64  	%rd10098, %rd10054, %rd10097;
	xor.b64  	%rd10099, %rd10098, %rd10052;
	not.b64 	%rd10100, %rd10054;
	and.b64  	%rd10101, %rd10055, %rd10100;
	xor.b64  	%rd10102, %rd10101, %rd10053;
	not.b64 	%rd10103, %rd10055;
	and.b64  	%rd10104, %rd10056, %rd10103;
	xor.b64  	%rd10105, %rd10104, %rd10054;
	not.b64 	%rd10106, %rd10056;
	and.b64  	%rd10107, %rd10052, %rd10106;
	xor.b64  	%rd10108, %rd10107, %rd10055;
	not.b64 	%rd10109, %rd10052;
	and.b64  	%rd10110, %rd10053, %rd10109;
	xor.b64  	%rd10111, %rd10110, %rd10056;
	not.b64 	%rd10112, %rd10058;
	and.b64  	%rd10113, %rd10059, %rd10112;
	xor.b64  	%rd10114, %rd10113, %rd10057;
	not.b64 	%rd10115, %rd10059;
	and.b64  	%rd10116, %rd10060, %rd10115;
	xor.b64  	%rd10117, %rd10116, %rd10058;
	not.b64 	%rd10118, %rd10060;
	and.b64  	%rd10119, %rd10061, %rd10118;
	xor.b64  	%rd10120, %rd10119, %rd10059;
	not.b64 	%rd10121, %rd10061;
	and.b64  	%rd10122, %rd10057, %rd10121;
	xor.b64  	%rd10123, %rd10122, %rd10060;
	not.b64 	%rd10124, %rd10057;
	and.b64  	%rd10125, %rd10058, %rd10124;
	xor.b64  	%rd10126, %rd10125, %rd10061;
	not.b64 	%rd10127, %rd10063;
	and.b64  	%rd10128, %rd10064, %rd10127;
	xor.b64  	%rd10129, %rd10128, %rd10062;
	not.b64 	%rd10130, %rd10064;
	and.b64  	%rd10131, %rd10065, %rd10130;
	xor.b64  	%rd10132, %rd10131, %rd10063;
	not.b64 	%rd10133, %rd10065;
	and.b64  	%rd10134, %rd10066, %rd10133;
	xor.b64  	%rd10135, %rd10134, %rd10064;
	not.b64 	%rd10136, %rd10066;
	and.b64  	%rd10137, %rd10062, %rd10136;
	xor.b64  	%rd10138, %rd10137, %rd10065;
	not.b64 	%rd10139, %rd10062;
	and.b64  	%rd10140, %rd10063, %rd10139;
	xor.b64  	%rd10141, %rd10140, %rd10066;
	xor.b64  	%rd10143, %rd10069, %rd28;
	xor.b64  	%rd10144, %rd10084, %rd10143;
	xor.b64  	%rd10145, %rd10144, %rd10099;
	xor.b64  	%rd10146, %rd10145, %rd10114;
	xor.b64  	%rd10147, %rd10146, %rd10129;
	xor.b64  	%rd10148, %rd10087, %rd10072;
	xor.b64  	%rd10149, %rd10148, %rd10102;
	xor.b64  	%rd10150, %rd10149, %rd10117;
	xor.b64  	%rd10151, %rd10150, %rd10132;
	xor.b64  	%rd10152, %rd10090, %rd10075;
	xor.b64  	%rd10153, %rd10152, %rd10105;
	xor.b64  	%rd10154, %rd10153, %rd10120;
	xor.b64  	%rd10155, %rd10154, %rd10135;
	xor.b64  	%rd10156, %rd10093, %rd10078;
	xor.b64  	%rd10157, %rd10156, %rd10108;
	xor.b64  	%rd10158, %rd10157, %rd10123;
	xor.b64  	%rd10159, %rd10158, %rd10138;
	xor.b64  	%rd10160, %rd10096, %rd10081;
	xor.b64  	%rd10161, %rd10160, %rd10111;
	xor.b64  	%rd10162, %rd10161, %rd10126;
	xor.b64  	%rd10163, %rd10162, %rd10141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd10151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7154,%dummy}, %rd10151;
	}
	shf.l.wrap.b32 	%r7155, %r7154, %r7153, 1;
	shf.l.wrap.b32 	%r7156, %r7153, %r7154, 1;
	mov.b64 	%rd10164, {%r7156, %r7155};
	xor.b64  	%rd10165, %rd10163, %rd10164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7157}, %rd10155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd10155;
	}
	shf.l.wrap.b32 	%r7159, %r7158, %r7157, 1;
	shf.l.wrap.b32 	%r7160, %r7157, %r7158, 1;
	mov.b64 	%rd10166, {%r7160, %r7159};
	xor.b64  	%rd10167, %rd10166, %rd10147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7161}, %rd10159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7162,%dummy}, %rd10159;
	}
	shf.l.wrap.b32 	%r7163, %r7162, %r7161, 1;
	shf.l.wrap.b32 	%r7164, %r7161, %r7162, 1;
	mov.b64 	%rd10168, {%r7164, %r7163};
	xor.b64  	%rd10169, %rd10168, %rd10151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7165}, %rd10163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7166,%dummy}, %rd10163;
	}
	shf.l.wrap.b32 	%r7167, %r7166, %r7165, 1;
	shf.l.wrap.b32 	%r7168, %r7165, %r7166, 1;
	mov.b64 	%rd10170, {%r7168, %r7167};
	xor.b64  	%rd10171, %rd10170, %rd10155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd10147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7170,%dummy}, %rd10147;
	}
	shf.l.wrap.b32 	%r7171, %r7170, %r7169, 1;
	shf.l.wrap.b32 	%r7172, %r7169, %r7170, 1;
	mov.b64 	%rd10172, {%r7172, %r7171};
	xor.b64  	%rd10173, %rd10159, %rd10172;
	xor.b64  	%rd10174, %rd10165, %rd10143;
	xor.b64  	%rd10175, %rd10167, %rd10072;
	xor.b64  	%rd10176, %rd10169, %rd10075;
	xor.b64  	%rd10177, %rd10171, %rd10078;
	xor.b64  	%rd10178, %rd10173, %rd10081;
	xor.b64  	%rd10179, %rd10165, %rd10084;
	xor.b64  	%rd10180, %rd10167, %rd10087;
	xor.b64  	%rd10181, %rd10169, %rd10090;
	xor.b64  	%rd10182, %rd10171, %rd10093;
	xor.b64  	%rd10183, %rd10173, %rd10096;
	xor.b64  	%rd10184, %rd10165, %rd10099;
	xor.b64  	%rd10185, %rd10167, %rd10102;
	xor.b64  	%rd10186, %rd10169, %rd10105;
	xor.b64  	%rd10187, %rd10171, %rd10108;
	xor.b64  	%rd10188, %rd10173, %rd10111;
	xor.b64  	%rd10189, %rd10165, %rd10114;
	xor.b64  	%rd10190, %rd10167, %rd10117;
	xor.b64  	%rd10191, %rd10169, %rd10120;
	xor.b64  	%rd10192, %rd10171, %rd10123;
	xor.b64  	%rd10193, %rd10173, %rd10126;
	xor.b64  	%rd10194, %rd10165, %rd10129;
	xor.b64  	%rd10195, %rd10167, %rd10132;
	xor.b64  	%rd10196, %rd10169, %rd10135;
	xor.b64  	%rd10197, %rd10171, %rd10138;
	xor.b64  	%rd10198, %rd10173, %rd10141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7173,%dummy}, %rd10180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7174}, %rd10180;
	}
	shf.r.wrap.b32 	%r7175, %r7174, %r7173, 20;
	shf.r.wrap.b32 	%r7176, %r7173, %r7174, 20;
	mov.b64 	%rd10199, {%r7176, %r7175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7177,%dummy}, %rd10186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7178}, %rd10186;
	}
	shf.r.wrap.b32 	%r7179, %r7178, %r7177, 21;
	shf.r.wrap.b32 	%r7180, %r7177, %r7178, 21;
	mov.b64 	%rd10200, {%r7180, %r7179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7181}, %rd10192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7182,%dummy}, %rd10192;
	}
	shf.l.wrap.b32 	%r7183, %r7182, %r7181, 21;
	shf.l.wrap.b32 	%r7184, %r7181, %r7182, 21;
	mov.b64 	%rd10201, {%r7184, %r7183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7185}, %rd10198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd10198;
	}
	shf.l.wrap.b32 	%r7187, %r7186, %r7185, 14;
	shf.l.wrap.b32 	%r7188, %r7185, %r7186, 14;
	mov.b64 	%rd10202, {%r7188, %r7187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7189}, %rd10177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7190,%dummy}, %rd10177;
	}
	shf.l.wrap.b32 	%r7191, %r7190, %r7189, 28;
	shf.l.wrap.b32 	%r7192, %r7189, %r7190, 28;
	mov.b64 	%rd10203, {%r7192, %r7191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7193}, %rd10183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd10183;
	}
	shf.l.wrap.b32 	%r7195, %r7194, %r7193, 20;
	shf.l.wrap.b32 	%r7196, %r7193, %r7194, 20;
	mov.b64 	%rd10204, {%r7196, %r7195};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7197}, %rd10184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7198,%dummy}, %rd10184;
	}
	shf.l.wrap.b32 	%r7199, %r7198, %r7197, 3;
	shf.l.wrap.b32 	%r7200, %r7197, %r7198, 3;
	mov.b64 	%rd10205, {%r7200, %r7199};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7201,%dummy}, %rd10190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7202}, %rd10190;
	}
	shf.r.wrap.b32 	%r7203, %r7202, %r7201, 19;
	shf.r.wrap.b32 	%r7204, %r7201, %r7202, 19;
	mov.b64 	%rd10206, {%r7204, %r7203};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd10196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd10196;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 3;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 3;
	mov.b64 	%rd10207, {%r7208, %r7207};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7209}, %rd10175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd10175;
	}
	shf.l.wrap.b32 	%r7211, %r7210, %r7209, 1;
	shf.l.wrap.b32 	%r7212, %r7209, %r7210, 1;
	mov.b64 	%rd10208, {%r7212, %r7211};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7213}, %rd10181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7214,%dummy}, %rd10181;
	}
	shf.l.wrap.b32 	%r7215, %r7214, %r7213, 6;
	shf.l.wrap.b32 	%r7216, %r7213, %r7214, 6;
	mov.b64 	%rd10209, {%r7216, %r7215};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7217}, %rd10187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd10187;
	}
	shf.l.wrap.b32 	%r7219, %r7218, %r7217, 25;
	shf.l.wrap.b32 	%r7220, %r7217, %r7218, 25;
	mov.b64 	%rd10210, {%r7220, %r7219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd10193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7222,%dummy}, %rd10193;
	}
	shf.l.wrap.b32 	%r7223, %r7222, %r7221, 8;
	shf.l.wrap.b32 	%r7224, %r7221, %r7222, 8;
	mov.b64 	%rd10211, {%r7224, %r7223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7225}, %rd10194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd10194;
	}
	shf.l.wrap.b32 	%r7227, %r7226, %r7225, 18;
	shf.l.wrap.b32 	%r7228, %r7225, %r7226, 18;
	mov.b64 	%rd10212, {%r7228, %r7227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7229}, %rd10178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7230,%dummy}, %rd10178;
	}
	shf.l.wrap.b32 	%r7231, %r7230, %r7229, 27;
	shf.l.wrap.b32 	%r7232, %r7229, %r7230, 27;
	mov.b64 	%rd10213, {%r7232, %r7231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7233,%dummy}, %rd10179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7234}, %rd10179;
	}
	shf.r.wrap.b32 	%r7235, %r7234, %r7233, 28;
	shf.r.wrap.b32 	%r7236, %r7233, %r7234, 28;
	mov.b64 	%rd10214, {%r7236, %r7235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7237}, %rd10185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7238,%dummy}, %rd10185;
	}
	shf.l.wrap.b32 	%r7239, %r7238, %r7237, 10;
	shf.l.wrap.b32 	%r7240, %r7237, %r7238, 10;
	mov.b64 	%rd10215, {%r7240, %r7239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7241}, %rd10191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd10191;
	}
	shf.l.wrap.b32 	%r7243, %r7242, %r7241, 15;
	shf.l.wrap.b32 	%r7244, %r7241, %r7242, 15;
	mov.b64 	%rd10216, {%r7244, %r7243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7245,%dummy}, %rd10197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7246}, %rd10197;
	}
	shf.r.wrap.b32 	%r7247, %r7246, %r7245, 8;
	shf.r.wrap.b32 	%r7248, %r7245, %r7246, 8;
	mov.b64 	%rd10217, {%r7248, %r7247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7249,%dummy}, %rd10176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7250}, %rd10176;
	}
	shf.r.wrap.b32 	%r7251, %r7250, %r7249, 2;
	shf.r.wrap.b32 	%r7252, %r7249, %r7250, 2;
	mov.b64 	%rd10218, {%r7252, %r7251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7253,%dummy}, %rd10182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7254}, %rd10182;
	}
	shf.r.wrap.b32 	%r7255, %r7254, %r7253, 9;
	shf.r.wrap.b32 	%r7256, %r7253, %r7254, 9;
	mov.b64 	%rd10219, {%r7256, %r7255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7257,%dummy}, %rd10188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7258}, %rd10188;
	}
	shf.r.wrap.b32 	%r7259, %r7258, %r7257, 25;
	shf.r.wrap.b32 	%r7260, %r7257, %r7258, 25;
	mov.b64 	%rd10220, {%r7260, %r7259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7261,%dummy}, %rd10189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7262}, %rd10189;
	}
	shf.r.wrap.b32 	%r7263, %r7262, %r7261, 23;
	shf.r.wrap.b32 	%r7264, %r7261, %r7262, 23;
	mov.b64 	%rd10221, {%r7264, %r7263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7265}, %rd10195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd10195;
	}
	shf.l.wrap.b32 	%r7267, %r7266, %r7265, 2;
	shf.l.wrap.b32 	%r7268, %r7265, %r7266, 2;
	mov.b64 	%rd10222, {%r7268, %r7267};
	not.b64 	%rd10223, %rd10199;
	and.b64  	%rd10224, %rd10200, %rd10223;
	xor.b64  	%rd10225, %rd10224, %rd10174;
	not.b64 	%rd10226, %rd10200;
	and.b64  	%rd10227, %rd10201, %rd10226;
	xor.b64  	%rd10228, %rd10227, %rd10199;
	not.b64 	%rd10229, %rd10201;
	and.b64  	%rd10230, %rd10202, %rd10229;
	xor.b64  	%rd10231, %rd10230, %rd10200;
	not.b64 	%rd10232, %rd10202;
	and.b64  	%rd10233, %rd10174, %rd10232;
	xor.b64  	%rd10234, %rd10233, %rd10201;
	not.b64 	%rd10235, %rd10174;
	and.b64  	%rd10236, %rd10199, %rd10235;
	xor.b64  	%rd10237, %rd10236, %rd10202;
	not.b64 	%rd10238, %rd10204;
	and.b64  	%rd10239, %rd10205, %rd10238;
	xor.b64  	%rd10240, %rd10239, %rd10203;
	not.b64 	%rd10241, %rd10205;
	and.b64  	%rd10242, %rd10206, %rd10241;
	xor.b64  	%rd10243, %rd10242, %rd10204;
	not.b64 	%rd10244, %rd10206;
	and.b64  	%rd10245, %rd10207, %rd10244;
	xor.b64  	%rd10246, %rd10245, %rd10205;
	not.b64 	%rd10247, %rd10207;
	and.b64  	%rd10248, %rd10203, %rd10247;
	xor.b64  	%rd10249, %rd10248, %rd10206;
	not.b64 	%rd10250, %rd10203;
	and.b64  	%rd10251, %rd10204, %rd10250;
	xor.b64  	%rd10252, %rd10251, %rd10207;
	not.b64 	%rd10253, %rd10209;
	and.b64  	%rd10254, %rd10210, %rd10253;
	xor.b64  	%rd10255, %rd10254, %rd10208;
	not.b64 	%rd10256, %rd10210;
	and.b64  	%rd10257, %rd10211, %rd10256;
	xor.b64  	%rd10258, %rd10257, %rd10209;
	not.b64 	%rd10259, %rd10211;
	and.b64  	%rd10260, %rd10212, %rd10259;
	xor.b64  	%rd10261, %rd10260, %rd10210;
	not.b64 	%rd10262, %rd10212;
	and.b64  	%rd10263, %rd10208, %rd10262;
	xor.b64  	%rd10264, %rd10263, %rd10211;
	not.b64 	%rd10265, %rd10208;
	and.b64  	%rd10266, %rd10209, %rd10265;
	xor.b64  	%rd10267, %rd10266, %rd10212;
	not.b64 	%rd10268, %rd10214;
	and.b64  	%rd10269, %rd10215, %rd10268;
	xor.b64  	%rd10270, %rd10269, %rd10213;
	not.b64 	%rd10271, %rd10215;
	and.b64  	%rd10272, %rd10216, %rd10271;
	xor.b64  	%rd10273, %rd10272, %rd10214;
	not.b64 	%rd10274, %rd10216;
	and.b64  	%rd10275, %rd10217, %rd10274;
	xor.b64  	%rd10276, %rd10275, %rd10215;
	not.b64 	%rd10277, %rd10217;
	and.b64  	%rd10278, %rd10213, %rd10277;
	xor.b64  	%rd10279, %rd10278, %rd10216;
	not.b64 	%rd10280, %rd10213;
	and.b64  	%rd10281, %rd10214, %rd10280;
	xor.b64  	%rd10282, %rd10281, %rd10217;
	not.b64 	%rd10283, %rd10219;
	and.b64  	%rd10284, %rd10220, %rd10283;
	xor.b64  	%rd10285, %rd10284, %rd10218;
	not.b64 	%rd10286, %rd10220;
	and.b64  	%rd10287, %rd10221, %rd10286;
	xor.b64  	%rd10288, %rd10287, %rd10219;
	not.b64 	%rd10289, %rd10221;
	and.b64  	%rd10290, %rd10222, %rd10289;
	xor.b64  	%rd10291, %rd10290, %rd10220;
	not.b64 	%rd10292, %rd10222;
	and.b64  	%rd10293, %rd10218, %rd10292;
	xor.b64  	%rd10294, %rd10293, %rd10221;
	not.b64 	%rd10295, %rd10218;
	and.b64  	%rd10296, %rd10219, %rd10295;
	xor.b64  	%rd10297, %rd10296, %rd10222;
	xor.b64  	%rd10299, %rd10225, %rd29;
	xor.b64  	%rd10300, %rd10240, %rd10299;
	xor.b64  	%rd10301, %rd10300, %rd10255;
	xor.b64  	%rd10302, %rd10301, %rd10270;
	xor.b64  	%rd10303, %rd10302, %rd10285;
	xor.b64  	%rd10304, %rd10243, %rd10228;
	xor.b64  	%rd10305, %rd10304, %rd10258;
	xor.b64  	%rd10306, %rd10305, %rd10273;
	xor.b64  	%rd10307, %rd10306, %rd10288;
	xor.b64  	%rd10308, %rd10246, %rd10231;
	xor.b64  	%rd10309, %rd10308, %rd10261;
	xor.b64  	%rd10310, %rd10309, %rd10276;
	xor.b64  	%rd10311, %rd10310, %rd10291;
	xor.b64  	%rd10312, %rd10249, %rd10234;
	xor.b64  	%rd10313, %rd10312, %rd10264;
	xor.b64  	%rd10314, %rd10313, %rd10279;
	xor.b64  	%rd10315, %rd10314, %rd10294;
	xor.b64  	%rd10316, %rd10252, %rd10237;
	xor.b64  	%rd10317, %rd10316, %rd10267;
	xor.b64  	%rd10318, %rd10317, %rd10282;
	xor.b64  	%rd10319, %rd10318, %rd10297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7269}, %rd10307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7270,%dummy}, %rd10307;
	}
	shf.l.wrap.b32 	%r7271, %r7270, %r7269, 1;
	shf.l.wrap.b32 	%r7272, %r7269, %r7270, 1;
	mov.b64 	%rd10320, {%r7272, %r7271};
	xor.b64  	%rd10321, %rd10319, %rd10320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7273}, %rd10311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd10311;
	}
	shf.l.wrap.b32 	%r7275, %r7274, %r7273, 1;
	shf.l.wrap.b32 	%r7276, %r7273, %r7274, 1;
	mov.b64 	%rd10322, {%r7276, %r7275};
	xor.b64  	%rd10323, %rd10322, %rd10303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7277}, %rd10315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7278,%dummy}, %rd10315;
	}
	shf.l.wrap.b32 	%r7279, %r7278, %r7277, 1;
	shf.l.wrap.b32 	%r7280, %r7277, %r7278, 1;
	mov.b64 	%rd10324, {%r7280, %r7279};
	xor.b64  	%rd10325, %rd10324, %rd10307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7281}, %rd10319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd10319;
	}
	shf.l.wrap.b32 	%r7283, %r7282, %r7281, 1;
	shf.l.wrap.b32 	%r7284, %r7281, %r7282, 1;
	mov.b64 	%rd10326, {%r7284, %r7283};
	xor.b64  	%rd10327, %rd10326, %rd10311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7285}, %rd10303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7286,%dummy}, %rd10303;
	}
	shf.l.wrap.b32 	%r7287, %r7286, %r7285, 1;
	shf.l.wrap.b32 	%r7288, %r7285, %r7286, 1;
	mov.b64 	%rd10328, {%r7288, %r7287};
	xor.b64  	%rd10329, %rd10315, %rd10328;
	xor.b64  	%rd10330, %rd10321, %rd10299;
	xor.b64  	%rd10331, %rd10323, %rd10228;
	xor.b64  	%rd10332, %rd10325, %rd10231;
	xor.b64  	%rd10333, %rd10327, %rd10234;
	xor.b64  	%rd10334, %rd10329, %rd10237;
	xor.b64  	%rd10335, %rd10321, %rd10240;
	xor.b64  	%rd10336, %rd10323, %rd10243;
	xor.b64  	%rd10337, %rd10325, %rd10246;
	xor.b64  	%rd10338, %rd10327, %rd10249;
	xor.b64  	%rd10339, %rd10329, %rd10252;
	xor.b64  	%rd10340, %rd10321, %rd10255;
	xor.b64  	%rd10341, %rd10323, %rd10258;
	xor.b64  	%rd10342, %rd10325, %rd10261;
	xor.b64  	%rd10343, %rd10327, %rd10264;
	xor.b64  	%rd10344, %rd10329, %rd10267;
	xor.b64  	%rd10345, %rd10321, %rd10270;
	xor.b64  	%rd10346, %rd10323, %rd10273;
	xor.b64  	%rd10347, %rd10325, %rd10276;
	xor.b64  	%rd10348, %rd10327, %rd10279;
	xor.b64  	%rd10349, %rd10329, %rd10282;
	xor.b64  	%rd10350, %rd10321, %rd10285;
	xor.b64  	%rd10351, %rd10323, %rd10288;
	xor.b64  	%rd10352, %rd10325, %rd10291;
	xor.b64  	%rd10353, %rd10327, %rd10294;
	xor.b64  	%rd10354, %rd10329, %rd10297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7289,%dummy}, %rd10336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7290}, %rd10336;
	}
	shf.r.wrap.b32 	%r7291, %r7290, %r7289, 20;
	shf.r.wrap.b32 	%r7292, %r7289, %r7290, 20;
	mov.b64 	%rd10355, {%r7292, %r7291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7293,%dummy}, %rd10342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7294}, %rd10342;
	}
	shf.r.wrap.b32 	%r7295, %r7294, %r7293, 21;
	shf.r.wrap.b32 	%r7296, %r7293, %r7294, 21;
	mov.b64 	%rd10356, {%r7296, %r7295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7297}, %rd10348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd10348;
	}
	shf.l.wrap.b32 	%r7299, %r7298, %r7297, 21;
	shf.l.wrap.b32 	%r7300, %r7297, %r7298, 21;
	mov.b64 	%rd10357, {%r7300, %r7299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7301}, %rd10354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7302,%dummy}, %rd10354;
	}
	shf.l.wrap.b32 	%r7303, %r7302, %r7301, 14;
	shf.l.wrap.b32 	%r7304, %r7301, %r7302, 14;
	mov.b64 	%rd10358, {%r7304, %r7303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7305}, %rd10333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd10333;
	}
	shf.l.wrap.b32 	%r7307, %r7306, %r7305, 28;
	shf.l.wrap.b32 	%r7308, %r7305, %r7306, 28;
	mov.b64 	%rd10359, {%r7308, %r7307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7309}, %rd10339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7310,%dummy}, %rd10339;
	}
	shf.l.wrap.b32 	%r7311, %r7310, %r7309, 20;
	shf.l.wrap.b32 	%r7312, %r7309, %r7310, 20;
	mov.b64 	%rd10360, {%r7312, %r7311};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7313}, %rd10340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd10340;
	}
	shf.l.wrap.b32 	%r7315, %r7314, %r7313, 3;
	shf.l.wrap.b32 	%r7316, %r7313, %r7314, 3;
	mov.b64 	%rd10361, {%r7316, %r7315};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7317,%dummy}, %rd10346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7318}, %rd10346;
	}
	shf.r.wrap.b32 	%r7319, %r7318, %r7317, 19;
	shf.r.wrap.b32 	%r7320, %r7317, %r7318, 19;
	mov.b64 	%rd10362, {%r7320, %r7319};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7321,%dummy}, %rd10352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7322}, %rd10352;
	}
	shf.r.wrap.b32 	%r7323, %r7322, %r7321, 3;
	shf.r.wrap.b32 	%r7324, %r7321, %r7322, 3;
	mov.b64 	%rd10363, {%r7324, %r7323};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7325}, %rd10331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7326,%dummy}, %rd10331;
	}
	shf.l.wrap.b32 	%r7327, %r7326, %r7325, 1;
	shf.l.wrap.b32 	%r7328, %r7325, %r7326, 1;
	mov.b64 	%rd10364, {%r7328, %r7327};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7329}, %rd10337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd10337;
	}
	shf.l.wrap.b32 	%r7331, %r7330, %r7329, 6;
	shf.l.wrap.b32 	%r7332, %r7329, %r7330, 6;
	mov.b64 	%rd10365, {%r7332, %r7331};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7333}, %rd10343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7334,%dummy}, %rd10343;
	}
	shf.l.wrap.b32 	%r7335, %r7334, %r7333, 25;
	shf.l.wrap.b32 	%r7336, %r7333, %r7334, 25;
	mov.b64 	%rd10366, {%r7336, %r7335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7337}, %rd10349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd10349;
	}
	shf.l.wrap.b32 	%r7339, %r7338, %r7337, 8;
	shf.l.wrap.b32 	%r7340, %r7337, %r7338, 8;
	mov.b64 	%rd10367, {%r7340, %r7339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7341}, %rd10350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7342,%dummy}, %rd10350;
	}
	shf.l.wrap.b32 	%r7343, %r7342, %r7341, 18;
	shf.l.wrap.b32 	%r7344, %r7341, %r7342, 18;
	mov.b64 	%rd10368, {%r7344, %r7343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7345}, %rd10334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd10334;
	}
	shf.l.wrap.b32 	%r7347, %r7346, %r7345, 27;
	shf.l.wrap.b32 	%r7348, %r7345, %r7346, 27;
	mov.b64 	%rd10369, {%r7348, %r7347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7349,%dummy}, %rd10335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7350}, %rd10335;
	}
	shf.r.wrap.b32 	%r7351, %r7350, %r7349, 28;
	shf.r.wrap.b32 	%r7352, %r7349, %r7350, 28;
	mov.b64 	%rd10370, {%r7352, %r7351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7353}, %rd10341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd10341;
	}
	shf.l.wrap.b32 	%r7355, %r7354, %r7353, 10;
	shf.l.wrap.b32 	%r7356, %r7353, %r7354, 10;
	mov.b64 	%rd10371, {%r7356, %r7355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7357}, %rd10347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7358,%dummy}, %rd10347;
	}
	shf.l.wrap.b32 	%r7359, %r7358, %r7357, 15;
	shf.l.wrap.b32 	%r7360, %r7357, %r7358, 15;
	mov.b64 	%rd10372, {%r7360, %r7359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7361,%dummy}, %rd10353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7362}, %rd10353;
	}
	shf.r.wrap.b32 	%r7363, %r7362, %r7361, 8;
	shf.r.wrap.b32 	%r7364, %r7361, %r7362, 8;
	mov.b64 	%rd10373, {%r7364, %r7363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7365,%dummy}, %rd10332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7366}, %rd10332;
	}
	shf.r.wrap.b32 	%r7367, %r7366, %r7365, 2;
	shf.r.wrap.b32 	%r7368, %r7365, %r7366, 2;
	mov.b64 	%rd10374, {%r7368, %r7367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7369,%dummy}, %rd10338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7370}, %rd10338;
	}
	shf.r.wrap.b32 	%r7371, %r7370, %r7369, 9;
	shf.r.wrap.b32 	%r7372, %r7369, %r7370, 9;
	mov.b64 	%rd10375, {%r7372, %r7371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7373,%dummy}, %rd10344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7374}, %rd10344;
	}
	shf.r.wrap.b32 	%r7375, %r7374, %r7373, 25;
	shf.r.wrap.b32 	%r7376, %r7373, %r7374, 25;
	mov.b64 	%rd10376, {%r7376, %r7375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7377,%dummy}, %rd10345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7378}, %rd10345;
	}
	shf.r.wrap.b32 	%r7379, %r7378, %r7377, 23;
	shf.r.wrap.b32 	%r7380, %r7377, %r7378, 23;
	mov.b64 	%rd10377, {%r7380, %r7379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7381}, %rd10351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7382,%dummy}, %rd10351;
	}
	shf.l.wrap.b32 	%r7383, %r7382, %r7381, 2;
	shf.l.wrap.b32 	%r7384, %r7381, %r7382, 2;
	mov.b64 	%rd10378, {%r7384, %r7383};
	not.b64 	%rd10379, %rd10355;
	and.b64  	%rd10380, %rd10356, %rd10379;
	xor.b64  	%rd10381, %rd10380, %rd10330;
	not.b64 	%rd10382, %rd10356;
	and.b64  	%rd10383, %rd10357, %rd10382;
	xor.b64  	%rd10384, %rd10383, %rd10355;
	not.b64 	%rd10385, %rd10357;
	and.b64  	%rd10386, %rd10358, %rd10385;
	xor.b64  	%rd10387, %rd10386, %rd10356;
	not.b64 	%rd10388, %rd10358;
	and.b64  	%rd10389, %rd10330, %rd10388;
	xor.b64  	%rd10390, %rd10389, %rd10357;
	not.b64 	%rd10391, %rd10330;
	and.b64  	%rd10392, %rd10355, %rd10391;
	xor.b64  	%rd10393, %rd10392, %rd10358;
	not.b64 	%rd10394, %rd10360;
	and.b64  	%rd10395, %rd10361, %rd10394;
	xor.b64  	%rd10396, %rd10395, %rd10359;
	not.b64 	%rd10397, %rd10361;
	and.b64  	%rd10398, %rd10362, %rd10397;
	xor.b64  	%rd10399, %rd10398, %rd10360;
	not.b64 	%rd10400, %rd10362;
	and.b64  	%rd10401, %rd10363, %rd10400;
	xor.b64  	%rd10402, %rd10401, %rd10361;
	not.b64 	%rd10403, %rd10363;
	and.b64  	%rd10404, %rd10359, %rd10403;
	xor.b64  	%rd10405, %rd10404, %rd10362;
	not.b64 	%rd10406, %rd10359;
	and.b64  	%rd10407, %rd10360, %rd10406;
	xor.b64  	%rd10408, %rd10407, %rd10363;
	not.b64 	%rd10409, %rd10365;
	and.b64  	%rd10410, %rd10366, %rd10409;
	xor.b64  	%rd10411, %rd10410, %rd10364;
	not.b64 	%rd10412, %rd10366;
	and.b64  	%rd10413, %rd10367, %rd10412;
	xor.b64  	%rd10414, %rd10413, %rd10365;
	not.b64 	%rd10415, %rd10367;
	and.b64  	%rd10416, %rd10368, %rd10415;
	xor.b64  	%rd10417, %rd10416, %rd10366;
	not.b64 	%rd10418, %rd10368;
	and.b64  	%rd10419, %rd10364, %rd10418;
	xor.b64  	%rd10420, %rd10419, %rd10367;
	not.b64 	%rd10421, %rd10364;
	and.b64  	%rd10422, %rd10365, %rd10421;
	xor.b64  	%rd10423, %rd10422, %rd10368;
	not.b64 	%rd10424, %rd10370;
	and.b64  	%rd10425, %rd10371, %rd10424;
	xor.b64  	%rd10426, %rd10425, %rd10369;
	not.b64 	%rd10427, %rd10371;
	and.b64  	%rd10428, %rd10372, %rd10427;
	xor.b64  	%rd10429, %rd10428, %rd10370;
	not.b64 	%rd10430, %rd10372;
	and.b64  	%rd10431, %rd10373, %rd10430;
	xor.b64  	%rd10432, %rd10431, %rd10371;
	not.b64 	%rd10433, %rd10373;
	and.b64  	%rd10434, %rd10369, %rd10433;
	xor.b64  	%rd10435, %rd10434, %rd10372;
	not.b64 	%rd10436, %rd10369;
	and.b64  	%rd10437, %rd10370, %rd10436;
	xor.b64  	%rd10438, %rd10437, %rd10373;
	not.b64 	%rd10439, %rd10375;
	and.b64  	%rd10440, %rd10376, %rd10439;
	xor.b64  	%rd10441, %rd10440, %rd10374;
	not.b64 	%rd10442, %rd10376;
	and.b64  	%rd10443, %rd10377, %rd10442;
	xor.b64  	%rd10444, %rd10443, %rd10375;
	not.b64 	%rd10445, %rd10377;
	and.b64  	%rd10446, %rd10378, %rd10445;
	xor.b64  	%rd10447, %rd10446, %rd10376;
	not.b64 	%rd10448, %rd10378;
	and.b64  	%rd10449, %rd10374, %rd10448;
	xor.b64  	%rd10450, %rd10449, %rd10377;
	not.b64 	%rd10451, %rd10374;
	and.b64  	%rd10452, %rd10375, %rd10451;
	xor.b64  	%rd10453, %rd10452, %rd10378;
	xor.b64  	%rd10455, %rd10381, %rd30;
	xor.b64  	%rd10456, %rd10396, %rd10455;
	xor.b64  	%rd10457, %rd10456, %rd10411;
	xor.b64  	%rd10458, %rd10457, %rd10426;
	xor.b64  	%rd10459, %rd10458, %rd10441;
	xor.b64  	%rd10460, %rd10399, %rd10384;
	xor.b64  	%rd10461, %rd10460, %rd10414;
	xor.b64  	%rd10462, %rd10461, %rd10429;
	xor.b64  	%rd10463, %rd10462, %rd10444;
	xor.b64  	%rd10464, %rd10402, %rd10387;
	xor.b64  	%rd10465, %rd10464, %rd10417;
	xor.b64  	%rd10466, %rd10465, %rd10432;
	xor.b64  	%rd10467, %rd10466, %rd10447;
	xor.b64  	%rd10468, %rd10405, %rd10390;
	xor.b64  	%rd10469, %rd10468, %rd10420;
	xor.b64  	%rd10470, %rd10469, %rd10435;
	xor.b64  	%rd10471, %rd10470, %rd10450;
	xor.b64  	%rd10472, %rd10408, %rd10393;
	xor.b64  	%rd10473, %rd10472, %rd10423;
	xor.b64  	%rd10474, %rd10473, %rd10438;
	xor.b64  	%rd10475, %rd10474, %rd10453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7385}, %rd10463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd10463;
	}
	shf.l.wrap.b32 	%r7387, %r7386, %r7385, 1;
	shf.l.wrap.b32 	%r7388, %r7385, %r7386, 1;
	mov.b64 	%rd10476, {%r7388, %r7387};
	xor.b64  	%rd10477, %rd10475, %rd10476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7389}, %rd10467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7390,%dummy}, %rd10467;
	}
	shf.l.wrap.b32 	%r7391, %r7390, %r7389, 1;
	shf.l.wrap.b32 	%r7392, %r7389, %r7390, 1;
	mov.b64 	%rd10478, {%r7392, %r7391};
	xor.b64  	%rd10479, %rd10478, %rd10459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7393}, %rd10471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd10471;
	}
	shf.l.wrap.b32 	%r7395, %r7394, %r7393, 1;
	shf.l.wrap.b32 	%r7396, %r7393, %r7394, 1;
	mov.b64 	%rd10480, {%r7396, %r7395};
	xor.b64  	%rd10481, %rd10480, %rd10463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7397}, %rd10475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7398,%dummy}, %rd10475;
	}
	shf.l.wrap.b32 	%r7399, %r7398, %r7397, 1;
	shf.l.wrap.b32 	%r7400, %r7397, %r7398, 1;
	mov.b64 	%rd10482, {%r7400, %r7399};
	xor.b64  	%rd10483, %rd10482, %rd10467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7401}, %rd10459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd10459;
	}
	shf.l.wrap.b32 	%r7403, %r7402, %r7401, 1;
	shf.l.wrap.b32 	%r7404, %r7401, %r7402, 1;
	mov.b64 	%rd10484, {%r7404, %r7403};
	xor.b64  	%rd10485, %rd10471, %rd10484;
	xor.b64  	%rd10486, %rd10477, %rd10455;
	xor.b64  	%rd10487, %rd10479, %rd10384;
	xor.b64  	%rd10488, %rd10481, %rd10387;
	xor.b64  	%rd10489, %rd10483, %rd10390;
	xor.b64  	%rd10490, %rd10485, %rd10393;
	xor.b64  	%rd10491, %rd10477, %rd10396;
	xor.b64  	%rd10492, %rd10479, %rd10399;
	xor.b64  	%rd10493, %rd10481, %rd10402;
	xor.b64  	%rd10494, %rd10483, %rd10405;
	xor.b64  	%rd10495, %rd10485, %rd10408;
	xor.b64  	%rd10496, %rd10477, %rd10411;
	xor.b64  	%rd10497, %rd10479, %rd10414;
	xor.b64  	%rd10498, %rd10481, %rd10417;
	xor.b64  	%rd10499, %rd10483, %rd10420;
	xor.b64  	%rd10500, %rd10485, %rd10423;
	xor.b64  	%rd10501, %rd10477, %rd10426;
	xor.b64  	%rd10502, %rd10479, %rd10429;
	xor.b64  	%rd10503, %rd10481, %rd10432;
	xor.b64  	%rd10504, %rd10483, %rd10435;
	xor.b64  	%rd10505, %rd10485, %rd10438;
	xor.b64  	%rd10506, %rd10477, %rd10441;
	xor.b64  	%rd10507, %rd10479, %rd10444;
	xor.b64  	%rd10508, %rd10481, %rd10447;
	xor.b64  	%rd10509, %rd10483, %rd10450;
	xor.b64  	%rd10510, %rd10485, %rd10453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7405,%dummy}, %rd10492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7406}, %rd10492;
	}
	shf.r.wrap.b32 	%r7407, %r7406, %r7405, 20;
	shf.r.wrap.b32 	%r7408, %r7405, %r7406, 20;
	mov.b64 	%rd10511, {%r7408, %r7407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7409,%dummy}, %rd10498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7410}, %rd10498;
	}
	shf.r.wrap.b32 	%r7411, %r7410, %r7409, 21;
	shf.r.wrap.b32 	%r7412, %r7409, %r7410, 21;
	mov.b64 	%rd10512, {%r7412, %r7411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7413}, %rd10504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7414,%dummy}, %rd10504;
	}
	shf.l.wrap.b32 	%r7415, %r7414, %r7413, 21;
	shf.l.wrap.b32 	%r7416, %r7413, %r7414, 21;
	mov.b64 	%rd10513, {%r7416, %r7415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7417}, %rd10510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd10510;
	}
	shf.l.wrap.b32 	%r7419, %r7418, %r7417, 14;
	shf.l.wrap.b32 	%r7420, %r7417, %r7418, 14;
	mov.b64 	%rd10514, {%r7420, %r7419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7421}, %rd10489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7422,%dummy}, %rd10489;
	}
	shf.l.wrap.b32 	%r7423, %r7422, %r7421, 28;
	shf.l.wrap.b32 	%r7424, %r7421, %r7422, 28;
	mov.b64 	%rd10515, {%r7424, %r7423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7425}, %rd10495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd10495;
	}
	shf.l.wrap.b32 	%r7427, %r7426, %r7425, 20;
	shf.l.wrap.b32 	%r7428, %r7425, %r7426, 20;
	mov.b64 	%rd10516, {%r7428, %r7427};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7429}, %rd10496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7430,%dummy}, %rd10496;
	}
	shf.l.wrap.b32 	%r7431, %r7430, %r7429, 3;
	shf.l.wrap.b32 	%r7432, %r7429, %r7430, 3;
	mov.b64 	%rd10517, {%r7432, %r7431};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7433,%dummy}, %rd10502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7434}, %rd10502;
	}
	shf.r.wrap.b32 	%r7435, %r7434, %r7433, 19;
	shf.r.wrap.b32 	%r7436, %r7433, %r7434, 19;
	mov.b64 	%rd10518, {%r7436, %r7435};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7437,%dummy}, %rd10508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7438}, %rd10508;
	}
	shf.r.wrap.b32 	%r7439, %r7438, %r7437, 3;
	shf.r.wrap.b32 	%r7440, %r7437, %r7438, 3;
	mov.b64 	%rd10519, {%r7440, %r7439};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7441}, %rd10487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7442,%dummy}, %rd10487;
	}
	shf.l.wrap.b32 	%r7443, %r7442, %r7441, 1;
	shf.l.wrap.b32 	%r7444, %r7441, %r7442, 1;
	mov.b64 	%rd10520, {%r7444, %r7443};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7445}, %rd10493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7446,%dummy}, %rd10493;
	}
	shf.l.wrap.b32 	%r7447, %r7446, %r7445, 6;
	shf.l.wrap.b32 	%r7448, %r7445, %r7446, 6;
	mov.b64 	%rd10521, {%r7448, %r7447};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7449}, %rd10499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7450,%dummy}, %rd10499;
	}
	shf.l.wrap.b32 	%r7451, %r7450, %r7449, 25;
	shf.l.wrap.b32 	%r7452, %r7449, %r7450, 25;
	mov.b64 	%rd10522, {%r7452, %r7451};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7453}, %rd10505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7454,%dummy}, %rd10505;
	}
	shf.l.wrap.b32 	%r7455, %r7454, %r7453, 8;
	shf.l.wrap.b32 	%r7456, %r7453, %r7454, 8;
	mov.b64 	%rd10523, {%r7456, %r7455};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7457}, %rd10506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7458,%dummy}, %rd10506;
	}
	shf.l.wrap.b32 	%r7459, %r7458, %r7457, 18;
	shf.l.wrap.b32 	%r7460, %r7457, %r7458, 18;
	mov.b64 	%rd10524, {%r7460, %r7459};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7461}, %rd10490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7462,%dummy}, %rd10490;
	}
	shf.l.wrap.b32 	%r7463, %r7462, %r7461, 27;
	shf.l.wrap.b32 	%r7464, %r7461, %r7462, 27;
	mov.b64 	%rd10525, {%r7464, %r7463};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7465,%dummy}, %rd10491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7466}, %rd10491;
	}
	shf.r.wrap.b32 	%r7467, %r7466, %r7465, 28;
	shf.r.wrap.b32 	%r7468, %r7465, %r7466, 28;
	mov.b64 	%rd10526, {%r7468, %r7467};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7469}, %rd10497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7470,%dummy}, %rd10497;
	}
	shf.l.wrap.b32 	%r7471, %r7470, %r7469, 10;
	shf.l.wrap.b32 	%r7472, %r7469, %r7470, 10;
	mov.b64 	%rd10527, {%r7472, %r7471};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7473}, %rd10503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7474,%dummy}, %rd10503;
	}
	shf.l.wrap.b32 	%r7475, %r7474, %r7473, 15;
	shf.l.wrap.b32 	%r7476, %r7473, %r7474, 15;
	mov.b64 	%rd10528, {%r7476, %r7475};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7477,%dummy}, %rd10509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7478}, %rd10509;
	}
	shf.r.wrap.b32 	%r7479, %r7478, %r7477, 8;
	shf.r.wrap.b32 	%r7480, %r7477, %r7478, 8;
	mov.b64 	%rd10529, {%r7480, %r7479};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7481,%dummy}, %rd10488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7482}, %rd10488;
	}
	shf.r.wrap.b32 	%r7483, %r7482, %r7481, 2;
	shf.r.wrap.b32 	%r7484, %r7481, %r7482, 2;
	mov.b64 	%rd10530, {%r7484, %r7483};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7485,%dummy}, %rd10494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7486}, %rd10494;
	}
	shf.r.wrap.b32 	%r7487, %r7486, %r7485, 9;
	shf.r.wrap.b32 	%r7488, %r7485, %r7486, 9;
	mov.b64 	%rd10531, {%r7488, %r7487};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7489,%dummy}, %rd10500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7490}, %rd10500;
	}
	shf.r.wrap.b32 	%r7491, %r7490, %r7489, 25;
	shf.r.wrap.b32 	%r7492, %r7489, %r7490, 25;
	mov.b64 	%rd10532, {%r7492, %r7491};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7493,%dummy}, %rd10501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7494}, %rd10501;
	}
	shf.r.wrap.b32 	%r7495, %r7494, %r7493, 23;
	shf.r.wrap.b32 	%r7496, %r7493, %r7494, 23;
	mov.b64 	%rd10533, {%r7496, %r7495};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7497}, %rd10507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7498,%dummy}, %rd10507;
	}
	shf.l.wrap.b32 	%r7499, %r7498, %r7497, 2;
	shf.l.wrap.b32 	%r7500, %r7497, %r7498, 2;
	mov.b64 	%rd10534, {%r7500, %r7499};
	not.b64 	%rd10535, %rd10511;
	and.b64  	%rd10536, %rd10512, %rd10535;
	xor.b64  	%rd10537, %rd10536, %rd10486;
	not.b64 	%rd10538, %rd10512;
	and.b64  	%rd10539, %rd10513, %rd10538;
	xor.b64  	%rd10540, %rd10539, %rd10511;
	not.b64 	%rd10541, %rd10513;
	and.b64  	%rd10542, %rd10514, %rd10541;
	xor.b64  	%rd10543, %rd10542, %rd10512;
	not.b64 	%rd10544, %rd10514;
	and.b64  	%rd10545, %rd10486, %rd10544;
	xor.b64  	%rd10546, %rd10545, %rd10513;
	not.b64 	%rd10547, %rd10486;
	and.b64  	%rd10548, %rd10511, %rd10547;
	xor.b64  	%rd10549, %rd10548, %rd10514;
	not.b64 	%rd10550, %rd10516;
	and.b64  	%rd10551, %rd10517, %rd10550;
	xor.b64  	%rd10552, %rd10551, %rd10515;
	not.b64 	%rd10553, %rd10517;
	and.b64  	%rd10554, %rd10518, %rd10553;
	xor.b64  	%rd10555, %rd10554, %rd10516;
	not.b64 	%rd10556, %rd10518;
	and.b64  	%rd10557, %rd10519, %rd10556;
	xor.b64  	%rd10558, %rd10557, %rd10517;
	not.b64 	%rd10559, %rd10519;
	and.b64  	%rd10560, %rd10515, %rd10559;
	xor.b64  	%rd10561, %rd10560, %rd10518;
	not.b64 	%rd10562, %rd10515;
	and.b64  	%rd10563, %rd10516, %rd10562;
	xor.b64  	%rd10564, %rd10563, %rd10519;
	not.b64 	%rd10565, %rd10521;
	and.b64  	%rd10566, %rd10522, %rd10565;
	xor.b64  	%rd10567, %rd10566, %rd10520;
	not.b64 	%rd10568, %rd10522;
	and.b64  	%rd10569, %rd10523, %rd10568;
	xor.b64  	%rd10570, %rd10569, %rd10521;
	not.b64 	%rd10571, %rd10523;
	and.b64  	%rd10572, %rd10524, %rd10571;
	xor.b64  	%rd10573, %rd10572, %rd10522;
	not.b64 	%rd10574, %rd10524;
	and.b64  	%rd10575, %rd10520, %rd10574;
	xor.b64  	%rd10576, %rd10575, %rd10523;
	not.b64 	%rd10577, %rd10520;
	and.b64  	%rd10578, %rd10521, %rd10577;
	xor.b64  	%rd10579, %rd10578, %rd10524;
	not.b64 	%rd10580, %rd10526;
	and.b64  	%rd10581, %rd10527, %rd10580;
	xor.b64  	%rd10582, %rd10581, %rd10525;
	not.b64 	%rd10583, %rd10527;
	and.b64  	%rd10584, %rd10528, %rd10583;
	xor.b64  	%rd10585, %rd10584, %rd10526;
	not.b64 	%rd10586, %rd10528;
	and.b64  	%rd10587, %rd10529, %rd10586;
	xor.b64  	%rd10588, %rd10587, %rd10527;
	not.b64 	%rd10589, %rd10529;
	and.b64  	%rd10590, %rd10525, %rd10589;
	xor.b64  	%rd10591, %rd10590, %rd10528;
	not.b64 	%rd10592, %rd10525;
	and.b64  	%rd10593, %rd10526, %rd10592;
	xor.b64  	%rd10594, %rd10593, %rd10529;
	not.b64 	%rd10595, %rd10531;
	and.b64  	%rd10596, %rd10532, %rd10595;
	xor.b64  	%rd10597, %rd10596, %rd10530;
	not.b64 	%rd10598, %rd10532;
	and.b64  	%rd10599, %rd10533, %rd10598;
	xor.b64  	%rd10600, %rd10599, %rd10531;
	not.b64 	%rd10601, %rd10533;
	and.b64  	%rd10602, %rd10534, %rd10601;
	xor.b64  	%rd10603, %rd10602, %rd10532;
	not.b64 	%rd10604, %rd10534;
	and.b64  	%rd10605, %rd10530, %rd10604;
	xor.b64  	%rd10606, %rd10605, %rd10533;
	not.b64 	%rd10607, %rd10530;
	and.b64  	%rd10608, %rd10531, %rd10607;
	xor.b64  	%rd10609, %rd10608, %rd10534;
	xor.b64  	%rd10611, %rd10537, %rd31;
	xor.b64  	%rd10612, %rd10552, %rd10611;
	xor.b64  	%rd10613, %rd10612, %rd10567;
	xor.b64  	%rd10614, %rd10613, %rd10582;
	xor.b64  	%rd10615, %rd10614, %rd10597;
	xor.b64  	%rd10616, %rd10555, %rd10540;
	xor.b64  	%rd10617, %rd10616, %rd10570;
	xor.b64  	%rd10618, %rd10617, %rd10585;
	xor.b64  	%rd10619, %rd10618, %rd10600;
	xor.b64  	%rd10620, %rd10558, %rd10543;
	xor.b64  	%rd10621, %rd10620, %rd10573;
	xor.b64  	%rd10622, %rd10621, %rd10588;
	xor.b64  	%rd10623, %rd10622, %rd10603;
	xor.b64  	%rd10624, %rd10561, %rd10546;
	xor.b64  	%rd10625, %rd10624, %rd10576;
	xor.b64  	%rd10626, %rd10625, %rd10591;
	xor.b64  	%rd10627, %rd10626, %rd10606;
	xor.b64  	%rd10628, %rd10564, %rd10549;
	xor.b64  	%rd10629, %rd10628, %rd10579;
	xor.b64  	%rd10630, %rd10629, %rd10594;
	xor.b64  	%rd10631, %rd10630, %rd10609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7501}, %rd10619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7502,%dummy}, %rd10619;
	}
	shf.l.wrap.b32 	%r7503, %r7502, %r7501, 1;
	shf.l.wrap.b32 	%r7504, %r7501, %r7502, 1;
	mov.b64 	%rd10632, {%r7504, %r7503};
	xor.b64  	%rd10633, %rd10631, %rd10632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7505}, %rd10623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7506,%dummy}, %rd10623;
	}
	shf.l.wrap.b32 	%r7507, %r7506, %r7505, 1;
	shf.l.wrap.b32 	%r7508, %r7505, %r7506, 1;
	mov.b64 	%rd10634, {%r7508, %r7507};
	xor.b64  	%rd10635, %rd10634, %rd10615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7509}, %rd10627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7510,%dummy}, %rd10627;
	}
	shf.l.wrap.b32 	%r7511, %r7510, %r7509, 1;
	shf.l.wrap.b32 	%r7512, %r7509, %r7510, 1;
	mov.b64 	%rd10636, {%r7512, %r7511};
	xor.b64  	%rd10637, %rd10636, %rd10619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7513}, %rd10631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7514,%dummy}, %rd10631;
	}
	shf.l.wrap.b32 	%r7515, %r7514, %r7513, 1;
	shf.l.wrap.b32 	%r7516, %r7513, %r7514, 1;
	mov.b64 	%rd10638, {%r7516, %r7515};
	xor.b64  	%rd10639, %rd10638, %rd10623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7517}, %rd10615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7518,%dummy}, %rd10615;
	}
	shf.l.wrap.b32 	%r7519, %r7518, %r7517, 1;
	shf.l.wrap.b32 	%r7520, %r7517, %r7518, 1;
	mov.b64 	%rd10640, {%r7520, %r7519};
	xor.b64  	%rd10641, %rd10627, %rd10640;
	xor.b64  	%rd10642, %rd10633, %rd10611;
	xor.b64  	%rd10643, %rd10635, %rd10540;
	xor.b64  	%rd10644, %rd10637, %rd10543;
	xor.b64  	%rd10645, %rd10639, %rd10546;
	xor.b64  	%rd10646, %rd10641, %rd10549;
	xor.b64  	%rd10647, %rd10633, %rd10552;
	xor.b64  	%rd10648, %rd10635, %rd10555;
	xor.b64  	%rd10649, %rd10637, %rd10558;
	xor.b64  	%rd10650, %rd10639, %rd10561;
	xor.b64  	%rd10651, %rd10641, %rd10564;
	xor.b64  	%rd10652, %rd10633, %rd10567;
	xor.b64  	%rd10653, %rd10635, %rd10570;
	xor.b64  	%rd10654, %rd10637, %rd10573;
	xor.b64  	%rd10655, %rd10639, %rd10576;
	xor.b64  	%rd10656, %rd10641, %rd10579;
	xor.b64  	%rd10657, %rd10633, %rd10582;
	xor.b64  	%rd10658, %rd10635, %rd10585;
	xor.b64  	%rd10659, %rd10637, %rd10588;
	xor.b64  	%rd10660, %rd10639, %rd10591;
	xor.b64  	%rd10661, %rd10641, %rd10594;
	xor.b64  	%rd10662, %rd10633, %rd10597;
	xor.b64  	%rd10663, %rd10635, %rd10600;
	xor.b64  	%rd10664, %rd10637, %rd10603;
	xor.b64  	%rd10665, %rd10639, %rd10606;
	xor.b64  	%rd10666, %rd10641, %rd10609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7521,%dummy}, %rd10648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7522}, %rd10648;
	}
	shf.r.wrap.b32 	%r7523, %r7522, %r7521, 20;
	shf.r.wrap.b32 	%r7524, %r7521, %r7522, 20;
	mov.b64 	%rd10667, {%r7524, %r7523};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7525,%dummy}, %rd10654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7526}, %rd10654;
	}
	shf.r.wrap.b32 	%r7527, %r7526, %r7525, 21;
	shf.r.wrap.b32 	%r7528, %r7525, %r7526, 21;
	mov.b64 	%rd10668, {%r7528, %r7527};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7529}, %rd10660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7530,%dummy}, %rd10660;
	}
	shf.l.wrap.b32 	%r7531, %r7530, %r7529, 21;
	shf.l.wrap.b32 	%r7532, %r7529, %r7530, 21;
	mov.b64 	%rd10669, {%r7532, %r7531};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7533}, %rd10666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7534,%dummy}, %rd10666;
	}
	shf.l.wrap.b32 	%r7535, %r7534, %r7533, 14;
	shf.l.wrap.b32 	%r7536, %r7533, %r7534, 14;
	mov.b64 	%rd10670, {%r7536, %r7535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7537}, %rd10645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7538,%dummy}, %rd10645;
	}
	shf.l.wrap.b32 	%r7539, %r7538, %r7537, 28;
	shf.l.wrap.b32 	%r7540, %r7537, %r7538, 28;
	mov.b64 	%rd10671, {%r7540, %r7539};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7541}, %rd10651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7542,%dummy}, %rd10651;
	}
	shf.l.wrap.b32 	%r7543, %r7542, %r7541, 20;
	shf.l.wrap.b32 	%r7544, %r7541, %r7542, 20;
	mov.b64 	%rd10672, {%r7544, %r7543};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7545}, %rd10652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7546,%dummy}, %rd10652;
	}
	shf.l.wrap.b32 	%r7547, %r7546, %r7545, 3;
	shf.l.wrap.b32 	%r7548, %r7545, %r7546, 3;
	mov.b64 	%rd10673, {%r7548, %r7547};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7549,%dummy}, %rd10658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7550}, %rd10658;
	}
	shf.r.wrap.b32 	%r7551, %r7550, %r7549, 19;
	shf.r.wrap.b32 	%r7552, %r7549, %r7550, 19;
	mov.b64 	%rd10674, {%r7552, %r7551};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7553,%dummy}, %rd10664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7554}, %rd10664;
	}
	shf.r.wrap.b32 	%r7555, %r7554, %r7553, 3;
	shf.r.wrap.b32 	%r7556, %r7553, %r7554, 3;
	mov.b64 	%rd10675, {%r7556, %r7555};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7557}, %rd10643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7558,%dummy}, %rd10643;
	}
	shf.l.wrap.b32 	%r7559, %r7558, %r7557, 1;
	shf.l.wrap.b32 	%r7560, %r7557, %r7558, 1;
	mov.b64 	%rd10676, {%r7560, %r7559};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7561}, %rd10649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7562,%dummy}, %rd10649;
	}
	shf.l.wrap.b32 	%r7563, %r7562, %r7561, 6;
	shf.l.wrap.b32 	%r7564, %r7561, %r7562, 6;
	mov.b64 	%rd10677, {%r7564, %r7563};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7565}, %rd10655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7566,%dummy}, %rd10655;
	}
	shf.l.wrap.b32 	%r7567, %r7566, %r7565, 25;
	shf.l.wrap.b32 	%r7568, %r7565, %r7566, 25;
	mov.b64 	%rd10678, {%r7568, %r7567};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7569}, %rd10661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7570,%dummy}, %rd10661;
	}
	shf.l.wrap.b32 	%r7571, %r7570, %r7569, 8;
	shf.l.wrap.b32 	%r7572, %r7569, %r7570, 8;
	mov.b64 	%rd10679, {%r7572, %r7571};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7573}, %rd10662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7574,%dummy}, %rd10662;
	}
	shf.l.wrap.b32 	%r7575, %r7574, %r7573, 18;
	shf.l.wrap.b32 	%r7576, %r7573, %r7574, 18;
	mov.b64 	%rd10680, {%r7576, %r7575};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7577}, %rd10646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7578,%dummy}, %rd10646;
	}
	shf.l.wrap.b32 	%r7579, %r7578, %r7577, 27;
	shf.l.wrap.b32 	%r7580, %r7577, %r7578, 27;
	mov.b64 	%rd10681, {%r7580, %r7579};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7581,%dummy}, %rd10647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7582}, %rd10647;
	}
	shf.r.wrap.b32 	%r7583, %r7582, %r7581, 28;
	shf.r.wrap.b32 	%r7584, %r7581, %r7582, 28;
	mov.b64 	%rd10682, {%r7584, %r7583};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7585}, %rd10653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7586,%dummy}, %rd10653;
	}
	shf.l.wrap.b32 	%r7587, %r7586, %r7585, 10;
	shf.l.wrap.b32 	%r7588, %r7585, %r7586, 10;
	mov.b64 	%rd10683, {%r7588, %r7587};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7589}, %rd10659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7590,%dummy}, %rd10659;
	}
	shf.l.wrap.b32 	%r7591, %r7590, %r7589, 15;
	shf.l.wrap.b32 	%r7592, %r7589, %r7590, 15;
	mov.b64 	%rd10684, {%r7592, %r7591};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7593,%dummy}, %rd10665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7594}, %rd10665;
	}
	shf.r.wrap.b32 	%r7595, %r7594, %r7593, 8;
	shf.r.wrap.b32 	%r7596, %r7593, %r7594, 8;
	mov.b64 	%rd10685, {%r7596, %r7595};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7597,%dummy}, %rd10644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7598}, %rd10644;
	}
	shf.r.wrap.b32 	%r7599, %r7598, %r7597, 2;
	shf.r.wrap.b32 	%r7600, %r7597, %r7598, 2;
	mov.b64 	%rd10686, {%r7600, %r7599};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7601,%dummy}, %rd10650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7602}, %rd10650;
	}
	shf.r.wrap.b32 	%r7603, %r7602, %r7601, 9;
	shf.r.wrap.b32 	%r7604, %r7601, %r7602, 9;
	mov.b64 	%rd10687, {%r7604, %r7603};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7605,%dummy}, %rd10656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7606}, %rd10656;
	}
	shf.r.wrap.b32 	%r7607, %r7606, %r7605, 25;
	shf.r.wrap.b32 	%r7608, %r7605, %r7606, 25;
	mov.b64 	%rd10688, {%r7608, %r7607};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7609,%dummy}, %rd10657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7610}, %rd10657;
	}
	shf.r.wrap.b32 	%r7611, %r7610, %r7609, 23;
	shf.r.wrap.b32 	%r7612, %r7609, %r7610, 23;
	mov.b64 	%rd10689, {%r7612, %r7611};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7613}, %rd10663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7614,%dummy}, %rd10663;
	}
	shf.l.wrap.b32 	%r7615, %r7614, %r7613, 2;
	shf.l.wrap.b32 	%r7616, %r7613, %r7614, 2;
	mov.b64 	%rd10690, {%r7616, %r7615};
	not.b64 	%rd10691, %rd10667;
	and.b64  	%rd10692, %rd10668, %rd10691;
	xor.b64  	%rd10693, %rd10692, %rd10642;
	not.b64 	%rd10694, %rd10668;
	and.b64  	%rd10695, %rd10669, %rd10694;
	xor.b64  	%rd10696, %rd10695, %rd10667;
	not.b64 	%rd10697, %rd10669;
	and.b64  	%rd10698, %rd10670, %rd10697;
	xor.b64  	%rd10699, %rd10698, %rd10668;
	not.b64 	%rd10700, %rd10670;
	and.b64  	%rd10701, %rd10642, %rd10700;
	xor.b64  	%rd10702, %rd10701, %rd10669;
	not.b64 	%rd10703, %rd10642;
	and.b64  	%rd10704, %rd10667, %rd10703;
	xor.b64  	%rd10705, %rd10704, %rd10670;
	not.b64 	%rd10706, %rd10672;
	and.b64  	%rd10707, %rd10673, %rd10706;
	xor.b64  	%rd10708, %rd10707, %rd10671;
	not.b64 	%rd10709, %rd10673;
	and.b64  	%rd10710, %rd10674, %rd10709;
	xor.b64  	%rd10711, %rd10710, %rd10672;
	not.b64 	%rd10712, %rd10674;
	and.b64  	%rd10713, %rd10675, %rd10712;
	xor.b64  	%rd10714, %rd10713, %rd10673;
	not.b64 	%rd10715, %rd10675;
	and.b64  	%rd10716, %rd10671, %rd10715;
	xor.b64  	%rd10717, %rd10716, %rd10674;
	not.b64 	%rd10718, %rd10671;
	and.b64  	%rd10719, %rd10672, %rd10718;
	xor.b64  	%rd10720, %rd10719, %rd10675;
	not.b64 	%rd10721, %rd10677;
	and.b64  	%rd10722, %rd10678, %rd10721;
	xor.b64  	%rd10723, %rd10722, %rd10676;
	not.b64 	%rd10724, %rd10678;
	and.b64  	%rd10725, %rd10679, %rd10724;
	xor.b64  	%rd10726, %rd10725, %rd10677;
	not.b64 	%rd10727, %rd10679;
	and.b64  	%rd10728, %rd10680, %rd10727;
	xor.b64  	%rd10729, %rd10728, %rd10678;
	not.b64 	%rd10730, %rd10680;
	and.b64  	%rd10731, %rd10676, %rd10730;
	xor.b64  	%rd10732, %rd10731, %rd10679;
	not.b64 	%rd10733, %rd10676;
	and.b64  	%rd10734, %rd10677, %rd10733;
	xor.b64  	%rd10735, %rd10734, %rd10680;
	not.b64 	%rd10736, %rd10682;
	and.b64  	%rd10737, %rd10683, %rd10736;
	xor.b64  	%rd10738, %rd10737, %rd10681;
	not.b64 	%rd10739, %rd10683;
	and.b64  	%rd10740, %rd10684, %rd10739;
	xor.b64  	%rd10741, %rd10740, %rd10682;
	not.b64 	%rd10742, %rd10684;
	and.b64  	%rd10743, %rd10685, %rd10742;
	xor.b64  	%rd10744, %rd10743, %rd10683;
	not.b64 	%rd10745, %rd10685;
	and.b64  	%rd10746, %rd10681, %rd10745;
	xor.b64  	%rd10747, %rd10746, %rd10684;
	not.b64 	%rd10748, %rd10681;
	and.b64  	%rd10749, %rd10682, %rd10748;
	xor.b64  	%rd10750, %rd10749, %rd10685;
	not.b64 	%rd10751, %rd10687;
	and.b64  	%rd10752, %rd10688, %rd10751;
	xor.b64  	%rd10753, %rd10752, %rd10686;
	not.b64 	%rd10754, %rd10688;
	and.b64  	%rd10755, %rd10689, %rd10754;
	xor.b64  	%rd10756, %rd10755, %rd10687;
	not.b64 	%rd10757, %rd10689;
	and.b64  	%rd10758, %rd10690, %rd10757;
	xor.b64  	%rd10759, %rd10758, %rd10688;
	not.b64 	%rd10760, %rd10690;
	and.b64  	%rd10761, %rd10686, %rd10760;
	xor.b64  	%rd10762, %rd10761, %rd10689;
	not.b64 	%rd10763, %rd10686;
	and.b64  	%rd10764, %rd10687, %rd10763;
	xor.b64  	%rd10765, %rd10764, %rd10690;
	xor.b64  	%rd10767, %rd10693, %rd32;
	xor.b64  	%rd10768, %rd10708, %rd10767;
	xor.b64  	%rd10769, %rd10768, %rd10723;
	xor.b64  	%rd10770, %rd10769, %rd10738;
	xor.b64  	%rd10771, %rd10770, %rd10753;
	xor.b64  	%rd10772, %rd10711, %rd10696;
	xor.b64  	%rd10773, %rd10772, %rd10726;
	xor.b64  	%rd10774, %rd10773, %rd10741;
	xor.b64  	%rd10775, %rd10774, %rd10756;
	xor.b64  	%rd10776, %rd10714, %rd10699;
	xor.b64  	%rd10777, %rd10776, %rd10729;
	xor.b64  	%rd10778, %rd10777, %rd10744;
	xor.b64  	%rd10779, %rd10778, %rd10759;
	xor.b64  	%rd10780, %rd10717, %rd10702;
	xor.b64  	%rd10781, %rd10780, %rd10732;
	xor.b64  	%rd10782, %rd10781, %rd10747;
	xor.b64  	%rd10783, %rd10782, %rd10762;
	xor.b64  	%rd10784, %rd10720, %rd10705;
	xor.b64  	%rd10785, %rd10784, %rd10735;
	xor.b64  	%rd10786, %rd10785, %rd10750;
	xor.b64  	%rd10787, %rd10786, %rd10765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7617}, %rd10775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7618,%dummy}, %rd10775;
	}
	shf.l.wrap.b32 	%r7619, %r7618, %r7617, 1;
	shf.l.wrap.b32 	%r7620, %r7617, %r7618, 1;
	mov.b64 	%rd10788, {%r7620, %r7619};
	xor.b64  	%rd10789, %rd10787, %rd10788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7621}, %rd10779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7622,%dummy}, %rd10779;
	}
	shf.l.wrap.b32 	%r7623, %r7622, %r7621, 1;
	shf.l.wrap.b32 	%r7624, %r7621, %r7622, 1;
	mov.b64 	%rd10790, {%r7624, %r7623};
	xor.b64  	%rd10791, %rd10790, %rd10771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7625}, %rd10783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7626,%dummy}, %rd10783;
	}
	shf.l.wrap.b32 	%r7627, %r7626, %r7625, 1;
	shf.l.wrap.b32 	%r7628, %r7625, %r7626, 1;
	mov.b64 	%rd10792, {%r7628, %r7627};
	xor.b64  	%rd10793, %rd10792, %rd10775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7629}, %rd10787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7630,%dummy}, %rd10787;
	}
	shf.l.wrap.b32 	%r7631, %r7630, %r7629, 1;
	shf.l.wrap.b32 	%r7632, %r7629, %r7630, 1;
	mov.b64 	%rd10794, {%r7632, %r7631};
	xor.b64  	%rd10795, %rd10794, %rd10779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7633}, %rd10771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7634,%dummy}, %rd10771;
	}
	shf.l.wrap.b32 	%r7635, %r7634, %r7633, 1;
	shf.l.wrap.b32 	%r7636, %r7633, %r7634, 1;
	mov.b64 	%rd10796, {%r7636, %r7635};
	xor.b64  	%rd10797, %rd10783, %rd10796;
	xor.b64  	%rd10798, %rd10789, %rd10767;
	xor.b64  	%rd10799, %rd10791, %rd10696;
	xor.b64  	%rd10800, %rd10793, %rd10699;
	xor.b64  	%rd10801, %rd10795, %rd10702;
	xor.b64  	%rd10802, %rd10797, %rd10705;
	xor.b64  	%rd10803, %rd10789, %rd10708;
	xor.b64  	%rd10804, %rd10791, %rd10711;
	xor.b64  	%rd10805, %rd10793, %rd10714;
	xor.b64  	%rd10806, %rd10795, %rd10717;
	xor.b64  	%rd10807, %rd10797, %rd10720;
	xor.b64  	%rd10808, %rd10789, %rd10723;
	xor.b64  	%rd10809, %rd10791, %rd10726;
	xor.b64  	%rd10810, %rd10793, %rd10729;
	xor.b64  	%rd10811, %rd10795, %rd10732;
	xor.b64  	%rd10812, %rd10797, %rd10735;
	xor.b64  	%rd10813, %rd10789, %rd10738;
	xor.b64  	%rd10814, %rd10791, %rd10741;
	xor.b64  	%rd10815, %rd10793, %rd10744;
	xor.b64  	%rd10816, %rd10795, %rd10747;
	xor.b64  	%rd10817, %rd10797, %rd10750;
	xor.b64  	%rd10818, %rd10789, %rd10753;
	xor.b64  	%rd10819, %rd10791, %rd10756;
	xor.b64  	%rd10820, %rd10793, %rd10759;
	xor.b64  	%rd10821, %rd10795, %rd10762;
	xor.b64  	%rd10822, %rd10797, %rd10765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7637,%dummy}, %rd10804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7638}, %rd10804;
	}
	shf.r.wrap.b32 	%r7639, %r7638, %r7637, 20;
	shf.r.wrap.b32 	%r7640, %r7637, %r7638, 20;
	mov.b64 	%rd10823, {%r7640, %r7639};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7641,%dummy}, %rd10810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7642}, %rd10810;
	}
	shf.r.wrap.b32 	%r7643, %r7642, %r7641, 21;
	shf.r.wrap.b32 	%r7644, %r7641, %r7642, 21;
	mov.b64 	%rd10824, {%r7644, %r7643};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7645}, %rd10816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7646,%dummy}, %rd10816;
	}
	shf.l.wrap.b32 	%r7647, %r7646, %r7645, 21;
	shf.l.wrap.b32 	%r7648, %r7645, %r7646, 21;
	mov.b64 	%rd10825, {%r7648, %r7647};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7649}, %rd10822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7650,%dummy}, %rd10822;
	}
	shf.l.wrap.b32 	%r7651, %r7650, %r7649, 14;
	shf.l.wrap.b32 	%r7652, %r7649, %r7650, 14;
	mov.b64 	%rd10826, {%r7652, %r7651};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7653}, %rd10801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7654,%dummy}, %rd10801;
	}
	shf.l.wrap.b32 	%r7655, %r7654, %r7653, 28;
	shf.l.wrap.b32 	%r7656, %r7653, %r7654, 28;
	mov.b64 	%rd10827, {%r7656, %r7655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7657}, %rd10807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7658,%dummy}, %rd10807;
	}
	shf.l.wrap.b32 	%r7659, %r7658, %r7657, 20;
	shf.l.wrap.b32 	%r7660, %r7657, %r7658, 20;
	mov.b64 	%rd10828, {%r7660, %r7659};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7661}, %rd10808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7662,%dummy}, %rd10808;
	}
	shf.l.wrap.b32 	%r7663, %r7662, %r7661, 3;
	shf.l.wrap.b32 	%r7664, %r7661, %r7662, 3;
	mov.b64 	%rd10829, {%r7664, %r7663};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7665,%dummy}, %rd10814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7666}, %rd10814;
	}
	shf.r.wrap.b32 	%r7667, %r7666, %r7665, 19;
	shf.r.wrap.b32 	%r7668, %r7665, %r7666, 19;
	mov.b64 	%rd10830, {%r7668, %r7667};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7669,%dummy}, %rd10820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7670}, %rd10820;
	}
	shf.r.wrap.b32 	%r7671, %r7670, %r7669, 3;
	shf.r.wrap.b32 	%r7672, %r7669, %r7670, 3;
	mov.b64 	%rd10831, {%r7672, %r7671};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7673}, %rd10799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7674,%dummy}, %rd10799;
	}
	shf.l.wrap.b32 	%r7675, %r7674, %r7673, 1;
	shf.l.wrap.b32 	%r7676, %r7673, %r7674, 1;
	mov.b64 	%rd10832, {%r7676, %r7675};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7677}, %rd10805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7678,%dummy}, %rd10805;
	}
	shf.l.wrap.b32 	%r7679, %r7678, %r7677, 6;
	shf.l.wrap.b32 	%r7680, %r7677, %r7678, 6;
	mov.b64 	%rd10833, {%r7680, %r7679};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7681}, %rd10811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7682,%dummy}, %rd10811;
	}
	shf.l.wrap.b32 	%r7683, %r7682, %r7681, 25;
	shf.l.wrap.b32 	%r7684, %r7681, %r7682, 25;
	mov.b64 	%rd10834, {%r7684, %r7683};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7685}, %rd10817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7686,%dummy}, %rd10817;
	}
	shf.l.wrap.b32 	%r7687, %r7686, %r7685, 8;
	shf.l.wrap.b32 	%r7688, %r7685, %r7686, 8;
	mov.b64 	%rd10835, {%r7688, %r7687};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7689}, %rd10818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7690,%dummy}, %rd10818;
	}
	shf.l.wrap.b32 	%r7691, %r7690, %r7689, 18;
	shf.l.wrap.b32 	%r7692, %r7689, %r7690, 18;
	mov.b64 	%rd10836, {%r7692, %r7691};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7693}, %rd10802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7694,%dummy}, %rd10802;
	}
	shf.l.wrap.b32 	%r7695, %r7694, %r7693, 27;
	shf.l.wrap.b32 	%r7696, %r7693, %r7694, 27;
	mov.b64 	%rd10837, {%r7696, %r7695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7697,%dummy}, %rd10803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7698}, %rd10803;
	}
	shf.r.wrap.b32 	%r7699, %r7698, %r7697, 28;
	shf.r.wrap.b32 	%r7700, %r7697, %r7698, 28;
	mov.b64 	%rd10838, {%r7700, %r7699};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7701}, %rd10809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7702,%dummy}, %rd10809;
	}
	shf.l.wrap.b32 	%r7703, %r7702, %r7701, 10;
	shf.l.wrap.b32 	%r7704, %r7701, %r7702, 10;
	mov.b64 	%rd10839, {%r7704, %r7703};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7705}, %rd10815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7706,%dummy}, %rd10815;
	}
	shf.l.wrap.b32 	%r7707, %r7706, %r7705, 15;
	shf.l.wrap.b32 	%r7708, %r7705, %r7706, 15;
	mov.b64 	%rd10840, {%r7708, %r7707};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7709,%dummy}, %rd10821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7710}, %rd10821;
	}
	shf.r.wrap.b32 	%r7711, %r7710, %r7709, 8;
	shf.r.wrap.b32 	%r7712, %r7709, %r7710, 8;
	mov.b64 	%rd10841, {%r7712, %r7711};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7713,%dummy}, %rd10800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7714}, %rd10800;
	}
	shf.r.wrap.b32 	%r7715, %r7714, %r7713, 2;
	shf.r.wrap.b32 	%r7716, %r7713, %r7714, 2;
	mov.b64 	%rd10842, {%r7716, %r7715};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7717,%dummy}, %rd10806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7718}, %rd10806;
	}
	shf.r.wrap.b32 	%r7719, %r7718, %r7717, 9;
	shf.r.wrap.b32 	%r7720, %r7717, %r7718, 9;
	mov.b64 	%rd10843, {%r7720, %r7719};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7721,%dummy}, %rd10812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7722}, %rd10812;
	}
	shf.r.wrap.b32 	%r7723, %r7722, %r7721, 25;
	shf.r.wrap.b32 	%r7724, %r7721, %r7722, 25;
	mov.b64 	%rd10844, {%r7724, %r7723};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7725,%dummy}, %rd10813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7726}, %rd10813;
	}
	shf.r.wrap.b32 	%r7727, %r7726, %r7725, 23;
	shf.r.wrap.b32 	%r7728, %r7725, %r7726, 23;
	mov.b64 	%rd10845, {%r7728, %r7727};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7729}, %rd10819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7730,%dummy}, %rd10819;
	}
	shf.l.wrap.b32 	%r7731, %r7730, %r7729, 2;
	shf.l.wrap.b32 	%r7732, %r7729, %r7730, 2;
	mov.b64 	%rd10846, {%r7732, %r7731};
	not.b64 	%rd10847, %rd10823;
	and.b64  	%rd10848, %rd10824, %rd10847;
	xor.b64  	%rd10849, %rd10848, %rd10798;
	not.b64 	%rd10850, %rd10824;
	and.b64  	%rd10851, %rd10825, %rd10850;
	xor.b64  	%rd10852, %rd10851, %rd10823;
	not.b64 	%rd10853, %rd10825;
	and.b64  	%rd10854, %rd10826, %rd10853;
	xor.b64  	%rd10855, %rd10854, %rd10824;
	not.b64 	%rd10856, %rd10826;
	and.b64  	%rd10857, %rd10798, %rd10856;
	xor.b64  	%rd10858, %rd10857, %rd10825;
	not.b64 	%rd10859, %rd10798;
	and.b64  	%rd10860, %rd10823, %rd10859;
	xor.b64  	%rd10861, %rd10860, %rd10826;
	not.b64 	%rd10862, %rd10828;
	and.b64  	%rd10863, %rd10829, %rd10862;
	xor.b64  	%rd10864, %rd10863, %rd10827;
	not.b64 	%rd10865, %rd10829;
	and.b64  	%rd10866, %rd10830, %rd10865;
	xor.b64  	%rd10867, %rd10866, %rd10828;
	not.b64 	%rd10868, %rd10830;
	and.b64  	%rd10869, %rd10831, %rd10868;
	xor.b64  	%rd10870, %rd10869, %rd10829;
	not.b64 	%rd10871, %rd10831;
	and.b64  	%rd10872, %rd10827, %rd10871;
	xor.b64  	%rd10873, %rd10872, %rd10830;
	not.b64 	%rd10874, %rd10827;
	and.b64  	%rd10875, %rd10828, %rd10874;
	xor.b64  	%rd10876, %rd10875, %rd10831;
	not.b64 	%rd10877, %rd10833;
	and.b64  	%rd10878, %rd10834, %rd10877;
	xor.b64  	%rd10879, %rd10878, %rd10832;
	not.b64 	%rd10880, %rd10834;
	and.b64  	%rd10881, %rd10835, %rd10880;
	xor.b64  	%rd10882, %rd10881, %rd10833;
	not.b64 	%rd10883, %rd10835;
	and.b64  	%rd10884, %rd10836, %rd10883;
	xor.b64  	%rd10885, %rd10884, %rd10834;
	not.b64 	%rd10886, %rd10836;
	and.b64  	%rd10887, %rd10832, %rd10886;
	xor.b64  	%rd10888, %rd10887, %rd10835;
	not.b64 	%rd10889, %rd10832;
	and.b64  	%rd10890, %rd10833, %rd10889;
	xor.b64  	%rd10891, %rd10890, %rd10836;
	not.b64 	%rd10892, %rd10838;
	and.b64  	%rd10893, %rd10839, %rd10892;
	xor.b64  	%rd10894, %rd10893, %rd10837;
	not.b64 	%rd10895, %rd10839;
	and.b64  	%rd10896, %rd10840, %rd10895;
	xor.b64  	%rd10897, %rd10896, %rd10838;
	not.b64 	%rd10898, %rd10840;
	and.b64  	%rd10899, %rd10841, %rd10898;
	xor.b64  	%rd10900, %rd10899, %rd10839;
	not.b64 	%rd10901, %rd10841;
	and.b64  	%rd10902, %rd10837, %rd10901;
	xor.b64  	%rd10903, %rd10902, %rd10840;
	not.b64 	%rd10904, %rd10837;
	and.b64  	%rd10905, %rd10838, %rd10904;
	xor.b64  	%rd10906, %rd10905, %rd10841;
	not.b64 	%rd10907, %rd10843;
	and.b64  	%rd10908, %rd10844, %rd10907;
	xor.b64  	%rd10909, %rd10908, %rd10842;
	not.b64 	%rd10910, %rd10844;
	and.b64  	%rd10911, %rd10845, %rd10910;
	xor.b64  	%rd10912, %rd10911, %rd10843;
	not.b64 	%rd10913, %rd10845;
	and.b64  	%rd10914, %rd10846, %rd10913;
	xor.b64  	%rd10915, %rd10914, %rd10844;
	not.b64 	%rd10916, %rd10846;
	and.b64  	%rd10917, %rd10842, %rd10916;
	xor.b64  	%rd10918, %rd10917, %rd10845;
	not.b64 	%rd10919, %rd10842;
	and.b64  	%rd10920, %rd10843, %rd10919;
	xor.b64  	%rd10921, %rd10920, %rd10846;
	xor.b64  	%rd10923, %rd10849, %rd33;
	xor.b64  	%rd10924, %rd10864, %rd10923;
	xor.b64  	%rd10925, %rd10924, %rd10879;
	xor.b64  	%rd10926, %rd10925, %rd10894;
	xor.b64  	%rd10927, %rd10926, %rd10909;
	xor.b64  	%rd10928, %rd10867, %rd10852;
	xor.b64  	%rd10929, %rd10928, %rd10882;
	xor.b64  	%rd10930, %rd10929, %rd10897;
	xor.b64  	%rd10931, %rd10930, %rd10912;
	xor.b64  	%rd10932, %rd10870, %rd10855;
	xor.b64  	%rd10933, %rd10932, %rd10885;
	xor.b64  	%rd10934, %rd10933, %rd10900;
	xor.b64  	%rd10935, %rd10934, %rd10915;
	xor.b64  	%rd10936, %rd10873, %rd10858;
	xor.b64  	%rd10937, %rd10936, %rd10888;
	xor.b64  	%rd10938, %rd10937, %rd10903;
	xor.b64  	%rd10939, %rd10938, %rd10918;
	xor.b64  	%rd10940, %rd10876, %rd10861;
	xor.b64  	%rd10941, %rd10940, %rd10891;
	xor.b64  	%rd10942, %rd10941, %rd10906;
	xor.b64  	%rd10943, %rd10942, %rd10921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7733}, %rd10931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7734,%dummy}, %rd10931;
	}
	shf.l.wrap.b32 	%r7735, %r7734, %r7733, 1;
	shf.l.wrap.b32 	%r7736, %r7733, %r7734, 1;
	mov.b64 	%rd10944, {%r7736, %r7735};
	xor.b64  	%rd10945, %rd10943, %rd10944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7737}, %rd10935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7738,%dummy}, %rd10935;
	}
	shf.l.wrap.b32 	%r7739, %r7738, %r7737, 1;
	shf.l.wrap.b32 	%r7740, %r7737, %r7738, 1;
	mov.b64 	%rd10946, {%r7740, %r7739};
	xor.b64  	%rd10947, %rd10946, %rd10927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7741}, %rd10939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7742,%dummy}, %rd10939;
	}
	shf.l.wrap.b32 	%r7743, %r7742, %r7741, 1;
	shf.l.wrap.b32 	%r7744, %r7741, %r7742, 1;
	mov.b64 	%rd10948, {%r7744, %r7743};
	xor.b64  	%rd10949, %rd10948, %rd10931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7745}, %rd10943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7746,%dummy}, %rd10943;
	}
	shf.l.wrap.b32 	%r7747, %r7746, %r7745, 1;
	shf.l.wrap.b32 	%r7748, %r7745, %r7746, 1;
	mov.b64 	%rd10950, {%r7748, %r7747};
	xor.b64  	%rd10951, %rd10950, %rd10935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7749}, %rd10927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7750,%dummy}, %rd10927;
	}
	shf.l.wrap.b32 	%r7751, %r7750, %r7749, 1;
	shf.l.wrap.b32 	%r7752, %r7749, %r7750, 1;
	mov.b64 	%rd10952, {%r7752, %r7751};
	xor.b64  	%rd10953, %rd10939, %rd10952;
	xor.b64  	%rd10954, %rd10945, %rd10923;
	xor.b64  	%rd10955, %rd10947, %rd10852;
	xor.b64  	%rd10956, %rd10949, %rd10855;
	xor.b64  	%rd10957, %rd10951, %rd10858;
	xor.b64  	%rd10958, %rd10953, %rd10861;
	xor.b64  	%rd10959, %rd10945, %rd10864;
	xor.b64  	%rd10960, %rd10947, %rd10867;
	xor.b64  	%rd10961, %rd10949, %rd10870;
	xor.b64  	%rd10962, %rd10951, %rd10873;
	xor.b64  	%rd10963, %rd10953, %rd10876;
	xor.b64  	%rd10964, %rd10945, %rd10879;
	xor.b64  	%rd10965, %rd10947, %rd10882;
	xor.b64  	%rd10966, %rd10949, %rd10885;
	xor.b64  	%rd10967, %rd10951, %rd10888;
	xor.b64  	%rd10968, %rd10953, %rd10891;
	xor.b64  	%rd10969, %rd10945, %rd10894;
	xor.b64  	%rd10970, %rd10947, %rd10897;
	xor.b64  	%rd10971, %rd10949, %rd10900;
	xor.b64  	%rd10972, %rd10951, %rd10903;
	xor.b64  	%rd10973, %rd10953, %rd10906;
	xor.b64  	%rd10974, %rd10945, %rd10909;
	xor.b64  	%rd10975, %rd10947, %rd10912;
	xor.b64  	%rd10976, %rd10949, %rd10915;
	xor.b64  	%rd10977, %rd10951, %rd10918;
	xor.b64  	%rd10978, %rd10953, %rd10921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7753,%dummy}, %rd10960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7754}, %rd10960;
	}
	shf.r.wrap.b32 	%r7755, %r7754, %r7753, 20;
	shf.r.wrap.b32 	%r7756, %r7753, %r7754, 20;
	mov.b64 	%rd10979, {%r7756, %r7755};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7757,%dummy}, %rd10966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7758}, %rd10966;
	}
	shf.r.wrap.b32 	%r7759, %r7758, %r7757, 21;
	shf.r.wrap.b32 	%r7760, %r7757, %r7758, 21;
	mov.b64 	%rd10980, {%r7760, %r7759};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7761}, %rd10972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7762,%dummy}, %rd10972;
	}
	shf.l.wrap.b32 	%r7763, %r7762, %r7761, 21;
	shf.l.wrap.b32 	%r7764, %r7761, %r7762, 21;
	mov.b64 	%rd10981, {%r7764, %r7763};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7765}, %rd10978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7766,%dummy}, %rd10978;
	}
	shf.l.wrap.b32 	%r7767, %r7766, %r7765, 14;
	shf.l.wrap.b32 	%r7768, %r7765, %r7766, 14;
	mov.b64 	%rd10982, {%r7768, %r7767};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7769}, %rd10957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7770,%dummy}, %rd10957;
	}
	shf.l.wrap.b32 	%r7771, %r7770, %r7769, 28;
	shf.l.wrap.b32 	%r7772, %r7769, %r7770, 28;
	mov.b64 	%rd10983, {%r7772, %r7771};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7773}, %rd10963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7774,%dummy}, %rd10963;
	}
	shf.l.wrap.b32 	%r7775, %r7774, %r7773, 20;
	shf.l.wrap.b32 	%r7776, %r7773, %r7774, 20;
	mov.b64 	%rd10984, {%r7776, %r7775};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7777}, %rd10964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7778,%dummy}, %rd10964;
	}
	shf.l.wrap.b32 	%r7779, %r7778, %r7777, 3;
	shf.l.wrap.b32 	%r7780, %r7777, %r7778, 3;
	mov.b64 	%rd10985, {%r7780, %r7779};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7781,%dummy}, %rd10970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7782}, %rd10970;
	}
	shf.r.wrap.b32 	%r7783, %r7782, %r7781, 19;
	shf.r.wrap.b32 	%r7784, %r7781, %r7782, 19;
	mov.b64 	%rd10986, {%r7784, %r7783};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7785,%dummy}, %rd10976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7786}, %rd10976;
	}
	shf.r.wrap.b32 	%r7787, %r7786, %r7785, 3;
	shf.r.wrap.b32 	%r7788, %r7785, %r7786, 3;
	mov.b64 	%rd10987, {%r7788, %r7787};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7789}, %rd10955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7790,%dummy}, %rd10955;
	}
	shf.l.wrap.b32 	%r7791, %r7790, %r7789, 1;
	shf.l.wrap.b32 	%r7792, %r7789, %r7790, 1;
	mov.b64 	%rd10988, {%r7792, %r7791};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7793}, %rd10961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7794,%dummy}, %rd10961;
	}
	shf.l.wrap.b32 	%r7795, %r7794, %r7793, 6;
	shf.l.wrap.b32 	%r7796, %r7793, %r7794, 6;
	mov.b64 	%rd10989, {%r7796, %r7795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7797}, %rd10967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7798,%dummy}, %rd10967;
	}
	shf.l.wrap.b32 	%r7799, %r7798, %r7797, 25;
	shf.l.wrap.b32 	%r7800, %r7797, %r7798, 25;
	mov.b64 	%rd10990, {%r7800, %r7799};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7801}, %rd10973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7802,%dummy}, %rd10973;
	}
	shf.l.wrap.b32 	%r7803, %r7802, %r7801, 8;
	shf.l.wrap.b32 	%r7804, %r7801, %r7802, 8;
	mov.b64 	%rd10991, {%r7804, %r7803};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7805}, %rd10974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7806,%dummy}, %rd10974;
	}
	shf.l.wrap.b32 	%r7807, %r7806, %r7805, 18;
	shf.l.wrap.b32 	%r7808, %r7805, %r7806, 18;
	mov.b64 	%rd10992, {%r7808, %r7807};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7809}, %rd10958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7810,%dummy}, %rd10958;
	}
	shf.l.wrap.b32 	%r7811, %r7810, %r7809, 27;
	shf.l.wrap.b32 	%r7812, %r7809, %r7810, 27;
	mov.b64 	%rd10993, {%r7812, %r7811};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7813,%dummy}, %rd10959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7814}, %rd10959;
	}
	shf.r.wrap.b32 	%r7815, %r7814, %r7813, 28;
	shf.r.wrap.b32 	%r7816, %r7813, %r7814, 28;
	mov.b64 	%rd10994, {%r7816, %r7815};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7817}, %rd10965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7818,%dummy}, %rd10965;
	}
	shf.l.wrap.b32 	%r7819, %r7818, %r7817, 10;
	shf.l.wrap.b32 	%r7820, %r7817, %r7818, 10;
	mov.b64 	%rd10995, {%r7820, %r7819};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7821}, %rd10971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7822,%dummy}, %rd10971;
	}
	shf.l.wrap.b32 	%r7823, %r7822, %r7821, 15;
	shf.l.wrap.b32 	%r7824, %r7821, %r7822, 15;
	mov.b64 	%rd10996, {%r7824, %r7823};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7825,%dummy}, %rd10977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7826}, %rd10977;
	}
	shf.r.wrap.b32 	%r7827, %r7826, %r7825, 8;
	shf.r.wrap.b32 	%r7828, %r7825, %r7826, 8;
	mov.b64 	%rd10997, {%r7828, %r7827};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7829,%dummy}, %rd10956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7830}, %rd10956;
	}
	shf.r.wrap.b32 	%r7831, %r7830, %r7829, 2;
	shf.r.wrap.b32 	%r7832, %r7829, %r7830, 2;
	mov.b64 	%rd10998, {%r7832, %r7831};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7833,%dummy}, %rd10962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7834}, %rd10962;
	}
	shf.r.wrap.b32 	%r7835, %r7834, %r7833, 9;
	shf.r.wrap.b32 	%r7836, %r7833, %r7834, 9;
	mov.b64 	%rd10999, {%r7836, %r7835};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7837,%dummy}, %rd10968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7838}, %rd10968;
	}
	shf.r.wrap.b32 	%r7839, %r7838, %r7837, 25;
	shf.r.wrap.b32 	%r7840, %r7837, %r7838, 25;
	mov.b64 	%rd11000, {%r7840, %r7839};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7841,%dummy}, %rd10969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7842}, %rd10969;
	}
	shf.r.wrap.b32 	%r7843, %r7842, %r7841, 23;
	shf.r.wrap.b32 	%r7844, %r7841, %r7842, 23;
	mov.b64 	%rd11001, {%r7844, %r7843};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7845}, %rd10975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7846,%dummy}, %rd10975;
	}
	shf.l.wrap.b32 	%r7847, %r7846, %r7845, 2;
	shf.l.wrap.b32 	%r7848, %r7845, %r7846, 2;
	mov.b64 	%rd11002, {%r7848, %r7847};
	not.b64 	%rd11003, %rd10979;
	and.b64  	%rd11004, %rd10980, %rd11003;
	xor.b64  	%rd11005, %rd11004, %rd10954;
	not.b64 	%rd11006, %rd10980;
	and.b64  	%rd11007, %rd10981, %rd11006;
	xor.b64  	%rd11008, %rd11007, %rd10979;
	not.b64 	%rd11009, %rd10981;
	and.b64  	%rd11010, %rd10982, %rd11009;
	xor.b64  	%rd11011, %rd11010, %rd10980;
	not.b64 	%rd11012, %rd10982;
	and.b64  	%rd11013, %rd10954, %rd11012;
	xor.b64  	%rd11014, %rd11013, %rd10981;
	not.b64 	%rd11015, %rd10954;
	and.b64  	%rd11016, %rd10979, %rd11015;
	xor.b64  	%rd11017, %rd11016, %rd10982;
	not.b64 	%rd11018, %rd10984;
	and.b64  	%rd11019, %rd10985, %rd11018;
	xor.b64  	%rd11020, %rd11019, %rd10983;
	not.b64 	%rd11021, %rd10985;
	and.b64  	%rd11022, %rd10986, %rd11021;
	xor.b64  	%rd11023, %rd11022, %rd10984;
	not.b64 	%rd11024, %rd10986;
	and.b64  	%rd11025, %rd10987, %rd11024;
	xor.b64  	%rd11026, %rd11025, %rd10985;
	not.b64 	%rd11027, %rd10987;
	and.b64  	%rd11028, %rd10983, %rd11027;
	xor.b64  	%rd11029, %rd11028, %rd10986;
	not.b64 	%rd11030, %rd10983;
	and.b64  	%rd11031, %rd10984, %rd11030;
	xor.b64  	%rd11032, %rd11031, %rd10987;
	not.b64 	%rd11033, %rd10989;
	and.b64  	%rd11034, %rd10990, %rd11033;
	xor.b64  	%rd11035, %rd11034, %rd10988;
	not.b64 	%rd11036, %rd10990;
	and.b64  	%rd11037, %rd10991, %rd11036;
	xor.b64  	%rd11038, %rd11037, %rd10989;
	not.b64 	%rd11039, %rd10991;
	and.b64  	%rd11040, %rd10992, %rd11039;
	xor.b64  	%rd11041, %rd11040, %rd10990;
	not.b64 	%rd11042, %rd10992;
	and.b64  	%rd11043, %rd10988, %rd11042;
	xor.b64  	%rd11044, %rd11043, %rd10991;
	not.b64 	%rd11045, %rd10988;
	and.b64  	%rd11046, %rd10989, %rd11045;
	xor.b64  	%rd11047, %rd11046, %rd10992;
	not.b64 	%rd11048, %rd10994;
	and.b64  	%rd11049, %rd10995, %rd11048;
	xor.b64  	%rd11050, %rd11049, %rd10993;
	not.b64 	%rd11051, %rd10995;
	and.b64  	%rd11052, %rd10996, %rd11051;
	xor.b64  	%rd11053, %rd11052, %rd10994;
	not.b64 	%rd11054, %rd10996;
	and.b64  	%rd11055, %rd10997, %rd11054;
	xor.b64  	%rd11056, %rd11055, %rd10995;
	not.b64 	%rd11057, %rd10997;
	and.b64  	%rd11058, %rd10993, %rd11057;
	xor.b64  	%rd11059, %rd11058, %rd10996;
	not.b64 	%rd11060, %rd10993;
	and.b64  	%rd11061, %rd10994, %rd11060;
	xor.b64  	%rd11062, %rd11061, %rd10997;
	not.b64 	%rd11063, %rd10999;
	and.b64  	%rd11064, %rd11000, %rd11063;
	xor.b64  	%rd11065, %rd11064, %rd10998;
	not.b64 	%rd11066, %rd11000;
	and.b64  	%rd11067, %rd11001, %rd11066;
	xor.b64  	%rd11068, %rd11067, %rd10999;
	not.b64 	%rd11069, %rd11001;
	and.b64  	%rd11070, %rd11002, %rd11069;
	xor.b64  	%rd11071, %rd11070, %rd11000;
	not.b64 	%rd11072, %rd11002;
	and.b64  	%rd11073, %rd10998, %rd11072;
	xor.b64  	%rd11074, %rd11073, %rd11001;
	not.b64 	%rd11075, %rd10998;
	and.b64  	%rd11076, %rd10999, %rd11075;
	xor.b64  	%rd11077, %rd11076, %rd11002;
	xor.b64  	%rd11079, %rd11005, %rd34;
	xor.b64  	%rd11080, %rd11020, %rd11079;
	xor.b64  	%rd11081, %rd11080, %rd11035;
	xor.b64  	%rd11082, %rd11081, %rd11050;
	xor.b64  	%rd11083, %rd11082, %rd11065;
	xor.b64  	%rd11084, %rd11023, %rd11008;
	xor.b64  	%rd11085, %rd11084, %rd11038;
	xor.b64  	%rd11086, %rd11085, %rd11053;
	xor.b64  	%rd11087, %rd11086, %rd11068;
	xor.b64  	%rd11088, %rd11026, %rd11011;
	xor.b64  	%rd11089, %rd11088, %rd11041;
	xor.b64  	%rd11090, %rd11089, %rd11056;
	xor.b64  	%rd11091, %rd11090, %rd11071;
	xor.b64  	%rd11092, %rd11029, %rd11014;
	xor.b64  	%rd11093, %rd11092, %rd11044;
	xor.b64  	%rd11094, %rd11093, %rd11059;
	xor.b64  	%rd11095, %rd11094, %rd11074;
	xor.b64  	%rd11096, %rd11032, %rd11017;
	xor.b64  	%rd11097, %rd11096, %rd11047;
	xor.b64  	%rd11098, %rd11097, %rd11062;
	xor.b64  	%rd11099, %rd11098, %rd11077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7849}, %rd11087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7850,%dummy}, %rd11087;
	}
	shf.l.wrap.b32 	%r7851, %r7850, %r7849, 1;
	shf.l.wrap.b32 	%r7852, %r7849, %r7850, 1;
	mov.b64 	%rd11100, {%r7852, %r7851};
	xor.b64  	%rd11101, %rd11099, %rd11100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7853}, %rd11091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7854,%dummy}, %rd11091;
	}
	shf.l.wrap.b32 	%r7855, %r7854, %r7853, 1;
	shf.l.wrap.b32 	%r7856, %r7853, %r7854, 1;
	mov.b64 	%rd11102, {%r7856, %r7855};
	xor.b64  	%rd11103, %rd11102, %rd11083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7857}, %rd11095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7858,%dummy}, %rd11095;
	}
	shf.l.wrap.b32 	%r7859, %r7858, %r7857, 1;
	shf.l.wrap.b32 	%r7860, %r7857, %r7858, 1;
	mov.b64 	%rd11104, {%r7860, %r7859};
	xor.b64  	%rd11105, %rd11104, %rd11087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7861}, %rd11099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7862,%dummy}, %rd11099;
	}
	shf.l.wrap.b32 	%r7863, %r7862, %r7861, 1;
	shf.l.wrap.b32 	%r7864, %r7861, %r7862, 1;
	mov.b64 	%rd11106, {%r7864, %r7863};
	xor.b64  	%rd11107, %rd11106, %rd11091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7865}, %rd11083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7866,%dummy}, %rd11083;
	}
	shf.l.wrap.b32 	%r7867, %r7866, %r7865, 1;
	shf.l.wrap.b32 	%r7868, %r7865, %r7866, 1;
	mov.b64 	%rd11108, {%r7868, %r7867};
	xor.b64  	%rd11109, %rd11095, %rd11108;
	xor.b64  	%rd11110, %rd11101, %rd11079;
	xor.b64  	%rd11111, %rd11103, %rd11008;
	xor.b64  	%rd11112, %rd11105, %rd11011;
	xor.b64  	%rd11113, %rd11107, %rd11014;
	xor.b64  	%rd11114, %rd11109, %rd11017;
	xor.b64  	%rd11115, %rd11101, %rd11020;
	xor.b64  	%rd11116, %rd11103, %rd11023;
	xor.b64  	%rd11117, %rd11105, %rd11026;
	xor.b64  	%rd11118, %rd11107, %rd11029;
	xor.b64  	%rd11119, %rd11109, %rd11032;
	xor.b64  	%rd11120, %rd11101, %rd11035;
	xor.b64  	%rd11121, %rd11103, %rd11038;
	xor.b64  	%rd11122, %rd11105, %rd11041;
	xor.b64  	%rd11123, %rd11107, %rd11044;
	xor.b64  	%rd11124, %rd11109, %rd11047;
	xor.b64  	%rd11125, %rd11101, %rd11050;
	xor.b64  	%rd11126, %rd11103, %rd11053;
	xor.b64  	%rd11127, %rd11105, %rd11056;
	xor.b64  	%rd11128, %rd11107, %rd11059;
	xor.b64  	%rd11129, %rd11109, %rd11062;
	xor.b64  	%rd11130, %rd11101, %rd11065;
	xor.b64  	%rd11131, %rd11103, %rd11068;
	xor.b64  	%rd11132, %rd11105, %rd11071;
	xor.b64  	%rd11133, %rd11107, %rd11074;
	xor.b64  	%rd11134, %rd11109, %rd11077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7869,%dummy}, %rd11116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7870}, %rd11116;
	}
	shf.r.wrap.b32 	%r7871, %r7870, %r7869, 20;
	shf.r.wrap.b32 	%r7872, %r7869, %r7870, 20;
	mov.b64 	%rd11135, {%r7872, %r7871};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7873,%dummy}, %rd11122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7874}, %rd11122;
	}
	shf.r.wrap.b32 	%r7875, %r7874, %r7873, 21;
	shf.r.wrap.b32 	%r7876, %r7873, %r7874, 21;
	mov.b64 	%rd11136, {%r7876, %r7875};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7877}, %rd11128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7878,%dummy}, %rd11128;
	}
	shf.l.wrap.b32 	%r7879, %r7878, %r7877, 21;
	shf.l.wrap.b32 	%r7880, %r7877, %r7878, 21;
	mov.b64 	%rd11137, {%r7880, %r7879};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7881}, %rd11134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7882,%dummy}, %rd11134;
	}
	shf.l.wrap.b32 	%r7883, %r7882, %r7881, 14;
	shf.l.wrap.b32 	%r7884, %r7881, %r7882, 14;
	mov.b64 	%rd11138, {%r7884, %r7883};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7885}, %rd11113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7886,%dummy}, %rd11113;
	}
	shf.l.wrap.b32 	%r7887, %r7886, %r7885, 28;
	shf.l.wrap.b32 	%r7888, %r7885, %r7886, 28;
	mov.b64 	%rd11139, {%r7888, %r7887};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7889}, %rd11119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7890,%dummy}, %rd11119;
	}
	shf.l.wrap.b32 	%r7891, %r7890, %r7889, 20;
	shf.l.wrap.b32 	%r7892, %r7889, %r7890, 20;
	mov.b64 	%rd11140, {%r7892, %r7891};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7893}, %rd11120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7894,%dummy}, %rd11120;
	}
	shf.l.wrap.b32 	%r7895, %r7894, %r7893, 3;
	shf.l.wrap.b32 	%r7896, %r7893, %r7894, 3;
	mov.b64 	%rd11141, {%r7896, %r7895};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7897,%dummy}, %rd11126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7898}, %rd11126;
	}
	shf.r.wrap.b32 	%r7899, %r7898, %r7897, 19;
	shf.r.wrap.b32 	%r7900, %r7897, %r7898, 19;
	mov.b64 	%rd11142, {%r7900, %r7899};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7901,%dummy}, %rd11132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7902}, %rd11132;
	}
	shf.r.wrap.b32 	%r7903, %r7902, %r7901, 3;
	shf.r.wrap.b32 	%r7904, %r7901, %r7902, 3;
	mov.b64 	%rd11143, {%r7904, %r7903};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7905}, %rd11111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7906,%dummy}, %rd11111;
	}
	shf.l.wrap.b32 	%r7907, %r7906, %r7905, 1;
	shf.l.wrap.b32 	%r7908, %r7905, %r7906, 1;
	mov.b64 	%rd11144, {%r7908, %r7907};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7909}, %rd11117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7910,%dummy}, %rd11117;
	}
	shf.l.wrap.b32 	%r7911, %r7910, %r7909, 6;
	shf.l.wrap.b32 	%r7912, %r7909, %r7910, 6;
	mov.b64 	%rd11145, {%r7912, %r7911};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7913}, %rd11123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7914,%dummy}, %rd11123;
	}
	shf.l.wrap.b32 	%r7915, %r7914, %r7913, 25;
	shf.l.wrap.b32 	%r7916, %r7913, %r7914, 25;
	mov.b64 	%rd11146, {%r7916, %r7915};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7917}, %rd11129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7918,%dummy}, %rd11129;
	}
	shf.l.wrap.b32 	%r7919, %r7918, %r7917, 8;
	shf.l.wrap.b32 	%r7920, %r7917, %r7918, 8;
	mov.b64 	%rd11147, {%r7920, %r7919};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7921}, %rd11130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7922,%dummy}, %rd11130;
	}
	shf.l.wrap.b32 	%r7923, %r7922, %r7921, 18;
	shf.l.wrap.b32 	%r7924, %r7921, %r7922, 18;
	mov.b64 	%rd11148, {%r7924, %r7923};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7925}, %rd11114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7926,%dummy}, %rd11114;
	}
	shf.l.wrap.b32 	%r7927, %r7926, %r7925, 27;
	shf.l.wrap.b32 	%r7928, %r7925, %r7926, 27;
	mov.b64 	%rd11149, {%r7928, %r7927};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7929,%dummy}, %rd11115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7930}, %rd11115;
	}
	shf.r.wrap.b32 	%r7931, %r7930, %r7929, 28;
	shf.r.wrap.b32 	%r7932, %r7929, %r7930, 28;
	mov.b64 	%rd11150, {%r7932, %r7931};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7933}, %rd11121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7934,%dummy}, %rd11121;
	}
	shf.l.wrap.b32 	%r7935, %r7934, %r7933, 10;
	shf.l.wrap.b32 	%r7936, %r7933, %r7934, 10;
	mov.b64 	%rd11151, {%r7936, %r7935};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7937}, %rd11127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7938,%dummy}, %rd11127;
	}
	shf.l.wrap.b32 	%r7939, %r7938, %r7937, 15;
	shf.l.wrap.b32 	%r7940, %r7937, %r7938, 15;
	mov.b64 	%rd11152, {%r7940, %r7939};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7941,%dummy}, %rd11133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7942}, %rd11133;
	}
	shf.r.wrap.b32 	%r7943, %r7942, %r7941, 8;
	shf.r.wrap.b32 	%r7944, %r7941, %r7942, 8;
	mov.b64 	%rd11153, {%r7944, %r7943};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7945,%dummy}, %rd11112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7946}, %rd11112;
	}
	shf.r.wrap.b32 	%r7947, %r7946, %r7945, 2;
	shf.r.wrap.b32 	%r7948, %r7945, %r7946, 2;
	mov.b64 	%rd11154, {%r7948, %r7947};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7949,%dummy}, %rd11118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7950}, %rd11118;
	}
	shf.r.wrap.b32 	%r7951, %r7950, %r7949, 9;
	shf.r.wrap.b32 	%r7952, %r7949, %r7950, 9;
	mov.b64 	%rd11155, {%r7952, %r7951};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7953,%dummy}, %rd11124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7954}, %rd11124;
	}
	shf.r.wrap.b32 	%r7955, %r7954, %r7953, 25;
	shf.r.wrap.b32 	%r7956, %r7953, %r7954, 25;
	mov.b64 	%rd11156, {%r7956, %r7955};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7957,%dummy}, %rd11125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7958}, %rd11125;
	}
	shf.r.wrap.b32 	%r7959, %r7958, %r7957, 23;
	shf.r.wrap.b32 	%r7960, %r7957, %r7958, 23;
	mov.b64 	%rd11157, {%r7960, %r7959};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7961}, %rd11131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7962,%dummy}, %rd11131;
	}
	shf.l.wrap.b32 	%r7963, %r7962, %r7961, 2;
	shf.l.wrap.b32 	%r7964, %r7961, %r7962, 2;
	mov.b64 	%rd11158, {%r7964, %r7963};
	not.b64 	%rd11159, %rd11135;
	and.b64  	%rd11160, %rd11136, %rd11159;
	xor.b64  	%rd11161, %rd11160, %rd11110;
	not.b64 	%rd11162, %rd11136;
	and.b64  	%rd11163, %rd11137, %rd11162;
	xor.b64  	%rd11164, %rd11163, %rd11135;
	not.b64 	%rd11165, %rd11137;
	and.b64  	%rd11166, %rd11138, %rd11165;
	xor.b64  	%rd11167, %rd11166, %rd11136;
	not.b64 	%rd11168, %rd11138;
	and.b64  	%rd11169, %rd11110, %rd11168;
	xor.b64  	%rd11170, %rd11169, %rd11137;
	not.b64 	%rd11171, %rd11110;
	and.b64  	%rd11172, %rd11135, %rd11171;
	xor.b64  	%rd11173, %rd11172, %rd11138;
	not.b64 	%rd11174, %rd11140;
	and.b64  	%rd11175, %rd11141, %rd11174;
	xor.b64  	%rd11176, %rd11175, %rd11139;
	not.b64 	%rd11177, %rd11141;
	and.b64  	%rd11178, %rd11142, %rd11177;
	xor.b64  	%rd11179, %rd11178, %rd11140;
	not.b64 	%rd11180, %rd11142;
	and.b64  	%rd11181, %rd11143, %rd11180;
	xor.b64  	%rd11182, %rd11181, %rd11141;
	not.b64 	%rd11183, %rd11143;
	and.b64  	%rd11184, %rd11139, %rd11183;
	xor.b64  	%rd11185, %rd11184, %rd11142;
	not.b64 	%rd11186, %rd11139;
	and.b64  	%rd11187, %rd11140, %rd11186;
	xor.b64  	%rd11188, %rd11187, %rd11143;
	not.b64 	%rd11189, %rd11145;
	and.b64  	%rd11190, %rd11146, %rd11189;
	xor.b64  	%rd11191, %rd11190, %rd11144;
	not.b64 	%rd11192, %rd11146;
	and.b64  	%rd11193, %rd11147, %rd11192;
	xor.b64  	%rd11194, %rd11193, %rd11145;
	not.b64 	%rd11195, %rd11147;
	and.b64  	%rd11196, %rd11148, %rd11195;
	xor.b64  	%rd11197, %rd11196, %rd11146;
	not.b64 	%rd11198, %rd11148;
	and.b64  	%rd11199, %rd11144, %rd11198;
	xor.b64  	%rd11200, %rd11199, %rd11147;
	not.b64 	%rd11201, %rd11144;
	and.b64  	%rd11202, %rd11145, %rd11201;
	xor.b64  	%rd11203, %rd11202, %rd11148;
	not.b64 	%rd11204, %rd11150;
	and.b64  	%rd11205, %rd11151, %rd11204;
	xor.b64  	%rd11206, %rd11205, %rd11149;
	not.b64 	%rd11207, %rd11151;
	and.b64  	%rd11208, %rd11152, %rd11207;
	xor.b64  	%rd11209, %rd11208, %rd11150;
	not.b64 	%rd11210, %rd11152;
	and.b64  	%rd11211, %rd11153, %rd11210;
	xor.b64  	%rd11212, %rd11211, %rd11151;
	not.b64 	%rd11213, %rd11153;
	and.b64  	%rd11214, %rd11149, %rd11213;
	xor.b64  	%rd11215, %rd11214, %rd11152;
	not.b64 	%rd11216, %rd11149;
	and.b64  	%rd11217, %rd11150, %rd11216;
	xor.b64  	%rd11218, %rd11217, %rd11153;
	not.b64 	%rd11219, %rd11155;
	and.b64  	%rd11220, %rd11156, %rd11219;
	xor.b64  	%rd11221, %rd11220, %rd11154;
	not.b64 	%rd11222, %rd11156;
	and.b64  	%rd11223, %rd11157, %rd11222;
	xor.b64  	%rd11224, %rd11223, %rd11155;
	not.b64 	%rd11225, %rd11157;
	and.b64  	%rd11226, %rd11158, %rd11225;
	xor.b64  	%rd11227, %rd11226, %rd11156;
	not.b64 	%rd11228, %rd11158;
	and.b64  	%rd11229, %rd11154, %rd11228;
	xor.b64  	%rd11230, %rd11229, %rd11157;
	not.b64 	%rd11231, %rd11154;
	and.b64  	%rd11232, %rd11155, %rd11231;
	xor.b64  	%rd11233, %rd11232, %rd11158;
	xor.b64  	%rd11235, %rd11161, %rd35;
	xor.b64  	%rd11236, %rd11176, %rd11235;
	xor.b64  	%rd11237, %rd11236, %rd11191;
	xor.b64  	%rd11238, %rd11237, %rd11206;
	xor.b64  	%rd11239, %rd11238, %rd11221;
	xor.b64  	%rd11240, %rd11179, %rd11164;
	xor.b64  	%rd11241, %rd11240, %rd11194;
	xor.b64  	%rd11242, %rd11241, %rd11209;
	xor.b64  	%rd11243, %rd11242, %rd11224;
	xor.b64  	%rd11244, %rd11182, %rd11167;
	xor.b64  	%rd11245, %rd11244, %rd11197;
	xor.b64  	%rd11246, %rd11245, %rd11212;
	xor.b64  	%rd11247, %rd11246, %rd11227;
	xor.b64  	%rd11248, %rd11185, %rd11170;
	xor.b64  	%rd11249, %rd11248, %rd11200;
	xor.b64  	%rd11250, %rd11249, %rd11215;
	xor.b64  	%rd11251, %rd11250, %rd11230;
	xor.b64  	%rd11252, %rd11188, %rd11173;
	xor.b64  	%rd11253, %rd11252, %rd11203;
	xor.b64  	%rd11254, %rd11253, %rd11218;
	xor.b64  	%rd11255, %rd11254, %rd11233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7965}, %rd11243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7966,%dummy}, %rd11243;
	}
	shf.l.wrap.b32 	%r7967, %r7966, %r7965, 1;
	shf.l.wrap.b32 	%r7968, %r7965, %r7966, 1;
	mov.b64 	%rd11256, {%r7968, %r7967};
	xor.b64  	%rd11257, %rd11255, %rd11256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7969}, %rd11247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7970,%dummy}, %rd11247;
	}
	shf.l.wrap.b32 	%r7971, %r7970, %r7969, 1;
	shf.l.wrap.b32 	%r7972, %r7969, %r7970, 1;
	mov.b64 	%rd11258, {%r7972, %r7971};
	xor.b64  	%rd11259, %rd11258, %rd11239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7973}, %rd11251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7974,%dummy}, %rd11251;
	}
	shf.l.wrap.b32 	%r7975, %r7974, %r7973, 1;
	shf.l.wrap.b32 	%r7976, %r7973, %r7974, 1;
	mov.b64 	%rd11260, {%r7976, %r7975};
	xor.b64  	%rd11261, %rd11260, %rd11243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7977}, %rd11255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7978,%dummy}, %rd11255;
	}
	shf.l.wrap.b32 	%r7979, %r7978, %r7977, 1;
	shf.l.wrap.b32 	%r7980, %r7977, %r7978, 1;
	mov.b64 	%rd11262, {%r7980, %r7979};
	xor.b64  	%rd11263, %rd11262, %rd11247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7981}, %rd11239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7982,%dummy}, %rd11239;
	}
	shf.l.wrap.b32 	%r7983, %r7982, %r7981, 1;
	shf.l.wrap.b32 	%r7984, %r7981, %r7982, 1;
	mov.b64 	%rd11264, {%r7984, %r7983};
	xor.b64  	%rd11265, %rd11251, %rd11264;
	xor.b64  	%rd11266, %rd11257, %rd11235;
	xor.b64  	%rd11267, %rd11259, %rd11164;
	xor.b64  	%rd11268, %rd11261, %rd11167;
	xor.b64  	%rd11269, %rd11263, %rd11170;
	xor.b64  	%rd11270, %rd11265, %rd11173;
	xor.b64  	%rd11271, %rd11257, %rd11176;
	xor.b64  	%rd11272, %rd11259, %rd11179;
	xor.b64  	%rd11273, %rd11261, %rd11182;
	xor.b64  	%rd11274, %rd11263, %rd11185;
	xor.b64  	%rd11275, %rd11265, %rd11188;
	xor.b64  	%rd11276, %rd11257, %rd11191;
	xor.b64  	%rd11277, %rd11259, %rd11194;
	xor.b64  	%rd11278, %rd11261, %rd11197;
	xor.b64  	%rd11279, %rd11263, %rd11200;
	xor.b64  	%rd11280, %rd11265, %rd11203;
	xor.b64  	%rd11281, %rd11257, %rd11206;
	xor.b64  	%rd11282, %rd11259, %rd11209;
	xor.b64  	%rd11283, %rd11261, %rd11212;
	xor.b64  	%rd11284, %rd11263, %rd11215;
	xor.b64  	%rd11285, %rd11265, %rd11218;
	xor.b64  	%rd11286, %rd11257, %rd11221;
	xor.b64  	%rd11287, %rd11259, %rd11224;
	xor.b64  	%rd11288, %rd11261, %rd11227;
	xor.b64  	%rd11289, %rd11263, %rd11230;
	xor.b64  	%rd11290, %rd11265, %rd11233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7985,%dummy}, %rd11272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7986}, %rd11272;
	}
	shf.r.wrap.b32 	%r7987, %r7986, %r7985, 20;
	shf.r.wrap.b32 	%r7988, %r7985, %r7986, 20;
	mov.b64 	%rd11291, {%r7988, %r7987};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7989,%dummy}, %rd11278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7990}, %rd11278;
	}
	shf.r.wrap.b32 	%r7991, %r7990, %r7989, 21;
	shf.r.wrap.b32 	%r7992, %r7989, %r7990, 21;
	mov.b64 	%rd11292, {%r7992, %r7991};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7993}, %rd11284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7994,%dummy}, %rd11284;
	}
	shf.l.wrap.b32 	%r7995, %r7994, %r7993, 21;
	shf.l.wrap.b32 	%r7996, %r7993, %r7994, 21;
	mov.b64 	%rd11293, {%r7996, %r7995};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd11290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7998,%dummy}, %rd11290;
	}
	shf.l.wrap.b32 	%r7999, %r7998, %r7997, 14;
	shf.l.wrap.b32 	%r8000, %r7997, %r7998, 14;
	mov.b64 	%rd11294, {%r8000, %r7999};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8001}, %rd11269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8002,%dummy}, %rd11269;
	}
	shf.l.wrap.b32 	%r8003, %r8002, %r8001, 28;
	shf.l.wrap.b32 	%r8004, %r8001, %r8002, 28;
	mov.b64 	%rd11295, {%r8004, %r8003};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8005}, %rd11275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8006,%dummy}, %rd11275;
	}
	shf.l.wrap.b32 	%r8007, %r8006, %r8005, 20;
	shf.l.wrap.b32 	%r8008, %r8005, %r8006, 20;
	mov.b64 	%rd11296, {%r8008, %r8007};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8009}, %rd11276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8010,%dummy}, %rd11276;
	}
	shf.l.wrap.b32 	%r8011, %r8010, %r8009, 3;
	shf.l.wrap.b32 	%r8012, %r8009, %r8010, 3;
	mov.b64 	%rd11297, {%r8012, %r8011};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8013,%dummy}, %rd11282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8014}, %rd11282;
	}
	shf.r.wrap.b32 	%r8015, %r8014, %r8013, 19;
	shf.r.wrap.b32 	%r8016, %r8013, %r8014, 19;
	mov.b64 	%rd11298, {%r8016, %r8015};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8017,%dummy}, %rd11288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8018}, %rd11288;
	}
	shf.r.wrap.b32 	%r8019, %r8018, %r8017, 3;
	shf.r.wrap.b32 	%r8020, %r8017, %r8018, 3;
	mov.b64 	%rd11299, {%r8020, %r8019};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8021}, %rd11267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8022,%dummy}, %rd11267;
	}
	shf.l.wrap.b32 	%r8023, %r8022, %r8021, 1;
	shf.l.wrap.b32 	%r8024, %r8021, %r8022, 1;
	mov.b64 	%rd11300, {%r8024, %r8023};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8025}, %rd11273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8026,%dummy}, %rd11273;
	}
	shf.l.wrap.b32 	%r8027, %r8026, %r8025, 6;
	shf.l.wrap.b32 	%r8028, %r8025, %r8026, 6;
	mov.b64 	%rd11301, {%r8028, %r8027};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8029}, %rd11279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8030,%dummy}, %rd11279;
	}
	shf.l.wrap.b32 	%r8031, %r8030, %r8029, 25;
	shf.l.wrap.b32 	%r8032, %r8029, %r8030, 25;
	mov.b64 	%rd11302, {%r8032, %r8031};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8033}, %rd11285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8034,%dummy}, %rd11285;
	}
	shf.l.wrap.b32 	%r8035, %r8034, %r8033, 8;
	shf.l.wrap.b32 	%r8036, %r8033, %r8034, 8;
	mov.b64 	%rd11303, {%r8036, %r8035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8037}, %rd11286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8038,%dummy}, %rd11286;
	}
	shf.l.wrap.b32 	%r8039, %r8038, %r8037, 18;
	shf.l.wrap.b32 	%r8040, %r8037, %r8038, 18;
	mov.b64 	%rd11304, {%r8040, %r8039};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8041}, %rd11270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8042,%dummy}, %rd11270;
	}
	shf.l.wrap.b32 	%r8043, %r8042, %r8041, 27;
	shf.l.wrap.b32 	%r8044, %r8041, %r8042, 27;
	mov.b64 	%rd11305, {%r8044, %r8043};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8045,%dummy}, %rd11271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8046}, %rd11271;
	}
	shf.r.wrap.b32 	%r8047, %r8046, %r8045, 28;
	shf.r.wrap.b32 	%r8048, %r8045, %r8046, 28;
	mov.b64 	%rd11306, {%r8048, %r8047};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8049}, %rd11277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8050,%dummy}, %rd11277;
	}
	shf.l.wrap.b32 	%r8051, %r8050, %r8049, 10;
	shf.l.wrap.b32 	%r8052, %r8049, %r8050, 10;
	mov.b64 	%rd11307, {%r8052, %r8051};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8053}, %rd11283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8054,%dummy}, %rd11283;
	}
	shf.l.wrap.b32 	%r8055, %r8054, %r8053, 15;
	shf.l.wrap.b32 	%r8056, %r8053, %r8054, 15;
	mov.b64 	%rd11308, {%r8056, %r8055};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8057,%dummy}, %rd11289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8058}, %rd11289;
	}
	shf.r.wrap.b32 	%r8059, %r8058, %r8057, 8;
	shf.r.wrap.b32 	%r8060, %r8057, %r8058, 8;
	mov.b64 	%rd11309, {%r8060, %r8059};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8061,%dummy}, %rd11268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8062}, %rd11268;
	}
	shf.r.wrap.b32 	%r8063, %r8062, %r8061, 2;
	shf.r.wrap.b32 	%r8064, %r8061, %r8062, 2;
	mov.b64 	%rd11310, {%r8064, %r8063};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8065,%dummy}, %rd11274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8066}, %rd11274;
	}
	shf.r.wrap.b32 	%r8067, %r8066, %r8065, 9;
	shf.r.wrap.b32 	%r8068, %r8065, %r8066, 9;
	mov.b64 	%rd11311, {%r8068, %r8067};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8069,%dummy}, %rd11280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8070}, %rd11280;
	}
	shf.r.wrap.b32 	%r8071, %r8070, %r8069, 25;
	shf.r.wrap.b32 	%r8072, %r8069, %r8070, 25;
	mov.b64 	%rd11312, {%r8072, %r8071};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8073,%dummy}, %rd11281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8074}, %rd11281;
	}
	shf.r.wrap.b32 	%r8075, %r8074, %r8073, 23;
	shf.r.wrap.b32 	%r8076, %r8073, %r8074, 23;
	mov.b64 	%rd11313, {%r8076, %r8075};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8077}, %rd11287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8078,%dummy}, %rd11287;
	}
	shf.l.wrap.b32 	%r8079, %r8078, %r8077, 2;
	shf.l.wrap.b32 	%r8080, %r8077, %r8078, 2;
	mov.b64 	%rd11314, {%r8080, %r8079};
	not.b64 	%rd11315, %rd11291;
	and.b64  	%rd11316, %rd11292, %rd11315;
	xor.b64  	%rd11317, %rd11316, %rd11266;
	not.b64 	%rd11318, %rd11292;
	and.b64  	%rd11319, %rd11293, %rd11318;
	xor.b64  	%rd11320, %rd11319, %rd11291;
	not.b64 	%rd11321, %rd11293;
	and.b64  	%rd11322, %rd11294, %rd11321;
	xor.b64  	%rd11323, %rd11322, %rd11292;
	not.b64 	%rd11324, %rd11294;
	and.b64  	%rd11325, %rd11266, %rd11324;
	xor.b64  	%rd11326, %rd11325, %rd11293;
	not.b64 	%rd11327, %rd11266;
	and.b64  	%rd11328, %rd11291, %rd11327;
	xor.b64  	%rd11329, %rd11328, %rd11294;
	not.b64 	%rd11330, %rd11296;
	and.b64  	%rd11331, %rd11297, %rd11330;
	xor.b64  	%rd11332, %rd11331, %rd11295;
	not.b64 	%rd11333, %rd11297;
	and.b64  	%rd11334, %rd11298, %rd11333;
	xor.b64  	%rd11335, %rd11334, %rd11296;
	not.b64 	%rd11336, %rd11298;
	and.b64  	%rd11337, %rd11299, %rd11336;
	xor.b64  	%rd11338, %rd11337, %rd11297;
	not.b64 	%rd11339, %rd11299;
	and.b64  	%rd11340, %rd11295, %rd11339;
	xor.b64  	%rd11341, %rd11340, %rd11298;
	not.b64 	%rd11342, %rd11295;
	and.b64  	%rd11343, %rd11296, %rd11342;
	xor.b64  	%rd11344, %rd11343, %rd11299;
	not.b64 	%rd11345, %rd11301;
	and.b64  	%rd11346, %rd11302, %rd11345;
	xor.b64  	%rd11347, %rd11346, %rd11300;
	not.b64 	%rd11348, %rd11302;
	and.b64  	%rd11349, %rd11303, %rd11348;
	xor.b64  	%rd11350, %rd11349, %rd11301;
	not.b64 	%rd11351, %rd11303;
	and.b64  	%rd11352, %rd11304, %rd11351;
	xor.b64  	%rd11353, %rd11352, %rd11302;
	not.b64 	%rd11354, %rd11304;
	and.b64  	%rd11355, %rd11300, %rd11354;
	xor.b64  	%rd11356, %rd11355, %rd11303;
	not.b64 	%rd11357, %rd11300;
	and.b64  	%rd11358, %rd11301, %rd11357;
	xor.b64  	%rd11359, %rd11358, %rd11304;
	not.b64 	%rd11360, %rd11306;
	and.b64  	%rd11361, %rd11307, %rd11360;
	xor.b64  	%rd11362, %rd11361, %rd11305;
	not.b64 	%rd11363, %rd11307;
	and.b64  	%rd11364, %rd11308, %rd11363;
	xor.b64  	%rd11365, %rd11364, %rd11306;
	not.b64 	%rd11366, %rd11308;
	and.b64  	%rd11367, %rd11309, %rd11366;
	xor.b64  	%rd11368, %rd11367, %rd11307;
	not.b64 	%rd11369, %rd11309;
	and.b64  	%rd11370, %rd11305, %rd11369;
	xor.b64  	%rd11371, %rd11370, %rd11308;
	not.b64 	%rd11372, %rd11305;
	and.b64  	%rd11373, %rd11306, %rd11372;
	xor.b64  	%rd11374, %rd11373, %rd11309;
	not.b64 	%rd11375, %rd11311;
	and.b64  	%rd11376, %rd11312, %rd11375;
	xor.b64  	%rd11377, %rd11376, %rd11310;
	not.b64 	%rd11378, %rd11312;
	and.b64  	%rd11379, %rd11313, %rd11378;
	xor.b64  	%rd11380, %rd11379, %rd11311;
	not.b64 	%rd11381, %rd11313;
	and.b64  	%rd11382, %rd11314, %rd11381;
	xor.b64  	%rd11383, %rd11382, %rd11312;
	not.b64 	%rd11384, %rd11314;
	and.b64  	%rd11385, %rd11310, %rd11384;
	xor.b64  	%rd11386, %rd11385, %rd11313;
	not.b64 	%rd11387, %rd11310;
	and.b64  	%rd11388, %rd11311, %rd11387;
	xor.b64  	%rd11389, %rd11388, %rd11314;
	xor.b64  	%rd11391, %rd11317, %rd36;
	xor.b64  	%rd11392, %rd11332, %rd11391;
	xor.b64  	%rd11393, %rd11392, %rd11347;
	xor.b64  	%rd11394, %rd11393, %rd11362;
	xor.b64  	%rd11395, %rd11394, %rd11377;
	xor.b64  	%rd11396, %rd11335, %rd11320;
	xor.b64  	%rd11397, %rd11396, %rd11350;
	xor.b64  	%rd11398, %rd11397, %rd11365;
	xor.b64  	%rd11399, %rd11398, %rd11380;
	xor.b64  	%rd11400, %rd11338, %rd11323;
	xor.b64  	%rd11401, %rd11400, %rd11353;
	xor.b64  	%rd11402, %rd11401, %rd11368;
	xor.b64  	%rd11403, %rd11402, %rd11383;
	xor.b64  	%rd11404, %rd11341, %rd11326;
	xor.b64  	%rd11405, %rd11404, %rd11356;
	xor.b64  	%rd11406, %rd11405, %rd11371;
	xor.b64  	%rd11407, %rd11406, %rd11386;
	xor.b64  	%rd11408, %rd11344, %rd11329;
	xor.b64  	%rd11409, %rd11408, %rd11359;
	xor.b64  	%rd11410, %rd11409, %rd11374;
	xor.b64  	%rd11411, %rd11410, %rd11389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8081}, %rd11399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8082,%dummy}, %rd11399;
	}
	shf.l.wrap.b32 	%r8083, %r8082, %r8081, 1;
	shf.l.wrap.b32 	%r8084, %r8081, %r8082, 1;
	mov.b64 	%rd11412, {%r8084, %r8083};
	xor.b64  	%rd11413, %rd11411, %rd11412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8085}, %rd11403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8086,%dummy}, %rd11403;
	}
	shf.l.wrap.b32 	%r8087, %r8086, %r8085, 1;
	shf.l.wrap.b32 	%r8088, %r8085, %r8086, 1;
	mov.b64 	%rd11414, {%r8088, %r8087};
	xor.b64  	%rd11415, %rd11414, %rd11395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8089}, %rd11407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8090,%dummy}, %rd11407;
	}
	shf.l.wrap.b32 	%r8091, %r8090, %r8089, 1;
	shf.l.wrap.b32 	%r8092, %r8089, %r8090, 1;
	mov.b64 	%rd11416, {%r8092, %r8091};
	xor.b64  	%rd11417, %rd11416, %rd11399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8093}, %rd11411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8094,%dummy}, %rd11411;
	}
	shf.l.wrap.b32 	%r8095, %r8094, %r8093, 1;
	shf.l.wrap.b32 	%r8096, %r8093, %r8094, 1;
	mov.b64 	%rd11418, {%r8096, %r8095};
	xor.b64  	%rd11419, %rd11418, %rd11403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8097}, %rd11395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8098,%dummy}, %rd11395;
	}
	shf.l.wrap.b32 	%r8099, %r8098, %r8097, 1;
	shf.l.wrap.b32 	%r8100, %r8097, %r8098, 1;
	mov.b64 	%rd11420, {%r8100, %r8099};
	xor.b64  	%rd11421, %rd11407, %rd11420;
	xor.b64  	%rd11422, %rd11413, %rd11391;
	xor.b64  	%rd11423, %rd11415, %rd11320;
	xor.b64  	%rd11424, %rd11417, %rd11323;
	xor.b64  	%rd11425, %rd11419, %rd11326;
	xor.b64  	%rd11426, %rd11421, %rd11329;
	xor.b64  	%rd11427, %rd11413, %rd11332;
	xor.b64  	%rd11428, %rd11415, %rd11335;
	xor.b64  	%rd11429, %rd11417, %rd11338;
	xor.b64  	%rd11430, %rd11419, %rd11341;
	xor.b64  	%rd11431, %rd11421, %rd11344;
	xor.b64  	%rd11432, %rd11413, %rd11347;
	xor.b64  	%rd11433, %rd11415, %rd11350;
	xor.b64  	%rd11434, %rd11417, %rd11353;
	xor.b64  	%rd11435, %rd11419, %rd11356;
	xor.b64  	%rd11436, %rd11421, %rd11359;
	xor.b64  	%rd11437, %rd11413, %rd11362;
	xor.b64  	%rd11438, %rd11415, %rd11365;
	xor.b64  	%rd11439, %rd11417, %rd11368;
	xor.b64  	%rd11440, %rd11419, %rd11371;
	xor.b64  	%rd11441, %rd11421, %rd11374;
	xor.b64  	%rd11442, %rd11413, %rd11377;
	xor.b64  	%rd11443, %rd11415, %rd11380;
	xor.b64  	%rd11444, %rd11417, %rd11383;
	xor.b64  	%rd11445, %rd11419, %rd11386;
	xor.b64  	%rd11446, %rd11421, %rd11389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8101,%dummy}, %rd11428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8102}, %rd11428;
	}
	shf.r.wrap.b32 	%r8103, %r8102, %r8101, 20;
	shf.r.wrap.b32 	%r8104, %r8101, %r8102, 20;
	mov.b64 	%rd11447, {%r8104, %r8103};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8105,%dummy}, %rd11434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8106}, %rd11434;
	}
	shf.r.wrap.b32 	%r8107, %r8106, %r8105, 21;
	shf.r.wrap.b32 	%r8108, %r8105, %r8106, 21;
	mov.b64 	%rd11448, {%r8108, %r8107};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8109}, %rd11440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8110,%dummy}, %rd11440;
	}
	shf.l.wrap.b32 	%r8111, %r8110, %r8109, 21;
	shf.l.wrap.b32 	%r8112, %r8109, %r8110, 21;
	mov.b64 	%rd11449, {%r8112, %r8111};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8113}, %rd11446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8114,%dummy}, %rd11446;
	}
	shf.l.wrap.b32 	%r8115, %r8114, %r8113, 14;
	shf.l.wrap.b32 	%r8116, %r8113, %r8114, 14;
	mov.b64 	%rd11450, {%r8116, %r8115};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8117}, %rd11425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8118,%dummy}, %rd11425;
	}
	shf.l.wrap.b32 	%r8119, %r8118, %r8117, 28;
	shf.l.wrap.b32 	%r8120, %r8117, %r8118, 28;
	mov.b64 	%rd11451, {%r8120, %r8119};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8121}, %rd11431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8122,%dummy}, %rd11431;
	}
	shf.l.wrap.b32 	%r8123, %r8122, %r8121, 20;
	shf.l.wrap.b32 	%r8124, %r8121, %r8122, 20;
	mov.b64 	%rd11452, {%r8124, %r8123};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8125}, %rd11432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8126,%dummy}, %rd11432;
	}
	shf.l.wrap.b32 	%r8127, %r8126, %r8125, 3;
	shf.l.wrap.b32 	%r8128, %r8125, %r8126, 3;
	mov.b64 	%rd11453, {%r8128, %r8127};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8129,%dummy}, %rd11438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8130}, %rd11438;
	}
	shf.r.wrap.b32 	%r8131, %r8130, %r8129, 19;
	shf.r.wrap.b32 	%r8132, %r8129, %r8130, 19;
	mov.b64 	%rd11454, {%r8132, %r8131};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8133,%dummy}, %rd11444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8134}, %rd11444;
	}
	shf.r.wrap.b32 	%r8135, %r8134, %r8133, 3;
	shf.r.wrap.b32 	%r8136, %r8133, %r8134, 3;
	mov.b64 	%rd11455, {%r8136, %r8135};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8137}, %rd11423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8138,%dummy}, %rd11423;
	}
	shf.l.wrap.b32 	%r8139, %r8138, %r8137, 1;
	shf.l.wrap.b32 	%r8140, %r8137, %r8138, 1;
	mov.b64 	%rd11456, {%r8140, %r8139};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8141}, %rd11429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8142,%dummy}, %rd11429;
	}
	shf.l.wrap.b32 	%r8143, %r8142, %r8141, 6;
	shf.l.wrap.b32 	%r8144, %r8141, %r8142, 6;
	mov.b64 	%rd11457, {%r8144, %r8143};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8145}, %rd11435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8146,%dummy}, %rd11435;
	}
	shf.l.wrap.b32 	%r8147, %r8146, %r8145, 25;
	shf.l.wrap.b32 	%r8148, %r8145, %r8146, 25;
	mov.b64 	%rd11458, {%r8148, %r8147};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8149}, %rd11441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8150,%dummy}, %rd11441;
	}
	shf.l.wrap.b32 	%r8151, %r8150, %r8149, 8;
	shf.l.wrap.b32 	%r8152, %r8149, %r8150, 8;
	mov.b64 	%rd11459, {%r8152, %r8151};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8153}, %rd11442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8154,%dummy}, %rd11442;
	}
	shf.l.wrap.b32 	%r8155, %r8154, %r8153, 18;
	shf.l.wrap.b32 	%r8156, %r8153, %r8154, 18;
	mov.b64 	%rd11460, {%r8156, %r8155};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8157}, %rd11426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8158,%dummy}, %rd11426;
	}
	shf.l.wrap.b32 	%r8159, %r8158, %r8157, 27;
	shf.l.wrap.b32 	%r8160, %r8157, %r8158, 27;
	mov.b64 	%rd11461, {%r8160, %r8159};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8161,%dummy}, %rd11427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8162}, %rd11427;
	}
	shf.r.wrap.b32 	%r8163, %r8162, %r8161, 28;
	shf.r.wrap.b32 	%r8164, %r8161, %r8162, 28;
	mov.b64 	%rd11462, {%r8164, %r8163};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8165}, %rd11433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8166,%dummy}, %rd11433;
	}
	shf.l.wrap.b32 	%r8167, %r8166, %r8165, 10;
	shf.l.wrap.b32 	%r8168, %r8165, %r8166, 10;
	mov.b64 	%rd11463, {%r8168, %r8167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8169}, %rd11439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8170,%dummy}, %rd11439;
	}
	shf.l.wrap.b32 	%r8171, %r8170, %r8169, 15;
	shf.l.wrap.b32 	%r8172, %r8169, %r8170, 15;
	mov.b64 	%rd11464, {%r8172, %r8171};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8173,%dummy}, %rd11445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8174}, %rd11445;
	}
	shf.r.wrap.b32 	%r8175, %r8174, %r8173, 8;
	shf.r.wrap.b32 	%r8176, %r8173, %r8174, 8;
	mov.b64 	%rd11465, {%r8176, %r8175};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8177,%dummy}, %rd11424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8178}, %rd11424;
	}
	shf.r.wrap.b32 	%r8179, %r8178, %r8177, 2;
	shf.r.wrap.b32 	%r8180, %r8177, %r8178, 2;
	mov.b64 	%rd11466, {%r8180, %r8179};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8181,%dummy}, %rd11430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8182}, %rd11430;
	}
	shf.r.wrap.b32 	%r8183, %r8182, %r8181, 9;
	shf.r.wrap.b32 	%r8184, %r8181, %r8182, 9;
	mov.b64 	%rd11467, {%r8184, %r8183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8185,%dummy}, %rd11436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8186}, %rd11436;
	}
	shf.r.wrap.b32 	%r8187, %r8186, %r8185, 25;
	shf.r.wrap.b32 	%r8188, %r8185, %r8186, 25;
	mov.b64 	%rd11468, {%r8188, %r8187};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8189,%dummy}, %rd11437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8190}, %rd11437;
	}
	shf.r.wrap.b32 	%r8191, %r8190, %r8189, 23;
	shf.r.wrap.b32 	%r8192, %r8189, %r8190, 23;
	mov.b64 	%rd11469, {%r8192, %r8191};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8193}, %rd11443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8194,%dummy}, %rd11443;
	}
	shf.l.wrap.b32 	%r8195, %r8194, %r8193, 2;
	shf.l.wrap.b32 	%r8196, %r8193, %r8194, 2;
	mov.b64 	%rd11470, {%r8196, %r8195};
	not.b64 	%rd11471, %rd11447;
	and.b64  	%rd11472, %rd11448, %rd11471;
	xor.b64  	%rd11473, %rd11472, %rd11422;
	not.b64 	%rd11474, %rd11448;
	and.b64  	%rd11475, %rd11449, %rd11474;
	xor.b64  	%rd11476, %rd11475, %rd11447;
	not.b64 	%rd11477, %rd11449;
	and.b64  	%rd11478, %rd11450, %rd11477;
	xor.b64  	%rd11479, %rd11478, %rd11448;
	not.b64 	%rd11480, %rd11450;
	and.b64  	%rd11481, %rd11422, %rd11480;
	xor.b64  	%rd11482, %rd11481, %rd11449;
	not.b64 	%rd11483, %rd11422;
	and.b64  	%rd11484, %rd11447, %rd11483;
	xor.b64  	%rd11485, %rd11484, %rd11450;
	not.b64 	%rd11486, %rd11452;
	and.b64  	%rd11487, %rd11453, %rd11486;
	xor.b64  	%rd11488, %rd11487, %rd11451;
	not.b64 	%rd11489, %rd11453;
	and.b64  	%rd11490, %rd11454, %rd11489;
	xor.b64  	%rd11491, %rd11490, %rd11452;
	not.b64 	%rd11492, %rd11454;
	and.b64  	%rd11493, %rd11455, %rd11492;
	xor.b64  	%rd11494, %rd11493, %rd11453;
	not.b64 	%rd11495, %rd11455;
	and.b64  	%rd11496, %rd11451, %rd11495;
	xor.b64  	%rd11497, %rd11496, %rd11454;
	not.b64 	%rd11498, %rd11451;
	and.b64  	%rd11499, %rd11452, %rd11498;
	xor.b64  	%rd11500, %rd11499, %rd11455;
	not.b64 	%rd11501, %rd11457;
	and.b64  	%rd11502, %rd11458, %rd11501;
	xor.b64  	%rd11503, %rd11502, %rd11456;
	not.b64 	%rd11504, %rd11458;
	and.b64  	%rd11505, %rd11459, %rd11504;
	xor.b64  	%rd11506, %rd11505, %rd11457;
	not.b64 	%rd11507, %rd11459;
	and.b64  	%rd11508, %rd11460, %rd11507;
	xor.b64  	%rd11509, %rd11508, %rd11458;
	not.b64 	%rd11510, %rd11460;
	and.b64  	%rd11511, %rd11456, %rd11510;
	xor.b64  	%rd11512, %rd11511, %rd11459;
	not.b64 	%rd11513, %rd11456;
	and.b64  	%rd11514, %rd11457, %rd11513;
	xor.b64  	%rd11515, %rd11514, %rd11460;
	not.b64 	%rd11516, %rd11462;
	and.b64  	%rd11517, %rd11463, %rd11516;
	xor.b64  	%rd11518, %rd11517, %rd11461;
	not.b64 	%rd11519, %rd11463;
	and.b64  	%rd11520, %rd11464, %rd11519;
	xor.b64  	%rd11521, %rd11520, %rd11462;
	not.b64 	%rd11522, %rd11464;
	and.b64  	%rd11523, %rd11465, %rd11522;
	xor.b64  	%rd11524, %rd11523, %rd11463;
	not.b64 	%rd11525, %rd11465;
	and.b64  	%rd11526, %rd11461, %rd11525;
	xor.b64  	%rd11527, %rd11526, %rd11464;
	not.b64 	%rd11528, %rd11461;
	and.b64  	%rd11529, %rd11462, %rd11528;
	xor.b64  	%rd11530, %rd11529, %rd11465;
	not.b64 	%rd11531, %rd11467;
	and.b64  	%rd11532, %rd11468, %rd11531;
	xor.b64  	%rd11533, %rd11532, %rd11466;
	not.b64 	%rd11534, %rd11468;
	and.b64  	%rd11535, %rd11469, %rd11534;
	xor.b64  	%rd11536, %rd11535, %rd11467;
	not.b64 	%rd11537, %rd11469;
	and.b64  	%rd11538, %rd11470, %rd11537;
	xor.b64  	%rd11539, %rd11538, %rd11468;
	not.b64 	%rd11540, %rd11470;
	and.b64  	%rd11541, %rd11466, %rd11540;
	xor.b64  	%rd11542, %rd11541, %rd11469;
	not.b64 	%rd11543, %rd11466;
	and.b64  	%rd11544, %rd11467, %rd11543;
	xor.b64  	%rd11545, %rd11544, %rd11470;
	xor.b64  	%rd11547, %rd11473, %rd37;
	xor.b64  	%rd11548, %rd11488, %rd11547;
	xor.b64  	%rd11549, %rd11548, %rd11503;
	xor.b64  	%rd11550, %rd11549, %rd11518;
	xor.b64  	%rd11551, %rd11550, %rd11533;
	xor.b64  	%rd11552, %rd11491, %rd11476;
	xor.b64  	%rd11553, %rd11552, %rd11506;
	xor.b64  	%rd11554, %rd11553, %rd11521;
	xor.b64  	%rd11555, %rd11554, %rd11536;
	xor.b64  	%rd11556, %rd11494, %rd11479;
	xor.b64  	%rd11557, %rd11556, %rd11509;
	xor.b64  	%rd11558, %rd11557, %rd11524;
	xor.b64  	%rd11559, %rd11558, %rd11539;
	xor.b64  	%rd11560, %rd11497, %rd11482;
	xor.b64  	%rd11561, %rd11560, %rd11512;
	xor.b64  	%rd11562, %rd11561, %rd11527;
	xor.b64  	%rd11563, %rd11562, %rd11542;
	xor.b64  	%rd11564, %rd11500, %rd11485;
	xor.b64  	%rd11565, %rd11564, %rd11515;
	xor.b64  	%rd11566, %rd11565, %rd11530;
	xor.b64  	%rd11567, %rd11566, %rd11545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8197}, %rd11555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8198,%dummy}, %rd11555;
	}
	shf.l.wrap.b32 	%r8199, %r8198, %r8197, 1;
	shf.l.wrap.b32 	%r8200, %r8197, %r8198, 1;
	mov.b64 	%rd11568, {%r8200, %r8199};
	xor.b64  	%rd11569, %rd11567, %rd11568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8201}, %rd11559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8202,%dummy}, %rd11559;
	}
	shf.l.wrap.b32 	%r8203, %r8202, %r8201, 1;
	shf.l.wrap.b32 	%r8204, %r8201, %r8202, 1;
	mov.b64 	%rd11570, {%r8204, %r8203};
	xor.b64  	%rd11571, %rd11570, %rd11551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8205}, %rd11563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8206,%dummy}, %rd11563;
	}
	shf.l.wrap.b32 	%r8207, %r8206, %r8205, 1;
	shf.l.wrap.b32 	%r8208, %r8205, %r8206, 1;
	mov.b64 	%rd11572, {%r8208, %r8207};
	xor.b64  	%rd11573, %rd11572, %rd11555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8209}, %rd11567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8210,%dummy}, %rd11567;
	}
	shf.l.wrap.b32 	%r8211, %r8210, %r8209, 1;
	shf.l.wrap.b32 	%r8212, %r8209, %r8210, 1;
	mov.b64 	%rd11574, {%r8212, %r8211};
	xor.b64  	%rd11575, %rd11574, %rd11559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8213}, %rd11551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8214,%dummy}, %rd11551;
	}
	shf.l.wrap.b32 	%r8215, %r8214, %r8213, 1;
	shf.l.wrap.b32 	%r8216, %r8213, %r8214, 1;
	mov.b64 	%rd11576, {%r8216, %r8215};
	xor.b64  	%rd11577, %rd11563, %rd11576;
	xor.b64  	%rd11578, %rd11569, %rd11547;
	xor.b64  	%rd11579, %rd11571, %rd11476;
	xor.b64  	%rd11580, %rd11573, %rd11479;
	xor.b64  	%rd11581, %rd11575, %rd11482;
	xor.b64  	%rd11582, %rd11577, %rd11485;
	xor.b64  	%rd11583, %rd11569, %rd11488;
	xor.b64  	%rd11584, %rd11571, %rd11491;
	xor.b64  	%rd11585, %rd11573, %rd11494;
	xor.b64  	%rd11586, %rd11575, %rd11497;
	xor.b64  	%rd11587, %rd11577, %rd11500;
	xor.b64  	%rd11588, %rd11569, %rd11503;
	xor.b64  	%rd11589, %rd11571, %rd11506;
	xor.b64  	%rd11590, %rd11573, %rd11509;
	xor.b64  	%rd11591, %rd11575, %rd11512;
	xor.b64  	%rd11592, %rd11577, %rd11515;
	xor.b64  	%rd11593, %rd11569, %rd11518;
	xor.b64  	%rd11594, %rd11571, %rd11521;
	xor.b64  	%rd11595, %rd11573, %rd11524;
	xor.b64  	%rd11596, %rd11575, %rd11527;
	xor.b64  	%rd11597, %rd11577, %rd11530;
	xor.b64  	%rd11598, %rd11569, %rd11533;
	xor.b64  	%rd11599, %rd11571, %rd11536;
	xor.b64  	%rd11600, %rd11573, %rd11539;
	xor.b64  	%rd11601, %rd11575, %rd11542;
	xor.b64  	%rd11602, %rd11577, %rd11545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8217,%dummy}, %rd11584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8218}, %rd11584;
	}
	shf.r.wrap.b32 	%r8219, %r8218, %r8217, 20;
	shf.r.wrap.b32 	%r8220, %r8217, %r8218, 20;
	mov.b64 	%rd11603, {%r8220, %r8219};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8221,%dummy}, %rd11590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8222}, %rd11590;
	}
	shf.r.wrap.b32 	%r8223, %r8222, %r8221, 21;
	shf.r.wrap.b32 	%r8224, %r8221, %r8222, 21;
	mov.b64 	%rd11604, {%r8224, %r8223};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8225}, %rd11596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8226,%dummy}, %rd11596;
	}
	shf.l.wrap.b32 	%r8227, %r8226, %r8225, 21;
	shf.l.wrap.b32 	%r8228, %r8225, %r8226, 21;
	mov.b64 	%rd11605, {%r8228, %r8227};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8229}, %rd11602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8230,%dummy}, %rd11602;
	}
	shf.l.wrap.b32 	%r8231, %r8230, %r8229, 14;
	shf.l.wrap.b32 	%r8232, %r8229, %r8230, 14;
	mov.b64 	%rd11606, {%r8232, %r8231};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8233}, %rd11581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8234,%dummy}, %rd11581;
	}
	shf.l.wrap.b32 	%r8235, %r8234, %r8233, 28;
	shf.l.wrap.b32 	%r8236, %r8233, %r8234, 28;
	mov.b64 	%rd11607, {%r8236, %r8235};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8237}, %rd11587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8238,%dummy}, %rd11587;
	}
	shf.l.wrap.b32 	%r8239, %r8238, %r8237, 20;
	shf.l.wrap.b32 	%r8240, %r8237, %r8238, 20;
	mov.b64 	%rd11608, {%r8240, %r8239};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8241}, %rd11588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8242,%dummy}, %rd11588;
	}
	shf.l.wrap.b32 	%r8243, %r8242, %r8241, 3;
	shf.l.wrap.b32 	%r8244, %r8241, %r8242, 3;
	mov.b64 	%rd11609, {%r8244, %r8243};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8245,%dummy}, %rd11594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8246}, %rd11594;
	}
	shf.r.wrap.b32 	%r8247, %r8246, %r8245, 19;
	shf.r.wrap.b32 	%r8248, %r8245, %r8246, 19;
	mov.b64 	%rd11610, {%r8248, %r8247};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8249,%dummy}, %rd11600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8250}, %rd11600;
	}
	shf.r.wrap.b32 	%r8251, %r8250, %r8249, 3;
	shf.r.wrap.b32 	%r8252, %r8249, %r8250, 3;
	mov.b64 	%rd11611, {%r8252, %r8251};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8253}, %rd11579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8254,%dummy}, %rd11579;
	}
	shf.l.wrap.b32 	%r8255, %r8254, %r8253, 1;
	shf.l.wrap.b32 	%r8256, %r8253, %r8254, 1;
	mov.b64 	%rd11612, {%r8256, %r8255};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8257}, %rd11585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8258,%dummy}, %rd11585;
	}
	shf.l.wrap.b32 	%r8259, %r8258, %r8257, 6;
	shf.l.wrap.b32 	%r8260, %r8257, %r8258, 6;
	mov.b64 	%rd11613, {%r8260, %r8259};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8261}, %rd11591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8262,%dummy}, %rd11591;
	}
	shf.l.wrap.b32 	%r8263, %r8262, %r8261, 25;
	shf.l.wrap.b32 	%r8264, %r8261, %r8262, 25;
	mov.b64 	%rd11614, {%r8264, %r8263};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8265}, %rd11597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8266,%dummy}, %rd11597;
	}
	shf.l.wrap.b32 	%r8267, %r8266, %r8265, 8;
	shf.l.wrap.b32 	%r8268, %r8265, %r8266, 8;
	mov.b64 	%rd11615, {%r8268, %r8267};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8269}, %rd11598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8270,%dummy}, %rd11598;
	}
	shf.l.wrap.b32 	%r8271, %r8270, %r8269, 18;
	shf.l.wrap.b32 	%r8272, %r8269, %r8270, 18;
	mov.b64 	%rd11616, {%r8272, %r8271};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8273}, %rd11582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8274,%dummy}, %rd11582;
	}
	shf.l.wrap.b32 	%r8275, %r8274, %r8273, 27;
	shf.l.wrap.b32 	%r8276, %r8273, %r8274, 27;
	mov.b64 	%rd11617, {%r8276, %r8275};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8277,%dummy}, %rd11583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8278}, %rd11583;
	}
	shf.r.wrap.b32 	%r8279, %r8278, %r8277, 28;
	shf.r.wrap.b32 	%r8280, %r8277, %r8278, 28;
	mov.b64 	%rd11618, {%r8280, %r8279};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8281}, %rd11589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8282,%dummy}, %rd11589;
	}
	shf.l.wrap.b32 	%r8283, %r8282, %r8281, 10;
	shf.l.wrap.b32 	%r8284, %r8281, %r8282, 10;
	mov.b64 	%rd11619, {%r8284, %r8283};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8285}, %rd11595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8286,%dummy}, %rd11595;
	}
	shf.l.wrap.b32 	%r8287, %r8286, %r8285, 15;
	shf.l.wrap.b32 	%r8288, %r8285, %r8286, 15;
	mov.b64 	%rd11620, {%r8288, %r8287};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8289,%dummy}, %rd11601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8290}, %rd11601;
	}
	shf.r.wrap.b32 	%r8291, %r8290, %r8289, 8;
	shf.r.wrap.b32 	%r8292, %r8289, %r8290, 8;
	mov.b64 	%rd11621, {%r8292, %r8291};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8293,%dummy}, %rd11580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8294}, %rd11580;
	}
	shf.r.wrap.b32 	%r8295, %r8294, %r8293, 2;
	shf.r.wrap.b32 	%r8296, %r8293, %r8294, 2;
	mov.b64 	%rd11622, {%r8296, %r8295};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8297,%dummy}, %rd11586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8298}, %rd11586;
	}
	shf.r.wrap.b32 	%r8299, %r8298, %r8297, 9;
	shf.r.wrap.b32 	%r8300, %r8297, %r8298, 9;
	mov.b64 	%rd11623, {%r8300, %r8299};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8301,%dummy}, %rd11592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8302}, %rd11592;
	}
	shf.r.wrap.b32 	%r8303, %r8302, %r8301, 25;
	shf.r.wrap.b32 	%r8304, %r8301, %r8302, 25;
	mov.b64 	%rd11624, {%r8304, %r8303};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8305,%dummy}, %rd11593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8306}, %rd11593;
	}
	shf.r.wrap.b32 	%r8307, %r8306, %r8305, 23;
	shf.r.wrap.b32 	%r8308, %r8305, %r8306, 23;
	mov.b64 	%rd11625, {%r8308, %r8307};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8309}, %rd11599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8310,%dummy}, %rd11599;
	}
	shf.l.wrap.b32 	%r8311, %r8310, %r8309, 2;
	shf.l.wrap.b32 	%r8312, %r8309, %r8310, 2;
	mov.b64 	%rd11626, {%r8312, %r8311};
	not.b64 	%rd11627, %rd11603;
	and.b64  	%rd11628, %rd11604, %rd11627;
	xor.b64  	%rd11629, %rd11628, %rd11578;
	not.b64 	%rd11630, %rd11604;
	and.b64  	%rd11631, %rd11605, %rd11630;
	xor.b64  	%rd11632, %rd11631, %rd11603;
	not.b64 	%rd11633, %rd11605;
	and.b64  	%rd11634, %rd11606, %rd11633;
	xor.b64  	%rd11635, %rd11634, %rd11604;
	not.b64 	%rd11636, %rd11606;
	and.b64  	%rd11637, %rd11578, %rd11636;
	xor.b64  	%rd11638, %rd11637, %rd11605;
	not.b64 	%rd11639, %rd11578;
	and.b64  	%rd11640, %rd11603, %rd11639;
	xor.b64  	%rd11641, %rd11640, %rd11606;
	not.b64 	%rd11642, %rd11608;
	and.b64  	%rd11643, %rd11609, %rd11642;
	xor.b64  	%rd11644, %rd11643, %rd11607;
	not.b64 	%rd11645, %rd11609;
	and.b64  	%rd11646, %rd11610, %rd11645;
	xor.b64  	%rd11647, %rd11646, %rd11608;
	not.b64 	%rd11648, %rd11610;
	and.b64  	%rd11649, %rd11611, %rd11648;
	xor.b64  	%rd11650, %rd11649, %rd11609;
	not.b64 	%rd11651, %rd11611;
	and.b64  	%rd11652, %rd11607, %rd11651;
	xor.b64  	%rd11653, %rd11652, %rd11610;
	not.b64 	%rd11654, %rd11607;
	and.b64  	%rd11655, %rd11608, %rd11654;
	xor.b64  	%rd11656, %rd11655, %rd11611;
	not.b64 	%rd11657, %rd11613;
	and.b64  	%rd11658, %rd11614, %rd11657;
	xor.b64  	%rd11659, %rd11658, %rd11612;
	not.b64 	%rd11660, %rd11614;
	and.b64  	%rd11661, %rd11615, %rd11660;
	xor.b64  	%rd11662, %rd11661, %rd11613;
	not.b64 	%rd11663, %rd11615;
	and.b64  	%rd11664, %rd11616, %rd11663;
	xor.b64  	%rd11665, %rd11664, %rd11614;
	not.b64 	%rd11666, %rd11616;
	and.b64  	%rd11667, %rd11612, %rd11666;
	xor.b64  	%rd11668, %rd11667, %rd11615;
	not.b64 	%rd11669, %rd11612;
	and.b64  	%rd11670, %rd11613, %rd11669;
	xor.b64  	%rd11671, %rd11670, %rd11616;
	not.b64 	%rd11672, %rd11618;
	and.b64  	%rd11673, %rd11619, %rd11672;
	xor.b64  	%rd11674, %rd11673, %rd11617;
	not.b64 	%rd11675, %rd11619;
	and.b64  	%rd11676, %rd11620, %rd11675;
	xor.b64  	%rd11677, %rd11676, %rd11618;
	not.b64 	%rd11678, %rd11620;
	and.b64  	%rd11679, %rd11621, %rd11678;
	xor.b64  	%rd11680, %rd11679, %rd11619;
	not.b64 	%rd11681, %rd11621;
	and.b64  	%rd11682, %rd11617, %rd11681;
	xor.b64  	%rd11683, %rd11682, %rd11620;
	not.b64 	%rd11684, %rd11617;
	and.b64  	%rd11685, %rd11618, %rd11684;
	xor.b64  	%rd11686, %rd11685, %rd11621;
	not.b64 	%rd11687, %rd11623;
	and.b64  	%rd11688, %rd11624, %rd11687;
	xor.b64  	%rd11689, %rd11688, %rd11622;
	not.b64 	%rd11690, %rd11624;
	and.b64  	%rd11691, %rd11625, %rd11690;
	xor.b64  	%rd11692, %rd11691, %rd11623;
	not.b64 	%rd11693, %rd11625;
	and.b64  	%rd11694, %rd11626, %rd11693;
	xor.b64  	%rd11695, %rd11694, %rd11624;
	not.b64 	%rd11696, %rd11626;
	and.b64  	%rd11697, %rd11622, %rd11696;
	xor.b64  	%rd11698, %rd11697, %rd11625;
	not.b64 	%rd11699, %rd11622;
	and.b64  	%rd11700, %rd11623, %rd11699;
	xor.b64  	%rd11701, %rd11700, %rd11626;
	xor.b64  	%rd11703, %rd11629, %rd38;
	xor.b64  	%rd11704, %rd11644, %rd11703;
	xor.b64  	%rd11705, %rd11704, %rd11659;
	xor.b64  	%rd11706, %rd11705, %rd11674;
	xor.b64  	%rd11707, %rd11706, %rd11689;
	xor.b64  	%rd11708, %rd11647, %rd11632;
	xor.b64  	%rd11709, %rd11708, %rd11662;
	xor.b64  	%rd11710, %rd11709, %rd11677;
	xor.b64  	%rd11711, %rd11710, %rd11692;
	xor.b64  	%rd11712, %rd11650, %rd11635;
	xor.b64  	%rd11713, %rd11712, %rd11665;
	xor.b64  	%rd11714, %rd11713, %rd11680;
	xor.b64  	%rd11715, %rd11714, %rd11695;
	xor.b64  	%rd11716, %rd11653, %rd11638;
	xor.b64  	%rd11717, %rd11716, %rd11668;
	xor.b64  	%rd11718, %rd11717, %rd11683;
	xor.b64  	%rd11719, %rd11718, %rd11698;
	xor.b64  	%rd11720, %rd11656, %rd11641;
	xor.b64  	%rd11721, %rd11720, %rd11671;
	xor.b64  	%rd11722, %rd11721, %rd11686;
	xor.b64  	%rd11723, %rd11722, %rd11701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8313}, %rd11711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8314,%dummy}, %rd11711;
	}
	shf.l.wrap.b32 	%r8315, %r8314, %r8313, 1;
	shf.l.wrap.b32 	%r8316, %r8313, %r8314, 1;
	mov.b64 	%rd11724, {%r8316, %r8315};
	xor.b64  	%rd11725, %rd11723, %rd11724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8317}, %rd11715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8318,%dummy}, %rd11715;
	}
	shf.l.wrap.b32 	%r8319, %r8318, %r8317, 1;
	shf.l.wrap.b32 	%r8320, %r8317, %r8318, 1;
	mov.b64 	%rd11726, {%r8320, %r8319};
	xor.b64  	%rd11727, %rd11726, %rd11707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8321}, %rd11719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8322,%dummy}, %rd11719;
	}
	shf.l.wrap.b32 	%r8323, %r8322, %r8321, 1;
	shf.l.wrap.b32 	%r8324, %r8321, %r8322, 1;
	mov.b64 	%rd11728, {%r8324, %r8323};
	xor.b64  	%rd11729, %rd11728, %rd11711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8325}, %rd11723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8326,%dummy}, %rd11723;
	}
	shf.l.wrap.b32 	%r8327, %r8326, %r8325, 1;
	shf.l.wrap.b32 	%r8328, %r8325, %r8326, 1;
	mov.b64 	%rd11730, {%r8328, %r8327};
	xor.b64  	%rd11731, %rd11730, %rd11715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8329}, %rd11707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8330,%dummy}, %rd11707;
	}
	shf.l.wrap.b32 	%r8331, %r8330, %r8329, 1;
	shf.l.wrap.b32 	%r8332, %r8329, %r8330, 1;
	mov.b64 	%rd11732, {%r8332, %r8331};
	xor.b64  	%rd11733, %rd11719, %rd11732;
	xor.b64  	%rd11734, %rd11725, %rd11703;
	xor.b64  	%rd11735, %rd11727, %rd11632;
	xor.b64  	%rd11736, %rd11729, %rd11635;
	xor.b64  	%rd11737, %rd11731, %rd11638;
	xor.b64  	%rd11738, %rd11733, %rd11641;
	xor.b64  	%rd11739, %rd11725, %rd11644;
	xor.b64  	%rd11740, %rd11727, %rd11647;
	xor.b64  	%rd11741, %rd11729, %rd11650;
	xor.b64  	%rd11742, %rd11731, %rd11653;
	xor.b64  	%rd11743, %rd11733, %rd11656;
	xor.b64  	%rd11744, %rd11725, %rd11659;
	xor.b64  	%rd11745, %rd11727, %rd11662;
	xor.b64  	%rd11746, %rd11729, %rd11665;
	xor.b64  	%rd11747, %rd11731, %rd11668;
	xor.b64  	%rd11748, %rd11733, %rd11671;
	xor.b64  	%rd11749, %rd11725, %rd11674;
	xor.b64  	%rd11750, %rd11727, %rd11677;
	xor.b64  	%rd11751, %rd11729, %rd11680;
	xor.b64  	%rd11752, %rd11731, %rd11683;
	xor.b64  	%rd11753, %rd11733, %rd11686;
	xor.b64  	%rd11754, %rd11725, %rd11689;
	xor.b64  	%rd11755, %rd11727, %rd11692;
	xor.b64  	%rd11756, %rd11729, %rd11695;
	xor.b64  	%rd11757, %rd11731, %rd11698;
	xor.b64  	%rd11758, %rd11733, %rd11701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8333,%dummy}, %rd11740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8334}, %rd11740;
	}
	shf.r.wrap.b32 	%r8335, %r8334, %r8333, 20;
	shf.r.wrap.b32 	%r8336, %r8333, %r8334, 20;
	mov.b64 	%rd11759, {%r8336, %r8335};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8337,%dummy}, %rd11746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8338}, %rd11746;
	}
	shf.r.wrap.b32 	%r8339, %r8338, %r8337, 21;
	shf.r.wrap.b32 	%r8340, %r8337, %r8338, 21;
	mov.b64 	%rd11760, {%r8340, %r8339};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8341}, %rd11752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8342,%dummy}, %rd11752;
	}
	shf.l.wrap.b32 	%r8343, %r8342, %r8341, 21;
	shf.l.wrap.b32 	%r8344, %r8341, %r8342, 21;
	mov.b64 	%rd11761, {%r8344, %r8343};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8345}, %rd11758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8346,%dummy}, %rd11758;
	}
	shf.l.wrap.b32 	%r8347, %r8346, %r8345, 14;
	shf.l.wrap.b32 	%r8348, %r8345, %r8346, 14;
	mov.b64 	%rd11762, {%r8348, %r8347};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8349}, %rd11737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8350,%dummy}, %rd11737;
	}
	shf.l.wrap.b32 	%r8351, %r8350, %r8349, 28;
	shf.l.wrap.b32 	%r8352, %r8349, %r8350, 28;
	mov.b64 	%rd11763, {%r8352, %r8351};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8353}, %rd11743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8354,%dummy}, %rd11743;
	}
	shf.l.wrap.b32 	%r8355, %r8354, %r8353, 20;
	shf.l.wrap.b32 	%r8356, %r8353, %r8354, 20;
	mov.b64 	%rd11764, {%r8356, %r8355};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8357}, %rd11744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8358,%dummy}, %rd11744;
	}
	shf.l.wrap.b32 	%r8359, %r8358, %r8357, 3;
	shf.l.wrap.b32 	%r8360, %r8357, %r8358, 3;
	mov.b64 	%rd11765, {%r8360, %r8359};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8361,%dummy}, %rd11750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8362}, %rd11750;
	}
	shf.r.wrap.b32 	%r8363, %r8362, %r8361, 19;
	shf.r.wrap.b32 	%r8364, %r8361, %r8362, 19;
	mov.b64 	%rd11766, {%r8364, %r8363};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8365,%dummy}, %rd11756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8366}, %rd11756;
	}
	shf.r.wrap.b32 	%r8367, %r8366, %r8365, 3;
	shf.r.wrap.b32 	%r8368, %r8365, %r8366, 3;
	mov.b64 	%rd11767, {%r8368, %r8367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8369}, %rd11735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8370,%dummy}, %rd11735;
	}
	shf.l.wrap.b32 	%r8371, %r8370, %r8369, 1;
	shf.l.wrap.b32 	%r8372, %r8369, %r8370, 1;
	mov.b64 	%rd11768, {%r8372, %r8371};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8373}, %rd11741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8374,%dummy}, %rd11741;
	}
	shf.l.wrap.b32 	%r8375, %r8374, %r8373, 6;
	shf.l.wrap.b32 	%r8376, %r8373, %r8374, 6;
	mov.b64 	%rd11769, {%r8376, %r8375};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8377}, %rd11747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8378,%dummy}, %rd11747;
	}
	shf.l.wrap.b32 	%r8379, %r8378, %r8377, 25;
	shf.l.wrap.b32 	%r8380, %r8377, %r8378, 25;
	mov.b64 	%rd11770, {%r8380, %r8379};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8381}, %rd11753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8382,%dummy}, %rd11753;
	}
	shf.l.wrap.b32 	%r8383, %r8382, %r8381, 8;
	shf.l.wrap.b32 	%r8384, %r8381, %r8382, 8;
	mov.b64 	%rd11771, {%r8384, %r8383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8385}, %rd11754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8386,%dummy}, %rd11754;
	}
	shf.l.wrap.b32 	%r8387, %r8386, %r8385, 18;
	shf.l.wrap.b32 	%r8388, %r8385, %r8386, 18;
	mov.b64 	%rd11772, {%r8388, %r8387};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8389}, %rd11738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8390,%dummy}, %rd11738;
	}
	shf.l.wrap.b32 	%r8391, %r8390, %r8389, 27;
	shf.l.wrap.b32 	%r8392, %r8389, %r8390, 27;
	mov.b64 	%rd11773, {%r8392, %r8391};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8393,%dummy}, %rd11739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8394}, %rd11739;
	}
	shf.r.wrap.b32 	%r8395, %r8394, %r8393, 28;
	shf.r.wrap.b32 	%r8396, %r8393, %r8394, 28;
	mov.b64 	%rd11774, {%r8396, %r8395};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8397}, %rd11745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8398,%dummy}, %rd11745;
	}
	shf.l.wrap.b32 	%r8399, %r8398, %r8397, 10;
	shf.l.wrap.b32 	%r8400, %r8397, %r8398, 10;
	mov.b64 	%rd11775, {%r8400, %r8399};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8401}, %rd11751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8402,%dummy}, %rd11751;
	}
	shf.l.wrap.b32 	%r8403, %r8402, %r8401, 15;
	shf.l.wrap.b32 	%r8404, %r8401, %r8402, 15;
	mov.b64 	%rd11776, {%r8404, %r8403};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8405,%dummy}, %rd11757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8406}, %rd11757;
	}
	shf.r.wrap.b32 	%r8407, %r8406, %r8405, 8;
	shf.r.wrap.b32 	%r8408, %r8405, %r8406, 8;
	mov.b64 	%rd11777, {%r8408, %r8407};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8409,%dummy}, %rd11736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8410}, %rd11736;
	}
	shf.r.wrap.b32 	%r8411, %r8410, %r8409, 2;
	shf.r.wrap.b32 	%r8412, %r8409, %r8410, 2;
	mov.b64 	%rd11778, {%r8412, %r8411};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8413,%dummy}, %rd11742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8414}, %rd11742;
	}
	shf.r.wrap.b32 	%r8415, %r8414, %r8413, 9;
	shf.r.wrap.b32 	%r8416, %r8413, %r8414, 9;
	mov.b64 	%rd11779, {%r8416, %r8415};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8417,%dummy}, %rd11748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8418}, %rd11748;
	}
	shf.r.wrap.b32 	%r8419, %r8418, %r8417, 25;
	shf.r.wrap.b32 	%r8420, %r8417, %r8418, 25;
	mov.b64 	%rd11780, {%r8420, %r8419};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8421,%dummy}, %rd11749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8422}, %rd11749;
	}
	shf.r.wrap.b32 	%r8423, %r8422, %r8421, 23;
	shf.r.wrap.b32 	%r8424, %r8421, %r8422, 23;
	mov.b64 	%rd11781, {%r8424, %r8423};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8425}, %rd11755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8426,%dummy}, %rd11755;
	}
	shf.l.wrap.b32 	%r8427, %r8426, %r8425, 2;
	shf.l.wrap.b32 	%r8428, %r8425, %r8426, 2;
	mov.b64 	%rd11782, {%r8428, %r8427};
	not.b64 	%rd11783, %rd11759;
	and.b64  	%rd11784, %rd11760, %rd11783;
	xor.b64  	%rd11785, %rd11784, %rd11734;
	not.b64 	%rd11786, %rd11760;
	and.b64  	%rd11787, %rd11761, %rd11786;
	xor.b64  	%rd11788, %rd11787, %rd11759;
	st.local.u64 	[%rd2+8], %rd11788;
	not.b64 	%rd11789, %rd11761;
	and.b64  	%rd11790, %rd11762, %rd11789;
	xor.b64  	%rd11791, %rd11790, %rd11760;
	st.local.u64 	[%rd2+16], %rd11791;
	not.b64 	%rd11792, %rd11762;
	and.b64  	%rd11793, %rd11734, %rd11792;
	xor.b64  	%rd11794, %rd11793, %rd11761;
	st.local.u64 	[%rd2+24], %rd11794;
	not.b64 	%rd11795, %rd11734;
	and.b64  	%rd11796, %rd11759, %rd11795;
	xor.b64  	%rd11797, %rd11796, %rd11762;
	st.local.u64 	[%rd2+32], %rd11797;
	not.b64 	%rd11798, %rd11764;
	and.b64  	%rd11799, %rd11765, %rd11798;
	xor.b64  	%rd11800, %rd11799, %rd11763;
	st.local.u64 	[%rd2+40], %rd11800;
	not.b64 	%rd11801, %rd11765;
	and.b64  	%rd11802, %rd11766, %rd11801;
	xor.b64  	%rd11803, %rd11802, %rd11764;
	st.local.u64 	[%rd2+48], %rd11803;
	not.b64 	%rd11804, %rd11766;
	and.b64  	%rd11805, %rd11767, %rd11804;
	xor.b64  	%rd11806, %rd11805, %rd11765;
	st.local.u64 	[%rd2+56], %rd11806;
	not.b64 	%rd11807, %rd11767;
	and.b64  	%rd11808, %rd11763, %rd11807;
	xor.b64  	%rd11809, %rd11808, %rd11766;
	st.local.u64 	[%rd2+64], %rd11809;
	not.b64 	%rd11810, %rd11763;
	and.b64  	%rd11811, %rd11764, %rd11810;
	xor.b64  	%rd11812, %rd11811, %rd11767;
	st.local.u64 	[%rd2+72], %rd11812;
	not.b64 	%rd11813, %rd11769;
	and.b64  	%rd11814, %rd11770, %rd11813;
	xor.b64  	%rd11815, %rd11814, %rd11768;
	st.local.u64 	[%rd2+80], %rd11815;
	not.b64 	%rd11816, %rd11770;
	and.b64  	%rd11817, %rd11771, %rd11816;
	xor.b64  	%rd11818, %rd11817, %rd11769;
	st.local.u64 	[%rd2+88], %rd11818;
	not.b64 	%rd11819, %rd11771;
	and.b64  	%rd11820, %rd11772, %rd11819;
	xor.b64  	%rd11821, %rd11820, %rd11770;
	st.local.u64 	[%rd2+96], %rd11821;
	not.b64 	%rd11822, %rd11772;
	and.b64  	%rd11823, %rd11768, %rd11822;
	xor.b64  	%rd11824, %rd11823, %rd11771;
	st.local.u64 	[%rd2+104], %rd11824;
	not.b64 	%rd11825, %rd11768;
	and.b64  	%rd11826, %rd11769, %rd11825;
	xor.b64  	%rd11827, %rd11826, %rd11772;
	st.local.u64 	[%rd2+112], %rd11827;
	not.b64 	%rd11828, %rd11774;
	and.b64  	%rd11829, %rd11775, %rd11828;
	xor.b64  	%rd11830, %rd11829, %rd11773;
	st.local.u64 	[%rd2+120], %rd11830;
	not.b64 	%rd11831, %rd11775;
	and.b64  	%rd11832, %rd11776, %rd11831;
	xor.b64  	%rd11833, %rd11832, %rd11774;
	st.local.u64 	[%rd2+128], %rd11833;
	not.b64 	%rd11834, %rd11776;
	and.b64  	%rd11835, %rd11777, %rd11834;
	xor.b64  	%rd11836, %rd11835, %rd11775;
	st.local.u64 	[%rd2+136], %rd11836;
	not.b64 	%rd11837, %rd11777;
	and.b64  	%rd11838, %rd11773, %rd11837;
	xor.b64  	%rd11839, %rd11838, %rd11776;
	st.local.u64 	[%rd2+144], %rd11839;
	not.b64 	%rd11840, %rd11773;
	and.b64  	%rd11841, %rd11774, %rd11840;
	xor.b64  	%rd11842, %rd11841, %rd11777;
	st.local.u64 	[%rd2+152], %rd11842;
	not.b64 	%rd11843, %rd11779;
	and.b64  	%rd11844, %rd11780, %rd11843;
	xor.b64  	%rd11845, %rd11844, %rd11778;
	st.local.u64 	[%rd2+160], %rd11845;
	not.b64 	%rd11846, %rd11780;
	and.b64  	%rd11847, %rd11781, %rd11846;
	xor.b64  	%rd11848, %rd11847, %rd11779;
	st.local.u64 	[%rd2+168], %rd11848;
	not.b64 	%rd11849, %rd11781;
	and.b64  	%rd11850, %rd11782, %rd11849;
	xor.b64  	%rd11851, %rd11850, %rd11780;
	st.local.u64 	[%rd2+176], %rd11851;
	not.b64 	%rd11852, %rd11782;
	and.b64  	%rd11853, %rd11778, %rd11852;
	xor.b64  	%rd11854, %rd11853, %rd11781;
	st.local.u64 	[%rd2+184], %rd11854;
	not.b64 	%rd11855, %rd11778;
	and.b64  	%rd11856, %rd11779, %rd11855;
	xor.b64  	%rd11857, %rd11856, %rd11782;
	st.local.u64 	[%rd2+192], %rd11857;
	xor.b64  	%rd11859, %rd11785, %rd39;
	st.local.u64 	[%rd2], %rd11859;
	st.local.u64 	[%rd2+392], %rd19853;

$L__BB2_38:
	and.b64  	%rd93, %rd19853, 63;
	shr.u64 	%rd94, %rd19853, 6;
	setp.eq.s64 	%p33, %rd94, 0;
	mov.u64 	%rd19860, 0;
	@%p33 bra 	$L__BB2_44;

	add.s64 	%rd11863, %rd94, -1;
	and.b64  	%rd19859, %rd94, 3;
	setp.lt.u64 	%p34, %rd11863, 3;
	mov.u64 	%rd19860, 0;
	mov.u32 	%r14034, 0;
	@%p34 bra 	$L__BB2_42;

	sub.s64 	%rd19855, %rd94, %rd19859;

$L__BB2_41:
	add.s64 	%rd11865, %rd2, %rd19860;
	ld.local.u64 	%rd11866, [%rd11865];
	ld.local.u8 	%rd11867, [%rd11865+200];
	ld.local.u8 	%rd11868, [%rd11865+201];
	bfi.b64 	%rd11869, %rd11868, %rd11867, 8, 8;
	ld.local.u8 	%rd11870, [%rd11865+202];
	ld.local.u8 	%rd11871, [%rd11865+203];
	bfi.b64 	%rd11872, %rd11871, %rd11870, 8, 8;
	bfi.b64 	%rd11873, %rd11872, %rd11869, 16, 16;
	ld.local.u8 	%rd11874, [%rd11865+204];
	ld.local.u8 	%rd11875, [%rd11865+205];
	bfi.b64 	%rd11876, %rd11875, %rd11874, 8, 8;
	ld.local.u8 	%rd11877, [%rd11865+206];
	ld.local.u8 	%rd11878, [%rd11865+207];
	bfi.b64 	%rd11879, %rd11878, %rd11877, 8, 8;
	bfi.b64 	%rd11880, %rd11879, %rd11876, 16, 16;
	bfi.b64 	%rd11881, %rd11880, %rd11873, 32, 32;
	xor.b64  	%rd11882, %rd11866, %rd11881;
	st.local.u64 	[%rd11865], %rd11882;
	ld.local.u64 	%rd11883, [%rd11865+8];
	ld.local.u8 	%rd11884, [%rd11865+208];
	ld.local.u8 	%rd11885, [%rd11865+209];
	bfi.b64 	%rd11886, %rd11885, %rd11884, 8, 8;
	ld.local.u8 	%rd11887, [%rd11865+210];
	ld.local.u8 	%rd11888, [%rd11865+211];
	bfi.b64 	%rd11889, %rd11888, %rd11887, 8, 8;
	bfi.b64 	%rd11890, %rd11889, %rd11886, 16, 16;
	ld.local.u8 	%rd11891, [%rd11865+212];
	ld.local.u8 	%rd11892, [%rd11865+213];
	bfi.b64 	%rd11893, %rd11892, %rd11891, 8, 8;
	ld.local.u8 	%rd11894, [%rd11865+214];
	ld.local.u8 	%rd11895, [%rd11865+215];
	bfi.b64 	%rd11896, %rd11895, %rd11894, 8, 8;
	bfi.b64 	%rd11897, %rd11896, %rd11893, 16, 16;
	bfi.b64 	%rd11898, %rd11897, %rd11890, 32, 32;
	xor.b64  	%rd11899, %rd11883, %rd11898;
	st.local.u64 	[%rd11865+8], %rd11899;
	ld.local.u64 	%rd11900, [%rd11865+16];
	ld.local.u8 	%rd11901, [%rd11865+216];
	ld.local.u8 	%rd11902, [%rd11865+217];
	bfi.b64 	%rd11903, %rd11902, %rd11901, 8, 8;
	ld.local.u8 	%rd11904, [%rd11865+218];
	ld.local.u8 	%rd11905, [%rd11865+219];
	bfi.b64 	%rd11906, %rd11905, %rd11904, 8, 8;
	bfi.b64 	%rd11907, %rd11906, %rd11903, 16, 16;
	ld.local.u8 	%rd11908, [%rd11865+220];
	ld.local.u8 	%rd11909, [%rd11865+221];
	bfi.b64 	%rd11910, %rd11909, %rd11908, 8, 8;
	ld.local.u8 	%rd11911, [%rd11865+222];
	ld.local.u8 	%rd11912, [%rd11865+223];
	bfi.b64 	%rd11913, %rd11912, %rd11911, 8, 8;
	bfi.b64 	%rd11914, %rd11913, %rd11910, 16, 16;
	bfi.b64 	%rd11915, %rd11914, %rd11907, 32, 32;
	xor.b64  	%rd11916, %rd11900, %rd11915;
	st.local.u64 	[%rd11865+16], %rd11916;
	ld.local.u64 	%rd11917, [%rd11865+24];
	ld.local.u8 	%rd11918, [%rd11865+224];
	ld.local.u8 	%rd11919, [%rd11865+225];
	bfi.b64 	%rd11920, %rd11919, %rd11918, 8, 8;
	ld.local.u8 	%rd11921, [%rd11865+226];
	ld.local.u8 	%rd11922, [%rd11865+227];
	bfi.b64 	%rd11923, %rd11922, %rd11921, 8, 8;
	bfi.b64 	%rd11924, %rd11923, %rd11920, 16, 16;
	ld.local.u8 	%rd11925, [%rd11865+228];
	ld.local.u8 	%rd11926, [%rd11865+229];
	bfi.b64 	%rd11927, %rd11926, %rd11925, 8, 8;
	ld.local.u8 	%rd11928, [%rd11865+230];
	ld.local.u8 	%rd11929, [%rd11865+231];
	bfi.b64 	%rd11930, %rd11929, %rd11928, 8, 8;
	bfi.b64 	%rd11931, %rd11930, %rd11927, 16, 16;
	bfi.b64 	%rd11932, %rd11931, %rd11924, 32, 32;
	xor.b64  	%rd11933, %rd11917, %rd11932;
	st.local.u64 	[%rd11865+24], %rd11933;
	add.s64 	%rd19860, %rd19860, 32;
	add.s32 	%r14034, %r14034, 4;
	add.s64 	%rd19855, %rd19855, -4;
	setp.ne.s64 	%p35, %rd19855, 0;
	@%p35 bra 	$L__BB2_41;

$L__BB2_42:
	setp.eq.s64 	%p36, %rd19859, 0;
	@%p36 bra 	$L__BB2_44;

$L__BB2_43:
	.pragma "nounroll";
	add.s64 	%rd11934, %rd2, %rd19860;
	mul.wide.s32 	%rd11935, %r14034, 8;
	add.s64 	%rd11936, %rd2, %rd11935;
	ld.local.u64 	%rd11937, [%rd11936];
	ld.local.u8 	%rd11938, [%rd11934+200];
	ld.local.u8 	%rd11939, [%rd11934+201];
	bfi.b64 	%rd11940, %rd11939, %rd11938, 8, 8;
	ld.local.u8 	%rd11941, [%rd11934+202];
	ld.local.u8 	%rd11942, [%rd11934+203];
	bfi.b64 	%rd11943, %rd11942, %rd11941, 8, 8;
	bfi.b64 	%rd11944, %rd11943, %rd11940, 16, 16;
	ld.local.u8 	%rd11945, [%rd11934+204];
	ld.local.u8 	%rd11946, [%rd11934+205];
	bfi.b64 	%rd11947, %rd11946, %rd11945, 8, 8;
	ld.local.u8 	%rd11948, [%rd11934+206];
	ld.local.u8 	%rd11949, [%rd11934+207];
	bfi.b64 	%rd11950, %rd11949, %rd11948, 8, 8;
	bfi.b64 	%rd11951, %rd11950, %rd11947, 16, 16;
	bfi.b64 	%rd11952, %rd11951, %rd11944, 32, 32;
	xor.b64  	%rd11953, %rd11937, %rd11952;
	st.local.u64 	[%rd11936], %rd11953;
	add.s64 	%rd19860, %rd19860, 8;
	add.s32 	%r14034, %r14034, 1;
	add.s64 	%rd19859, %rd19859, -1;
	setp.ne.s64 	%p37, %rd19859, 0;
	@%p37 bra 	$L__BB2_43;

$L__BB2_44:
	setp.eq.s64 	%p38, %rd93, 0;
	@%p38 bra 	$L__BB2_46;

	cvt.u32.u64 	%r8431, %rd93;
	mov.u32 	%r8432, -1;
	shl.b32 	%r8433, %r8432, %r8431;
	not.b32 	%r8434, %r8433;
	cvt.s64.s32 	%rd11954, %r8434;
	add.s64 	%rd11955, %rd2, %rd19860;
	ld.local.u8 	%rd11956, [%rd11955+200];
	ld.local.u8 	%rd11957, [%rd11955+201];
	bfi.b64 	%rd11958, %rd11957, %rd11956, 8, 8;
	ld.local.u8 	%rd11959, [%rd11955+202];
	ld.local.u8 	%rd11960, [%rd11955+203];
	bfi.b64 	%rd11961, %rd11960, %rd11959, 8, 8;
	bfi.b64 	%rd11962, %rd11961, %rd11958, 16, 16;
	ld.local.u8 	%rd11963, [%rd11955+204];
	ld.local.u8 	%rd11964, [%rd11955+205];
	bfi.b64 	%rd11965, %rd11964, %rd11963, 8, 8;
	ld.local.u8 	%rd11966, [%rd11955+206];
	ld.local.u8 	%rd11967, [%rd11955+207];
	bfi.b64 	%rd11968, %rd11967, %rd11966, 8, 8;
	bfi.b64 	%rd11969, %rd11968, %rd11965, 16, 16;
	bfi.b64 	%rd11970, %rd11969, %rd11962, 32, 32;
	and.b64  	%rd11971, %rd11970, %rd11954;
	shl.b64 	%rd11972, %rd94, 3;
	add.s64 	%rd11973, %rd2, %rd11972;
	ld.local.u64 	%rd11974, [%rd11973];
	xor.b64  	%rd11975, %rd11974, %rd11971;
	st.local.u64 	[%rd11973], %rd11975;

$L__BB2_46:
	ld.const.u64 	%rd19825, [CUDA_KECCAK_CONSTS+40];
	ld.const.u64 	%rd19824, [CUDA_KECCAK_CONSTS+32];
	ld.const.u64 	%rd19823, [CUDA_KECCAK_CONSTS+24];
	ld.const.u64 	%rd19822, [CUDA_KECCAK_CONSTS+16];
	ld.const.u64 	%rd19821, [CUDA_KECCAK_CONSTS+8];
	ld.const.u64 	%rd19820, [CUDA_KECCAK_CONSTS];
	add.s64 	%rd11976, %rd7995, -1;
	shr.u64 	%rd11977, %rd11976, 3;
	and.b64  	%rd11978, %rd11977, 2305843009213693944;
	add.s64 	%rd11979, %rd2, %rd11978;
	ld.local.u64 	%rd11980, [%rd11979];
	xor.b64  	%rd11981, %rd11980, -9223372036854775808;
	st.local.u64 	[%rd11979], %rd11981;
	ld.local.u64 	%rd11982, [%rd2+40];
	ld.local.u64 	%rd11983, [%rd2];
	xor.b64  	%rd11984, %rd11982, %rd11983;
	ld.local.u64 	%rd11985, [%rd2+80];
	xor.b64  	%rd11986, %rd11984, %rd11985;
	ld.local.u64 	%rd11987, [%rd2+120];
	xor.b64  	%rd11988, %rd11986, %rd11987;
	ld.local.u64 	%rd11989, [%rd2+160];
	xor.b64  	%rd11990, %rd11988, %rd11989;
	ld.local.u64 	%rd11991, [%rd2+48];
	ld.local.u64 	%rd11992, [%rd2+8];
	xor.b64  	%rd11993, %rd11991, %rd11992;
	ld.local.u64 	%rd11994, [%rd2+88];
	xor.b64  	%rd11995, %rd11993, %rd11994;
	ld.local.u64 	%rd11996, [%rd2+128];
	xor.b64  	%rd11997, %rd11995, %rd11996;
	ld.local.u64 	%rd11998, [%rd2+168];
	xor.b64  	%rd11999, %rd11997, %rd11998;
	ld.local.u64 	%rd12000, [%rd2+56];
	ld.local.u64 	%rd12001, [%rd2+16];
	xor.b64  	%rd12002, %rd12000, %rd12001;
	ld.local.u64 	%rd12003, [%rd2+96];
	xor.b64  	%rd12004, %rd12002, %rd12003;
	ld.local.u64 	%rd12005, [%rd2+136];
	xor.b64  	%rd12006, %rd12004, %rd12005;
	ld.local.u64 	%rd12007, [%rd2+176];
	xor.b64  	%rd12008, %rd12006, %rd12007;
	ld.local.u64 	%rd12009, [%rd2+64];
	ld.local.u64 	%rd12010, [%rd2+24];
	xor.b64  	%rd12011, %rd12009, %rd12010;
	ld.local.u64 	%rd12012, [%rd2+104];
	xor.b64  	%rd12013, %rd12011, %rd12012;
	ld.local.u64 	%rd12014, [%rd2+144];
	xor.b64  	%rd12015, %rd12013, %rd12014;
	ld.local.u64 	%rd12016, [%rd2+184];
	xor.b64  	%rd12017, %rd12015, %rd12016;
	ld.local.u64 	%rd12018, [%rd2+72];
	ld.local.u64 	%rd12019, [%rd2+32];
	xor.b64  	%rd12020, %rd12018, %rd12019;
	ld.local.u64 	%rd12021, [%rd2+112];
	xor.b64  	%rd12022, %rd12020, %rd12021;
	ld.local.u64 	%rd12023, [%rd2+152];
	xor.b64  	%rd12024, %rd12022, %rd12023;
	ld.local.u64 	%rd12025, [%rd2+192];
	xor.b64  	%rd12026, %rd12024, %rd12025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8435}, %rd11999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8436,%dummy}, %rd11999;
	}
	shf.l.wrap.b32 	%r8437, %r8436, %r8435, 1;
	shf.l.wrap.b32 	%r8438, %r8435, %r8436, 1;
	mov.b64 	%rd12027, {%r8438, %r8437};
	xor.b64  	%rd12028, %rd12026, %rd12027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8439}, %rd12008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8440,%dummy}, %rd12008;
	}
	shf.l.wrap.b32 	%r8441, %r8440, %r8439, 1;
	shf.l.wrap.b32 	%r8442, %r8439, %r8440, 1;
	mov.b64 	%rd12029, {%r8442, %r8441};
	xor.b64  	%rd12030, %rd12029, %rd11990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8443}, %rd12017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8444,%dummy}, %rd12017;
	}
	shf.l.wrap.b32 	%r8445, %r8444, %r8443, 1;
	shf.l.wrap.b32 	%r8446, %r8443, %r8444, 1;
	mov.b64 	%rd12031, {%r8446, %r8445};
	xor.b64  	%rd12032, %rd12031, %rd11999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8447}, %rd12026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8448,%dummy}, %rd12026;
	}
	shf.l.wrap.b32 	%r8449, %r8448, %r8447, 1;
	shf.l.wrap.b32 	%r8450, %r8447, %r8448, 1;
	mov.b64 	%rd12033, {%r8450, %r8449};
	xor.b64  	%rd12034, %rd12033, %rd12008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8451}, %rd11990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8452,%dummy}, %rd11990;
	}
	shf.l.wrap.b32 	%r8453, %r8452, %r8451, 1;
	shf.l.wrap.b32 	%r8454, %r8451, %r8452, 1;
	mov.b64 	%rd12035, {%r8454, %r8453};
	xor.b64  	%rd12036, %rd12017, %rd12035;
	xor.b64  	%rd12037, %rd12028, %rd11983;
	xor.b64  	%rd12038, %rd12030, %rd11992;
	xor.b64  	%rd12039, %rd12032, %rd12001;
	xor.b64  	%rd12040, %rd12034, %rd12010;
	xor.b64  	%rd12041, %rd12036, %rd12019;
	xor.b64  	%rd12042, %rd12028, %rd11982;
	xor.b64  	%rd12043, %rd12030, %rd11991;
	xor.b64  	%rd12044, %rd12032, %rd12000;
	xor.b64  	%rd12045, %rd12034, %rd12009;
	xor.b64  	%rd12046, %rd12036, %rd12018;
	xor.b64  	%rd12047, %rd12028, %rd11985;
	xor.b64  	%rd12048, %rd12030, %rd11994;
	xor.b64  	%rd12049, %rd12032, %rd12003;
	xor.b64  	%rd12050, %rd12034, %rd12012;
	xor.b64  	%rd12051, %rd12036, %rd12021;
	xor.b64  	%rd12052, %rd12028, %rd11987;
	xor.b64  	%rd12053, %rd12030, %rd11996;
	xor.b64  	%rd12054, %rd12032, %rd12005;
	xor.b64  	%rd12055, %rd12034, %rd12014;
	xor.b64  	%rd12056, %rd12036, %rd12023;
	xor.b64  	%rd12057, %rd12028, %rd11989;
	xor.b64  	%rd12058, %rd12030, %rd11998;
	xor.b64  	%rd12059, %rd12032, %rd12007;
	xor.b64  	%rd12060, %rd12034, %rd12016;
	xor.b64  	%rd12061, %rd12036, %rd12025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8455,%dummy}, %rd12043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8456}, %rd12043;
	}
	shf.r.wrap.b32 	%r8457, %r8456, %r8455, 20;
	shf.r.wrap.b32 	%r8458, %r8455, %r8456, 20;
	mov.b64 	%rd12062, {%r8458, %r8457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8459,%dummy}, %rd12049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8460}, %rd12049;
	}
	shf.r.wrap.b32 	%r8461, %r8460, %r8459, 21;
	shf.r.wrap.b32 	%r8462, %r8459, %r8460, 21;
	mov.b64 	%rd12063, {%r8462, %r8461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8463}, %rd12055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8464,%dummy}, %rd12055;
	}
	shf.l.wrap.b32 	%r8465, %r8464, %r8463, 21;
	shf.l.wrap.b32 	%r8466, %r8463, %r8464, 21;
	mov.b64 	%rd12064, {%r8466, %r8465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8467}, %rd12061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8468,%dummy}, %rd12061;
	}
	shf.l.wrap.b32 	%r8469, %r8468, %r8467, 14;
	shf.l.wrap.b32 	%r8470, %r8467, %r8468, 14;
	mov.b64 	%rd12065, {%r8470, %r8469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd12040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8472,%dummy}, %rd12040;
	}
	shf.l.wrap.b32 	%r8473, %r8472, %r8471, 28;
	shf.l.wrap.b32 	%r8474, %r8471, %r8472, 28;
	mov.b64 	%rd12066, {%r8474, %r8473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8475}, %rd12046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8476,%dummy}, %rd12046;
	}
	shf.l.wrap.b32 	%r8477, %r8476, %r8475, 20;
	shf.l.wrap.b32 	%r8478, %r8475, %r8476, 20;
	mov.b64 	%rd12067, {%r8478, %r8477};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8479}, %rd12047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8480,%dummy}, %rd12047;
	}
	shf.l.wrap.b32 	%r8481, %r8480, %r8479, 3;
	shf.l.wrap.b32 	%r8482, %r8479, %r8480, 3;
	mov.b64 	%rd12068, {%r8482, %r8481};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8483,%dummy}, %rd12053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8484}, %rd12053;
	}
	shf.r.wrap.b32 	%r8485, %r8484, %r8483, 19;
	shf.r.wrap.b32 	%r8486, %r8483, %r8484, 19;
	mov.b64 	%rd12069, {%r8486, %r8485};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8487,%dummy}, %rd12059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8488}, %rd12059;
	}
	shf.r.wrap.b32 	%r8489, %r8488, %r8487, 3;
	shf.r.wrap.b32 	%r8490, %r8487, %r8488, 3;
	mov.b64 	%rd12070, {%r8490, %r8489};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8491}, %rd12038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8492,%dummy}, %rd12038;
	}
	shf.l.wrap.b32 	%r8493, %r8492, %r8491, 1;
	shf.l.wrap.b32 	%r8494, %r8491, %r8492, 1;
	mov.b64 	%rd12071, {%r8494, %r8493};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8495}, %rd12044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8496,%dummy}, %rd12044;
	}
	shf.l.wrap.b32 	%r8497, %r8496, %r8495, 6;
	shf.l.wrap.b32 	%r8498, %r8495, %r8496, 6;
	mov.b64 	%rd12072, {%r8498, %r8497};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8499}, %rd12050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8500,%dummy}, %rd12050;
	}
	shf.l.wrap.b32 	%r8501, %r8500, %r8499, 25;
	shf.l.wrap.b32 	%r8502, %r8499, %r8500, 25;
	mov.b64 	%rd12073, {%r8502, %r8501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd12056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8504,%dummy}, %rd12056;
	}
	shf.l.wrap.b32 	%r8505, %r8504, %r8503, 8;
	shf.l.wrap.b32 	%r8506, %r8503, %r8504, 8;
	mov.b64 	%rd12074, {%r8506, %r8505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8507}, %rd12057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8508,%dummy}, %rd12057;
	}
	shf.l.wrap.b32 	%r8509, %r8508, %r8507, 18;
	shf.l.wrap.b32 	%r8510, %r8507, %r8508, 18;
	mov.b64 	%rd12075, {%r8510, %r8509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8511}, %rd12041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd12041;
	}
	shf.l.wrap.b32 	%r8513, %r8512, %r8511, 27;
	shf.l.wrap.b32 	%r8514, %r8511, %r8512, 27;
	mov.b64 	%rd12076, {%r8514, %r8513};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8515,%dummy}, %rd12042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8516}, %rd12042;
	}
	shf.r.wrap.b32 	%r8517, %r8516, %r8515, 28;
	shf.r.wrap.b32 	%r8518, %r8515, %r8516, 28;
	mov.b64 	%rd12077, {%r8518, %r8517};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8519}, %rd12048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8520,%dummy}, %rd12048;
	}
	shf.l.wrap.b32 	%r8521, %r8520, %r8519, 10;
	shf.l.wrap.b32 	%r8522, %r8519, %r8520, 10;
	mov.b64 	%rd12078, {%r8522, %r8521};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8523}, %rd12054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8524,%dummy}, %rd12054;
	}
	shf.l.wrap.b32 	%r8525, %r8524, %r8523, 15;
	shf.l.wrap.b32 	%r8526, %r8523, %r8524, 15;
	mov.b64 	%rd12079, {%r8526, %r8525};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8527,%dummy}, %rd12060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8528}, %rd12060;
	}
	shf.r.wrap.b32 	%r8529, %r8528, %r8527, 8;
	shf.r.wrap.b32 	%r8530, %r8527, %r8528, 8;
	mov.b64 	%rd12080, {%r8530, %r8529};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8531,%dummy}, %rd12039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8532}, %rd12039;
	}
	shf.r.wrap.b32 	%r8533, %r8532, %r8531, 2;
	shf.r.wrap.b32 	%r8534, %r8531, %r8532, 2;
	mov.b64 	%rd12081, {%r8534, %r8533};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8535,%dummy}, %rd12045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8536}, %rd12045;
	}
	shf.r.wrap.b32 	%r8537, %r8536, %r8535, 9;
	shf.r.wrap.b32 	%r8538, %r8535, %r8536, 9;
	mov.b64 	%rd12082, {%r8538, %r8537};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8539,%dummy}, %rd12051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8540}, %rd12051;
	}
	shf.r.wrap.b32 	%r8541, %r8540, %r8539, 25;
	shf.r.wrap.b32 	%r8542, %r8539, %r8540, 25;
	mov.b64 	%rd12083, {%r8542, %r8541};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8543,%dummy}, %rd12052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8544}, %rd12052;
	}
	shf.r.wrap.b32 	%r8545, %r8544, %r8543, 23;
	shf.r.wrap.b32 	%r8546, %r8543, %r8544, 23;
	mov.b64 	%rd12084, {%r8546, %r8545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8547}, %rd12058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8548,%dummy}, %rd12058;
	}
	shf.l.wrap.b32 	%r8549, %r8548, %r8547, 2;
	shf.l.wrap.b32 	%r8550, %r8547, %r8548, 2;
	mov.b64 	%rd12085, {%r8550, %r8549};
	not.b64 	%rd12086, %rd12062;
	and.b64  	%rd12087, %rd12063, %rd12086;
	xor.b64  	%rd12088, %rd12087, %rd12037;
	not.b64 	%rd12089, %rd12063;
	and.b64  	%rd12090, %rd12064, %rd12089;
	xor.b64  	%rd12091, %rd12090, %rd12062;
	not.b64 	%rd12092, %rd12064;
	and.b64  	%rd12093, %rd12065, %rd12092;
	xor.b64  	%rd12094, %rd12093, %rd12063;
	not.b64 	%rd12095, %rd12065;
	and.b64  	%rd12096, %rd12037, %rd12095;
	xor.b64  	%rd12097, %rd12096, %rd12064;
	not.b64 	%rd12098, %rd12037;
	and.b64  	%rd12099, %rd12062, %rd12098;
	xor.b64  	%rd12100, %rd12099, %rd12065;
	not.b64 	%rd12101, %rd12067;
	and.b64  	%rd12102, %rd12068, %rd12101;
	xor.b64  	%rd12103, %rd12102, %rd12066;
	not.b64 	%rd12104, %rd12068;
	and.b64  	%rd12105, %rd12069, %rd12104;
	xor.b64  	%rd12106, %rd12105, %rd12067;
	not.b64 	%rd12107, %rd12069;
	and.b64  	%rd12108, %rd12070, %rd12107;
	xor.b64  	%rd12109, %rd12108, %rd12068;
	not.b64 	%rd12110, %rd12070;
	and.b64  	%rd12111, %rd12066, %rd12110;
	xor.b64  	%rd12112, %rd12111, %rd12069;
	not.b64 	%rd12113, %rd12066;
	and.b64  	%rd12114, %rd12067, %rd12113;
	xor.b64  	%rd12115, %rd12114, %rd12070;
	not.b64 	%rd12116, %rd12072;
	and.b64  	%rd12117, %rd12073, %rd12116;
	xor.b64  	%rd12118, %rd12117, %rd12071;
	not.b64 	%rd12119, %rd12073;
	and.b64  	%rd12120, %rd12074, %rd12119;
	xor.b64  	%rd12121, %rd12120, %rd12072;
	not.b64 	%rd12122, %rd12074;
	and.b64  	%rd12123, %rd12075, %rd12122;
	xor.b64  	%rd12124, %rd12123, %rd12073;
	not.b64 	%rd12125, %rd12075;
	and.b64  	%rd12126, %rd12071, %rd12125;
	xor.b64  	%rd12127, %rd12126, %rd12074;
	not.b64 	%rd12128, %rd12071;
	and.b64  	%rd12129, %rd12072, %rd12128;
	xor.b64  	%rd12130, %rd12129, %rd12075;
	not.b64 	%rd12131, %rd12077;
	and.b64  	%rd12132, %rd12078, %rd12131;
	xor.b64  	%rd12133, %rd12132, %rd12076;
	not.b64 	%rd12134, %rd12078;
	and.b64  	%rd12135, %rd12079, %rd12134;
	xor.b64  	%rd12136, %rd12135, %rd12077;
	not.b64 	%rd12137, %rd12079;
	and.b64  	%rd12138, %rd12080, %rd12137;
	xor.b64  	%rd12139, %rd12138, %rd12078;
	not.b64 	%rd12140, %rd12080;
	and.b64  	%rd12141, %rd12076, %rd12140;
	xor.b64  	%rd12142, %rd12141, %rd12079;
	not.b64 	%rd12143, %rd12076;
	and.b64  	%rd12144, %rd12077, %rd12143;
	xor.b64  	%rd12145, %rd12144, %rd12080;
	not.b64 	%rd12146, %rd12082;
	and.b64  	%rd12147, %rd12083, %rd12146;
	xor.b64  	%rd12148, %rd12147, %rd12081;
	not.b64 	%rd12149, %rd12083;
	and.b64  	%rd12150, %rd12084, %rd12149;
	xor.b64  	%rd12151, %rd12150, %rd12082;
	not.b64 	%rd12152, %rd12084;
	and.b64  	%rd12153, %rd12085, %rd12152;
	xor.b64  	%rd12154, %rd12153, %rd12083;
	not.b64 	%rd12155, %rd12085;
	and.b64  	%rd12156, %rd12081, %rd12155;
	xor.b64  	%rd12157, %rd12156, %rd12084;
	not.b64 	%rd12158, %rd12081;
	and.b64  	%rd12159, %rd12082, %rd12158;
	xor.b64  	%rd12160, %rd12159, %rd12085;
	xor.b64  	%rd12162, %rd12088, %rd19820;
	xor.b64  	%rd12163, %rd12103, %rd12162;
	xor.b64  	%rd12164, %rd12163, %rd12118;
	xor.b64  	%rd12165, %rd12164, %rd12133;
	xor.b64  	%rd12166, %rd12165, %rd12148;
	xor.b64  	%rd12167, %rd12106, %rd12091;
	xor.b64  	%rd12168, %rd12167, %rd12121;
	xor.b64  	%rd12169, %rd12168, %rd12136;
	xor.b64  	%rd12170, %rd12169, %rd12151;
	xor.b64  	%rd12171, %rd12109, %rd12094;
	xor.b64  	%rd12172, %rd12171, %rd12124;
	xor.b64  	%rd12173, %rd12172, %rd12139;
	xor.b64  	%rd12174, %rd12173, %rd12154;
	xor.b64  	%rd12175, %rd12112, %rd12097;
	xor.b64  	%rd12176, %rd12175, %rd12127;
	xor.b64  	%rd12177, %rd12176, %rd12142;
	xor.b64  	%rd12178, %rd12177, %rd12157;
	xor.b64  	%rd12179, %rd12115, %rd12100;
	xor.b64  	%rd12180, %rd12179, %rd12130;
	xor.b64  	%rd12181, %rd12180, %rd12145;
	xor.b64  	%rd12182, %rd12181, %rd12160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8551}, %rd12170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8552,%dummy}, %rd12170;
	}
	shf.l.wrap.b32 	%r8553, %r8552, %r8551, 1;
	shf.l.wrap.b32 	%r8554, %r8551, %r8552, 1;
	mov.b64 	%rd12183, {%r8554, %r8553};
	xor.b64  	%rd12184, %rd12182, %rd12183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8555}, %rd12174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8556,%dummy}, %rd12174;
	}
	shf.l.wrap.b32 	%r8557, %r8556, %r8555, 1;
	shf.l.wrap.b32 	%r8558, %r8555, %r8556, 1;
	mov.b64 	%rd12185, {%r8558, %r8557};
	xor.b64  	%rd12186, %rd12185, %rd12166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8559}, %rd12178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8560,%dummy}, %rd12178;
	}
	shf.l.wrap.b32 	%r8561, %r8560, %r8559, 1;
	shf.l.wrap.b32 	%r8562, %r8559, %r8560, 1;
	mov.b64 	%rd12187, {%r8562, %r8561};
	xor.b64  	%rd12188, %rd12187, %rd12170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8563}, %rd12182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8564,%dummy}, %rd12182;
	}
	shf.l.wrap.b32 	%r8565, %r8564, %r8563, 1;
	shf.l.wrap.b32 	%r8566, %r8563, %r8564, 1;
	mov.b64 	%rd12189, {%r8566, %r8565};
	xor.b64  	%rd12190, %rd12189, %rd12174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8567}, %rd12166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8568,%dummy}, %rd12166;
	}
	shf.l.wrap.b32 	%r8569, %r8568, %r8567, 1;
	shf.l.wrap.b32 	%r8570, %r8567, %r8568, 1;
	mov.b64 	%rd12191, {%r8570, %r8569};
	xor.b64  	%rd12192, %rd12178, %rd12191;
	xor.b64  	%rd12193, %rd12184, %rd12162;
	xor.b64  	%rd12194, %rd12186, %rd12091;
	xor.b64  	%rd12195, %rd12188, %rd12094;
	xor.b64  	%rd12196, %rd12190, %rd12097;
	xor.b64  	%rd12197, %rd12192, %rd12100;
	xor.b64  	%rd12198, %rd12184, %rd12103;
	xor.b64  	%rd12199, %rd12186, %rd12106;
	xor.b64  	%rd12200, %rd12188, %rd12109;
	xor.b64  	%rd12201, %rd12190, %rd12112;
	xor.b64  	%rd12202, %rd12192, %rd12115;
	xor.b64  	%rd12203, %rd12184, %rd12118;
	xor.b64  	%rd12204, %rd12186, %rd12121;
	xor.b64  	%rd12205, %rd12188, %rd12124;
	xor.b64  	%rd12206, %rd12190, %rd12127;
	xor.b64  	%rd12207, %rd12192, %rd12130;
	xor.b64  	%rd12208, %rd12184, %rd12133;
	xor.b64  	%rd12209, %rd12186, %rd12136;
	xor.b64  	%rd12210, %rd12188, %rd12139;
	xor.b64  	%rd12211, %rd12190, %rd12142;
	xor.b64  	%rd12212, %rd12192, %rd12145;
	xor.b64  	%rd12213, %rd12184, %rd12148;
	xor.b64  	%rd12214, %rd12186, %rd12151;
	xor.b64  	%rd12215, %rd12188, %rd12154;
	xor.b64  	%rd12216, %rd12190, %rd12157;
	xor.b64  	%rd12217, %rd12192, %rd12160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8571,%dummy}, %rd12199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8572}, %rd12199;
	}
	shf.r.wrap.b32 	%r8573, %r8572, %r8571, 20;
	shf.r.wrap.b32 	%r8574, %r8571, %r8572, 20;
	mov.b64 	%rd12218, {%r8574, %r8573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8575,%dummy}, %rd12205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8576}, %rd12205;
	}
	shf.r.wrap.b32 	%r8577, %r8576, %r8575, 21;
	shf.r.wrap.b32 	%r8578, %r8575, %r8576, 21;
	mov.b64 	%rd12219, {%r8578, %r8577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8579}, %rd12211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8580,%dummy}, %rd12211;
	}
	shf.l.wrap.b32 	%r8581, %r8580, %r8579, 21;
	shf.l.wrap.b32 	%r8582, %r8579, %r8580, 21;
	mov.b64 	%rd12220, {%r8582, %r8581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd12217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8584,%dummy}, %rd12217;
	}
	shf.l.wrap.b32 	%r8585, %r8584, %r8583, 14;
	shf.l.wrap.b32 	%r8586, %r8583, %r8584, 14;
	mov.b64 	%rd12221, {%r8586, %r8585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8587}, %rd12196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8588,%dummy}, %rd12196;
	}
	shf.l.wrap.b32 	%r8589, %r8588, %r8587, 28;
	shf.l.wrap.b32 	%r8590, %r8587, %r8588, 28;
	mov.b64 	%rd12222, {%r8590, %r8589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8591}, %rd12202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8592,%dummy}, %rd12202;
	}
	shf.l.wrap.b32 	%r8593, %r8592, %r8591, 20;
	shf.l.wrap.b32 	%r8594, %r8591, %r8592, 20;
	mov.b64 	%rd12223, {%r8594, %r8593};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8595}, %rd12203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8596,%dummy}, %rd12203;
	}
	shf.l.wrap.b32 	%r8597, %r8596, %r8595, 3;
	shf.l.wrap.b32 	%r8598, %r8595, %r8596, 3;
	mov.b64 	%rd12224, {%r8598, %r8597};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8599,%dummy}, %rd12209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8600}, %rd12209;
	}
	shf.r.wrap.b32 	%r8601, %r8600, %r8599, 19;
	shf.r.wrap.b32 	%r8602, %r8599, %r8600, 19;
	mov.b64 	%rd12225, {%r8602, %r8601};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8603,%dummy}, %rd12215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8604}, %rd12215;
	}
	shf.r.wrap.b32 	%r8605, %r8604, %r8603, 3;
	shf.r.wrap.b32 	%r8606, %r8603, %r8604, 3;
	mov.b64 	%rd12226, {%r8606, %r8605};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8607}, %rd12194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8608,%dummy}, %rd12194;
	}
	shf.l.wrap.b32 	%r8609, %r8608, %r8607, 1;
	shf.l.wrap.b32 	%r8610, %r8607, %r8608, 1;
	mov.b64 	%rd12227, {%r8610, %r8609};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8611}, %rd12200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8612,%dummy}, %rd12200;
	}
	shf.l.wrap.b32 	%r8613, %r8612, %r8611, 6;
	shf.l.wrap.b32 	%r8614, %r8611, %r8612, 6;
	mov.b64 	%rd12228, {%r8614, %r8613};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8615}, %rd12206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8616,%dummy}, %rd12206;
	}
	shf.l.wrap.b32 	%r8617, %r8616, %r8615, 25;
	shf.l.wrap.b32 	%r8618, %r8615, %r8616, 25;
	mov.b64 	%rd12229, {%r8618, %r8617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8619}, %rd12212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8620,%dummy}, %rd12212;
	}
	shf.l.wrap.b32 	%r8621, %r8620, %r8619, 8;
	shf.l.wrap.b32 	%r8622, %r8619, %r8620, 8;
	mov.b64 	%rd12230, {%r8622, %r8621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd12213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8624,%dummy}, %rd12213;
	}
	shf.l.wrap.b32 	%r8625, %r8624, %r8623, 18;
	shf.l.wrap.b32 	%r8626, %r8623, %r8624, 18;
	mov.b64 	%rd12231, {%r8626, %r8625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8627}, %rd12197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8628,%dummy}, %rd12197;
	}
	shf.l.wrap.b32 	%r8629, %r8628, %r8627, 27;
	shf.l.wrap.b32 	%r8630, %r8627, %r8628, 27;
	mov.b64 	%rd12232, {%r8630, %r8629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8631,%dummy}, %rd12198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8632}, %rd12198;
	}
	shf.r.wrap.b32 	%r8633, %r8632, %r8631, 28;
	shf.r.wrap.b32 	%r8634, %r8631, %r8632, 28;
	mov.b64 	%rd12233, {%r8634, %r8633};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8635}, %rd12204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8636,%dummy}, %rd12204;
	}
	shf.l.wrap.b32 	%r8637, %r8636, %r8635, 10;
	shf.l.wrap.b32 	%r8638, %r8635, %r8636, 10;
	mov.b64 	%rd12234, {%r8638, %r8637};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8639}, %rd12210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8640,%dummy}, %rd12210;
	}
	shf.l.wrap.b32 	%r8641, %r8640, %r8639, 15;
	shf.l.wrap.b32 	%r8642, %r8639, %r8640, 15;
	mov.b64 	%rd12235, {%r8642, %r8641};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8643,%dummy}, %rd12216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8644}, %rd12216;
	}
	shf.r.wrap.b32 	%r8645, %r8644, %r8643, 8;
	shf.r.wrap.b32 	%r8646, %r8643, %r8644, 8;
	mov.b64 	%rd12236, {%r8646, %r8645};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8647,%dummy}, %rd12195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8648}, %rd12195;
	}
	shf.r.wrap.b32 	%r8649, %r8648, %r8647, 2;
	shf.r.wrap.b32 	%r8650, %r8647, %r8648, 2;
	mov.b64 	%rd12237, {%r8650, %r8649};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8651,%dummy}, %rd12201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8652}, %rd12201;
	}
	shf.r.wrap.b32 	%r8653, %r8652, %r8651, 9;
	shf.r.wrap.b32 	%r8654, %r8651, %r8652, 9;
	mov.b64 	%rd12238, {%r8654, %r8653};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8655,%dummy}, %rd12207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8656}, %rd12207;
	}
	shf.r.wrap.b32 	%r8657, %r8656, %r8655, 25;
	shf.r.wrap.b32 	%r8658, %r8655, %r8656, 25;
	mov.b64 	%rd12239, {%r8658, %r8657};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8659,%dummy}, %rd12208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8660}, %rd12208;
	}
	shf.r.wrap.b32 	%r8661, %r8660, %r8659, 23;
	shf.r.wrap.b32 	%r8662, %r8659, %r8660, 23;
	mov.b64 	%rd12240, {%r8662, %r8661};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8663}, %rd12214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8664,%dummy}, %rd12214;
	}
	shf.l.wrap.b32 	%r8665, %r8664, %r8663, 2;
	shf.l.wrap.b32 	%r8666, %r8663, %r8664, 2;
	mov.b64 	%rd12241, {%r8666, %r8665};
	not.b64 	%rd12242, %rd12218;
	and.b64  	%rd12243, %rd12219, %rd12242;
	xor.b64  	%rd12244, %rd12243, %rd12193;
	not.b64 	%rd12245, %rd12219;
	and.b64  	%rd12246, %rd12220, %rd12245;
	xor.b64  	%rd12247, %rd12246, %rd12218;
	not.b64 	%rd12248, %rd12220;
	and.b64  	%rd12249, %rd12221, %rd12248;
	xor.b64  	%rd12250, %rd12249, %rd12219;
	not.b64 	%rd12251, %rd12221;
	and.b64  	%rd12252, %rd12193, %rd12251;
	xor.b64  	%rd12253, %rd12252, %rd12220;
	not.b64 	%rd12254, %rd12193;
	and.b64  	%rd12255, %rd12218, %rd12254;
	xor.b64  	%rd12256, %rd12255, %rd12221;
	not.b64 	%rd12257, %rd12223;
	and.b64  	%rd12258, %rd12224, %rd12257;
	xor.b64  	%rd12259, %rd12258, %rd12222;
	not.b64 	%rd12260, %rd12224;
	and.b64  	%rd12261, %rd12225, %rd12260;
	xor.b64  	%rd12262, %rd12261, %rd12223;
	not.b64 	%rd12263, %rd12225;
	and.b64  	%rd12264, %rd12226, %rd12263;
	xor.b64  	%rd12265, %rd12264, %rd12224;
	not.b64 	%rd12266, %rd12226;
	and.b64  	%rd12267, %rd12222, %rd12266;
	xor.b64  	%rd12268, %rd12267, %rd12225;
	not.b64 	%rd12269, %rd12222;
	and.b64  	%rd12270, %rd12223, %rd12269;
	xor.b64  	%rd12271, %rd12270, %rd12226;
	not.b64 	%rd12272, %rd12228;
	and.b64  	%rd12273, %rd12229, %rd12272;
	xor.b64  	%rd12274, %rd12273, %rd12227;
	not.b64 	%rd12275, %rd12229;
	and.b64  	%rd12276, %rd12230, %rd12275;
	xor.b64  	%rd12277, %rd12276, %rd12228;
	not.b64 	%rd12278, %rd12230;
	and.b64  	%rd12279, %rd12231, %rd12278;
	xor.b64  	%rd12280, %rd12279, %rd12229;
	not.b64 	%rd12281, %rd12231;
	and.b64  	%rd12282, %rd12227, %rd12281;
	xor.b64  	%rd12283, %rd12282, %rd12230;
	not.b64 	%rd12284, %rd12227;
	and.b64  	%rd12285, %rd12228, %rd12284;
	xor.b64  	%rd12286, %rd12285, %rd12231;
	not.b64 	%rd12287, %rd12233;
	and.b64  	%rd12288, %rd12234, %rd12287;
	xor.b64  	%rd12289, %rd12288, %rd12232;
	not.b64 	%rd12290, %rd12234;
	and.b64  	%rd12291, %rd12235, %rd12290;
	xor.b64  	%rd12292, %rd12291, %rd12233;
	not.b64 	%rd12293, %rd12235;
	and.b64  	%rd12294, %rd12236, %rd12293;
	xor.b64  	%rd12295, %rd12294, %rd12234;
	not.b64 	%rd12296, %rd12236;
	and.b64  	%rd12297, %rd12232, %rd12296;
	xor.b64  	%rd12298, %rd12297, %rd12235;
	not.b64 	%rd12299, %rd12232;
	and.b64  	%rd12300, %rd12233, %rd12299;
	xor.b64  	%rd12301, %rd12300, %rd12236;
	not.b64 	%rd12302, %rd12238;
	and.b64  	%rd12303, %rd12239, %rd12302;
	xor.b64  	%rd12304, %rd12303, %rd12237;
	not.b64 	%rd12305, %rd12239;
	and.b64  	%rd12306, %rd12240, %rd12305;
	xor.b64  	%rd12307, %rd12306, %rd12238;
	not.b64 	%rd12308, %rd12240;
	and.b64  	%rd12309, %rd12241, %rd12308;
	xor.b64  	%rd12310, %rd12309, %rd12239;
	not.b64 	%rd12311, %rd12241;
	and.b64  	%rd12312, %rd12237, %rd12311;
	xor.b64  	%rd12313, %rd12312, %rd12240;
	not.b64 	%rd12314, %rd12237;
	and.b64  	%rd12315, %rd12238, %rd12314;
	xor.b64  	%rd12316, %rd12315, %rd12241;
	xor.b64  	%rd12318, %rd12244, %rd19821;
	xor.b64  	%rd12319, %rd12259, %rd12318;
	xor.b64  	%rd12320, %rd12319, %rd12274;
	xor.b64  	%rd12321, %rd12320, %rd12289;
	xor.b64  	%rd12322, %rd12321, %rd12304;
	xor.b64  	%rd12323, %rd12262, %rd12247;
	xor.b64  	%rd12324, %rd12323, %rd12277;
	xor.b64  	%rd12325, %rd12324, %rd12292;
	xor.b64  	%rd12326, %rd12325, %rd12307;
	xor.b64  	%rd12327, %rd12265, %rd12250;
	xor.b64  	%rd12328, %rd12327, %rd12280;
	xor.b64  	%rd12329, %rd12328, %rd12295;
	xor.b64  	%rd12330, %rd12329, %rd12310;
	xor.b64  	%rd12331, %rd12268, %rd12253;
	xor.b64  	%rd12332, %rd12331, %rd12283;
	xor.b64  	%rd12333, %rd12332, %rd12298;
	xor.b64  	%rd12334, %rd12333, %rd12313;
	xor.b64  	%rd12335, %rd12271, %rd12256;
	xor.b64  	%rd12336, %rd12335, %rd12286;
	xor.b64  	%rd12337, %rd12336, %rd12301;
	xor.b64  	%rd12338, %rd12337, %rd12316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8667}, %rd12326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8668,%dummy}, %rd12326;
	}
	shf.l.wrap.b32 	%r8669, %r8668, %r8667, 1;
	shf.l.wrap.b32 	%r8670, %r8667, %r8668, 1;
	mov.b64 	%rd12339, {%r8670, %r8669};
	xor.b64  	%rd12340, %rd12338, %rd12339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8671}, %rd12330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8672,%dummy}, %rd12330;
	}
	shf.l.wrap.b32 	%r8673, %r8672, %r8671, 1;
	shf.l.wrap.b32 	%r8674, %r8671, %r8672, 1;
	mov.b64 	%rd12341, {%r8674, %r8673};
	xor.b64  	%rd12342, %rd12341, %rd12322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8675}, %rd12334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8676,%dummy}, %rd12334;
	}
	shf.l.wrap.b32 	%r8677, %r8676, %r8675, 1;
	shf.l.wrap.b32 	%r8678, %r8675, %r8676, 1;
	mov.b64 	%rd12343, {%r8678, %r8677};
	xor.b64  	%rd12344, %rd12343, %rd12326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8679}, %rd12338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8680,%dummy}, %rd12338;
	}
	shf.l.wrap.b32 	%r8681, %r8680, %r8679, 1;
	shf.l.wrap.b32 	%r8682, %r8679, %r8680, 1;
	mov.b64 	%rd12345, {%r8682, %r8681};
	xor.b64  	%rd12346, %rd12345, %rd12330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8683}, %rd12322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8684,%dummy}, %rd12322;
	}
	shf.l.wrap.b32 	%r8685, %r8684, %r8683, 1;
	shf.l.wrap.b32 	%r8686, %r8683, %r8684, 1;
	mov.b64 	%rd12347, {%r8686, %r8685};
	xor.b64  	%rd12348, %rd12334, %rd12347;
	xor.b64  	%rd12349, %rd12340, %rd12318;
	xor.b64  	%rd12350, %rd12342, %rd12247;
	xor.b64  	%rd12351, %rd12344, %rd12250;
	xor.b64  	%rd12352, %rd12346, %rd12253;
	xor.b64  	%rd12353, %rd12348, %rd12256;
	xor.b64  	%rd12354, %rd12340, %rd12259;
	xor.b64  	%rd12355, %rd12342, %rd12262;
	xor.b64  	%rd12356, %rd12344, %rd12265;
	xor.b64  	%rd12357, %rd12346, %rd12268;
	xor.b64  	%rd12358, %rd12348, %rd12271;
	xor.b64  	%rd12359, %rd12340, %rd12274;
	xor.b64  	%rd12360, %rd12342, %rd12277;
	xor.b64  	%rd12361, %rd12344, %rd12280;
	xor.b64  	%rd12362, %rd12346, %rd12283;
	xor.b64  	%rd12363, %rd12348, %rd12286;
	xor.b64  	%rd12364, %rd12340, %rd12289;
	xor.b64  	%rd12365, %rd12342, %rd12292;
	xor.b64  	%rd12366, %rd12344, %rd12295;
	xor.b64  	%rd12367, %rd12346, %rd12298;
	xor.b64  	%rd12368, %rd12348, %rd12301;
	xor.b64  	%rd12369, %rd12340, %rd12304;
	xor.b64  	%rd12370, %rd12342, %rd12307;
	xor.b64  	%rd12371, %rd12344, %rd12310;
	xor.b64  	%rd12372, %rd12346, %rd12313;
	xor.b64  	%rd12373, %rd12348, %rd12316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8687,%dummy}, %rd12355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8688}, %rd12355;
	}
	shf.r.wrap.b32 	%r8689, %r8688, %r8687, 20;
	shf.r.wrap.b32 	%r8690, %r8687, %r8688, 20;
	mov.b64 	%rd12374, {%r8690, %r8689};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8691,%dummy}, %rd12361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8692}, %rd12361;
	}
	shf.r.wrap.b32 	%r8693, %r8692, %r8691, 21;
	shf.r.wrap.b32 	%r8694, %r8691, %r8692, 21;
	mov.b64 	%rd12375, {%r8694, %r8693};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8695}, %rd12367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8696,%dummy}, %rd12367;
	}
	shf.l.wrap.b32 	%r8697, %r8696, %r8695, 21;
	shf.l.wrap.b32 	%r8698, %r8695, %r8696, 21;
	mov.b64 	%rd12376, {%r8698, %r8697};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8699}, %rd12373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8700,%dummy}, %rd12373;
	}
	shf.l.wrap.b32 	%r8701, %r8700, %r8699, 14;
	shf.l.wrap.b32 	%r8702, %r8699, %r8700, 14;
	mov.b64 	%rd12377, {%r8702, %r8701};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8703}, %rd12352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8704,%dummy}, %rd12352;
	}
	shf.l.wrap.b32 	%r8705, %r8704, %r8703, 28;
	shf.l.wrap.b32 	%r8706, %r8703, %r8704, 28;
	mov.b64 	%rd12378, {%r8706, %r8705};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8707}, %rd12358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8708,%dummy}, %rd12358;
	}
	shf.l.wrap.b32 	%r8709, %r8708, %r8707, 20;
	shf.l.wrap.b32 	%r8710, %r8707, %r8708, 20;
	mov.b64 	%rd12379, {%r8710, %r8709};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8711}, %rd12359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8712,%dummy}, %rd12359;
	}
	shf.l.wrap.b32 	%r8713, %r8712, %r8711, 3;
	shf.l.wrap.b32 	%r8714, %r8711, %r8712, 3;
	mov.b64 	%rd12380, {%r8714, %r8713};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8715,%dummy}, %rd12365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8716}, %rd12365;
	}
	shf.r.wrap.b32 	%r8717, %r8716, %r8715, 19;
	shf.r.wrap.b32 	%r8718, %r8715, %r8716, 19;
	mov.b64 	%rd12381, {%r8718, %r8717};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8719,%dummy}, %rd12371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8720}, %rd12371;
	}
	shf.r.wrap.b32 	%r8721, %r8720, %r8719, 3;
	shf.r.wrap.b32 	%r8722, %r8719, %r8720, 3;
	mov.b64 	%rd12382, {%r8722, %r8721};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8723}, %rd12350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8724,%dummy}, %rd12350;
	}
	shf.l.wrap.b32 	%r8725, %r8724, %r8723, 1;
	shf.l.wrap.b32 	%r8726, %r8723, %r8724, 1;
	mov.b64 	%rd12383, {%r8726, %r8725};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8727}, %rd12356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8728,%dummy}, %rd12356;
	}
	shf.l.wrap.b32 	%r8729, %r8728, %r8727, 6;
	shf.l.wrap.b32 	%r8730, %r8727, %r8728, 6;
	mov.b64 	%rd12384, {%r8730, %r8729};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8731}, %rd12362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8732,%dummy}, %rd12362;
	}
	shf.l.wrap.b32 	%r8733, %r8732, %r8731, 25;
	shf.l.wrap.b32 	%r8734, %r8731, %r8732, 25;
	mov.b64 	%rd12385, {%r8734, %r8733};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8735}, %rd12368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8736,%dummy}, %rd12368;
	}
	shf.l.wrap.b32 	%r8737, %r8736, %r8735, 8;
	shf.l.wrap.b32 	%r8738, %r8735, %r8736, 8;
	mov.b64 	%rd12386, {%r8738, %r8737};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8739}, %rd12369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8740,%dummy}, %rd12369;
	}
	shf.l.wrap.b32 	%r8741, %r8740, %r8739, 18;
	shf.l.wrap.b32 	%r8742, %r8739, %r8740, 18;
	mov.b64 	%rd12387, {%r8742, %r8741};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8743}, %rd12353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8744,%dummy}, %rd12353;
	}
	shf.l.wrap.b32 	%r8745, %r8744, %r8743, 27;
	shf.l.wrap.b32 	%r8746, %r8743, %r8744, 27;
	mov.b64 	%rd12388, {%r8746, %r8745};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8747,%dummy}, %rd12354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8748}, %rd12354;
	}
	shf.r.wrap.b32 	%r8749, %r8748, %r8747, 28;
	shf.r.wrap.b32 	%r8750, %r8747, %r8748, 28;
	mov.b64 	%rd12389, {%r8750, %r8749};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8751}, %rd12360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8752,%dummy}, %rd12360;
	}
	shf.l.wrap.b32 	%r8753, %r8752, %r8751, 10;
	shf.l.wrap.b32 	%r8754, %r8751, %r8752, 10;
	mov.b64 	%rd12390, {%r8754, %r8753};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8755}, %rd12366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8756,%dummy}, %rd12366;
	}
	shf.l.wrap.b32 	%r8757, %r8756, %r8755, 15;
	shf.l.wrap.b32 	%r8758, %r8755, %r8756, 15;
	mov.b64 	%rd12391, {%r8758, %r8757};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8759,%dummy}, %rd12372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8760}, %rd12372;
	}
	shf.r.wrap.b32 	%r8761, %r8760, %r8759, 8;
	shf.r.wrap.b32 	%r8762, %r8759, %r8760, 8;
	mov.b64 	%rd12392, {%r8762, %r8761};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8763,%dummy}, %rd12351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8764}, %rd12351;
	}
	shf.r.wrap.b32 	%r8765, %r8764, %r8763, 2;
	shf.r.wrap.b32 	%r8766, %r8763, %r8764, 2;
	mov.b64 	%rd12393, {%r8766, %r8765};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8767,%dummy}, %rd12357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8768}, %rd12357;
	}
	shf.r.wrap.b32 	%r8769, %r8768, %r8767, 9;
	shf.r.wrap.b32 	%r8770, %r8767, %r8768, 9;
	mov.b64 	%rd12394, {%r8770, %r8769};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8771,%dummy}, %rd12363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8772}, %rd12363;
	}
	shf.r.wrap.b32 	%r8773, %r8772, %r8771, 25;
	shf.r.wrap.b32 	%r8774, %r8771, %r8772, 25;
	mov.b64 	%rd12395, {%r8774, %r8773};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8775,%dummy}, %rd12364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8776}, %rd12364;
	}
	shf.r.wrap.b32 	%r8777, %r8776, %r8775, 23;
	shf.r.wrap.b32 	%r8778, %r8775, %r8776, 23;
	mov.b64 	%rd12396, {%r8778, %r8777};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8779}, %rd12370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8780,%dummy}, %rd12370;
	}
	shf.l.wrap.b32 	%r8781, %r8780, %r8779, 2;
	shf.l.wrap.b32 	%r8782, %r8779, %r8780, 2;
	mov.b64 	%rd12397, {%r8782, %r8781};
	not.b64 	%rd12398, %rd12374;
	and.b64  	%rd12399, %rd12375, %rd12398;
	xor.b64  	%rd12400, %rd12399, %rd12349;
	not.b64 	%rd12401, %rd12375;
	and.b64  	%rd12402, %rd12376, %rd12401;
	xor.b64  	%rd12403, %rd12402, %rd12374;
	not.b64 	%rd12404, %rd12376;
	and.b64  	%rd12405, %rd12377, %rd12404;
	xor.b64  	%rd12406, %rd12405, %rd12375;
	not.b64 	%rd12407, %rd12377;
	and.b64  	%rd12408, %rd12349, %rd12407;
	xor.b64  	%rd12409, %rd12408, %rd12376;
	not.b64 	%rd12410, %rd12349;
	and.b64  	%rd12411, %rd12374, %rd12410;
	xor.b64  	%rd12412, %rd12411, %rd12377;
	not.b64 	%rd12413, %rd12379;
	and.b64  	%rd12414, %rd12380, %rd12413;
	xor.b64  	%rd12415, %rd12414, %rd12378;
	not.b64 	%rd12416, %rd12380;
	and.b64  	%rd12417, %rd12381, %rd12416;
	xor.b64  	%rd12418, %rd12417, %rd12379;
	not.b64 	%rd12419, %rd12381;
	and.b64  	%rd12420, %rd12382, %rd12419;
	xor.b64  	%rd12421, %rd12420, %rd12380;
	not.b64 	%rd12422, %rd12382;
	and.b64  	%rd12423, %rd12378, %rd12422;
	xor.b64  	%rd12424, %rd12423, %rd12381;
	not.b64 	%rd12425, %rd12378;
	and.b64  	%rd12426, %rd12379, %rd12425;
	xor.b64  	%rd12427, %rd12426, %rd12382;
	not.b64 	%rd12428, %rd12384;
	and.b64  	%rd12429, %rd12385, %rd12428;
	xor.b64  	%rd12430, %rd12429, %rd12383;
	not.b64 	%rd12431, %rd12385;
	and.b64  	%rd12432, %rd12386, %rd12431;
	xor.b64  	%rd12433, %rd12432, %rd12384;
	not.b64 	%rd12434, %rd12386;
	and.b64  	%rd12435, %rd12387, %rd12434;
	xor.b64  	%rd12436, %rd12435, %rd12385;
	not.b64 	%rd12437, %rd12387;
	and.b64  	%rd12438, %rd12383, %rd12437;
	xor.b64  	%rd12439, %rd12438, %rd12386;
	not.b64 	%rd12440, %rd12383;
	and.b64  	%rd12441, %rd12384, %rd12440;
	xor.b64  	%rd12442, %rd12441, %rd12387;
	not.b64 	%rd12443, %rd12389;
	and.b64  	%rd12444, %rd12390, %rd12443;
	xor.b64  	%rd12445, %rd12444, %rd12388;
	not.b64 	%rd12446, %rd12390;
	and.b64  	%rd12447, %rd12391, %rd12446;
	xor.b64  	%rd12448, %rd12447, %rd12389;
	not.b64 	%rd12449, %rd12391;
	and.b64  	%rd12450, %rd12392, %rd12449;
	xor.b64  	%rd12451, %rd12450, %rd12390;
	not.b64 	%rd12452, %rd12392;
	and.b64  	%rd12453, %rd12388, %rd12452;
	xor.b64  	%rd12454, %rd12453, %rd12391;
	not.b64 	%rd12455, %rd12388;
	and.b64  	%rd12456, %rd12389, %rd12455;
	xor.b64  	%rd12457, %rd12456, %rd12392;
	not.b64 	%rd12458, %rd12394;
	and.b64  	%rd12459, %rd12395, %rd12458;
	xor.b64  	%rd12460, %rd12459, %rd12393;
	not.b64 	%rd12461, %rd12395;
	and.b64  	%rd12462, %rd12396, %rd12461;
	xor.b64  	%rd12463, %rd12462, %rd12394;
	not.b64 	%rd12464, %rd12396;
	and.b64  	%rd12465, %rd12397, %rd12464;
	xor.b64  	%rd12466, %rd12465, %rd12395;
	not.b64 	%rd12467, %rd12397;
	and.b64  	%rd12468, %rd12393, %rd12467;
	xor.b64  	%rd12469, %rd12468, %rd12396;
	not.b64 	%rd12470, %rd12393;
	and.b64  	%rd12471, %rd12394, %rd12470;
	xor.b64  	%rd12472, %rd12471, %rd12397;
	xor.b64  	%rd12474, %rd12400, %rd19822;
	xor.b64  	%rd12475, %rd12415, %rd12474;
	xor.b64  	%rd12476, %rd12475, %rd12430;
	xor.b64  	%rd12477, %rd12476, %rd12445;
	xor.b64  	%rd12478, %rd12477, %rd12460;
	xor.b64  	%rd12479, %rd12418, %rd12403;
	xor.b64  	%rd12480, %rd12479, %rd12433;
	xor.b64  	%rd12481, %rd12480, %rd12448;
	xor.b64  	%rd12482, %rd12481, %rd12463;
	xor.b64  	%rd12483, %rd12421, %rd12406;
	xor.b64  	%rd12484, %rd12483, %rd12436;
	xor.b64  	%rd12485, %rd12484, %rd12451;
	xor.b64  	%rd12486, %rd12485, %rd12466;
	xor.b64  	%rd12487, %rd12424, %rd12409;
	xor.b64  	%rd12488, %rd12487, %rd12439;
	xor.b64  	%rd12489, %rd12488, %rd12454;
	xor.b64  	%rd12490, %rd12489, %rd12469;
	xor.b64  	%rd12491, %rd12427, %rd12412;
	xor.b64  	%rd12492, %rd12491, %rd12442;
	xor.b64  	%rd12493, %rd12492, %rd12457;
	xor.b64  	%rd12494, %rd12493, %rd12472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8783}, %rd12482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8784,%dummy}, %rd12482;
	}
	shf.l.wrap.b32 	%r8785, %r8784, %r8783, 1;
	shf.l.wrap.b32 	%r8786, %r8783, %r8784, 1;
	mov.b64 	%rd12495, {%r8786, %r8785};
	xor.b64  	%rd12496, %rd12494, %rd12495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8787}, %rd12486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8788,%dummy}, %rd12486;
	}
	shf.l.wrap.b32 	%r8789, %r8788, %r8787, 1;
	shf.l.wrap.b32 	%r8790, %r8787, %r8788, 1;
	mov.b64 	%rd12497, {%r8790, %r8789};
	xor.b64  	%rd12498, %rd12497, %rd12478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8791}, %rd12490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8792,%dummy}, %rd12490;
	}
	shf.l.wrap.b32 	%r8793, %r8792, %r8791, 1;
	shf.l.wrap.b32 	%r8794, %r8791, %r8792, 1;
	mov.b64 	%rd12499, {%r8794, %r8793};
	xor.b64  	%rd12500, %rd12499, %rd12482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8795}, %rd12494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8796,%dummy}, %rd12494;
	}
	shf.l.wrap.b32 	%r8797, %r8796, %r8795, 1;
	shf.l.wrap.b32 	%r8798, %r8795, %r8796, 1;
	mov.b64 	%rd12501, {%r8798, %r8797};
	xor.b64  	%rd12502, %rd12501, %rd12486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8799}, %rd12478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8800,%dummy}, %rd12478;
	}
	shf.l.wrap.b32 	%r8801, %r8800, %r8799, 1;
	shf.l.wrap.b32 	%r8802, %r8799, %r8800, 1;
	mov.b64 	%rd12503, {%r8802, %r8801};
	xor.b64  	%rd12504, %rd12490, %rd12503;
	xor.b64  	%rd12505, %rd12496, %rd12474;
	xor.b64  	%rd12506, %rd12498, %rd12403;
	xor.b64  	%rd12507, %rd12500, %rd12406;
	xor.b64  	%rd12508, %rd12502, %rd12409;
	xor.b64  	%rd12509, %rd12504, %rd12412;
	xor.b64  	%rd12510, %rd12496, %rd12415;
	xor.b64  	%rd12511, %rd12498, %rd12418;
	xor.b64  	%rd12512, %rd12500, %rd12421;
	xor.b64  	%rd12513, %rd12502, %rd12424;
	xor.b64  	%rd12514, %rd12504, %rd12427;
	xor.b64  	%rd12515, %rd12496, %rd12430;
	xor.b64  	%rd12516, %rd12498, %rd12433;
	xor.b64  	%rd12517, %rd12500, %rd12436;
	xor.b64  	%rd12518, %rd12502, %rd12439;
	xor.b64  	%rd12519, %rd12504, %rd12442;
	xor.b64  	%rd12520, %rd12496, %rd12445;
	xor.b64  	%rd12521, %rd12498, %rd12448;
	xor.b64  	%rd12522, %rd12500, %rd12451;
	xor.b64  	%rd12523, %rd12502, %rd12454;
	xor.b64  	%rd12524, %rd12504, %rd12457;
	xor.b64  	%rd12525, %rd12496, %rd12460;
	xor.b64  	%rd12526, %rd12498, %rd12463;
	xor.b64  	%rd12527, %rd12500, %rd12466;
	xor.b64  	%rd12528, %rd12502, %rd12469;
	xor.b64  	%rd12529, %rd12504, %rd12472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8803,%dummy}, %rd12511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8804}, %rd12511;
	}
	shf.r.wrap.b32 	%r8805, %r8804, %r8803, 20;
	shf.r.wrap.b32 	%r8806, %r8803, %r8804, 20;
	mov.b64 	%rd12530, {%r8806, %r8805};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8807,%dummy}, %rd12517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8808}, %rd12517;
	}
	shf.r.wrap.b32 	%r8809, %r8808, %r8807, 21;
	shf.r.wrap.b32 	%r8810, %r8807, %r8808, 21;
	mov.b64 	%rd12531, {%r8810, %r8809};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8811}, %rd12523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8812,%dummy}, %rd12523;
	}
	shf.l.wrap.b32 	%r8813, %r8812, %r8811, 21;
	shf.l.wrap.b32 	%r8814, %r8811, %r8812, 21;
	mov.b64 	%rd12532, {%r8814, %r8813};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8815}, %rd12529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8816,%dummy}, %rd12529;
	}
	shf.l.wrap.b32 	%r8817, %r8816, %r8815, 14;
	shf.l.wrap.b32 	%r8818, %r8815, %r8816, 14;
	mov.b64 	%rd12533, {%r8818, %r8817};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8819}, %rd12508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8820,%dummy}, %rd12508;
	}
	shf.l.wrap.b32 	%r8821, %r8820, %r8819, 28;
	shf.l.wrap.b32 	%r8822, %r8819, %r8820, 28;
	mov.b64 	%rd12534, {%r8822, %r8821};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8823}, %rd12514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8824,%dummy}, %rd12514;
	}
	shf.l.wrap.b32 	%r8825, %r8824, %r8823, 20;
	shf.l.wrap.b32 	%r8826, %r8823, %r8824, 20;
	mov.b64 	%rd12535, {%r8826, %r8825};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8827}, %rd12515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8828,%dummy}, %rd12515;
	}
	shf.l.wrap.b32 	%r8829, %r8828, %r8827, 3;
	shf.l.wrap.b32 	%r8830, %r8827, %r8828, 3;
	mov.b64 	%rd12536, {%r8830, %r8829};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8831,%dummy}, %rd12521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8832}, %rd12521;
	}
	shf.r.wrap.b32 	%r8833, %r8832, %r8831, 19;
	shf.r.wrap.b32 	%r8834, %r8831, %r8832, 19;
	mov.b64 	%rd12537, {%r8834, %r8833};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8835,%dummy}, %rd12527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8836}, %rd12527;
	}
	shf.r.wrap.b32 	%r8837, %r8836, %r8835, 3;
	shf.r.wrap.b32 	%r8838, %r8835, %r8836, 3;
	mov.b64 	%rd12538, {%r8838, %r8837};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8839}, %rd12506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8840,%dummy}, %rd12506;
	}
	shf.l.wrap.b32 	%r8841, %r8840, %r8839, 1;
	shf.l.wrap.b32 	%r8842, %r8839, %r8840, 1;
	mov.b64 	%rd12539, {%r8842, %r8841};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8843}, %rd12512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8844,%dummy}, %rd12512;
	}
	shf.l.wrap.b32 	%r8845, %r8844, %r8843, 6;
	shf.l.wrap.b32 	%r8846, %r8843, %r8844, 6;
	mov.b64 	%rd12540, {%r8846, %r8845};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8847}, %rd12518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8848,%dummy}, %rd12518;
	}
	shf.l.wrap.b32 	%r8849, %r8848, %r8847, 25;
	shf.l.wrap.b32 	%r8850, %r8847, %r8848, 25;
	mov.b64 	%rd12541, {%r8850, %r8849};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8851}, %rd12524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8852,%dummy}, %rd12524;
	}
	shf.l.wrap.b32 	%r8853, %r8852, %r8851, 8;
	shf.l.wrap.b32 	%r8854, %r8851, %r8852, 8;
	mov.b64 	%rd12542, {%r8854, %r8853};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8855}, %rd12525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8856,%dummy}, %rd12525;
	}
	shf.l.wrap.b32 	%r8857, %r8856, %r8855, 18;
	shf.l.wrap.b32 	%r8858, %r8855, %r8856, 18;
	mov.b64 	%rd12543, {%r8858, %r8857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8859}, %rd12509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8860,%dummy}, %rd12509;
	}
	shf.l.wrap.b32 	%r8861, %r8860, %r8859, 27;
	shf.l.wrap.b32 	%r8862, %r8859, %r8860, 27;
	mov.b64 	%rd12544, {%r8862, %r8861};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8863,%dummy}, %rd12510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8864}, %rd12510;
	}
	shf.r.wrap.b32 	%r8865, %r8864, %r8863, 28;
	shf.r.wrap.b32 	%r8866, %r8863, %r8864, 28;
	mov.b64 	%rd12545, {%r8866, %r8865};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8867}, %rd12516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8868,%dummy}, %rd12516;
	}
	shf.l.wrap.b32 	%r8869, %r8868, %r8867, 10;
	shf.l.wrap.b32 	%r8870, %r8867, %r8868, 10;
	mov.b64 	%rd12546, {%r8870, %r8869};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8871}, %rd12522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8872,%dummy}, %rd12522;
	}
	shf.l.wrap.b32 	%r8873, %r8872, %r8871, 15;
	shf.l.wrap.b32 	%r8874, %r8871, %r8872, 15;
	mov.b64 	%rd12547, {%r8874, %r8873};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8875,%dummy}, %rd12528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8876}, %rd12528;
	}
	shf.r.wrap.b32 	%r8877, %r8876, %r8875, 8;
	shf.r.wrap.b32 	%r8878, %r8875, %r8876, 8;
	mov.b64 	%rd12548, {%r8878, %r8877};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8879,%dummy}, %rd12507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8880}, %rd12507;
	}
	shf.r.wrap.b32 	%r8881, %r8880, %r8879, 2;
	shf.r.wrap.b32 	%r8882, %r8879, %r8880, 2;
	mov.b64 	%rd12549, {%r8882, %r8881};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8883,%dummy}, %rd12513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8884}, %rd12513;
	}
	shf.r.wrap.b32 	%r8885, %r8884, %r8883, 9;
	shf.r.wrap.b32 	%r8886, %r8883, %r8884, 9;
	mov.b64 	%rd12550, {%r8886, %r8885};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8887,%dummy}, %rd12519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8888}, %rd12519;
	}
	shf.r.wrap.b32 	%r8889, %r8888, %r8887, 25;
	shf.r.wrap.b32 	%r8890, %r8887, %r8888, 25;
	mov.b64 	%rd12551, {%r8890, %r8889};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8891,%dummy}, %rd12520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8892}, %rd12520;
	}
	shf.r.wrap.b32 	%r8893, %r8892, %r8891, 23;
	shf.r.wrap.b32 	%r8894, %r8891, %r8892, 23;
	mov.b64 	%rd12552, {%r8894, %r8893};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8895}, %rd12526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd12526;
	}
	shf.l.wrap.b32 	%r8897, %r8896, %r8895, 2;
	shf.l.wrap.b32 	%r8898, %r8895, %r8896, 2;
	mov.b64 	%rd12553, {%r8898, %r8897};
	not.b64 	%rd12554, %rd12530;
	and.b64  	%rd12555, %rd12531, %rd12554;
	xor.b64  	%rd12556, %rd12555, %rd12505;
	not.b64 	%rd12557, %rd12531;
	and.b64  	%rd12558, %rd12532, %rd12557;
	xor.b64  	%rd12559, %rd12558, %rd12530;
	not.b64 	%rd12560, %rd12532;
	and.b64  	%rd12561, %rd12533, %rd12560;
	xor.b64  	%rd12562, %rd12561, %rd12531;
	not.b64 	%rd12563, %rd12533;
	and.b64  	%rd12564, %rd12505, %rd12563;
	xor.b64  	%rd12565, %rd12564, %rd12532;
	not.b64 	%rd12566, %rd12505;
	and.b64  	%rd12567, %rd12530, %rd12566;
	xor.b64  	%rd12568, %rd12567, %rd12533;
	not.b64 	%rd12569, %rd12535;
	and.b64  	%rd12570, %rd12536, %rd12569;
	xor.b64  	%rd12571, %rd12570, %rd12534;
	not.b64 	%rd12572, %rd12536;
	and.b64  	%rd12573, %rd12537, %rd12572;
	xor.b64  	%rd12574, %rd12573, %rd12535;
	not.b64 	%rd12575, %rd12537;
	and.b64  	%rd12576, %rd12538, %rd12575;
	xor.b64  	%rd12577, %rd12576, %rd12536;
	not.b64 	%rd12578, %rd12538;
	and.b64  	%rd12579, %rd12534, %rd12578;
	xor.b64  	%rd12580, %rd12579, %rd12537;
	not.b64 	%rd12581, %rd12534;
	and.b64  	%rd12582, %rd12535, %rd12581;
	xor.b64  	%rd12583, %rd12582, %rd12538;
	not.b64 	%rd12584, %rd12540;
	and.b64  	%rd12585, %rd12541, %rd12584;
	xor.b64  	%rd12586, %rd12585, %rd12539;
	not.b64 	%rd12587, %rd12541;
	and.b64  	%rd12588, %rd12542, %rd12587;
	xor.b64  	%rd12589, %rd12588, %rd12540;
	not.b64 	%rd12590, %rd12542;
	and.b64  	%rd12591, %rd12543, %rd12590;
	xor.b64  	%rd12592, %rd12591, %rd12541;
	not.b64 	%rd12593, %rd12543;
	and.b64  	%rd12594, %rd12539, %rd12593;
	xor.b64  	%rd12595, %rd12594, %rd12542;
	not.b64 	%rd12596, %rd12539;
	and.b64  	%rd12597, %rd12540, %rd12596;
	xor.b64  	%rd12598, %rd12597, %rd12543;
	not.b64 	%rd12599, %rd12545;
	and.b64  	%rd12600, %rd12546, %rd12599;
	xor.b64  	%rd12601, %rd12600, %rd12544;
	not.b64 	%rd12602, %rd12546;
	and.b64  	%rd12603, %rd12547, %rd12602;
	xor.b64  	%rd12604, %rd12603, %rd12545;
	not.b64 	%rd12605, %rd12547;
	and.b64  	%rd12606, %rd12548, %rd12605;
	xor.b64  	%rd12607, %rd12606, %rd12546;
	not.b64 	%rd12608, %rd12548;
	and.b64  	%rd12609, %rd12544, %rd12608;
	xor.b64  	%rd12610, %rd12609, %rd12547;
	not.b64 	%rd12611, %rd12544;
	and.b64  	%rd12612, %rd12545, %rd12611;
	xor.b64  	%rd12613, %rd12612, %rd12548;
	not.b64 	%rd12614, %rd12550;
	and.b64  	%rd12615, %rd12551, %rd12614;
	xor.b64  	%rd12616, %rd12615, %rd12549;
	not.b64 	%rd12617, %rd12551;
	and.b64  	%rd12618, %rd12552, %rd12617;
	xor.b64  	%rd12619, %rd12618, %rd12550;
	not.b64 	%rd12620, %rd12552;
	and.b64  	%rd12621, %rd12553, %rd12620;
	xor.b64  	%rd12622, %rd12621, %rd12551;
	not.b64 	%rd12623, %rd12553;
	and.b64  	%rd12624, %rd12549, %rd12623;
	xor.b64  	%rd12625, %rd12624, %rd12552;
	not.b64 	%rd12626, %rd12549;
	and.b64  	%rd12627, %rd12550, %rd12626;
	xor.b64  	%rd12628, %rd12627, %rd12553;
	xor.b64  	%rd12629, %rd12556, %rd19823;
	xor.b64  	%rd12630, %rd12571, %rd12629;
	xor.b64  	%rd12631, %rd12630, %rd12586;
	xor.b64  	%rd12632, %rd12631, %rd12601;
	xor.b64  	%rd12633, %rd12632, %rd12616;
	xor.b64  	%rd12634, %rd12574, %rd12559;
	xor.b64  	%rd12635, %rd12634, %rd12589;
	xor.b64  	%rd12636, %rd12635, %rd12604;
	xor.b64  	%rd12637, %rd12636, %rd12619;
	xor.b64  	%rd12638, %rd12577, %rd12562;
	xor.b64  	%rd12639, %rd12638, %rd12592;
	xor.b64  	%rd12640, %rd12639, %rd12607;
	xor.b64  	%rd12641, %rd12640, %rd12622;
	xor.b64  	%rd12642, %rd12580, %rd12565;
	xor.b64  	%rd12643, %rd12642, %rd12595;
	xor.b64  	%rd12644, %rd12643, %rd12610;
	xor.b64  	%rd12645, %rd12644, %rd12625;
	xor.b64  	%rd12646, %rd12583, %rd12568;
	xor.b64  	%rd12647, %rd12646, %rd12598;
	xor.b64  	%rd12648, %rd12647, %rd12613;
	xor.b64  	%rd12649, %rd12648, %rd12628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8899}, %rd12637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8900,%dummy}, %rd12637;
	}
	shf.l.wrap.b32 	%r8901, %r8900, %r8899, 1;
	shf.l.wrap.b32 	%r8902, %r8899, %r8900, 1;
	mov.b64 	%rd12650, {%r8902, %r8901};
	xor.b64  	%rd12651, %rd12649, %rd12650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8903}, %rd12641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8904,%dummy}, %rd12641;
	}
	shf.l.wrap.b32 	%r8905, %r8904, %r8903, 1;
	shf.l.wrap.b32 	%r8906, %r8903, %r8904, 1;
	mov.b64 	%rd12652, {%r8906, %r8905};
	xor.b64  	%rd12653, %rd12652, %rd12633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8907}, %rd12645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8908,%dummy}, %rd12645;
	}
	shf.l.wrap.b32 	%r8909, %r8908, %r8907, 1;
	shf.l.wrap.b32 	%r8910, %r8907, %r8908, 1;
	mov.b64 	%rd12654, {%r8910, %r8909};
	xor.b64  	%rd12655, %rd12654, %rd12637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8911}, %rd12649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8912,%dummy}, %rd12649;
	}
	shf.l.wrap.b32 	%r8913, %r8912, %r8911, 1;
	shf.l.wrap.b32 	%r8914, %r8911, %r8912, 1;
	mov.b64 	%rd12656, {%r8914, %r8913};
	xor.b64  	%rd12657, %rd12656, %rd12641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8915}, %rd12633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8916,%dummy}, %rd12633;
	}
	shf.l.wrap.b32 	%r8917, %r8916, %r8915, 1;
	shf.l.wrap.b32 	%r8918, %r8915, %r8916, 1;
	mov.b64 	%rd12658, {%r8918, %r8917};
	xor.b64  	%rd12659, %rd12645, %rd12658;
	xor.b64  	%rd12660, %rd12651, %rd12629;
	xor.b64  	%rd12661, %rd12653, %rd12559;
	xor.b64  	%rd12662, %rd12655, %rd12562;
	xor.b64  	%rd12663, %rd12657, %rd12565;
	xor.b64  	%rd12664, %rd12659, %rd12568;
	xor.b64  	%rd12665, %rd12651, %rd12571;
	xor.b64  	%rd12666, %rd12653, %rd12574;
	xor.b64  	%rd12667, %rd12655, %rd12577;
	xor.b64  	%rd12668, %rd12657, %rd12580;
	xor.b64  	%rd12669, %rd12659, %rd12583;
	xor.b64  	%rd12670, %rd12651, %rd12586;
	xor.b64  	%rd12671, %rd12653, %rd12589;
	xor.b64  	%rd12672, %rd12655, %rd12592;
	xor.b64  	%rd12673, %rd12657, %rd12595;
	xor.b64  	%rd12674, %rd12659, %rd12598;
	xor.b64  	%rd12675, %rd12651, %rd12601;
	xor.b64  	%rd12676, %rd12653, %rd12604;
	xor.b64  	%rd12677, %rd12655, %rd12607;
	xor.b64  	%rd12678, %rd12657, %rd12610;
	xor.b64  	%rd12679, %rd12659, %rd12613;
	xor.b64  	%rd12680, %rd12651, %rd12616;
	xor.b64  	%rd12681, %rd12653, %rd12619;
	xor.b64  	%rd12682, %rd12655, %rd12622;
	xor.b64  	%rd12683, %rd12657, %rd12625;
	xor.b64  	%rd12684, %rd12659, %rd12628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8919,%dummy}, %rd12666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8920}, %rd12666;
	}
	shf.r.wrap.b32 	%r8921, %r8920, %r8919, 20;
	shf.r.wrap.b32 	%r8922, %r8919, %r8920, 20;
	mov.b64 	%rd12685, {%r8922, %r8921};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8923,%dummy}, %rd12672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8924}, %rd12672;
	}
	shf.r.wrap.b32 	%r8925, %r8924, %r8923, 21;
	shf.r.wrap.b32 	%r8926, %r8923, %r8924, 21;
	mov.b64 	%rd12686, {%r8926, %r8925};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8927}, %rd12678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8928,%dummy}, %rd12678;
	}
	shf.l.wrap.b32 	%r8929, %r8928, %r8927, 21;
	shf.l.wrap.b32 	%r8930, %r8927, %r8928, 21;
	mov.b64 	%rd12687, {%r8930, %r8929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8931}, %rd12684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8932,%dummy}, %rd12684;
	}
	shf.l.wrap.b32 	%r8933, %r8932, %r8931, 14;
	shf.l.wrap.b32 	%r8934, %r8931, %r8932, 14;
	mov.b64 	%rd12688, {%r8934, %r8933};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8935}, %rd12663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8936,%dummy}, %rd12663;
	}
	shf.l.wrap.b32 	%r8937, %r8936, %r8935, 28;
	shf.l.wrap.b32 	%r8938, %r8935, %r8936, 28;
	mov.b64 	%rd12689, {%r8938, %r8937};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8939}, %rd12669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8940,%dummy}, %rd12669;
	}
	shf.l.wrap.b32 	%r8941, %r8940, %r8939, 20;
	shf.l.wrap.b32 	%r8942, %r8939, %r8940, 20;
	mov.b64 	%rd12690, {%r8942, %r8941};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8943}, %rd12670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8944,%dummy}, %rd12670;
	}
	shf.l.wrap.b32 	%r8945, %r8944, %r8943, 3;
	shf.l.wrap.b32 	%r8946, %r8943, %r8944, 3;
	mov.b64 	%rd12691, {%r8946, %r8945};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8947,%dummy}, %rd12676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8948}, %rd12676;
	}
	shf.r.wrap.b32 	%r8949, %r8948, %r8947, 19;
	shf.r.wrap.b32 	%r8950, %r8947, %r8948, 19;
	mov.b64 	%rd12692, {%r8950, %r8949};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8951,%dummy}, %rd12682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8952}, %rd12682;
	}
	shf.r.wrap.b32 	%r8953, %r8952, %r8951, 3;
	shf.r.wrap.b32 	%r8954, %r8951, %r8952, 3;
	mov.b64 	%rd12693, {%r8954, %r8953};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8955}, %rd12661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8956,%dummy}, %rd12661;
	}
	shf.l.wrap.b32 	%r8957, %r8956, %r8955, 1;
	shf.l.wrap.b32 	%r8958, %r8955, %r8956, 1;
	mov.b64 	%rd12694, {%r8958, %r8957};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8959}, %rd12667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8960,%dummy}, %rd12667;
	}
	shf.l.wrap.b32 	%r8961, %r8960, %r8959, 6;
	shf.l.wrap.b32 	%r8962, %r8959, %r8960, 6;
	mov.b64 	%rd12695, {%r8962, %r8961};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8963}, %rd12673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8964,%dummy}, %rd12673;
	}
	shf.l.wrap.b32 	%r8965, %r8964, %r8963, 25;
	shf.l.wrap.b32 	%r8966, %r8963, %r8964, 25;
	mov.b64 	%rd12696, {%r8966, %r8965};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8967}, %rd12679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8968,%dummy}, %rd12679;
	}
	shf.l.wrap.b32 	%r8969, %r8968, %r8967, 8;
	shf.l.wrap.b32 	%r8970, %r8967, %r8968, 8;
	mov.b64 	%rd12697, {%r8970, %r8969};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8971}, %rd12680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8972,%dummy}, %rd12680;
	}
	shf.l.wrap.b32 	%r8973, %r8972, %r8971, 18;
	shf.l.wrap.b32 	%r8974, %r8971, %r8972, 18;
	mov.b64 	%rd12698, {%r8974, %r8973};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8975}, %rd12664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8976,%dummy}, %rd12664;
	}
	shf.l.wrap.b32 	%r8977, %r8976, %r8975, 27;
	shf.l.wrap.b32 	%r8978, %r8975, %r8976, 27;
	mov.b64 	%rd12699, {%r8978, %r8977};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8979,%dummy}, %rd12665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8980}, %rd12665;
	}
	shf.r.wrap.b32 	%r8981, %r8980, %r8979, 28;
	shf.r.wrap.b32 	%r8982, %r8979, %r8980, 28;
	mov.b64 	%rd12700, {%r8982, %r8981};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8983}, %rd12671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8984,%dummy}, %rd12671;
	}
	shf.l.wrap.b32 	%r8985, %r8984, %r8983, 10;
	shf.l.wrap.b32 	%r8986, %r8983, %r8984, 10;
	mov.b64 	%rd12701, {%r8986, %r8985};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8987}, %rd12677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8988,%dummy}, %rd12677;
	}
	shf.l.wrap.b32 	%r8989, %r8988, %r8987, 15;
	shf.l.wrap.b32 	%r8990, %r8987, %r8988, 15;
	mov.b64 	%rd12702, {%r8990, %r8989};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8991,%dummy}, %rd12683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8992}, %rd12683;
	}
	shf.r.wrap.b32 	%r8993, %r8992, %r8991, 8;
	shf.r.wrap.b32 	%r8994, %r8991, %r8992, 8;
	mov.b64 	%rd12703, {%r8994, %r8993};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8995,%dummy}, %rd12662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8996}, %rd12662;
	}
	shf.r.wrap.b32 	%r8997, %r8996, %r8995, 2;
	shf.r.wrap.b32 	%r8998, %r8995, %r8996, 2;
	mov.b64 	%rd12704, {%r8998, %r8997};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8999,%dummy}, %rd12668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9000}, %rd12668;
	}
	shf.r.wrap.b32 	%r9001, %r9000, %r8999, 9;
	shf.r.wrap.b32 	%r9002, %r8999, %r9000, 9;
	mov.b64 	%rd12705, {%r9002, %r9001};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9003,%dummy}, %rd12674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9004}, %rd12674;
	}
	shf.r.wrap.b32 	%r9005, %r9004, %r9003, 25;
	shf.r.wrap.b32 	%r9006, %r9003, %r9004, 25;
	mov.b64 	%rd12706, {%r9006, %r9005};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9007,%dummy}, %rd12675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9008}, %rd12675;
	}
	shf.r.wrap.b32 	%r9009, %r9008, %r9007, 23;
	shf.r.wrap.b32 	%r9010, %r9007, %r9008, 23;
	mov.b64 	%rd12707, {%r9010, %r9009};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9011}, %rd12681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9012,%dummy}, %rd12681;
	}
	shf.l.wrap.b32 	%r9013, %r9012, %r9011, 2;
	shf.l.wrap.b32 	%r9014, %r9011, %r9012, 2;
	mov.b64 	%rd12708, {%r9014, %r9013};
	not.b64 	%rd12709, %rd12685;
	and.b64  	%rd12710, %rd12686, %rd12709;
	xor.b64  	%rd12711, %rd12710, %rd12660;
	not.b64 	%rd12712, %rd12686;
	and.b64  	%rd12713, %rd12687, %rd12712;
	xor.b64  	%rd12714, %rd12713, %rd12685;
	not.b64 	%rd12715, %rd12687;
	and.b64  	%rd12716, %rd12688, %rd12715;
	xor.b64  	%rd12717, %rd12716, %rd12686;
	not.b64 	%rd12718, %rd12688;
	and.b64  	%rd12719, %rd12660, %rd12718;
	xor.b64  	%rd12720, %rd12719, %rd12687;
	not.b64 	%rd12721, %rd12660;
	and.b64  	%rd12722, %rd12685, %rd12721;
	xor.b64  	%rd12723, %rd12722, %rd12688;
	not.b64 	%rd12724, %rd12690;
	and.b64  	%rd12725, %rd12691, %rd12724;
	xor.b64  	%rd12726, %rd12725, %rd12689;
	not.b64 	%rd12727, %rd12691;
	and.b64  	%rd12728, %rd12692, %rd12727;
	xor.b64  	%rd12729, %rd12728, %rd12690;
	not.b64 	%rd12730, %rd12692;
	and.b64  	%rd12731, %rd12693, %rd12730;
	xor.b64  	%rd12732, %rd12731, %rd12691;
	not.b64 	%rd12733, %rd12693;
	and.b64  	%rd12734, %rd12689, %rd12733;
	xor.b64  	%rd12735, %rd12734, %rd12692;
	not.b64 	%rd12736, %rd12689;
	and.b64  	%rd12737, %rd12690, %rd12736;
	xor.b64  	%rd12738, %rd12737, %rd12693;
	not.b64 	%rd12739, %rd12695;
	and.b64  	%rd12740, %rd12696, %rd12739;
	xor.b64  	%rd12741, %rd12740, %rd12694;
	not.b64 	%rd12742, %rd12696;
	and.b64  	%rd12743, %rd12697, %rd12742;
	xor.b64  	%rd12744, %rd12743, %rd12695;
	not.b64 	%rd12745, %rd12697;
	and.b64  	%rd12746, %rd12698, %rd12745;
	xor.b64  	%rd12747, %rd12746, %rd12696;
	not.b64 	%rd12748, %rd12698;
	and.b64  	%rd12749, %rd12694, %rd12748;
	xor.b64  	%rd12750, %rd12749, %rd12697;
	not.b64 	%rd12751, %rd12694;
	and.b64  	%rd12752, %rd12695, %rd12751;
	xor.b64  	%rd12753, %rd12752, %rd12698;
	not.b64 	%rd12754, %rd12700;
	and.b64  	%rd12755, %rd12701, %rd12754;
	xor.b64  	%rd12756, %rd12755, %rd12699;
	not.b64 	%rd12757, %rd12701;
	and.b64  	%rd12758, %rd12702, %rd12757;
	xor.b64  	%rd12759, %rd12758, %rd12700;
	not.b64 	%rd12760, %rd12702;
	and.b64  	%rd12761, %rd12703, %rd12760;
	xor.b64  	%rd12762, %rd12761, %rd12701;
	not.b64 	%rd12763, %rd12703;
	and.b64  	%rd12764, %rd12699, %rd12763;
	xor.b64  	%rd12765, %rd12764, %rd12702;
	not.b64 	%rd12766, %rd12699;
	and.b64  	%rd12767, %rd12700, %rd12766;
	xor.b64  	%rd12768, %rd12767, %rd12703;
	not.b64 	%rd12769, %rd12705;
	and.b64  	%rd12770, %rd12706, %rd12769;
	xor.b64  	%rd12771, %rd12770, %rd12704;
	not.b64 	%rd12772, %rd12706;
	and.b64  	%rd12773, %rd12707, %rd12772;
	xor.b64  	%rd12774, %rd12773, %rd12705;
	not.b64 	%rd12775, %rd12707;
	and.b64  	%rd12776, %rd12708, %rd12775;
	xor.b64  	%rd12777, %rd12776, %rd12706;
	not.b64 	%rd12778, %rd12708;
	and.b64  	%rd12779, %rd12704, %rd12778;
	xor.b64  	%rd12780, %rd12779, %rd12707;
	not.b64 	%rd12781, %rd12704;
	and.b64  	%rd12782, %rd12705, %rd12781;
	xor.b64  	%rd12783, %rd12782, %rd12708;
	xor.b64  	%rd12784, %rd12711, %rd19824;
	xor.b64  	%rd12785, %rd12726, %rd12784;
	xor.b64  	%rd12786, %rd12785, %rd12741;
	xor.b64  	%rd12787, %rd12786, %rd12756;
	xor.b64  	%rd12788, %rd12787, %rd12771;
	xor.b64  	%rd12789, %rd12729, %rd12714;
	xor.b64  	%rd12790, %rd12789, %rd12744;
	xor.b64  	%rd12791, %rd12790, %rd12759;
	xor.b64  	%rd12792, %rd12791, %rd12774;
	xor.b64  	%rd12793, %rd12732, %rd12717;
	xor.b64  	%rd12794, %rd12793, %rd12747;
	xor.b64  	%rd12795, %rd12794, %rd12762;
	xor.b64  	%rd12796, %rd12795, %rd12777;
	xor.b64  	%rd12797, %rd12735, %rd12720;
	xor.b64  	%rd12798, %rd12797, %rd12750;
	xor.b64  	%rd12799, %rd12798, %rd12765;
	xor.b64  	%rd12800, %rd12799, %rd12780;
	xor.b64  	%rd12801, %rd12738, %rd12723;
	xor.b64  	%rd12802, %rd12801, %rd12753;
	xor.b64  	%rd12803, %rd12802, %rd12768;
	xor.b64  	%rd12804, %rd12803, %rd12783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9015}, %rd12792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9016,%dummy}, %rd12792;
	}
	shf.l.wrap.b32 	%r9017, %r9016, %r9015, 1;
	shf.l.wrap.b32 	%r9018, %r9015, %r9016, 1;
	mov.b64 	%rd12805, {%r9018, %r9017};
	xor.b64  	%rd12806, %rd12804, %rd12805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9019}, %rd12796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9020,%dummy}, %rd12796;
	}
	shf.l.wrap.b32 	%r9021, %r9020, %r9019, 1;
	shf.l.wrap.b32 	%r9022, %r9019, %r9020, 1;
	mov.b64 	%rd12807, {%r9022, %r9021};
	xor.b64  	%rd12808, %rd12807, %rd12788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9023}, %rd12800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9024,%dummy}, %rd12800;
	}
	shf.l.wrap.b32 	%r9025, %r9024, %r9023, 1;
	shf.l.wrap.b32 	%r9026, %r9023, %r9024, 1;
	mov.b64 	%rd12809, {%r9026, %r9025};
	xor.b64  	%rd12810, %rd12809, %rd12792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9027}, %rd12804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9028,%dummy}, %rd12804;
	}
	shf.l.wrap.b32 	%r9029, %r9028, %r9027, 1;
	shf.l.wrap.b32 	%r9030, %r9027, %r9028, 1;
	mov.b64 	%rd12811, {%r9030, %r9029};
	xor.b64  	%rd12812, %rd12811, %rd12796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9031}, %rd12788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9032,%dummy}, %rd12788;
	}
	shf.l.wrap.b32 	%r9033, %r9032, %r9031, 1;
	shf.l.wrap.b32 	%r9034, %r9031, %r9032, 1;
	mov.b64 	%rd12813, {%r9034, %r9033};
	xor.b64  	%rd12814, %rd12800, %rd12813;
	xor.b64  	%rd12815, %rd12806, %rd12784;
	xor.b64  	%rd12816, %rd12808, %rd12714;
	xor.b64  	%rd12817, %rd12810, %rd12717;
	xor.b64  	%rd12818, %rd12812, %rd12720;
	xor.b64  	%rd12819, %rd12814, %rd12723;
	xor.b64  	%rd12820, %rd12806, %rd12726;
	xor.b64  	%rd12821, %rd12808, %rd12729;
	xor.b64  	%rd12822, %rd12810, %rd12732;
	xor.b64  	%rd12823, %rd12812, %rd12735;
	xor.b64  	%rd12824, %rd12814, %rd12738;
	xor.b64  	%rd12825, %rd12806, %rd12741;
	xor.b64  	%rd12826, %rd12808, %rd12744;
	xor.b64  	%rd12827, %rd12810, %rd12747;
	xor.b64  	%rd12828, %rd12812, %rd12750;
	xor.b64  	%rd12829, %rd12814, %rd12753;
	xor.b64  	%rd12830, %rd12806, %rd12756;
	xor.b64  	%rd12831, %rd12808, %rd12759;
	xor.b64  	%rd12832, %rd12810, %rd12762;
	xor.b64  	%rd12833, %rd12812, %rd12765;
	xor.b64  	%rd12834, %rd12814, %rd12768;
	xor.b64  	%rd12835, %rd12806, %rd12771;
	xor.b64  	%rd12836, %rd12808, %rd12774;
	xor.b64  	%rd12837, %rd12810, %rd12777;
	xor.b64  	%rd12838, %rd12812, %rd12780;
	xor.b64  	%rd12839, %rd12814, %rd12783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9035,%dummy}, %rd12821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9036}, %rd12821;
	}
	shf.r.wrap.b32 	%r9037, %r9036, %r9035, 20;
	shf.r.wrap.b32 	%r9038, %r9035, %r9036, 20;
	mov.b64 	%rd12840, {%r9038, %r9037};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9039,%dummy}, %rd12827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9040}, %rd12827;
	}
	shf.r.wrap.b32 	%r9041, %r9040, %r9039, 21;
	shf.r.wrap.b32 	%r9042, %r9039, %r9040, 21;
	mov.b64 	%rd12841, {%r9042, %r9041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9043}, %rd12833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9044,%dummy}, %rd12833;
	}
	shf.l.wrap.b32 	%r9045, %r9044, %r9043, 21;
	shf.l.wrap.b32 	%r9046, %r9043, %r9044, 21;
	mov.b64 	%rd12842, {%r9046, %r9045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9047}, %rd12839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9048,%dummy}, %rd12839;
	}
	shf.l.wrap.b32 	%r9049, %r9048, %r9047, 14;
	shf.l.wrap.b32 	%r9050, %r9047, %r9048, 14;
	mov.b64 	%rd12843, {%r9050, %r9049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9051}, %rd12818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9052,%dummy}, %rd12818;
	}
	shf.l.wrap.b32 	%r9053, %r9052, %r9051, 28;
	shf.l.wrap.b32 	%r9054, %r9051, %r9052, 28;
	mov.b64 	%rd12844, {%r9054, %r9053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9055}, %rd12824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9056,%dummy}, %rd12824;
	}
	shf.l.wrap.b32 	%r9057, %r9056, %r9055, 20;
	shf.l.wrap.b32 	%r9058, %r9055, %r9056, 20;
	mov.b64 	%rd12845, {%r9058, %r9057};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9059}, %rd12825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9060,%dummy}, %rd12825;
	}
	shf.l.wrap.b32 	%r9061, %r9060, %r9059, 3;
	shf.l.wrap.b32 	%r9062, %r9059, %r9060, 3;
	mov.b64 	%rd12846, {%r9062, %r9061};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9063,%dummy}, %rd12831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9064}, %rd12831;
	}
	shf.r.wrap.b32 	%r9065, %r9064, %r9063, 19;
	shf.r.wrap.b32 	%r9066, %r9063, %r9064, 19;
	mov.b64 	%rd12847, {%r9066, %r9065};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9067,%dummy}, %rd12837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9068}, %rd12837;
	}
	shf.r.wrap.b32 	%r9069, %r9068, %r9067, 3;
	shf.r.wrap.b32 	%r9070, %r9067, %r9068, 3;
	mov.b64 	%rd12848, {%r9070, %r9069};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9071}, %rd12816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9072,%dummy}, %rd12816;
	}
	shf.l.wrap.b32 	%r9073, %r9072, %r9071, 1;
	shf.l.wrap.b32 	%r9074, %r9071, %r9072, 1;
	mov.b64 	%rd12849, {%r9074, %r9073};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9075}, %rd12822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9076,%dummy}, %rd12822;
	}
	shf.l.wrap.b32 	%r9077, %r9076, %r9075, 6;
	shf.l.wrap.b32 	%r9078, %r9075, %r9076, 6;
	mov.b64 	%rd12850, {%r9078, %r9077};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9079}, %rd12828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9080,%dummy}, %rd12828;
	}
	shf.l.wrap.b32 	%r9081, %r9080, %r9079, 25;
	shf.l.wrap.b32 	%r9082, %r9079, %r9080, 25;
	mov.b64 	%rd12851, {%r9082, %r9081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9083}, %rd12834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9084,%dummy}, %rd12834;
	}
	shf.l.wrap.b32 	%r9085, %r9084, %r9083, 8;
	shf.l.wrap.b32 	%r9086, %r9083, %r9084, 8;
	mov.b64 	%rd12852, {%r9086, %r9085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9087}, %rd12835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9088,%dummy}, %rd12835;
	}
	shf.l.wrap.b32 	%r9089, %r9088, %r9087, 18;
	shf.l.wrap.b32 	%r9090, %r9087, %r9088, 18;
	mov.b64 	%rd12853, {%r9090, %r9089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9091}, %rd12819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd12819;
	}
	shf.l.wrap.b32 	%r9093, %r9092, %r9091, 27;
	shf.l.wrap.b32 	%r9094, %r9091, %r9092, 27;
	mov.b64 	%rd12854, {%r9094, %r9093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9095,%dummy}, %rd12820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9096}, %rd12820;
	}
	shf.r.wrap.b32 	%r9097, %r9096, %r9095, 28;
	shf.r.wrap.b32 	%r9098, %r9095, %r9096, 28;
	mov.b64 	%rd12855, {%r9098, %r9097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9099}, %rd12826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9100,%dummy}, %rd12826;
	}
	shf.l.wrap.b32 	%r9101, %r9100, %r9099, 10;
	shf.l.wrap.b32 	%r9102, %r9099, %r9100, 10;
	mov.b64 	%rd12856, {%r9102, %r9101};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9103}, %rd12832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9104,%dummy}, %rd12832;
	}
	shf.l.wrap.b32 	%r9105, %r9104, %r9103, 15;
	shf.l.wrap.b32 	%r9106, %r9103, %r9104, 15;
	mov.b64 	%rd12857, {%r9106, %r9105};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9107,%dummy}, %rd12838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9108}, %rd12838;
	}
	shf.r.wrap.b32 	%r9109, %r9108, %r9107, 8;
	shf.r.wrap.b32 	%r9110, %r9107, %r9108, 8;
	mov.b64 	%rd12858, {%r9110, %r9109};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9111,%dummy}, %rd12817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9112}, %rd12817;
	}
	shf.r.wrap.b32 	%r9113, %r9112, %r9111, 2;
	shf.r.wrap.b32 	%r9114, %r9111, %r9112, 2;
	mov.b64 	%rd12859, {%r9114, %r9113};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9115,%dummy}, %rd12823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9116}, %rd12823;
	}
	shf.r.wrap.b32 	%r9117, %r9116, %r9115, 9;
	shf.r.wrap.b32 	%r9118, %r9115, %r9116, 9;
	mov.b64 	%rd12860, {%r9118, %r9117};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9119,%dummy}, %rd12829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9120}, %rd12829;
	}
	shf.r.wrap.b32 	%r9121, %r9120, %r9119, 25;
	shf.r.wrap.b32 	%r9122, %r9119, %r9120, 25;
	mov.b64 	%rd12861, {%r9122, %r9121};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9123,%dummy}, %rd12830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9124}, %rd12830;
	}
	shf.r.wrap.b32 	%r9125, %r9124, %r9123, 23;
	shf.r.wrap.b32 	%r9126, %r9123, %r9124, 23;
	mov.b64 	%rd12862, {%r9126, %r9125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9127}, %rd12836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9128,%dummy}, %rd12836;
	}
	shf.l.wrap.b32 	%r9129, %r9128, %r9127, 2;
	shf.l.wrap.b32 	%r9130, %r9127, %r9128, 2;
	mov.b64 	%rd12863, {%r9130, %r9129};
	not.b64 	%rd12864, %rd12840;
	and.b64  	%rd12865, %rd12841, %rd12864;
	xor.b64  	%rd12866, %rd12865, %rd12815;
	not.b64 	%rd12867, %rd12841;
	and.b64  	%rd12868, %rd12842, %rd12867;
	xor.b64  	%rd12869, %rd12868, %rd12840;
	not.b64 	%rd12870, %rd12842;
	and.b64  	%rd12871, %rd12843, %rd12870;
	xor.b64  	%rd12872, %rd12871, %rd12841;
	not.b64 	%rd12873, %rd12843;
	and.b64  	%rd12874, %rd12815, %rd12873;
	xor.b64  	%rd12875, %rd12874, %rd12842;
	not.b64 	%rd12876, %rd12815;
	and.b64  	%rd12877, %rd12840, %rd12876;
	xor.b64  	%rd12878, %rd12877, %rd12843;
	not.b64 	%rd12879, %rd12845;
	and.b64  	%rd12880, %rd12846, %rd12879;
	xor.b64  	%rd12881, %rd12880, %rd12844;
	not.b64 	%rd12882, %rd12846;
	and.b64  	%rd12883, %rd12847, %rd12882;
	xor.b64  	%rd12884, %rd12883, %rd12845;
	not.b64 	%rd12885, %rd12847;
	and.b64  	%rd12886, %rd12848, %rd12885;
	xor.b64  	%rd12887, %rd12886, %rd12846;
	not.b64 	%rd12888, %rd12848;
	and.b64  	%rd12889, %rd12844, %rd12888;
	xor.b64  	%rd12890, %rd12889, %rd12847;
	not.b64 	%rd12891, %rd12844;
	and.b64  	%rd12892, %rd12845, %rd12891;
	xor.b64  	%rd12893, %rd12892, %rd12848;
	not.b64 	%rd12894, %rd12850;
	and.b64  	%rd12895, %rd12851, %rd12894;
	xor.b64  	%rd12896, %rd12895, %rd12849;
	not.b64 	%rd12897, %rd12851;
	and.b64  	%rd12898, %rd12852, %rd12897;
	xor.b64  	%rd12899, %rd12898, %rd12850;
	not.b64 	%rd12900, %rd12852;
	and.b64  	%rd12901, %rd12853, %rd12900;
	xor.b64  	%rd12902, %rd12901, %rd12851;
	not.b64 	%rd12903, %rd12853;
	and.b64  	%rd12904, %rd12849, %rd12903;
	xor.b64  	%rd12905, %rd12904, %rd12852;
	not.b64 	%rd12906, %rd12849;
	and.b64  	%rd12907, %rd12850, %rd12906;
	xor.b64  	%rd12908, %rd12907, %rd12853;
	not.b64 	%rd12909, %rd12855;
	and.b64  	%rd12910, %rd12856, %rd12909;
	xor.b64  	%rd12911, %rd12910, %rd12854;
	not.b64 	%rd12912, %rd12856;
	and.b64  	%rd12913, %rd12857, %rd12912;
	xor.b64  	%rd12914, %rd12913, %rd12855;
	not.b64 	%rd12915, %rd12857;
	and.b64  	%rd12916, %rd12858, %rd12915;
	xor.b64  	%rd12917, %rd12916, %rd12856;
	not.b64 	%rd12918, %rd12858;
	and.b64  	%rd12919, %rd12854, %rd12918;
	xor.b64  	%rd12920, %rd12919, %rd12857;
	not.b64 	%rd12921, %rd12854;
	and.b64  	%rd12922, %rd12855, %rd12921;
	xor.b64  	%rd12923, %rd12922, %rd12858;
	not.b64 	%rd12924, %rd12860;
	and.b64  	%rd12925, %rd12861, %rd12924;
	xor.b64  	%rd12926, %rd12925, %rd12859;
	not.b64 	%rd12927, %rd12861;
	and.b64  	%rd12928, %rd12862, %rd12927;
	xor.b64  	%rd12929, %rd12928, %rd12860;
	not.b64 	%rd12930, %rd12862;
	and.b64  	%rd12931, %rd12863, %rd12930;
	xor.b64  	%rd12932, %rd12931, %rd12861;
	not.b64 	%rd12933, %rd12863;
	and.b64  	%rd12934, %rd12859, %rd12933;
	xor.b64  	%rd12935, %rd12934, %rd12862;
	not.b64 	%rd12936, %rd12859;
	and.b64  	%rd12937, %rd12860, %rd12936;
	xor.b64  	%rd12938, %rd12937, %rd12863;
	xor.b64  	%rd12939, %rd12866, %rd19825;
	xor.b64  	%rd12940, %rd12881, %rd12939;
	xor.b64  	%rd12941, %rd12940, %rd12896;
	xor.b64  	%rd12942, %rd12941, %rd12911;
	xor.b64  	%rd12943, %rd12942, %rd12926;
	xor.b64  	%rd12944, %rd12884, %rd12869;
	xor.b64  	%rd12945, %rd12944, %rd12899;
	xor.b64  	%rd12946, %rd12945, %rd12914;
	xor.b64  	%rd12947, %rd12946, %rd12929;
	xor.b64  	%rd12948, %rd12887, %rd12872;
	xor.b64  	%rd12949, %rd12948, %rd12902;
	xor.b64  	%rd12950, %rd12949, %rd12917;
	xor.b64  	%rd12951, %rd12950, %rd12932;
	xor.b64  	%rd12952, %rd12890, %rd12875;
	xor.b64  	%rd12953, %rd12952, %rd12905;
	xor.b64  	%rd12954, %rd12953, %rd12920;
	xor.b64  	%rd12955, %rd12954, %rd12935;
	xor.b64  	%rd12956, %rd12893, %rd12878;
	xor.b64  	%rd12957, %rd12956, %rd12908;
	xor.b64  	%rd12958, %rd12957, %rd12923;
	xor.b64  	%rd12959, %rd12958, %rd12938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9131}, %rd12947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9132,%dummy}, %rd12947;
	}
	shf.l.wrap.b32 	%r9133, %r9132, %r9131, 1;
	shf.l.wrap.b32 	%r9134, %r9131, %r9132, 1;
	mov.b64 	%rd12960, {%r9134, %r9133};
	xor.b64  	%rd12961, %rd12959, %rd12960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9135}, %rd12951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9136,%dummy}, %rd12951;
	}
	shf.l.wrap.b32 	%r9137, %r9136, %r9135, 1;
	shf.l.wrap.b32 	%r9138, %r9135, %r9136, 1;
	mov.b64 	%rd12962, {%r9138, %r9137};
	xor.b64  	%rd12963, %rd12962, %rd12943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9139}, %rd12955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9140,%dummy}, %rd12955;
	}
	shf.l.wrap.b32 	%r9141, %r9140, %r9139, 1;
	shf.l.wrap.b32 	%r9142, %r9139, %r9140, 1;
	mov.b64 	%rd12964, {%r9142, %r9141};
	xor.b64  	%rd12965, %rd12964, %rd12947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9143}, %rd12959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9144,%dummy}, %rd12959;
	}
	shf.l.wrap.b32 	%r9145, %r9144, %r9143, 1;
	shf.l.wrap.b32 	%r9146, %r9143, %r9144, 1;
	mov.b64 	%rd12966, {%r9146, %r9145};
	xor.b64  	%rd12967, %rd12966, %rd12951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9147}, %rd12943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9148,%dummy}, %rd12943;
	}
	shf.l.wrap.b32 	%r9149, %r9148, %r9147, 1;
	shf.l.wrap.b32 	%r9150, %r9147, %r9148, 1;
	mov.b64 	%rd12968, {%r9150, %r9149};
	xor.b64  	%rd12969, %rd12955, %rd12968;
	xor.b64  	%rd12970, %rd12961, %rd12939;
	xor.b64  	%rd12971, %rd12963, %rd12869;
	xor.b64  	%rd12972, %rd12965, %rd12872;
	xor.b64  	%rd12973, %rd12967, %rd12875;
	xor.b64  	%rd12974, %rd12969, %rd12878;
	xor.b64  	%rd12975, %rd12961, %rd12881;
	xor.b64  	%rd12976, %rd12963, %rd12884;
	xor.b64  	%rd12977, %rd12965, %rd12887;
	xor.b64  	%rd12978, %rd12967, %rd12890;
	xor.b64  	%rd12979, %rd12969, %rd12893;
	xor.b64  	%rd12980, %rd12961, %rd12896;
	xor.b64  	%rd12981, %rd12963, %rd12899;
	xor.b64  	%rd12982, %rd12965, %rd12902;
	xor.b64  	%rd12983, %rd12967, %rd12905;
	xor.b64  	%rd12984, %rd12969, %rd12908;
	xor.b64  	%rd12985, %rd12961, %rd12911;
	xor.b64  	%rd12986, %rd12963, %rd12914;
	xor.b64  	%rd12987, %rd12965, %rd12917;
	xor.b64  	%rd12988, %rd12967, %rd12920;
	xor.b64  	%rd12989, %rd12969, %rd12923;
	xor.b64  	%rd12990, %rd12961, %rd12926;
	xor.b64  	%rd12991, %rd12963, %rd12929;
	xor.b64  	%rd12992, %rd12965, %rd12932;
	xor.b64  	%rd12993, %rd12967, %rd12935;
	xor.b64  	%rd12994, %rd12969, %rd12938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9151,%dummy}, %rd12976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9152}, %rd12976;
	}
	shf.r.wrap.b32 	%r9153, %r9152, %r9151, 20;
	shf.r.wrap.b32 	%r9154, %r9151, %r9152, 20;
	mov.b64 	%rd12995, {%r9154, %r9153};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9155,%dummy}, %rd12982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9156}, %rd12982;
	}
	shf.r.wrap.b32 	%r9157, %r9156, %r9155, 21;
	shf.r.wrap.b32 	%r9158, %r9155, %r9156, 21;
	mov.b64 	%rd12996, {%r9158, %r9157};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9159}, %rd12988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9160,%dummy}, %rd12988;
	}
	shf.l.wrap.b32 	%r9161, %r9160, %r9159, 21;
	shf.l.wrap.b32 	%r9162, %r9159, %r9160, 21;
	mov.b64 	%rd12997, {%r9162, %r9161};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9163}, %rd12994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9164,%dummy}, %rd12994;
	}
	shf.l.wrap.b32 	%r9165, %r9164, %r9163, 14;
	shf.l.wrap.b32 	%r9166, %r9163, %r9164, 14;
	mov.b64 	%rd12998, {%r9166, %r9165};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9167}, %rd12973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9168,%dummy}, %rd12973;
	}
	shf.l.wrap.b32 	%r9169, %r9168, %r9167, 28;
	shf.l.wrap.b32 	%r9170, %r9167, %r9168, 28;
	mov.b64 	%rd12999, {%r9170, %r9169};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9171}, %rd12979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9172,%dummy}, %rd12979;
	}
	shf.l.wrap.b32 	%r9173, %r9172, %r9171, 20;
	shf.l.wrap.b32 	%r9174, %r9171, %r9172, 20;
	mov.b64 	%rd13000, {%r9174, %r9173};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9175}, %rd12980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9176,%dummy}, %rd12980;
	}
	shf.l.wrap.b32 	%r9177, %r9176, %r9175, 3;
	shf.l.wrap.b32 	%r9178, %r9175, %r9176, 3;
	mov.b64 	%rd13001, {%r9178, %r9177};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9179,%dummy}, %rd12986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9180}, %rd12986;
	}
	shf.r.wrap.b32 	%r9181, %r9180, %r9179, 19;
	shf.r.wrap.b32 	%r9182, %r9179, %r9180, 19;
	mov.b64 	%rd13002, {%r9182, %r9181};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9183,%dummy}, %rd12992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9184}, %rd12992;
	}
	shf.r.wrap.b32 	%r9185, %r9184, %r9183, 3;
	shf.r.wrap.b32 	%r9186, %r9183, %r9184, 3;
	mov.b64 	%rd13003, {%r9186, %r9185};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9187}, %rd12971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9188,%dummy}, %rd12971;
	}
	shf.l.wrap.b32 	%r9189, %r9188, %r9187, 1;
	shf.l.wrap.b32 	%r9190, %r9187, %r9188, 1;
	mov.b64 	%rd13004, {%r9190, %r9189};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9191}, %rd12977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9192,%dummy}, %rd12977;
	}
	shf.l.wrap.b32 	%r9193, %r9192, %r9191, 6;
	shf.l.wrap.b32 	%r9194, %r9191, %r9192, 6;
	mov.b64 	%rd13005, {%r9194, %r9193};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9195}, %rd12983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9196,%dummy}, %rd12983;
	}
	shf.l.wrap.b32 	%r9197, %r9196, %r9195, 25;
	shf.l.wrap.b32 	%r9198, %r9195, %r9196, 25;
	mov.b64 	%rd13006, {%r9198, %r9197};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9199}, %rd12989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9200,%dummy}, %rd12989;
	}
	shf.l.wrap.b32 	%r9201, %r9200, %r9199, 8;
	shf.l.wrap.b32 	%r9202, %r9199, %r9200, 8;
	mov.b64 	%rd13007, {%r9202, %r9201};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9203}, %rd12990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9204,%dummy}, %rd12990;
	}
	shf.l.wrap.b32 	%r9205, %r9204, %r9203, 18;
	shf.l.wrap.b32 	%r9206, %r9203, %r9204, 18;
	mov.b64 	%rd13008, {%r9206, %r9205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9207}, %rd12974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9208,%dummy}, %rd12974;
	}
	shf.l.wrap.b32 	%r9209, %r9208, %r9207, 27;
	shf.l.wrap.b32 	%r9210, %r9207, %r9208, 27;
	mov.b64 	%rd13009, {%r9210, %r9209};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9211,%dummy}, %rd12975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9212}, %rd12975;
	}
	shf.r.wrap.b32 	%r9213, %r9212, %r9211, 28;
	shf.r.wrap.b32 	%r9214, %r9211, %r9212, 28;
	mov.b64 	%rd13010, {%r9214, %r9213};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9215}, %rd12981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd12981;
	}
	shf.l.wrap.b32 	%r9217, %r9216, %r9215, 10;
	shf.l.wrap.b32 	%r9218, %r9215, %r9216, 10;
	mov.b64 	%rd13011, {%r9218, %r9217};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9219}, %rd12987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9220,%dummy}, %rd12987;
	}
	shf.l.wrap.b32 	%r9221, %r9220, %r9219, 15;
	shf.l.wrap.b32 	%r9222, %r9219, %r9220, 15;
	mov.b64 	%rd13012, {%r9222, %r9221};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9223,%dummy}, %rd12993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9224}, %rd12993;
	}
	shf.r.wrap.b32 	%r9225, %r9224, %r9223, 8;
	shf.r.wrap.b32 	%r9226, %r9223, %r9224, 8;
	mov.b64 	%rd13013, {%r9226, %r9225};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9227,%dummy}, %rd12972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9228}, %rd12972;
	}
	shf.r.wrap.b32 	%r9229, %r9228, %r9227, 2;
	shf.r.wrap.b32 	%r9230, %r9227, %r9228, 2;
	mov.b64 	%rd13014, {%r9230, %r9229};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9231,%dummy}, %rd12978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9232}, %rd12978;
	}
	shf.r.wrap.b32 	%r9233, %r9232, %r9231, 9;
	shf.r.wrap.b32 	%r9234, %r9231, %r9232, 9;
	mov.b64 	%rd13015, {%r9234, %r9233};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9235,%dummy}, %rd12984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9236}, %rd12984;
	}
	shf.r.wrap.b32 	%r9237, %r9236, %r9235, 25;
	shf.r.wrap.b32 	%r9238, %r9235, %r9236, 25;
	mov.b64 	%rd13016, {%r9238, %r9237};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9239,%dummy}, %rd12985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9240}, %rd12985;
	}
	shf.r.wrap.b32 	%r9241, %r9240, %r9239, 23;
	shf.r.wrap.b32 	%r9242, %r9239, %r9240, 23;
	mov.b64 	%rd13017, {%r9242, %r9241};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9243}, %rd12991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9244,%dummy}, %rd12991;
	}
	shf.l.wrap.b32 	%r9245, %r9244, %r9243, 2;
	shf.l.wrap.b32 	%r9246, %r9243, %r9244, 2;
	mov.b64 	%rd13018, {%r9246, %r9245};
	not.b64 	%rd13019, %rd12995;
	and.b64  	%rd13020, %rd12996, %rd13019;
	xor.b64  	%rd13021, %rd13020, %rd12970;
	not.b64 	%rd13022, %rd12996;
	and.b64  	%rd13023, %rd12997, %rd13022;
	xor.b64  	%rd13024, %rd13023, %rd12995;
	not.b64 	%rd13025, %rd12997;
	and.b64  	%rd13026, %rd12998, %rd13025;
	xor.b64  	%rd13027, %rd13026, %rd12996;
	not.b64 	%rd13028, %rd12998;
	and.b64  	%rd13029, %rd12970, %rd13028;
	xor.b64  	%rd13030, %rd13029, %rd12997;
	not.b64 	%rd13031, %rd12970;
	and.b64  	%rd13032, %rd12995, %rd13031;
	xor.b64  	%rd13033, %rd13032, %rd12998;
	not.b64 	%rd13034, %rd13000;
	and.b64  	%rd13035, %rd13001, %rd13034;
	xor.b64  	%rd13036, %rd13035, %rd12999;
	not.b64 	%rd13037, %rd13001;
	and.b64  	%rd13038, %rd13002, %rd13037;
	xor.b64  	%rd13039, %rd13038, %rd13000;
	not.b64 	%rd13040, %rd13002;
	and.b64  	%rd13041, %rd13003, %rd13040;
	xor.b64  	%rd13042, %rd13041, %rd13001;
	not.b64 	%rd13043, %rd13003;
	and.b64  	%rd13044, %rd12999, %rd13043;
	xor.b64  	%rd13045, %rd13044, %rd13002;
	not.b64 	%rd13046, %rd12999;
	and.b64  	%rd13047, %rd13000, %rd13046;
	xor.b64  	%rd13048, %rd13047, %rd13003;
	not.b64 	%rd13049, %rd13005;
	and.b64  	%rd13050, %rd13006, %rd13049;
	xor.b64  	%rd13051, %rd13050, %rd13004;
	not.b64 	%rd13052, %rd13006;
	and.b64  	%rd13053, %rd13007, %rd13052;
	xor.b64  	%rd13054, %rd13053, %rd13005;
	not.b64 	%rd13055, %rd13007;
	and.b64  	%rd13056, %rd13008, %rd13055;
	xor.b64  	%rd13057, %rd13056, %rd13006;
	not.b64 	%rd13058, %rd13008;
	and.b64  	%rd13059, %rd13004, %rd13058;
	xor.b64  	%rd13060, %rd13059, %rd13007;
	not.b64 	%rd13061, %rd13004;
	and.b64  	%rd13062, %rd13005, %rd13061;
	xor.b64  	%rd13063, %rd13062, %rd13008;
	not.b64 	%rd13064, %rd13010;
	and.b64  	%rd13065, %rd13011, %rd13064;
	xor.b64  	%rd13066, %rd13065, %rd13009;
	not.b64 	%rd13067, %rd13011;
	and.b64  	%rd13068, %rd13012, %rd13067;
	xor.b64  	%rd13069, %rd13068, %rd13010;
	not.b64 	%rd13070, %rd13012;
	and.b64  	%rd13071, %rd13013, %rd13070;
	xor.b64  	%rd13072, %rd13071, %rd13011;
	not.b64 	%rd13073, %rd13013;
	and.b64  	%rd13074, %rd13009, %rd13073;
	xor.b64  	%rd13075, %rd13074, %rd13012;
	not.b64 	%rd13076, %rd13009;
	and.b64  	%rd13077, %rd13010, %rd13076;
	xor.b64  	%rd13078, %rd13077, %rd13013;
	not.b64 	%rd13079, %rd13015;
	and.b64  	%rd13080, %rd13016, %rd13079;
	xor.b64  	%rd13081, %rd13080, %rd13014;
	not.b64 	%rd13082, %rd13016;
	and.b64  	%rd13083, %rd13017, %rd13082;
	xor.b64  	%rd13084, %rd13083, %rd13015;
	not.b64 	%rd13085, %rd13017;
	and.b64  	%rd13086, %rd13018, %rd13085;
	xor.b64  	%rd13087, %rd13086, %rd13016;
	not.b64 	%rd13088, %rd13018;
	and.b64  	%rd13089, %rd13014, %rd13088;
	xor.b64  	%rd13090, %rd13089, %rd13017;
	not.b64 	%rd13091, %rd13014;
	and.b64  	%rd13092, %rd13015, %rd13091;
	xor.b64  	%rd13093, %rd13092, %rd13018;
	xor.b64  	%rd13094, %rd13021, %rd22;
	xor.b64  	%rd13095, %rd13036, %rd13094;
	xor.b64  	%rd13096, %rd13095, %rd13051;
	xor.b64  	%rd13097, %rd13096, %rd13066;
	xor.b64  	%rd13098, %rd13097, %rd13081;
	xor.b64  	%rd13099, %rd13039, %rd13024;
	xor.b64  	%rd13100, %rd13099, %rd13054;
	xor.b64  	%rd13101, %rd13100, %rd13069;
	xor.b64  	%rd13102, %rd13101, %rd13084;
	xor.b64  	%rd13103, %rd13042, %rd13027;
	xor.b64  	%rd13104, %rd13103, %rd13057;
	xor.b64  	%rd13105, %rd13104, %rd13072;
	xor.b64  	%rd13106, %rd13105, %rd13087;
	xor.b64  	%rd13107, %rd13045, %rd13030;
	xor.b64  	%rd13108, %rd13107, %rd13060;
	xor.b64  	%rd13109, %rd13108, %rd13075;
	xor.b64  	%rd13110, %rd13109, %rd13090;
	xor.b64  	%rd13111, %rd13048, %rd13033;
	xor.b64  	%rd13112, %rd13111, %rd13063;
	xor.b64  	%rd13113, %rd13112, %rd13078;
	xor.b64  	%rd13114, %rd13113, %rd13093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9247}, %rd13102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9248,%dummy}, %rd13102;
	}
	shf.l.wrap.b32 	%r9249, %r9248, %r9247, 1;
	shf.l.wrap.b32 	%r9250, %r9247, %r9248, 1;
	mov.b64 	%rd13115, {%r9250, %r9249};
	xor.b64  	%rd13116, %rd13114, %rd13115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9251}, %rd13106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9252,%dummy}, %rd13106;
	}
	shf.l.wrap.b32 	%r9253, %r9252, %r9251, 1;
	shf.l.wrap.b32 	%r9254, %r9251, %r9252, 1;
	mov.b64 	%rd13117, {%r9254, %r9253};
	xor.b64  	%rd13118, %rd13117, %rd13098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9255}, %rd13110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9256,%dummy}, %rd13110;
	}
	shf.l.wrap.b32 	%r9257, %r9256, %r9255, 1;
	shf.l.wrap.b32 	%r9258, %r9255, %r9256, 1;
	mov.b64 	%rd13119, {%r9258, %r9257};
	xor.b64  	%rd13120, %rd13119, %rd13102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9259}, %rd13114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9260,%dummy}, %rd13114;
	}
	shf.l.wrap.b32 	%r9261, %r9260, %r9259, 1;
	shf.l.wrap.b32 	%r9262, %r9259, %r9260, 1;
	mov.b64 	%rd13121, {%r9262, %r9261};
	xor.b64  	%rd13122, %rd13121, %rd13106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9263}, %rd13098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9264,%dummy}, %rd13098;
	}
	shf.l.wrap.b32 	%r9265, %r9264, %r9263, 1;
	shf.l.wrap.b32 	%r9266, %r9263, %r9264, 1;
	mov.b64 	%rd13123, {%r9266, %r9265};
	xor.b64  	%rd13124, %rd13110, %rd13123;
	xor.b64  	%rd13125, %rd13116, %rd13094;
	xor.b64  	%rd13126, %rd13118, %rd13024;
	xor.b64  	%rd13127, %rd13120, %rd13027;
	xor.b64  	%rd13128, %rd13122, %rd13030;
	xor.b64  	%rd13129, %rd13124, %rd13033;
	xor.b64  	%rd13130, %rd13116, %rd13036;
	xor.b64  	%rd13131, %rd13118, %rd13039;
	xor.b64  	%rd13132, %rd13120, %rd13042;
	xor.b64  	%rd13133, %rd13122, %rd13045;
	xor.b64  	%rd13134, %rd13124, %rd13048;
	xor.b64  	%rd13135, %rd13116, %rd13051;
	xor.b64  	%rd13136, %rd13118, %rd13054;
	xor.b64  	%rd13137, %rd13120, %rd13057;
	xor.b64  	%rd13138, %rd13122, %rd13060;
	xor.b64  	%rd13139, %rd13124, %rd13063;
	xor.b64  	%rd13140, %rd13116, %rd13066;
	xor.b64  	%rd13141, %rd13118, %rd13069;
	xor.b64  	%rd13142, %rd13120, %rd13072;
	xor.b64  	%rd13143, %rd13122, %rd13075;
	xor.b64  	%rd13144, %rd13124, %rd13078;
	xor.b64  	%rd13145, %rd13116, %rd13081;
	xor.b64  	%rd13146, %rd13118, %rd13084;
	xor.b64  	%rd13147, %rd13120, %rd13087;
	xor.b64  	%rd13148, %rd13122, %rd13090;
	xor.b64  	%rd13149, %rd13124, %rd13093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9267,%dummy}, %rd13131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9268}, %rd13131;
	}
	shf.r.wrap.b32 	%r9269, %r9268, %r9267, 20;
	shf.r.wrap.b32 	%r9270, %r9267, %r9268, 20;
	mov.b64 	%rd13150, {%r9270, %r9269};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9271,%dummy}, %rd13137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9272}, %rd13137;
	}
	shf.r.wrap.b32 	%r9273, %r9272, %r9271, 21;
	shf.r.wrap.b32 	%r9274, %r9271, %r9272, 21;
	mov.b64 	%rd13151, {%r9274, %r9273};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9275}, %rd13143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9276,%dummy}, %rd13143;
	}
	shf.l.wrap.b32 	%r9277, %r9276, %r9275, 21;
	shf.l.wrap.b32 	%r9278, %r9275, %r9276, 21;
	mov.b64 	%rd13152, {%r9278, %r9277};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9279}, %rd13149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9280,%dummy}, %rd13149;
	}
	shf.l.wrap.b32 	%r9281, %r9280, %r9279, 14;
	shf.l.wrap.b32 	%r9282, %r9279, %r9280, 14;
	mov.b64 	%rd13153, {%r9282, %r9281};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9283}, %rd13128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9284,%dummy}, %rd13128;
	}
	shf.l.wrap.b32 	%r9285, %r9284, %r9283, 28;
	shf.l.wrap.b32 	%r9286, %r9283, %r9284, 28;
	mov.b64 	%rd13154, {%r9286, %r9285};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9287}, %rd13134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9288,%dummy}, %rd13134;
	}
	shf.l.wrap.b32 	%r9289, %r9288, %r9287, 20;
	shf.l.wrap.b32 	%r9290, %r9287, %r9288, 20;
	mov.b64 	%rd13155, {%r9290, %r9289};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9291}, %rd13135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9292,%dummy}, %rd13135;
	}
	shf.l.wrap.b32 	%r9293, %r9292, %r9291, 3;
	shf.l.wrap.b32 	%r9294, %r9291, %r9292, 3;
	mov.b64 	%rd13156, {%r9294, %r9293};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9295,%dummy}, %rd13141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9296}, %rd13141;
	}
	shf.r.wrap.b32 	%r9297, %r9296, %r9295, 19;
	shf.r.wrap.b32 	%r9298, %r9295, %r9296, 19;
	mov.b64 	%rd13157, {%r9298, %r9297};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9299,%dummy}, %rd13147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9300}, %rd13147;
	}
	shf.r.wrap.b32 	%r9301, %r9300, %r9299, 3;
	shf.r.wrap.b32 	%r9302, %r9299, %r9300, 3;
	mov.b64 	%rd13158, {%r9302, %r9301};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9303}, %rd13126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9304,%dummy}, %rd13126;
	}
	shf.l.wrap.b32 	%r9305, %r9304, %r9303, 1;
	shf.l.wrap.b32 	%r9306, %r9303, %r9304, 1;
	mov.b64 	%rd13159, {%r9306, %r9305};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9307}, %rd13132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9308,%dummy}, %rd13132;
	}
	shf.l.wrap.b32 	%r9309, %r9308, %r9307, 6;
	shf.l.wrap.b32 	%r9310, %r9307, %r9308, 6;
	mov.b64 	%rd13160, {%r9310, %r9309};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9311}, %rd13138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9312,%dummy}, %rd13138;
	}
	shf.l.wrap.b32 	%r9313, %r9312, %r9311, 25;
	shf.l.wrap.b32 	%r9314, %r9311, %r9312, 25;
	mov.b64 	%rd13161, {%r9314, %r9313};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9315}, %rd13144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9316,%dummy}, %rd13144;
	}
	shf.l.wrap.b32 	%r9317, %r9316, %r9315, 8;
	shf.l.wrap.b32 	%r9318, %r9315, %r9316, 8;
	mov.b64 	%rd13162, {%r9318, %r9317};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9319}, %rd13145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9320,%dummy}, %rd13145;
	}
	shf.l.wrap.b32 	%r9321, %r9320, %r9319, 18;
	shf.l.wrap.b32 	%r9322, %r9319, %r9320, 18;
	mov.b64 	%rd13163, {%r9322, %r9321};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9323}, %rd13129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9324,%dummy}, %rd13129;
	}
	shf.l.wrap.b32 	%r9325, %r9324, %r9323, 27;
	shf.l.wrap.b32 	%r9326, %r9323, %r9324, 27;
	mov.b64 	%rd13164, {%r9326, %r9325};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9327,%dummy}, %rd13130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9328}, %rd13130;
	}
	shf.r.wrap.b32 	%r9329, %r9328, %r9327, 28;
	shf.r.wrap.b32 	%r9330, %r9327, %r9328, 28;
	mov.b64 	%rd13165, {%r9330, %r9329};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9331}, %rd13136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9332,%dummy}, %rd13136;
	}
	shf.l.wrap.b32 	%r9333, %r9332, %r9331, 10;
	shf.l.wrap.b32 	%r9334, %r9331, %r9332, 10;
	mov.b64 	%rd13166, {%r9334, %r9333};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9335}, %rd13142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9336,%dummy}, %rd13142;
	}
	shf.l.wrap.b32 	%r9337, %r9336, %r9335, 15;
	shf.l.wrap.b32 	%r9338, %r9335, %r9336, 15;
	mov.b64 	%rd13167, {%r9338, %r9337};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9339,%dummy}, %rd13148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9340}, %rd13148;
	}
	shf.r.wrap.b32 	%r9341, %r9340, %r9339, 8;
	shf.r.wrap.b32 	%r9342, %r9339, %r9340, 8;
	mov.b64 	%rd13168, {%r9342, %r9341};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9343,%dummy}, %rd13127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9344}, %rd13127;
	}
	shf.r.wrap.b32 	%r9345, %r9344, %r9343, 2;
	shf.r.wrap.b32 	%r9346, %r9343, %r9344, 2;
	mov.b64 	%rd13169, {%r9346, %r9345};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9347,%dummy}, %rd13133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9348}, %rd13133;
	}
	shf.r.wrap.b32 	%r9349, %r9348, %r9347, 9;
	shf.r.wrap.b32 	%r9350, %r9347, %r9348, 9;
	mov.b64 	%rd13170, {%r9350, %r9349};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9351,%dummy}, %rd13139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9352}, %rd13139;
	}
	shf.r.wrap.b32 	%r9353, %r9352, %r9351, 25;
	shf.r.wrap.b32 	%r9354, %r9351, %r9352, 25;
	mov.b64 	%rd13171, {%r9354, %r9353};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9355,%dummy}, %rd13140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9356}, %rd13140;
	}
	shf.r.wrap.b32 	%r9357, %r9356, %r9355, 23;
	shf.r.wrap.b32 	%r9358, %r9355, %r9356, 23;
	mov.b64 	%rd13172, {%r9358, %r9357};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9359}, %rd13146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9360,%dummy}, %rd13146;
	}
	shf.l.wrap.b32 	%r9361, %r9360, %r9359, 2;
	shf.l.wrap.b32 	%r9362, %r9359, %r9360, 2;
	mov.b64 	%rd13173, {%r9362, %r9361};
	not.b64 	%rd13174, %rd13150;
	and.b64  	%rd13175, %rd13151, %rd13174;
	xor.b64  	%rd13176, %rd13175, %rd13125;
	not.b64 	%rd13177, %rd13151;
	and.b64  	%rd13178, %rd13152, %rd13177;
	xor.b64  	%rd13179, %rd13178, %rd13150;
	not.b64 	%rd13180, %rd13152;
	and.b64  	%rd13181, %rd13153, %rd13180;
	xor.b64  	%rd13182, %rd13181, %rd13151;
	not.b64 	%rd13183, %rd13153;
	and.b64  	%rd13184, %rd13125, %rd13183;
	xor.b64  	%rd13185, %rd13184, %rd13152;
	not.b64 	%rd13186, %rd13125;
	and.b64  	%rd13187, %rd13150, %rd13186;
	xor.b64  	%rd13188, %rd13187, %rd13153;
	not.b64 	%rd13189, %rd13155;
	and.b64  	%rd13190, %rd13156, %rd13189;
	xor.b64  	%rd13191, %rd13190, %rd13154;
	not.b64 	%rd13192, %rd13156;
	and.b64  	%rd13193, %rd13157, %rd13192;
	xor.b64  	%rd13194, %rd13193, %rd13155;
	not.b64 	%rd13195, %rd13157;
	and.b64  	%rd13196, %rd13158, %rd13195;
	xor.b64  	%rd13197, %rd13196, %rd13156;
	not.b64 	%rd13198, %rd13158;
	and.b64  	%rd13199, %rd13154, %rd13198;
	xor.b64  	%rd13200, %rd13199, %rd13157;
	not.b64 	%rd13201, %rd13154;
	and.b64  	%rd13202, %rd13155, %rd13201;
	xor.b64  	%rd13203, %rd13202, %rd13158;
	not.b64 	%rd13204, %rd13160;
	and.b64  	%rd13205, %rd13161, %rd13204;
	xor.b64  	%rd13206, %rd13205, %rd13159;
	not.b64 	%rd13207, %rd13161;
	and.b64  	%rd13208, %rd13162, %rd13207;
	xor.b64  	%rd13209, %rd13208, %rd13160;
	not.b64 	%rd13210, %rd13162;
	and.b64  	%rd13211, %rd13163, %rd13210;
	xor.b64  	%rd13212, %rd13211, %rd13161;
	not.b64 	%rd13213, %rd13163;
	and.b64  	%rd13214, %rd13159, %rd13213;
	xor.b64  	%rd13215, %rd13214, %rd13162;
	not.b64 	%rd13216, %rd13159;
	and.b64  	%rd13217, %rd13160, %rd13216;
	xor.b64  	%rd13218, %rd13217, %rd13163;
	not.b64 	%rd13219, %rd13165;
	and.b64  	%rd13220, %rd13166, %rd13219;
	xor.b64  	%rd13221, %rd13220, %rd13164;
	not.b64 	%rd13222, %rd13166;
	and.b64  	%rd13223, %rd13167, %rd13222;
	xor.b64  	%rd13224, %rd13223, %rd13165;
	not.b64 	%rd13225, %rd13167;
	and.b64  	%rd13226, %rd13168, %rd13225;
	xor.b64  	%rd13227, %rd13226, %rd13166;
	not.b64 	%rd13228, %rd13168;
	and.b64  	%rd13229, %rd13164, %rd13228;
	xor.b64  	%rd13230, %rd13229, %rd13167;
	not.b64 	%rd13231, %rd13164;
	and.b64  	%rd13232, %rd13165, %rd13231;
	xor.b64  	%rd13233, %rd13232, %rd13168;
	not.b64 	%rd13234, %rd13170;
	and.b64  	%rd13235, %rd13171, %rd13234;
	xor.b64  	%rd13236, %rd13235, %rd13169;
	not.b64 	%rd13237, %rd13171;
	and.b64  	%rd13238, %rd13172, %rd13237;
	xor.b64  	%rd13239, %rd13238, %rd13170;
	not.b64 	%rd13240, %rd13172;
	and.b64  	%rd13241, %rd13173, %rd13240;
	xor.b64  	%rd13242, %rd13241, %rd13171;
	not.b64 	%rd13243, %rd13173;
	and.b64  	%rd13244, %rd13169, %rd13243;
	xor.b64  	%rd13245, %rd13244, %rd13172;
	not.b64 	%rd13246, %rd13169;
	and.b64  	%rd13247, %rd13170, %rd13246;
	xor.b64  	%rd13248, %rd13247, %rd13173;
	xor.b64  	%rd13249, %rd13176, %rd23;
	xor.b64  	%rd13250, %rd13191, %rd13249;
	xor.b64  	%rd13251, %rd13250, %rd13206;
	xor.b64  	%rd13252, %rd13251, %rd13221;
	xor.b64  	%rd13253, %rd13252, %rd13236;
	xor.b64  	%rd13254, %rd13194, %rd13179;
	xor.b64  	%rd13255, %rd13254, %rd13209;
	xor.b64  	%rd13256, %rd13255, %rd13224;
	xor.b64  	%rd13257, %rd13256, %rd13239;
	xor.b64  	%rd13258, %rd13197, %rd13182;
	xor.b64  	%rd13259, %rd13258, %rd13212;
	xor.b64  	%rd13260, %rd13259, %rd13227;
	xor.b64  	%rd13261, %rd13260, %rd13242;
	xor.b64  	%rd13262, %rd13200, %rd13185;
	xor.b64  	%rd13263, %rd13262, %rd13215;
	xor.b64  	%rd13264, %rd13263, %rd13230;
	xor.b64  	%rd13265, %rd13264, %rd13245;
	xor.b64  	%rd13266, %rd13203, %rd13188;
	xor.b64  	%rd13267, %rd13266, %rd13218;
	xor.b64  	%rd13268, %rd13267, %rd13233;
	xor.b64  	%rd13269, %rd13268, %rd13248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9363}, %rd13257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9364,%dummy}, %rd13257;
	}
	shf.l.wrap.b32 	%r9365, %r9364, %r9363, 1;
	shf.l.wrap.b32 	%r9366, %r9363, %r9364, 1;
	mov.b64 	%rd13270, {%r9366, %r9365};
	xor.b64  	%rd13271, %rd13269, %rd13270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9367}, %rd13261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9368,%dummy}, %rd13261;
	}
	shf.l.wrap.b32 	%r9369, %r9368, %r9367, 1;
	shf.l.wrap.b32 	%r9370, %r9367, %r9368, 1;
	mov.b64 	%rd13272, {%r9370, %r9369};
	xor.b64  	%rd13273, %rd13272, %rd13253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9371}, %rd13265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9372,%dummy}, %rd13265;
	}
	shf.l.wrap.b32 	%r9373, %r9372, %r9371, 1;
	shf.l.wrap.b32 	%r9374, %r9371, %r9372, 1;
	mov.b64 	%rd13274, {%r9374, %r9373};
	xor.b64  	%rd13275, %rd13274, %rd13257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9375}, %rd13269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9376,%dummy}, %rd13269;
	}
	shf.l.wrap.b32 	%r9377, %r9376, %r9375, 1;
	shf.l.wrap.b32 	%r9378, %r9375, %r9376, 1;
	mov.b64 	%rd13276, {%r9378, %r9377};
	xor.b64  	%rd13277, %rd13276, %rd13261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9379}, %rd13253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9380,%dummy}, %rd13253;
	}
	shf.l.wrap.b32 	%r9381, %r9380, %r9379, 1;
	shf.l.wrap.b32 	%r9382, %r9379, %r9380, 1;
	mov.b64 	%rd13278, {%r9382, %r9381};
	xor.b64  	%rd13279, %rd13265, %rd13278;
	xor.b64  	%rd13280, %rd13271, %rd13249;
	xor.b64  	%rd13281, %rd13273, %rd13179;
	xor.b64  	%rd13282, %rd13275, %rd13182;
	xor.b64  	%rd13283, %rd13277, %rd13185;
	xor.b64  	%rd13284, %rd13279, %rd13188;
	xor.b64  	%rd13285, %rd13271, %rd13191;
	xor.b64  	%rd13286, %rd13273, %rd13194;
	xor.b64  	%rd13287, %rd13275, %rd13197;
	xor.b64  	%rd13288, %rd13277, %rd13200;
	xor.b64  	%rd13289, %rd13279, %rd13203;
	xor.b64  	%rd13290, %rd13271, %rd13206;
	xor.b64  	%rd13291, %rd13273, %rd13209;
	xor.b64  	%rd13292, %rd13275, %rd13212;
	xor.b64  	%rd13293, %rd13277, %rd13215;
	xor.b64  	%rd13294, %rd13279, %rd13218;
	xor.b64  	%rd13295, %rd13271, %rd13221;
	xor.b64  	%rd13296, %rd13273, %rd13224;
	xor.b64  	%rd13297, %rd13275, %rd13227;
	xor.b64  	%rd13298, %rd13277, %rd13230;
	xor.b64  	%rd13299, %rd13279, %rd13233;
	xor.b64  	%rd13300, %rd13271, %rd13236;
	xor.b64  	%rd13301, %rd13273, %rd13239;
	xor.b64  	%rd13302, %rd13275, %rd13242;
	xor.b64  	%rd13303, %rd13277, %rd13245;
	xor.b64  	%rd13304, %rd13279, %rd13248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9383,%dummy}, %rd13286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9384}, %rd13286;
	}
	shf.r.wrap.b32 	%r9385, %r9384, %r9383, 20;
	shf.r.wrap.b32 	%r9386, %r9383, %r9384, 20;
	mov.b64 	%rd13305, {%r9386, %r9385};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9387,%dummy}, %rd13292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9388}, %rd13292;
	}
	shf.r.wrap.b32 	%r9389, %r9388, %r9387, 21;
	shf.r.wrap.b32 	%r9390, %r9387, %r9388, 21;
	mov.b64 	%rd13306, {%r9390, %r9389};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9391}, %rd13298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9392,%dummy}, %rd13298;
	}
	shf.l.wrap.b32 	%r9393, %r9392, %r9391, 21;
	shf.l.wrap.b32 	%r9394, %r9391, %r9392, 21;
	mov.b64 	%rd13307, {%r9394, %r9393};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9395}, %rd13304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9396,%dummy}, %rd13304;
	}
	shf.l.wrap.b32 	%r9397, %r9396, %r9395, 14;
	shf.l.wrap.b32 	%r9398, %r9395, %r9396, 14;
	mov.b64 	%rd13308, {%r9398, %r9397};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9399}, %rd13283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9400,%dummy}, %rd13283;
	}
	shf.l.wrap.b32 	%r9401, %r9400, %r9399, 28;
	shf.l.wrap.b32 	%r9402, %r9399, %r9400, 28;
	mov.b64 	%rd13309, {%r9402, %r9401};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9403}, %rd13289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9404,%dummy}, %rd13289;
	}
	shf.l.wrap.b32 	%r9405, %r9404, %r9403, 20;
	shf.l.wrap.b32 	%r9406, %r9403, %r9404, 20;
	mov.b64 	%rd13310, {%r9406, %r9405};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9407}, %rd13290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9408,%dummy}, %rd13290;
	}
	shf.l.wrap.b32 	%r9409, %r9408, %r9407, 3;
	shf.l.wrap.b32 	%r9410, %r9407, %r9408, 3;
	mov.b64 	%rd13311, {%r9410, %r9409};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9411,%dummy}, %rd13296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9412}, %rd13296;
	}
	shf.r.wrap.b32 	%r9413, %r9412, %r9411, 19;
	shf.r.wrap.b32 	%r9414, %r9411, %r9412, 19;
	mov.b64 	%rd13312, {%r9414, %r9413};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9415,%dummy}, %rd13302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9416}, %rd13302;
	}
	shf.r.wrap.b32 	%r9417, %r9416, %r9415, 3;
	shf.r.wrap.b32 	%r9418, %r9415, %r9416, 3;
	mov.b64 	%rd13313, {%r9418, %r9417};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9419}, %rd13281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9420,%dummy}, %rd13281;
	}
	shf.l.wrap.b32 	%r9421, %r9420, %r9419, 1;
	shf.l.wrap.b32 	%r9422, %r9419, %r9420, 1;
	mov.b64 	%rd13314, {%r9422, %r9421};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9423}, %rd13287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9424,%dummy}, %rd13287;
	}
	shf.l.wrap.b32 	%r9425, %r9424, %r9423, 6;
	shf.l.wrap.b32 	%r9426, %r9423, %r9424, 6;
	mov.b64 	%rd13315, {%r9426, %r9425};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9427}, %rd13293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9428,%dummy}, %rd13293;
	}
	shf.l.wrap.b32 	%r9429, %r9428, %r9427, 25;
	shf.l.wrap.b32 	%r9430, %r9427, %r9428, 25;
	mov.b64 	%rd13316, {%r9430, %r9429};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9431}, %rd13299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9432,%dummy}, %rd13299;
	}
	shf.l.wrap.b32 	%r9433, %r9432, %r9431, 8;
	shf.l.wrap.b32 	%r9434, %r9431, %r9432, 8;
	mov.b64 	%rd13317, {%r9434, %r9433};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9435}, %rd13300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9436,%dummy}, %rd13300;
	}
	shf.l.wrap.b32 	%r9437, %r9436, %r9435, 18;
	shf.l.wrap.b32 	%r9438, %r9435, %r9436, 18;
	mov.b64 	%rd13318, {%r9438, %r9437};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9439}, %rd13284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9440,%dummy}, %rd13284;
	}
	shf.l.wrap.b32 	%r9441, %r9440, %r9439, 27;
	shf.l.wrap.b32 	%r9442, %r9439, %r9440, 27;
	mov.b64 	%rd13319, {%r9442, %r9441};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9443,%dummy}, %rd13285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9444}, %rd13285;
	}
	shf.r.wrap.b32 	%r9445, %r9444, %r9443, 28;
	shf.r.wrap.b32 	%r9446, %r9443, %r9444, 28;
	mov.b64 	%rd13320, {%r9446, %r9445};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9447}, %rd13291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9448,%dummy}, %rd13291;
	}
	shf.l.wrap.b32 	%r9449, %r9448, %r9447, 10;
	shf.l.wrap.b32 	%r9450, %r9447, %r9448, 10;
	mov.b64 	%rd13321, {%r9450, %r9449};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9451}, %rd13297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9452,%dummy}, %rd13297;
	}
	shf.l.wrap.b32 	%r9453, %r9452, %r9451, 15;
	shf.l.wrap.b32 	%r9454, %r9451, %r9452, 15;
	mov.b64 	%rd13322, {%r9454, %r9453};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9455,%dummy}, %rd13303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9456}, %rd13303;
	}
	shf.r.wrap.b32 	%r9457, %r9456, %r9455, 8;
	shf.r.wrap.b32 	%r9458, %r9455, %r9456, 8;
	mov.b64 	%rd13323, {%r9458, %r9457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9459,%dummy}, %rd13282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9460}, %rd13282;
	}
	shf.r.wrap.b32 	%r9461, %r9460, %r9459, 2;
	shf.r.wrap.b32 	%r9462, %r9459, %r9460, 2;
	mov.b64 	%rd13324, {%r9462, %r9461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9463,%dummy}, %rd13288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9464}, %rd13288;
	}
	shf.r.wrap.b32 	%r9465, %r9464, %r9463, 9;
	shf.r.wrap.b32 	%r9466, %r9463, %r9464, 9;
	mov.b64 	%rd13325, {%r9466, %r9465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9467,%dummy}, %rd13294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9468}, %rd13294;
	}
	shf.r.wrap.b32 	%r9469, %r9468, %r9467, 25;
	shf.r.wrap.b32 	%r9470, %r9467, %r9468, 25;
	mov.b64 	%rd13326, {%r9470, %r9469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9471,%dummy}, %rd13295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9472}, %rd13295;
	}
	shf.r.wrap.b32 	%r9473, %r9472, %r9471, 23;
	shf.r.wrap.b32 	%r9474, %r9471, %r9472, 23;
	mov.b64 	%rd13327, {%r9474, %r9473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9475}, %rd13301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9476,%dummy}, %rd13301;
	}
	shf.l.wrap.b32 	%r9477, %r9476, %r9475, 2;
	shf.l.wrap.b32 	%r9478, %r9475, %r9476, 2;
	mov.b64 	%rd13328, {%r9478, %r9477};
	not.b64 	%rd13329, %rd13305;
	and.b64  	%rd13330, %rd13306, %rd13329;
	xor.b64  	%rd13331, %rd13330, %rd13280;
	not.b64 	%rd13332, %rd13306;
	and.b64  	%rd13333, %rd13307, %rd13332;
	xor.b64  	%rd13334, %rd13333, %rd13305;
	not.b64 	%rd13335, %rd13307;
	and.b64  	%rd13336, %rd13308, %rd13335;
	xor.b64  	%rd13337, %rd13336, %rd13306;
	not.b64 	%rd13338, %rd13308;
	and.b64  	%rd13339, %rd13280, %rd13338;
	xor.b64  	%rd13340, %rd13339, %rd13307;
	not.b64 	%rd13341, %rd13280;
	and.b64  	%rd13342, %rd13305, %rd13341;
	xor.b64  	%rd13343, %rd13342, %rd13308;
	not.b64 	%rd13344, %rd13310;
	and.b64  	%rd13345, %rd13311, %rd13344;
	xor.b64  	%rd13346, %rd13345, %rd13309;
	not.b64 	%rd13347, %rd13311;
	and.b64  	%rd13348, %rd13312, %rd13347;
	xor.b64  	%rd13349, %rd13348, %rd13310;
	not.b64 	%rd13350, %rd13312;
	and.b64  	%rd13351, %rd13313, %rd13350;
	xor.b64  	%rd13352, %rd13351, %rd13311;
	not.b64 	%rd13353, %rd13313;
	and.b64  	%rd13354, %rd13309, %rd13353;
	xor.b64  	%rd13355, %rd13354, %rd13312;
	not.b64 	%rd13356, %rd13309;
	and.b64  	%rd13357, %rd13310, %rd13356;
	xor.b64  	%rd13358, %rd13357, %rd13313;
	not.b64 	%rd13359, %rd13315;
	and.b64  	%rd13360, %rd13316, %rd13359;
	xor.b64  	%rd13361, %rd13360, %rd13314;
	not.b64 	%rd13362, %rd13316;
	and.b64  	%rd13363, %rd13317, %rd13362;
	xor.b64  	%rd13364, %rd13363, %rd13315;
	not.b64 	%rd13365, %rd13317;
	and.b64  	%rd13366, %rd13318, %rd13365;
	xor.b64  	%rd13367, %rd13366, %rd13316;
	not.b64 	%rd13368, %rd13318;
	and.b64  	%rd13369, %rd13314, %rd13368;
	xor.b64  	%rd13370, %rd13369, %rd13317;
	not.b64 	%rd13371, %rd13314;
	and.b64  	%rd13372, %rd13315, %rd13371;
	xor.b64  	%rd13373, %rd13372, %rd13318;
	not.b64 	%rd13374, %rd13320;
	and.b64  	%rd13375, %rd13321, %rd13374;
	xor.b64  	%rd13376, %rd13375, %rd13319;
	not.b64 	%rd13377, %rd13321;
	and.b64  	%rd13378, %rd13322, %rd13377;
	xor.b64  	%rd13379, %rd13378, %rd13320;
	not.b64 	%rd13380, %rd13322;
	and.b64  	%rd13381, %rd13323, %rd13380;
	xor.b64  	%rd13382, %rd13381, %rd13321;
	not.b64 	%rd13383, %rd13323;
	and.b64  	%rd13384, %rd13319, %rd13383;
	xor.b64  	%rd13385, %rd13384, %rd13322;
	not.b64 	%rd13386, %rd13319;
	and.b64  	%rd13387, %rd13320, %rd13386;
	xor.b64  	%rd13388, %rd13387, %rd13323;
	not.b64 	%rd13389, %rd13325;
	and.b64  	%rd13390, %rd13326, %rd13389;
	xor.b64  	%rd13391, %rd13390, %rd13324;
	not.b64 	%rd13392, %rd13326;
	and.b64  	%rd13393, %rd13327, %rd13392;
	xor.b64  	%rd13394, %rd13393, %rd13325;
	not.b64 	%rd13395, %rd13327;
	and.b64  	%rd13396, %rd13328, %rd13395;
	xor.b64  	%rd13397, %rd13396, %rd13326;
	not.b64 	%rd13398, %rd13328;
	and.b64  	%rd13399, %rd13324, %rd13398;
	xor.b64  	%rd13400, %rd13399, %rd13327;
	not.b64 	%rd13401, %rd13324;
	and.b64  	%rd13402, %rd13325, %rd13401;
	xor.b64  	%rd13403, %rd13402, %rd13328;
	xor.b64  	%rd13404, %rd13331, %rd24;
	xor.b64  	%rd13405, %rd13346, %rd13404;
	xor.b64  	%rd13406, %rd13405, %rd13361;
	xor.b64  	%rd13407, %rd13406, %rd13376;
	xor.b64  	%rd13408, %rd13407, %rd13391;
	xor.b64  	%rd13409, %rd13349, %rd13334;
	xor.b64  	%rd13410, %rd13409, %rd13364;
	xor.b64  	%rd13411, %rd13410, %rd13379;
	xor.b64  	%rd13412, %rd13411, %rd13394;
	xor.b64  	%rd13413, %rd13352, %rd13337;
	xor.b64  	%rd13414, %rd13413, %rd13367;
	xor.b64  	%rd13415, %rd13414, %rd13382;
	xor.b64  	%rd13416, %rd13415, %rd13397;
	xor.b64  	%rd13417, %rd13355, %rd13340;
	xor.b64  	%rd13418, %rd13417, %rd13370;
	xor.b64  	%rd13419, %rd13418, %rd13385;
	xor.b64  	%rd13420, %rd13419, %rd13400;
	xor.b64  	%rd13421, %rd13358, %rd13343;
	xor.b64  	%rd13422, %rd13421, %rd13373;
	xor.b64  	%rd13423, %rd13422, %rd13388;
	xor.b64  	%rd13424, %rd13423, %rd13403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9479}, %rd13412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9480,%dummy}, %rd13412;
	}
	shf.l.wrap.b32 	%r9481, %r9480, %r9479, 1;
	shf.l.wrap.b32 	%r9482, %r9479, %r9480, 1;
	mov.b64 	%rd13425, {%r9482, %r9481};
	xor.b64  	%rd13426, %rd13424, %rd13425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9483}, %rd13416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9484,%dummy}, %rd13416;
	}
	shf.l.wrap.b32 	%r9485, %r9484, %r9483, 1;
	shf.l.wrap.b32 	%r9486, %r9483, %r9484, 1;
	mov.b64 	%rd13427, {%r9486, %r9485};
	xor.b64  	%rd13428, %rd13427, %rd13408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9487}, %rd13420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9488,%dummy}, %rd13420;
	}
	shf.l.wrap.b32 	%r9489, %r9488, %r9487, 1;
	shf.l.wrap.b32 	%r9490, %r9487, %r9488, 1;
	mov.b64 	%rd13429, {%r9490, %r9489};
	xor.b64  	%rd13430, %rd13429, %rd13412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9491}, %rd13424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9492,%dummy}, %rd13424;
	}
	shf.l.wrap.b32 	%r9493, %r9492, %r9491, 1;
	shf.l.wrap.b32 	%r9494, %r9491, %r9492, 1;
	mov.b64 	%rd13431, {%r9494, %r9493};
	xor.b64  	%rd13432, %rd13431, %rd13416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9495}, %rd13408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9496,%dummy}, %rd13408;
	}
	shf.l.wrap.b32 	%r9497, %r9496, %r9495, 1;
	shf.l.wrap.b32 	%r9498, %r9495, %r9496, 1;
	mov.b64 	%rd13433, {%r9498, %r9497};
	xor.b64  	%rd13434, %rd13420, %rd13433;
	xor.b64  	%rd13435, %rd13426, %rd13404;
	xor.b64  	%rd13436, %rd13428, %rd13334;
	xor.b64  	%rd13437, %rd13430, %rd13337;
	xor.b64  	%rd13438, %rd13432, %rd13340;
	xor.b64  	%rd13439, %rd13434, %rd13343;
	xor.b64  	%rd13440, %rd13426, %rd13346;
	xor.b64  	%rd13441, %rd13428, %rd13349;
	xor.b64  	%rd13442, %rd13430, %rd13352;
	xor.b64  	%rd13443, %rd13432, %rd13355;
	xor.b64  	%rd13444, %rd13434, %rd13358;
	xor.b64  	%rd13445, %rd13426, %rd13361;
	xor.b64  	%rd13446, %rd13428, %rd13364;
	xor.b64  	%rd13447, %rd13430, %rd13367;
	xor.b64  	%rd13448, %rd13432, %rd13370;
	xor.b64  	%rd13449, %rd13434, %rd13373;
	xor.b64  	%rd13450, %rd13426, %rd13376;
	xor.b64  	%rd13451, %rd13428, %rd13379;
	xor.b64  	%rd13452, %rd13430, %rd13382;
	xor.b64  	%rd13453, %rd13432, %rd13385;
	xor.b64  	%rd13454, %rd13434, %rd13388;
	xor.b64  	%rd13455, %rd13426, %rd13391;
	xor.b64  	%rd13456, %rd13428, %rd13394;
	xor.b64  	%rd13457, %rd13430, %rd13397;
	xor.b64  	%rd13458, %rd13432, %rd13400;
	xor.b64  	%rd13459, %rd13434, %rd13403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9499,%dummy}, %rd13441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9500}, %rd13441;
	}
	shf.r.wrap.b32 	%r9501, %r9500, %r9499, 20;
	shf.r.wrap.b32 	%r9502, %r9499, %r9500, 20;
	mov.b64 	%rd13460, {%r9502, %r9501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9503,%dummy}, %rd13447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9504}, %rd13447;
	}
	shf.r.wrap.b32 	%r9505, %r9504, %r9503, 21;
	shf.r.wrap.b32 	%r9506, %r9503, %r9504, 21;
	mov.b64 	%rd13461, {%r9506, %r9505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9507}, %rd13453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9508,%dummy}, %rd13453;
	}
	shf.l.wrap.b32 	%r9509, %r9508, %r9507, 21;
	shf.l.wrap.b32 	%r9510, %r9507, %r9508, 21;
	mov.b64 	%rd13462, {%r9510, %r9509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9511}, %rd13459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9512,%dummy}, %rd13459;
	}
	shf.l.wrap.b32 	%r9513, %r9512, %r9511, 14;
	shf.l.wrap.b32 	%r9514, %r9511, %r9512, 14;
	mov.b64 	%rd13463, {%r9514, %r9513};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9515}, %rd13438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9516,%dummy}, %rd13438;
	}
	shf.l.wrap.b32 	%r9517, %r9516, %r9515, 28;
	shf.l.wrap.b32 	%r9518, %r9515, %r9516, 28;
	mov.b64 	%rd13464, {%r9518, %r9517};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9519}, %rd13444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9520,%dummy}, %rd13444;
	}
	shf.l.wrap.b32 	%r9521, %r9520, %r9519, 20;
	shf.l.wrap.b32 	%r9522, %r9519, %r9520, 20;
	mov.b64 	%rd13465, {%r9522, %r9521};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9523}, %rd13445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9524,%dummy}, %rd13445;
	}
	shf.l.wrap.b32 	%r9525, %r9524, %r9523, 3;
	shf.l.wrap.b32 	%r9526, %r9523, %r9524, 3;
	mov.b64 	%rd13466, {%r9526, %r9525};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9527,%dummy}, %rd13451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9528}, %rd13451;
	}
	shf.r.wrap.b32 	%r9529, %r9528, %r9527, 19;
	shf.r.wrap.b32 	%r9530, %r9527, %r9528, 19;
	mov.b64 	%rd13467, {%r9530, %r9529};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9531,%dummy}, %rd13457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9532}, %rd13457;
	}
	shf.r.wrap.b32 	%r9533, %r9532, %r9531, 3;
	shf.r.wrap.b32 	%r9534, %r9531, %r9532, 3;
	mov.b64 	%rd13468, {%r9534, %r9533};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9535}, %rd13436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9536,%dummy}, %rd13436;
	}
	shf.l.wrap.b32 	%r9537, %r9536, %r9535, 1;
	shf.l.wrap.b32 	%r9538, %r9535, %r9536, 1;
	mov.b64 	%rd13469, {%r9538, %r9537};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9539}, %rd13442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9540,%dummy}, %rd13442;
	}
	shf.l.wrap.b32 	%r9541, %r9540, %r9539, 6;
	shf.l.wrap.b32 	%r9542, %r9539, %r9540, 6;
	mov.b64 	%rd13470, {%r9542, %r9541};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9543}, %rd13448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9544,%dummy}, %rd13448;
	}
	shf.l.wrap.b32 	%r9545, %r9544, %r9543, 25;
	shf.l.wrap.b32 	%r9546, %r9543, %r9544, 25;
	mov.b64 	%rd13471, {%r9546, %r9545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9547}, %rd13454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9548,%dummy}, %rd13454;
	}
	shf.l.wrap.b32 	%r9549, %r9548, %r9547, 8;
	shf.l.wrap.b32 	%r9550, %r9547, %r9548, 8;
	mov.b64 	%rd13472, {%r9550, %r9549};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9551}, %rd13455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9552,%dummy}, %rd13455;
	}
	shf.l.wrap.b32 	%r9553, %r9552, %r9551, 18;
	shf.l.wrap.b32 	%r9554, %r9551, %r9552, 18;
	mov.b64 	%rd13473, {%r9554, %r9553};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9555}, %rd13439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9556,%dummy}, %rd13439;
	}
	shf.l.wrap.b32 	%r9557, %r9556, %r9555, 27;
	shf.l.wrap.b32 	%r9558, %r9555, %r9556, 27;
	mov.b64 	%rd13474, {%r9558, %r9557};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9559,%dummy}, %rd13440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9560}, %rd13440;
	}
	shf.r.wrap.b32 	%r9561, %r9560, %r9559, 28;
	shf.r.wrap.b32 	%r9562, %r9559, %r9560, 28;
	mov.b64 	%rd13475, {%r9562, %r9561};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9563}, %rd13446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9564,%dummy}, %rd13446;
	}
	shf.l.wrap.b32 	%r9565, %r9564, %r9563, 10;
	shf.l.wrap.b32 	%r9566, %r9563, %r9564, 10;
	mov.b64 	%rd13476, {%r9566, %r9565};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9567}, %rd13452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9568,%dummy}, %rd13452;
	}
	shf.l.wrap.b32 	%r9569, %r9568, %r9567, 15;
	shf.l.wrap.b32 	%r9570, %r9567, %r9568, 15;
	mov.b64 	%rd13477, {%r9570, %r9569};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9571,%dummy}, %rd13458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9572}, %rd13458;
	}
	shf.r.wrap.b32 	%r9573, %r9572, %r9571, 8;
	shf.r.wrap.b32 	%r9574, %r9571, %r9572, 8;
	mov.b64 	%rd13478, {%r9574, %r9573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9575,%dummy}, %rd13437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9576}, %rd13437;
	}
	shf.r.wrap.b32 	%r9577, %r9576, %r9575, 2;
	shf.r.wrap.b32 	%r9578, %r9575, %r9576, 2;
	mov.b64 	%rd13479, {%r9578, %r9577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9579,%dummy}, %rd13443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9580}, %rd13443;
	}
	shf.r.wrap.b32 	%r9581, %r9580, %r9579, 9;
	shf.r.wrap.b32 	%r9582, %r9579, %r9580, 9;
	mov.b64 	%rd13480, {%r9582, %r9581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9583,%dummy}, %rd13449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9584}, %rd13449;
	}
	shf.r.wrap.b32 	%r9585, %r9584, %r9583, 25;
	shf.r.wrap.b32 	%r9586, %r9583, %r9584, 25;
	mov.b64 	%rd13481, {%r9586, %r9585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9587,%dummy}, %rd13450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9588}, %rd13450;
	}
	shf.r.wrap.b32 	%r9589, %r9588, %r9587, 23;
	shf.r.wrap.b32 	%r9590, %r9587, %r9588, 23;
	mov.b64 	%rd13482, {%r9590, %r9589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9591}, %rd13456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9592,%dummy}, %rd13456;
	}
	shf.l.wrap.b32 	%r9593, %r9592, %r9591, 2;
	shf.l.wrap.b32 	%r9594, %r9591, %r9592, 2;
	mov.b64 	%rd13483, {%r9594, %r9593};
	not.b64 	%rd13484, %rd13460;
	and.b64  	%rd13485, %rd13461, %rd13484;
	xor.b64  	%rd13486, %rd13485, %rd13435;
	not.b64 	%rd13487, %rd13461;
	and.b64  	%rd13488, %rd13462, %rd13487;
	xor.b64  	%rd13489, %rd13488, %rd13460;
	not.b64 	%rd13490, %rd13462;
	and.b64  	%rd13491, %rd13463, %rd13490;
	xor.b64  	%rd13492, %rd13491, %rd13461;
	not.b64 	%rd13493, %rd13463;
	and.b64  	%rd13494, %rd13435, %rd13493;
	xor.b64  	%rd13495, %rd13494, %rd13462;
	not.b64 	%rd13496, %rd13435;
	and.b64  	%rd13497, %rd13460, %rd13496;
	xor.b64  	%rd13498, %rd13497, %rd13463;
	not.b64 	%rd13499, %rd13465;
	and.b64  	%rd13500, %rd13466, %rd13499;
	xor.b64  	%rd13501, %rd13500, %rd13464;
	not.b64 	%rd13502, %rd13466;
	and.b64  	%rd13503, %rd13467, %rd13502;
	xor.b64  	%rd13504, %rd13503, %rd13465;
	not.b64 	%rd13505, %rd13467;
	and.b64  	%rd13506, %rd13468, %rd13505;
	xor.b64  	%rd13507, %rd13506, %rd13466;
	not.b64 	%rd13508, %rd13468;
	and.b64  	%rd13509, %rd13464, %rd13508;
	xor.b64  	%rd13510, %rd13509, %rd13467;
	not.b64 	%rd13511, %rd13464;
	and.b64  	%rd13512, %rd13465, %rd13511;
	xor.b64  	%rd13513, %rd13512, %rd13468;
	not.b64 	%rd13514, %rd13470;
	and.b64  	%rd13515, %rd13471, %rd13514;
	xor.b64  	%rd13516, %rd13515, %rd13469;
	not.b64 	%rd13517, %rd13471;
	and.b64  	%rd13518, %rd13472, %rd13517;
	xor.b64  	%rd13519, %rd13518, %rd13470;
	not.b64 	%rd13520, %rd13472;
	and.b64  	%rd13521, %rd13473, %rd13520;
	xor.b64  	%rd13522, %rd13521, %rd13471;
	not.b64 	%rd13523, %rd13473;
	and.b64  	%rd13524, %rd13469, %rd13523;
	xor.b64  	%rd13525, %rd13524, %rd13472;
	not.b64 	%rd13526, %rd13469;
	and.b64  	%rd13527, %rd13470, %rd13526;
	xor.b64  	%rd13528, %rd13527, %rd13473;
	not.b64 	%rd13529, %rd13475;
	and.b64  	%rd13530, %rd13476, %rd13529;
	xor.b64  	%rd13531, %rd13530, %rd13474;
	not.b64 	%rd13532, %rd13476;
	and.b64  	%rd13533, %rd13477, %rd13532;
	xor.b64  	%rd13534, %rd13533, %rd13475;
	not.b64 	%rd13535, %rd13477;
	and.b64  	%rd13536, %rd13478, %rd13535;
	xor.b64  	%rd13537, %rd13536, %rd13476;
	not.b64 	%rd13538, %rd13478;
	and.b64  	%rd13539, %rd13474, %rd13538;
	xor.b64  	%rd13540, %rd13539, %rd13477;
	not.b64 	%rd13541, %rd13474;
	and.b64  	%rd13542, %rd13475, %rd13541;
	xor.b64  	%rd13543, %rd13542, %rd13478;
	not.b64 	%rd13544, %rd13480;
	and.b64  	%rd13545, %rd13481, %rd13544;
	xor.b64  	%rd13546, %rd13545, %rd13479;
	not.b64 	%rd13547, %rd13481;
	and.b64  	%rd13548, %rd13482, %rd13547;
	xor.b64  	%rd13549, %rd13548, %rd13480;
	not.b64 	%rd13550, %rd13482;
	and.b64  	%rd13551, %rd13483, %rd13550;
	xor.b64  	%rd13552, %rd13551, %rd13481;
	not.b64 	%rd13553, %rd13483;
	and.b64  	%rd13554, %rd13479, %rd13553;
	xor.b64  	%rd13555, %rd13554, %rd13482;
	not.b64 	%rd13556, %rd13479;
	and.b64  	%rd13557, %rd13480, %rd13556;
	xor.b64  	%rd13558, %rd13557, %rd13483;
	xor.b64  	%rd13559, %rd13486, %rd25;
	xor.b64  	%rd13560, %rd13501, %rd13559;
	xor.b64  	%rd13561, %rd13560, %rd13516;
	xor.b64  	%rd13562, %rd13561, %rd13531;
	xor.b64  	%rd13563, %rd13562, %rd13546;
	xor.b64  	%rd13564, %rd13504, %rd13489;
	xor.b64  	%rd13565, %rd13564, %rd13519;
	xor.b64  	%rd13566, %rd13565, %rd13534;
	xor.b64  	%rd13567, %rd13566, %rd13549;
	xor.b64  	%rd13568, %rd13507, %rd13492;
	xor.b64  	%rd13569, %rd13568, %rd13522;
	xor.b64  	%rd13570, %rd13569, %rd13537;
	xor.b64  	%rd13571, %rd13570, %rd13552;
	xor.b64  	%rd13572, %rd13510, %rd13495;
	xor.b64  	%rd13573, %rd13572, %rd13525;
	xor.b64  	%rd13574, %rd13573, %rd13540;
	xor.b64  	%rd13575, %rd13574, %rd13555;
	xor.b64  	%rd13576, %rd13513, %rd13498;
	xor.b64  	%rd13577, %rd13576, %rd13528;
	xor.b64  	%rd13578, %rd13577, %rd13543;
	xor.b64  	%rd13579, %rd13578, %rd13558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9595}, %rd13567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9596,%dummy}, %rd13567;
	}
	shf.l.wrap.b32 	%r9597, %r9596, %r9595, 1;
	shf.l.wrap.b32 	%r9598, %r9595, %r9596, 1;
	mov.b64 	%rd13580, {%r9598, %r9597};
	xor.b64  	%rd13581, %rd13579, %rd13580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9599}, %rd13571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9600,%dummy}, %rd13571;
	}
	shf.l.wrap.b32 	%r9601, %r9600, %r9599, 1;
	shf.l.wrap.b32 	%r9602, %r9599, %r9600, 1;
	mov.b64 	%rd13582, {%r9602, %r9601};
	xor.b64  	%rd13583, %rd13582, %rd13563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9603}, %rd13575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9604,%dummy}, %rd13575;
	}
	shf.l.wrap.b32 	%r9605, %r9604, %r9603, 1;
	shf.l.wrap.b32 	%r9606, %r9603, %r9604, 1;
	mov.b64 	%rd13584, {%r9606, %r9605};
	xor.b64  	%rd13585, %rd13584, %rd13567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9607}, %rd13579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9608,%dummy}, %rd13579;
	}
	shf.l.wrap.b32 	%r9609, %r9608, %r9607, 1;
	shf.l.wrap.b32 	%r9610, %r9607, %r9608, 1;
	mov.b64 	%rd13586, {%r9610, %r9609};
	xor.b64  	%rd13587, %rd13586, %rd13571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9611}, %rd13563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9612,%dummy}, %rd13563;
	}
	shf.l.wrap.b32 	%r9613, %r9612, %r9611, 1;
	shf.l.wrap.b32 	%r9614, %r9611, %r9612, 1;
	mov.b64 	%rd13588, {%r9614, %r9613};
	xor.b64  	%rd13589, %rd13575, %rd13588;
	xor.b64  	%rd13590, %rd13581, %rd13559;
	xor.b64  	%rd13591, %rd13583, %rd13489;
	xor.b64  	%rd13592, %rd13585, %rd13492;
	xor.b64  	%rd13593, %rd13587, %rd13495;
	xor.b64  	%rd13594, %rd13589, %rd13498;
	xor.b64  	%rd13595, %rd13581, %rd13501;
	xor.b64  	%rd13596, %rd13583, %rd13504;
	xor.b64  	%rd13597, %rd13585, %rd13507;
	xor.b64  	%rd13598, %rd13587, %rd13510;
	xor.b64  	%rd13599, %rd13589, %rd13513;
	xor.b64  	%rd13600, %rd13581, %rd13516;
	xor.b64  	%rd13601, %rd13583, %rd13519;
	xor.b64  	%rd13602, %rd13585, %rd13522;
	xor.b64  	%rd13603, %rd13587, %rd13525;
	xor.b64  	%rd13604, %rd13589, %rd13528;
	xor.b64  	%rd13605, %rd13581, %rd13531;
	xor.b64  	%rd13606, %rd13583, %rd13534;
	xor.b64  	%rd13607, %rd13585, %rd13537;
	xor.b64  	%rd13608, %rd13587, %rd13540;
	xor.b64  	%rd13609, %rd13589, %rd13543;
	xor.b64  	%rd13610, %rd13581, %rd13546;
	xor.b64  	%rd13611, %rd13583, %rd13549;
	xor.b64  	%rd13612, %rd13585, %rd13552;
	xor.b64  	%rd13613, %rd13587, %rd13555;
	xor.b64  	%rd13614, %rd13589, %rd13558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9615,%dummy}, %rd13596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9616}, %rd13596;
	}
	shf.r.wrap.b32 	%r9617, %r9616, %r9615, 20;
	shf.r.wrap.b32 	%r9618, %r9615, %r9616, 20;
	mov.b64 	%rd13615, {%r9618, %r9617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9619,%dummy}, %rd13602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9620}, %rd13602;
	}
	shf.r.wrap.b32 	%r9621, %r9620, %r9619, 21;
	shf.r.wrap.b32 	%r9622, %r9619, %r9620, 21;
	mov.b64 	%rd13616, {%r9622, %r9621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9623}, %rd13608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd13608;
	}
	shf.l.wrap.b32 	%r9625, %r9624, %r9623, 21;
	shf.l.wrap.b32 	%r9626, %r9623, %r9624, 21;
	mov.b64 	%rd13617, {%r9626, %r9625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9627}, %rd13614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9628,%dummy}, %rd13614;
	}
	shf.l.wrap.b32 	%r9629, %r9628, %r9627, 14;
	shf.l.wrap.b32 	%r9630, %r9627, %r9628, 14;
	mov.b64 	%rd13618, {%r9630, %r9629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9631}, %rd13593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9632,%dummy}, %rd13593;
	}
	shf.l.wrap.b32 	%r9633, %r9632, %r9631, 28;
	shf.l.wrap.b32 	%r9634, %r9631, %r9632, 28;
	mov.b64 	%rd13619, {%r9634, %r9633};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9635}, %rd13599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9636,%dummy}, %rd13599;
	}
	shf.l.wrap.b32 	%r9637, %r9636, %r9635, 20;
	shf.l.wrap.b32 	%r9638, %r9635, %r9636, 20;
	mov.b64 	%rd13620, {%r9638, %r9637};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9639}, %rd13600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9640,%dummy}, %rd13600;
	}
	shf.l.wrap.b32 	%r9641, %r9640, %r9639, 3;
	shf.l.wrap.b32 	%r9642, %r9639, %r9640, 3;
	mov.b64 	%rd13621, {%r9642, %r9641};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9643,%dummy}, %rd13606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9644}, %rd13606;
	}
	shf.r.wrap.b32 	%r9645, %r9644, %r9643, 19;
	shf.r.wrap.b32 	%r9646, %r9643, %r9644, 19;
	mov.b64 	%rd13622, {%r9646, %r9645};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9647,%dummy}, %rd13612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9648}, %rd13612;
	}
	shf.r.wrap.b32 	%r9649, %r9648, %r9647, 3;
	shf.r.wrap.b32 	%r9650, %r9647, %r9648, 3;
	mov.b64 	%rd13623, {%r9650, %r9649};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9651}, %rd13591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9652,%dummy}, %rd13591;
	}
	shf.l.wrap.b32 	%r9653, %r9652, %r9651, 1;
	shf.l.wrap.b32 	%r9654, %r9651, %r9652, 1;
	mov.b64 	%rd13624, {%r9654, %r9653};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9655}, %rd13597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9656,%dummy}, %rd13597;
	}
	shf.l.wrap.b32 	%r9657, %r9656, %r9655, 6;
	shf.l.wrap.b32 	%r9658, %r9655, %r9656, 6;
	mov.b64 	%rd13625, {%r9658, %r9657};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9659}, %rd13603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9660,%dummy}, %rd13603;
	}
	shf.l.wrap.b32 	%r9661, %r9660, %r9659, 25;
	shf.l.wrap.b32 	%r9662, %r9659, %r9660, 25;
	mov.b64 	%rd13626, {%r9662, %r9661};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9663}, %rd13609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd13609;
	}
	shf.l.wrap.b32 	%r9665, %r9664, %r9663, 8;
	shf.l.wrap.b32 	%r9666, %r9663, %r9664, 8;
	mov.b64 	%rd13627, {%r9666, %r9665};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9667}, %rd13610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9668,%dummy}, %rd13610;
	}
	shf.l.wrap.b32 	%r9669, %r9668, %r9667, 18;
	shf.l.wrap.b32 	%r9670, %r9667, %r9668, 18;
	mov.b64 	%rd13628, {%r9670, %r9669};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9671}, %rd13594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd13594;
	}
	shf.l.wrap.b32 	%r9673, %r9672, %r9671, 27;
	shf.l.wrap.b32 	%r9674, %r9671, %r9672, 27;
	mov.b64 	%rd13629, {%r9674, %r9673};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9675,%dummy}, %rd13595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9676}, %rd13595;
	}
	shf.r.wrap.b32 	%r9677, %r9676, %r9675, 28;
	shf.r.wrap.b32 	%r9678, %r9675, %r9676, 28;
	mov.b64 	%rd13630, {%r9678, %r9677};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9679}, %rd13601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9680,%dummy}, %rd13601;
	}
	shf.l.wrap.b32 	%r9681, %r9680, %r9679, 10;
	shf.l.wrap.b32 	%r9682, %r9679, %r9680, 10;
	mov.b64 	%rd13631, {%r9682, %r9681};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9683}, %rd13607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9684,%dummy}, %rd13607;
	}
	shf.l.wrap.b32 	%r9685, %r9684, %r9683, 15;
	shf.l.wrap.b32 	%r9686, %r9683, %r9684, 15;
	mov.b64 	%rd13632, {%r9686, %r9685};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9687,%dummy}, %rd13613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9688}, %rd13613;
	}
	shf.r.wrap.b32 	%r9689, %r9688, %r9687, 8;
	shf.r.wrap.b32 	%r9690, %r9687, %r9688, 8;
	mov.b64 	%rd13633, {%r9690, %r9689};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9691,%dummy}, %rd13592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9692}, %rd13592;
	}
	shf.r.wrap.b32 	%r9693, %r9692, %r9691, 2;
	shf.r.wrap.b32 	%r9694, %r9691, %r9692, 2;
	mov.b64 	%rd13634, {%r9694, %r9693};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9695,%dummy}, %rd13598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9696}, %rd13598;
	}
	shf.r.wrap.b32 	%r9697, %r9696, %r9695, 9;
	shf.r.wrap.b32 	%r9698, %r9695, %r9696, 9;
	mov.b64 	%rd13635, {%r9698, %r9697};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9699,%dummy}, %rd13604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9700}, %rd13604;
	}
	shf.r.wrap.b32 	%r9701, %r9700, %r9699, 25;
	shf.r.wrap.b32 	%r9702, %r9699, %r9700, 25;
	mov.b64 	%rd13636, {%r9702, %r9701};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9703,%dummy}, %rd13605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9704}, %rd13605;
	}
	shf.r.wrap.b32 	%r9705, %r9704, %r9703, 23;
	shf.r.wrap.b32 	%r9706, %r9703, %r9704, 23;
	mov.b64 	%rd13637, {%r9706, %r9705};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9707}, %rd13611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9708,%dummy}, %rd13611;
	}
	shf.l.wrap.b32 	%r9709, %r9708, %r9707, 2;
	shf.l.wrap.b32 	%r9710, %r9707, %r9708, 2;
	mov.b64 	%rd13638, {%r9710, %r9709};
	not.b64 	%rd13639, %rd13615;
	and.b64  	%rd13640, %rd13616, %rd13639;
	xor.b64  	%rd13641, %rd13640, %rd13590;
	not.b64 	%rd13642, %rd13616;
	and.b64  	%rd13643, %rd13617, %rd13642;
	xor.b64  	%rd13644, %rd13643, %rd13615;
	not.b64 	%rd13645, %rd13617;
	and.b64  	%rd13646, %rd13618, %rd13645;
	xor.b64  	%rd13647, %rd13646, %rd13616;
	not.b64 	%rd13648, %rd13618;
	and.b64  	%rd13649, %rd13590, %rd13648;
	xor.b64  	%rd13650, %rd13649, %rd13617;
	not.b64 	%rd13651, %rd13590;
	and.b64  	%rd13652, %rd13615, %rd13651;
	xor.b64  	%rd13653, %rd13652, %rd13618;
	not.b64 	%rd13654, %rd13620;
	and.b64  	%rd13655, %rd13621, %rd13654;
	xor.b64  	%rd13656, %rd13655, %rd13619;
	not.b64 	%rd13657, %rd13621;
	and.b64  	%rd13658, %rd13622, %rd13657;
	xor.b64  	%rd13659, %rd13658, %rd13620;
	not.b64 	%rd13660, %rd13622;
	and.b64  	%rd13661, %rd13623, %rd13660;
	xor.b64  	%rd13662, %rd13661, %rd13621;
	not.b64 	%rd13663, %rd13623;
	and.b64  	%rd13664, %rd13619, %rd13663;
	xor.b64  	%rd13665, %rd13664, %rd13622;
	not.b64 	%rd13666, %rd13619;
	and.b64  	%rd13667, %rd13620, %rd13666;
	xor.b64  	%rd13668, %rd13667, %rd13623;
	not.b64 	%rd13669, %rd13625;
	and.b64  	%rd13670, %rd13626, %rd13669;
	xor.b64  	%rd13671, %rd13670, %rd13624;
	not.b64 	%rd13672, %rd13626;
	and.b64  	%rd13673, %rd13627, %rd13672;
	xor.b64  	%rd13674, %rd13673, %rd13625;
	not.b64 	%rd13675, %rd13627;
	and.b64  	%rd13676, %rd13628, %rd13675;
	xor.b64  	%rd13677, %rd13676, %rd13626;
	not.b64 	%rd13678, %rd13628;
	and.b64  	%rd13679, %rd13624, %rd13678;
	xor.b64  	%rd13680, %rd13679, %rd13627;
	not.b64 	%rd13681, %rd13624;
	and.b64  	%rd13682, %rd13625, %rd13681;
	xor.b64  	%rd13683, %rd13682, %rd13628;
	not.b64 	%rd13684, %rd13630;
	and.b64  	%rd13685, %rd13631, %rd13684;
	xor.b64  	%rd13686, %rd13685, %rd13629;
	not.b64 	%rd13687, %rd13631;
	and.b64  	%rd13688, %rd13632, %rd13687;
	xor.b64  	%rd13689, %rd13688, %rd13630;
	not.b64 	%rd13690, %rd13632;
	and.b64  	%rd13691, %rd13633, %rd13690;
	xor.b64  	%rd13692, %rd13691, %rd13631;
	not.b64 	%rd13693, %rd13633;
	and.b64  	%rd13694, %rd13629, %rd13693;
	xor.b64  	%rd13695, %rd13694, %rd13632;
	not.b64 	%rd13696, %rd13629;
	and.b64  	%rd13697, %rd13630, %rd13696;
	xor.b64  	%rd13698, %rd13697, %rd13633;
	not.b64 	%rd13699, %rd13635;
	and.b64  	%rd13700, %rd13636, %rd13699;
	xor.b64  	%rd13701, %rd13700, %rd13634;
	not.b64 	%rd13702, %rd13636;
	and.b64  	%rd13703, %rd13637, %rd13702;
	xor.b64  	%rd13704, %rd13703, %rd13635;
	not.b64 	%rd13705, %rd13637;
	and.b64  	%rd13706, %rd13638, %rd13705;
	xor.b64  	%rd13707, %rd13706, %rd13636;
	not.b64 	%rd13708, %rd13638;
	and.b64  	%rd13709, %rd13634, %rd13708;
	xor.b64  	%rd13710, %rd13709, %rd13637;
	not.b64 	%rd13711, %rd13634;
	and.b64  	%rd13712, %rd13635, %rd13711;
	xor.b64  	%rd13713, %rd13712, %rd13638;
	xor.b64  	%rd13714, %rd13641, %rd26;
	xor.b64  	%rd13715, %rd13656, %rd13714;
	xor.b64  	%rd13716, %rd13715, %rd13671;
	xor.b64  	%rd13717, %rd13716, %rd13686;
	xor.b64  	%rd13718, %rd13717, %rd13701;
	xor.b64  	%rd13719, %rd13659, %rd13644;
	xor.b64  	%rd13720, %rd13719, %rd13674;
	xor.b64  	%rd13721, %rd13720, %rd13689;
	xor.b64  	%rd13722, %rd13721, %rd13704;
	xor.b64  	%rd13723, %rd13662, %rd13647;
	xor.b64  	%rd13724, %rd13723, %rd13677;
	xor.b64  	%rd13725, %rd13724, %rd13692;
	xor.b64  	%rd13726, %rd13725, %rd13707;
	xor.b64  	%rd13727, %rd13665, %rd13650;
	xor.b64  	%rd13728, %rd13727, %rd13680;
	xor.b64  	%rd13729, %rd13728, %rd13695;
	xor.b64  	%rd13730, %rd13729, %rd13710;
	xor.b64  	%rd13731, %rd13668, %rd13653;
	xor.b64  	%rd13732, %rd13731, %rd13683;
	xor.b64  	%rd13733, %rd13732, %rd13698;
	xor.b64  	%rd13734, %rd13733, %rd13713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9711}, %rd13722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd13722;
	}
	shf.l.wrap.b32 	%r9713, %r9712, %r9711, 1;
	shf.l.wrap.b32 	%r9714, %r9711, %r9712, 1;
	mov.b64 	%rd13735, {%r9714, %r9713};
	xor.b64  	%rd13736, %rd13734, %rd13735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9715}, %rd13726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9716,%dummy}, %rd13726;
	}
	shf.l.wrap.b32 	%r9717, %r9716, %r9715, 1;
	shf.l.wrap.b32 	%r9718, %r9715, %r9716, 1;
	mov.b64 	%rd13737, {%r9718, %r9717};
	xor.b64  	%rd13738, %rd13737, %rd13718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9719}, %rd13730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd13730;
	}
	shf.l.wrap.b32 	%r9721, %r9720, %r9719, 1;
	shf.l.wrap.b32 	%r9722, %r9719, %r9720, 1;
	mov.b64 	%rd13739, {%r9722, %r9721};
	xor.b64  	%rd13740, %rd13739, %rd13722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9723}, %rd13734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9724,%dummy}, %rd13734;
	}
	shf.l.wrap.b32 	%r9725, %r9724, %r9723, 1;
	shf.l.wrap.b32 	%r9726, %r9723, %r9724, 1;
	mov.b64 	%rd13741, {%r9726, %r9725};
	xor.b64  	%rd13742, %rd13741, %rd13726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9727}, %rd13718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9728,%dummy}, %rd13718;
	}
	shf.l.wrap.b32 	%r9729, %r9728, %r9727, 1;
	shf.l.wrap.b32 	%r9730, %r9727, %r9728, 1;
	mov.b64 	%rd13743, {%r9730, %r9729};
	xor.b64  	%rd13744, %rd13730, %rd13743;
	xor.b64  	%rd13745, %rd13736, %rd13714;
	xor.b64  	%rd13746, %rd13738, %rd13644;
	xor.b64  	%rd13747, %rd13740, %rd13647;
	xor.b64  	%rd13748, %rd13742, %rd13650;
	xor.b64  	%rd13749, %rd13744, %rd13653;
	xor.b64  	%rd13750, %rd13736, %rd13656;
	xor.b64  	%rd13751, %rd13738, %rd13659;
	xor.b64  	%rd13752, %rd13740, %rd13662;
	xor.b64  	%rd13753, %rd13742, %rd13665;
	xor.b64  	%rd13754, %rd13744, %rd13668;
	xor.b64  	%rd13755, %rd13736, %rd13671;
	xor.b64  	%rd13756, %rd13738, %rd13674;
	xor.b64  	%rd13757, %rd13740, %rd13677;
	xor.b64  	%rd13758, %rd13742, %rd13680;
	xor.b64  	%rd13759, %rd13744, %rd13683;
	xor.b64  	%rd13760, %rd13736, %rd13686;
	xor.b64  	%rd13761, %rd13738, %rd13689;
	xor.b64  	%rd13762, %rd13740, %rd13692;
	xor.b64  	%rd13763, %rd13742, %rd13695;
	xor.b64  	%rd13764, %rd13744, %rd13698;
	xor.b64  	%rd13765, %rd13736, %rd13701;
	xor.b64  	%rd13766, %rd13738, %rd13704;
	xor.b64  	%rd13767, %rd13740, %rd13707;
	xor.b64  	%rd13768, %rd13742, %rd13710;
	xor.b64  	%rd13769, %rd13744, %rd13713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9731,%dummy}, %rd13751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9732}, %rd13751;
	}
	shf.r.wrap.b32 	%r9733, %r9732, %r9731, 20;
	shf.r.wrap.b32 	%r9734, %r9731, %r9732, 20;
	mov.b64 	%rd13770, {%r9734, %r9733};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9735,%dummy}, %rd13757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9736}, %rd13757;
	}
	shf.r.wrap.b32 	%r9737, %r9736, %r9735, 21;
	shf.r.wrap.b32 	%r9738, %r9735, %r9736, 21;
	mov.b64 	%rd13771, {%r9738, %r9737};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9739}, %rd13763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9740,%dummy}, %rd13763;
	}
	shf.l.wrap.b32 	%r9741, %r9740, %r9739, 21;
	shf.l.wrap.b32 	%r9742, %r9739, %r9740, 21;
	mov.b64 	%rd13772, {%r9742, %r9741};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9743}, %rd13769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd13769;
	}
	shf.l.wrap.b32 	%r9745, %r9744, %r9743, 14;
	shf.l.wrap.b32 	%r9746, %r9743, %r9744, 14;
	mov.b64 	%rd13773, {%r9746, %r9745};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9747}, %rd13748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9748,%dummy}, %rd13748;
	}
	shf.l.wrap.b32 	%r9749, %r9748, %r9747, 28;
	shf.l.wrap.b32 	%r9750, %r9747, %r9748, 28;
	mov.b64 	%rd13774, {%r9750, %r9749};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9751}, %rd13754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9752,%dummy}, %rd13754;
	}
	shf.l.wrap.b32 	%r9753, %r9752, %r9751, 20;
	shf.l.wrap.b32 	%r9754, %r9751, %r9752, 20;
	mov.b64 	%rd13775, {%r9754, %r9753};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9755}, %rd13755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9756,%dummy}, %rd13755;
	}
	shf.l.wrap.b32 	%r9757, %r9756, %r9755, 3;
	shf.l.wrap.b32 	%r9758, %r9755, %r9756, 3;
	mov.b64 	%rd13776, {%r9758, %r9757};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9759,%dummy}, %rd13761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9760}, %rd13761;
	}
	shf.r.wrap.b32 	%r9761, %r9760, %r9759, 19;
	shf.r.wrap.b32 	%r9762, %r9759, %r9760, 19;
	mov.b64 	%rd13777, {%r9762, %r9761};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9763,%dummy}, %rd13767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9764}, %rd13767;
	}
	shf.r.wrap.b32 	%r9765, %r9764, %r9763, 3;
	shf.r.wrap.b32 	%r9766, %r9763, %r9764, 3;
	mov.b64 	%rd13778, {%r9766, %r9765};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9767}, %rd13746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9768,%dummy}, %rd13746;
	}
	shf.l.wrap.b32 	%r9769, %r9768, %r9767, 1;
	shf.l.wrap.b32 	%r9770, %r9767, %r9768, 1;
	mov.b64 	%rd13779, {%r9770, %r9769};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9771}, %rd13752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9772,%dummy}, %rd13752;
	}
	shf.l.wrap.b32 	%r9773, %r9772, %r9771, 6;
	shf.l.wrap.b32 	%r9774, %r9771, %r9772, 6;
	mov.b64 	%rd13780, {%r9774, %r9773};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9775}, %rd13758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9776,%dummy}, %rd13758;
	}
	shf.l.wrap.b32 	%r9777, %r9776, %r9775, 25;
	shf.l.wrap.b32 	%r9778, %r9775, %r9776, 25;
	mov.b64 	%rd13781, {%r9778, %r9777};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9779}, %rd13764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9780,%dummy}, %rd13764;
	}
	shf.l.wrap.b32 	%r9781, %r9780, %r9779, 8;
	shf.l.wrap.b32 	%r9782, %r9779, %r9780, 8;
	mov.b64 	%rd13782, {%r9782, %r9781};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9783}, %rd13765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9784,%dummy}, %rd13765;
	}
	shf.l.wrap.b32 	%r9785, %r9784, %r9783, 18;
	shf.l.wrap.b32 	%r9786, %r9783, %r9784, 18;
	mov.b64 	%rd13783, {%r9786, %r9785};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9787}, %rd13749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9788,%dummy}, %rd13749;
	}
	shf.l.wrap.b32 	%r9789, %r9788, %r9787, 27;
	shf.l.wrap.b32 	%r9790, %r9787, %r9788, 27;
	mov.b64 	%rd13784, {%r9790, %r9789};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9791,%dummy}, %rd13750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9792}, %rd13750;
	}
	shf.r.wrap.b32 	%r9793, %r9792, %r9791, 28;
	shf.r.wrap.b32 	%r9794, %r9791, %r9792, 28;
	mov.b64 	%rd13785, {%r9794, %r9793};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9795}, %rd13756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9796,%dummy}, %rd13756;
	}
	shf.l.wrap.b32 	%r9797, %r9796, %r9795, 10;
	shf.l.wrap.b32 	%r9798, %r9795, %r9796, 10;
	mov.b64 	%rd13786, {%r9798, %r9797};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9799}, %rd13762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9800,%dummy}, %rd13762;
	}
	shf.l.wrap.b32 	%r9801, %r9800, %r9799, 15;
	shf.l.wrap.b32 	%r9802, %r9799, %r9800, 15;
	mov.b64 	%rd13787, {%r9802, %r9801};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9803,%dummy}, %rd13768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9804}, %rd13768;
	}
	shf.r.wrap.b32 	%r9805, %r9804, %r9803, 8;
	shf.r.wrap.b32 	%r9806, %r9803, %r9804, 8;
	mov.b64 	%rd13788, {%r9806, %r9805};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9807,%dummy}, %rd13747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9808}, %rd13747;
	}
	shf.r.wrap.b32 	%r9809, %r9808, %r9807, 2;
	shf.r.wrap.b32 	%r9810, %r9807, %r9808, 2;
	mov.b64 	%rd13789, {%r9810, %r9809};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9811,%dummy}, %rd13753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9812}, %rd13753;
	}
	shf.r.wrap.b32 	%r9813, %r9812, %r9811, 9;
	shf.r.wrap.b32 	%r9814, %r9811, %r9812, 9;
	mov.b64 	%rd13790, {%r9814, %r9813};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9815,%dummy}, %rd13759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9816}, %rd13759;
	}
	shf.r.wrap.b32 	%r9817, %r9816, %r9815, 25;
	shf.r.wrap.b32 	%r9818, %r9815, %r9816, 25;
	mov.b64 	%rd13791, {%r9818, %r9817};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9819,%dummy}, %rd13760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9820}, %rd13760;
	}
	shf.r.wrap.b32 	%r9821, %r9820, %r9819, 23;
	shf.r.wrap.b32 	%r9822, %r9819, %r9820, 23;
	mov.b64 	%rd13792, {%r9822, %r9821};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9823}, %rd13766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9824,%dummy}, %rd13766;
	}
	shf.l.wrap.b32 	%r9825, %r9824, %r9823, 2;
	shf.l.wrap.b32 	%r9826, %r9823, %r9824, 2;
	mov.b64 	%rd13793, {%r9826, %r9825};
	not.b64 	%rd13794, %rd13770;
	and.b64  	%rd13795, %rd13771, %rd13794;
	xor.b64  	%rd13796, %rd13795, %rd13745;
	not.b64 	%rd13797, %rd13771;
	and.b64  	%rd13798, %rd13772, %rd13797;
	xor.b64  	%rd13799, %rd13798, %rd13770;
	not.b64 	%rd13800, %rd13772;
	and.b64  	%rd13801, %rd13773, %rd13800;
	xor.b64  	%rd13802, %rd13801, %rd13771;
	not.b64 	%rd13803, %rd13773;
	and.b64  	%rd13804, %rd13745, %rd13803;
	xor.b64  	%rd13805, %rd13804, %rd13772;
	not.b64 	%rd13806, %rd13745;
	and.b64  	%rd13807, %rd13770, %rd13806;
	xor.b64  	%rd13808, %rd13807, %rd13773;
	not.b64 	%rd13809, %rd13775;
	and.b64  	%rd13810, %rd13776, %rd13809;
	xor.b64  	%rd13811, %rd13810, %rd13774;
	not.b64 	%rd13812, %rd13776;
	and.b64  	%rd13813, %rd13777, %rd13812;
	xor.b64  	%rd13814, %rd13813, %rd13775;
	not.b64 	%rd13815, %rd13777;
	and.b64  	%rd13816, %rd13778, %rd13815;
	xor.b64  	%rd13817, %rd13816, %rd13776;
	not.b64 	%rd13818, %rd13778;
	and.b64  	%rd13819, %rd13774, %rd13818;
	xor.b64  	%rd13820, %rd13819, %rd13777;
	not.b64 	%rd13821, %rd13774;
	and.b64  	%rd13822, %rd13775, %rd13821;
	xor.b64  	%rd13823, %rd13822, %rd13778;
	not.b64 	%rd13824, %rd13780;
	and.b64  	%rd13825, %rd13781, %rd13824;
	xor.b64  	%rd13826, %rd13825, %rd13779;
	not.b64 	%rd13827, %rd13781;
	and.b64  	%rd13828, %rd13782, %rd13827;
	xor.b64  	%rd13829, %rd13828, %rd13780;
	not.b64 	%rd13830, %rd13782;
	and.b64  	%rd13831, %rd13783, %rd13830;
	xor.b64  	%rd13832, %rd13831, %rd13781;
	not.b64 	%rd13833, %rd13783;
	and.b64  	%rd13834, %rd13779, %rd13833;
	xor.b64  	%rd13835, %rd13834, %rd13782;
	not.b64 	%rd13836, %rd13779;
	and.b64  	%rd13837, %rd13780, %rd13836;
	xor.b64  	%rd13838, %rd13837, %rd13783;
	not.b64 	%rd13839, %rd13785;
	and.b64  	%rd13840, %rd13786, %rd13839;
	xor.b64  	%rd13841, %rd13840, %rd13784;
	not.b64 	%rd13842, %rd13786;
	and.b64  	%rd13843, %rd13787, %rd13842;
	xor.b64  	%rd13844, %rd13843, %rd13785;
	not.b64 	%rd13845, %rd13787;
	and.b64  	%rd13846, %rd13788, %rd13845;
	xor.b64  	%rd13847, %rd13846, %rd13786;
	not.b64 	%rd13848, %rd13788;
	and.b64  	%rd13849, %rd13784, %rd13848;
	xor.b64  	%rd13850, %rd13849, %rd13787;
	not.b64 	%rd13851, %rd13784;
	and.b64  	%rd13852, %rd13785, %rd13851;
	xor.b64  	%rd13853, %rd13852, %rd13788;
	not.b64 	%rd13854, %rd13790;
	and.b64  	%rd13855, %rd13791, %rd13854;
	xor.b64  	%rd13856, %rd13855, %rd13789;
	not.b64 	%rd13857, %rd13791;
	and.b64  	%rd13858, %rd13792, %rd13857;
	xor.b64  	%rd13859, %rd13858, %rd13790;
	not.b64 	%rd13860, %rd13792;
	and.b64  	%rd13861, %rd13793, %rd13860;
	xor.b64  	%rd13862, %rd13861, %rd13791;
	not.b64 	%rd13863, %rd13793;
	and.b64  	%rd13864, %rd13789, %rd13863;
	xor.b64  	%rd13865, %rd13864, %rd13792;
	not.b64 	%rd13866, %rd13789;
	and.b64  	%rd13867, %rd13790, %rd13866;
	xor.b64  	%rd13868, %rd13867, %rd13793;
	xor.b64  	%rd13869, %rd13796, %rd27;
	xor.b64  	%rd13870, %rd13811, %rd13869;
	xor.b64  	%rd13871, %rd13870, %rd13826;
	xor.b64  	%rd13872, %rd13871, %rd13841;
	xor.b64  	%rd13873, %rd13872, %rd13856;
	xor.b64  	%rd13874, %rd13814, %rd13799;
	xor.b64  	%rd13875, %rd13874, %rd13829;
	xor.b64  	%rd13876, %rd13875, %rd13844;
	xor.b64  	%rd13877, %rd13876, %rd13859;
	xor.b64  	%rd13878, %rd13817, %rd13802;
	xor.b64  	%rd13879, %rd13878, %rd13832;
	xor.b64  	%rd13880, %rd13879, %rd13847;
	xor.b64  	%rd13881, %rd13880, %rd13862;
	xor.b64  	%rd13882, %rd13820, %rd13805;
	xor.b64  	%rd13883, %rd13882, %rd13835;
	xor.b64  	%rd13884, %rd13883, %rd13850;
	xor.b64  	%rd13885, %rd13884, %rd13865;
	xor.b64  	%rd13886, %rd13823, %rd13808;
	xor.b64  	%rd13887, %rd13886, %rd13838;
	xor.b64  	%rd13888, %rd13887, %rd13853;
	xor.b64  	%rd13889, %rd13888, %rd13868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9827}, %rd13877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9828,%dummy}, %rd13877;
	}
	shf.l.wrap.b32 	%r9829, %r9828, %r9827, 1;
	shf.l.wrap.b32 	%r9830, %r9827, %r9828, 1;
	mov.b64 	%rd13890, {%r9830, %r9829};
	xor.b64  	%rd13891, %rd13889, %rd13890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9831}, %rd13881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9832,%dummy}, %rd13881;
	}
	shf.l.wrap.b32 	%r9833, %r9832, %r9831, 1;
	shf.l.wrap.b32 	%r9834, %r9831, %r9832, 1;
	mov.b64 	%rd13892, {%r9834, %r9833};
	xor.b64  	%rd13893, %rd13892, %rd13873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9835}, %rd13885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9836,%dummy}, %rd13885;
	}
	shf.l.wrap.b32 	%r9837, %r9836, %r9835, 1;
	shf.l.wrap.b32 	%r9838, %r9835, %r9836, 1;
	mov.b64 	%rd13894, {%r9838, %r9837};
	xor.b64  	%rd13895, %rd13894, %rd13877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9839}, %rd13889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9840,%dummy}, %rd13889;
	}
	shf.l.wrap.b32 	%r9841, %r9840, %r9839, 1;
	shf.l.wrap.b32 	%r9842, %r9839, %r9840, 1;
	mov.b64 	%rd13896, {%r9842, %r9841};
	xor.b64  	%rd13897, %rd13896, %rd13881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9843}, %rd13873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9844,%dummy}, %rd13873;
	}
	shf.l.wrap.b32 	%r9845, %r9844, %r9843, 1;
	shf.l.wrap.b32 	%r9846, %r9843, %r9844, 1;
	mov.b64 	%rd13898, {%r9846, %r9845};
	xor.b64  	%rd13899, %rd13885, %rd13898;
	xor.b64  	%rd13900, %rd13891, %rd13869;
	xor.b64  	%rd13901, %rd13893, %rd13799;
	xor.b64  	%rd13902, %rd13895, %rd13802;
	xor.b64  	%rd13903, %rd13897, %rd13805;
	xor.b64  	%rd13904, %rd13899, %rd13808;
	xor.b64  	%rd13905, %rd13891, %rd13811;
	xor.b64  	%rd13906, %rd13893, %rd13814;
	xor.b64  	%rd13907, %rd13895, %rd13817;
	xor.b64  	%rd13908, %rd13897, %rd13820;
	xor.b64  	%rd13909, %rd13899, %rd13823;
	xor.b64  	%rd13910, %rd13891, %rd13826;
	xor.b64  	%rd13911, %rd13893, %rd13829;
	xor.b64  	%rd13912, %rd13895, %rd13832;
	xor.b64  	%rd13913, %rd13897, %rd13835;
	xor.b64  	%rd13914, %rd13899, %rd13838;
	xor.b64  	%rd13915, %rd13891, %rd13841;
	xor.b64  	%rd13916, %rd13893, %rd13844;
	xor.b64  	%rd13917, %rd13895, %rd13847;
	xor.b64  	%rd13918, %rd13897, %rd13850;
	xor.b64  	%rd13919, %rd13899, %rd13853;
	xor.b64  	%rd13920, %rd13891, %rd13856;
	xor.b64  	%rd13921, %rd13893, %rd13859;
	xor.b64  	%rd13922, %rd13895, %rd13862;
	xor.b64  	%rd13923, %rd13897, %rd13865;
	xor.b64  	%rd13924, %rd13899, %rd13868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9847,%dummy}, %rd13906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9848}, %rd13906;
	}
	shf.r.wrap.b32 	%r9849, %r9848, %r9847, 20;
	shf.r.wrap.b32 	%r9850, %r9847, %r9848, 20;
	mov.b64 	%rd13925, {%r9850, %r9849};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9851,%dummy}, %rd13912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9852}, %rd13912;
	}
	shf.r.wrap.b32 	%r9853, %r9852, %r9851, 21;
	shf.r.wrap.b32 	%r9854, %r9851, %r9852, 21;
	mov.b64 	%rd13926, {%r9854, %r9853};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9855}, %rd13918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9856,%dummy}, %rd13918;
	}
	shf.l.wrap.b32 	%r9857, %r9856, %r9855, 21;
	shf.l.wrap.b32 	%r9858, %r9855, %r9856, 21;
	mov.b64 	%rd13927, {%r9858, %r9857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9859}, %rd13924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9860,%dummy}, %rd13924;
	}
	shf.l.wrap.b32 	%r9861, %r9860, %r9859, 14;
	shf.l.wrap.b32 	%r9862, %r9859, %r9860, 14;
	mov.b64 	%rd13928, {%r9862, %r9861};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9863}, %rd13903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd13903;
	}
	shf.l.wrap.b32 	%r9865, %r9864, %r9863, 28;
	shf.l.wrap.b32 	%r9866, %r9863, %r9864, 28;
	mov.b64 	%rd13929, {%r9866, %r9865};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9867}, %rd13909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9868,%dummy}, %rd13909;
	}
	shf.l.wrap.b32 	%r9869, %r9868, %r9867, 20;
	shf.l.wrap.b32 	%r9870, %r9867, %r9868, 20;
	mov.b64 	%rd13930, {%r9870, %r9869};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9871}, %rd13910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9872,%dummy}, %rd13910;
	}
	shf.l.wrap.b32 	%r9873, %r9872, %r9871, 3;
	shf.l.wrap.b32 	%r9874, %r9871, %r9872, 3;
	mov.b64 	%rd13931, {%r9874, %r9873};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9875,%dummy}, %rd13916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9876}, %rd13916;
	}
	shf.r.wrap.b32 	%r9877, %r9876, %r9875, 19;
	shf.r.wrap.b32 	%r9878, %r9875, %r9876, 19;
	mov.b64 	%rd13932, {%r9878, %r9877};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9879,%dummy}, %rd13922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9880}, %rd13922;
	}
	shf.r.wrap.b32 	%r9881, %r9880, %r9879, 3;
	shf.r.wrap.b32 	%r9882, %r9879, %r9880, 3;
	mov.b64 	%rd13933, {%r9882, %r9881};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9883}, %rd13901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9884,%dummy}, %rd13901;
	}
	shf.l.wrap.b32 	%r9885, %r9884, %r9883, 1;
	shf.l.wrap.b32 	%r9886, %r9883, %r9884, 1;
	mov.b64 	%rd13934, {%r9886, %r9885};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9887}, %rd13907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9888,%dummy}, %rd13907;
	}
	shf.l.wrap.b32 	%r9889, %r9888, %r9887, 6;
	shf.l.wrap.b32 	%r9890, %r9887, %r9888, 6;
	mov.b64 	%rd13935, {%r9890, %r9889};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9891}, %rd13913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9892,%dummy}, %rd13913;
	}
	shf.l.wrap.b32 	%r9893, %r9892, %r9891, 25;
	shf.l.wrap.b32 	%r9894, %r9891, %r9892, 25;
	mov.b64 	%rd13936, {%r9894, %r9893};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd13919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9896,%dummy}, %rd13919;
	}
	shf.l.wrap.b32 	%r9897, %r9896, %r9895, 8;
	shf.l.wrap.b32 	%r9898, %r9895, %r9896, 8;
	mov.b64 	%rd13937, {%r9898, %r9897};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9899}, %rd13920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9900,%dummy}, %rd13920;
	}
	shf.l.wrap.b32 	%r9901, %r9900, %r9899, 18;
	shf.l.wrap.b32 	%r9902, %r9899, %r9900, 18;
	mov.b64 	%rd13938, {%r9902, %r9901};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9903}, %rd13904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9904,%dummy}, %rd13904;
	}
	shf.l.wrap.b32 	%r9905, %r9904, %r9903, 27;
	shf.l.wrap.b32 	%r9906, %r9903, %r9904, 27;
	mov.b64 	%rd13939, {%r9906, %r9905};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9907,%dummy}, %rd13905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9908}, %rd13905;
	}
	shf.r.wrap.b32 	%r9909, %r9908, %r9907, 28;
	shf.r.wrap.b32 	%r9910, %r9907, %r9908, 28;
	mov.b64 	%rd13940, {%r9910, %r9909};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9911}, %rd13911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9912,%dummy}, %rd13911;
	}
	shf.l.wrap.b32 	%r9913, %r9912, %r9911, 10;
	shf.l.wrap.b32 	%r9914, %r9911, %r9912, 10;
	mov.b64 	%rd13941, {%r9914, %r9913};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9915}, %rd13917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9916,%dummy}, %rd13917;
	}
	shf.l.wrap.b32 	%r9917, %r9916, %r9915, 15;
	shf.l.wrap.b32 	%r9918, %r9915, %r9916, 15;
	mov.b64 	%rd13942, {%r9918, %r9917};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9919,%dummy}, %rd13923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9920}, %rd13923;
	}
	shf.r.wrap.b32 	%r9921, %r9920, %r9919, 8;
	shf.r.wrap.b32 	%r9922, %r9919, %r9920, 8;
	mov.b64 	%rd13943, {%r9922, %r9921};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9923,%dummy}, %rd13902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9924}, %rd13902;
	}
	shf.r.wrap.b32 	%r9925, %r9924, %r9923, 2;
	shf.r.wrap.b32 	%r9926, %r9923, %r9924, 2;
	mov.b64 	%rd13944, {%r9926, %r9925};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9927,%dummy}, %rd13908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9928}, %rd13908;
	}
	shf.r.wrap.b32 	%r9929, %r9928, %r9927, 9;
	shf.r.wrap.b32 	%r9930, %r9927, %r9928, 9;
	mov.b64 	%rd13945, {%r9930, %r9929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9931,%dummy}, %rd13914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9932}, %rd13914;
	}
	shf.r.wrap.b32 	%r9933, %r9932, %r9931, 25;
	shf.r.wrap.b32 	%r9934, %r9931, %r9932, 25;
	mov.b64 	%rd13946, {%r9934, %r9933};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9935,%dummy}, %rd13915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9936}, %rd13915;
	}
	shf.r.wrap.b32 	%r9937, %r9936, %r9935, 23;
	shf.r.wrap.b32 	%r9938, %r9935, %r9936, 23;
	mov.b64 	%rd13947, {%r9938, %r9937};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9939}, %rd13921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9940,%dummy}, %rd13921;
	}
	shf.l.wrap.b32 	%r9941, %r9940, %r9939, 2;
	shf.l.wrap.b32 	%r9942, %r9939, %r9940, 2;
	mov.b64 	%rd13948, {%r9942, %r9941};
	not.b64 	%rd13949, %rd13925;
	and.b64  	%rd13950, %rd13926, %rd13949;
	xor.b64  	%rd13951, %rd13950, %rd13900;
	not.b64 	%rd13952, %rd13926;
	and.b64  	%rd13953, %rd13927, %rd13952;
	xor.b64  	%rd13954, %rd13953, %rd13925;
	not.b64 	%rd13955, %rd13927;
	and.b64  	%rd13956, %rd13928, %rd13955;
	xor.b64  	%rd13957, %rd13956, %rd13926;
	not.b64 	%rd13958, %rd13928;
	and.b64  	%rd13959, %rd13900, %rd13958;
	xor.b64  	%rd13960, %rd13959, %rd13927;
	not.b64 	%rd13961, %rd13900;
	and.b64  	%rd13962, %rd13925, %rd13961;
	xor.b64  	%rd13963, %rd13962, %rd13928;
	not.b64 	%rd13964, %rd13930;
	and.b64  	%rd13965, %rd13931, %rd13964;
	xor.b64  	%rd13966, %rd13965, %rd13929;
	not.b64 	%rd13967, %rd13931;
	and.b64  	%rd13968, %rd13932, %rd13967;
	xor.b64  	%rd13969, %rd13968, %rd13930;
	not.b64 	%rd13970, %rd13932;
	and.b64  	%rd13971, %rd13933, %rd13970;
	xor.b64  	%rd13972, %rd13971, %rd13931;
	not.b64 	%rd13973, %rd13933;
	and.b64  	%rd13974, %rd13929, %rd13973;
	xor.b64  	%rd13975, %rd13974, %rd13932;
	not.b64 	%rd13976, %rd13929;
	and.b64  	%rd13977, %rd13930, %rd13976;
	xor.b64  	%rd13978, %rd13977, %rd13933;
	not.b64 	%rd13979, %rd13935;
	and.b64  	%rd13980, %rd13936, %rd13979;
	xor.b64  	%rd13981, %rd13980, %rd13934;
	not.b64 	%rd13982, %rd13936;
	and.b64  	%rd13983, %rd13937, %rd13982;
	xor.b64  	%rd13984, %rd13983, %rd13935;
	not.b64 	%rd13985, %rd13937;
	and.b64  	%rd13986, %rd13938, %rd13985;
	xor.b64  	%rd13987, %rd13986, %rd13936;
	not.b64 	%rd13988, %rd13938;
	and.b64  	%rd13989, %rd13934, %rd13988;
	xor.b64  	%rd13990, %rd13989, %rd13937;
	not.b64 	%rd13991, %rd13934;
	and.b64  	%rd13992, %rd13935, %rd13991;
	xor.b64  	%rd13993, %rd13992, %rd13938;
	not.b64 	%rd13994, %rd13940;
	and.b64  	%rd13995, %rd13941, %rd13994;
	xor.b64  	%rd13996, %rd13995, %rd13939;
	not.b64 	%rd13997, %rd13941;
	and.b64  	%rd13998, %rd13942, %rd13997;
	xor.b64  	%rd13999, %rd13998, %rd13940;
	not.b64 	%rd14000, %rd13942;
	and.b64  	%rd14001, %rd13943, %rd14000;
	xor.b64  	%rd14002, %rd14001, %rd13941;
	not.b64 	%rd14003, %rd13943;
	and.b64  	%rd14004, %rd13939, %rd14003;
	xor.b64  	%rd14005, %rd14004, %rd13942;
	not.b64 	%rd14006, %rd13939;
	and.b64  	%rd14007, %rd13940, %rd14006;
	xor.b64  	%rd14008, %rd14007, %rd13943;
	not.b64 	%rd14009, %rd13945;
	and.b64  	%rd14010, %rd13946, %rd14009;
	xor.b64  	%rd14011, %rd14010, %rd13944;
	not.b64 	%rd14012, %rd13946;
	and.b64  	%rd14013, %rd13947, %rd14012;
	xor.b64  	%rd14014, %rd14013, %rd13945;
	not.b64 	%rd14015, %rd13947;
	and.b64  	%rd14016, %rd13948, %rd14015;
	xor.b64  	%rd14017, %rd14016, %rd13946;
	not.b64 	%rd14018, %rd13948;
	and.b64  	%rd14019, %rd13944, %rd14018;
	xor.b64  	%rd14020, %rd14019, %rd13947;
	not.b64 	%rd14021, %rd13944;
	and.b64  	%rd14022, %rd13945, %rd14021;
	xor.b64  	%rd14023, %rd14022, %rd13948;
	xor.b64  	%rd14024, %rd13951, %rd28;
	xor.b64  	%rd14025, %rd13966, %rd14024;
	xor.b64  	%rd14026, %rd14025, %rd13981;
	xor.b64  	%rd14027, %rd14026, %rd13996;
	xor.b64  	%rd14028, %rd14027, %rd14011;
	xor.b64  	%rd14029, %rd13969, %rd13954;
	xor.b64  	%rd14030, %rd14029, %rd13984;
	xor.b64  	%rd14031, %rd14030, %rd13999;
	xor.b64  	%rd14032, %rd14031, %rd14014;
	xor.b64  	%rd14033, %rd13972, %rd13957;
	xor.b64  	%rd14034, %rd14033, %rd13987;
	xor.b64  	%rd14035, %rd14034, %rd14002;
	xor.b64  	%rd14036, %rd14035, %rd14017;
	xor.b64  	%rd14037, %rd13975, %rd13960;
	xor.b64  	%rd14038, %rd14037, %rd13990;
	xor.b64  	%rd14039, %rd14038, %rd14005;
	xor.b64  	%rd14040, %rd14039, %rd14020;
	xor.b64  	%rd14041, %rd13978, %rd13963;
	xor.b64  	%rd14042, %rd14041, %rd13993;
	xor.b64  	%rd14043, %rd14042, %rd14008;
	xor.b64  	%rd14044, %rd14043, %rd14023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd14032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9944,%dummy}, %rd14032;
	}
	shf.l.wrap.b32 	%r9945, %r9944, %r9943, 1;
	shf.l.wrap.b32 	%r9946, %r9943, %r9944, 1;
	mov.b64 	%rd14045, {%r9946, %r9945};
	xor.b64  	%rd14046, %rd14044, %rd14045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9947}, %rd14036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9948,%dummy}, %rd14036;
	}
	shf.l.wrap.b32 	%r9949, %r9948, %r9947, 1;
	shf.l.wrap.b32 	%r9950, %r9947, %r9948, 1;
	mov.b64 	%rd14047, {%r9950, %r9949};
	xor.b64  	%rd14048, %rd14047, %rd14028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9951}, %rd14040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9952,%dummy}, %rd14040;
	}
	shf.l.wrap.b32 	%r9953, %r9952, %r9951, 1;
	shf.l.wrap.b32 	%r9954, %r9951, %r9952, 1;
	mov.b64 	%rd14049, {%r9954, %r9953};
	xor.b64  	%rd14050, %rd14049, %rd14032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9955}, %rd14044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9956,%dummy}, %rd14044;
	}
	shf.l.wrap.b32 	%r9957, %r9956, %r9955, 1;
	shf.l.wrap.b32 	%r9958, %r9955, %r9956, 1;
	mov.b64 	%rd14051, {%r9958, %r9957};
	xor.b64  	%rd14052, %rd14051, %rd14036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9959}, %rd14028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9960,%dummy}, %rd14028;
	}
	shf.l.wrap.b32 	%r9961, %r9960, %r9959, 1;
	shf.l.wrap.b32 	%r9962, %r9959, %r9960, 1;
	mov.b64 	%rd14053, {%r9962, %r9961};
	xor.b64  	%rd14054, %rd14040, %rd14053;
	xor.b64  	%rd14055, %rd14046, %rd14024;
	xor.b64  	%rd14056, %rd14048, %rd13954;
	xor.b64  	%rd14057, %rd14050, %rd13957;
	xor.b64  	%rd14058, %rd14052, %rd13960;
	xor.b64  	%rd14059, %rd14054, %rd13963;
	xor.b64  	%rd14060, %rd14046, %rd13966;
	xor.b64  	%rd14061, %rd14048, %rd13969;
	xor.b64  	%rd14062, %rd14050, %rd13972;
	xor.b64  	%rd14063, %rd14052, %rd13975;
	xor.b64  	%rd14064, %rd14054, %rd13978;
	xor.b64  	%rd14065, %rd14046, %rd13981;
	xor.b64  	%rd14066, %rd14048, %rd13984;
	xor.b64  	%rd14067, %rd14050, %rd13987;
	xor.b64  	%rd14068, %rd14052, %rd13990;
	xor.b64  	%rd14069, %rd14054, %rd13993;
	xor.b64  	%rd14070, %rd14046, %rd13996;
	xor.b64  	%rd14071, %rd14048, %rd13999;
	xor.b64  	%rd14072, %rd14050, %rd14002;
	xor.b64  	%rd14073, %rd14052, %rd14005;
	xor.b64  	%rd14074, %rd14054, %rd14008;
	xor.b64  	%rd14075, %rd14046, %rd14011;
	xor.b64  	%rd14076, %rd14048, %rd14014;
	xor.b64  	%rd14077, %rd14050, %rd14017;
	xor.b64  	%rd14078, %rd14052, %rd14020;
	xor.b64  	%rd14079, %rd14054, %rd14023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9963,%dummy}, %rd14061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9964}, %rd14061;
	}
	shf.r.wrap.b32 	%r9965, %r9964, %r9963, 20;
	shf.r.wrap.b32 	%r9966, %r9963, %r9964, 20;
	mov.b64 	%rd14080, {%r9966, %r9965};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9967,%dummy}, %rd14067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9968}, %rd14067;
	}
	shf.r.wrap.b32 	%r9969, %r9968, %r9967, 21;
	shf.r.wrap.b32 	%r9970, %r9967, %r9968, 21;
	mov.b64 	%rd14081, {%r9970, %r9969};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9971}, %rd14073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9972,%dummy}, %rd14073;
	}
	shf.l.wrap.b32 	%r9973, %r9972, %r9971, 21;
	shf.l.wrap.b32 	%r9974, %r9971, %r9972, 21;
	mov.b64 	%rd14082, {%r9974, %r9973};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9975}, %rd14079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9976,%dummy}, %rd14079;
	}
	shf.l.wrap.b32 	%r9977, %r9976, %r9975, 14;
	shf.l.wrap.b32 	%r9978, %r9975, %r9976, 14;
	mov.b64 	%rd14083, {%r9978, %r9977};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9979}, %rd14058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9980,%dummy}, %rd14058;
	}
	shf.l.wrap.b32 	%r9981, %r9980, %r9979, 28;
	shf.l.wrap.b32 	%r9982, %r9979, %r9980, 28;
	mov.b64 	%rd14084, {%r9982, %r9981};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9983}, %rd14064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9984,%dummy}, %rd14064;
	}
	shf.l.wrap.b32 	%r9985, %r9984, %r9983, 20;
	shf.l.wrap.b32 	%r9986, %r9983, %r9984, 20;
	mov.b64 	%rd14085, {%r9986, %r9985};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9987}, %rd14065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9988,%dummy}, %rd14065;
	}
	shf.l.wrap.b32 	%r9989, %r9988, %r9987, 3;
	shf.l.wrap.b32 	%r9990, %r9987, %r9988, 3;
	mov.b64 	%rd14086, {%r9990, %r9989};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd14071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd14071;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 19;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 19;
	mov.b64 	%rd14087, {%r9994, %r9993};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9995,%dummy}, %rd14077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9996}, %rd14077;
	}
	shf.r.wrap.b32 	%r9997, %r9996, %r9995, 3;
	shf.r.wrap.b32 	%r9998, %r9995, %r9996, 3;
	mov.b64 	%rd14088, {%r9998, %r9997};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9999}, %rd14056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10000,%dummy}, %rd14056;
	}
	shf.l.wrap.b32 	%r10001, %r10000, %r9999, 1;
	shf.l.wrap.b32 	%r10002, %r9999, %r10000, 1;
	mov.b64 	%rd14089, {%r10002, %r10001};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10003}, %rd14062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10004,%dummy}, %rd14062;
	}
	shf.l.wrap.b32 	%r10005, %r10004, %r10003, 6;
	shf.l.wrap.b32 	%r10006, %r10003, %r10004, 6;
	mov.b64 	%rd14090, {%r10006, %r10005};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10007}, %rd14068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10008,%dummy}, %rd14068;
	}
	shf.l.wrap.b32 	%r10009, %r10008, %r10007, 25;
	shf.l.wrap.b32 	%r10010, %r10007, %r10008, 25;
	mov.b64 	%rd14091, {%r10010, %r10009};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10011}, %rd14074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10012,%dummy}, %rd14074;
	}
	shf.l.wrap.b32 	%r10013, %r10012, %r10011, 8;
	shf.l.wrap.b32 	%r10014, %r10011, %r10012, 8;
	mov.b64 	%rd14092, {%r10014, %r10013};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10015}, %rd14075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10016,%dummy}, %rd14075;
	}
	shf.l.wrap.b32 	%r10017, %r10016, %r10015, 18;
	shf.l.wrap.b32 	%r10018, %r10015, %r10016, 18;
	mov.b64 	%rd14093, {%r10018, %r10017};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10019}, %rd14059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10020,%dummy}, %rd14059;
	}
	shf.l.wrap.b32 	%r10021, %r10020, %r10019, 27;
	shf.l.wrap.b32 	%r10022, %r10019, %r10020, 27;
	mov.b64 	%rd14094, {%r10022, %r10021};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10023,%dummy}, %rd14060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10024}, %rd14060;
	}
	shf.r.wrap.b32 	%r10025, %r10024, %r10023, 28;
	shf.r.wrap.b32 	%r10026, %r10023, %r10024, 28;
	mov.b64 	%rd14095, {%r10026, %r10025};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10027}, %rd14066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10028,%dummy}, %rd14066;
	}
	shf.l.wrap.b32 	%r10029, %r10028, %r10027, 10;
	shf.l.wrap.b32 	%r10030, %r10027, %r10028, 10;
	mov.b64 	%rd14096, {%r10030, %r10029};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10031}, %rd14072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10032,%dummy}, %rd14072;
	}
	shf.l.wrap.b32 	%r10033, %r10032, %r10031, 15;
	shf.l.wrap.b32 	%r10034, %r10031, %r10032, 15;
	mov.b64 	%rd14097, {%r10034, %r10033};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10035,%dummy}, %rd14078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10036}, %rd14078;
	}
	shf.r.wrap.b32 	%r10037, %r10036, %r10035, 8;
	shf.r.wrap.b32 	%r10038, %r10035, %r10036, 8;
	mov.b64 	%rd14098, {%r10038, %r10037};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10039,%dummy}, %rd14057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10040}, %rd14057;
	}
	shf.r.wrap.b32 	%r10041, %r10040, %r10039, 2;
	shf.r.wrap.b32 	%r10042, %r10039, %r10040, 2;
	mov.b64 	%rd14099, {%r10042, %r10041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10043,%dummy}, %rd14063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10044}, %rd14063;
	}
	shf.r.wrap.b32 	%r10045, %r10044, %r10043, 9;
	shf.r.wrap.b32 	%r10046, %r10043, %r10044, 9;
	mov.b64 	%rd14100, {%r10046, %r10045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10047,%dummy}, %rd14069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10048}, %rd14069;
	}
	shf.r.wrap.b32 	%r10049, %r10048, %r10047, 25;
	shf.r.wrap.b32 	%r10050, %r10047, %r10048, 25;
	mov.b64 	%rd14101, {%r10050, %r10049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10051,%dummy}, %rd14070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10052}, %rd14070;
	}
	shf.r.wrap.b32 	%r10053, %r10052, %r10051, 23;
	shf.r.wrap.b32 	%r10054, %r10051, %r10052, 23;
	mov.b64 	%rd14102, {%r10054, %r10053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10055}, %rd14076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10056,%dummy}, %rd14076;
	}
	shf.l.wrap.b32 	%r10057, %r10056, %r10055, 2;
	shf.l.wrap.b32 	%r10058, %r10055, %r10056, 2;
	mov.b64 	%rd14103, {%r10058, %r10057};
	not.b64 	%rd14104, %rd14080;
	and.b64  	%rd14105, %rd14081, %rd14104;
	xor.b64  	%rd14106, %rd14105, %rd14055;
	not.b64 	%rd14107, %rd14081;
	and.b64  	%rd14108, %rd14082, %rd14107;
	xor.b64  	%rd14109, %rd14108, %rd14080;
	not.b64 	%rd14110, %rd14082;
	and.b64  	%rd14111, %rd14083, %rd14110;
	xor.b64  	%rd14112, %rd14111, %rd14081;
	not.b64 	%rd14113, %rd14083;
	and.b64  	%rd14114, %rd14055, %rd14113;
	xor.b64  	%rd14115, %rd14114, %rd14082;
	not.b64 	%rd14116, %rd14055;
	and.b64  	%rd14117, %rd14080, %rd14116;
	xor.b64  	%rd14118, %rd14117, %rd14083;
	not.b64 	%rd14119, %rd14085;
	and.b64  	%rd14120, %rd14086, %rd14119;
	xor.b64  	%rd14121, %rd14120, %rd14084;
	not.b64 	%rd14122, %rd14086;
	and.b64  	%rd14123, %rd14087, %rd14122;
	xor.b64  	%rd14124, %rd14123, %rd14085;
	not.b64 	%rd14125, %rd14087;
	and.b64  	%rd14126, %rd14088, %rd14125;
	xor.b64  	%rd14127, %rd14126, %rd14086;
	not.b64 	%rd14128, %rd14088;
	and.b64  	%rd14129, %rd14084, %rd14128;
	xor.b64  	%rd14130, %rd14129, %rd14087;
	not.b64 	%rd14131, %rd14084;
	and.b64  	%rd14132, %rd14085, %rd14131;
	xor.b64  	%rd14133, %rd14132, %rd14088;
	not.b64 	%rd14134, %rd14090;
	and.b64  	%rd14135, %rd14091, %rd14134;
	xor.b64  	%rd14136, %rd14135, %rd14089;
	not.b64 	%rd14137, %rd14091;
	and.b64  	%rd14138, %rd14092, %rd14137;
	xor.b64  	%rd14139, %rd14138, %rd14090;
	not.b64 	%rd14140, %rd14092;
	and.b64  	%rd14141, %rd14093, %rd14140;
	xor.b64  	%rd14142, %rd14141, %rd14091;
	not.b64 	%rd14143, %rd14093;
	and.b64  	%rd14144, %rd14089, %rd14143;
	xor.b64  	%rd14145, %rd14144, %rd14092;
	not.b64 	%rd14146, %rd14089;
	and.b64  	%rd14147, %rd14090, %rd14146;
	xor.b64  	%rd14148, %rd14147, %rd14093;
	not.b64 	%rd14149, %rd14095;
	and.b64  	%rd14150, %rd14096, %rd14149;
	xor.b64  	%rd14151, %rd14150, %rd14094;
	not.b64 	%rd14152, %rd14096;
	and.b64  	%rd14153, %rd14097, %rd14152;
	xor.b64  	%rd14154, %rd14153, %rd14095;
	not.b64 	%rd14155, %rd14097;
	and.b64  	%rd14156, %rd14098, %rd14155;
	xor.b64  	%rd14157, %rd14156, %rd14096;
	not.b64 	%rd14158, %rd14098;
	and.b64  	%rd14159, %rd14094, %rd14158;
	xor.b64  	%rd14160, %rd14159, %rd14097;
	not.b64 	%rd14161, %rd14094;
	and.b64  	%rd14162, %rd14095, %rd14161;
	xor.b64  	%rd14163, %rd14162, %rd14098;
	not.b64 	%rd14164, %rd14100;
	and.b64  	%rd14165, %rd14101, %rd14164;
	xor.b64  	%rd14166, %rd14165, %rd14099;
	not.b64 	%rd14167, %rd14101;
	and.b64  	%rd14168, %rd14102, %rd14167;
	xor.b64  	%rd14169, %rd14168, %rd14100;
	not.b64 	%rd14170, %rd14102;
	and.b64  	%rd14171, %rd14103, %rd14170;
	xor.b64  	%rd14172, %rd14171, %rd14101;
	not.b64 	%rd14173, %rd14103;
	and.b64  	%rd14174, %rd14099, %rd14173;
	xor.b64  	%rd14175, %rd14174, %rd14102;
	not.b64 	%rd14176, %rd14099;
	and.b64  	%rd14177, %rd14100, %rd14176;
	xor.b64  	%rd14178, %rd14177, %rd14103;
	xor.b64  	%rd14179, %rd14106, %rd29;
	xor.b64  	%rd14180, %rd14121, %rd14179;
	xor.b64  	%rd14181, %rd14180, %rd14136;
	xor.b64  	%rd14182, %rd14181, %rd14151;
	xor.b64  	%rd14183, %rd14182, %rd14166;
	xor.b64  	%rd14184, %rd14124, %rd14109;
	xor.b64  	%rd14185, %rd14184, %rd14139;
	xor.b64  	%rd14186, %rd14185, %rd14154;
	xor.b64  	%rd14187, %rd14186, %rd14169;
	xor.b64  	%rd14188, %rd14127, %rd14112;
	xor.b64  	%rd14189, %rd14188, %rd14142;
	xor.b64  	%rd14190, %rd14189, %rd14157;
	xor.b64  	%rd14191, %rd14190, %rd14172;
	xor.b64  	%rd14192, %rd14130, %rd14115;
	xor.b64  	%rd14193, %rd14192, %rd14145;
	xor.b64  	%rd14194, %rd14193, %rd14160;
	xor.b64  	%rd14195, %rd14194, %rd14175;
	xor.b64  	%rd14196, %rd14133, %rd14118;
	xor.b64  	%rd14197, %rd14196, %rd14148;
	xor.b64  	%rd14198, %rd14197, %rd14163;
	xor.b64  	%rd14199, %rd14198, %rd14178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10059}, %rd14187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10060,%dummy}, %rd14187;
	}
	shf.l.wrap.b32 	%r10061, %r10060, %r10059, 1;
	shf.l.wrap.b32 	%r10062, %r10059, %r10060, 1;
	mov.b64 	%rd14200, {%r10062, %r10061};
	xor.b64  	%rd14201, %rd14199, %rd14200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10063}, %rd14191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10064,%dummy}, %rd14191;
	}
	shf.l.wrap.b32 	%r10065, %r10064, %r10063, 1;
	shf.l.wrap.b32 	%r10066, %r10063, %r10064, 1;
	mov.b64 	%rd14202, {%r10066, %r10065};
	xor.b64  	%rd14203, %rd14202, %rd14183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10067}, %rd14195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10068,%dummy}, %rd14195;
	}
	shf.l.wrap.b32 	%r10069, %r10068, %r10067, 1;
	shf.l.wrap.b32 	%r10070, %r10067, %r10068, 1;
	mov.b64 	%rd14204, {%r10070, %r10069};
	xor.b64  	%rd14205, %rd14204, %rd14187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10071}, %rd14199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10072,%dummy}, %rd14199;
	}
	shf.l.wrap.b32 	%r10073, %r10072, %r10071, 1;
	shf.l.wrap.b32 	%r10074, %r10071, %r10072, 1;
	mov.b64 	%rd14206, {%r10074, %r10073};
	xor.b64  	%rd14207, %rd14206, %rd14191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10075}, %rd14183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10076,%dummy}, %rd14183;
	}
	shf.l.wrap.b32 	%r10077, %r10076, %r10075, 1;
	shf.l.wrap.b32 	%r10078, %r10075, %r10076, 1;
	mov.b64 	%rd14208, {%r10078, %r10077};
	xor.b64  	%rd14209, %rd14195, %rd14208;
	xor.b64  	%rd14210, %rd14201, %rd14179;
	xor.b64  	%rd14211, %rd14203, %rd14109;
	xor.b64  	%rd14212, %rd14205, %rd14112;
	xor.b64  	%rd14213, %rd14207, %rd14115;
	xor.b64  	%rd14214, %rd14209, %rd14118;
	xor.b64  	%rd14215, %rd14201, %rd14121;
	xor.b64  	%rd14216, %rd14203, %rd14124;
	xor.b64  	%rd14217, %rd14205, %rd14127;
	xor.b64  	%rd14218, %rd14207, %rd14130;
	xor.b64  	%rd14219, %rd14209, %rd14133;
	xor.b64  	%rd14220, %rd14201, %rd14136;
	xor.b64  	%rd14221, %rd14203, %rd14139;
	xor.b64  	%rd14222, %rd14205, %rd14142;
	xor.b64  	%rd14223, %rd14207, %rd14145;
	xor.b64  	%rd14224, %rd14209, %rd14148;
	xor.b64  	%rd14225, %rd14201, %rd14151;
	xor.b64  	%rd14226, %rd14203, %rd14154;
	xor.b64  	%rd14227, %rd14205, %rd14157;
	xor.b64  	%rd14228, %rd14207, %rd14160;
	xor.b64  	%rd14229, %rd14209, %rd14163;
	xor.b64  	%rd14230, %rd14201, %rd14166;
	xor.b64  	%rd14231, %rd14203, %rd14169;
	xor.b64  	%rd14232, %rd14205, %rd14172;
	xor.b64  	%rd14233, %rd14207, %rd14175;
	xor.b64  	%rd14234, %rd14209, %rd14178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10079,%dummy}, %rd14216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10080}, %rd14216;
	}
	shf.r.wrap.b32 	%r10081, %r10080, %r10079, 20;
	shf.r.wrap.b32 	%r10082, %r10079, %r10080, 20;
	mov.b64 	%rd14235, {%r10082, %r10081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10083,%dummy}, %rd14222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10084}, %rd14222;
	}
	shf.r.wrap.b32 	%r10085, %r10084, %r10083, 21;
	shf.r.wrap.b32 	%r10086, %r10083, %r10084, 21;
	mov.b64 	%rd14236, {%r10086, %r10085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10087}, %rd14228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10088,%dummy}, %rd14228;
	}
	shf.l.wrap.b32 	%r10089, %r10088, %r10087, 21;
	shf.l.wrap.b32 	%r10090, %r10087, %r10088, 21;
	mov.b64 	%rd14237, {%r10090, %r10089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10091}, %rd14234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10092,%dummy}, %rd14234;
	}
	shf.l.wrap.b32 	%r10093, %r10092, %r10091, 14;
	shf.l.wrap.b32 	%r10094, %r10091, %r10092, 14;
	mov.b64 	%rd14238, {%r10094, %r10093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10095}, %rd14213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10096,%dummy}, %rd14213;
	}
	shf.l.wrap.b32 	%r10097, %r10096, %r10095, 28;
	shf.l.wrap.b32 	%r10098, %r10095, %r10096, 28;
	mov.b64 	%rd14239, {%r10098, %r10097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10099}, %rd14219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10100,%dummy}, %rd14219;
	}
	shf.l.wrap.b32 	%r10101, %r10100, %r10099, 20;
	shf.l.wrap.b32 	%r10102, %r10099, %r10100, 20;
	mov.b64 	%rd14240, {%r10102, %r10101};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10103}, %rd14220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10104,%dummy}, %rd14220;
	}
	shf.l.wrap.b32 	%r10105, %r10104, %r10103, 3;
	shf.l.wrap.b32 	%r10106, %r10103, %r10104, 3;
	mov.b64 	%rd14241, {%r10106, %r10105};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10107,%dummy}, %rd14226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10108}, %rd14226;
	}
	shf.r.wrap.b32 	%r10109, %r10108, %r10107, 19;
	shf.r.wrap.b32 	%r10110, %r10107, %r10108, 19;
	mov.b64 	%rd14242, {%r10110, %r10109};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10111,%dummy}, %rd14232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10112}, %rd14232;
	}
	shf.r.wrap.b32 	%r10113, %r10112, %r10111, 3;
	shf.r.wrap.b32 	%r10114, %r10111, %r10112, 3;
	mov.b64 	%rd14243, {%r10114, %r10113};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10115}, %rd14211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10116,%dummy}, %rd14211;
	}
	shf.l.wrap.b32 	%r10117, %r10116, %r10115, 1;
	shf.l.wrap.b32 	%r10118, %r10115, %r10116, 1;
	mov.b64 	%rd14244, {%r10118, %r10117};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10119}, %rd14217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10120,%dummy}, %rd14217;
	}
	shf.l.wrap.b32 	%r10121, %r10120, %r10119, 6;
	shf.l.wrap.b32 	%r10122, %r10119, %r10120, 6;
	mov.b64 	%rd14245, {%r10122, %r10121};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10123}, %rd14223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10124,%dummy}, %rd14223;
	}
	shf.l.wrap.b32 	%r10125, %r10124, %r10123, 25;
	shf.l.wrap.b32 	%r10126, %r10123, %r10124, 25;
	mov.b64 	%rd14246, {%r10126, %r10125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10127}, %rd14229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10128,%dummy}, %rd14229;
	}
	shf.l.wrap.b32 	%r10129, %r10128, %r10127, 8;
	shf.l.wrap.b32 	%r10130, %r10127, %r10128, 8;
	mov.b64 	%rd14247, {%r10130, %r10129};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10131}, %rd14230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10132,%dummy}, %rd14230;
	}
	shf.l.wrap.b32 	%r10133, %r10132, %r10131, 18;
	shf.l.wrap.b32 	%r10134, %r10131, %r10132, 18;
	mov.b64 	%rd14248, {%r10134, %r10133};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10135}, %rd14214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10136,%dummy}, %rd14214;
	}
	shf.l.wrap.b32 	%r10137, %r10136, %r10135, 27;
	shf.l.wrap.b32 	%r10138, %r10135, %r10136, 27;
	mov.b64 	%rd14249, {%r10138, %r10137};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10139,%dummy}, %rd14215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10140}, %rd14215;
	}
	shf.r.wrap.b32 	%r10141, %r10140, %r10139, 28;
	shf.r.wrap.b32 	%r10142, %r10139, %r10140, 28;
	mov.b64 	%rd14250, {%r10142, %r10141};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10143}, %rd14221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10144,%dummy}, %rd14221;
	}
	shf.l.wrap.b32 	%r10145, %r10144, %r10143, 10;
	shf.l.wrap.b32 	%r10146, %r10143, %r10144, 10;
	mov.b64 	%rd14251, {%r10146, %r10145};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10147}, %rd14227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10148,%dummy}, %rd14227;
	}
	shf.l.wrap.b32 	%r10149, %r10148, %r10147, 15;
	shf.l.wrap.b32 	%r10150, %r10147, %r10148, 15;
	mov.b64 	%rd14252, {%r10150, %r10149};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10151,%dummy}, %rd14233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10152}, %rd14233;
	}
	shf.r.wrap.b32 	%r10153, %r10152, %r10151, 8;
	shf.r.wrap.b32 	%r10154, %r10151, %r10152, 8;
	mov.b64 	%rd14253, {%r10154, %r10153};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10155,%dummy}, %rd14212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10156}, %rd14212;
	}
	shf.r.wrap.b32 	%r10157, %r10156, %r10155, 2;
	shf.r.wrap.b32 	%r10158, %r10155, %r10156, 2;
	mov.b64 	%rd14254, {%r10158, %r10157};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10159,%dummy}, %rd14218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10160}, %rd14218;
	}
	shf.r.wrap.b32 	%r10161, %r10160, %r10159, 9;
	shf.r.wrap.b32 	%r10162, %r10159, %r10160, 9;
	mov.b64 	%rd14255, {%r10162, %r10161};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10163,%dummy}, %rd14224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10164}, %rd14224;
	}
	shf.r.wrap.b32 	%r10165, %r10164, %r10163, 25;
	shf.r.wrap.b32 	%r10166, %r10163, %r10164, 25;
	mov.b64 	%rd14256, {%r10166, %r10165};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10167,%dummy}, %rd14225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10168}, %rd14225;
	}
	shf.r.wrap.b32 	%r10169, %r10168, %r10167, 23;
	shf.r.wrap.b32 	%r10170, %r10167, %r10168, 23;
	mov.b64 	%rd14257, {%r10170, %r10169};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10171}, %rd14231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10172,%dummy}, %rd14231;
	}
	shf.l.wrap.b32 	%r10173, %r10172, %r10171, 2;
	shf.l.wrap.b32 	%r10174, %r10171, %r10172, 2;
	mov.b64 	%rd14258, {%r10174, %r10173};
	not.b64 	%rd14259, %rd14235;
	and.b64  	%rd14260, %rd14236, %rd14259;
	xor.b64  	%rd14261, %rd14260, %rd14210;
	not.b64 	%rd14262, %rd14236;
	and.b64  	%rd14263, %rd14237, %rd14262;
	xor.b64  	%rd14264, %rd14263, %rd14235;
	not.b64 	%rd14265, %rd14237;
	and.b64  	%rd14266, %rd14238, %rd14265;
	xor.b64  	%rd14267, %rd14266, %rd14236;
	not.b64 	%rd14268, %rd14238;
	and.b64  	%rd14269, %rd14210, %rd14268;
	xor.b64  	%rd14270, %rd14269, %rd14237;
	not.b64 	%rd14271, %rd14210;
	and.b64  	%rd14272, %rd14235, %rd14271;
	xor.b64  	%rd14273, %rd14272, %rd14238;
	not.b64 	%rd14274, %rd14240;
	and.b64  	%rd14275, %rd14241, %rd14274;
	xor.b64  	%rd14276, %rd14275, %rd14239;
	not.b64 	%rd14277, %rd14241;
	and.b64  	%rd14278, %rd14242, %rd14277;
	xor.b64  	%rd14279, %rd14278, %rd14240;
	not.b64 	%rd14280, %rd14242;
	and.b64  	%rd14281, %rd14243, %rd14280;
	xor.b64  	%rd14282, %rd14281, %rd14241;
	not.b64 	%rd14283, %rd14243;
	and.b64  	%rd14284, %rd14239, %rd14283;
	xor.b64  	%rd14285, %rd14284, %rd14242;
	not.b64 	%rd14286, %rd14239;
	and.b64  	%rd14287, %rd14240, %rd14286;
	xor.b64  	%rd14288, %rd14287, %rd14243;
	not.b64 	%rd14289, %rd14245;
	and.b64  	%rd14290, %rd14246, %rd14289;
	xor.b64  	%rd14291, %rd14290, %rd14244;
	not.b64 	%rd14292, %rd14246;
	and.b64  	%rd14293, %rd14247, %rd14292;
	xor.b64  	%rd14294, %rd14293, %rd14245;
	not.b64 	%rd14295, %rd14247;
	and.b64  	%rd14296, %rd14248, %rd14295;
	xor.b64  	%rd14297, %rd14296, %rd14246;
	not.b64 	%rd14298, %rd14248;
	and.b64  	%rd14299, %rd14244, %rd14298;
	xor.b64  	%rd14300, %rd14299, %rd14247;
	not.b64 	%rd14301, %rd14244;
	and.b64  	%rd14302, %rd14245, %rd14301;
	xor.b64  	%rd14303, %rd14302, %rd14248;
	not.b64 	%rd14304, %rd14250;
	and.b64  	%rd14305, %rd14251, %rd14304;
	xor.b64  	%rd14306, %rd14305, %rd14249;
	not.b64 	%rd14307, %rd14251;
	and.b64  	%rd14308, %rd14252, %rd14307;
	xor.b64  	%rd14309, %rd14308, %rd14250;
	not.b64 	%rd14310, %rd14252;
	and.b64  	%rd14311, %rd14253, %rd14310;
	xor.b64  	%rd14312, %rd14311, %rd14251;
	not.b64 	%rd14313, %rd14253;
	and.b64  	%rd14314, %rd14249, %rd14313;
	xor.b64  	%rd14315, %rd14314, %rd14252;
	not.b64 	%rd14316, %rd14249;
	and.b64  	%rd14317, %rd14250, %rd14316;
	xor.b64  	%rd14318, %rd14317, %rd14253;
	not.b64 	%rd14319, %rd14255;
	and.b64  	%rd14320, %rd14256, %rd14319;
	xor.b64  	%rd14321, %rd14320, %rd14254;
	not.b64 	%rd14322, %rd14256;
	and.b64  	%rd14323, %rd14257, %rd14322;
	xor.b64  	%rd14324, %rd14323, %rd14255;
	not.b64 	%rd14325, %rd14257;
	and.b64  	%rd14326, %rd14258, %rd14325;
	xor.b64  	%rd14327, %rd14326, %rd14256;
	not.b64 	%rd14328, %rd14258;
	and.b64  	%rd14329, %rd14254, %rd14328;
	xor.b64  	%rd14330, %rd14329, %rd14257;
	not.b64 	%rd14331, %rd14254;
	and.b64  	%rd14332, %rd14255, %rd14331;
	xor.b64  	%rd14333, %rd14332, %rd14258;
	xor.b64  	%rd14334, %rd14261, %rd30;
	xor.b64  	%rd14335, %rd14276, %rd14334;
	xor.b64  	%rd14336, %rd14335, %rd14291;
	xor.b64  	%rd14337, %rd14336, %rd14306;
	xor.b64  	%rd14338, %rd14337, %rd14321;
	xor.b64  	%rd14339, %rd14279, %rd14264;
	xor.b64  	%rd14340, %rd14339, %rd14294;
	xor.b64  	%rd14341, %rd14340, %rd14309;
	xor.b64  	%rd14342, %rd14341, %rd14324;
	xor.b64  	%rd14343, %rd14282, %rd14267;
	xor.b64  	%rd14344, %rd14343, %rd14297;
	xor.b64  	%rd14345, %rd14344, %rd14312;
	xor.b64  	%rd14346, %rd14345, %rd14327;
	xor.b64  	%rd14347, %rd14285, %rd14270;
	xor.b64  	%rd14348, %rd14347, %rd14300;
	xor.b64  	%rd14349, %rd14348, %rd14315;
	xor.b64  	%rd14350, %rd14349, %rd14330;
	xor.b64  	%rd14351, %rd14288, %rd14273;
	xor.b64  	%rd14352, %rd14351, %rd14303;
	xor.b64  	%rd14353, %rd14352, %rd14318;
	xor.b64  	%rd14354, %rd14353, %rd14333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10175}, %rd14342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10176,%dummy}, %rd14342;
	}
	shf.l.wrap.b32 	%r10177, %r10176, %r10175, 1;
	shf.l.wrap.b32 	%r10178, %r10175, %r10176, 1;
	mov.b64 	%rd14355, {%r10178, %r10177};
	xor.b64  	%rd14356, %rd14354, %rd14355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10179}, %rd14346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10180,%dummy}, %rd14346;
	}
	shf.l.wrap.b32 	%r10181, %r10180, %r10179, 1;
	shf.l.wrap.b32 	%r10182, %r10179, %r10180, 1;
	mov.b64 	%rd14357, {%r10182, %r10181};
	xor.b64  	%rd14358, %rd14357, %rd14338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10183}, %rd14350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10184,%dummy}, %rd14350;
	}
	shf.l.wrap.b32 	%r10185, %r10184, %r10183, 1;
	shf.l.wrap.b32 	%r10186, %r10183, %r10184, 1;
	mov.b64 	%rd14359, {%r10186, %r10185};
	xor.b64  	%rd14360, %rd14359, %rd14342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10187}, %rd14354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10188,%dummy}, %rd14354;
	}
	shf.l.wrap.b32 	%r10189, %r10188, %r10187, 1;
	shf.l.wrap.b32 	%r10190, %r10187, %r10188, 1;
	mov.b64 	%rd14361, {%r10190, %r10189};
	xor.b64  	%rd14362, %rd14361, %rd14346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10191}, %rd14338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10192,%dummy}, %rd14338;
	}
	shf.l.wrap.b32 	%r10193, %r10192, %r10191, 1;
	shf.l.wrap.b32 	%r10194, %r10191, %r10192, 1;
	mov.b64 	%rd14363, {%r10194, %r10193};
	xor.b64  	%rd14364, %rd14350, %rd14363;
	xor.b64  	%rd14365, %rd14356, %rd14334;
	xor.b64  	%rd14366, %rd14358, %rd14264;
	xor.b64  	%rd14367, %rd14360, %rd14267;
	xor.b64  	%rd14368, %rd14362, %rd14270;
	xor.b64  	%rd14369, %rd14364, %rd14273;
	xor.b64  	%rd14370, %rd14356, %rd14276;
	xor.b64  	%rd14371, %rd14358, %rd14279;
	xor.b64  	%rd14372, %rd14360, %rd14282;
	xor.b64  	%rd14373, %rd14362, %rd14285;
	xor.b64  	%rd14374, %rd14364, %rd14288;
	xor.b64  	%rd14375, %rd14356, %rd14291;
	xor.b64  	%rd14376, %rd14358, %rd14294;
	xor.b64  	%rd14377, %rd14360, %rd14297;
	xor.b64  	%rd14378, %rd14362, %rd14300;
	xor.b64  	%rd14379, %rd14364, %rd14303;
	xor.b64  	%rd14380, %rd14356, %rd14306;
	xor.b64  	%rd14381, %rd14358, %rd14309;
	xor.b64  	%rd14382, %rd14360, %rd14312;
	xor.b64  	%rd14383, %rd14362, %rd14315;
	xor.b64  	%rd14384, %rd14364, %rd14318;
	xor.b64  	%rd14385, %rd14356, %rd14321;
	xor.b64  	%rd14386, %rd14358, %rd14324;
	xor.b64  	%rd14387, %rd14360, %rd14327;
	xor.b64  	%rd14388, %rd14362, %rd14330;
	xor.b64  	%rd14389, %rd14364, %rd14333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10195,%dummy}, %rd14371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10196}, %rd14371;
	}
	shf.r.wrap.b32 	%r10197, %r10196, %r10195, 20;
	shf.r.wrap.b32 	%r10198, %r10195, %r10196, 20;
	mov.b64 	%rd14390, {%r10198, %r10197};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10199,%dummy}, %rd14377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10200}, %rd14377;
	}
	shf.r.wrap.b32 	%r10201, %r10200, %r10199, 21;
	shf.r.wrap.b32 	%r10202, %r10199, %r10200, 21;
	mov.b64 	%rd14391, {%r10202, %r10201};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10203}, %rd14383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10204,%dummy}, %rd14383;
	}
	shf.l.wrap.b32 	%r10205, %r10204, %r10203, 21;
	shf.l.wrap.b32 	%r10206, %r10203, %r10204, 21;
	mov.b64 	%rd14392, {%r10206, %r10205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10207}, %rd14389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10208,%dummy}, %rd14389;
	}
	shf.l.wrap.b32 	%r10209, %r10208, %r10207, 14;
	shf.l.wrap.b32 	%r10210, %r10207, %r10208, 14;
	mov.b64 	%rd14393, {%r10210, %r10209};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10211}, %rd14368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10212,%dummy}, %rd14368;
	}
	shf.l.wrap.b32 	%r10213, %r10212, %r10211, 28;
	shf.l.wrap.b32 	%r10214, %r10211, %r10212, 28;
	mov.b64 	%rd14394, {%r10214, %r10213};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10215}, %rd14374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10216,%dummy}, %rd14374;
	}
	shf.l.wrap.b32 	%r10217, %r10216, %r10215, 20;
	shf.l.wrap.b32 	%r10218, %r10215, %r10216, 20;
	mov.b64 	%rd14395, {%r10218, %r10217};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10219}, %rd14375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10220,%dummy}, %rd14375;
	}
	shf.l.wrap.b32 	%r10221, %r10220, %r10219, 3;
	shf.l.wrap.b32 	%r10222, %r10219, %r10220, 3;
	mov.b64 	%rd14396, {%r10222, %r10221};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10223,%dummy}, %rd14381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10224}, %rd14381;
	}
	shf.r.wrap.b32 	%r10225, %r10224, %r10223, 19;
	shf.r.wrap.b32 	%r10226, %r10223, %r10224, 19;
	mov.b64 	%rd14397, {%r10226, %r10225};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10227,%dummy}, %rd14387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10228}, %rd14387;
	}
	shf.r.wrap.b32 	%r10229, %r10228, %r10227, 3;
	shf.r.wrap.b32 	%r10230, %r10227, %r10228, 3;
	mov.b64 	%rd14398, {%r10230, %r10229};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10231}, %rd14366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10232,%dummy}, %rd14366;
	}
	shf.l.wrap.b32 	%r10233, %r10232, %r10231, 1;
	shf.l.wrap.b32 	%r10234, %r10231, %r10232, 1;
	mov.b64 	%rd14399, {%r10234, %r10233};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10235}, %rd14372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10236,%dummy}, %rd14372;
	}
	shf.l.wrap.b32 	%r10237, %r10236, %r10235, 6;
	shf.l.wrap.b32 	%r10238, %r10235, %r10236, 6;
	mov.b64 	%rd14400, {%r10238, %r10237};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10239}, %rd14378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10240,%dummy}, %rd14378;
	}
	shf.l.wrap.b32 	%r10241, %r10240, %r10239, 25;
	shf.l.wrap.b32 	%r10242, %r10239, %r10240, 25;
	mov.b64 	%rd14401, {%r10242, %r10241};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10243}, %rd14384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10244,%dummy}, %rd14384;
	}
	shf.l.wrap.b32 	%r10245, %r10244, %r10243, 8;
	shf.l.wrap.b32 	%r10246, %r10243, %r10244, 8;
	mov.b64 	%rd14402, {%r10246, %r10245};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10247}, %rd14385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10248,%dummy}, %rd14385;
	}
	shf.l.wrap.b32 	%r10249, %r10248, %r10247, 18;
	shf.l.wrap.b32 	%r10250, %r10247, %r10248, 18;
	mov.b64 	%rd14403, {%r10250, %r10249};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10251}, %rd14369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10252,%dummy}, %rd14369;
	}
	shf.l.wrap.b32 	%r10253, %r10252, %r10251, 27;
	shf.l.wrap.b32 	%r10254, %r10251, %r10252, 27;
	mov.b64 	%rd14404, {%r10254, %r10253};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10255,%dummy}, %rd14370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10256}, %rd14370;
	}
	shf.r.wrap.b32 	%r10257, %r10256, %r10255, 28;
	shf.r.wrap.b32 	%r10258, %r10255, %r10256, 28;
	mov.b64 	%rd14405, {%r10258, %r10257};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10259}, %rd14376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10260,%dummy}, %rd14376;
	}
	shf.l.wrap.b32 	%r10261, %r10260, %r10259, 10;
	shf.l.wrap.b32 	%r10262, %r10259, %r10260, 10;
	mov.b64 	%rd14406, {%r10262, %r10261};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10263}, %rd14382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10264,%dummy}, %rd14382;
	}
	shf.l.wrap.b32 	%r10265, %r10264, %r10263, 15;
	shf.l.wrap.b32 	%r10266, %r10263, %r10264, 15;
	mov.b64 	%rd14407, {%r10266, %r10265};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10267,%dummy}, %rd14388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10268}, %rd14388;
	}
	shf.r.wrap.b32 	%r10269, %r10268, %r10267, 8;
	shf.r.wrap.b32 	%r10270, %r10267, %r10268, 8;
	mov.b64 	%rd14408, {%r10270, %r10269};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10271,%dummy}, %rd14367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10272}, %rd14367;
	}
	shf.r.wrap.b32 	%r10273, %r10272, %r10271, 2;
	shf.r.wrap.b32 	%r10274, %r10271, %r10272, 2;
	mov.b64 	%rd14409, {%r10274, %r10273};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10275,%dummy}, %rd14373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10276}, %rd14373;
	}
	shf.r.wrap.b32 	%r10277, %r10276, %r10275, 9;
	shf.r.wrap.b32 	%r10278, %r10275, %r10276, 9;
	mov.b64 	%rd14410, {%r10278, %r10277};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10279,%dummy}, %rd14379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10280}, %rd14379;
	}
	shf.r.wrap.b32 	%r10281, %r10280, %r10279, 25;
	shf.r.wrap.b32 	%r10282, %r10279, %r10280, 25;
	mov.b64 	%rd14411, {%r10282, %r10281};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10283,%dummy}, %rd14380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10284}, %rd14380;
	}
	shf.r.wrap.b32 	%r10285, %r10284, %r10283, 23;
	shf.r.wrap.b32 	%r10286, %r10283, %r10284, 23;
	mov.b64 	%rd14412, {%r10286, %r10285};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10287}, %rd14386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10288,%dummy}, %rd14386;
	}
	shf.l.wrap.b32 	%r10289, %r10288, %r10287, 2;
	shf.l.wrap.b32 	%r10290, %r10287, %r10288, 2;
	mov.b64 	%rd14413, {%r10290, %r10289};
	not.b64 	%rd14414, %rd14390;
	and.b64  	%rd14415, %rd14391, %rd14414;
	xor.b64  	%rd14416, %rd14415, %rd14365;
	not.b64 	%rd14417, %rd14391;
	and.b64  	%rd14418, %rd14392, %rd14417;
	xor.b64  	%rd14419, %rd14418, %rd14390;
	not.b64 	%rd14420, %rd14392;
	and.b64  	%rd14421, %rd14393, %rd14420;
	xor.b64  	%rd14422, %rd14421, %rd14391;
	not.b64 	%rd14423, %rd14393;
	and.b64  	%rd14424, %rd14365, %rd14423;
	xor.b64  	%rd14425, %rd14424, %rd14392;
	not.b64 	%rd14426, %rd14365;
	and.b64  	%rd14427, %rd14390, %rd14426;
	xor.b64  	%rd14428, %rd14427, %rd14393;
	not.b64 	%rd14429, %rd14395;
	and.b64  	%rd14430, %rd14396, %rd14429;
	xor.b64  	%rd14431, %rd14430, %rd14394;
	not.b64 	%rd14432, %rd14396;
	and.b64  	%rd14433, %rd14397, %rd14432;
	xor.b64  	%rd14434, %rd14433, %rd14395;
	not.b64 	%rd14435, %rd14397;
	and.b64  	%rd14436, %rd14398, %rd14435;
	xor.b64  	%rd14437, %rd14436, %rd14396;
	not.b64 	%rd14438, %rd14398;
	and.b64  	%rd14439, %rd14394, %rd14438;
	xor.b64  	%rd14440, %rd14439, %rd14397;
	not.b64 	%rd14441, %rd14394;
	and.b64  	%rd14442, %rd14395, %rd14441;
	xor.b64  	%rd14443, %rd14442, %rd14398;
	not.b64 	%rd14444, %rd14400;
	and.b64  	%rd14445, %rd14401, %rd14444;
	xor.b64  	%rd14446, %rd14445, %rd14399;
	not.b64 	%rd14447, %rd14401;
	and.b64  	%rd14448, %rd14402, %rd14447;
	xor.b64  	%rd14449, %rd14448, %rd14400;
	not.b64 	%rd14450, %rd14402;
	and.b64  	%rd14451, %rd14403, %rd14450;
	xor.b64  	%rd14452, %rd14451, %rd14401;
	not.b64 	%rd14453, %rd14403;
	and.b64  	%rd14454, %rd14399, %rd14453;
	xor.b64  	%rd14455, %rd14454, %rd14402;
	not.b64 	%rd14456, %rd14399;
	and.b64  	%rd14457, %rd14400, %rd14456;
	xor.b64  	%rd14458, %rd14457, %rd14403;
	not.b64 	%rd14459, %rd14405;
	and.b64  	%rd14460, %rd14406, %rd14459;
	xor.b64  	%rd14461, %rd14460, %rd14404;
	not.b64 	%rd14462, %rd14406;
	and.b64  	%rd14463, %rd14407, %rd14462;
	xor.b64  	%rd14464, %rd14463, %rd14405;
	not.b64 	%rd14465, %rd14407;
	and.b64  	%rd14466, %rd14408, %rd14465;
	xor.b64  	%rd14467, %rd14466, %rd14406;
	not.b64 	%rd14468, %rd14408;
	and.b64  	%rd14469, %rd14404, %rd14468;
	xor.b64  	%rd14470, %rd14469, %rd14407;
	not.b64 	%rd14471, %rd14404;
	and.b64  	%rd14472, %rd14405, %rd14471;
	xor.b64  	%rd14473, %rd14472, %rd14408;
	not.b64 	%rd14474, %rd14410;
	and.b64  	%rd14475, %rd14411, %rd14474;
	xor.b64  	%rd14476, %rd14475, %rd14409;
	not.b64 	%rd14477, %rd14411;
	and.b64  	%rd14478, %rd14412, %rd14477;
	xor.b64  	%rd14479, %rd14478, %rd14410;
	not.b64 	%rd14480, %rd14412;
	and.b64  	%rd14481, %rd14413, %rd14480;
	xor.b64  	%rd14482, %rd14481, %rd14411;
	not.b64 	%rd14483, %rd14413;
	and.b64  	%rd14484, %rd14409, %rd14483;
	xor.b64  	%rd14485, %rd14484, %rd14412;
	not.b64 	%rd14486, %rd14409;
	and.b64  	%rd14487, %rd14410, %rd14486;
	xor.b64  	%rd14488, %rd14487, %rd14413;
	xor.b64  	%rd14489, %rd14416, %rd31;
	xor.b64  	%rd14490, %rd14431, %rd14489;
	xor.b64  	%rd14491, %rd14490, %rd14446;
	xor.b64  	%rd14492, %rd14491, %rd14461;
	xor.b64  	%rd14493, %rd14492, %rd14476;
	xor.b64  	%rd14494, %rd14434, %rd14419;
	xor.b64  	%rd14495, %rd14494, %rd14449;
	xor.b64  	%rd14496, %rd14495, %rd14464;
	xor.b64  	%rd14497, %rd14496, %rd14479;
	xor.b64  	%rd14498, %rd14437, %rd14422;
	xor.b64  	%rd14499, %rd14498, %rd14452;
	xor.b64  	%rd14500, %rd14499, %rd14467;
	xor.b64  	%rd14501, %rd14500, %rd14482;
	xor.b64  	%rd14502, %rd14440, %rd14425;
	xor.b64  	%rd14503, %rd14502, %rd14455;
	xor.b64  	%rd14504, %rd14503, %rd14470;
	xor.b64  	%rd14505, %rd14504, %rd14485;
	xor.b64  	%rd14506, %rd14443, %rd14428;
	xor.b64  	%rd14507, %rd14506, %rd14458;
	xor.b64  	%rd14508, %rd14507, %rd14473;
	xor.b64  	%rd14509, %rd14508, %rd14488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10291}, %rd14497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10292,%dummy}, %rd14497;
	}
	shf.l.wrap.b32 	%r10293, %r10292, %r10291, 1;
	shf.l.wrap.b32 	%r10294, %r10291, %r10292, 1;
	mov.b64 	%rd14510, {%r10294, %r10293};
	xor.b64  	%rd14511, %rd14509, %rd14510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10295}, %rd14501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10296,%dummy}, %rd14501;
	}
	shf.l.wrap.b32 	%r10297, %r10296, %r10295, 1;
	shf.l.wrap.b32 	%r10298, %r10295, %r10296, 1;
	mov.b64 	%rd14512, {%r10298, %r10297};
	xor.b64  	%rd14513, %rd14512, %rd14493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10299}, %rd14505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10300,%dummy}, %rd14505;
	}
	shf.l.wrap.b32 	%r10301, %r10300, %r10299, 1;
	shf.l.wrap.b32 	%r10302, %r10299, %r10300, 1;
	mov.b64 	%rd14514, {%r10302, %r10301};
	xor.b64  	%rd14515, %rd14514, %rd14497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10303}, %rd14509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10304,%dummy}, %rd14509;
	}
	shf.l.wrap.b32 	%r10305, %r10304, %r10303, 1;
	shf.l.wrap.b32 	%r10306, %r10303, %r10304, 1;
	mov.b64 	%rd14516, {%r10306, %r10305};
	xor.b64  	%rd14517, %rd14516, %rd14501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10307}, %rd14493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10308,%dummy}, %rd14493;
	}
	shf.l.wrap.b32 	%r10309, %r10308, %r10307, 1;
	shf.l.wrap.b32 	%r10310, %r10307, %r10308, 1;
	mov.b64 	%rd14518, {%r10310, %r10309};
	xor.b64  	%rd14519, %rd14505, %rd14518;
	xor.b64  	%rd14520, %rd14511, %rd14489;
	xor.b64  	%rd14521, %rd14513, %rd14419;
	xor.b64  	%rd14522, %rd14515, %rd14422;
	xor.b64  	%rd14523, %rd14517, %rd14425;
	xor.b64  	%rd14524, %rd14519, %rd14428;
	xor.b64  	%rd14525, %rd14511, %rd14431;
	xor.b64  	%rd14526, %rd14513, %rd14434;
	xor.b64  	%rd14527, %rd14515, %rd14437;
	xor.b64  	%rd14528, %rd14517, %rd14440;
	xor.b64  	%rd14529, %rd14519, %rd14443;
	xor.b64  	%rd14530, %rd14511, %rd14446;
	xor.b64  	%rd14531, %rd14513, %rd14449;
	xor.b64  	%rd14532, %rd14515, %rd14452;
	xor.b64  	%rd14533, %rd14517, %rd14455;
	xor.b64  	%rd14534, %rd14519, %rd14458;
	xor.b64  	%rd14535, %rd14511, %rd14461;
	xor.b64  	%rd14536, %rd14513, %rd14464;
	xor.b64  	%rd14537, %rd14515, %rd14467;
	xor.b64  	%rd14538, %rd14517, %rd14470;
	xor.b64  	%rd14539, %rd14519, %rd14473;
	xor.b64  	%rd14540, %rd14511, %rd14476;
	xor.b64  	%rd14541, %rd14513, %rd14479;
	xor.b64  	%rd14542, %rd14515, %rd14482;
	xor.b64  	%rd14543, %rd14517, %rd14485;
	xor.b64  	%rd14544, %rd14519, %rd14488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10311,%dummy}, %rd14526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10312}, %rd14526;
	}
	shf.r.wrap.b32 	%r10313, %r10312, %r10311, 20;
	shf.r.wrap.b32 	%r10314, %r10311, %r10312, 20;
	mov.b64 	%rd14545, {%r10314, %r10313};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10315,%dummy}, %rd14532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10316}, %rd14532;
	}
	shf.r.wrap.b32 	%r10317, %r10316, %r10315, 21;
	shf.r.wrap.b32 	%r10318, %r10315, %r10316, 21;
	mov.b64 	%rd14546, {%r10318, %r10317};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10319}, %rd14538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10320,%dummy}, %rd14538;
	}
	shf.l.wrap.b32 	%r10321, %r10320, %r10319, 21;
	shf.l.wrap.b32 	%r10322, %r10319, %r10320, 21;
	mov.b64 	%rd14547, {%r10322, %r10321};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10323}, %rd14544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10324,%dummy}, %rd14544;
	}
	shf.l.wrap.b32 	%r10325, %r10324, %r10323, 14;
	shf.l.wrap.b32 	%r10326, %r10323, %r10324, 14;
	mov.b64 	%rd14548, {%r10326, %r10325};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10327}, %rd14523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10328,%dummy}, %rd14523;
	}
	shf.l.wrap.b32 	%r10329, %r10328, %r10327, 28;
	shf.l.wrap.b32 	%r10330, %r10327, %r10328, 28;
	mov.b64 	%rd14549, {%r10330, %r10329};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10331}, %rd14529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10332,%dummy}, %rd14529;
	}
	shf.l.wrap.b32 	%r10333, %r10332, %r10331, 20;
	shf.l.wrap.b32 	%r10334, %r10331, %r10332, 20;
	mov.b64 	%rd14550, {%r10334, %r10333};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10335}, %rd14530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10336,%dummy}, %rd14530;
	}
	shf.l.wrap.b32 	%r10337, %r10336, %r10335, 3;
	shf.l.wrap.b32 	%r10338, %r10335, %r10336, 3;
	mov.b64 	%rd14551, {%r10338, %r10337};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10339,%dummy}, %rd14536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10340}, %rd14536;
	}
	shf.r.wrap.b32 	%r10341, %r10340, %r10339, 19;
	shf.r.wrap.b32 	%r10342, %r10339, %r10340, 19;
	mov.b64 	%rd14552, {%r10342, %r10341};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10343,%dummy}, %rd14542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10344}, %rd14542;
	}
	shf.r.wrap.b32 	%r10345, %r10344, %r10343, 3;
	shf.r.wrap.b32 	%r10346, %r10343, %r10344, 3;
	mov.b64 	%rd14553, {%r10346, %r10345};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10347}, %rd14521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10348,%dummy}, %rd14521;
	}
	shf.l.wrap.b32 	%r10349, %r10348, %r10347, 1;
	shf.l.wrap.b32 	%r10350, %r10347, %r10348, 1;
	mov.b64 	%rd14554, {%r10350, %r10349};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10351}, %rd14527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10352,%dummy}, %rd14527;
	}
	shf.l.wrap.b32 	%r10353, %r10352, %r10351, 6;
	shf.l.wrap.b32 	%r10354, %r10351, %r10352, 6;
	mov.b64 	%rd14555, {%r10354, %r10353};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10355}, %rd14533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10356,%dummy}, %rd14533;
	}
	shf.l.wrap.b32 	%r10357, %r10356, %r10355, 25;
	shf.l.wrap.b32 	%r10358, %r10355, %r10356, 25;
	mov.b64 	%rd14556, {%r10358, %r10357};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10359}, %rd14539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10360,%dummy}, %rd14539;
	}
	shf.l.wrap.b32 	%r10361, %r10360, %r10359, 8;
	shf.l.wrap.b32 	%r10362, %r10359, %r10360, 8;
	mov.b64 	%rd14557, {%r10362, %r10361};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10363}, %rd14540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10364,%dummy}, %rd14540;
	}
	shf.l.wrap.b32 	%r10365, %r10364, %r10363, 18;
	shf.l.wrap.b32 	%r10366, %r10363, %r10364, 18;
	mov.b64 	%rd14558, {%r10366, %r10365};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10367}, %rd14524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10368,%dummy}, %rd14524;
	}
	shf.l.wrap.b32 	%r10369, %r10368, %r10367, 27;
	shf.l.wrap.b32 	%r10370, %r10367, %r10368, 27;
	mov.b64 	%rd14559, {%r10370, %r10369};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10371,%dummy}, %rd14525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10372}, %rd14525;
	}
	shf.r.wrap.b32 	%r10373, %r10372, %r10371, 28;
	shf.r.wrap.b32 	%r10374, %r10371, %r10372, 28;
	mov.b64 	%rd14560, {%r10374, %r10373};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10375}, %rd14531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10376,%dummy}, %rd14531;
	}
	shf.l.wrap.b32 	%r10377, %r10376, %r10375, 10;
	shf.l.wrap.b32 	%r10378, %r10375, %r10376, 10;
	mov.b64 	%rd14561, {%r10378, %r10377};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10379}, %rd14537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10380,%dummy}, %rd14537;
	}
	shf.l.wrap.b32 	%r10381, %r10380, %r10379, 15;
	shf.l.wrap.b32 	%r10382, %r10379, %r10380, 15;
	mov.b64 	%rd14562, {%r10382, %r10381};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10383,%dummy}, %rd14543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10384}, %rd14543;
	}
	shf.r.wrap.b32 	%r10385, %r10384, %r10383, 8;
	shf.r.wrap.b32 	%r10386, %r10383, %r10384, 8;
	mov.b64 	%rd14563, {%r10386, %r10385};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10387,%dummy}, %rd14522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10388}, %rd14522;
	}
	shf.r.wrap.b32 	%r10389, %r10388, %r10387, 2;
	shf.r.wrap.b32 	%r10390, %r10387, %r10388, 2;
	mov.b64 	%rd14564, {%r10390, %r10389};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10391,%dummy}, %rd14528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10392}, %rd14528;
	}
	shf.r.wrap.b32 	%r10393, %r10392, %r10391, 9;
	shf.r.wrap.b32 	%r10394, %r10391, %r10392, 9;
	mov.b64 	%rd14565, {%r10394, %r10393};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10395,%dummy}, %rd14534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10396}, %rd14534;
	}
	shf.r.wrap.b32 	%r10397, %r10396, %r10395, 25;
	shf.r.wrap.b32 	%r10398, %r10395, %r10396, 25;
	mov.b64 	%rd14566, {%r10398, %r10397};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10399,%dummy}, %rd14535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10400}, %rd14535;
	}
	shf.r.wrap.b32 	%r10401, %r10400, %r10399, 23;
	shf.r.wrap.b32 	%r10402, %r10399, %r10400, 23;
	mov.b64 	%rd14567, {%r10402, %r10401};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10403}, %rd14541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10404,%dummy}, %rd14541;
	}
	shf.l.wrap.b32 	%r10405, %r10404, %r10403, 2;
	shf.l.wrap.b32 	%r10406, %r10403, %r10404, 2;
	mov.b64 	%rd14568, {%r10406, %r10405};
	not.b64 	%rd14569, %rd14545;
	and.b64  	%rd14570, %rd14546, %rd14569;
	xor.b64  	%rd14571, %rd14570, %rd14520;
	not.b64 	%rd14572, %rd14546;
	and.b64  	%rd14573, %rd14547, %rd14572;
	xor.b64  	%rd14574, %rd14573, %rd14545;
	not.b64 	%rd14575, %rd14547;
	and.b64  	%rd14576, %rd14548, %rd14575;
	xor.b64  	%rd14577, %rd14576, %rd14546;
	not.b64 	%rd14578, %rd14548;
	and.b64  	%rd14579, %rd14520, %rd14578;
	xor.b64  	%rd14580, %rd14579, %rd14547;
	not.b64 	%rd14581, %rd14520;
	and.b64  	%rd14582, %rd14545, %rd14581;
	xor.b64  	%rd14583, %rd14582, %rd14548;
	not.b64 	%rd14584, %rd14550;
	and.b64  	%rd14585, %rd14551, %rd14584;
	xor.b64  	%rd14586, %rd14585, %rd14549;
	not.b64 	%rd14587, %rd14551;
	and.b64  	%rd14588, %rd14552, %rd14587;
	xor.b64  	%rd14589, %rd14588, %rd14550;
	not.b64 	%rd14590, %rd14552;
	and.b64  	%rd14591, %rd14553, %rd14590;
	xor.b64  	%rd14592, %rd14591, %rd14551;
	not.b64 	%rd14593, %rd14553;
	and.b64  	%rd14594, %rd14549, %rd14593;
	xor.b64  	%rd14595, %rd14594, %rd14552;
	not.b64 	%rd14596, %rd14549;
	and.b64  	%rd14597, %rd14550, %rd14596;
	xor.b64  	%rd14598, %rd14597, %rd14553;
	not.b64 	%rd14599, %rd14555;
	and.b64  	%rd14600, %rd14556, %rd14599;
	xor.b64  	%rd14601, %rd14600, %rd14554;
	not.b64 	%rd14602, %rd14556;
	and.b64  	%rd14603, %rd14557, %rd14602;
	xor.b64  	%rd14604, %rd14603, %rd14555;
	not.b64 	%rd14605, %rd14557;
	and.b64  	%rd14606, %rd14558, %rd14605;
	xor.b64  	%rd14607, %rd14606, %rd14556;
	not.b64 	%rd14608, %rd14558;
	and.b64  	%rd14609, %rd14554, %rd14608;
	xor.b64  	%rd14610, %rd14609, %rd14557;
	not.b64 	%rd14611, %rd14554;
	and.b64  	%rd14612, %rd14555, %rd14611;
	xor.b64  	%rd14613, %rd14612, %rd14558;
	not.b64 	%rd14614, %rd14560;
	and.b64  	%rd14615, %rd14561, %rd14614;
	xor.b64  	%rd14616, %rd14615, %rd14559;
	not.b64 	%rd14617, %rd14561;
	and.b64  	%rd14618, %rd14562, %rd14617;
	xor.b64  	%rd14619, %rd14618, %rd14560;
	not.b64 	%rd14620, %rd14562;
	and.b64  	%rd14621, %rd14563, %rd14620;
	xor.b64  	%rd14622, %rd14621, %rd14561;
	not.b64 	%rd14623, %rd14563;
	and.b64  	%rd14624, %rd14559, %rd14623;
	xor.b64  	%rd14625, %rd14624, %rd14562;
	not.b64 	%rd14626, %rd14559;
	and.b64  	%rd14627, %rd14560, %rd14626;
	xor.b64  	%rd14628, %rd14627, %rd14563;
	not.b64 	%rd14629, %rd14565;
	and.b64  	%rd14630, %rd14566, %rd14629;
	xor.b64  	%rd14631, %rd14630, %rd14564;
	not.b64 	%rd14632, %rd14566;
	and.b64  	%rd14633, %rd14567, %rd14632;
	xor.b64  	%rd14634, %rd14633, %rd14565;
	not.b64 	%rd14635, %rd14567;
	and.b64  	%rd14636, %rd14568, %rd14635;
	xor.b64  	%rd14637, %rd14636, %rd14566;
	not.b64 	%rd14638, %rd14568;
	and.b64  	%rd14639, %rd14564, %rd14638;
	xor.b64  	%rd14640, %rd14639, %rd14567;
	not.b64 	%rd14641, %rd14564;
	and.b64  	%rd14642, %rd14565, %rd14641;
	xor.b64  	%rd14643, %rd14642, %rd14568;
	xor.b64  	%rd14644, %rd14571, %rd32;
	xor.b64  	%rd14645, %rd14586, %rd14644;
	xor.b64  	%rd14646, %rd14645, %rd14601;
	xor.b64  	%rd14647, %rd14646, %rd14616;
	xor.b64  	%rd14648, %rd14647, %rd14631;
	xor.b64  	%rd14649, %rd14589, %rd14574;
	xor.b64  	%rd14650, %rd14649, %rd14604;
	xor.b64  	%rd14651, %rd14650, %rd14619;
	xor.b64  	%rd14652, %rd14651, %rd14634;
	xor.b64  	%rd14653, %rd14592, %rd14577;
	xor.b64  	%rd14654, %rd14653, %rd14607;
	xor.b64  	%rd14655, %rd14654, %rd14622;
	xor.b64  	%rd14656, %rd14655, %rd14637;
	xor.b64  	%rd14657, %rd14595, %rd14580;
	xor.b64  	%rd14658, %rd14657, %rd14610;
	xor.b64  	%rd14659, %rd14658, %rd14625;
	xor.b64  	%rd14660, %rd14659, %rd14640;
	xor.b64  	%rd14661, %rd14598, %rd14583;
	xor.b64  	%rd14662, %rd14661, %rd14613;
	xor.b64  	%rd14663, %rd14662, %rd14628;
	xor.b64  	%rd14664, %rd14663, %rd14643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10407}, %rd14652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10408,%dummy}, %rd14652;
	}
	shf.l.wrap.b32 	%r10409, %r10408, %r10407, 1;
	shf.l.wrap.b32 	%r10410, %r10407, %r10408, 1;
	mov.b64 	%rd14665, {%r10410, %r10409};
	xor.b64  	%rd14666, %rd14664, %rd14665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10411}, %rd14656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10412,%dummy}, %rd14656;
	}
	shf.l.wrap.b32 	%r10413, %r10412, %r10411, 1;
	shf.l.wrap.b32 	%r10414, %r10411, %r10412, 1;
	mov.b64 	%rd14667, {%r10414, %r10413};
	xor.b64  	%rd14668, %rd14667, %rd14648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10415}, %rd14660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10416,%dummy}, %rd14660;
	}
	shf.l.wrap.b32 	%r10417, %r10416, %r10415, 1;
	shf.l.wrap.b32 	%r10418, %r10415, %r10416, 1;
	mov.b64 	%rd14669, {%r10418, %r10417};
	xor.b64  	%rd14670, %rd14669, %rd14652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10419}, %rd14664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10420,%dummy}, %rd14664;
	}
	shf.l.wrap.b32 	%r10421, %r10420, %r10419, 1;
	shf.l.wrap.b32 	%r10422, %r10419, %r10420, 1;
	mov.b64 	%rd14671, {%r10422, %r10421};
	xor.b64  	%rd14672, %rd14671, %rd14656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10423}, %rd14648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10424,%dummy}, %rd14648;
	}
	shf.l.wrap.b32 	%r10425, %r10424, %r10423, 1;
	shf.l.wrap.b32 	%r10426, %r10423, %r10424, 1;
	mov.b64 	%rd14673, {%r10426, %r10425};
	xor.b64  	%rd14674, %rd14660, %rd14673;
	xor.b64  	%rd14675, %rd14666, %rd14644;
	xor.b64  	%rd14676, %rd14668, %rd14574;
	xor.b64  	%rd14677, %rd14670, %rd14577;
	xor.b64  	%rd14678, %rd14672, %rd14580;
	xor.b64  	%rd14679, %rd14674, %rd14583;
	xor.b64  	%rd14680, %rd14666, %rd14586;
	xor.b64  	%rd14681, %rd14668, %rd14589;
	xor.b64  	%rd14682, %rd14670, %rd14592;
	xor.b64  	%rd14683, %rd14672, %rd14595;
	xor.b64  	%rd14684, %rd14674, %rd14598;
	xor.b64  	%rd14685, %rd14666, %rd14601;
	xor.b64  	%rd14686, %rd14668, %rd14604;
	xor.b64  	%rd14687, %rd14670, %rd14607;
	xor.b64  	%rd14688, %rd14672, %rd14610;
	xor.b64  	%rd14689, %rd14674, %rd14613;
	xor.b64  	%rd14690, %rd14666, %rd14616;
	xor.b64  	%rd14691, %rd14668, %rd14619;
	xor.b64  	%rd14692, %rd14670, %rd14622;
	xor.b64  	%rd14693, %rd14672, %rd14625;
	xor.b64  	%rd14694, %rd14674, %rd14628;
	xor.b64  	%rd14695, %rd14666, %rd14631;
	xor.b64  	%rd14696, %rd14668, %rd14634;
	xor.b64  	%rd14697, %rd14670, %rd14637;
	xor.b64  	%rd14698, %rd14672, %rd14640;
	xor.b64  	%rd14699, %rd14674, %rd14643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10427,%dummy}, %rd14681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10428}, %rd14681;
	}
	shf.r.wrap.b32 	%r10429, %r10428, %r10427, 20;
	shf.r.wrap.b32 	%r10430, %r10427, %r10428, 20;
	mov.b64 	%rd14700, {%r10430, %r10429};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10431,%dummy}, %rd14687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10432}, %rd14687;
	}
	shf.r.wrap.b32 	%r10433, %r10432, %r10431, 21;
	shf.r.wrap.b32 	%r10434, %r10431, %r10432, 21;
	mov.b64 	%rd14701, {%r10434, %r10433};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10435}, %rd14693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10436,%dummy}, %rd14693;
	}
	shf.l.wrap.b32 	%r10437, %r10436, %r10435, 21;
	shf.l.wrap.b32 	%r10438, %r10435, %r10436, 21;
	mov.b64 	%rd14702, {%r10438, %r10437};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10439}, %rd14699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10440,%dummy}, %rd14699;
	}
	shf.l.wrap.b32 	%r10441, %r10440, %r10439, 14;
	shf.l.wrap.b32 	%r10442, %r10439, %r10440, 14;
	mov.b64 	%rd14703, {%r10442, %r10441};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10443}, %rd14678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10444,%dummy}, %rd14678;
	}
	shf.l.wrap.b32 	%r10445, %r10444, %r10443, 28;
	shf.l.wrap.b32 	%r10446, %r10443, %r10444, 28;
	mov.b64 	%rd14704, {%r10446, %r10445};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10447}, %rd14684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10448,%dummy}, %rd14684;
	}
	shf.l.wrap.b32 	%r10449, %r10448, %r10447, 20;
	shf.l.wrap.b32 	%r10450, %r10447, %r10448, 20;
	mov.b64 	%rd14705, {%r10450, %r10449};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10451}, %rd14685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10452,%dummy}, %rd14685;
	}
	shf.l.wrap.b32 	%r10453, %r10452, %r10451, 3;
	shf.l.wrap.b32 	%r10454, %r10451, %r10452, 3;
	mov.b64 	%rd14706, {%r10454, %r10453};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10455,%dummy}, %rd14691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10456}, %rd14691;
	}
	shf.r.wrap.b32 	%r10457, %r10456, %r10455, 19;
	shf.r.wrap.b32 	%r10458, %r10455, %r10456, 19;
	mov.b64 	%rd14707, {%r10458, %r10457};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10459,%dummy}, %rd14697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10460}, %rd14697;
	}
	shf.r.wrap.b32 	%r10461, %r10460, %r10459, 3;
	shf.r.wrap.b32 	%r10462, %r10459, %r10460, 3;
	mov.b64 	%rd14708, {%r10462, %r10461};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10463}, %rd14676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10464,%dummy}, %rd14676;
	}
	shf.l.wrap.b32 	%r10465, %r10464, %r10463, 1;
	shf.l.wrap.b32 	%r10466, %r10463, %r10464, 1;
	mov.b64 	%rd14709, {%r10466, %r10465};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10467}, %rd14682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10468,%dummy}, %rd14682;
	}
	shf.l.wrap.b32 	%r10469, %r10468, %r10467, 6;
	shf.l.wrap.b32 	%r10470, %r10467, %r10468, 6;
	mov.b64 	%rd14710, {%r10470, %r10469};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10471}, %rd14688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10472,%dummy}, %rd14688;
	}
	shf.l.wrap.b32 	%r10473, %r10472, %r10471, 25;
	shf.l.wrap.b32 	%r10474, %r10471, %r10472, 25;
	mov.b64 	%rd14711, {%r10474, %r10473};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10475}, %rd14694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10476,%dummy}, %rd14694;
	}
	shf.l.wrap.b32 	%r10477, %r10476, %r10475, 8;
	shf.l.wrap.b32 	%r10478, %r10475, %r10476, 8;
	mov.b64 	%rd14712, {%r10478, %r10477};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10479}, %rd14695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10480,%dummy}, %rd14695;
	}
	shf.l.wrap.b32 	%r10481, %r10480, %r10479, 18;
	shf.l.wrap.b32 	%r10482, %r10479, %r10480, 18;
	mov.b64 	%rd14713, {%r10482, %r10481};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10483}, %rd14679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10484,%dummy}, %rd14679;
	}
	shf.l.wrap.b32 	%r10485, %r10484, %r10483, 27;
	shf.l.wrap.b32 	%r10486, %r10483, %r10484, 27;
	mov.b64 	%rd14714, {%r10486, %r10485};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10487,%dummy}, %rd14680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10488}, %rd14680;
	}
	shf.r.wrap.b32 	%r10489, %r10488, %r10487, 28;
	shf.r.wrap.b32 	%r10490, %r10487, %r10488, 28;
	mov.b64 	%rd14715, {%r10490, %r10489};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10491}, %rd14686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10492,%dummy}, %rd14686;
	}
	shf.l.wrap.b32 	%r10493, %r10492, %r10491, 10;
	shf.l.wrap.b32 	%r10494, %r10491, %r10492, 10;
	mov.b64 	%rd14716, {%r10494, %r10493};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10495}, %rd14692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10496,%dummy}, %rd14692;
	}
	shf.l.wrap.b32 	%r10497, %r10496, %r10495, 15;
	shf.l.wrap.b32 	%r10498, %r10495, %r10496, 15;
	mov.b64 	%rd14717, {%r10498, %r10497};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10499,%dummy}, %rd14698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10500}, %rd14698;
	}
	shf.r.wrap.b32 	%r10501, %r10500, %r10499, 8;
	shf.r.wrap.b32 	%r10502, %r10499, %r10500, 8;
	mov.b64 	%rd14718, {%r10502, %r10501};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10503,%dummy}, %rd14677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10504}, %rd14677;
	}
	shf.r.wrap.b32 	%r10505, %r10504, %r10503, 2;
	shf.r.wrap.b32 	%r10506, %r10503, %r10504, 2;
	mov.b64 	%rd14719, {%r10506, %r10505};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10507,%dummy}, %rd14683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10508}, %rd14683;
	}
	shf.r.wrap.b32 	%r10509, %r10508, %r10507, 9;
	shf.r.wrap.b32 	%r10510, %r10507, %r10508, 9;
	mov.b64 	%rd14720, {%r10510, %r10509};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10511,%dummy}, %rd14689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10512}, %rd14689;
	}
	shf.r.wrap.b32 	%r10513, %r10512, %r10511, 25;
	shf.r.wrap.b32 	%r10514, %r10511, %r10512, 25;
	mov.b64 	%rd14721, {%r10514, %r10513};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10515,%dummy}, %rd14690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10516}, %rd14690;
	}
	shf.r.wrap.b32 	%r10517, %r10516, %r10515, 23;
	shf.r.wrap.b32 	%r10518, %r10515, %r10516, 23;
	mov.b64 	%rd14722, {%r10518, %r10517};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10519}, %rd14696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10520,%dummy}, %rd14696;
	}
	shf.l.wrap.b32 	%r10521, %r10520, %r10519, 2;
	shf.l.wrap.b32 	%r10522, %r10519, %r10520, 2;
	mov.b64 	%rd14723, {%r10522, %r10521};
	not.b64 	%rd14724, %rd14700;
	and.b64  	%rd14725, %rd14701, %rd14724;
	xor.b64  	%rd14726, %rd14725, %rd14675;
	not.b64 	%rd14727, %rd14701;
	and.b64  	%rd14728, %rd14702, %rd14727;
	xor.b64  	%rd14729, %rd14728, %rd14700;
	not.b64 	%rd14730, %rd14702;
	and.b64  	%rd14731, %rd14703, %rd14730;
	xor.b64  	%rd14732, %rd14731, %rd14701;
	not.b64 	%rd14733, %rd14703;
	and.b64  	%rd14734, %rd14675, %rd14733;
	xor.b64  	%rd14735, %rd14734, %rd14702;
	not.b64 	%rd14736, %rd14675;
	and.b64  	%rd14737, %rd14700, %rd14736;
	xor.b64  	%rd14738, %rd14737, %rd14703;
	not.b64 	%rd14739, %rd14705;
	and.b64  	%rd14740, %rd14706, %rd14739;
	xor.b64  	%rd14741, %rd14740, %rd14704;
	not.b64 	%rd14742, %rd14706;
	and.b64  	%rd14743, %rd14707, %rd14742;
	xor.b64  	%rd14744, %rd14743, %rd14705;
	not.b64 	%rd14745, %rd14707;
	and.b64  	%rd14746, %rd14708, %rd14745;
	xor.b64  	%rd14747, %rd14746, %rd14706;
	not.b64 	%rd14748, %rd14708;
	and.b64  	%rd14749, %rd14704, %rd14748;
	xor.b64  	%rd14750, %rd14749, %rd14707;
	not.b64 	%rd14751, %rd14704;
	and.b64  	%rd14752, %rd14705, %rd14751;
	xor.b64  	%rd14753, %rd14752, %rd14708;
	not.b64 	%rd14754, %rd14710;
	and.b64  	%rd14755, %rd14711, %rd14754;
	xor.b64  	%rd14756, %rd14755, %rd14709;
	not.b64 	%rd14757, %rd14711;
	and.b64  	%rd14758, %rd14712, %rd14757;
	xor.b64  	%rd14759, %rd14758, %rd14710;
	not.b64 	%rd14760, %rd14712;
	and.b64  	%rd14761, %rd14713, %rd14760;
	xor.b64  	%rd14762, %rd14761, %rd14711;
	not.b64 	%rd14763, %rd14713;
	and.b64  	%rd14764, %rd14709, %rd14763;
	xor.b64  	%rd14765, %rd14764, %rd14712;
	not.b64 	%rd14766, %rd14709;
	and.b64  	%rd14767, %rd14710, %rd14766;
	xor.b64  	%rd14768, %rd14767, %rd14713;
	not.b64 	%rd14769, %rd14715;
	and.b64  	%rd14770, %rd14716, %rd14769;
	xor.b64  	%rd14771, %rd14770, %rd14714;
	not.b64 	%rd14772, %rd14716;
	and.b64  	%rd14773, %rd14717, %rd14772;
	xor.b64  	%rd14774, %rd14773, %rd14715;
	not.b64 	%rd14775, %rd14717;
	and.b64  	%rd14776, %rd14718, %rd14775;
	xor.b64  	%rd14777, %rd14776, %rd14716;
	not.b64 	%rd14778, %rd14718;
	and.b64  	%rd14779, %rd14714, %rd14778;
	xor.b64  	%rd14780, %rd14779, %rd14717;
	not.b64 	%rd14781, %rd14714;
	and.b64  	%rd14782, %rd14715, %rd14781;
	xor.b64  	%rd14783, %rd14782, %rd14718;
	not.b64 	%rd14784, %rd14720;
	and.b64  	%rd14785, %rd14721, %rd14784;
	xor.b64  	%rd14786, %rd14785, %rd14719;
	not.b64 	%rd14787, %rd14721;
	and.b64  	%rd14788, %rd14722, %rd14787;
	xor.b64  	%rd14789, %rd14788, %rd14720;
	not.b64 	%rd14790, %rd14722;
	and.b64  	%rd14791, %rd14723, %rd14790;
	xor.b64  	%rd14792, %rd14791, %rd14721;
	not.b64 	%rd14793, %rd14723;
	and.b64  	%rd14794, %rd14719, %rd14793;
	xor.b64  	%rd14795, %rd14794, %rd14722;
	not.b64 	%rd14796, %rd14719;
	and.b64  	%rd14797, %rd14720, %rd14796;
	xor.b64  	%rd14798, %rd14797, %rd14723;
	xor.b64  	%rd14799, %rd14726, %rd33;
	xor.b64  	%rd14800, %rd14741, %rd14799;
	xor.b64  	%rd14801, %rd14800, %rd14756;
	xor.b64  	%rd14802, %rd14801, %rd14771;
	xor.b64  	%rd14803, %rd14802, %rd14786;
	xor.b64  	%rd14804, %rd14744, %rd14729;
	xor.b64  	%rd14805, %rd14804, %rd14759;
	xor.b64  	%rd14806, %rd14805, %rd14774;
	xor.b64  	%rd14807, %rd14806, %rd14789;
	xor.b64  	%rd14808, %rd14747, %rd14732;
	xor.b64  	%rd14809, %rd14808, %rd14762;
	xor.b64  	%rd14810, %rd14809, %rd14777;
	xor.b64  	%rd14811, %rd14810, %rd14792;
	xor.b64  	%rd14812, %rd14750, %rd14735;
	xor.b64  	%rd14813, %rd14812, %rd14765;
	xor.b64  	%rd14814, %rd14813, %rd14780;
	xor.b64  	%rd14815, %rd14814, %rd14795;
	xor.b64  	%rd14816, %rd14753, %rd14738;
	xor.b64  	%rd14817, %rd14816, %rd14768;
	xor.b64  	%rd14818, %rd14817, %rd14783;
	xor.b64  	%rd14819, %rd14818, %rd14798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10523}, %rd14807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10524,%dummy}, %rd14807;
	}
	shf.l.wrap.b32 	%r10525, %r10524, %r10523, 1;
	shf.l.wrap.b32 	%r10526, %r10523, %r10524, 1;
	mov.b64 	%rd14820, {%r10526, %r10525};
	xor.b64  	%rd14821, %rd14819, %rd14820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10527}, %rd14811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10528,%dummy}, %rd14811;
	}
	shf.l.wrap.b32 	%r10529, %r10528, %r10527, 1;
	shf.l.wrap.b32 	%r10530, %r10527, %r10528, 1;
	mov.b64 	%rd14822, {%r10530, %r10529};
	xor.b64  	%rd14823, %rd14822, %rd14803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10531}, %rd14815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10532,%dummy}, %rd14815;
	}
	shf.l.wrap.b32 	%r10533, %r10532, %r10531, 1;
	shf.l.wrap.b32 	%r10534, %r10531, %r10532, 1;
	mov.b64 	%rd14824, {%r10534, %r10533};
	xor.b64  	%rd14825, %rd14824, %rd14807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10535}, %rd14819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10536,%dummy}, %rd14819;
	}
	shf.l.wrap.b32 	%r10537, %r10536, %r10535, 1;
	shf.l.wrap.b32 	%r10538, %r10535, %r10536, 1;
	mov.b64 	%rd14826, {%r10538, %r10537};
	xor.b64  	%rd14827, %rd14826, %rd14811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10539}, %rd14803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10540,%dummy}, %rd14803;
	}
	shf.l.wrap.b32 	%r10541, %r10540, %r10539, 1;
	shf.l.wrap.b32 	%r10542, %r10539, %r10540, 1;
	mov.b64 	%rd14828, {%r10542, %r10541};
	xor.b64  	%rd14829, %rd14815, %rd14828;
	xor.b64  	%rd14830, %rd14821, %rd14799;
	xor.b64  	%rd14831, %rd14823, %rd14729;
	xor.b64  	%rd14832, %rd14825, %rd14732;
	xor.b64  	%rd14833, %rd14827, %rd14735;
	xor.b64  	%rd14834, %rd14829, %rd14738;
	xor.b64  	%rd14835, %rd14821, %rd14741;
	xor.b64  	%rd14836, %rd14823, %rd14744;
	xor.b64  	%rd14837, %rd14825, %rd14747;
	xor.b64  	%rd14838, %rd14827, %rd14750;
	xor.b64  	%rd14839, %rd14829, %rd14753;
	xor.b64  	%rd14840, %rd14821, %rd14756;
	xor.b64  	%rd14841, %rd14823, %rd14759;
	xor.b64  	%rd14842, %rd14825, %rd14762;
	xor.b64  	%rd14843, %rd14827, %rd14765;
	xor.b64  	%rd14844, %rd14829, %rd14768;
	xor.b64  	%rd14845, %rd14821, %rd14771;
	xor.b64  	%rd14846, %rd14823, %rd14774;
	xor.b64  	%rd14847, %rd14825, %rd14777;
	xor.b64  	%rd14848, %rd14827, %rd14780;
	xor.b64  	%rd14849, %rd14829, %rd14783;
	xor.b64  	%rd14850, %rd14821, %rd14786;
	xor.b64  	%rd14851, %rd14823, %rd14789;
	xor.b64  	%rd14852, %rd14825, %rd14792;
	xor.b64  	%rd14853, %rd14827, %rd14795;
	xor.b64  	%rd14854, %rd14829, %rd14798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10543,%dummy}, %rd14836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10544}, %rd14836;
	}
	shf.r.wrap.b32 	%r10545, %r10544, %r10543, 20;
	shf.r.wrap.b32 	%r10546, %r10543, %r10544, 20;
	mov.b64 	%rd14855, {%r10546, %r10545};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10547,%dummy}, %rd14842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10548}, %rd14842;
	}
	shf.r.wrap.b32 	%r10549, %r10548, %r10547, 21;
	shf.r.wrap.b32 	%r10550, %r10547, %r10548, 21;
	mov.b64 	%rd14856, {%r10550, %r10549};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10551}, %rd14848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10552,%dummy}, %rd14848;
	}
	shf.l.wrap.b32 	%r10553, %r10552, %r10551, 21;
	shf.l.wrap.b32 	%r10554, %r10551, %r10552, 21;
	mov.b64 	%rd14857, {%r10554, %r10553};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10555}, %rd14854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10556,%dummy}, %rd14854;
	}
	shf.l.wrap.b32 	%r10557, %r10556, %r10555, 14;
	shf.l.wrap.b32 	%r10558, %r10555, %r10556, 14;
	mov.b64 	%rd14858, {%r10558, %r10557};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10559}, %rd14833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10560,%dummy}, %rd14833;
	}
	shf.l.wrap.b32 	%r10561, %r10560, %r10559, 28;
	shf.l.wrap.b32 	%r10562, %r10559, %r10560, 28;
	mov.b64 	%rd14859, {%r10562, %r10561};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10563}, %rd14839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10564,%dummy}, %rd14839;
	}
	shf.l.wrap.b32 	%r10565, %r10564, %r10563, 20;
	shf.l.wrap.b32 	%r10566, %r10563, %r10564, 20;
	mov.b64 	%rd14860, {%r10566, %r10565};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10567}, %rd14840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10568,%dummy}, %rd14840;
	}
	shf.l.wrap.b32 	%r10569, %r10568, %r10567, 3;
	shf.l.wrap.b32 	%r10570, %r10567, %r10568, 3;
	mov.b64 	%rd14861, {%r10570, %r10569};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10571,%dummy}, %rd14846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10572}, %rd14846;
	}
	shf.r.wrap.b32 	%r10573, %r10572, %r10571, 19;
	shf.r.wrap.b32 	%r10574, %r10571, %r10572, 19;
	mov.b64 	%rd14862, {%r10574, %r10573};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10575,%dummy}, %rd14852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10576}, %rd14852;
	}
	shf.r.wrap.b32 	%r10577, %r10576, %r10575, 3;
	shf.r.wrap.b32 	%r10578, %r10575, %r10576, 3;
	mov.b64 	%rd14863, {%r10578, %r10577};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10579}, %rd14831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10580,%dummy}, %rd14831;
	}
	shf.l.wrap.b32 	%r10581, %r10580, %r10579, 1;
	shf.l.wrap.b32 	%r10582, %r10579, %r10580, 1;
	mov.b64 	%rd14864, {%r10582, %r10581};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10583}, %rd14837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10584,%dummy}, %rd14837;
	}
	shf.l.wrap.b32 	%r10585, %r10584, %r10583, 6;
	shf.l.wrap.b32 	%r10586, %r10583, %r10584, 6;
	mov.b64 	%rd14865, {%r10586, %r10585};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10587}, %rd14843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10588,%dummy}, %rd14843;
	}
	shf.l.wrap.b32 	%r10589, %r10588, %r10587, 25;
	shf.l.wrap.b32 	%r10590, %r10587, %r10588, 25;
	mov.b64 	%rd14866, {%r10590, %r10589};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10591}, %rd14849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10592,%dummy}, %rd14849;
	}
	shf.l.wrap.b32 	%r10593, %r10592, %r10591, 8;
	shf.l.wrap.b32 	%r10594, %r10591, %r10592, 8;
	mov.b64 	%rd14867, {%r10594, %r10593};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10595}, %rd14850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10596,%dummy}, %rd14850;
	}
	shf.l.wrap.b32 	%r10597, %r10596, %r10595, 18;
	shf.l.wrap.b32 	%r10598, %r10595, %r10596, 18;
	mov.b64 	%rd14868, {%r10598, %r10597};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd14834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10600,%dummy}, %rd14834;
	}
	shf.l.wrap.b32 	%r10601, %r10600, %r10599, 27;
	shf.l.wrap.b32 	%r10602, %r10599, %r10600, 27;
	mov.b64 	%rd14869, {%r10602, %r10601};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10603,%dummy}, %rd14835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10604}, %rd14835;
	}
	shf.r.wrap.b32 	%r10605, %r10604, %r10603, 28;
	shf.r.wrap.b32 	%r10606, %r10603, %r10604, 28;
	mov.b64 	%rd14870, {%r10606, %r10605};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd14841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10608,%dummy}, %rd14841;
	}
	shf.l.wrap.b32 	%r10609, %r10608, %r10607, 10;
	shf.l.wrap.b32 	%r10610, %r10607, %r10608, 10;
	mov.b64 	%rd14871, {%r10610, %r10609};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10611}, %rd14847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10612,%dummy}, %rd14847;
	}
	shf.l.wrap.b32 	%r10613, %r10612, %r10611, 15;
	shf.l.wrap.b32 	%r10614, %r10611, %r10612, 15;
	mov.b64 	%rd14872, {%r10614, %r10613};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10615,%dummy}, %rd14853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10616}, %rd14853;
	}
	shf.r.wrap.b32 	%r10617, %r10616, %r10615, 8;
	shf.r.wrap.b32 	%r10618, %r10615, %r10616, 8;
	mov.b64 	%rd14873, {%r10618, %r10617};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10619,%dummy}, %rd14832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10620}, %rd14832;
	}
	shf.r.wrap.b32 	%r10621, %r10620, %r10619, 2;
	shf.r.wrap.b32 	%r10622, %r10619, %r10620, 2;
	mov.b64 	%rd14874, {%r10622, %r10621};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10623,%dummy}, %rd14838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10624}, %rd14838;
	}
	shf.r.wrap.b32 	%r10625, %r10624, %r10623, 9;
	shf.r.wrap.b32 	%r10626, %r10623, %r10624, 9;
	mov.b64 	%rd14875, {%r10626, %r10625};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10627,%dummy}, %rd14844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10628}, %rd14844;
	}
	shf.r.wrap.b32 	%r10629, %r10628, %r10627, 25;
	shf.r.wrap.b32 	%r10630, %r10627, %r10628, 25;
	mov.b64 	%rd14876, {%r10630, %r10629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10631,%dummy}, %rd14845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10632}, %rd14845;
	}
	shf.r.wrap.b32 	%r10633, %r10632, %r10631, 23;
	shf.r.wrap.b32 	%r10634, %r10631, %r10632, 23;
	mov.b64 	%rd14877, {%r10634, %r10633};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10635}, %rd14851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd14851;
	}
	shf.l.wrap.b32 	%r10637, %r10636, %r10635, 2;
	shf.l.wrap.b32 	%r10638, %r10635, %r10636, 2;
	mov.b64 	%rd14878, {%r10638, %r10637};
	not.b64 	%rd14879, %rd14855;
	and.b64  	%rd14880, %rd14856, %rd14879;
	xor.b64  	%rd14881, %rd14880, %rd14830;
	not.b64 	%rd14882, %rd14856;
	and.b64  	%rd14883, %rd14857, %rd14882;
	xor.b64  	%rd14884, %rd14883, %rd14855;
	not.b64 	%rd14885, %rd14857;
	and.b64  	%rd14886, %rd14858, %rd14885;
	xor.b64  	%rd14887, %rd14886, %rd14856;
	not.b64 	%rd14888, %rd14858;
	and.b64  	%rd14889, %rd14830, %rd14888;
	xor.b64  	%rd14890, %rd14889, %rd14857;
	not.b64 	%rd14891, %rd14830;
	and.b64  	%rd14892, %rd14855, %rd14891;
	xor.b64  	%rd14893, %rd14892, %rd14858;
	not.b64 	%rd14894, %rd14860;
	and.b64  	%rd14895, %rd14861, %rd14894;
	xor.b64  	%rd14896, %rd14895, %rd14859;
	not.b64 	%rd14897, %rd14861;
	and.b64  	%rd14898, %rd14862, %rd14897;
	xor.b64  	%rd14899, %rd14898, %rd14860;
	not.b64 	%rd14900, %rd14862;
	and.b64  	%rd14901, %rd14863, %rd14900;
	xor.b64  	%rd14902, %rd14901, %rd14861;
	not.b64 	%rd14903, %rd14863;
	and.b64  	%rd14904, %rd14859, %rd14903;
	xor.b64  	%rd14905, %rd14904, %rd14862;
	not.b64 	%rd14906, %rd14859;
	and.b64  	%rd14907, %rd14860, %rd14906;
	xor.b64  	%rd14908, %rd14907, %rd14863;
	not.b64 	%rd14909, %rd14865;
	and.b64  	%rd14910, %rd14866, %rd14909;
	xor.b64  	%rd14911, %rd14910, %rd14864;
	not.b64 	%rd14912, %rd14866;
	and.b64  	%rd14913, %rd14867, %rd14912;
	xor.b64  	%rd14914, %rd14913, %rd14865;
	not.b64 	%rd14915, %rd14867;
	and.b64  	%rd14916, %rd14868, %rd14915;
	xor.b64  	%rd14917, %rd14916, %rd14866;
	not.b64 	%rd14918, %rd14868;
	and.b64  	%rd14919, %rd14864, %rd14918;
	xor.b64  	%rd14920, %rd14919, %rd14867;
	not.b64 	%rd14921, %rd14864;
	and.b64  	%rd14922, %rd14865, %rd14921;
	xor.b64  	%rd14923, %rd14922, %rd14868;
	not.b64 	%rd14924, %rd14870;
	and.b64  	%rd14925, %rd14871, %rd14924;
	xor.b64  	%rd14926, %rd14925, %rd14869;
	not.b64 	%rd14927, %rd14871;
	and.b64  	%rd14928, %rd14872, %rd14927;
	xor.b64  	%rd14929, %rd14928, %rd14870;
	not.b64 	%rd14930, %rd14872;
	and.b64  	%rd14931, %rd14873, %rd14930;
	xor.b64  	%rd14932, %rd14931, %rd14871;
	not.b64 	%rd14933, %rd14873;
	and.b64  	%rd14934, %rd14869, %rd14933;
	xor.b64  	%rd14935, %rd14934, %rd14872;
	not.b64 	%rd14936, %rd14869;
	and.b64  	%rd14937, %rd14870, %rd14936;
	xor.b64  	%rd14938, %rd14937, %rd14873;
	not.b64 	%rd14939, %rd14875;
	and.b64  	%rd14940, %rd14876, %rd14939;
	xor.b64  	%rd14941, %rd14940, %rd14874;
	not.b64 	%rd14942, %rd14876;
	and.b64  	%rd14943, %rd14877, %rd14942;
	xor.b64  	%rd14944, %rd14943, %rd14875;
	not.b64 	%rd14945, %rd14877;
	and.b64  	%rd14946, %rd14878, %rd14945;
	xor.b64  	%rd14947, %rd14946, %rd14876;
	not.b64 	%rd14948, %rd14878;
	and.b64  	%rd14949, %rd14874, %rd14948;
	xor.b64  	%rd14950, %rd14949, %rd14877;
	not.b64 	%rd14951, %rd14874;
	and.b64  	%rd14952, %rd14875, %rd14951;
	xor.b64  	%rd14953, %rd14952, %rd14878;
	xor.b64  	%rd14954, %rd14881, %rd34;
	xor.b64  	%rd14955, %rd14896, %rd14954;
	xor.b64  	%rd14956, %rd14955, %rd14911;
	xor.b64  	%rd14957, %rd14956, %rd14926;
	xor.b64  	%rd14958, %rd14957, %rd14941;
	xor.b64  	%rd14959, %rd14899, %rd14884;
	xor.b64  	%rd14960, %rd14959, %rd14914;
	xor.b64  	%rd14961, %rd14960, %rd14929;
	xor.b64  	%rd14962, %rd14961, %rd14944;
	xor.b64  	%rd14963, %rd14902, %rd14887;
	xor.b64  	%rd14964, %rd14963, %rd14917;
	xor.b64  	%rd14965, %rd14964, %rd14932;
	xor.b64  	%rd14966, %rd14965, %rd14947;
	xor.b64  	%rd14967, %rd14905, %rd14890;
	xor.b64  	%rd14968, %rd14967, %rd14920;
	xor.b64  	%rd14969, %rd14968, %rd14935;
	xor.b64  	%rd14970, %rd14969, %rd14950;
	xor.b64  	%rd14971, %rd14908, %rd14893;
	xor.b64  	%rd14972, %rd14971, %rd14923;
	xor.b64  	%rd14973, %rd14972, %rd14938;
	xor.b64  	%rd14974, %rd14973, %rd14953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10639}, %rd14962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10640,%dummy}, %rd14962;
	}
	shf.l.wrap.b32 	%r10641, %r10640, %r10639, 1;
	shf.l.wrap.b32 	%r10642, %r10639, %r10640, 1;
	mov.b64 	%rd14975, {%r10642, %r10641};
	xor.b64  	%rd14976, %rd14974, %rd14975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10643}, %rd14966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10644,%dummy}, %rd14966;
	}
	shf.l.wrap.b32 	%r10645, %r10644, %r10643, 1;
	shf.l.wrap.b32 	%r10646, %r10643, %r10644, 1;
	mov.b64 	%rd14977, {%r10646, %r10645};
	xor.b64  	%rd14978, %rd14977, %rd14958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10647}, %rd14970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10648,%dummy}, %rd14970;
	}
	shf.l.wrap.b32 	%r10649, %r10648, %r10647, 1;
	shf.l.wrap.b32 	%r10650, %r10647, %r10648, 1;
	mov.b64 	%rd14979, {%r10650, %r10649};
	xor.b64  	%rd14980, %rd14979, %rd14962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10651}, %rd14974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10652,%dummy}, %rd14974;
	}
	shf.l.wrap.b32 	%r10653, %r10652, %r10651, 1;
	shf.l.wrap.b32 	%r10654, %r10651, %r10652, 1;
	mov.b64 	%rd14981, {%r10654, %r10653};
	xor.b64  	%rd14982, %rd14981, %rd14966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd14958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10656,%dummy}, %rd14958;
	}
	shf.l.wrap.b32 	%r10657, %r10656, %r10655, 1;
	shf.l.wrap.b32 	%r10658, %r10655, %r10656, 1;
	mov.b64 	%rd14983, {%r10658, %r10657};
	xor.b64  	%rd14984, %rd14970, %rd14983;
	xor.b64  	%rd14985, %rd14976, %rd14954;
	xor.b64  	%rd14986, %rd14978, %rd14884;
	xor.b64  	%rd14987, %rd14980, %rd14887;
	xor.b64  	%rd14988, %rd14982, %rd14890;
	xor.b64  	%rd14989, %rd14984, %rd14893;
	xor.b64  	%rd14990, %rd14976, %rd14896;
	xor.b64  	%rd14991, %rd14978, %rd14899;
	xor.b64  	%rd14992, %rd14980, %rd14902;
	xor.b64  	%rd14993, %rd14982, %rd14905;
	xor.b64  	%rd14994, %rd14984, %rd14908;
	xor.b64  	%rd14995, %rd14976, %rd14911;
	xor.b64  	%rd14996, %rd14978, %rd14914;
	xor.b64  	%rd14997, %rd14980, %rd14917;
	xor.b64  	%rd14998, %rd14982, %rd14920;
	xor.b64  	%rd14999, %rd14984, %rd14923;
	xor.b64  	%rd15000, %rd14976, %rd14926;
	xor.b64  	%rd15001, %rd14978, %rd14929;
	xor.b64  	%rd15002, %rd14980, %rd14932;
	xor.b64  	%rd15003, %rd14982, %rd14935;
	xor.b64  	%rd15004, %rd14984, %rd14938;
	xor.b64  	%rd15005, %rd14976, %rd14941;
	xor.b64  	%rd15006, %rd14978, %rd14944;
	xor.b64  	%rd15007, %rd14980, %rd14947;
	xor.b64  	%rd15008, %rd14982, %rd14950;
	xor.b64  	%rd15009, %rd14984, %rd14953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10659,%dummy}, %rd14991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10660}, %rd14991;
	}
	shf.r.wrap.b32 	%r10661, %r10660, %r10659, 20;
	shf.r.wrap.b32 	%r10662, %r10659, %r10660, 20;
	mov.b64 	%rd15010, {%r10662, %r10661};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10663,%dummy}, %rd14997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10664}, %rd14997;
	}
	shf.r.wrap.b32 	%r10665, %r10664, %r10663, 21;
	shf.r.wrap.b32 	%r10666, %r10663, %r10664, 21;
	mov.b64 	%rd15011, {%r10666, %r10665};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10667}, %rd15003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10668,%dummy}, %rd15003;
	}
	shf.l.wrap.b32 	%r10669, %r10668, %r10667, 21;
	shf.l.wrap.b32 	%r10670, %r10667, %r10668, 21;
	mov.b64 	%rd15012, {%r10670, %r10669};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10671}, %rd15009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10672,%dummy}, %rd15009;
	}
	shf.l.wrap.b32 	%r10673, %r10672, %r10671, 14;
	shf.l.wrap.b32 	%r10674, %r10671, %r10672, 14;
	mov.b64 	%rd15013, {%r10674, %r10673};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10675}, %rd14988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10676,%dummy}, %rd14988;
	}
	shf.l.wrap.b32 	%r10677, %r10676, %r10675, 28;
	shf.l.wrap.b32 	%r10678, %r10675, %r10676, 28;
	mov.b64 	%rd15014, {%r10678, %r10677};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd14994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10680,%dummy}, %rd14994;
	}
	shf.l.wrap.b32 	%r10681, %r10680, %r10679, 20;
	shf.l.wrap.b32 	%r10682, %r10679, %r10680, 20;
	mov.b64 	%rd15015, {%r10682, %r10681};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10683}, %rd14995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10684,%dummy}, %rd14995;
	}
	shf.l.wrap.b32 	%r10685, %r10684, %r10683, 3;
	shf.l.wrap.b32 	%r10686, %r10683, %r10684, 3;
	mov.b64 	%rd15016, {%r10686, %r10685};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10687,%dummy}, %rd15001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10688}, %rd15001;
	}
	shf.r.wrap.b32 	%r10689, %r10688, %r10687, 19;
	shf.r.wrap.b32 	%r10690, %r10687, %r10688, 19;
	mov.b64 	%rd15017, {%r10690, %r10689};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10691,%dummy}, %rd15007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10692}, %rd15007;
	}
	shf.r.wrap.b32 	%r10693, %r10692, %r10691, 3;
	shf.r.wrap.b32 	%r10694, %r10691, %r10692, 3;
	mov.b64 	%rd15018, {%r10694, %r10693};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10695}, %rd14986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10696,%dummy}, %rd14986;
	}
	shf.l.wrap.b32 	%r10697, %r10696, %r10695, 1;
	shf.l.wrap.b32 	%r10698, %r10695, %r10696, 1;
	mov.b64 	%rd15019, {%r10698, %r10697};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10699}, %rd14992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10700,%dummy}, %rd14992;
	}
	shf.l.wrap.b32 	%r10701, %r10700, %r10699, 6;
	shf.l.wrap.b32 	%r10702, %r10699, %r10700, 6;
	mov.b64 	%rd15020, {%r10702, %r10701};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd14998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10704,%dummy}, %rd14998;
	}
	shf.l.wrap.b32 	%r10705, %r10704, %r10703, 25;
	shf.l.wrap.b32 	%r10706, %r10703, %r10704, 25;
	mov.b64 	%rd15021, {%r10706, %r10705};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10707}, %rd15004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10708,%dummy}, %rd15004;
	}
	shf.l.wrap.b32 	%r10709, %r10708, %r10707, 8;
	shf.l.wrap.b32 	%r10710, %r10707, %r10708, 8;
	mov.b64 	%rd15022, {%r10710, %r10709};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10711}, %rd15005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10712,%dummy}, %rd15005;
	}
	shf.l.wrap.b32 	%r10713, %r10712, %r10711, 18;
	shf.l.wrap.b32 	%r10714, %r10711, %r10712, 18;
	mov.b64 	%rd15023, {%r10714, %r10713};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10715}, %rd14989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10716,%dummy}, %rd14989;
	}
	shf.l.wrap.b32 	%r10717, %r10716, %r10715, 27;
	shf.l.wrap.b32 	%r10718, %r10715, %r10716, 27;
	mov.b64 	%rd15024, {%r10718, %r10717};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10719,%dummy}, %rd14990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10720}, %rd14990;
	}
	shf.r.wrap.b32 	%r10721, %r10720, %r10719, 28;
	shf.r.wrap.b32 	%r10722, %r10719, %r10720, 28;
	mov.b64 	%rd15025, {%r10722, %r10721};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10723}, %rd14996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10724,%dummy}, %rd14996;
	}
	shf.l.wrap.b32 	%r10725, %r10724, %r10723, 10;
	shf.l.wrap.b32 	%r10726, %r10723, %r10724, 10;
	mov.b64 	%rd15026, {%r10726, %r10725};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10727}, %rd15002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10728,%dummy}, %rd15002;
	}
	shf.l.wrap.b32 	%r10729, %r10728, %r10727, 15;
	shf.l.wrap.b32 	%r10730, %r10727, %r10728, 15;
	mov.b64 	%rd15027, {%r10730, %r10729};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10731,%dummy}, %rd15008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10732}, %rd15008;
	}
	shf.r.wrap.b32 	%r10733, %r10732, %r10731, 8;
	shf.r.wrap.b32 	%r10734, %r10731, %r10732, 8;
	mov.b64 	%rd15028, {%r10734, %r10733};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10735,%dummy}, %rd14987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10736}, %rd14987;
	}
	shf.r.wrap.b32 	%r10737, %r10736, %r10735, 2;
	shf.r.wrap.b32 	%r10738, %r10735, %r10736, 2;
	mov.b64 	%rd15029, {%r10738, %r10737};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10739,%dummy}, %rd14993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10740}, %rd14993;
	}
	shf.r.wrap.b32 	%r10741, %r10740, %r10739, 9;
	shf.r.wrap.b32 	%r10742, %r10739, %r10740, 9;
	mov.b64 	%rd15030, {%r10742, %r10741};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10743,%dummy}, %rd14999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10744}, %rd14999;
	}
	shf.r.wrap.b32 	%r10745, %r10744, %r10743, 25;
	shf.r.wrap.b32 	%r10746, %r10743, %r10744, 25;
	mov.b64 	%rd15031, {%r10746, %r10745};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10747,%dummy}, %rd15000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10748}, %rd15000;
	}
	shf.r.wrap.b32 	%r10749, %r10748, %r10747, 23;
	shf.r.wrap.b32 	%r10750, %r10747, %r10748, 23;
	mov.b64 	%rd15032, {%r10750, %r10749};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10751}, %rd15006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10752,%dummy}, %rd15006;
	}
	shf.l.wrap.b32 	%r10753, %r10752, %r10751, 2;
	shf.l.wrap.b32 	%r10754, %r10751, %r10752, 2;
	mov.b64 	%rd15033, {%r10754, %r10753};
	not.b64 	%rd15034, %rd15010;
	and.b64  	%rd15035, %rd15011, %rd15034;
	xor.b64  	%rd15036, %rd15035, %rd14985;
	not.b64 	%rd15037, %rd15011;
	and.b64  	%rd15038, %rd15012, %rd15037;
	xor.b64  	%rd15039, %rd15038, %rd15010;
	not.b64 	%rd15040, %rd15012;
	and.b64  	%rd15041, %rd15013, %rd15040;
	xor.b64  	%rd15042, %rd15041, %rd15011;
	not.b64 	%rd15043, %rd15013;
	and.b64  	%rd15044, %rd14985, %rd15043;
	xor.b64  	%rd15045, %rd15044, %rd15012;
	not.b64 	%rd15046, %rd14985;
	and.b64  	%rd15047, %rd15010, %rd15046;
	xor.b64  	%rd15048, %rd15047, %rd15013;
	not.b64 	%rd15049, %rd15015;
	and.b64  	%rd15050, %rd15016, %rd15049;
	xor.b64  	%rd15051, %rd15050, %rd15014;
	not.b64 	%rd15052, %rd15016;
	and.b64  	%rd15053, %rd15017, %rd15052;
	xor.b64  	%rd15054, %rd15053, %rd15015;
	not.b64 	%rd15055, %rd15017;
	and.b64  	%rd15056, %rd15018, %rd15055;
	xor.b64  	%rd15057, %rd15056, %rd15016;
	not.b64 	%rd15058, %rd15018;
	and.b64  	%rd15059, %rd15014, %rd15058;
	xor.b64  	%rd15060, %rd15059, %rd15017;
	not.b64 	%rd15061, %rd15014;
	and.b64  	%rd15062, %rd15015, %rd15061;
	xor.b64  	%rd15063, %rd15062, %rd15018;
	not.b64 	%rd15064, %rd15020;
	and.b64  	%rd15065, %rd15021, %rd15064;
	xor.b64  	%rd15066, %rd15065, %rd15019;
	not.b64 	%rd15067, %rd15021;
	and.b64  	%rd15068, %rd15022, %rd15067;
	xor.b64  	%rd15069, %rd15068, %rd15020;
	not.b64 	%rd15070, %rd15022;
	and.b64  	%rd15071, %rd15023, %rd15070;
	xor.b64  	%rd15072, %rd15071, %rd15021;
	not.b64 	%rd15073, %rd15023;
	and.b64  	%rd15074, %rd15019, %rd15073;
	xor.b64  	%rd15075, %rd15074, %rd15022;
	not.b64 	%rd15076, %rd15019;
	and.b64  	%rd15077, %rd15020, %rd15076;
	xor.b64  	%rd15078, %rd15077, %rd15023;
	not.b64 	%rd15079, %rd15025;
	and.b64  	%rd15080, %rd15026, %rd15079;
	xor.b64  	%rd15081, %rd15080, %rd15024;
	not.b64 	%rd15082, %rd15026;
	and.b64  	%rd15083, %rd15027, %rd15082;
	xor.b64  	%rd15084, %rd15083, %rd15025;
	not.b64 	%rd15085, %rd15027;
	and.b64  	%rd15086, %rd15028, %rd15085;
	xor.b64  	%rd15087, %rd15086, %rd15026;
	not.b64 	%rd15088, %rd15028;
	and.b64  	%rd15089, %rd15024, %rd15088;
	xor.b64  	%rd15090, %rd15089, %rd15027;
	not.b64 	%rd15091, %rd15024;
	and.b64  	%rd15092, %rd15025, %rd15091;
	xor.b64  	%rd15093, %rd15092, %rd15028;
	not.b64 	%rd15094, %rd15030;
	and.b64  	%rd15095, %rd15031, %rd15094;
	xor.b64  	%rd15096, %rd15095, %rd15029;
	not.b64 	%rd15097, %rd15031;
	and.b64  	%rd15098, %rd15032, %rd15097;
	xor.b64  	%rd15099, %rd15098, %rd15030;
	not.b64 	%rd15100, %rd15032;
	and.b64  	%rd15101, %rd15033, %rd15100;
	xor.b64  	%rd15102, %rd15101, %rd15031;
	not.b64 	%rd15103, %rd15033;
	and.b64  	%rd15104, %rd15029, %rd15103;
	xor.b64  	%rd15105, %rd15104, %rd15032;
	not.b64 	%rd15106, %rd15029;
	and.b64  	%rd15107, %rd15030, %rd15106;
	xor.b64  	%rd15108, %rd15107, %rd15033;
	xor.b64  	%rd15109, %rd15036, %rd35;
	xor.b64  	%rd15110, %rd15051, %rd15109;
	xor.b64  	%rd15111, %rd15110, %rd15066;
	xor.b64  	%rd15112, %rd15111, %rd15081;
	xor.b64  	%rd15113, %rd15112, %rd15096;
	xor.b64  	%rd15114, %rd15054, %rd15039;
	xor.b64  	%rd15115, %rd15114, %rd15069;
	xor.b64  	%rd15116, %rd15115, %rd15084;
	xor.b64  	%rd15117, %rd15116, %rd15099;
	xor.b64  	%rd15118, %rd15057, %rd15042;
	xor.b64  	%rd15119, %rd15118, %rd15072;
	xor.b64  	%rd15120, %rd15119, %rd15087;
	xor.b64  	%rd15121, %rd15120, %rd15102;
	xor.b64  	%rd15122, %rd15060, %rd15045;
	xor.b64  	%rd15123, %rd15122, %rd15075;
	xor.b64  	%rd15124, %rd15123, %rd15090;
	xor.b64  	%rd15125, %rd15124, %rd15105;
	xor.b64  	%rd15126, %rd15063, %rd15048;
	xor.b64  	%rd15127, %rd15126, %rd15078;
	xor.b64  	%rd15128, %rd15127, %rd15093;
	xor.b64  	%rd15129, %rd15128, %rd15108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10755}, %rd15117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10756,%dummy}, %rd15117;
	}
	shf.l.wrap.b32 	%r10757, %r10756, %r10755, 1;
	shf.l.wrap.b32 	%r10758, %r10755, %r10756, 1;
	mov.b64 	%rd15130, {%r10758, %r10757};
	xor.b64  	%rd15131, %rd15129, %rd15130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10759}, %rd15121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10760,%dummy}, %rd15121;
	}
	shf.l.wrap.b32 	%r10761, %r10760, %r10759, 1;
	shf.l.wrap.b32 	%r10762, %r10759, %r10760, 1;
	mov.b64 	%rd15132, {%r10762, %r10761};
	xor.b64  	%rd15133, %rd15132, %rd15113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10763}, %rd15125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10764,%dummy}, %rd15125;
	}
	shf.l.wrap.b32 	%r10765, %r10764, %r10763, 1;
	shf.l.wrap.b32 	%r10766, %r10763, %r10764, 1;
	mov.b64 	%rd15134, {%r10766, %r10765};
	xor.b64  	%rd15135, %rd15134, %rd15117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10767}, %rd15129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10768,%dummy}, %rd15129;
	}
	shf.l.wrap.b32 	%r10769, %r10768, %r10767, 1;
	shf.l.wrap.b32 	%r10770, %r10767, %r10768, 1;
	mov.b64 	%rd15136, {%r10770, %r10769};
	xor.b64  	%rd15137, %rd15136, %rd15121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10771}, %rd15113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10772,%dummy}, %rd15113;
	}
	shf.l.wrap.b32 	%r10773, %r10772, %r10771, 1;
	shf.l.wrap.b32 	%r10774, %r10771, %r10772, 1;
	mov.b64 	%rd15138, {%r10774, %r10773};
	xor.b64  	%rd15139, %rd15125, %rd15138;
	xor.b64  	%rd15140, %rd15131, %rd15109;
	xor.b64  	%rd15141, %rd15133, %rd15039;
	xor.b64  	%rd15142, %rd15135, %rd15042;
	xor.b64  	%rd15143, %rd15137, %rd15045;
	xor.b64  	%rd15144, %rd15139, %rd15048;
	xor.b64  	%rd15145, %rd15131, %rd15051;
	xor.b64  	%rd15146, %rd15133, %rd15054;
	xor.b64  	%rd15147, %rd15135, %rd15057;
	xor.b64  	%rd15148, %rd15137, %rd15060;
	xor.b64  	%rd15149, %rd15139, %rd15063;
	xor.b64  	%rd15150, %rd15131, %rd15066;
	xor.b64  	%rd15151, %rd15133, %rd15069;
	xor.b64  	%rd15152, %rd15135, %rd15072;
	xor.b64  	%rd15153, %rd15137, %rd15075;
	xor.b64  	%rd15154, %rd15139, %rd15078;
	xor.b64  	%rd15155, %rd15131, %rd15081;
	xor.b64  	%rd15156, %rd15133, %rd15084;
	xor.b64  	%rd15157, %rd15135, %rd15087;
	xor.b64  	%rd15158, %rd15137, %rd15090;
	xor.b64  	%rd15159, %rd15139, %rd15093;
	xor.b64  	%rd15160, %rd15131, %rd15096;
	xor.b64  	%rd15161, %rd15133, %rd15099;
	xor.b64  	%rd15162, %rd15135, %rd15102;
	xor.b64  	%rd15163, %rd15137, %rd15105;
	xor.b64  	%rd15164, %rd15139, %rd15108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10775,%dummy}, %rd15146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10776}, %rd15146;
	}
	shf.r.wrap.b32 	%r10777, %r10776, %r10775, 20;
	shf.r.wrap.b32 	%r10778, %r10775, %r10776, 20;
	mov.b64 	%rd15165, {%r10778, %r10777};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10779,%dummy}, %rd15152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10780}, %rd15152;
	}
	shf.r.wrap.b32 	%r10781, %r10780, %r10779, 21;
	shf.r.wrap.b32 	%r10782, %r10779, %r10780, 21;
	mov.b64 	%rd15166, {%r10782, %r10781};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd15158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10784,%dummy}, %rd15158;
	}
	shf.l.wrap.b32 	%r10785, %r10784, %r10783, 21;
	shf.l.wrap.b32 	%r10786, %r10783, %r10784, 21;
	mov.b64 	%rd15167, {%r10786, %r10785};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10787}, %rd15164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10788,%dummy}, %rd15164;
	}
	shf.l.wrap.b32 	%r10789, %r10788, %r10787, 14;
	shf.l.wrap.b32 	%r10790, %r10787, %r10788, 14;
	mov.b64 	%rd15168, {%r10790, %r10789};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10791}, %rd15143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10792,%dummy}, %rd15143;
	}
	shf.l.wrap.b32 	%r10793, %r10792, %r10791, 28;
	shf.l.wrap.b32 	%r10794, %r10791, %r10792, 28;
	mov.b64 	%rd15169, {%r10794, %r10793};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10795}, %rd15149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10796,%dummy}, %rd15149;
	}
	shf.l.wrap.b32 	%r10797, %r10796, %r10795, 20;
	shf.l.wrap.b32 	%r10798, %r10795, %r10796, 20;
	mov.b64 	%rd15170, {%r10798, %r10797};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10799}, %rd15150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10800,%dummy}, %rd15150;
	}
	shf.l.wrap.b32 	%r10801, %r10800, %r10799, 3;
	shf.l.wrap.b32 	%r10802, %r10799, %r10800, 3;
	mov.b64 	%rd15171, {%r10802, %r10801};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10803,%dummy}, %rd15156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10804}, %rd15156;
	}
	shf.r.wrap.b32 	%r10805, %r10804, %r10803, 19;
	shf.r.wrap.b32 	%r10806, %r10803, %r10804, 19;
	mov.b64 	%rd15172, {%r10806, %r10805};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10807,%dummy}, %rd15162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10808}, %rd15162;
	}
	shf.r.wrap.b32 	%r10809, %r10808, %r10807, 3;
	shf.r.wrap.b32 	%r10810, %r10807, %r10808, 3;
	mov.b64 	%rd15173, {%r10810, %r10809};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10811}, %rd15141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10812,%dummy}, %rd15141;
	}
	shf.l.wrap.b32 	%r10813, %r10812, %r10811, 1;
	shf.l.wrap.b32 	%r10814, %r10811, %r10812, 1;
	mov.b64 	%rd15174, {%r10814, %r10813};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10815}, %rd15147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10816,%dummy}, %rd15147;
	}
	shf.l.wrap.b32 	%r10817, %r10816, %r10815, 6;
	shf.l.wrap.b32 	%r10818, %r10815, %r10816, 6;
	mov.b64 	%rd15175, {%r10818, %r10817};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10819}, %rd15153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10820,%dummy}, %rd15153;
	}
	shf.l.wrap.b32 	%r10821, %r10820, %r10819, 25;
	shf.l.wrap.b32 	%r10822, %r10819, %r10820, 25;
	mov.b64 	%rd15176, {%r10822, %r10821};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10823}, %rd15159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10824,%dummy}, %rd15159;
	}
	shf.l.wrap.b32 	%r10825, %r10824, %r10823, 8;
	shf.l.wrap.b32 	%r10826, %r10823, %r10824, 8;
	mov.b64 	%rd15177, {%r10826, %r10825};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10827}, %rd15160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10828,%dummy}, %rd15160;
	}
	shf.l.wrap.b32 	%r10829, %r10828, %r10827, 18;
	shf.l.wrap.b32 	%r10830, %r10827, %r10828, 18;
	mov.b64 	%rd15178, {%r10830, %r10829};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10831}, %rd15144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10832,%dummy}, %rd15144;
	}
	shf.l.wrap.b32 	%r10833, %r10832, %r10831, 27;
	shf.l.wrap.b32 	%r10834, %r10831, %r10832, 27;
	mov.b64 	%rd15179, {%r10834, %r10833};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10835,%dummy}, %rd15145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10836}, %rd15145;
	}
	shf.r.wrap.b32 	%r10837, %r10836, %r10835, 28;
	shf.r.wrap.b32 	%r10838, %r10835, %r10836, 28;
	mov.b64 	%rd15180, {%r10838, %r10837};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10839}, %rd15151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10840,%dummy}, %rd15151;
	}
	shf.l.wrap.b32 	%r10841, %r10840, %r10839, 10;
	shf.l.wrap.b32 	%r10842, %r10839, %r10840, 10;
	mov.b64 	%rd15181, {%r10842, %r10841};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10843}, %rd15157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10844,%dummy}, %rd15157;
	}
	shf.l.wrap.b32 	%r10845, %r10844, %r10843, 15;
	shf.l.wrap.b32 	%r10846, %r10843, %r10844, 15;
	mov.b64 	%rd15182, {%r10846, %r10845};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10847,%dummy}, %rd15163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10848}, %rd15163;
	}
	shf.r.wrap.b32 	%r10849, %r10848, %r10847, 8;
	shf.r.wrap.b32 	%r10850, %r10847, %r10848, 8;
	mov.b64 	%rd15183, {%r10850, %r10849};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10851,%dummy}, %rd15142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10852}, %rd15142;
	}
	shf.r.wrap.b32 	%r10853, %r10852, %r10851, 2;
	shf.r.wrap.b32 	%r10854, %r10851, %r10852, 2;
	mov.b64 	%rd15184, {%r10854, %r10853};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10855,%dummy}, %rd15148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10856}, %rd15148;
	}
	shf.r.wrap.b32 	%r10857, %r10856, %r10855, 9;
	shf.r.wrap.b32 	%r10858, %r10855, %r10856, 9;
	mov.b64 	%rd15185, {%r10858, %r10857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10859,%dummy}, %rd15154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10860}, %rd15154;
	}
	shf.r.wrap.b32 	%r10861, %r10860, %r10859, 25;
	shf.r.wrap.b32 	%r10862, %r10859, %r10860, 25;
	mov.b64 	%rd15186, {%r10862, %r10861};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10863,%dummy}, %rd15155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10864}, %rd15155;
	}
	shf.r.wrap.b32 	%r10865, %r10864, %r10863, 23;
	shf.r.wrap.b32 	%r10866, %r10863, %r10864, 23;
	mov.b64 	%rd15187, {%r10866, %r10865};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10867}, %rd15161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10868,%dummy}, %rd15161;
	}
	shf.l.wrap.b32 	%r10869, %r10868, %r10867, 2;
	shf.l.wrap.b32 	%r10870, %r10867, %r10868, 2;
	mov.b64 	%rd15188, {%r10870, %r10869};
	not.b64 	%rd15189, %rd15165;
	and.b64  	%rd15190, %rd15166, %rd15189;
	xor.b64  	%rd15191, %rd15190, %rd15140;
	not.b64 	%rd15192, %rd15166;
	and.b64  	%rd15193, %rd15167, %rd15192;
	xor.b64  	%rd15194, %rd15193, %rd15165;
	not.b64 	%rd15195, %rd15167;
	and.b64  	%rd15196, %rd15168, %rd15195;
	xor.b64  	%rd15197, %rd15196, %rd15166;
	not.b64 	%rd15198, %rd15168;
	and.b64  	%rd15199, %rd15140, %rd15198;
	xor.b64  	%rd15200, %rd15199, %rd15167;
	not.b64 	%rd15201, %rd15140;
	and.b64  	%rd15202, %rd15165, %rd15201;
	xor.b64  	%rd15203, %rd15202, %rd15168;
	not.b64 	%rd15204, %rd15170;
	and.b64  	%rd15205, %rd15171, %rd15204;
	xor.b64  	%rd15206, %rd15205, %rd15169;
	not.b64 	%rd15207, %rd15171;
	and.b64  	%rd15208, %rd15172, %rd15207;
	xor.b64  	%rd15209, %rd15208, %rd15170;
	not.b64 	%rd15210, %rd15172;
	and.b64  	%rd15211, %rd15173, %rd15210;
	xor.b64  	%rd15212, %rd15211, %rd15171;
	not.b64 	%rd15213, %rd15173;
	and.b64  	%rd15214, %rd15169, %rd15213;
	xor.b64  	%rd15215, %rd15214, %rd15172;
	not.b64 	%rd15216, %rd15169;
	and.b64  	%rd15217, %rd15170, %rd15216;
	xor.b64  	%rd15218, %rd15217, %rd15173;
	not.b64 	%rd15219, %rd15175;
	and.b64  	%rd15220, %rd15176, %rd15219;
	xor.b64  	%rd15221, %rd15220, %rd15174;
	not.b64 	%rd15222, %rd15176;
	and.b64  	%rd15223, %rd15177, %rd15222;
	xor.b64  	%rd15224, %rd15223, %rd15175;
	not.b64 	%rd15225, %rd15177;
	and.b64  	%rd15226, %rd15178, %rd15225;
	xor.b64  	%rd15227, %rd15226, %rd15176;
	not.b64 	%rd15228, %rd15178;
	and.b64  	%rd15229, %rd15174, %rd15228;
	xor.b64  	%rd15230, %rd15229, %rd15177;
	not.b64 	%rd15231, %rd15174;
	and.b64  	%rd15232, %rd15175, %rd15231;
	xor.b64  	%rd15233, %rd15232, %rd15178;
	not.b64 	%rd15234, %rd15180;
	and.b64  	%rd15235, %rd15181, %rd15234;
	xor.b64  	%rd15236, %rd15235, %rd15179;
	not.b64 	%rd15237, %rd15181;
	and.b64  	%rd15238, %rd15182, %rd15237;
	xor.b64  	%rd15239, %rd15238, %rd15180;
	not.b64 	%rd15240, %rd15182;
	and.b64  	%rd15241, %rd15183, %rd15240;
	xor.b64  	%rd15242, %rd15241, %rd15181;
	not.b64 	%rd15243, %rd15183;
	and.b64  	%rd15244, %rd15179, %rd15243;
	xor.b64  	%rd15245, %rd15244, %rd15182;
	not.b64 	%rd15246, %rd15179;
	and.b64  	%rd15247, %rd15180, %rd15246;
	xor.b64  	%rd15248, %rd15247, %rd15183;
	not.b64 	%rd15249, %rd15185;
	and.b64  	%rd15250, %rd15186, %rd15249;
	xor.b64  	%rd15251, %rd15250, %rd15184;
	not.b64 	%rd15252, %rd15186;
	and.b64  	%rd15253, %rd15187, %rd15252;
	xor.b64  	%rd15254, %rd15253, %rd15185;
	not.b64 	%rd15255, %rd15187;
	and.b64  	%rd15256, %rd15188, %rd15255;
	xor.b64  	%rd15257, %rd15256, %rd15186;
	not.b64 	%rd15258, %rd15188;
	and.b64  	%rd15259, %rd15184, %rd15258;
	xor.b64  	%rd15260, %rd15259, %rd15187;
	not.b64 	%rd15261, %rd15184;
	and.b64  	%rd15262, %rd15185, %rd15261;
	xor.b64  	%rd15263, %rd15262, %rd15188;
	xor.b64  	%rd15264, %rd15191, %rd36;
	xor.b64  	%rd15265, %rd15206, %rd15264;
	xor.b64  	%rd15266, %rd15265, %rd15221;
	xor.b64  	%rd15267, %rd15266, %rd15236;
	xor.b64  	%rd15268, %rd15267, %rd15251;
	xor.b64  	%rd15269, %rd15209, %rd15194;
	xor.b64  	%rd15270, %rd15269, %rd15224;
	xor.b64  	%rd15271, %rd15270, %rd15239;
	xor.b64  	%rd15272, %rd15271, %rd15254;
	xor.b64  	%rd15273, %rd15212, %rd15197;
	xor.b64  	%rd15274, %rd15273, %rd15227;
	xor.b64  	%rd15275, %rd15274, %rd15242;
	xor.b64  	%rd15276, %rd15275, %rd15257;
	xor.b64  	%rd15277, %rd15215, %rd15200;
	xor.b64  	%rd15278, %rd15277, %rd15230;
	xor.b64  	%rd15279, %rd15278, %rd15245;
	xor.b64  	%rd15280, %rd15279, %rd15260;
	xor.b64  	%rd15281, %rd15218, %rd15203;
	xor.b64  	%rd15282, %rd15281, %rd15233;
	xor.b64  	%rd15283, %rd15282, %rd15248;
	xor.b64  	%rd15284, %rd15283, %rd15263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10871}, %rd15272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10872,%dummy}, %rd15272;
	}
	shf.l.wrap.b32 	%r10873, %r10872, %r10871, 1;
	shf.l.wrap.b32 	%r10874, %r10871, %r10872, 1;
	mov.b64 	%rd15285, {%r10874, %r10873};
	xor.b64  	%rd15286, %rd15284, %rd15285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10875}, %rd15276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10876,%dummy}, %rd15276;
	}
	shf.l.wrap.b32 	%r10877, %r10876, %r10875, 1;
	shf.l.wrap.b32 	%r10878, %r10875, %r10876, 1;
	mov.b64 	%rd15287, {%r10878, %r10877};
	xor.b64  	%rd15288, %rd15287, %rd15268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10879}, %rd15280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10880,%dummy}, %rd15280;
	}
	shf.l.wrap.b32 	%r10881, %r10880, %r10879, 1;
	shf.l.wrap.b32 	%r10882, %r10879, %r10880, 1;
	mov.b64 	%rd15289, {%r10882, %r10881};
	xor.b64  	%rd15290, %rd15289, %rd15272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10883}, %rd15284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10884,%dummy}, %rd15284;
	}
	shf.l.wrap.b32 	%r10885, %r10884, %r10883, 1;
	shf.l.wrap.b32 	%r10886, %r10883, %r10884, 1;
	mov.b64 	%rd15291, {%r10886, %r10885};
	xor.b64  	%rd15292, %rd15291, %rd15276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10887}, %rd15268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10888,%dummy}, %rd15268;
	}
	shf.l.wrap.b32 	%r10889, %r10888, %r10887, 1;
	shf.l.wrap.b32 	%r10890, %r10887, %r10888, 1;
	mov.b64 	%rd15293, {%r10890, %r10889};
	xor.b64  	%rd15294, %rd15280, %rd15293;
	xor.b64  	%rd15295, %rd15286, %rd15264;
	xor.b64  	%rd15296, %rd15288, %rd15194;
	xor.b64  	%rd15297, %rd15290, %rd15197;
	xor.b64  	%rd15298, %rd15292, %rd15200;
	xor.b64  	%rd15299, %rd15294, %rd15203;
	xor.b64  	%rd15300, %rd15286, %rd15206;
	xor.b64  	%rd15301, %rd15288, %rd15209;
	xor.b64  	%rd15302, %rd15290, %rd15212;
	xor.b64  	%rd15303, %rd15292, %rd15215;
	xor.b64  	%rd15304, %rd15294, %rd15218;
	xor.b64  	%rd15305, %rd15286, %rd15221;
	xor.b64  	%rd15306, %rd15288, %rd15224;
	xor.b64  	%rd15307, %rd15290, %rd15227;
	xor.b64  	%rd15308, %rd15292, %rd15230;
	xor.b64  	%rd15309, %rd15294, %rd15233;
	xor.b64  	%rd15310, %rd15286, %rd15236;
	xor.b64  	%rd15311, %rd15288, %rd15239;
	xor.b64  	%rd15312, %rd15290, %rd15242;
	xor.b64  	%rd15313, %rd15292, %rd15245;
	xor.b64  	%rd15314, %rd15294, %rd15248;
	xor.b64  	%rd15315, %rd15286, %rd15251;
	xor.b64  	%rd15316, %rd15288, %rd15254;
	xor.b64  	%rd15317, %rd15290, %rd15257;
	xor.b64  	%rd15318, %rd15292, %rd15260;
	xor.b64  	%rd15319, %rd15294, %rd15263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10891,%dummy}, %rd15301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10892}, %rd15301;
	}
	shf.r.wrap.b32 	%r10893, %r10892, %r10891, 20;
	shf.r.wrap.b32 	%r10894, %r10891, %r10892, 20;
	mov.b64 	%rd15320, {%r10894, %r10893};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10895,%dummy}, %rd15307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10896}, %rd15307;
	}
	shf.r.wrap.b32 	%r10897, %r10896, %r10895, 21;
	shf.r.wrap.b32 	%r10898, %r10895, %r10896, 21;
	mov.b64 	%rd15321, {%r10898, %r10897};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10899}, %rd15313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10900,%dummy}, %rd15313;
	}
	shf.l.wrap.b32 	%r10901, %r10900, %r10899, 21;
	shf.l.wrap.b32 	%r10902, %r10899, %r10900, 21;
	mov.b64 	%rd15322, {%r10902, %r10901};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10903}, %rd15319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10904,%dummy}, %rd15319;
	}
	shf.l.wrap.b32 	%r10905, %r10904, %r10903, 14;
	shf.l.wrap.b32 	%r10906, %r10903, %r10904, 14;
	mov.b64 	%rd15323, {%r10906, %r10905};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10907}, %rd15298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10908,%dummy}, %rd15298;
	}
	shf.l.wrap.b32 	%r10909, %r10908, %r10907, 28;
	shf.l.wrap.b32 	%r10910, %r10907, %r10908, 28;
	mov.b64 	%rd15324, {%r10910, %r10909};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10911}, %rd15304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10912,%dummy}, %rd15304;
	}
	shf.l.wrap.b32 	%r10913, %r10912, %r10911, 20;
	shf.l.wrap.b32 	%r10914, %r10911, %r10912, 20;
	mov.b64 	%rd15325, {%r10914, %r10913};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10915}, %rd15305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10916,%dummy}, %rd15305;
	}
	shf.l.wrap.b32 	%r10917, %r10916, %r10915, 3;
	shf.l.wrap.b32 	%r10918, %r10915, %r10916, 3;
	mov.b64 	%rd15326, {%r10918, %r10917};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10919,%dummy}, %rd15311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10920}, %rd15311;
	}
	shf.r.wrap.b32 	%r10921, %r10920, %r10919, 19;
	shf.r.wrap.b32 	%r10922, %r10919, %r10920, 19;
	mov.b64 	%rd15327, {%r10922, %r10921};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10923,%dummy}, %rd15317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10924}, %rd15317;
	}
	shf.r.wrap.b32 	%r10925, %r10924, %r10923, 3;
	shf.r.wrap.b32 	%r10926, %r10923, %r10924, 3;
	mov.b64 	%rd15328, {%r10926, %r10925};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10927}, %rd15296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10928,%dummy}, %rd15296;
	}
	shf.l.wrap.b32 	%r10929, %r10928, %r10927, 1;
	shf.l.wrap.b32 	%r10930, %r10927, %r10928, 1;
	mov.b64 	%rd15329, {%r10930, %r10929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10931}, %rd15302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10932,%dummy}, %rd15302;
	}
	shf.l.wrap.b32 	%r10933, %r10932, %r10931, 6;
	shf.l.wrap.b32 	%r10934, %r10931, %r10932, 6;
	mov.b64 	%rd15330, {%r10934, %r10933};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10935}, %rd15308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10936,%dummy}, %rd15308;
	}
	shf.l.wrap.b32 	%r10937, %r10936, %r10935, 25;
	shf.l.wrap.b32 	%r10938, %r10935, %r10936, 25;
	mov.b64 	%rd15331, {%r10938, %r10937};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10939}, %rd15314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10940,%dummy}, %rd15314;
	}
	shf.l.wrap.b32 	%r10941, %r10940, %r10939, 8;
	shf.l.wrap.b32 	%r10942, %r10939, %r10940, 8;
	mov.b64 	%rd15332, {%r10942, %r10941};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10943}, %rd15315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10944,%dummy}, %rd15315;
	}
	shf.l.wrap.b32 	%r10945, %r10944, %r10943, 18;
	shf.l.wrap.b32 	%r10946, %r10943, %r10944, 18;
	mov.b64 	%rd15333, {%r10946, %r10945};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10947}, %rd15299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10948,%dummy}, %rd15299;
	}
	shf.l.wrap.b32 	%r10949, %r10948, %r10947, 27;
	shf.l.wrap.b32 	%r10950, %r10947, %r10948, 27;
	mov.b64 	%rd15334, {%r10950, %r10949};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10951,%dummy}, %rd15300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10952}, %rd15300;
	}
	shf.r.wrap.b32 	%r10953, %r10952, %r10951, 28;
	shf.r.wrap.b32 	%r10954, %r10951, %r10952, 28;
	mov.b64 	%rd15335, {%r10954, %r10953};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10955}, %rd15306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10956,%dummy}, %rd15306;
	}
	shf.l.wrap.b32 	%r10957, %r10956, %r10955, 10;
	shf.l.wrap.b32 	%r10958, %r10955, %r10956, 10;
	mov.b64 	%rd15336, {%r10958, %r10957};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10959}, %rd15312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10960,%dummy}, %rd15312;
	}
	shf.l.wrap.b32 	%r10961, %r10960, %r10959, 15;
	shf.l.wrap.b32 	%r10962, %r10959, %r10960, 15;
	mov.b64 	%rd15337, {%r10962, %r10961};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10963,%dummy}, %rd15318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10964}, %rd15318;
	}
	shf.r.wrap.b32 	%r10965, %r10964, %r10963, 8;
	shf.r.wrap.b32 	%r10966, %r10963, %r10964, 8;
	mov.b64 	%rd15338, {%r10966, %r10965};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10967,%dummy}, %rd15297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10968}, %rd15297;
	}
	shf.r.wrap.b32 	%r10969, %r10968, %r10967, 2;
	shf.r.wrap.b32 	%r10970, %r10967, %r10968, 2;
	mov.b64 	%rd15339, {%r10970, %r10969};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10971,%dummy}, %rd15303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10972}, %rd15303;
	}
	shf.r.wrap.b32 	%r10973, %r10972, %r10971, 9;
	shf.r.wrap.b32 	%r10974, %r10971, %r10972, 9;
	mov.b64 	%rd15340, {%r10974, %r10973};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10975,%dummy}, %rd15309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10976}, %rd15309;
	}
	shf.r.wrap.b32 	%r10977, %r10976, %r10975, 25;
	shf.r.wrap.b32 	%r10978, %r10975, %r10976, 25;
	mov.b64 	%rd15341, {%r10978, %r10977};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10979,%dummy}, %rd15310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10980}, %rd15310;
	}
	shf.r.wrap.b32 	%r10981, %r10980, %r10979, 23;
	shf.r.wrap.b32 	%r10982, %r10979, %r10980, 23;
	mov.b64 	%rd15342, {%r10982, %r10981};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10983}, %rd15316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10984,%dummy}, %rd15316;
	}
	shf.l.wrap.b32 	%r10985, %r10984, %r10983, 2;
	shf.l.wrap.b32 	%r10986, %r10983, %r10984, 2;
	mov.b64 	%rd15343, {%r10986, %r10985};
	not.b64 	%rd15344, %rd15320;
	and.b64  	%rd15345, %rd15321, %rd15344;
	xor.b64  	%rd15346, %rd15345, %rd15295;
	not.b64 	%rd15347, %rd15321;
	and.b64  	%rd15348, %rd15322, %rd15347;
	xor.b64  	%rd15349, %rd15348, %rd15320;
	not.b64 	%rd15350, %rd15322;
	and.b64  	%rd15351, %rd15323, %rd15350;
	xor.b64  	%rd15352, %rd15351, %rd15321;
	not.b64 	%rd15353, %rd15323;
	and.b64  	%rd15354, %rd15295, %rd15353;
	xor.b64  	%rd15355, %rd15354, %rd15322;
	not.b64 	%rd15356, %rd15295;
	and.b64  	%rd15357, %rd15320, %rd15356;
	xor.b64  	%rd15358, %rd15357, %rd15323;
	not.b64 	%rd15359, %rd15325;
	and.b64  	%rd15360, %rd15326, %rd15359;
	xor.b64  	%rd15361, %rd15360, %rd15324;
	not.b64 	%rd15362, %rd15326;
	and.b64  	%rd15363, %rd15327, %rd15362;
	xor.b64  	%rd15364, %rd15363, %rd15325;
	not.b64 	%rd15365, %rd15327;
	and.b64  	%rd15366, %rd15328, %rd15365;
	xor.b64  	%rd15367, %rd15366, %rd15326;
	not.b64 	%rd15368, %rd15328;
	and.b64  	%rd15369, %rd15324, %rd15368;
	xor.b64  	%rd15370, %rd15369, %rd15327;
	not.b64 	%rd15371, %rd15324;
	and.b64  	%rd15372, %rd15325, %rd15371;
	xor.b64  	%rd15373, %rd15372, %rd15328;
	not.b64 	%rd15374, %rd15330;
	and.b64  	%rd15375, %rd15331, %rd15374;
	xor.b64  	%rd15376, %rd15375, %rd15329;
	not.b64 	%rd15377, %rd15331;
	and.b64  	%rd15378, %rd15332, %rd15377;
	xor.b64  	%rd15379, %rd15378, %rd15330;
	not.b64 	%rd15380, %rd15332;
	and.b64  	%rd15381, %rd15333, %rd15380;
	xor.b64  	%rd15382, %rd15381, %rd15331;
	not.b64 	%rd15383, %rd15333;
	and.b64  	%rd15384, %rd15329, %rd15383;
	xor.b64  	%rd15385, %rd15384, %rd15332;
	not.b64 	%rd15386, %rd15329;
	and.b64  	%rd15387, %rd15330, %rd15386;
	xor.b64  	%rd15388, %rd15387, %rd15333;
	not.b64 	%rd15389, %rd15335;
	and.b64  	%rd15390, %rd15336, %rd15389;
	xor.b64  	%rd15391, %rd15390, %rd15334;
	not.b64 	%rd15392, %rd15336;
	and.b64  	%rd15393, %rd15337, %rd15392;
	xor.b64  	%rd15394, %rd15393, %rd15335;
	not.b64 	%rd15395, %rd15337;
	and.b64  	%rd15396, %rd15338, %rd15395;
	xor.b64  	%rd15397, %rd15396, %rd15336;
	not.b64 	%rd15398, %rd15338;
	and.b64  	%rd15399, %rd15334, %rd15398;
	xor.b64  	%rd15400, %rd15399, %rd15337;
	not.b64 	%rd15401, %rd15334;
	and.b64  	%rd15402, %rd15335, %rd15401;
	xor.b64  	%rd15403, %rd15402, %rd15338;
	not.b64 	%rd15404, %rd15340;
	and.b64  	%rd15405, %rd15341, %rd15404;
	xor.b64  	%rd15406, %rd15405, %rd15339;
	not.b64 	%rd15407, %rd15341;
	and.b64  	%rd15408, %rd15342, %rd15407;
	xor.b64  	%rd15409, %rd15408, %rd15340;
	not.b64 	%rd15410, %rd15342;
	and.b64  	%rd15411, %rd15343, %rd15410;
	xor.b64  	%rd15412, %rd15411, %rd15341;
	not.b64 	%rd15413, %rd15343;
	and.b64  	%rd15414, %rd15339, %rd15413;
	xor.b64  	%rd15415, %rd15414, %rd15342;
	not.b64 	%rd15416, %rd15339;
	and.b64  	%rd15417, %rd15340, %rd15416;
	xor.b64  	%rd15418, %rd15417, %rd15343;
	xor.b64  	%rd15419, %rd15346, %rd37;
	xor.b64  	%rd15420, %rd15361, %rd15419;
	xor.b64  	%rd15421, %rd15420, %rd15376;
	xor.b64  	%rd15422, %rd15421, %rd15391;
	xor.b64  	%rd15423, %rd15422, %rd15406;
	xor.b64  	%rd15424, %rd15364, %rd15349;
	xor.b64  	%rd15425, %rd15424, %rd15379;
	xor.b64  	%rd15426, %rd15425, %rd15394;
	xor.b64  	%rd15427, %rd15426, %rd15409;
	xor.b64  	%rd15428, %rd15367, %rd15352;
	xor.b64  	%rd15429, %rd15428, %rd15382;
	xor.b64  	%rd15430, %rd15429, %rd15397;
	xor.b64  	%rd15431, %rd15430, %rd15412;
	xor.b64  	%rd15432, %rd15370, %rd15355;
	xor.b64  	%rd15433, %rd15432, %rd15385;
	xor.b64  	%rd15434, %rd15433, %rd15400;
	xor.b64  	%rd15435, %rd15434, %rd15415;
	xor.b64  	%rd15436, %rd15373, %rd15358;
	xor.b64  	%rd15437, %rd15436, %rd15388;
	xor.b64  	%rd15438, %rd15437, %rd15403;
	xor.b64  	%rd15439, %rd15438, %rd15418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10987}, %rd15427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10988,%dummy}, %rd15427;
	}
	shf.l.wrap.b32 	%r10989, %r10988, %r10987, 1;
	shf.l.wrap.b32 	%r10990, %r10987, %r10988, 1;
	mov.b64 	%rd15440, {%r10990, %r10989};
	xor.b64  	%rd15441, %rd15439, %rd15440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10991}, %rd15431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10992,%dummy}, %rd15431;
	}
	shf.l.wrap.b32 	%r10993, %r10992, %r10991, 1;
	shf.l.wrap.b32 	%r10994, %r10991, %r10992, 1;
	mov.b64 	%rd15442, {%r10994, %r10993};
	xor.b64  	%rd15443, %rd15442, %rd15423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10995}, %rd15435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10996,%dummy}, %rd15435;
	}
	shf.l.wrap.b32 	%r10997, %r10996, %r10995, 1;
	shf.l.wrap.b32 	%r10998, %r10995, %r10996, 1;
	mov.b64 	%rd15444, {%r10998, %r10997};
	xor.b64  	%rd15445, %rd15444, %rd15427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10999}, %rd15439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11000,%dummy}, %rd15439;
	}
	shf.l.wrap.b32 	%r11001, %r11000, %r10999, 1;
	shf.l.wrap.b32 	%r11002, %r10999, %r11000, 1;
	mov.b64 	%rd15446, {%r11002, %r11001};
	xor.b64  	%rd15447, %rd15446, %rd15431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11003}, %rd15423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11004,%dummy}, %rd15423;
	}
	shf.l.wrap.b32 	%r11005, %r11004, %r11003, 1;
	shf.l.wrap.b32 	%r11006, %r11003, %r11004, 1;
	mov.b64 	%rd15448, {%r11006, %r11005};
	xor.b64  	%rd15449, %rd15435, %rd15448;
	xor.b64  	%rd15450, %rd15441, %rd15419;
	xor.b64  	%rd15451, %rd15443, %rd15349;
	xor.b64  	%rd15452, %rd15445, %rd15352;
	xor.b64  	%rd15453, %rd15447, %rd15355;
	xor.b64  	%rd15454, %rd15449, %rd15358;
	xor.b64  	%rd15455, %rd15441, %rd15361;
	xor.b64  	%rd15456, %rd15443, %rd15364;
	xor.b64  	%rd15457, %rd15445, %rd15367;
	xor.b64  	%rd15458, %rd15447, %rd15370;
	xor.b64  	%rd15459, %rd15449, %rd15373;
	xor.b64  	%rd15460, %rd15441, %rd15376;
	xor.b64  	%rd15461, %rd15443, %rd15379;
	xor.b64  	%rd15462, %rd15445, %rd15382;
	xor.b64  	%rd15463, %rd15447, %rd15385;
	xor.b64  	%rd15464, %rd15449, %rd15388;
	xor.b64  	%rd15465, %rd15441, %rd15391;
	xor.b64  	%rd15466, %rd15443, %rd15394;
	xor.b64  	%rd15467, %rd15445, %rd15397;
	xor.b64  	%rd15468, %rd15447, %rd15400;
	xor.b64  	%rd15469, %rd15449, %rd15403;
	xor.b64  	%rd15470, %rd15441, %rd15406;
	xor.b64  	%rd15471, %rd15443, %rd15409;
	xor.b64  	%rd15472, %rd15445, %rd15412;
	xor.b64  	%rd15473, %rd15447, %rd15415;
	xor.b64  	%rd15474, %rd15449, %rd15418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11007,%dummy}, %rd15456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11008}, %rd15456;
	}
	shf.r.wrap.b32 	%r11009, %r11008, %r11007, 20;
	shf.r.wrap.b32 	%r11010, %r11007, %r11008, 20;
	mov.b64 	%rd15475, {%r11010, %r11009};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11011,%dummy}, %rd15462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11012}, %rd15462;
	}
	shf.r.wrap.b32 	%r11013, %r11012, %r11011, 21;
	shf.r.wrap.b32 	%r11014, %r11011, %r11012, 21;
	mov.b64 	%rd15476, {%r11014, %r11013};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11015}, %rd15468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11016,%dummy}, %rd15468;
	}
	shf.l.wrap.b32 	%r11017, %r11016, %r11015, 21;
	shf.l.wrap.b32 	%r11018, %r11015, %r11016, 21;
	mov.b64 	%rd15477, {%r11018, %r11017};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11019}, %rd15474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11020,%dummy}, %rd15474;
	}
	shf.l.wrap.b32 	%r11021, %r11020, %r11019, 14;
	shf.l.wrap.b32 	%r11022, %r11019, %r11020, 14;
	mov.b64 	%rd15478, {%r11022, %r11021};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11023}, %rd15453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11024,%dummy}, %rd15453;
	}
	shf.l.wrap.b32 	%r11025, %r11024, %r11023, 28;
	shf.l.wrap.b32 	%r11026, %r11023, %r11024, 28;
	mov.b64 	%rd15479, {%r11026, %r11025};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11027}, %rd15459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11028,%dummy}, %rd15459;
	}
	shf.l.wrap.b32 	%r11029, %r11028, %r11027, 20;
	shf.l.wrap.b32 	%r11030, %r11027, %r11028, 20;
	mov.b64 	%rd15480, {%r11030, %r11029};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11031}, %rd15460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11032,%dummy}, %rd15460;
	}
	shf.l.wrap.b32 	%r11033, %r11032, %r11031, 3;
	shf.l.wrap.b32 	%r11034, %r11031, %r11032, 3;
	mov.b64 	%rd15481, {%r11034, %r11033};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11035,%dummy}, %rd15466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11036}, %rd15466;
	}
	shf.r.wrap.b32 	%r11037, %r11036, %r11035, 19;
	shf.r.wrap.b32 	%r11038, %r11035, %r11036, 19;
	mov.b64 	%rd15482, {%r11038, %r11037};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11039,%dummy}, %rd15472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11040}, %rd15472;
	}
	shf.r.wrap.b32 	%r11041, %r11040, %r11039, 3;
	shf.r.wrap.b32 	%r11042, %r11039, %r11040, 3;
	mov.b64 	%rd15483, {%r11042, %r11041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11043}, %rd15451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11044,%dummy}, %rd15451;
	}
	shf.l.wrap.b32 	%r11045, %r11044, %r11043, 1;
	shf.l.wrap.b32 	%r11046, %r11043, %r11044, 1;
	mov.b64 	%rd15484, {%r11046, %r11045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11047}, %rd15457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11048,%dummy}, %rd15457;
	}
	shf.l.wrap.b32 	%r11049, %r11048, %r11047, 6;
	shf.l.wrap.b32 	%r11050, %r11047, %r11048, 6;
	mov.b64 	%rd15485, {%r11050, %r11049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11051}, %rd15463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11052,%dummy}, %rd15463;
	}
	shf.l.wrap.b32 	%r11053, %r11052, %r11051, 25;
	shf.l.wrap.b32 	%r11054, %r11051, %r11052, 25;
	mov.b64 	%rd15486, {%r11054, %r11053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11055}, %rd15469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11056,%dummy}, %rd15469;
	}
	shf.l.wrap.b32 	%r11057, %r11056, %r11055, 8;
	shf.l.wrap.b32 	%r11058, %r11055, %r11056, 8;
	mov.b64 	%rd15487, {%r11058, %r11057};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11059}, %rd15470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11060,%dummy}, %rd15470;
	}
	shf.l.wrap.b32 	%r11061, %r11060, %r11059, 18;
	shf.l.wrap.b32 	%r11062, %r11059, %r11060, 18;
	mov.b64 	%rd15488, {%r11062, %r11061};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11063}, %rd15454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11064,%dummy}, %rd15454;
	}
	shf.l.wrap.b32 	%r11065, %r11064, %r11063, 27;
	shf.l.wrap.b32 	%r11066, %r11063, %r11064, 27;
	mov.b64 	%rd15489, {%r11066, %r11065};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11067,%dummy}, %rd15455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11068}, %rd15455;
	}
	shf.r.wrap.b32 	%r11069, %r11068, %r11067, 28;
	shf.r.wrap.b32 	%r11070, %r11067, %r11068, 28;
	mov.b64 	%rd15490, {%r11070, %r11069};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd15461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11072,%dummy}, %rd15461;
	}
	shf.l.wrap.b32 	%r11073, %r11072, %r11071, 10;
	shf.l.wrap.b32 	%r11074, %r11071, %r11072, 10;
	mov.b64 	%rd15491, {%r11074, %r11073};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11075}, %rd15467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11076,%dummy}, %rd15467;
	}
	shf.l.wrap.b32 	%r11077, %r11076, %r11075, 15;
	shf.l.wrap.b32 	%r11078, %r11075, %r11076, 15;
	mov.b64 	%rd15492, {%r11078, %r11077};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11079,%dummy}, %rd15473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11080}, %rd15473;
	}
	shf.r.wrap.b32 	%r11081, %r11080, %r11079, 8;
	shf.r.wrap.b32 	%r11082, %r11079, %r11080, 8;
	mov.b64 	%rd15493, {%r11082, %r11081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11083,%dummy}, %rd15452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11084}, %rd15452;
	}
	shf.r.wrap.b32 	%r11085, %r11084, %r11083, 2;
	shf.r.wrap.b32 	%r11086, %r11083, %r11084, 2;
	mov.b64 	%rd15494, {%r11086, %r11085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11087,%dummy}, %rd15458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11088}, %rd15458;
	}
	shf.r.wrap.b32 	%r11089, %r11088, %r11087, 9;
	shf.r.wrap.b32 	%r11090, %r11087, %r11088, 9;
	mov.b64 	%rd15495, {%r11090, %r11089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11091,%dummy}, %rd15464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11092}, %rd15464;
	}
	shf.r.wrap.b32 	%r11093, %r11092, %r11091, 25;
	shf.r.wrap.b32 	%r11094, %r11091, %r11092, 25;
	mov.b64 	%rd15496, {%r11094, %r11093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11095,%dummy}, %rd15465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11096}, %rd15465;
	}
	shf.r.wrap.b32 	%r11097, %r11096, %r11095, 23;
	shf.r.wrap.b32 	%r11098, %r11095, %r11096, 23;
	mov.b64 	%rd15497, {%r11098, %r11097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11099}, %rd15471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11100,%dummy}, %rd15471;
	}
	shf.l.wrap.b32 	%r11101, %r11100, %r11099, 2;
	shf.l.wrap.b32 	%r11102, %r11099, %r11100, 2;
	mov.b64 	%rd15498, {%r11102, %r11101};
	not.b64 	%rd15499, %rd15475;
	and.b64  	%rd15500, %rd15476, %rd15499;
	xor.b64  	%rd15501, %rd15500, %rd15450;
	not.b64 	%rd15502, %rd15476;
	and.b64  	%rd15503, %rd15477, %rd15502;
	xor.b64  	%rd15504, %rd15503, %rd15475;
	not.b64 	%rd15505, %rd15477;
	and.b64  	%rd15506, %rd15478, %rd15505;
	xor.b64  	%rd15507, %rd15506, %rd15476;
	not.b64 	%rd15508, %rd15478;
	and.b64  	%rd15509, %rd15450, %rd15508;
	xor.b64  	%rd15510, %rd15509, %rd15477;
	not.b64 	%rd15511, %rd15450;
	and.b64  	%rd15512, %rd15475, %rd15511;
	xor.b64  	%rd15513, %rd15512, %rd15478;
	not.b64 	%rd15514, %rd15480;
	and.b64  	%rd15515, %rd15481, %rd15514;
	xor.b64  	%rd15516, %rd15515, %rd15479;
	not.b64 	%rd15517, %rd15481;
	and.b64  	%rd15518, %rd15482, %rd15517;
	xor.b64  	%rd15519, %rd15518, %rd15480;
	not.b64 	%rd15520, %rd15482;
	and.b64  	%rd15521, %rd15483, %rd15520;
	xor.b64  	%rd15522, %rd15521, %rd15481;
	not.b64 	%rd15523, %rd15483;
	and.b64  	%rd15524, %rd15479, %rd15523;
	xor.b64  	%rd15525, %rd15524, %rd15482;
	not.b64 	%rd15526, %rd15479;
	and.b64  	%rd15527, %rd15480, %rd15526;
	xor.b64  	%rd15528, %rd15527, %rd15483;
	not.b64 	%rd15529, %rd15485;
	and.b64  	%rd15530, %rd15486, %rd15529;
	xor.b64  	%rd15531, %rd15530, %rd15484;
	not.b64 	%rd15532, %rd15486;
	and.b64  	%rd15533, %rd15487, %rd15532;
	xor.b64  	%rd15534, %rd15533, %rd15485;
	not.b64 	%rd15535, %rd15487;
	and.b64  	%rd15536, %rd15488, %rd15535;
	xor.b64  	%rd15537, %rd15536, %rd15486;
	not.b64 	%rd15538, %rd15488;
	and.b64  	%rd15539, %rd15484, %rd15538;
	xor.b64  	%rd15540, %rd15539, %rd15487;
	not.b64 	%rd15541, %rd15484;
	and.b64  	%rd15542, %rd15485, %rd15541;
	xor.b64  	%rd15543, %rd15542, %rd15488;
	not.b64 	%rd15544, %rd15490;
	and.b64  	%rd15545, %rd15491, %rd15544;
	xor.b64  	%rd15546, %rd15545, %rd15489;
	not.b64 	%rd15547, %rd15491;
	and.b64  	%rd15548, %rd15492, %rd15547;
	xor.b64  	%rd15549, %rd15548, %rd15490;
	not.b64 	%rd15550, %rd15492;
	and.b64  	%rd15551, %rd15493, %rd15550;
	xor.b64  	%rd15552, %rd15551, %rd15491;
	not.b64 	%rd15553, %rd15493;
	and.b64  	%rd15554, %rd15489, %rd15553;
	xor.b64  	%rd15555, %rd15554, %rd15492;
	not.b64 	%rd15556, %rd15489;
	and.b64  	%rd15557, %rd15490, %rd15556;
	xor.b64  	%rd15558, %rd15557, %rd15493;
	not.b64 	%rd15559, %rd15495;
	and.b64  	%rd15560, %rd15496, %rd15559;
	xor.b64  	%rd15561, %rd15560, %rd15494;
	not.b64 	%rd15562, %rd15496;
	and.b64  	%rd15563, %rd15497, %rd15562;
	xor.b64  	%rd15564, %rd15563, %rd15495;
	not.b64 	%rd15565, %rd15497;
	and.b64  	%rd15566, %rd15498, %rd15565;
	xor.b64  	%rd15567, %rd15566, %rd15496;
	not.b64 	%rd15568, %rd15498;
	and.b64  	%rd15569, %rd15494, %rd15568;
	xor.b64  	%rd15570, %rd15569, %rd15497;
	not.b64 	%rd15571, %rd15494;
	and.b64  	%rd15572, %rd15495, %rd15571;
	xor.b64  	%rd15573, %rd15572, %rd15498;
	xor.b64  	%rd15574, %rd15501, %rd38;
	xor.b64  	%rd15575, %rd15516, %rd15574;
	xor.b64  	%rd15576, %rd15575, %rd15531;
	xor.b64  	%rd15577, %rd15576, %rd15546;
	xor.b64  	%rd15578, %rd15577, %rd15561;
	xor.b64  	%rd15579, %rd15519, %rd15504;
	xor.b64  	%rd15580, %rd15579, %rd15534;
	xor.b64  	%rd15581, %rd15580, %rd15549;
	xor.b64  	%rd15582, %rd15581, %rd15564;
	xor.b64  	%rd15583, %rd15522, %rd15507;
	xor.b64  	%rd15584, %rd15583, %rd15537;
	xor.b64  	%rd15585, %rd15584, %rd15552;
	xor.b64  	%rd15586, %rd15585, %rd15567;
	xor.b64  	%rd15587, %rd15525, %rd15510;
	xor.b64  	%rd15588, %rd15587, %rd15540;
	xor.b64  	%rd15589, %rd15588, %rd15555;
	xor.b64  	%rd15590, %rd15589, %rd15570;
	xor.b64  	%rd15591, %rd15528, %rd15513;
	xor.b64  	%rd15592, %rd15591, %rd15543;
	xor.b64  	%rd15593, %rd15592, %rd15558;
	xor.b64  	%rd15594, %rd15593, %rd15573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11103}, %rd15582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11104,%dummy}, %rd15582;
	}
	shf.l.wrap.b32 	%r11105, %r11104, %r11103, 1;
	shf.l.wrap.b32 	%r11106, %r11103, %r11104, 1;
	mov.b64 	%rd15595, {%r11106, %r11105};
	xor.b64  	%rd15596, %rd15594, %rd15595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11107}, %rd15586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11108,%dummy}, %rd15586;
	}
	shf.l.wrap.b32 	%r11109, %r11108, %r11107, 1;
	shf.l.wrap.b32 	%r11110, %r11107, %r11108, 1;
	mov.b64 	%rd15597, {%r11110, %r11109};
	xor.b64  	%rd15598, %rd15597, %rd15578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11111}, %rd15590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11112,%dummy}, %rd15590;
	}
	shf.l.wrap.b32 	%r11113, %r11112, %r11111, 1;
	shf.l.wrap.b32 	%r11114, %r11111, %r11112, 1;
	mov.b64 	%rd15599, {%r11114, %r11113};
	xor.b64  	%rd15600, %rd15599, %rd15582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11115}, %rd15594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11116,%dummy}, %rd15594;
	}
	shf.l.wrap.b32 	%r11117, %r11116, %r11115, 1;
	shf.l.wrap.b32 	%r11118, %r11115, %r11116, 1;
	mov.b64 	%rd15601, {%r11118, %r11117};
	xor.b64  	%rd15602, %rd15601, %rd15586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd15578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11120,%dummy}, %rd15578;
	}
	shf.l.wrap.b32 	%r11121, %r11120, %r11119, 1;
	shf.l.wrap.b32 	%r11122, %r11119, %r11120, 1;
	mov.b64 	%rd15603, {%r11122, %r11121};
	xor.b64  	%rd15604, %rd15590, %rd15603;
	xor.b64  	%rd15605, %rd15596, %rd15574;
	xor.b64  	%rd15606, %rd15598, %rd15504;
	xor.b64  	%rd15607, %rd15600, %rd15507;
	xor.b64  	%rd15608, %rd15602, %rd15510;
	xor.b64  	%rd15609, %rd15604, %rd15513;
	xor.b64  	%rd15610, %rd15596, %rd15516;
	xor.b64  	%rd15611, %rd15598, %rd15519;
	xor.b64  	%rd15612, %rd15600, %rd15522;
	xor.b64  	%rd15613, %rd15602, %rd15525;
	xor.b64  	%rd15614, %rd15604, %rd15528;
	xor.b64  	%rd15615, %rd15596, %rd15531;
	xor.b64  	%rd15616, %rd15598, %rd15534;
	xor.b64  	%rd15617, %rd15600, %rd15537;
	xor.b64  	%rd15618, %rd15602, %rd15540;
	xor.b64  	%rd15619, %rd15604, %rd15543;
	xor.b64  	%rd15620, %rd15596, %rd15546;
	xor.b64  	%rd15621, %rd15598, %rd15549;
	xor.b64  	%rd15622, %rd15600, %rd15552;
	xor.b64  	%rd15623, %rd15602, %rd15555;
	xor.b64  	%rd15624, %rd15604, %rd15558;
	xor.b64  	%rd15625, %rd15596, %rd15561;
	xor.b64  	%rd15626, %rd15598, %rd15564;
	xor.b64  	%rd15627, %rd15600, %rd15567;
	xor.b64  	%rd15628, %rd15602, %rd15570;
	xor.b64  	%rd15629, %rd15604, %rd15573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11123,%dummy}, %rd15611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11124}, %rd15611;
	}
	shf.r.wrap.b32 	%r11125, %r11124, %r11123, 20;
	shf.r.wrap.b32 	%r11126, %r11123, %r11124, 20;
	mov.b64 	%rd15630, {%r11126, %r11125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11127,%dummy}, %rd15617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11128}, %rd15617;
	}
	shf.r.wrap.b32 	%r11129, %r11128, %r11127, 21;
	shf.r.wrap.b32 	%r11130, %r11127, %r11128, 21;
	mov.b64 	%rd15631, {%r11130, %r11129};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11131}, %rd15623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11132,%dummy}, %rd15623;
	}
	shf.l.wrap.b32 	%r11133, %r11132, %r11131, 21;
	shf.l.wrap.b32 	%r11134, %r11131, %r11132, 21;
	mov.b64 	%rd15632, {%r11134, %r11133};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11135}, %rd15629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11136,%dummy}, %rd15629;
	}
	shf.l.wrap.b32 	%r11137, %r11136, %r11135, 14;
	shf.l.wrap.b32 	%r11138, %r11135, %r11136, 14;
	mov.b64 	%rd15633, {%r11138, %r11137};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11139}, %rd15608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11140,%dummy}, %rd15608;
	}
	shf.l.wrap.b32 	%r11141, %r11140, %r11139, 28;
	shf.l.wrap.b32 	%r11142, %r11139, %r11140, 28;
	mov.b64 	%rd15634, {%r11142, %r11141};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11143}, %rd15614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11144,%dummy}, %rd15614;
	}
	shf.l.wrap.b32 	%r11145, %r11144, %r11143, 20;
	shf.l.wrap.b32 	%r11146, %r11143, %r11144, 20;
	mov.b64 	%rd15635, {%r11146, %r11145};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11147}, %rd15615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11148,%dummy}, %rd15615;
	}
	shf.l.wrap.b32 	%r11149, %r11148, %r11147, 3;
	shf.l.wrap.b32 	%r11150, %r11147, %r11148, 3;
	mov.b64 	%rd15636, {%r11150, %r11149};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11151,%dummy}, %rd15621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11152}, %rd15621;
	}
	shf.r.wrap.b32 	%r11153, %r11152, %r11151, 19;
	shf.r.wrap.b32 	%r11154, %r11151, %r11152, 19;
	mov.b64 	%rd15637, {%r11154, %r11153};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11155,%dummy}, %rd15627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11156}, %rd15627;
	}
	shf.r.wrap.b32 	%r11157, %r11156, %r11155, 3;
	shf.r.wrap.b32 	%r11158, %r11155, %r11156, 3;
	mov.b64 	%rd15638, {%r11158, %r11157};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11159}, %rd15606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11160,%dummy}, %rd15606;
	}
	shf.l.wrap.b32 	%r11161, %r11160, %r11159, 1;
	shf.l.wrap.b32 	%r11162, %r11159, %r11160, 1;
	mov.b64 	%rd15639, {%r11162, %r11161};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11163}, %rd15612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11164,%dummy}, %rd15612;
	}
	shf.l.wrap.b32 	%r11165, %r11164, %r11163, 6;
	shf.l.wrap.b32 	%r11166, %r11163, %r11164, 6;
	mov.b64 	%rd15640, {%r11166, %r11165};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11167}, %rd15618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11168,%dummy}, %rd15618;
	}
	shf.l.wrap.b32 	%r11169, %r11168, %r11167, 25;
	shf.l.wrap.b32 	%r11170, %r11167, %r11168, 25;
	mov.b64 	%rd15641, {%r11170, %r11169};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11171}, %rd15624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11172,%dummy}, %rd15624;
	}
	shf.l.wrap.b32 	%r11173, %r11172, %r11171, 8;
	shf.l.wrap.b32 	%r11174, %r11171, %r11172, 8;
	mov.b64 	%rd15642, {%r11174, %r11173};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11175}, %rd15625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11176,%dummy}, %rd15625;
	}
	shf.l.wrap.b32 	%r11177, %r11176, %r11175, 18;
	shf.l.wrap.b32 	%r11178, %r11175, %r11176, 18;
	mov.b64 	%rd15643, {%r11178, %r11177};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd15609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11180,%dummy}, %rd15609;
	}
	shf.l.wrap.b32 	%r11181, %r11180, %r11179, 27;
	shf.l.wrap.b32 	%r11182, %r11179, %r11180, 27;
	mov.b64 	%rd15644, {%r11182, %r11181};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11183,%dummy}, %rd15610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11184}, %rd15610;
	}
	shf.r.wrap.b32 	%r11185, %r11184, %r11183, 28;
	shf.r.wrap.b32 	%r11186, %r11183, %r11184, 28;
	mov.b64 	%rd15645, {%r11186, %r11185};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11187}, %rd15616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11188,%dummy}, %rd15616;
	}
	shf.l.wrap.b32 	%r11189, %r11188, %r11187, 10;
	shf.l.wrap.b32 	%r11190, %r11187, %r11188, 10;
	mov.b64 	%rd15646, {%r11190, %r11189};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11191}, %rd15622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11192,%dummy}, %rd15622;
	}
	shf.l.wrap.b32 	%r11193, %r11192, %r11191, 15;
	shf.l.wrap.b32 	%r11194, %r11191, %r11192, 15;
	mov.b64 	%rd15647, {%r11194, %r11193};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11195,%dummy}, %rd15628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11196}, %rd15628;
	}
	shf.r.wrap.b32 	%r11197, %r11196, %r11195, 8;
	shf.r.wrap.b32 	%r11198, %r11195, %r11196, 8;
	mov.b64 	%rd15648, {%r11198, %r11197};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11199,%dummy}, %rd15607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11200}, %rd15607;
	}
	shf.r.wrap.b32 	%r11201, %r11200, %r11199, 2;
	shf.r.wrap.b32 	%r11202, %r11199, %r11200, 2;
	mov.b64 	%rd15649, {%r11202, %r11201};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11203,%dummy}, %rd15613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11204}, %rd15613;
	}
	shf.r.wrap.b32 	%r11205, %r11204, %r11203, 9;
	shf.r.wrap.b32 	%r11206, %r11203, %r11204, 9;
	mov.b64 	%rd15650, {%r11206, %r11205};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11207,%dummy}, %rd15619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11208}, %rd15619;
	}
	shf.r.wrap.b32 	%r11209, %r11208, %r11207, 25;
	shf.r.wrap.b32 	%r11210, %r11207, %r11208, 25;
	mov.b64 	%rd15651, {%r11210, %r11209};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11211,%dummy}, %rd15620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11212}, %rd15620;
	}
	shf.r.wrap.b32 	%r11213, %r11212, %r11211, 23;
	shf.r.wrap.b32 	%r11214, %r11211, %r11212, 23;
	mov.b64 	%rd15652, {%r11214, %r11213};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11215}, %rd15626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11216,%dummy}, %rd15626;
	}
	shf.l.wrap.b32 	%r11217, %r11216, %r11215, 2;
	shf.l.wrap.b32 	%r11218, %r11215, %r11216, 2;
	mov.b64 	%rd15653, {%r11218, %r11217};
	not.b64 	%rd15654, %rd15630;
	and.b64  	%rd15655, %rd15631, %rd15654;
	xor.b64  	%rd15656, %rd15655, %rd15605;
	not.b64 	%rd15657, %rd15631;
	and.b64  	%rd15658, %rd15632, %rd15657;
	xor.b64  	%rd15659, %rd15658, %rd15630;
	st.local.u64 	[%rd2+8], %rd15659;
	not.b64 	%rd15660, %rd15632;
	and.b64  	%rd15661, %rd15633, %rd15660;
	xor.b64  	%rd15662, %rd15661, %rd15631;
	st.local.u64 	[%rd2+16], %rd15662;
	not.b64 	%rd15663, %rd15633;
	and.b64  	%rd15664, %rd15605, %rd15663;
	xor.b64  	%rd15665, %rd15664, %rd15632;
	st.local.u64 	[%rd2+24], %rd15665;
	not.b64 	%rd15666, %rd15605;
	and.b64  	%rd15667, %rd15630, %rd15666;
	xor.b64  	%rd15668, %rd15667, %rd15633;
	st.local.u64 	[%rd2+32], %rd15668;
	not.b64 	%rd15669, %rd15635;
	and.b64  	%rd15670, %rd15636, %rd15669;
	xor.b64  	%rd15671, %rd15670, %rd15634;
	st.local.u64 	[%rd2+40], %rd15671;
	not.b64 	%rd15672, %rd15636;
	and.b64  	%rd15673, %rd15637, %rd15672;
	xor.b64  	%rd15674, %rd15673, %rd15635;
	st.local.u64 	[%rd2+48], %rd15674;
	not.b64 	%rd15675, %rd15637;
	and.b64  	%rd15676, %rd15638, %rd15675;
	xor.b64  	%rd15677, %rd15676, %rd15636;
	st.local.u64 	[%rd2+56], %rd15677;
	not.b64 	%rd15678, %rd15638;
	and.b64  	%rd15679, %rd15634, %rd15678;
	xor.b64  	%rd15680, %rd15679, %rd15637;
	st.local.u64 	[%rd2+64], %rd15680;
	not.b64 	%rd15681, %rd15634;
	and.b64  	%rd15682, %rd15635, %rd15681;
	xor.b64  	%rd15683, %rd15682, %rd15638;
	st.local.u64 	[%rd2+72], %rd15683;
	not.b64 	%rd15684, %rd15640;
	and.b64  	%rd15685, %rd15641, %rd15684;
	xor.b64  	%rd15686, %rd15685, %rd15639;
	st.local.u64 	[%rd2+80], %rd15686;
	not.b64 	%rd15687, %rd15641;
	and.b64  	%rd15688, %rd15642, %rd15687;
	xor.b64  	%rd15689, %rd15688, %rd15640;
	st.local.u64 	[%rd2+88], %rd15689;
	not.b64 	%rd15690, %rd15642;
	and.b64  	%rd15691, %rd15643, %rd15690;
	xor.b64  	%rd15692, %rd15691, %rd15641;
	st.local.u64 	[%rd2+96], %rd15692;
	not.b64 	%rd15693, %rd15643;
	and.b64  	%rd15694, %rd15639, %rd15693;
	xor.b64  	%rd15695, %rd15694, %rd15642;
	st.local.u64 	[%rd2+104], %rd15695;
	not.b64 	%rd15696, %rd15639;
	and.b64  	%rd15697, %rd15640, %rd15696;
	xor.b64  	%rd15698, %rd15697, %rd15643;
	st.local.u64 	[%rd2+112], %rd15698;
	not.b64 	%rd15699, %rd15645;
	and.b64  	%rd15700, %rd15646, %rd15699;
	xor.b64  	%rd15701, %rd15700, %rd15644;
	st.local.u64 	[%rd2+120], %rd15701;
	not.b64 	%rd15702, %rd15646;
	and.b64  	%rd15703, %rd15647, %rd15702;
	xor.b64  	%rd15704, %rd15703, %rd15645;
	st.local.u64 	[%rd2+128], %rd15704;
	not.b64 	%rd15705, %rd15647;
	and.b64  	%rd15706, %rd15648, %rd15705;
	xor.b64  	%rd15707, %rd15706, %rd15646;
	st.local.u64 	[%rd2+136], %rd15707;
	not.b64 	%rd15708, %rd15648;
	and.b64  	%rd15709, %rd15644, %rd15708;
	xor.b64  	%rd15710, %rd15709, %rd15647;
	st.local.u64 	[%rd2+144], %rd15710;
	not.b64 	%rd15711, %rd15644;
	and.b64  	%rd15712, %rd15645, %rd15711;
	xor.b64  	%rd15713, %rd15712, %rd15648;
	st.local.u64 	[%rd2+152], %rd15713;
	not.b64 	%rd15714, %rd15650;
	and.b64  	%rd15715, %rd15651, %rd15714;
	xor.b64  	%rd15716, %rd15715, %rd15649;
	st.local.u64 	[%rd2+160], %rd15716;
	not.b64 	%rd15717, %rd15651;
	and.b64  	%rd15718, %rd15652, %rd15717;
	xor.b64  	%rd15719, %rd15718, %rd15650;
	st.local.u64 	[%rd2+168], %rd15719;
	not.b64 	%rd15720, %rd15652;
	and.b64  	%rd15721, %rd15653, %rd15720;
	xor.b64  	%rd15722, %rd15721, %rd15651;
	st.local.u64 	[%rd2+176], %rd15722;
	not.b64 	%rd15723, %rd15653;
	and.b64  	%rd15724, %rd15649, %rd15723;
	xor.b64  	%rd15725, %rd15724, %rd15652;
	st.local.u64 	[%rd2+184], %rd15725;
	not.b64 	%rd15726, %rd15649;
	and.b64  	%rd15727, %rd15650, %rd15726;
	xor.b64  	%rd15728, %rd15727, %rd15653;
	st.local.u64 	[%rd2+192], %rd15728;
	xor.b64  	%rd15729, %rd15656, %rd39;
	st.local.u64 	[%rd2], %rd15729;
	shr.u64 	%rd130, %rd7995, 6;
	setp.eq.s64 	%p39, %rd130, 0;
	@%p39 bra 	$L__BB2_52;

	add.s64 	%rd15730, %rd130, -1;
	and.b64  	%rd19862, %rd130, 3;
	setp.lt.u64 	%p40, %rd15730, 3;
	mov.u32 	%r14037, 0;
	@%p40 bra 	$L__BB2_50;

	sub.s64 	%rd19861, %rd130, %rd19862;

$L__BB2_49:
	mul.wide.s32 	%rd15731, %r14037, 8;
	add.s64 	%rd15732, %rd2, %rd15731;
	ld.local.u8 	%rd15733, [%rd15732];
	ld.local.u8 	%rd15734, [%rd15732+1];
	bfi.b64 	%rd15735, %rd15734, %rd15733, 8, 8;
	ld.local.u8 	%rd15736, [%rd15732+2];
	ld.local.u8 	%rd15737, [%rd15732+3];
	bfi.b64 	%rd15738, %rd15737, %rd15736, 8, 8;
	bfi.b64 	%rd15739, %rd15738, %rd15735, 16, 16;
	ld.local.u8 	%rd15740, [%rd15732+4];
	ld.local.u8 	%rd15741, [%rd15732+5];
	bfi.b64 	%rd15742, %rd15741, %rd15740, 8, 8;
	ld.local.u8 	%rd15743, [%rd15732+6];
	ld.local.u8 	%rd15744, [%rd15732+7];
	bfi.b64 	%rd15745, %rd15744, %rd15743, 8, 8;
	bfi.b64 	%rd15746, %rd15745, %rd15742, 16, 16;
	bfi.b64 	%rd15747, %rd15746, %rd15739, 32, 32;
	st.local.u8 	[%rd15732+200], %rd15735;
	shr.u64 	%rd15748, %rd15735, 8;
	st.local.u8 	[%rd15732+201], %rd15748;
	shr.u64 	%rd15749, %rd15739, 24;
	st.local.u8 	[%rd15732+203], %rd15749;
	shr.u64 	%rd15750, %rd15739, 16;
	st.local.u8 	[%rd15732+202], %rd15750;
	shr.u64 	%rd15751, %rd15747, 56;
	st.local.u8 	[%rd15732+207], %rd15751;
	shr.u64 	%rd15752, %rd15747, 48;
	st.local.u8 	[%rd15732+206], %rd15752;
	shr.u64 	%rd15753, %rd15747, 40;
	st.local.u8 	[%rd15732+205], %rd15753;
	shr.u64 	%rd15754, %rd15747, 32;
	st.local.u8 	[%rd15732+204], %rd15754;
	ld.local.u8 	%rd15755, [%rd15732+8];
	ld.local.u8 	%rd15756, [%rd15732+9];
	bfi.b64 	%rd15757, %rd15756, %rd15755, 8, 8;
	ld.local.u8 	%rd15758, [%rd15732+10];
	ld.local.u8 	%rd15759, [%rd15732+11];
	bfi.b64 	%rd15760, %rd15759, %rd15758, 8, 8;
	bfi.b64 	%rd15761, %rd15760, %rd15757, 16, 16;
	ld.local.u8 	%rd15762, [%rd15732+12];
	ld.local.u8 	%rd15763, [%rd15732+13];
	bfi.b64 	%rd15764, %rd15763, %rd15762, 8, 8;
	ld.local.u8 	%rd15765, [%rd15732+14];
	ld.local.u8 	%rd15766, [%rd15732+15];
	bfi.b64 	%rd15767, %rd15766, %rd15765, 8, 8;
	bfi.b64 	%rd15768, %rd15767, %rd15764, 16, 16;
	bfi.b64 	%rd15769, %rd15768, %rd15761, 32, 32;
	st.local.u8 	[%rd15732+208], %rd15757;
	shr.u64 	%rd15770, %rd15757, 8;
	st.local.u8 	[%rd15732+209], %rd15770;
	shr.u64 	%rd15771, %rd15761, 24;
	st.local.u8 	[%rd15732+211], %rd15771;
	shr.u64 	%rd15772, %rd15761, 16;
	st.local.u8 	[%rd15732+210], %rd15772;
	shr.u64 	%rd15773, %rd15769, 56;
	st.local.u8 	[%rd15732+215], %rd15773;
	shr.u64 	%rd15774, %rd15769, 48;
	st.local.u8 	[%rd15732+214], %rd15774;
	shr.u64 	%rd15775, %rd15769, 40;
	st.local.u8 	[%rd15732+213], %rd15775;
	shr.u64 	%rd15776, %rd15769, 32;
	st.local.u8 	[%rd15732+212], %rd15776;
	ld.local.u8 	%rd15777, [%rd15732+16];
	ld.local.u8 	%rd15778, [%rd15732+17];
	bfi.b64 	%rd15779, %rd15778, %rd15777, 8, 8;
	ld.local.u8 	%rd15780, [%rd15732+18];
	ld.local.u8 	%rd15781, [%rd15732+19];
	bfi.b64 	%rd15782, %rd15781, %rd15780, 8, 8;
	bfi.b64 	%rd15783, %rd15782, %rd15779, 16, 16;
	ld.local.u8 	%rd15784, [%rd15732+20];
	ld.local.u8 	%rd15785, [%rd15732+21];
	bfi.b64 	%rd15786, %rd15785, %rd15784, 8, 8;
	ld.local.u8 	%rd15787, [%rd15732+22];
	ld.local.u8 	%rd15788, [%rd15732+23];
	bfi.b64 	%rd15789, %rd15788, %rd15787, 8, 8;
	bfi.b64 	%rd15790, %rd15789, %rd15786, 16, 16;
	bfi.b64 	%rd15791, %rd15790, %rd15783, 32, 32;
	st.local.u8 	[%rd15732+216], %rd15779;
	shr.u64 	%rd15792, %rd15779, 8;
	st.local.u8 	[%rd15732+217], %rd15792;
	shr.u64 	%rd15793, %rd15783, 24;
	st.local.u8 	[%rd15732+219], %rd15793;
	shr.u64 	%rd15794, %rd15783, 16;
	st.local.u8 	[%rd15732+218], %rd15794;
	shr.u64 	%rd15795, %rd15791, 56;
	st.local.u8 	[%rd15732+223], %rd15795;
	shr.u64 	%rd15796, %rd15791, 48;
	st.local.u8 	[%rd15732+222], %rd15796;
	shr.u64 	%rd15797, %rd15791, 40;
	st.local.u8 	[%rd15732+221], %rd15797;
	shr.u64 	%rd15798, %rd15791, 32;
	st.local.u8 	[%rd15732+220], %rd15798;
	ld.local.u8 	%rd15799, [%rd15732+24];
	ld.local.u8 	%rd15800, [%rd15732+25];
	bfi.b64 	%rd15801, %rd15800, %rd15799, 8, 8;
	ld.local.u8 	%rd15802, [%rd15732+26];
	ld.local.u8 	%rd15803, [%rd15732+27];
	bfi.b64 	%rd15804, %rd15803, %rd15802, 8, 8;
	bfi.b64 	%rd15805, %rd15804, %rd15801, 16, 16;
	ld.local.u8 	%rd15806, [%rd15732+28];
	ld.local.u8 	%rd15807, [%rd15732+29];
	bfi.b64 	%rd15808, %rd15807, %rd15806, 8, 8;
	ld.local.u8 	%rd15809, [%rd15732+30];
	ld.local.u8 	%rd15810, [%rd15732+31];
	bfi.b64 	%rd15811, %rd15810, %rd15809, 8, 8;
	bfi.b64 	%rd15812, %rd15811, %rd15808, 16, 16;
	bfi.b64 	%rd15813, %rd15812, %rd15805, 32, 32;
	st.local.u8 	[%rd15732+224], %rd15801;
	shr.u64 	%rd15814, %rd15801, 8;
	st.local.u8 	[%rd15732+225], %rd15814;
	shr.u64 	%rd15815, %rd15805, 24;
	st.local.u8 	[%rd15732+227], %rd15815;
	shr.u64 	%rd15816, %rd15805, 16;
	st.local.u8 	[%rd15732+226], %rd15816;
	shr.u64 	%rd15817, %rd15813, 56;
	st.local.u8 	[%rd15732+231], %rd15817;
	shr.u64 	%rd15818, %rd15813, 48;
	st.local.u8 	[%rd15732+230], %rd15818;
	shr.u64 	%rd15819, %rd15813, 40;
	st.local.u8 	[%rd15732+229], %rd15819;
	shr.u64 	%rd15820, %rd15813, 32;
	st.local.u8 	[%rd15732+228], %rd15820;
	add.s32 	%r14037, %r14037, 4;
	add.s64 	%rd19861, %rd19861, -4;
	setp.ne.s64 	%p41, %rd19861, 0;
	@%p41 bra 	$L__BB2_49;

$L__BB2_50:
	setp.eq.s64 	%p42, %rd19862, 0;
	@%p42 bra 	$L__BB2_52;

$L__BB2_51:
	.pragma "nounroll";
	mul.wide.s32 	%rd15821, %r14037, 8;
	add.s64 	%rd15822, %rd2, %rd15821;
	ld.local.u8 	%rd15823, [%rd15822];
	ld.local.u8 	%rd15824, [%rd15822+1];
	bfi.b64 	%rd15825, %rd15824, %rd15823, 8, 8;
	ld.local.u8 	%rd15826, [%rd15822+2];
	ld.local.u8 	%rd15827, [%rd15822+3];
	bfi.b64 	%rd15828, %rd15827, %rd15826, 8, 8;
	bfi.b64 	%rd15829, %rd15828, %rd15825, 16, 16;
	ld.local.u8 	%rd15830, [%rd15822+4];
	ld.local.u8 	%rd15831, [%rd15822+5];
	bfi.b64 	%rd15832, %rd15831, %rd15830, 8, 8;
	ld.local.u8 	%rd15833, [%rd15822+6];
	ld.local.u8 	%rd15834, [%rd15822+7];
	bfi.b64 	%rd15835, %rd15834, %rd15833, 8, 8;
	bfi.b64 	%rd15836, %rd15835, %rd15832, 16, 16;
	bfi.b64 	%rd15837, %rd15836, %rd15829, 32, 32;
	shl.b32 	%r11221, %r14037, 3;
	cvt.s64.s32 	%rd15838, %r11221;
	add.s64 	%rd15839, %rd2, %rd15838;
	st.local.u8 	[%rd15839+200], %rd15825;
	shr.u64 	%rd15840, %rd15825, 8;
	st.local.u8 	[%rd15839+201], %rd15840;
	shr.u64 	%rd15841, %rd15829, 24;
	st.local.u8 	[%rd15839+203], %rd15841;
	shr.u64 	%rd15842, %rd15829, 16;
	st.local.u8 	[%rd15839+202], %rd15842;
	shr.u64 	%rd15843, %rd15837, 56;
	st.local.u8 	[%rd15839+207], %rd15843;
	shr.u64 	%rd15844, %rd15837, 48;
	st.local.u8 	[%rd15839+206], %rd15844;
	shr.u64 	%rd15845, %rd15837, 40;
	st.local.u8 	[%rd15839+205], %rd15845;
	shr.u64 	%rd15846, %rd15837, 32;
	st.local.u8 	[%rd15839+204], %rd15846;
	add.s32 	%r14037, %r14037, 1;
	add.s64 	%rd19862, %rd19862, -1;
	setp.ne.s64 	%p43, %rd19862, 0;
	@%p43 bra 	$L__BB2_51;

$L__BB2_52:
	st.local.u64 	[%rd2+392], %rd7995;
	ld.const.u64 	%rd137, [digestbitlen];
	setp.eq.s64 	%p44, %rd137, 0;
	@%p44 bra 	$L__BB2_73;

	mov.u64 	%rd19864, 0;
	mov.u64 	%rd19866, %rd7995;

$L__BB2_54:
	setp.ne.s64 	%p45, %rd19866, 0;
	@%p45 bra 	$L__BB2_64;

	ld.const.u64 	%rd19819, [CUDA_KECCAK_CONSTS+88];
	ld.const.u64 	%rd19818, [CUDA_KECCAK_CONSTS+80];
	ld.const.u64 	%rd19817, [CUDA_KECCAK_CONSTS+72];
	ld.const.u64 	%rd19816, [CUDA_KECCAK_CONSTS+64];
	ld.const.u64 	%rd19815, [CUDA_KECCAK_CONSTS+56];
	ld.const.u64 	%rd19814, [CUDA_KECCAK_CONSTS+48];
	ld.const.u64 	%rd19813, [CUDA_KECCAK_CONSTS+40];
	ld.const.u64 	%rd19812, [CUDA_KECCAK_CONSTS+32];
	ld.const.u64 	%rd19811, [CUDA_KECCAK_CONSTS+24];
	ld.const.u64 	%rd19810, [CUDA_KECCAK_CONSTS+16];
	ld.const.u64 	%rd19809, [CUDA_KECCAK_CONSTS+8];
	ld.const.u64 	%rd19808, [CUDA_KECCAK_CONSTS];
	ld.local.u64 	%rd15849, [%rd2+40];
	ld.local.u64 	%rd15850, [%rd2];
	xor.b64  	%rd15851, %rd15849, %rd15850;
	ld.local.u64 	%rd15852, [%rd2+80];
	xor.b64  	%rd15853, %rd15851, %rd15852;
	ld.local.u64 	%rd15854, [%rd2+120];
	xor.b64  	%rd15855, %rd15853, %rd15854;
	ld.local.u64 	%rd15856, [%rd2+160];
	xor.b64  	%rd15857, %rd15855, %rd15856;
	ld.local.u64 	%rd15858, [%rd2+48];
	ld.local.u64 	%rd15859, [%rd2+8];
	xor.b64  	%rd15860, %rd15858, %rd15859;
	ld.local.u64 	%rd15861, [%rd2+88];
	xor.b64  	%rd15862, %rd15860, %rd15861;
	ld.local.u64 	%rd15863, [%rd2+128];
	xor.b64  	%rd15864, %rd15862, %rd15863;
	ld.local.u64 	%rd15865, [%rd2+168];
	xor.b64  	%rd15866, %rd15864, %rd15865;
	ld.local.u64 	%rd15867, [%rd2+56];
	ld.local.u64 	%rd15868, [%rd2+16];
	xor.b64  	%rd15869, %rd15867, %rd15868;
	ld.local.u64 	%rd15870, [%rd2+96];
	xor.b64  	%rd15871, %rd15869, %rd15870;
	ld.local.u64 	%rd15872, [%rd2+136];
	xor.b64  	%rd15873, %rd15871, %rd15872;
	ld.local.u64 	%rd15874, [%rd2+176];
	xor.b64  	%rd15875, %rd15873, %rd15874;
	ld.local.u64 	%rd15876, [%rd2+64];
	ld.local.u64 	%rd15877, [%rd2+24];
	xor.b64  	%rd15878, %rd15876, %rd15877;
	ld.local.u64 	%rd15879, [%rd2+104];
	xor.b64  	%rd15880, %rd15878, %rd15879;
	ld.local.u64 	%rd15881, [%rd2+144];
	xor.b64  	%rd15882, %rd15880, %rd15881;
	ld.local.u64 	%rd15883, [%rd2+184];
	xor.b64  	%rd15884, %rd15882, %rd15883;
	ld.local.u64 	%rd15885, [%rd2+72];
	ld.local.u64 	%rd15886, [%rd2+32];
	xor.b64  	%rd15887, %rd15885, %rd15886;
	ld.local.u64 	%rd15888, [%rd2+112];
	xor.b64  	%rd15889, %rd15887, %rd15888;
	ld.local.u64 	%rd15890, [%rd2+152];
	xor.b64  	%rd15891, %rd15889, %rd15890;
	ld.local.u64 	%rd15892, [%rd2+192];
	xor.b64  	%rd15893, %rd15891, %rd15892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11222}, %rd15866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11223,%dummy}, %rd15866;
	}
	shf.l.wrap.b32 	%r11224, %r11223, %r11222, 1;
	shf.l.wrap.b32 	%r11225, %r11222, %r11223, 1;
	mov.b64 	%rd15894, {%r11225, %r11224};
	xor.b64  	%rd15895, %rd15893, %rd15894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11226}, %rd15875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11227,%dummy}, %rd15875;
	}
	shf.l.wrap.b32 	%r11228, %r11227, %r11226, 1;
	shf.l.wrap.b32 	%r11229, %r11226, %r11227, 1;
	mov.b64 	%rd15896, {%r11229, %r11228};
	xor.b64  	%rd15897, %rd15896, %rd15857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11230}, %rd15884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11231,%dummy}, %rd15884;
	}
	shf.l.wrap.b32 	%r11232, %r11231, %r11230, 1;
	shf.l.wrap.b32 	%r11233, %r11230, %r11231, 1;
	mov.b64 	%rd15898, {%r11233, %r11232};
	xor.b64  	%rd15899, %rd15898, %rd15866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11234}, %rd15893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11235,%dummy}, %rd15893;
	}
	shf.l.wrap.b32 	%r11236, %r11235, %r11234, 1;
	shf.l.wrap.b32 	%r11237, %r11234, %r11235, 1;
	mov.b64 	%rd15900, {%r11237, %r11236};
	xor.b64  	%rd15901, %rd15900, %rd15875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11238}, %rd15857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11239,%dummy}, %rd15857;
	}
	shf.l.wrap.b32 	%r11240, %r11239, %r11238, 1;
	shf.l.wrap.b32 	%r11241, %r11238, %r11239, 1;
	mov.b64 	%rd15902, {%r11241, %r11240};
	xor.b64  	%rd15903, %rd15884, %rd15902;
	xor.b64  	%rd15904, %rd15895, %rd15850;
	xor.b64  	%rd15905, %rd15897, %rd15859;
	xor.b64  	%rd15906, %rd15899, %rd15868;
	xor.b64  	%rd15907, %rd15901, %rd15877;
	xor.b64  	%rd15908, %rd15903, %rd15886;
	xor.b64  	%rd15909, %rd15895, %rd15849;
	xor.b64  	%rd15910, %rd15897, %rd15858;
	xor.b64  	%rd15911, %rd15899, %rd15867;
	xor.b64  	%rd15912, %rd15901, %rd15876;
	xor.b64  	%rd15913, %rd15903, %rd15885;
	xor.b64  	%rd15914, %rd15895, %rd15852;
	xor.b64  	%rd15915, %rd15897, %rd15861;
	xor.b64  	%rd15916, %rd15899, %rd15870;
	xor.b64  	%rd15917, %rd15901, %rd15879;
	xor.b64  	%rd15918, %rd15903, %rd15888;
	xor.b64  	%rd15919, %rd15895, %rd15854;
	xor.b64  	%rd15920, %rd15897, %rd15863;
	xor.b64  	%rd15921, %rd15899, %rd15872;
	xor.b64  	%rd15922, %rd15901, %rd15881;
	xor.b64  	%rd15923, %rd15903, %rd15890;
	xor.b64  	%rd15924, %rd15895, %rd15856;
	xor.b64  	%rd15925, %rd15897, %rd15865;
	xor.b64  	%rd15926, %rd15899, %rd15874;
	xor.b64  	%rd15927, %rd15901, %rd15883;
	xor.b64  	%rd15928, %rd15903, %rd15892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11242,%dummy}, %rd15910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11243}, %rd15910;
	}
	shf.r.wrap.b32 	%r11244, %r11243, %r11242, 20;
	shf.r.wrap.b32 	%r11245, %r11242, %r11243, 20;
	mov.b64 	%rd15929, {%r11245, %r11244};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11246,%dummy}, %rd15916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11247}, %rd15916;
	}
	shf.r.wrap.b32 	%r11248, %r11247, %r11246, 21;
	shf.r.wrap.b32 	%r11249, %r11246, %r11247, 21;
	mov.b64 	%rd15930, {%r11249, %r11248};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11250}, %rd15922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11251,%dummy}, %rd15922;
	}
	shf.l.wrap.b32 	%r11252, %r11251, %r11250, 21;
	shf.l.wrap.b32 	%r11253, %r11250, %r11251, 21;
	mov.b64 	%rd15931, {%r11253, %r11252};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11254}, %rd15928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11255,%dummy}, %rd15928;
	}
	shf.l.wrap.b32 	%r11256, %r11255, %r11254, 14;
	shf.l.wrap.b32 	%r11257, %r11254, %r11255, 14;
	mov.b64 	%rd15932, {%r11257, %r11256};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11258}, %rd15907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11259,%dummy}, %rd15907;
	}
	shf.l.wrap.b32 	%r11260, %r11259, %r11258, 28;
	shf.l.wrap.b32 	%r11261, %r11258, %r11259, 28;
	mov.b64 	%rd15933, {%r11261, %r11260};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11262}, %rd15913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11263,%dummy}, %rd15913;
	}
	shf.l.wrap.b32 	%r11264, %r11263, %r11262, 20;
	shf.l.wrap.b32 	%r11265, %r11262, %r11263, 20;
	mov.b64 	%rd15934, {%r11265, %r11264};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11266}, %rd15914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11267,%dummy}, %rd15914;
	}
	shf.l.wrap.b32 	%r11268, %r11267, %r11266, 3;
	shf.l.wrap.b32 	%r11269, %r11266, %r11267, 3;
	mov.b64 	%rd15935, {%r11269, %r11268};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11270,%dummy}, %rd15920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11271}, %rd15920;
	}
	shf.r.wrap.b32 	%r11272, %r11271, %r11270, 19;
	shf.r.wrap.b32 	%r11273, %r11270, %r11271, 19;
	mov.b64 	%rd15936, {%r11273, %r11272};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11274,%dummy}, %rd15926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11275}, %rd15926;
	}
	shf.r.wrap.b32 	%r11276, %r11275, %r11274, 3;
	shf.r.wrap.b32 	%r11277, %r11274, %r11275, 3;
	mov.b64 	%rd15937, {%r11277, %r11276};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11278}, %rd15905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11279,%dummy}, %rd15905;
	}
	shf.l.wrap.b32 	%r11280, %r11279, %r11278, 1;
	shf.l.wrap.b32 	%r11281, %r11278, %r11279, 1;
	mov.b64 	%rd15938, {%r11281, %r11280};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11282}, %rd15911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11283,%dummy}, %rd15911;
	}
	shf.l.wrap.b32 	%r11284, %r11283, %r11282, 6;
	shf.l.wrap.b32 	%r11285, %r11282, %r11283, 6;
	mov.b64 	%rd15939, {%r11285, %r11284};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11286}, %rd15917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11287,%dummy}, %rd15917;
	}
	shf.l.wrap.b32 	%r11288, %r11287, %r11286, 25;
	shf.l.wrap.b32 	%r11289, %r11286, %r11287, 25;
	mov.b64 	%rd15940, {%r11289, %r11288};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11290}, %rd15923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11291,%dummy}, %rd15923;
	}
	shf.l.wrap.b32 	%r11292, %r11291, %r11290, 8;
	shf.l.wrap.b32 	%r11293, %r11290, %r11291, 8;
	mov.b64 	%rd15941, {%r11293, %r11292};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11294}, %rd15924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11295,%dummy}, %rd15924;
	}
	shf.l.wrap.b32 	%r11296, %r11295, %r11294, 18;
	shf.l.wrap.b32 	%r11297, %r11294, %r11295, 18;
	mov.b64 	%rd15942, {%r11297, %r11296};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11298}, %rd15908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11299,%dummy}, %rd15908;
	}
	shf.l.wrap.b32 	%r11300, %r11299, %r11298, 27;
	shf.l.wrap.b32 	%r11301, %r11298, %r11299, 27;
	mov.b64 	%rd15943, {%r11301, %r11300};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11302,%dummy}, %rd15909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11303}, %rd15909;
	}
	shf.r.wrap.b32 	%r11304, %r11303, %r11302, 28;
	shf.r.wrap.b32 	%r11305, %r11302, %r11303, 28;
	mov.b64 	%rd15944, {%r11305, %r11304};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11306}, %rd15915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11307,%dummy}, %rd15915;
	}
	shf.l.wrap.b32 	%r11308, %r11307, %r11306, 10;
	shf.l.wrap.b32 	%r11309, %r11306, %r11307, 10;
	mov.b64 	%rd15945, {%r11309, %r11308};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11310}, %rd15921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11311,%dummy}, %rd15921;
	}
	shf.l.wrap.b32 	%r11312, %r11311, %r11310, 15;
	shf.l.wrap.b32 	%r11313, %r11310, %r11311, 15;
	mov.b64 	%rd15946, {%r11313, %r11312};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11314,%dummy}, %rd15927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11315}, %rd15927;
	}
	shf.r.wrap.b32 	%r11316, %r11315, %r11314, 8;
	shf.r.wrap.b32 	%r11317, %r11314, %r11315, 8;
	mov.b64 	%rd15947, {%r11317, %r11316};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11318,%dummy}, %rd15906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11319}, %rd15906;
	}
	shf.r.wrap.b32 	%r11320, %r11319, %r11318, 2;
	shf.r.wrap.b32 	%r11321, %r11318, %r11319, 2;
	mov.b64 	%rd15948, {%r11321, %r11320};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11322,%dummy}, %rd15912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11323}, %rd15912;
	}
	shf.r.wrap.b32 	%r11324, %r11323, %r11322, 9;
	shf.r.wrap.b32 	%r11325, %r11322, %r11323, 9;
	mov.b64 	%rd15949, {%r11325, %r11324};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11326,%dummy}, %rd15918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11327}, %rd15918;
	}
	shf.r.wrap.b32 	%r11328, %r11327, %r11326, 25;
	shf.r.wrap.b32 	%r11329, %r11326, %r11327, 25;
	mov.b64 	%rd15950, {%r11329, %r11328};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11330,%dummy}, %rd15919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11331}, %rd15919;
	}
	shf.r.wrap.b32 	%r11332, %r11331, %r11330, 23;
	shf.r.wrap.b32 	%r11333, %r11330, %r11331, 23;
	mov.b64 	%rd15951, {%r11333, %r11332};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11334}, %rd15925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11335,%dummy}, %rd15925;
	}
	shf.l.wrap.b32 	%r11336, %r11335, %r11334, 2;
	shf.l.wrap.b32 	%r11337, %r11334, %r11335, 2;
	mov.b64 	%rd15952, {%r11337, %r11336};
	not.b64 	%rd15953, %rd15929;
	and.b64  	%rd15954, %rd15930, %rd15953;
	xor.b64  	%rd15955, %rd15954, %rd15904;
	not.b64 	%rd15956, %rd15930;
	and.b64  	%rd15957, %rd15931, %rd15956;
	xor.b64  	%rd15958, %rd15957, %rd15929;
	not.b64 	%rd15959, %rd15931;
	and.b64  	%rd15960, %rd15932, %rd15959;
	xor.b64  	%rd15961, %rd15960, %rd15930;
	not.b64 	%rd15962, %rd15932;
	and.b64  	%rd15963, %rd15904, %rd15962;
	xor.b64  	%rd15964, %rd15963, %rd15931;
	not.b64 	%rd15965, %rd15904;
	and.b64  	%rd15966, %rd15929, %rd15965;
	xor.b64  	%rd15967, %rd15966, %rd15932;
	not.b64 	%rd15968, %rd15934;
	and.b64  	%rd15969, %rd15935, %rd15968;
	xor.b64  	%rd15970, %rd15969, %rd15933;
	not.b64 	%rd15971, %rd15935;
	and.b64  	%rd15972, %rd15936, %rd15971;
	xor.b64  	%rd15973, %rd15972, %rd15934;
	not.b64 	%rd15974, %rd15936;
	and.b64  	%rd15975, %rd15937, %rd15974;
	xor.b64  	%rd15976, %rd15975, %rd15935;
	not.b64 	%rd15977, %rd15937;
	and.b64  	%rd15978, %rd15933, %rd15977;
	xor.b64  	%rd15979, %rd15978, %rd15936;
	not.b64 	%rd15980, %rd15933;
	and.b64  	%rd15981, %rd15934, %rd15980;
	xor.b64  	%rd15982, %rd15981, %rd15937;
	not.b64 	%rd15983, %rd15939;
	and.b64  	%rd15984, %rd15940, %rd15983;
	xor.b64  	%rd15985, %rd15984, %rd15938;
	not.b64 	%rd15986, %rd15940;
	and.b64  	%rd15987, %rd15941, %rd15986;
	xor.b64  	%rd15988, %rd15987, %rd15939;
	not.b64 	%rd15989, %rd15941;
	and.b64  	%rd15990, %rd15942, %rd15989;
	xor.b64  	%rd15991, %rd15990, %rd15940;
	not.b64 	%rd15992, %rd15942;
	and.b64  	%rd15993, %rd15938, %rd15992;
	xor.b64  	%rd15994, %rd15993, %rd15941;
	not.b64 	%rd15995, %rd15938;
	and.b64  	%rd15996, %rd15939, %rd15995;
	xor.b64  	%rd15997, %rd15996, %rd15942;
	not.b64 	%rd15998, %rd15944;
	and.b64  	%rd15999, %rd15945, %rd15998;
	xor.b64  	%rd16000, %rd15999, %rd15943;
	not.b64 	%rd16001, %rd15945;
	and.b64  	%rd16002, %rd15946, %rd16001;
	xor.b64  	%rd16003, %rd16002, %rd15944;
	not.b64 	%rd16004, %rd15946;
	and.b64  	%rd16005, %rd15947, %rd16004;
	xor.b64  	%rd16006, %rd16005, %rd15945;
	not.b64 	%rd16007, %rd15947;
	and.b64  	%rd16008, %rd15943, %rd16007;
	xor.b64  	%rd16009, %rd16008, %rd15946;
	not.b64 	%rd16010, %rd15943;
	and.b64  	%rd16011, %rd15944, %rd16010;
	xor.b64  	%rd16012, %rd16011, %rd15947;
	not.b64 	%rd16013, %rd15949;
	and.b64  	%rd16014, %rd15950, %rd16013;
	xor.b64  	%rd16015, %rd16014, %rd15948;
	not.b64 	%rd16016, %rd15950;
	and.b64  	%rd16017, %rd15951, %rd16016;
	xor.b64  	%rd16018, %rd16017, %rd15949;
	not.b64 	%rd16019, %rd15951;
	and.b64  	%rd16020, %rd15952, %rd16019;
	xor.b64  	%rd16021, %rd16020, %rd15950;
	not.b64 	%rd16022, %rd15952;
	and.b64  	%rd16023, %rd15948, %rd16022;
	xor.b64  	%rd16024, %rd16023, %rd15951;
	not.b64 	%rd16025, %rd15948;
	and.b64  	%rd16026, %rd15949, %rd16025;
	xor.b64  	%rd16027, %rd16026, %rd15952;
	xor.b64  	%rd16028, %rd15955, %rd19808;
	xor.b64  	%rd16029, %rd15970, %rd16028;
	xor.b64  	%rd16030, %rd16029, %rd15985;
	xor.b64  	%rd16031, %rd16030, %rd16000;
	xor.b64  	%rd16032, %rd16031, %rd16015;
	xor.b64  	%rd16033, %rd15973, %rd15958;
	xor.b64  	%rd16034, %rd16033, %rd15988;
	xor.b64  	%rd16035, %rd16034, %rd16003;
	xor.b64  	%rd16036, %rd16035, %rd16018;
	xor.b64  	%rd16037, %rd15976, %rd15961;
	xor.b64  	%rd16038, %rd16037, %rd15991;
	xor.b64  	%rd16039, %rd16038, %rd16006;
	xor.b64  	%rd16040, %rd16039, %rd16021;
	xor.b64  	%rd16041, %rd15979, %rd15964;
	xor.b64  	%rd16042, %rd16041, %rd15994;
	xor.b64  	%rd16043, %rd16042, %rd16009;
	xor.b64  	%rd16044, %rd16043, %rd16024;
	xor.b64  	%rd16045, %rd15982, %rd15967;
	xor.b64  	%rd16046, %rd16045, %rd15997;
	xor.b64  	%rd16047, %rd16046, %rd16012;
	xor.b64  	%rd16048, %rd16047, %rd16027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11338}, %rd16036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11339,%dummy}, %rd16036;
	}
	shf.l.wrap.b32 	%r11340, %r11339, %r11338, 1;
	shf.l.wrap.b32 	%r11341, %r11338, %r11339, 1;
	mov.b64 	%rd16049, {%r11341, %r11340};
	xor.b64  	%rd16050, %rd16048, %rd16049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11342}, %rd16040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11343,%dummy}, %rd16040;
	}
	shf.l.wrap.b32 	%r11344, %r11343, %r11342, 1;
	shf.l.wrap.b32 	%r11345, %r11342, %r11343, 1;
	mov.b64 	%rd16051, {%r11345, %r11344};
	xor.b64  	%rd16052, %rd16051, %rd16032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11346}, %rd16044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11347,%dummy}, %rd16044;
	}
	shf.l.wrap.b32 	%r11348, %r11347, %r11346, 1;
	shf.l.wrap.b32 	%r11349, %r11346, %r11347, 1;
	mov.b64 	%rd16053, {%r11349, %r11348};
	xor.b64  	%rd16054, %rd16053, %rd16036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11350}, %rd16048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11351,%dummy}, %rd16048;
	}
	shf.l.wrap.b32 	%r11352, %r11351, %r11350, 1;
	shf.l.wrap.b32 	%r11353, %r11350, %r11351, 1;
	mov.b64 	%rd16055, {%r11353, %r11352};
	xor.b64  	%rd16056, %rd16055, %rd16040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11354}, %rd16032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11355,%dummy}, %rd16032;
	}
	shf.l.wrap.b32 	%r11356, %r11355, %r11354, 1;
	shf.l.wrap.b32 	%r11357, %r11354, %r11355, 1;
	mov.b64 	%rd16057, {%r11357, %r11356};
	xor.b64  	%rd16058, %rd16044, %rd16057;
	xor.b64  	%rd16059, %rd16050, %rd16028;
	xor.b64  	%rd16060, %rd16052, %rd15958;
	xor.b64  	%rd16061, %rd16054, %rd15961;
	xor.b64  	%rd16062, %rd16056, %rd15964;
	xor.b64  	%rd16063, %rd16058, %rd15967;
	xor.b64  	%rd16064, %rd16050, %rd15970;
	xor.b64  	%rd16065, %rd16052, %rd15973;
	xor.b64  	%rd16066, %rd16054, %rd15976;
	xor.b64  	%rd16067, %rd16056, %rd15979;
	xor.b64  	%rd16068, %rd16058, %rd15982;
	xor.b64  	%rd16069, %rd16050, %rd15985;
	xor.b64  	%rd16070, %rd16052, %rd15988;
	xor.b64  	%rd16071, %rd16054, %rd15991;
	xor.b64  	%rd16072, %rd16056, %rd15994;
	xor.b64  	%rd16073, %rd16058, %rd15997;
	xor.b64  	%rd16074, %rd16050, %rd16000;
	xor.b64  	%rd16075, %rd16052, %rd16003;
	xor.b64  	%rd16076, %rd16054, %rd16006;
	xor.b64  	%rd16077, %rd16056, %rd16009;
	xor.b64  	%rd16078, %rd16058, %rd16012;
	xor.b64  	%rd16079, %rd16050, %rd16015;
	xor.b64  	%rd16080, %rd16052, %rd16018;
	xor.b64  	%rd16081, %rd16054, %rd16021;
	xor.b64  	%rd16082, %rd16056, %rd16024;
	xor.b64  	%rd16083, %rd16058, %rd16027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11358,%dummy}, %rd16065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11359}, %rd16065;
	}
	shf.r.wrap.b32 	%r11360, %r11359, %r11358, 20;
	shf.r.wrap.b32 	%r11361, %r11358, %r11359, 20;
	mov.b64 	%rd16084, {%r11361, %r11360};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11362,%dummy}, %rd16071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11363}, %rd16071;
	}
	shf.r.wrap.b32 	%r11364, %r11363, %r11362, 21;
	shf.r.wrap.b32 	%r11365, %r11362, %r11363, 21;
	mov.b64 	%rd16085, {%r11365, %r11364};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11366}, %rd16077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11367,%dummy}, %rd16077;
	}
	shf.l.wrap.b32 	%r11368, %r11367, %r11366, 21;
	shf.l.wrap.b32 	%r11369, %r11366, %r11367, 21;
	mov.b64 	%rd16086, {%r11369, %r11368};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11370}, %rd16083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11371,%dummy}, %rd16083;
	}
	shf.l.wrap.b32 	%r11372, %r11371, %r11370, 14;
	shf.l.wrap.b32 	%r11373, %r11370, %r11371, 14;
	mov.b64 	%rd16087, {%r11373, %r11372};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11374}, %rd16062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11375,%dummy}, %rd16062;
	}
	shf.l.wrap.b32 	%r11376, %r11375, %r11374, 28;
	shf.l.wrap.b32 	%r11377, %r11374, %r11375, 28;
	mov.b64 	%rd16088, {%r11377, %r11376};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11378}, %rd16068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11379,%dummy}, %rd16068;
	}
	shf.l.wrap.b32 	%r11380, %r11379, %r11378, 20;
	shf.l.wrap.b32 	%r11381, %r11378, %r11379, 20;
	mov.b64 	%rd16089, {%r11381, %r11380};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11382}, %rd16069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11383,%dummy}, %rd16069;
	}
	shf.l.wrap.b32 	%r11384, %r11383, %r11382, 3;
	shf.l.wrap.b32 	%r11385, %r11382, %r11383, 3;
	mov.b64 	%rd16090, {%r11385, %r11384};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11386,%dummy}, %rd16075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11387}, %rd16075;
	}
	shf.r.wrap.b32 	%r11388, %r11387, %r11386, 19;
	shf.r.wrap.b32 	%r11389, %r11386, %r11387, 19;
	mov.b64 	%rd16091, {%r11389, %r11388};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11390,%dummy}, %rd16081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11391}, %rd16081;
	}
	shf.r.wrap.b32 	%r11392, %r11391, %r11390, 3;
	shf.r.wrap.b32 	%r11393, %r11390, %r11391, 3;
	mov.b64 	%rd16092, {%r11393, %r11392};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11394}, %rd16060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11395,%dummy}, %rd16060;
	}
	shf.l.wrap.b32 	%r11396, %r11395, %r11394, 1;
	shf.l.wrap.b32 	%r11397, %r11394, %r11395, 1;
	mov.b64 	%rd16093, {%r11397, %r11396};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11398}, %rd16066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11399,%dummy}, %rd16066;
	}
	shf.l.wrap.b32 	%r11400, %r11399, %r11398, 6;
	shf.l.wrap.b32 	%r11401, %r11398, %r11399, 6;
	mov.b64 	%rd16094, {%r11401, %r11400};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11402}, %rd16072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11403,%dummy}, %rd16072;
	}
	shf.l.wrap.b32 	%r11404, %r11403, %r11402, 25;
	shf.l.wrap.b32 	%r11405, %r11402, %r11403, 25;
	mov.b64 	%rd16095, {%r11405, %r11404};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11406}, %rd16078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11407,%dummy}, %rd16078;
	}
	shf.l.wrap.b32 	%r11408, %r11407, %r11406, 8;
	shf.l.wrap.b32 	%r11409, %r11406, %r11407, 8;
	mov.b64 	%rd16096, {%r11409, %r11408};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11410}, %rd16079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11411,%dummy}, %rd16079;
	}
	shf.l.wrap.b32 	%r11412, %r11411, %r11410, 18;
	shf.l.wrap.b32 	%r11413, %r11410, %r11411, 18;
	mov.b64 	%rd16097, {%r11413, %r11412};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11414}, %rd16063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11415,%dummy}, %rd16063;
	}
	shf.l.wrap.b32 	%r11416, %r11415, %r11414, 27;
	shf.l.wrap.b32 	%r11417, %r11414, %r11415, 27;
	mov.b64 	%rd16098, {%r11417, %r11416};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11418,%dummy}, %rd16064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11419}, %rd16064;
	}
	shf.r.wrap.b32 	%r11420, %r11419, %r11418, 28;
	shf.r.wrap.b32 	%r11421, %r11418, %r11419, 28;
	mov.b64 	%rd16099, {%r11421, %r11420};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11422}, %rd16070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11423,%dummy}, %rd16070;
	}
	shf.l.wrap.b32 	%r11424, %r11423, %r11422, 10;
	shf.l.wrap.b32 	%r11425, %r11422, %r11423, 10;
	mov.b64 	%rd16100, {%r11425, %r11424};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11426}, %rd16076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11427,%dummy}, %rd16076;
	}
	shf.l.wrap.b32 	%r11428, %r11427, %r11426, 15;
	shf.l.wrap.b32 	%r11429, %r11426, %r11427, 15;
	mov.b64 	%rd16101, {%r11429, %r11428};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11430,%dummy}, %rd16082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11431}, %rd16082;
	}
	shf.r.wrap.b32 	%r11432, %r11431, %r11430, 8;
	shf.r.wrap.b32 	%r11433, %r11430, %r11431, 8;
	mov.b64 	%rd16102, {%r11433, %r11432};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11434,%dummy}, %rd16061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11435}, %rd16061;
	}
	shf.r.wrap.b32 	%r11436, %r11435, %r11434, 2;
	shf.r.wrap.b32 	%r11437, %r11434, %r11435, 2;
	mov.b64 	%rd16103, {%r11437, %r11436};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11438,%dummy}, %rd16067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11439}, %rd16067;
	}
	shf.r.wrap.b32 	%r11440, %r11439, %r11438, 9;
	shf.r.wrap.b32 	%r11441, %r11438, %r11439, 9;
	mov.b64 	%rd16104, {%r11441, %r11440};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11442,%dummy}, %rd16073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11443}, %rd16073;
	}
	shf.r.wrap.b32 	%r11444, %r11443, %r11442, 25;
	shf.r.wrap.b32 	%r11445, %r11442, %r11443, 25;
	mov.b64 	%rd16105, {%r11445, %r11444};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11446,%dummy}, %rd16074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11447}, %rd16074;
	}
	shf.r.wrap.b32 	%r11448, %r11447, %r11446, 23;
	shf.r.wrap.b32 	%r11449, %r11446, %r11447, 23;
	mov.b64 	%rd16106, {%r11449, %r11448};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11450}, %rd16080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11451,%dummy}, %rd16080;
	}
	shf.l.wrap.b32 	%r11452, %r11451, %r11450, 2;
	shf.l.wrap.b32 	%r11453, %r11450, %r11451, 2;
	mov.b64 	%rd16107, {%r11453, %r11452};
	not.b64 	%rd16108, %rd16084;
	and.b64  	%rd16109, %rd16085, %rd16108;
	xor.b64  	%rd16110, %rd16109, %rd16059;
	not.b64 	%rd16111, %rd16085;
	and.b64  	%rd16112, %rd16086, %rd16111;
	xor.b64  	%rd16113, %rd16112, %rd16084;
	not.b64 	%rd16114, %rd16086;
	and.b64  	%rd16115, %rd16087, %rd16114;
	xor.b64  	%rd16116, %rd16115, %rd16085;
	not.b64 	%rd16117, %rd16087;
	and.b64  	%rd16118, %rd16059, %rd16117;
	xor.b64  	%rd16119, %rd16118, %rd16086;
	not.b64 	%rd16120, %rd16059;
	and.b64  	%rd16121, %rd16084, %rd16120;
	xor.b64  	%rd16122, %rd16121, %rd16087;
	not.b64 	%rd16123, %rd16089;
	and.b64  	%rd16124, %rd16090, %rd16123;
	xor.b64  	%rd16125, %rd16124, %rd16088;
	not.b64 	%rd16126, %rd16090;
	and.b64  	%rd16127, %rd16091, %rd16126;
	xor.b64  	%rd16128, %rd16127, %rd16089;
	not.b64 	%rd16129, %rd16091;
	and.b64  	%rd16130, %rd16092, %rd16129;
	xor.b64  	%rd16131, %rd16130, %rd16090;
	not.b64 	%rd16132, %rd16092;
	and.b64  	%rd16133, %rd16088, %rd16132;
	xor.b64  	%rd16134, %rd16133, %rd16091;
	not.b64 	%rd16135, %rd16088;
	and.b64  	%rd16136, %rd16089, %rd16135;
	xor.b64  	%rd16137, %rd16136, %rd16092;
	not.b64 	%rd16138, %rd16094;
	and.b64  	%rd16139, %rd16095, %rd16138;
	xor.b64  	%rd16140, %rd16139, %rd16093;
	not.b64 	%rd16141, %rd16095;
	and.b64  	%rd16142, %rd16096, %rd16141;
	xor.b64  	%rd16143, %rd16142, %rd16094;
	not.b64 	%rd16144, %rd16096;
	and.b64  	%rd16145, %rd16097, %rd16144;
	xor.b64  	%rd16146, %rd16145, %rd16095;
	not.b64 	%rd16147, %rd16097;
	and.b64  	%rd16148, %rd16093, %rd16147;
	xor.b64  	%rd16149, %rd16148, %rd16096;
	not.b64 	%rd16150, %rd16093;
	and.b64  	%rd16151, %rd16094, %rd16150;
	xor.b64  	%rd16152, %rd16151, %rd16097;
	not.b64 	%rd16153, %rd16099;
	and.b64  	%rd16154, %rd16100, %rd16153;
	xor.b64  	%rd16155, %rd16154, %rd16098;
	not.b64 	%rd16156, %rd16100;
	and.b64  	%rd16157, %rd16101, %rd16156;
	xor.b64  	%rd16158, %rd16157, %rd16099;
	not.b64 	%rd16159, %rd16101;
	and.b64  	%rd16160, %rd16102, %rd16159;
	xor.b64  	%rd16161, %rd16160, %rd16100;
	not.b64 	%rd16162, %rd16102;
	and.b64  	%rd16163, %rd16098, %rd16162;
	xor.b64  	%rd16164, %rd16163, %rd16101;
	not.b64 	%rd16165, %rd16098;
	and.b64  	%rd16166, %rd16099, %rd16165;
	xor.b64  	%rd16167, %rd16166, %rd16102;
	not.b64 	%rd16168, %rd16104;
	and.b64  	%rd16169, %rd16105, %rd16168;
	xor.b64  	%rd16170, %rd16169, %rd16103;
	not.b64 	%rd16171, %rd16105;
	and.b64  	%rd16172, %rd16106, %rd16171;
	xor.b64  	%rd16173, %rd16172, %rd16104;
	not.b64 	%rd16174, %rd16106;
	and.b64  	%rd16175, %rd16107, %rd16174;
	xor.b64  	%rd16176, %rd16175, %rd16105;
	not.b64 	%rd16177, %rd16107;
	and.b64  	%rd16178, %rd16103, %rd16177;
	xor.b64  	%rd16179, %rd16178, %rd16106;
	not.b64 	%rd16180, %rd16103;
	and.b64  	%rd16181, %rd16104, %rd16180;
	xor.b64  	%rd16182, %rd16181, %rd16107;
	xor.b64  	%rd16183, %rd16110, %rd19809;
	xor.b64  	%rd16184, %rd16125, %rd16183;
	xor.b64  	%rd16185, %rd16184, %rd16140;
	xor.b64  	%rd16186, %rd16185, %rd16155;
	xor.b64  	%rd16187, %rd16186, %rd16170;
	xor.b64  	%rd16188, %rd16128, %rd16113;
	xor.b64  	%rd16189, %rd16188, %rd16143;
	xor.b64  	%rd16190, %rd16189, %rd16158;
	xor.b64  	%rd16191, %rd16190, %rd16173;
	xor.b64  	%rd16192, %rd16131, %rd16116;
	xor.b64  	%rd16193, %rd16192, %rd16146;
	xor.b64  	%rd16194, %rd16193, %rd16161;
	xor.b64  	%rd16195, %rd16194, %rd16176;
	xor.b64  	%rd16196, %rd16134, %rd16119;
	xor.b64  	%rd16197, %rd16196, %rd16149;
	xor.b64  	%rd16198, %rd16197, %rd16164;
	xor.b64  	%rd16199, %rd16198, %rd16179;
	xor.b64  	%rd16200, %rd16137, %rd16122;
	xor.b64  	%rd16201, %rd16200, %rd16152;
	xor.b64  	%rd16202, %rd16201, %rd16167;
	xor.b64  	%rd16203, %rd16202, %rd16182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11454}, %rd16191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11455,%dummy}, %rd16191;
	}
	shf.l.wrap.b32 	%r11456, %r11455, %r11454, 1;
	shf.l.wrap.b32 	%r11457, %r11454, %r11455, 1;
	mov.b64 	%rd16204, {%r11457, %r11456};
	xor.b64  	%rd16205, %rd16203, %rd16204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11458}, %rd16195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11459,%dummy}, %rd16195;
	}
	shf.l.wrap.b32 	%r11460, %r11459, %r11458, 1;
	shf.l.wrap.b32 	%r11461, %r11458, %r11459, 1;
	mov.b64 	%rd16206, {%r11461, %r11460};
	xor.b64  	%rd16207, %rd16206, %rd16187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11462}, %rd16199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11463,%dummy}, %rd16199;
	}
	shf.l.wrap.b32 	%r11464, %r11463, %r11462, 1;
	shf.l.wrap.b32 	%r11465, %r11462, %r11463, 1;
	mov.b64 	%rd16208, {%r11465, %r11464};
	xor.b64  	%rd16209, %rd16208, %rd16191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11466}, %rd16203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11467,%dummy}, %rd16203;
	}
	shf.l.wrap.b32 	%r11468, %r11467, %r11466, 1;
	shf.l.wrap.b32 	%r11469, %r11466, %r11467, 1;
	mov.b64 	%rd16210, {%r11469, %r11468};
	xor.b64  	%rd16211, %rd16210, %rd16195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11470}, %rd16187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11471,%dummy}, %rd16187;
	}
	shf.l.wrap.b32 	%r11472, %r11471, %r11470, 1;
	shf.l.wrap.b32 	%r11473, %r11470, %r11471, 1;
	mov.b64 	%rd16212, {%r11473, %r11472};
	xor.b64  	%rd16213, %rd16199, %rd16212;
	xor.b64  	%rd16214, %rd16205, %rd16183;
	xor.b64  	%rd16215, %rd16207, %rd16113;
	xor.b64  	%rd16216, %rd16209, %rd16116;
	xor.b64  	%rd16217, %rd16211, %rd16119;
	xor.b64  	%rd16218, %rd16213, %rd16122;
	xor.b64  	%rd16219, %rd16205, %rd16125;
	xor.b64  	%rd16220, %rd16207, %rd16128;
	xor.b64  	%rd16221, %rd16209, %rd16131;
	xor.b64  	%rd16222, %rd16211, %rd16134;
	xor.b64  	%rd16223, %rd16213, %rd16137;
	xor.b64  	%rd16224, %rd16205, %rd16140;
	xor.b64  	%rd16225, %rd16207, %rd16143;
	xor.b64  	%rd16226, %rd16209, %rd16146;
	xor.b64  	%rd16227, %rd16211, %rd16149;
	xor.b64  	%rd16228, %rd16213, %rd16152;
	xor.b64  	%rd16229, %rd16205, %rd16155;
	xor.b64  	%rd16230, %rd16207, %rd16158;
	xor.b64  	%rd16231, %rd16209, %rd16161;
	xor.b64  	%rd16232, %rd16211, %rd16164;
	xor.b64  	%rd16233, %rd16213, %rd16167;
	xor.b64  	%rd16234, %rd16205, %rd16170;
	xor.b64  	%rd16235, %rd16207, %rd16173;
	xor.b64  	%rd16236, %rd16209, %rd16176;
	xor.b64  	%rd16237, %rd16211, %rd16179;
	xor.b64  	%rd16238, %rd16213, %rd16182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11474,%dummy}, %rd16220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11475}, %rd16220;
	}
	shf.r.wrap.b32 	%r11476, %r11475, %r11474, 20;
	shf.r.wrap.b32 	%r11477, %r11474, %r11475, 20;
	mov.b64 	%rd16239, {%r11477, %r11476};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11478,%dummy}, %rd16226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11479}, %rd16226;
	}
	shf.r.wrap.b32 	%r11480, %r11479, %r11478, 21;
	shf.r.wrap.b32 	%r11481, %r11478, %r11479, 21;
	mov.b64 	%rd16240, {%r11481, %r11480};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11482}, %rd16232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11483,%dummy}, %rd16232;
	}
	shf.l.wrap.b32 	%r11484, %r11483, %r11482, 21;
	shf.l.wrap.b32 	%r11485, %r11482, %r11483, 21;
	mov.b64 	%rd16241, {%r11485, %r11484};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11486}, %rd16238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11487,%dummy}, %rd16238;
	}
	shf.l.wrap.b32 	%r11488, %r11487, %r11486, 14;
	shf.l.wrap.b32 	%r11489, %r11486, %r11487, 14;
	mov.b64 	%rd16242, {%r11489, %r11488};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11490}, %rd16217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11491,%dummy}, %rd16217;
	}
	shf.l.wrap.b32 	%r11492, %r11491, %r11490, 28;
	shf.l.wrap.b32 	%r11493, %r11490, %r11491, 28;
	mov.b64 	%rd16243, {%r11493, %r11492};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11494}, %rd16223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11495,%dummy}, %rd16223;
	}
	shf.l.wrap.b32 	%r11496, %r11495, %r11494, 20;
	shf.l.wrap.b32 	%r11497, %r11494, %r11495, 20;
	mov.b64 	%rd16244, {%r11497, %r11496};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11498}, %rd16224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11499,%dummy}, %rd16224;
	}
	shf.l.wrap.b32 	%r11500, %r11499, %r11498, 3;
	shf.l.wrap.b32 	%r11501, %r11498, %r11499, 3;
	mov.b64 	%rd16245, {%r11501, %r11500};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11502,%dummy}, %rd16230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11503}, %rd16230;
	}
	shf.r.wrap.b32 	%r11504, %r11503, %r11502, 19;
	shf.r.wrap.b32 	%r11505, %r11502, %r11503, 19;
	mov.b64 	%rd16246, {%r11505, %r11504};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11506,%dummy}, %rd16236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11507}, %rd16236;
	}
	shf.r.wrap.b32 	%r11508, %r11507, %r11506, 3;
	shf.r.wrap.b32 	%r11509, %r11506, %r11507, 3;
	mov.b64 	%rd16247, {%r11509, %r11508};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11510}, %rd16215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11511,%dummy}, %rd16215;
	}
	shf.l.wrap.b32 	%r11512, %r11511, %r11510, 1;
	shf.l.wrap.b32 	%r11513, %r11510, %r11511, 1;
	mov.b64 	%rd16248, {%r11513, %r11512};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11514}, %rd16221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11515,%dummy}, %rd16221;
	}
	shf.l.wrap.b32 	%r11516, %r11515, %r11514, 6;
	shf.l.wrap.b32 	%r11517, %r11514, %r11515, 6;
	mov.b64 	%rd16249, {%r11517, %r11516};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11518}, %rd16227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11519,%dummy}, %rd16227;
	}
	shf.l.wrap.b32 	%r11520, %r11519, %r11518, 25;
	shf.l.wrap.b32 	%r11521, %r11518, %r11519, 25;
	mov.b64 	%rd16250, {%r11521, %r11520};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11522}, %rd16233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11523,%dummy}, %rd16233;
	}
	shf.l.wrap.b32 	%r11524, %r11523, %r11522, 8;
	shf.l.wrap.b32 	%r11525, %r11522, %r11523, 8;
	mov.b64 	%rd16251, {%r11525, %r11524};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11526}, %rd16234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11527,%dummy}, %rd16234;
	}
	shf.l.wrap.b32 	%r11528, %r11527, %r11526, 18;
	shf.l.wrap.b32 	%r11529, %r11526, %r11527, 18;
	mov.b64 	%rd16252, {%r11529, %r11528};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11530}, %rd16218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11531,%dummy}, %rd16218;
	}
	shf.l.wrap.b32 	%r11532, %r11531, %r11530, 27;
	shf.l.wrap.b32 	%r11533, %r11530, %r11531, 27;
	mov.b64 	%rd16253, {%r11533, %r11532};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11534,%dummy}, %rd16219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11535}, %rd16219;
	}
	shf.r.wrap.b32 	%r11536, %r11535, %r11534, 28;
	shf.r.wrap.b32 	%r11537, %r11534, %r11535, 28;
	mov.b64 	%rd16254, {%r11537, %r11536};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11538}, %rd16225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11539,%dummy}, %rd16225;
	}
	shf.l.wrap.b32 	%r11540, %r11539, %r11538, 10;
	shf.l.wrap.b32 	%r11541, %r11538, %r11539, 10;
	mov.b64 	%rd16255, {%r11541, %r11540};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11542}, %rd16231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11543,%dummy}, %rd16231;
	}
	shf.l.wrap.b32 	%r11544, %r11543, %r11542, 15;
	shf.l.wrap.b32 	%r11545, %r11542, %r11543, 15;
	mov.b64 	%rd16256, {%r11545, %r11544};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11546,%dummy}, %rd16237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11547}, %rd16237;
	}
	shf.r.wrap.b32 	%r11548, %r11547, %r11546, 8;
	shf.r.wrap.b32 	%r11549, %r11546, %r11547, 8;
	mov.b64 	%rd16257, {%r11549, %r11548};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11550,%dummy}, %rd16216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11551}, %rd16216;
	}
	shf.r.wrap.b32 	%r11552, %r11551, %r11550, 2;
	shf.r.wrap.b32 	%r11553, %r11550, %r11551, 2;
	mov.b64 	%rd16258, {%r11553, %r11552};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11554,%dummy}, %rd16222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11555}, %rd16222;
	}
	shf.r.wrap.b32 	%r11556, %r11555, %r11554, 9;
	shf.r.wrap.b32 	%r11557, %r11554, %r11555, 9;
	mov.b64 	%rd16259, {%r11557, %r11556};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11558,%dummy}, %rd16228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11559}, %rd16228;
	}
	shf.r.wrap.b32 	%r11560, %r11559, %r11558, 25;
	shf.r.wrap.b32 	%r11561, %r11558, %r11559, 25;
	mov.b64 	%rd16260, {%r11561, %r11560};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11562,%dummy}, %rd16229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11563}, %rd16229;
	}
	shf.r.wrap.b32 	%r11564, %r11563, %r11562, 23;
	shf.r.wrap.b32 	%r11565, %r11562, %r11563, 23;
	mov.b64 	%rd16261, {%r11565, %r11564};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11566}, %rd16235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11567,%dummy}, %rd16235;
	}
	shf.l.wrap.b32 	%r11568, %r11567, %r11566, 2;
	shf.l.wrap.b32 	%r11569, %r11566, %r11567, 2;
	mov.b64 	%rd16262, {%r11569, %r11568};
	not.b64 	%rd16263, %rd16239;
	and.b64  	%rd16264, %rd16240, %rd16263;
	xor.b64  	%rd16265, %rd16264, %rd16214;
	not.b64 	%rd16266, %rd16240;
	and.b64  	%rd16267, %rd16241, %rd16266;
	xor.b64  	%rd16268, %rd16267, %rd16239;
	not.b64 	%rd16269, %rd16241;
	and.b64  	%rd16270, %rd16242, %rd16269;
	xor.b64  	%rd16271, %rd16270, %rd16240;
	not.b64 	%rd16272, %rd16242;
	and.b64  	%rd16273, %rd16214, %rd16272;
	xor.b64  	%rd16274, %rd16273, %rd16241;
	not.b64 	%rd16275, %rd16214;
	and.b64  	%rd16276, %rd16239, %rd16275;
	xor.b64  	%rd16277, %rd16276, %rd16242;
	not.b64 	%rd16278, %rd16244;
	and.b64  	%rd16279, %rd16245, %rd16278;
	xor.b64  	%rd16280, %rd16279, %rd16243;
	not.b64 	%rd16281, %rd16245;
	and.b64  	%rd16282, %rd16246, %rd16281;
	xor.b64  	%rd16283, %rd16282, %rd16244;
	not.b64 	%rd16284, %rd16246;
	and.b64  	%rd16285, %rd16247, %rd16284;
	xor.b64  	%rd16286, %rd16285, %rd16245;
	not.b64 	%rd16287, %rd16247;
	and.b64  	%rd16288, %rd16243, %rd16287;
	xor.b64  	%rd16289, %rd16288, %rd16246;
	not.b64 	%rd16290, %rd16243;
	and.b64  	%rd16291, %rd16244, %rd16290;
	xor.b64  	%rd16292, %rd16291, %rd16247;
	not.b64 	%rd16293, %rd16249;
	and.b64  	%rd16294, %rd16250, %rd16293;
	xor.b64  	%rd16295, %rd16294, %rd16248;
	not.b64 	%rd16296, %rd16250;
	and.b64  	%rd16297, %rd16251, %rd16296;
	xor.b64  	%rd16298, %rd16297, %rd16249;
	not.b64 	%rd16299, %rd16251;
	and.b64  	%rd16300, %rd16252, %rd16299;
	xor.b64  	%rd16301, %rd16300, %rd16250;
	not.b64 	%rd16302, %rd16252;
	and.b64  	%rd16303, %rd16248, %rd16302;
	xor.b64  	%rd16304, %rd16303, %rd16251;
	not.b64 	%rd16305, %rd16248;
	and.b64  	%rd16306, %rd16249, %rd16305;
	xor.b64  	%rd16307, %rd16306, %rd16252;
	not.b64 	%rd16308, %rd16254;
	and.b64  	%rd16309, %rd16255, %rd16308;
	xor.b64  	%rd16310, %rd16309, %rd16253;
	not.b64 	%rd16311, %rd16255;
	and.b64  	%rd16312, %rd16256, %rd16311;
	xor.b64  	%rd16313, %rd16312, %rd16254;
	not.b64 	%rd16314, %rd16256;
	and.b64  	%rd16315, %rd16257, %rd16314;
	xor.b64  	%rd16316, %rd16315, %rd16255;
	not.b64 	%rd16317, %rd16257;
	and.b64  	%rd16318, %rd16253, %rd16317;
	xor.b64  	%rd16319, %rd16318, %rd16256;
	not.b64 	%rd16320, %rd16253;
	and.b64  	%rd16321, %rd16254, %rd16320;
	xor.b64  	%rd16322, %rd16321, %rd16257;
	not.b64 	%rd16323, %rd16259;
	and.b64  	%rd16324, %rd16260, %rd16323;
	xor.b64  	%rd16325, %rd16324, %rd16258;
	not.b64 	%rd16326, %rd16260;
	and.b64  	%rd16327, %rd16261, %rd16326;
	xor.b64  	%rd16328, %rd16327, %rd16259;
	not.b64 	%rd16329, %rd16261;
	and.b64  	%rd16330, %rd16262, %rd16329;
	xor.b64  	%rd16331, %rd16330, %rd16260;
	not.b64 	%rd16332, %rd16262;
	and.b64  	%rd16333, %rd16258, %rd16332;
	xor.b64  	%rd16334, %rd16333, %rd16261;
	not.b64 	%rd16335, %rd16258;
	and.b64  	%rd16336, %rd16259, %rd16335;
	xor.b64  	%rd16337, %rd16336, %rd16262;
	xor.b64  	%rd16338, %rd16265, %rd19810;
	xor.b64  	%rd16339, %rd16280, %rd16338;
	xor.b64  	%rd16340, %rd16339, %rd16295;
	xor.b64  	%rd16341, %rd16340, %rd16310;
	xor.b64  	%rd16342, %rd16341, %rd16325;
	xor.b64  	%rd16343, %rd16283, %rd16268;
	xor.b64  	%rd16344, %rd16343, %rd16298;
	xor.b64  	%rd16345, %rd16344, %rd16313;
	xor.b64  	%rd16346, %rd16345, %rd16328;
	xor.b64  	%rd16347, %rd16286, %rd16271;
	xor.b64  	%rd16348, %rd16347, %rd16301;
	xor.b64  	%rd16349, %rd16348, %rd16316;
	xor.b64  	%rd16350, %rd16349, %rd16331;
	xor.b64  	%rd16351, %rd16289, %rd16274;
	xor.b64  	%rd16352, %rd16351, %rd16304;
	xor.b64  	%rd16353, %rd16352, %rd16319;
	xor.b64  	%rd16354, %rd16353, %rd16334;
	xor.b64  	%rd16355, %rd16292, %rd16277;
	xor.b64  	%rd16356, %rd16355, %rd16307;
	xor.b64  	%rd16357, %rd16356, %rd16322;
	xor.b64  	%rd16358, %rd16357, %rd16337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11570}, %rd16346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11571,%dummy}, %rd16346;
	}
	shf.l.wrap.b32 	%r11572, %r11571, %r11570, 1;
	shf.l.wrap.b32 	%r11573, %r11570, %r11571, 1;
	mov.b64 	%rd16359, {%r11573, %r11572};
	xor.b64  	%rd16360, %rd16358, %rd16359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11574}, %rd16350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11575,%dummy}, %rd16350;
	}
	shf.l.wrap.b32 	%r11576, %r11575, %r11574, 1;
	shf.l.wrap.b32 	%r11577, %r11574, %r11575, 1;
	mov.b64 	%rd16361, {%r11577, %r11576};
	xor.b64  	%rd16362, %rd16361, %rd16342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11578}, %rd16354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11579,%dummy}, %rd16354;
	}
	shf.l.wrap.b32 	%r11580, %r11579, %r11578, 1;
	shf.l.wrap.b32 	%r11581, %r11578, %r11579, 1;
	mov.b64 	%rd16363, {%r11581, %r11580};
	xor.b64  	%rd16364, %rd16363, %rd16346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11582}, %rd16358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11583,%dummy}, %rd16358;
	}
	shf.l.wrap.b32 	%r11584, %r11583, %r11582, 1;
	shf.l.wrap.b32 	%r11585, %r11582, %r11583, 1;
	mov.b64 	%rd16365, {%r11585, %r11584};
	xor.b64  	%rd16366, %rd16365, %rd16350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11586}, %rd16342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11587,%dummy}, %rd16342;
	}
	shf.l.wrap.b32 	%r11588, %r11587, %r11586, 1;
	shf.l.wrap.b32 	%r11589, %r11586, %r11587, 1;
	mov.b64 	%rd16367, {%r11589, %r11588};
	xor.b64  	%rd16368, %rd16354, %rd16367;
	xor.b64  	%rd16369, %rd16360, %rd16338;
	xor.b64  	%rd16370, %rd16362, %rd16268;
	xor.b64  	%rd16371, %rd16364, %rd16271;
	xor.b64  	%rd16372, %rd16366, %rd16274;
	xor.b64  	%rd16373, %rd16368, %rd16277;
	xor.b64  	%rd16374, %rd16360, %rd16280;
	xor.b64  	%rd16375, %rd16362, %rd16283;
	xor.b64  	%rd16376, %rd16364, %rd16286;
	xor.b64  	%rd16377, %rd16366, %rd16289;
	xor.b64  	%rd16378, %rd16368, %rd16292;
	xor.b64  	%rd16379, %rd16360, %rd16295;
	xor.b64  	%rd16380, %rd16362, %rd16298;
	xor.b64  	%rd16381, %rd16364, %rd16301;
	xor.b64  	%rd16382, %rd16366, %rd16304;
	xor.b64  	%rd16383, %rd16368, %rd16307;
	xor.b64  	%rd16384, %rd16360, %rd16310;
	xor.b64  	%rd16385, %rd16362, %rd16313;
	xor.b64  	%rd16386, %rd16364, %rd16316;
	xor.b64  	%rd16387, %rd16366, %rd16319;
	xor.b64  	%rd16388, %rd16368, %rd16322;
	xor.b64  	%rd16389, %rd16360, %rd16325;
	xor.b64  	%rd16390, %rd16362, %rd16328;
	xor.b64  	%rd16391, %rd16364, %rd16331;
	xor.b64  	%rd16392, %rd16366, %rd16334;
	xor.b64  	%rd16393, %rd16368, %rd16337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11590,%dummy}, %rd16375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11591}, %rd16375;
	}
	shf.r.wrap.b32 	%r11592, %r11591, %r11590, 20;
	shf.r.wrap.b32 	%r11593, %r11590, %r11591, 20;
	mov.b64 	%rd16394, {%r11593, %r11592};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11594,%dummy}, %rd16381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11595}, %rd16381;
	}
	shf.r.wrap.b32 	%r11596, %r11595, %r11594, 21;
	shf.r.wrap.b32 	%r11597, %r11594, %r11595, 21;
	mov.b64 	%rd16395, {%r11597, %r11596};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11598}, %rd16387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11599,%dummy}, %rd16387;
	}
	shf.l.wrap.b32 	%r11600, %r11599, %r11598, 21;
	shf.l.wrap.b32 	%r11601, %r11598, %r11599, 21;
	mov.b64 	%rd16396, {%r11601, %r11600};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11602}, %rd16393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11603,%dummy}, %rd16393;
	}
	shf.l.wrap.b32 	%r11604, %r11603, %r11602, 14;
	shf.l.wrap.b32 	%r11605, %r11602, %r11603, 14;
	mov.b64 	%rd16397, {%r11605, %r11604};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11606}, %rd16372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11607,%dummy}, %rd16372;
	}
	shf.l.wrap.b32 	%r11608, %r11607, %r11606, 28;
	shf.l.wrap.b32 	%r11609, %r11606, %r11607, 28;
	mov.b64 	%rd16398, {%r11609, %r11608};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11610}, %rd16378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11611,%dummy}, %rd16378;
	}
	shf.l.wrap.b32 	%r11612, %r11611, %r11610, 20;
	shf.l.wrap.b32 	%r11613, %r11610, %r11611, 20;
	mov.b64 	%rd16399, {%r11613, %r11612};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11614}, %rd16379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11615,%dummy}, %rd16379;
	}
	shf.l.wrap.b32 	%r11616, %r11615, %r11614, 3;
	shf.l.wrap.b32 	%r11617, %r11614, %r11615, 3;
	mov.b64 	%rd16400, {%r11617, %r11616};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11618,%dummy}, %rd16385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11619}, %rd16385;
	}
	shf.r.wrap.b32 	%r11620, %r11619, %r11618, 19;
	shf.r.wrap.b32 	%r11621, %r11618, %r11619, 19;
	mov.b64 	%rd16401, {%r11621, %r11620};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11622,%dummy}, %rd16391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11623}, %rd16391;
	}
	shf.r.wrap.b32 	%r11624, %r11623, %r11622, 3;
	shf.r.wrap.b32 	%r11625, %r11622, %r11623, 3;
	mov.b64 	%rd16402, {%r11625, %r11624};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11626}, %rd16370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11627,%dummy}, %rd16370;
	}
	shf.l.wrap.b32 	%r11628, %r11627, %r11626, 1;
	shf.l.wrap.b32 	%r11629, %r11626, %r11627, 1;
	mov.b64 	%rd16403, {%r11629, %r11628};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11630}, %rd16376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11631,%dummy}, %rd16376;
	}
	shf.l.wrap.b32 	%r11632, %r11631, %r11630, 6;
	shf.l.wrap.b32 	%r11633, %r11630, %r11631, 6;
	mov.b64 	%rd16404, {%r11633, %r11632};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11634}, %rd16382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11635,%dummy}, %rd16382;
	}
	shf.l.wrap.b32 	%r11636, %r11635, %r11634, 25;
	shf.l.wrap.b32 	%r11637, %r11634, %r11635, 25;
	mov.b64 	%rd16405, {%r11637, %r11636};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11638}, %rd16388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11639,%dummy}, %rd16388;
	}
	shf.l.wrap.b32 	%r11640, %r11639, %r11638, 8;
	shf.l.wrap.b32 	%r11641, %r11638, %r11639, 8;
	mov.b64 	%rd16406, {%r11641, %r11640};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11642}, %rd16389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11643,%dummy}, %rd16389;
	}
	shf.l.wrap.b32 	%r11644, %r11643, %r11642, 18;
	shf.l.wrap.b32 	%r11645, %r11642, %r11643, 18;
	mov.b64 	%rd16407, {%r11645, %r11644};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11646}, %rd16373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11647,%dummy}, %rd16373;
	}
	shf.l.wrap.b32 	%r11648, %r11647, %r11646, 27;
	shf.l.wrap.b32 	%r11649, %r11646, %r11647, 27;
	mov.b64 	%rd16408, {%r11649, %r11648};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11650,%dummy}, %rd16374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11651}, %rd16374;
	}
	shf.r.wrap.b32 	%r11652, %r11651, %r11650, 28;
	shf.r.wrap.b32 	%r11653, %r11650, %r11651, 28;
	mov.b64 	%rd16409, {%r11653, %r11652};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11654}, %rd16380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11655,%dummy}, %rd16380;
	}
	shf.l.wrap.b32 	%r11656, %r11655, %r11654, 10;
	shf.l.wrap.b32 	%r11657, %r11654, %r11655, 10;
	mov.b64 	%rd16410, {%r11657, %r11656};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11658}, %rd16386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11659,%dummy}, %rd16386;
	}
	shf.l.wrap.b32 	%r11660, %r11659, %r11658, 15;
	shf.l.wrap.b32 	%r11661, %r11658, %r11659, 15;
	mov.b64 	%rd16411, {%r11661, %r11660};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11662,%dummy}, %rd16392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11663}, %rd16392;
	}
	shf.r.wrap.b32 	%r11664, %r11663, %r11662, 8;
	shf.r.wrap.b32 	%r11665, %r11662, %r11663, 8;
	mov.b64 	%rd16412, {%r11665, %r11664};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11666,%dummy}, %rd16371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11667}, %rd16371;
	}
	shf.r.wrap.b32 	%r11668, %r11667, %r11666, 2;
	shf.r.wrap.b32 	%r11669, %r11666, %r11667, 2;
	mov.b64 	%rd16413, {%r11669, %r11668};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11670,%dummy}, %rd16377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11671}, %rd16377;
	}
	shf.r.wrap.b32 	%r11672, %r11671, %r11670, 9;
	shf.r.wrap.b32 	%r11673, %r11670, %r11671, 9;
	mov.b64 	%rd16414, {%r11673, %r11672};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11674,%dummy}, %rd16383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11675}, %rd16383;
	}
	shf.r.wrap.b32 	%r11676, %r11675, %r11674, 25;
	shf.r.wrap.b32 	%r11677, %r11674, %r11675, 25;
	mov.b64 	%rd16415, {%r11677, %r11676};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11678,%dummy}, %rd16384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11679}, %rd16384;
	}
	shf.r.wrap.b32 	%r11680, %r11679, %r11678, 23;
	shf.r.wrap.b32 	%r11681, %r11678, %r11679, 23;
	mov.b64 	%rd16416, {%r11681, %r11680};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11682}, %rd16390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11683,%dummy}, %rd16390;
	}
	shf.l.wrap.b32 	%r11684, %r11683, %r11682, 2;
	shf.l.wrap.b32 	%r11685, %r11682, %r11683, 2;
	mov.b64 	%rd16417, {%r11685, %r11684};
	not.b64 	%rd16418, %rd16394;
	and.b64  	%rd16419, %rd16395, %rd16418;
	xor.b64  	%rd16420, %rd16419, %rd16369;
	not.b64 	%rd16421, %rd16395;
	and.b64  	%rd16422, %rd16396, %rd16421;
	xor.b64  	%rd16423, %rd16422, %rd16394;
	not.b64 	%rd16424, %rd16396;
	and.b64  	%rd16425, %rd16397, %rd16424;
	xor.b64  	%rd16426, %rd16425, %rd16395;
	not.b64 	%rd16427, %rd16397;
	and.b64  	%rd16428, %rd16369, %rd16427;
	xor.b64  	%rd16429, %rd16428, %rd16396;
	not.b64 	%rd16430, %rd16369;
	and.b64  	%rd16431, %rd16394, %rd16430;
	xor.b64  	%rd16432, %rd16431, %rd16397;
	not.b64 	%rd16433, %rd16399;
	and.b64  	%rd16434, %rd16400, %rd16433;
	xor.b64  	%rd16435, %rd16434, %rd16398;
	not.b64 	%rd16436, %rd16400;
	and.b64  	%rd16437, %rd16401, %rd16436;
	xor.b64  	%rd16438, %rd16437, %rd16399;
	not.b64 	%rd16439, %rd16401;
	and.b64  	%rd16440, %rd16402, %rd16439;
	xor.b64  	%rd16441, %rd16440, %rd16400;
	not.b64 	%rd16442, %rd16402;
	and.b64  	%rd16443, %rd16398, %rd16442;
	xor.b64  	%rd16444, %rd16443, %rd16401;
	not.b64 	%rd16445, %rd16398;
	and.b64  	%rd16446, %rd16399, %rd16445;
	xor.b64  	%rd16447, %rd16446, %rd16402;
	not.b64 	%rd16448, %rd16404;
	and.b64  	%rd16449, %rd16405, %rd16448;
	xor.b64  	%rd16450, %rd16449, %rd16403;
	not.b64 	%rd16451, %rd16405;
	and.b64  	%rd16452, %rd16406, %rd16451;
	xor.b64  	%rd16453, %rd16452, %rd16404;
	not.b64 	%rd16454, %rd16406;
	and.b64  	%rd16455, %rd16407, %rd16454;
	xor.b64  	%rd16456, %rd16455, %rd16405;
	not.b64 	%rd16457, %rd16407;
	and.b64  	%rd16458, %rd16403, %rd16457;
	xor.b64  	%rd16459, %rd16458, %rd16406;
	not.b64 	%rd16460, %rd16403;
	and.b64  	%rd16461, %rd16404, %rd16460;
	xor.b64  	%rd16462, %rd16461, %rd16407;
	not.b64 	%rd16463, %rd16409;
	and.b64  	%rd16464, %rd16410, %rd16463;
	xor.b64  	%rd16465, %rd16464, %rd16408;
	not.b64 	%rd16466, %rd16410;
	and.b64  	%rd16467, %rd16411, %rd16466;
	xor.b64  	%rd16468, %rd16467, %rd16409;
	not.b64 	%rd16469, %rd16411;
	and.b64  	%rd16470, %rd16412, %rd16469;
	xor.b64  	%rd16471, %rd16470, %rd16410;
	not.b64 	%rd16472, %rd16412;
	and.b64  	%rd16473, %rd16408, %rd16472;
	xor.b64  	%rd16474, %rd16473, %rd16411;
	not.b64 	%rd16475, %rd16408;
	and.b64  	%rd16476, %rd16409, %rd16475;
	xor.b64  	%rd16477, %rd16476, %rd16412;
	not.b64 	%rd16478, %rd16414;
	and.b64  	%rd16479, %rd16415, %rd16478;
	xor.b64  	%rd16480, %rd16479, %rd16413;
	not.b64 	%rd16481, %rd16415;
	and.b64  	%rd16482, %rd16416, %rd16481;
	xor.b64  	%rd16483, %rd16482, %rd16414;
	not.b64 	%rd16484, %rd16416;
	and.b64  	%rd16485, %rd16417, %rd16484;
	xor.b64  	%rd16486, %rd16485, %rd16415;
	not.b64 	%rd16487, %rd16417;
	and.b64  	%rd16488, %rd16413, %rd16487;
	xor.b64  	%rd16489, %rd16488, %rd16416;
	not.b64 	%rd16490, %rd16413;
	and.b64  	%rd16491, %rd16414, %rd16490;
	xor.b64  	%rd16492, %rd16491, %rd16417;
	xor.b64  	%rd16493, %rd16420, %rd19811;
	xor.b64  	%rd16494, %rd16435, %rd16493;
	xor.b64  	%rd16495, %rd16494, %rd16450;
	xor.b64  	%rd16496, %rd16495, %rd16465;
	xor.b64  	%rd16497, %rd16496, %rd16480;
	xor.b64  	%rd16498, %rd16438, %rd16423;
	xor.b64  	%rd16499, %rd16498, %rd16453;
	xor.b64  	%rd16500, %rd16499, %rd16468;
	xor.b64  	%rd16501, %rd16500, %rd16483;
	xor.b64  	%rd16502, %rd16441, %rd16426;
	xor.b64  	%rd16503, %rd16502, %rd16456;
	xor.b64  	%rd16504, %rd16503, %rd16471;
	xor.b64  	%rd16505, %rd16504, %rd16486;
	xor.b64  	%rd16506, %rd16444, %rd16429;
	xor.b64  	%rd16507, %rd16506, %rd16459;
	xor.b64  	%rd16508, %rd16507, %rd16474;
	xor.b64  	%rd16509, %rd16508, %rd16489;
	xor.b64  	%rd16510, %rd16447, %rd16432;
	xor.b64  	%rd16511, %rd16510, %rd16462;
	xor.b64  	%rd16512, %rd16511, %rd16477;
	xor.b64  	%rd16513, %rd16512, %rd16492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11686}, %rd16501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11687,%dummy}, %rd16501;
	}
	shf.l.wrap.b32 	%r11688, %r11687, %r11686, 1;
	shf.l.wrap.b32 	%r11689, %r11686, %r11687, 1;
	mov.b64 	%rd16514, {%r11689, %r11688};
	xor.b64  	%rd16515, %rd16513, %rd16514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11690}, %rd16505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11691,%dummy}, %rd16505;
	}
	shf.l.wrap.b32 	%r11692, %r11691, %r11690, 1;
	shf.l.wrap.b32 	%r11693, %r11690, %r11691, 1;
	mov.b64 	%rd16516, {%r11693, %r11692};
	xor.b64  	%rd16517, %rd16516, %rd16497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11694}, %rd16509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11695,%dummy}, %rd16509;
	}
	shf.l.wrap.b32 	%r11696, %r11695, %r11694, 1;
	shf.l.wrap.b32 	%r11697, %r11694, %r11695, 1;
	mov.b64 	%rd16518, {%r11697, %r11696};
	xor.b64  	%rd16519, %rd16518, %rd16501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11698}, %rd16513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11699,%dummy}, %rd16513;
	}
	shf.l.wrap.b32 	%r11700, %r11699, %r11698, 1;
	shf.l.wrap.b32 	%r11701, %r11698, %r11699, 1;
	mov.b64 	%rd16520, {%r11701, %r11700};
	xor.b64  	%rd16521, %rd16520, %rd16505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11702}, %rd16497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11703,%dummy}, %rd16497;
	}
	shf.l.wrap.b32 	%r11704, %r11703, %r11702, 1;
	shf.l.wrap.b32 	%r11705, %r11702, %r11703, 1;
	mov.b64 	%rd16522, {%r11705, %r11704};
	xor.b64  	%rd16523, %rd16509, %rd16522;
	xor.b64  	%rd16524, %rd16515, %rd16493;
	xor.b64  	%rd16525, %rd16517, %rd16423;
	xor.b64  	%rd16526, %rd16519, %rd16426;
	xor.b64  	%rd16527, %rd16521, %rd16429;
	xor.b64  	%rd16528, %rd16523, %rd16432;
	xor.b64  	%rd16529, %rd16515, %rd16435;
	xor.b64  	%rd16530, %rd16517, %rd16438;
	xor.b64  	%rd16531, %rd16519, %rd16441;
	xor.b64  	%rd16532, %rd16521, %rd16444;
	xor.b64  	%rd16533, %rd16523, %rd16447;
	xor.b64  	%rd16534, %rd16515, %rd16450;
	xor.b64  	%rd16535, %rd16517, %rd16453;
	xor.b64  	%rd16536, %rd16519, %rd16456;
	xor.b64  	%rd16537, %rd16521, %rd16459;
	xor.b64  	%rd16538, %rd16523, %rd16462;
	xor.b64  	%rd16539, %rd16515, %rd16465;
	xor.b64  	%rd16540, %rd16517, %rd16468;
	xor.b64  	%rd16541, %rd16519, %rd16471;
	xor.b64  	%rd16542, %rd16521, %rd16474;
	xor.b64  	%rd16543, %rd16523, %rd16477;
	xor.b64  	%rd16544, %rd16515, %rd16480;
	xor.b64  	%rd16545, %rd16517, %rd16483;
	xor.b64  	%rd16546, %rd16519, %rd16486;
	xor.b64  	%rd16547, %rd16521, %rd16489;
	xor.b64  	%rd16548, %rd16523, %rd16492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11706,%dummy}, %rd16530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11707}, %rd16530;
	}
	shf.r.wrap.b32 	%r11708, %r11707, %r11706, 20;
	shf.r.wrap.b32 	%r11709, %r11706, %r11707, 20;
	mov.b64 	%rd16549, {%r11709, %r11708};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11710,%dummy}, %rd16536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11711}, %rd16536;
	}
	shf.r.wrap.b32 	%r11712, %r11711, %r11710, 21;
	shf.r.wrap.b32 	%r11713, %r11710, %r11711, 21;
	mov.b64 	%rd16550, {%r11713, %r11712};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11714}, %rd16542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11715,%dummy}, %rd16542;
	}
	shf.l.wrap.b32 	%r11716, %r11715, %r11714, 21;
	shf.l.wrap.b32 	%r11717, %r11714, %r11715, 21;
	mov.b64 	%rd16551, {%r11717, %r11716};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11718}, %rd16548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11719,%dummy}, %rd16548;
	}
	shf.l.wrap.b32 	%r11720, %r11719, %r11718, 14;
	shf.l.wrap.b32 	%r11721, %r11718, %r11719, 14;
	mov.b64 	%rd16552, {%r11721, %r11720};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11722}, %rd16527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11723,%dummy}, %rd16527;
	}
	shf.l.wrap.b32 	%r11724, %r11723, %r11722, 28;
	shf.l.wrap.b32 	%r11725, %r11722, %r11723, 28;
	mov.b64 	%rd16553, {%r11725, %r11724};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11726}, %rd16533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11727,%dummy}, %rd16533;
	}
	shf.l.wrap.b32 	%r11728, %r11727, %r11726, 20;
	shf.l.wrap.b32 	%r11729, %r11726, %r11727, 20;
	mov.b64 	%rd16554, {%r11729, %r11728};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11730}, %rd16534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11731,%dummy}, %rd16534;
	}
	shf.l.wrap.b32 	%r11732, %r11731, %r11730, 3;
	shf.l.wrap.b32 	%r11733, %r11730, %r11731, 3;
	mov.b64 	%rd16555, {%r11733, %r11732};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11734,%dummy}, %rd16540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11735}, %rd16540;
	}
	shf.r.wrap.b32 	%r11736, %r11735, %r11734, 19;
	shf.r.wrap.b32 	%r11737, %r11734, %r11735, 19;
	mov.b64 	%rd16556, {%r11737, %r11736};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11738,%dummy}, %rd16546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11739}, %rd16546;
	}
	shf.r.wrap.b32 	%r11740, %r11739, %r11738, 3;
	shf.r.wrap.b32 	%r11741, %r11738, %r11739, 3;
	mov.b64 	%rd16557, {%r11741, %r11740};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11742}, %rd16525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11743,%dummy}, %rd16525;
	}
	shf.l.wrap.b32 	%r11744, %r11743, %r11742, 1;
	shf.l.wrap.b32 	%r11745, %r11742, %r11743, 1;
	mov.b64 	%rd16558, {%r11745, %r11744};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11746}, %rd16531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11747,%dummy}, %rd16531;
	}
	shf.l.wrap.b32 	%r11748, %r11747, %r11746, 6;
	shf.l.wrap.b32 	%r11749, %r11746, %r11747, 6;
	mov.b64 	%rd16559, {%r11749, %r11748};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11750}, %rd16537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11751,%dummy}, %rd16537;
	}
	shf.l.wrap.b32 	%r11752, %r11751, %r11750, 25;
	shf.l.wrap.b32 	%r11753, %r11750, %r11751, 25;
	mov.b64 	%rd16560, {%r11753, %r11752};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11754}, %rd16543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11755,%dummy}, %rd16543;
	}
	shf.l.wrap.b32 	%r11756, %r11755, %r11754, 8;
	shf.l.wrap.b32 	%r11757, %r11754, %r11755, 8;
	mov.b64 	%rd16561, {%r11757, %r11756};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11758}, %rd16544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11759,%dummy}, %rd16544;
	}
	shf.l.wrap.b32 	%r11760, %r11759, %r11758, 18;
	shf.l.wrap.b32 	%r11761, %r11758, %r11759, 18;
	mov.b64 	%rd16562, {%r11761, %r11760};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11762}, %rd16528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11763,%dummy}, %rd16528;
	}
	shf.l.wrap.b32 	%r11764, %r11763, %r11762, 27;
	shf.l.wrap.b32 	%r11765, %r11762, %r11763, 27;
	mov.b64 	%rd16563, {%r11765, %r11764};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11766,%dummy}, %rd16529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11767}, %rd16529;
	}
	shf.r.wrap.b32 	%r11768, %r11767, %r11766, 28;
	shf.r.wrap.b32 	%r11769, %r11766, %r11767, 28;
	mov.b64 	%rd16564, {%r11769, %r11768};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11770}, %rd16535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11771,%dummy}, %rd16535;
	}
	shf.l.wrap.b32 	%r11772, %r11771, %r11770, 10;
	shf.l.wrap.b32 	%r11773, %r11770, %r11771, 10;
	mov.b64 	%rd16565, {%r11773, %r11772};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11774}, %rd16541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11775,%dummy}, %rd16541;
	}
	shf.l.wrap.b32 	%r11776, %r11775, %r11774, 15;
	shf.l.wrap.b32 	%r11777, %r11774, %r11775, 15;
	mov.b64 	%rd16566, {%r11777, %r11776};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11778,%dummy}, %rd16547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11779}, %rd16547;
	}
	shf.r.wrap.b32 	%r11780, %r11779, %r11778, 8;
	shf.r.wrap.b32 	%r11781, %r11778, %r11779, 8;
	mov.b64 	%rd16567, {%r11781, %r11780};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11782,%dummy}, %rd16526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11783}, %rd16526;
	}
	shf.r.wrap.b32 	%r11784, %r11783, %r11782, 2;
	shf.r.wrap.b32 	%r11785, %r11782, %r11783, 2;
	mov.b64 	%rd16568, {%r11785, %r11784};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11786,%dummy}, %rd16532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11787}, %rd16532;
	}
	shf.r.wrap.b32 	%r11788, %r11787, %r11786, 9;
	shf.r.wrap.b32 	%r11789, %r11786, %r11787, 9;
	mov.b64 	%rd16569, {%r11789, %r11788};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11790,%dummy}, %rd16538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11791}, %rd16538;
	}
	shf.r.wrap.b32 	%r11792, %r11791, %r11790, 25;
	shf.r.wrap.b32 	%r11793, %r11790, %r11791, 25;
	mov.b64 	%rd16570, {%r11793, %r11792};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11794,%dummy}, %rd16539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11795}, %rd16539;
	}
	shf.r.wrap.b32 	%r11796, %r11795, %r11794, 23;
	shf.r.wrap.b32 	%r11797, %r11794, %r11795, 23;
	mov.b64 	%rd16571, {%r11797, %r11796};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11798}, %rd16545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11799,%dummy}, %rd16545;
	}
	shf.l.wrap.b32 	%r11800, %r11799, %r11798, 2;
	shf.l.wrap.b32 	%r11801, %r11798, %r11799, 2;
	mov.b64 	%rd16572, {%r11801, %r11800};
	not.b64 	%rd16573, %rd16549;
	and.b64  	%rd16574, %rd16550, %rd16573;
	xor.b64  	%rd16575, %rd16574, %rd16524;
	not.b64 	%rd16576, %rd16550;
	and.b64  	%rd16577, %rd16551, %rd16576;
	xor.b64  	%rd16578, %rd16577, %rd16549;
	not.b64 	%rd16579, %rd16551;
	and.b64  	%rd16580, %rd16552, %rd16579;
	xor.b64  	%rd16581, %rd16580, %rd16550;
	not.b64 	%rd16582, %rd16552;
	and.b64  	%rd16583, %rd16524, %rd16582;
	xor.b64  	%rd16584, %rd16583, %rd16551;
	not.b64 	%rd16585, %rd16524;
	and.b64  	%rd16586, %rd16549, %rd16585;
	xor.b64  	%rd16587, %rd16586, %rd16552;
	not.b64 	%rd16588, %rd16554;
	and.b64  	%rd16589, %rd16555, %rd16588;
	xor.b64  	%rd16590, %rd16589, %rd16553;
	not.b64 	%rd16591, %rd16555;
	and.b64  	%rd16592, %rd16556, %rd16591;
	xor.b64  	%rd16593, %rd16592, %rd16554;
	not.b64 	%rd16594, %rd16556;
	and.b64  	%rd16595, %rd16557, %rd16594;
	xor.b64  	%rd16596, %rd16595, %rd16555;
	not.b64 	%rd16597, %rd16557;
	and.b64  	%rd16598, %rd16553, %rd16597;
	xor.b64  	%rd16599, %rd16598, %rd16556;
	not.b64 	%rd16600, %rd16553;
	and.b64  	%rd16601, %rd16554, %rd16600;
	xor.b64  	%rd16602, %rd16601, %rd16557;
	not.b64 	%rd16603, %rd16559;
	and.b64  	%rd16604, %rd16560, %rd16603;
	xor.b64  	%rd16605, %rd16604, %rd16558;
	not.b64 	%rd16606, %rd16560;
	and.b64  	%rd16607, %rd16561, %rd16606;
	xor.b64  	%rd16608, %rd16607, %rd16559;
	not.b64 	%rd16609, %rd16561;
	and.b64  	%rd16610, %rd16562, %rd16609;
	xor.b64  	%rd16611, %rd16610, %rd16560;
	not.b64 	%rd16612, %rd16562;
	and.b64  	%rd16613, %rd16558, %rd16612;
	xor.b64  	%rd16614, %rd16613, %rd16561;
	not.b64 	%rd16615, %rd16558;
	and.b64  	%rd16616, %rd16559, %rd16615;
	xor.b64  	%rd16617, %rd16616, %rd16562;
	not.b64 	%rd16618, %rd16564;
	and.b64  	%rd16619, %rd16565, %rd16618;
	xor.b64  	%rd16620, %rd16619, %rd16563;
	not.b64 	%rd16621, %rd16565;
	and.b64  	%rd16622, %rd16566, %rd16621;
	xor.b64  	%rd16623, %rd16622, %rd16564;
	not.b64 	%rd16624, %rd16566;
	and.b64  	%rd16625, %rd16567, %rd16624;
	xor.b64  	%rd16626, %rd16625, %rd16565;
	not.b64 	%rd16627, %rd16567;
	and.b64  	%rd16628, %rd16563, %rd16627;
	xor.b64  	%rd16629, %rd16628, %rd16566;
	not.b64 	%rd16630, %rd16563;
	and.b64  	%rd16631, %rd16564, %rd16630;
	xor.b64  	%rd16632, %rd16631, %rd16567;
	not.b64 	%rd16633, %rd16569;
	and.b64  	%rd16634, %rd16570, %rd16633;
	xor.b64  	%rd16635, %rd16634, %rd16568;
	not.b64 	%rd16636, %rd16570;
	and.b64  	%rd16637, %rd16571, %rd16636;
	xor.b64  	%rd16638, %rd16637, %rd16569;
	not.b64 	%rd16639, %rd16571;
	and.b64  	%rd16640, %rd16572, %rd16639;
	xor.b64  	%rd16641, %rd16640, %rd16570;
	not.b64 	%rd16642, %rd16572;
	and.b64  	%rd16643, %rd16568, %rd16642;
	xor.b64  	%rd16644, %rd16643, %rd16571;
	not.b64 	%rd16645, %rd16568;
	and.b64  	%rd16646, %rd16569, %rd16645;
	xor.b64  	%rd16647, %rd16646, %rd16572;
	xor.b64  	%rd16648, %rd16575, %rd19812;
	xor.b64  	%rd16649, %rd16590, %rd16648;
	xor.b64  	%rd16650, %rd16649, %rd16605;
	xor.b64  	%rd16651, %rd16650, %rd16620;
	xor.b64  	%rd16652, %rd16651, %rd16635;
	xor.b64  	%rd16653, %rd16593, %rd16578;
	xor.b64  	%rd16654, %rd16653, %rd16608;
	xor.b64  	%rd16655, %rd16654, %rd16623;
	xor.b64  	%rd16656, %rd16655, %rd16638;
	xor.b64  	%rd16657, %rd16596, %rd16581;
	xor.b64  	%rd16658, %rd16657, %rd16611;
	xor.b64  	%rd16659, %rd16658, %rd16626;
	xor.b64  	%rd16660, %rd16659, %rd16641;
	xor.b64  	%rd16661, %rd16599, %rd16584;
	xor.b64  	%rd16662, %rd16661, %rd16614;
	xor.b64  	%rd16663, %rd16662, %rd16629;
	xor.b64  	%rd16664, %rd16663, %rd16644;
	xor.b64  	%rd16665, %rd16602, %rd16587;
	xor.b64  	%rd16666, %rd16665, %rd16617;
	xor.b64  	%rd16667, %rd16666, %rd16632;
	xor.b64  	%rd16668, %rd16667, %rd16647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11802}, %rd16656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11803,%dummy}, %rd16656;
	}
	shf.l.wrap.b32 	%r11804, %r11803, %r11802, 1;
	shf.l.wrap.b32 	%r11805, %r11802, %r11803, 1;
	mov.b64 	%rd16669, {%r11805, %r11804};
	xor.b64  	%rd16670, %rd16668, %rd16669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11806}, %rd16660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11807,%dummy}, %rd16660;
	}
	shf.l.wrap.b32 	%r11808, %r11807, %r11806, 1;
	shf.l.wrap.b32 	%r11809, %r11806, %r11807, 1;
	mov.b64 	%rd16671, {%r11809, %r11808};
	xor.b64  	%rd16672, %rd16671, %rd16652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11810}, %rd16664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11811,%dummy}, %rd16664;
	}
	shf.l.wrap.b32 	%r11812, %r11811, %r11810, 1;
	shf.l.wrap.b32 	%r11813, %r11810, %r11811, 1;
	mov.b64 	%rd16673, {%r11813, %r11812};
	xor.b64  	%rd16674, %rd16673, %rd16656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11814}, %rd16668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11815,%dummy}, %rd16668;
	}
	shf.l.wrap.b32 	%r11816, %r11815, %r11814, 1;
	shf.l.wrap.b32 	%r11817, %r11814, %r11815, 1;
	mov.b64 	%rd16675, {%r11817, %r11816};
	xor.b64  	%rd16676, %rd16675, %rd16660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11818}, %rd16652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11819,%dummy}, %rd16652;
	}
	shf.l.wrap.b32 	%r11820, %r11819, %r11818, 1;
	shf.l.wrap.b32 	%r11821, %r11818, %r11819, 1;
	mov.b64 	%rd16677, {%r11821, %r11820};
	xor.b64  	%rd16678, %rd16664, %rd16677;
	xor.b64  	%rd16679, %rd16670, %rd16648;
	xor.b64  	%rd16680, %rd16672, %rd16578;
	xor.b64  	%rd16681, %rd16674, %rd16581;
	xor.b64  	%rd16682, %rd16676, %rd16584;
	xor.b64  	%rd16683, %rd16678, %rd16587;
	xor.b64  	%rd16684, %rd16670, %rd16590;
	xor.b64  	%rd16685, %rd16672, %rd16593;
	xor.b64  	%rd16686, %rd16674, %rd16596;
	xor.b64  	%rd16687, %rd16676, %rd16599;
	xor.b64  	%rd16688, %rd16678, %rd16602;
	xor.b64  	%rd16689, %rd16670, %rd16605;
	xor.b64  	%rd16690, %rd16672, %rd16608;
	xor.b64  	%rd16691, %rd16674, %rd16611;
	xor.b64  	%rd16692, %rd16676, %rd16614;
	xor.b64  	%rd16693, %rd16678, %rd16617;
	xor.b64  	%rd16694, %rd16670, %rd16620;
	xor.b64  	%rd16695, %rd16672, %rd16623;
	xor.b64  	%rd16696, %rd16674, %rd16626;
	xor.b64  	%rd16697, %rd16676, %rd16629;
	xor.b64  	%rd16698, %rd16678, %rd16632;
	xor.b64  	%rd16699, %rd16670, %rd16635;
	xor.b64  	%rd16700, %rd16672, %rd16638;
	xor.b64  	%rd16701, %rd16674, %rd16641;
	xor.b64  	%rd16702, %rd16676, %rd16644;
	xor.b64  	%rd16703, %rd16678, %rd16647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11822,%dummy}, %rd16685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11823}, %rd16685;
	}
	shf.r.wrap.b32 	%r11824, %r11823, %r11822, 20;
	shf.r.wrap.b32 	%r11825, %r11822, %r11823, 20;
	mov.b64 	%rd16704, {%r11825, %r11824};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11826,%dummy}, %rd16691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11827}, %rd16691;
	}
	shf.r.wrap.b32 	%r11828, %r11827, %r11826, 21;
	shf.r.wrap.b32 	%r11829, %r11826, %r11827, 21;
	mov.b64 	%rd16705, {%r11829, %r11828};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11830}, %rd16697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11831,%dummy}, %rd16697;
	}
	shf.l.wrap.b32 	%r11832, %r11831, %r11830, 21;
	shf.l.wrap.b32 	%r11833, %r11830, %r11831, 21;
	mov.b64 	%rd16706, {%r11833, %r11832};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11834}, %rd16703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11835,%dummy}, %rd16703;
	}
	shf.l.wrap.b32 	%r11836, %r11835, %r11834, 14;
	shf.l.wrap.b32 	%r11837, %r11834, %r11835, 14;
	mov.b64 	%rd16707, {%r11837, %r11836};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11838}, %rd16682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11839,%dummy}, %rd16682;
	}
	shf.l.wrap.b32 	%r11840, %r11839, %r11838, 28;
	shf.l.wrap.b32 	%r11841, %r11838, %r11839, 28;
	mov.b64 	%rd16708, {%r11841, %r11840};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11842}, %rd16688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11843,%dummy}, %rd16688;
	}
	shf.l.wrap.b32 	%r11844, %r11843, %r11842, 20;
	shf.l.wrap.b32 	%r11845, %r11842, %r11843, 20;
	mov.b64 	%rd16709, {%r11845, %r11844};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11846}, %rd16689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11847,%dummy}, %rd16689;
	}
	shf.l.wrap.b32 	%r11848, %r11847, %r11846, 3;
	shf.l.wrap.b32 	%r11849, %r11846, %r11847, 3;
	mov.b64 	%rd16710, {%r11849, %r11848};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11850,%dummy}, %rd16695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11851}, %rd16695;
	}
	shf.r.wrap.b32 	%r11852, %r11851, %r11850, 19;
	shf.r.wrap.b32 	%r11853, %r11850, %r11851, 19;
	mov.b64 	%rd16711, {%r11853, %r11852};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11854,%dummy}, %rd16701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11855}, %rd16701;
	}
	shf.r.wrap.b32 	%r11856, %r11855, %r11854, 3;
	shf.r.wrap.b32 	%r11857, %r11854, %r11855, 3;
	mov.b64 	%rd16712, {%r11857, %r11856};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11858}, %rd16680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11859,%dummy}, %rd16680;
	}
	shf.l.wrap.b32 	%r11860, %r11859, %r11858, 1;
	shf.l.wrap.b32 	%r11861, %r11858, %r11859, 1;
	mov.b64 	%rd16713, {%r11861, %r11860};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11862}, %rd16686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11863,%dummy}, %rd16686;
	}
	shf.l.wrap.b32 	%r11864, %r11863, %r11862, 6;
	shf.l.wrap.b32 	%r11865, %r11862, %r11863, 6;
	mov.b64 	%rd16714, {%r11865, %r11864};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11866}, %rd16692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11867,%dummy}, %rd16692;
	}
	shf.l.wrap.b32 	%r11868, %r11867, %r11866, 25;
	shf.l.wrap.b32 	%r11869, %r11866, %r11867, 25;
	mov.b64 	%rd16715, {%r11869, %r11868};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11870}, %rd16698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11871,%dummy}, %rd16698;
	}
	shf.l.wrap.b32 	%r11872, %r11871, %r11870, 8;
	shf.l.wrap.b32 	%r11873, %r11870, %r11871, 8;
	mov.b64 	%rd16716, {%r11873, %r11872};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11874}, %rd16699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11875,%dummy}, %rd16699;
	}
	shf.l.wrap.b32 	%r11876, %r11875, %r11874, 18;
	shf.l.wrap.b32 	%r11877, %r11874, %r11875, 18;
	mov.b64 	%rd16717, {%r11877, %r11876};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11878}, %rd16683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11879,%dummy}, %rd16683;
	}
	shf.l.wrap.b32 	%r11880, %r11879, %r11878, 27;
	shf.l.wrap.b32 	%r11881, %r11878, %r11879, 27;
	mov.b64 	%rd16718, {%r11881, %r11880};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11882,%dummy}, %rd16684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11883}, %rd16684;
	}
	shf.r.wrap.b32 	%r11884, %r11883, %r11882, 28;
	shf.r.wrap.b32 	%r11885, %r11882, %r11883, 28;
	mov.b64 	%rd16719, {%r11885, %r11884};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11886}, %rd16690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11887,%dummy}, %rd16690;
	}
	shf.l.wrap.b32 	%r11888, %r11887, %r11886, 10;
	shf.l.wrap.b32 	%r11889, %r11886, %r11887, 10;
	mov.b64 	%rd16720, {%r11889, %r11888};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11890}, %rd16696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11891,%dummy}, %rd16696;
	}
	shf.l.wrap.b32 	%r11892, %r11891, %r11890, 15;
	shf.l.wrap.b32 	%r11893, %r11890, %r11891, 15;
	mov.b64 	%rd16721, {%r11893, %r11892};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11894,%dummy}, %rd16702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11895}, %rd16702;
	}
	shf.r.wrap.b32 	%r11896, %r11895, %r11894, 8;
	shf.r.wrap.b32 	%r11897, %r11894, %r11895, 8;
	mov.b64 	%rd16722, {%r11897, %r11896};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11898,%dummy}, %rd16681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11899}, %rd16681;
	}
	shf.r.wrap.b32 	%r11900, %r11899, %r11898, 2;
	shf.r.wrap.b32 	%r11901, %r11898, %r11899, 2;
	mov.b64 	%rd16723, {%r11901, %r11900};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11902,%dummy}, %rd16687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11903}, %rd16687;
	}
	shf.r.wrap.b32 	%r11904, %r11903, %r11902, 9;
	shf.r.wrap.b32 	%r11905, %r11902, %r11903, 9;
	mov.b64 	%rd16724, {%r11905, %r11904};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11906,%dummy}, %rd16693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11907}, %rd16693;
	}
	shf.r.wrap.b32 	%r11908, %r11907, %r11906, 25;
	shf.r.wrap.b32 	%r11909, %r11906, %r11907, 25;
	mov.b64 	%rd16725, {%r11909, %r11908};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11910,%dummy}, %rd16694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11911}, %rd16694;
	}
	shf.r.wrap.b32 	%r11912, %r11911, %r11910, 23;
	shf.r.wrap.b32 	%r11913, %r11910, %r11911, 23;
	mov.b64 	%rd16726, {%r11913, %r11912};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11914}, %rd16700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11915,%dummy}, %rd16700;
	}
	shf.l.wrap.b32 	%r11916, %r11915, %r11914, 2;
	shf.l.wrap.b32 	%r11917, %r11914, %r11915, 2;
	mov.b64 	%rd16727, {%r11917, %r11916};
	not.b64 	%rd16728, %rd16704;
	and.b64  	%rd16729, %rd16705, %rd16728;
	xor.b64  	%rd16730, %rd16729, %rd16679;
	not.b64 	%rd16731, %rd16705;
	and.b64  	%rd16732, %rd16706, %rd16731;
	xor.b64  	%rd16733, %rd16732, %rd16704;
	not.b64 	%rd16734, %rd16706;
	and.b64  	%rd16735, %rd16707, %rd16734;
	xor.b64  	%rd16736, %rd16735, %rd16705;
	not.b64 	%rd16737, %rd16707;
	and.b64  	%rd16738, %rd16679, %rd16737;
	xor.b64  	%rd16739, %rd16738, %rd16706;
	not.b64 	%rd16740, %rd16679;
	and.b64  	%rd16741, %rd16704, %rd16740;
	xor.b64  	%rd16742, %rd16741, %rd16707;
	not.b64 	%rd16743, %rd16709;
	and.b64  	%rd16744, %rd16710, %rd16743;
	xor.b64  	%rd16745, %rd16744, %rd16708;
	not.b64 	%rd16746, %rd16710;
	and.b64  	%rd16747, %rd16711, %rd16746;
	xor.b64  	%rd16748, %rd16747, %rd16709;
	not.b64 	%rd16749, %rd16711;
	and.b64  	%rd16750, %rd16712, %rd16749;
	xor.b64  	%rd16751, %rd16750, %rd16710;
	not.b64 	%rd16752, %rd16712;
	and.b64  	%rd16753, %rd16708, %rd16752;
	xor.b64  	%rd16754, %rd16753, %rd16711;
	not.b64 	%rd16755, %rd16708;
	and.b64  	%rd16756, %rd16709, %rd16755;
	xor.b64  	%rd16757, %rd16756, %rd16712;
	not.b64 	%rd16758, %rd16714;
	and.b64  	%rd16759, %rd16715, %rd16758;
	xor.b64  	%rd16760, %rd16759, %rd16713;
	not.b64 	%rd16761, %rd16715;
	and.b64  	%rd16762, %rd16716, %rd16761;
	xor.b64  	%rd16763, %rd16762, %rd16714;
	not.b64 	%rd16764, %rd16716;
	and.b64  	%rd16765, %rd16717, %rd16764;
	xor.b64  	%rd16766, %rd16765, %rd16715;
	not.b64 	%rd16767, %rd16717;
	and.b64  	%rd16768, %rd16713, %rd16767;
	xor.b64  	%rd16769, %rd16768, %rd16716;
	not.b64 	%rd16770, %rd16713;
	and.b64  	%rd16771, %rd16714, %rd16770;
	xor.b64  	%rd16772, %rd16771, %rd16717;
	not.b64 	%rd16773, %rd16719;
	and.b64  	%rd16774, %rd16720, %rd16773;
	xor.b64  	%rd16775, %rd16774, %rd16718;
	not.b64 	%rd16776, %rd16720;
	and.b64  	%rd16777, %rd16721, %rd16776;
	xor.b64  	%rd16778, %rd16777, %rd16719;
	not.b64 	%rd16779, %rd16721;
	and.b64  	%rd16780, %rd16722, %rd16779;
	xor.b64  	%rd16781, %rd16780, %rd16720;
	not.b64 	%rd16782, %rd16722;
	and.b64  	%rd16783, %rd16718, %rd16782;
	xor.b64  	%rd16784, %rd16783, %rd16721;
	not.b64 	%rd16785, %rd16718;
	and.b64  	%rd16786, %rd16719, %rd16785;
	xor.b64  	%rd16787, %rd16786, %rd16722;
	not.b64 	%rd16788, %rd16724;
	and.b64  	%rd16789, %rd16725, %rd16788;
	xor.b64  	%rd16790, %rd16789, %rd16723;
	not.b64 	%rd16791, %rd16725;
	and.b64  	%rd16792, %rd16726, %rd16791;
	xor.b64  	%rd16793, %rd16792, %rd16724;
	not.b64 	%rd16794, %rd16726;
	and.b64  	%rd16795, %rd16727, %rd16794;
	xor.b64  	%rd16796, %rd16795, %rd16725;
	not.b64 	%rd16797, %rd16727;
	and.b64  	%rd16798, %rd16723, %rd16797;
	xor.b64  	%rd16799, %rd16798, %rd16726;
	not.b64 	%rd16800, %rd16723;
	and.b64  	%rd16801, %rd16724, %rd16800;
	xor.b64  	%rd16802, %rd16801, %rd16727;
	xor.b64  	%rd16803, %rd16730, %rd19813;
	xor.b64  	%rd16804, %rd16745, %rd16803;
	xor.b64  	%rd16805, %rd16804, %rd16760;
	xor.b64  	%rd16806, %rd16805, %rd16775;
	xor.b64  	%rd16807, %rd16806, %rd16790;
	xor.b64  	%rd16808, %rd16748, %rd16733;
	xor.b64  	%rd16809, %rd16808, %rd16763;
	xor.b64  	%rd16810, %rd16809, %rd16778;
	xor.b64  	%rd16811, %rd16810, %rd16793;
	xor.b64  	%rd16812, %rd16751, %rd16736;
	xor.b64  	%rd16813, %rd16812, %rd16766;
	xor.b64  	%rd16814, %rd16813, %rd16781;
	xor.b64  	%rd16815, %rd16814, %rd16796;
	xor.b64  	%rd16816, %rd16754, %rd16739;
	xor.b64  	%rd16817, %rd16816, %rd16769;
	xor.b64  	%rd16818, %rd16817, %rd16784;
	xor.b64  	%rd16819, %rd16818, %rd16799;
	xor.b64  	%rd16820, %rd16757, %rd16742;
	xor.b64  	%rd16821, %rd16820, %rd16772;
	xor.b64  	%rd16822, %rd16821, %rd16787;
	xor.b64  	%rd16823, %rd16822, %rd16802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11918}, %rd16811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11919,%dummy}, %rd16811;
	}
	shf.l.wrap.b32 	%r11920, %r11919, %r11918, 1;
	shf.l.wrap.b32 	%r11921, %r11918, %r11919, 1;
	mov.b64 	%rd16824, {%r11921, %r11920};
	xor.b64  	%rd16825, %rd16823, %rd16824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11922}, %rd16815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11923,%dummy}, %rd16815;
	}
	shf.l.wrap.b32 	%r11924, %r11923, %r11922, 1;
	shf.l.wrap.b32 	%r11925, %r11922, %r11923, 1;
	mov.b64 	%rd16826, {%r11925, %r11924};
	xor.b64  	%rd16827, %rd16826, %rd16807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11926}, %rd16819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11927,%dummy}, %rd16819;
	}
	shf.l.wrap.b32 	%r11928, %r11927, %r11926, 1;
	shf.l.wrap.b32 	%r11929, %r11926, %r11927, 1;
	mov.b64 	%rd16828, {%r11929, %r11928};
	xor.b64  	%rd16829, %rd16828, %rd16811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11930}, %rd16823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11931,%dummy}, %rd16823;
	}
	shf.l.wrap.b32 	%r11932, %r11931, %r11930, 1;
	shf.l.wrap.b32 	%r11933, %r11930, %r11931, 1;
	mov.b64 	%rd16830, {%r11933, %r11932};
	xor.b64  	%rd16831, %rd16830, %rd16815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11934}, %rd16807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11935,%dummy}, %rd16807;
	}
	shf.l.wrap.b32 	%r11936, %r11935, %r11934, 1;
	shf.l.wrap.b32 	%r11937, %r11934, %r11935, 1;
	mov.b64 	%rd16832, {%r11937, %r11936};
	xor.b64  	%rd16833, %rd16819, %rd16832;
	xor.b64  	%rd16834, %rd16825, %rd16803;
	xor.b64  	%rd16835, %rd16827, %rd16733;
	xor.b64  	%rd16836, %rd16829, %rd16736;
	xor.b64  	%rd16837, %rd16831, %rd16739;
	xor.b64  	%rd16838, %rd16833, %rd16742;
	xor.b64  	%rd16839, %rd16825, %rd16745;
	xor.b64  	%rd16840, %rd16827, %rd16748;
	xor.b64  	%rd16841, %rd16829, %rd16751;
	xor.b64  	%rd16842, %rd16831, %rd16754;
	xor.b64  	%rd16843, %rd16833, %rd16757;
	xor.b64  	%rd16844, %rd16825, %rd16760;
	xor.b64  	%rd16845, %rd16827, %rd16763;
	xor.b64  	%rd16846, %rd16829, %rd16766;
	xor.b64  	%rd16847, %rd16831, %rd16769;
	xor.b64  	%rd16848, %rd16833, %rd16772;
	xor.b64  	%rd16849, %rd16825, %rd16775;
	xor.b64  	%rd16850, %rd16827, %rd16778;
	xor.b64  	%rd16851, %rd16829, %rd16781;
	xor.b64  	%rd16852, %rd16831, %rd16784;
	xor.b64  	%rd16853, %rd16833, %rd16787;
	xor.b64  	%rd16854, %rd16825, %rd16790;
	xor.b64  	%rd16855, %rd16827, %rd16793;
	xor.b64  	%rd16856, %rd16829, %rd16796;
	xor.b64  	%rd16857, %rd16831, %rd16799;
	xor.b64  	%rd16858, %rd16833, %rd16802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11938,%dummy}, %rd16840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11939}, %rd16840;
	}
	shf.r.wrap.b32 	%r11940, %r11939, %r11938, 20;
	shf.r.wrap.b32 	%r11941, %r11938, %r11939, 20;
	mov.b64 	%rd16859, {%r11941, %r11940};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11942,%dummy}, %rd16846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11943}, %rd16846;
	}
	shf.r.wrap.b32 	%r11944, %r11943, %r11942, 21;
	shf.r.wrap.b32 	%r11945, %r11942, %r11943, 21;
	mov.b64 	%rd16860, {%r11945, %r11944};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11946}, %rd16852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11947,%dummy}, %rd16852;
	}
	shf.l.wrap.b32 	%r11948, %r11947, %r11946, 21;
	shf.l.wrap.b32 	%r11949, %r11946, %r11947, 21;
	mov.b64 	%rd16861, {%r11949, %r11948};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11950}, %rd16858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11951,%dummy}, %rd16858;
	}
	shf.l.wrap.b32 	%r11952, %r11951, %r11950, 14;
	shf.l.wrap.b32 	%r11953, %r11950, %r11951, 14;
	mov.b64 	%rd16862, {%r11953, %r11952};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11954}, %rd16837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11955,%dummy}, %rd16837;
	}
	shf.l.wrap.b32 	%r11956, %r11955, %r11954, 28;
	shf.l.wrap.b32 	%r11957, %r11954, %r11955, 28;
	mov.b64 	%rd16863, {%r11957, %r11956};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11958}, %rd16843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11959,%dummy}, %rd16843;
	}
	shf.l.wrap.b32 	%r11960, %r11959, %r11958, 20;
	shf.l.wrap.b32 	%r11961, %r11958, %r11959, 20;
	mov.b64 	%rd16864, {%r11961, %r11960};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11962}, %rd16844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11963,%dummy}, %rd16844;
	}
	shf.l.wrap.b32 	%r11964, %r11963, %r11962, 3;
	shf.l.wrap.b32 	%r11965, %r11962, %r11963, 3;
	mov.b64 	%rd16865, {%r11965, %r11964};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11966,%dummy}, %rd16850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11967}, %rd16850;
	}
	shf.r.wrap.b32 	%r11968, %r11967, %r11966, 19;
	shf.r.wrap.b32 	%r11969, %r11966, %r11967, 19;
	mov.b64 	%rd16866, {%r11969, %r11968};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11970,%dummy}, %rd16856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11971}, %rd16856;
	}
	shf.r.wrap.b32 	%r11972, %r11971, %r11970, 3;
	shf.r.wrap.b32 	%r11973, %r11970, %r11971, 3;
	mov.b64 	%rd16867, {%r11973, %r11972};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11974}, %rd16835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11975,%dummy}, %rd16835;
	}
	shf.l.wrap.b32 	%r11976, %r11975, %r11974, 1;
	shf.l.wrap.b32 	%r11977, %r11974, %r11975, 1;
	mov.b64 	%rd16868, {%r11977, %r11976};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11978}, %rd16841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11979,%dummy}, %rd16841;
	}
	shf.l.wrap.b32 	%r11980, %r11979, %r11978, 6;
	shf.l.wrap.b32 	%r11981, %r11978, %r11979, 6;
	mov.b64 	%rd16869, {%r11981, %r11980};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11982}, %rd16847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11983,%dummy}, %rd16847;
	}
	shf.l.wrap.b32 	%r11984, %r11983, %r11982, 25;
	shf.l.wrap.b32 	%r11985, %r11982, %r11983, 25;
	mov.b64 	%rd16870, {%r11985, %r11984};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11986}, %rd16853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11987,%dummy}, %rd16853;
	}
	shf.l.wrap.b32 	%r11988, %r11987, %r11986, 8;
	shf.l.wrap.b32 	%r11989, %r11986, %r11987, 8;
	mov.b64 	%rd16871, {%r11989, %r11988};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11990}, %rd16854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11991,%dummy}, %rd16854;
	}
	shf.l.wrap.b32 	%r11992, %r11991, %r11990, 18;
	shf.l.wrap.b32 	%r11993, %r11990, %r11991, 18;
	mov.b64 	%rd16872, {%r11993, %r11992};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11994}, %rd16838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11995,%dummy}, %rd16838;
	}
	shf.l.wrap.b32 	%r11996, %r11995, %r11994, 27;
	shf.l.wrap.b32 	%r11997, %r11994, %r11995, 27;
	mov.b64 	%rd16873, {%r11997, %r11996};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11998,%dummy}, %rd16839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11999}, %rd16839;
	}
	shf.r.wrap.b32 	%r12000, %r11999, %r11998, 28;
	shf.r.wrap.b32 	%r12001, %r11998, %r11999, 28;
	mov.b64 	%rd16874, {%r12001, %r12000};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12002}, %rd16845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12003,%dummy}, %rd16845;
	}
	shf.l.wrap.b32 	%r12004, %r12003, %r12002, 10;
	shf.l.wrap.b32 	%r12005, %r12002, %r12003, 10;
	mov.b64 	%rd16875, {%r12005, %r12004};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12006}, %rd16851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12007,%dummy}, %rd16851;
	}
	shf.l.wrap.b32 	%r12008, %r12007, %r12006, 15;
	shf.l.wrap.b32 	%r12009, %r12006, %r12007, 15;
	mov.b64 	%rd16876, {%r12009, %r12008};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12010,%dummy}, %rd16857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12011}, %rd16857;
	}
	shf.r.wrap.b32 	%r12012, %r12011, %r12010, 8;
	shf.r.wrap.b32 	%r12013, %r12010, %r12011, 8;
	mov.b64 	%rd16877, {%r12013, %r12012};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12014,%dummy}, %rd16836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12015}, %rd16836;
	}
	shf.r.wrap.b32 	%r12016, %r12015, %r12014, 2;
	shf.r.wrap.b32 	%r12017, %r12014, %r12015, 2;
	mov.b64 	%rd16878, {%r12017, %r12016};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12018,%dummy}, %rd16842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12019}, %rd16842;
	}
	shf.r.wrap.b32 	%r12020, %r12019, %r12018, 9;
	shf.r.wrap.b32 	%r12021, %r12018, %r12019, 9;
	mov.b64 	%rd16879, {%r12021, %r12020};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12022,%dummy}, %rd16848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12023}, %rd16848;
	}
	shf.r.wrap.b32 	%r12024, %r12023, %r12022, 25;
	shf.r.wrap.b32 	%r12025, %r12022, %r12023, 25;
	mov.b64 	%rd16880, {%r12025, %r12024};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12026,%dummy}, %rd16849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12027}, %rd16849;
	}
	shf.r.wrap.b32 	%r12028, %r12027, %r12026, 23;
	shf.r.wrap.b32 	%r12029, %r12026, %r12027, 23;
	mov.b64 	%rd16881, {%r12029, %r12028};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12030}, %rd16855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12031,%dummy}, %rd16855;
	}
	shf.l.wrap.b32 	%r12032, %r12031, %r12030, 2;
	shf.l.wrap.b32 	%r12033, %r12030, %r12031, 2;
	mov.b64 	%rd16882, {%r12033, %r12032};
	not.b64 	%rd16883, %rd16859;
	and.b64  	%rd16884, %rd16860, %rd16883;
	xor.b64  	%rd16885, %rd16884, %rd16834;
	not.b64 	%rd16886, %rd16860;
	and.b64  	%rd16887, %rd16861, %rd16886;
	xor.b64  	%rd16888, %rd16887, %rd16859;
	not.b64 	%rd16889, %rd16861;
	and.b64  	%rd16890, %rd16862, %rd16889;
	xor.b64  	%rd16891, %rd16890, %rd16860;
	not.b64 	%rd16892, %rd16862;
	and.b64  	%rd16893, %rd16834, %rd16892;
	xor.b64  	%rd16894, %rd16893, %rd16861;
	not.b64 	%rd16895, %rd16834;
	and.b64  	%rd16896, %rd16859, %rd16895;
	xor.b64  	%rd16897, %rd16896, %rd16862;
	not.b64 	%rd16898, %rd16864;
	and.b64  	%rd16899, %rd16865, %rd16898;
	xor.b64  	%rd16900, %rd16899, %rd16863;
	not.b64 	%rd16901, %rd16865;
	and.b64  	%rd16902, %rd16866, %rd16901;
	xor.b64  	%rd16903, %rd16902, %rd16864;
	not.b64 	%rd16904, %rd16866;
	and.b64  	%rd16905, %rd16867, %rd16904;
	xor.b64  	%rd16906, %rd16905, %rd16865;
	not.b64 	%rd16907, %rd16867;
	and.b64  	%rd16908, %rd16863, %rd16907;
	xor.b64  	%rd16909, %rd16908, %rd16866;
	not.b64 	%rd16910, %rd16863;
	and.b64  	%rd16911, %rd16864, %rd16910;
	xor.b64  	%rd16912, %rd16911, %rd16867;
	not.b64 	%rd16913, %rd16869;
	and.b64  	%rd16914, %rd16870, %rd16913;
	xor.b64  	%rd16915, %rd16914, %rd16868;
	not.b64 	%rd16916, %rd16870;
	and.b64  	%rd16917, %rd16871, %rd16916;
	xor.b64  	%rd16918, %rd16917, %rd16869;
	not.b64 	%rd16919, %rd16871;
	and.b64  	%rd16920, %rd16872, %rd16919;
	xor.b64  	%rd16921, %rd16920, %rd16870;
	not.b64 	%rd16922, %rd16872;
	and.b64  	%rd16923, %rd16868, %rd16922;
	xor.b64  	%rd16924, %rd16923, %rd16871;
	not.b64 	%rd16925, %rd16868;
	and.b64  	%rd16926, %rd16869, %rd16925;
	xor.b64  	%rd16927, %rd16926, %rd16872;
	not.b64 	%rd16928, %rd16874;
	and.b64  	%rd16929, %rd16875, %rd16928;
	xor.b64  	%rd16930, %rd16929, %rd16873;
	not.b64 	%rd16931, %rd16875;
	and.b64  	%rd16932, %rd16876, %rd16931;
	xor.b64  	%rd16933, %rd16932, %rd16874;
	not.b64 	%rd16934, %rd16876;
	and.b64  	%rd16935, %rd16877, %rd16934;
	xor.b64  	%rd16936, %rd16935, %rd16875;
	not.b64 	%rd16937, %rd16877;
	and.b64  	%rd16938, %rd16873, %rd16937;
	xor.b64  	%rd16939, %rd16938, %rd16876;
	not.b64 	%rd16940, %rd16873;
	and.b64  	%rd16941, %rd16874, %rd16940;
	xor.b64  	%rd16942, %rd16941, %rd16877;
	not.b64 	%rd16943, %rd16879;
	and.b64  	%rd16944, %rd16880, %rd16943;
	xor.b64  	%rd16945, %rd16944, %rd16878;
	not.b64 	%rd16946, %rd16880;
	and.b64  	%rd16947, %rd16881, %rd16946;
	xor.b64  	%rd16948, %rd16947, %rd16879;
	not.b64 	%rd16949, %rd16881;
	and.b64  	%rd16950, %rd16882, %rd16949;
	xor.b64  	%rd16951, %rd16950, %rd16880;
	not.b64 	%rd16952, %rd16882;
	and.b64  	%rd16953, %rd16878, %rd16952;
	xor.b64  	%rd16954, %rd16953, %rd16881;
	not.b64 	%rd16955, %rd16878;
	and.b64  	%rd16956, %rd16879, %rd16955;
	xor.b64  	%rd16957, %rd16956, %rd16882;
	xor.b64  	%rd16958, %rd16885, %rd19814;
	xor.b64  	%rd16959, %rd16900, %rd16958;
	xor.b64  	%rd16960, %rd16959, %rd16915;
	xor.b64  	%rd16961, %rd16960, %rd16930;
	xor.b64  	%rd16962, %rd16961, %rd16945;
	xor.b64  	%rd16963, %rd16903, %rd16888;
	xor.b64  	%rd16964, %rd16963, %rd16918;
	xor.b64  	%rd16965, %rd16964, %rd16933;
	xor.b64  	%rd16966, %rd16965, %rd16948;
	xor.b64  	%rd16967, %rd16906, %rd16891;
	xor.b64  	%rd16968, %rd16967, %rd16921;
	xor.b64  	%rd16969, %rd16968, %rd16936;
	xor.b64  	%rd16970, %rd16969, %rd16951;
	xor.b64  	%rd16971, %rd16909, %rd16894;
	xor.b64  	%rd16972, %rd16971, %rd16924;
	xor.b64  	%rd16973, %rd16972, %rd16939;
	xor.b64  	%rd16974, %rd16973, %rd16954;
	xor.b64  	%rd16975, %rd16912, %rd16897;
	xor.b64  	%rd16976, %rd16975, %rd16927;
	xor.b64  	%rd16977, %rd16976, %rd16942;
	xor.b64  	%rd16978, %rd16977, %rd16957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12034}, %rd16966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12035,%dummy}, %rd16966;
	}
	shf.l.wrap.b32 	%r12036, %r12035, %r12034, 1;
	shf.l.wrap.b32 	%r12037, %r12034, %r12035, 1;
	mov.b64 	%rd16979, {%r12037, %r12036};
	xor.b64  	%rd16980, %rd16978, %rd16979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12038}, %rd16970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12039,%dummy}, %rd16970;
	}
	shf.l.wrap.b32 	%r12040, %r12039, %r12038, 1;
	shf.l.wrap.b32 	%r12041, %r12038, %r12039, 1;
	mov.b64 	%rd16981, {%r12041, %r12040};
	xor.b64  	%rd16982, %rd16981, %rd16962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12042}, %rd16974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12043,%dummy}, %rd16974;
	}
	shf.l.wrap.b32 	%r12044, %r12043, %r12042, 1;
	shf.l.wrap.b32 	%r12045, %r12042, %r12043, 1;
	mov.b64 	%rd16983, {%r12045, %r12044};
	xor.b64  	%rd16984, %rd16983, %rd16966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12046}, %rd16978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12047,%dummy}, %rd16978;
	}
	shf.l.wrap.b32 	%r12048, %r12047, %r12046, 1;
	shf.l.wrap.b32 	%r12049, %r12046, %r12047, 1;
	mov.b64 	%rd16985, {%r12049, %r12048};
	xor.b64  	%rd16986, %rd16985, %rd16970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12050}, %rd16962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12051,%dummy}, %rd16962;
	}
	shf.l.wrap.b32 	%r12052, %r12051, %r12050, 1;
	shf.l.wrap.b32 	%r12053, %r12050, %r12051, 1;
	mov.b64 	%rd16987, {%r12053, %r12052};
	xor.b64  	%rd16988, %rd16974, %rd16987;
	xor.b64  	%rd16989, %rd16980, %rd16958;
	xor.b64  	%rd16990, %rd16982, %rd16888;
	xor.b64  	%rd16991, %rd16984, %rd16891;
	xor.b64  	%rd16992, %rd16986, %rd16894;
	xor.b64  	%rd16993, %rd16988, %rd16897;
	xor.b64  	%rd16994, %rd16980, %rd16900;
	xor.b64  	%rd16995, %rd16982, %rd16903;
	xor.b64  	%rd16996, %rd16984, %rd16906;
	xor.b64  	%rd16997, %rd16986, %rd16909;
	xor.b64  	%rd16998, %rd16988, %rd16912;
	xor.b64  	%rd16999, %rd16980, %rd16915;
	xor.b64  	%rd17000, %rd16982, %rd16918;
	xor.b64  	%rd17001, %rd16984, %rd16921;
	xor.b64  	%rd17002, %rd16986, %rd16924;
	xor.b64  	%rd17003, %rd16988, %rd16927;
	xor.b64  	%rd17004, %rd16980, %rd16930;
	xor.b64  	%rd17005, %rd16982, %rd16933;
	xor.b64  	%rd17006, %rd16984, %rd16936;
	xor.b64  	%rd17007, %rd16986, %rd16939;
	xor.b64  	%rd17008, %rd16988, %rd16942;
	xor.b64  	%rd17009, %rd16980, %rd16945;
	xor.b64  	%rd17010, %rd16982, %rd16948;
	xor.b64  	%rd17011, %rd16984, %rd16951;
	xor.b64  	%rd17012, %rd16986, %rd16954;
	xor.b64  	%rd17013, %rd16988, %rd16957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12054,%dummy}, %rd16995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12055}, %rd16995;
	}
	shf.r.wrap.b32 	%r12056, %r12055, %r12054, 20;
	shf.r.wrap.b32 	%r12057, %r12054, %r12055, 20;
	mov.b64 	%rd17014, {%r12057, %r12056};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12058,%dummy}, %rd17001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12059}, %rd17001;
	}
	shf.r.wrap.b32 	%r12060, %r12059, %r12058, 21;
	shf.r.wrap.b32 	%r12061, %r12058, %r12059, 21;
	mov.b64 	%rd17015, {%r12061, %r12060};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12062}, %rd17007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12063,%dummy}, %rd17007;
	}
	shf.l.wrap.b32 	%r12064, %r12063, %r12062, 21;
	shf.l.wrap.b32 	%r12065, %r12062, %r12063, 21;
	mov.b64 	%rd17016, {%r12065, %r12064};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12066}, %rd17013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12067,%dummy}, %rd17013;
	}
	shf.l.wrap.b32 	%r12068, %r12067, %r12066, 14;
	shf.l.wrap.b32 	%r12069, %r12066, %r12067, 14;
	mov.b64 	%rd17017, {%r12069, %r12068};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12070}, %rd16992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12071,%dummy}, %rd16992;
	}
	shf.l.wrap.b32 	%r12072, %r12071, %r12070, 28;
	shf.l.wrap.b32 	%r12073, %r12070, %r12071, 28;
	mov.b64 	%rd17018, {%r12073, %r12072};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12074}, %rd16998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12075,%dummy}, %rd16998;
	}
	shf.l.wrap.b32 	%r12076, %r12075, %r12074, 20;
	shf.l.wrap.b32 	%r12077, %r12074, %r12075, 20;
	mov.b64 	%rd17019, {%r12077, %r12076};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12078}, %rd16999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12079,%dummy}, %rd16999;
	}
	shf.l.wrap.b32 	%r12080, %r12079, %r12078, 3;
	shf.l.wrap.b32 	%r12081, %r12078, %r12079, 3;
	mov.b64 	%rd17020, {%r12081, %r12080};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12082,%dummy}, %rd17005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12083}, %rd17005;
	}
	shf.r.wrap.b32 	%r12084, %r12083, %r12082, 19;
	shf.r.wrap.b32 	%r12085, %r12082, %r12083, 19;
	mov.b64 	%rd17021, {%r12085, %r12084};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12086,%dummy}, %rd17011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12087}, %rd17011;
	}
	shf.r.wrap.b32 	%r12088, %r12087, %r12086, 3;
	shf.r.wrap.b32 	%r12089, %r12086, %r12087, 3;
	mov.b64 	%rd17022, {%r12089, %r12088};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12090}, %rd16990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12091,%dummy}, %rd16990;
	}
	shf.l.wrap.b32 	%r12092, %r12091, %r12090, 1;
	shf.l.wrap.b32 	%r12093, %r12090, %r12091, 1;
	mov.b64 	%rd17023, {%r12093, %r12092};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12094}, %rd16996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12095,%dummy}, %rd16996;
	}
	shf.l.wrap.b32 	%r12096, %r12095, %r12094, 6;
	shf.l.wrap.b32 	%r12097, %r12094, %r12095, 6;
	mov.b64 	%rd17024, {%r12097, %r12096};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12098}, %rd17002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12099,%dummy}, %rd17002;
	}
	shf.l.wrap.b32 	%r12100, %r12099, %r12098, 25;
	shf.l.wrap.b32 	%r12101, %r12098, %r12099, 25;
	mov.b64 	%rd17025, {%r12101, %r12100};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12102}, %rd17008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12103,%dummy}, %rd17008;
	}
	shf.l.wrap.b32 	%r12104, %r12103, %r12102, 8;
	shf.l.wrap.b32 	%r12105, %r12102, %r12103, 8;
	mov.b64 	%rd17026, {%r12105, %r12104};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12106}, %rd17009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12107,%dummy}, %rd17009;
	}
	shf.l.wrap.b32 	%r12108, %r12107, %r12106, 18;
	shf.l.wrap.b32 	%r12109, %r12106, %r12107, 18;
	mov.b64 	%rd17027, {%r12109, %r12108};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12110}, %rd16993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12111,%dummy}, %rd16993;
	}
	shf.l.wrap.b32 	%r12112, %r12111, %r12110, 27;
	shf.l.wrap.b32 	%r12113, %r12110, %r12111, 27;
	mov.b64 	%rd17028, {%r12113, %r12112};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12114,%dummy}, %rd16994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12115}, %rd16994;
	}
	shf.r.wrap.b32 	%r12116, %r12115, %r12114, 28;
	shf.r.wrap.b32 	%r12117, %r12114, %r12115, 28;
	mov.b64 	%rd17029, {%r12117, %r12116};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12118}, %rd17000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12119,%dummy}, %rd17000;
	}
	shf.l.wrap.b32 	%r12120, %r12119, %r12118, 10;
	shf.l.wrap.b32 	%r12121, %r12118, %r12119, 10;
	mov.b64 	%rd17030, {%r12121, %r12120};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12122}, %rd17006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12123,%dummy}, %rd17006;
	}
	shf.l.wrap.b32 	%r12124, %r12123, %r12122, 15;
	shf.l.wrap.b32 	%r12125, %r12122, %r12123, 15;
	mov.b64 	%rd17031, {%r12125, %r12124};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12126,%dummy}, %rd17012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12127}, %rd17012;
	}
	shf.r.wrap.b32 	%r12128, %r12127, %r12126, 8;
	shf.r.wrap.b32 	%r12129, %r12126, %r12127, 8;
	mov.b64 	%rd17032, {%r12129, %r12128};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12130,%dummy}, %rd16991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12131}, %rd16991;
	}
	shf.r.wrap.b32 	%r12132, %r12131, %r12130, 2;
	shf.r.wrap.b32 	%r12133, %r12130, %r12131, 2;
	mov.b64 	%rd17033, {%r12133, %r12132};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12134,%dummy}, %rd16997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12135}, %rd16997;
	}
	shf.r.wrap.b32 	%r12136, %r12135, %r12134, 9;
	shf.r.wrap.b32 	%r12137, %r12134, %r12135, 9;
	mov.b64 	%rd17034, {%r12137, %r12136};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12138,%dummy}, %rd17003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12139}, %rd17003;
	}
	shf.r.wrap.b32 	%r12140, %r12139, %r12138, 25;
	shf.r.wrap.b32 	%r12141, %r12138, %r12139, 25;
	mov.b64 	%rd17035, {%r12141, %r12140};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12142,%dummy}, %rd17004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12143}, %rd17004;
	}
	shf.r.wrap.b32 	%r12144, %r12143, %r12142, 23;
	shf.r.wrap.b32 	%r12145, %r12142, %r12143, 23;
	mov.b64 	%rd17036, {%r12145, %r12144};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12146}, %rd17010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12147,%dummy}, %rd17010;
	}
	shf.l.wrap.b32 	%r12148, %r12147, %r12146, 2;
	shf.l.wrap.b32 	%r12149, %r12146, %r12147, 2;
	mov.b64 	%rd17037, {%r12149, %r12148};
	not.b64 	%rd17038, %rd17014;
	and.b64  	%rd17039, %rd17015, %rd17038;
	xor.b64  	%rd17040, %rd17039, %rd16989;
	not.b64 	%rd17041, %rd17015;
	and.b64  	%rd17042, %rd17016, %rd17041;
	xor.b64  	%rd17043, %rd17042, %rd17014;
	not.b64 	%rd17044, %rd17016;
	and.b64  	%rd17045, %rd17017, %rd17044;
	xor.b64  	%rd17046, %rd17045, %rd17015;
	not.b64 	%rd17047, %rd17017;
	and.b64  	%rd17048, %rd16989, %rd17047;
	xor.b64  	%rd17049, %rd17048, %rd17016;
	not.b64 	%rd17050, %rd16989;
	and.b64  	%rd17051, %rd17014, %rd17050;
	xor.b64  	%rd17052, %rd17051, %rd17017;
	not.b64 	%rd17053, %rd17019;
	and.b64  	%rd17054, %rd17020, %rd17053;
	xor.b64  	%rd17055, %rd17054, %rd17018;
	not.b64 	%rd17056, %rd17020;
	and.b64  	%rd17057, %rd17021, %rd17056;
	xor.b64  	%rd17058, %rd17057, %rd17019;
	not.b64 	%rd17059, %rd17021;
	and.b64  	%rd17060, %rd17022, %rd17059;
	xor.b64  	%rd17061, %rd17060, %rd17020;
	not.b64 	%rd17062, %rd17022;
	and.b64  	%rd17063, %rd17018, %rd17062;
	xor.b64  	%rd17064, %rd17063, %rd17021;
	not.b64 	%rd17065, %rd17018;
	and.b64  	%rd17066, %rd17019, %rd17065;
	xor.b64  	%rd17067, %rd17066, %rd17022;
	not.b64 	%rd17068, %rd17024;
	and.b64  	%rd17069, %rd17025, %rd17068;
	xor.b64  	%rd17070, %rd17069, %rd17023;
	not.b64 	%rd17071, %rd17025;
	and.b64  	%rd17072, %rd17026, %rd17071;
	xor.b64  	%rd17073, %rd17072, %rd17024;
	not.b64 	%rd17074, %rd17026;
	and.b64  	%rd17075, %rd17027, %rd17074;
	xor.b64  	%rd17076, %rd17075, %rd17025;
	not.b64 	%rd17077, %rd17027;
	and.b64  	%rd17078, %rd17023, %rd17077;
	xor.b64  	%rd17079, %rd17078, %rd17026;
	not.b64 	%rd17080, %rd17023;
	and.b64  	%rd17081, %rd17024, %rd17080;
	xor.b64  	%rd17082, %rd17081, %rd17027;
	not.b64 	%rd17083, %rd17029;
	and.b64  	%rd17084, %rd17030, %rd17083;
	xor.b64  	%rd17085, %rd17084, %rd17028;
	not.b64 	%rd17086, %rd17030;
	and.b64  	%rd17087, %rd17031, %rd17086;
	xor.b64  	%rd17088, %rd17087, %rd17029;
	not.b64 	%rd17089, %rd17031;
	and.b64  	%rd17090, %rd17032, %rd17089;
	xor.b64  	%rd17091, %rd17090, %rd17030;
	not.b64 	%rd17092, %rd17032;
	and.b64  	%rd17093, %rd17028, %rd17092;
	xor.b64  	%rd17094, %rd17093, %rd17031;
	not.b64 	%rd17095, %rd17028;
	and.b64  	%rd17096, %rd17029, %rd17095;
	xor.b64  	%rd17097, %rd17096, %rd17032;
	not.b64 	%rd17098, %rd17034;
	and.b64  	%rd17099, %rd17035, %rd17098;
	xor.b64  	%rd17100, %rd17099, %rd17033;
	not.b64 	%rd17101, %rd17035;
	and.b64  	%rd17102, %rd17036, %rd17101;
	xor.b64  	%rd17103, %rd17102, %rd17034;
	not.b64 	%rd17104, %rd17036;
	and.b64  	%rd17105, %rd17037, %rd17104;
	xor.b64  	%rd17106, %rd17105, %rd17035;
	not.b64 	%rd17107, %rd17037;
	and.b64  	%rd17108, %rd17033, %rd17107;
	xor.b64  	%rd17109, %rd17108, %rd17036;
	not.b64 	%rd17110, %rd17033;
	and.b64  	%rd17111, %rd17034, %rd17110;
	xor.b64  	%rd17112, %rd17111, %rd17037;
	xor.b64  	%rd17113, %rd17040, %rd19815;
	xor.b64  	%rd17114, %rd17055, %rd17113;
	xor.b64  	%rd17115, %rd17114, %rd17070;
	xor.b64  	%rd17116, %rd17115, %rd17085;
	xor.b64  	%rd17117, %rd17116, %rd17100;
	xor.b64  	%rd17118, %rd17058, %rd17043;
	xor.b64  	%rd17119, %rd17118, %rd17073;
	xor.b64  	%rd17120, %rd17119, %rd17088;
	xor.b64  	%rd17121, %rd17120, %rd17103;
	xor.b64  	%rd17122, %rd17061, %rd17046;
	xor.b64  	%rd17123, %rd17122, %rd17076;
	xor.b64  	%rd17124, %rd17123, %rd17091;
	xor.b64  	%rd17125, %rd17124, %rd17106;
	xor.b64  	%rd17126, %rd17064, %rd17049;
	xor.b64  	%rd17127, %rd17126, %rd17079;
	xor.b64  	%rd17128, %rd17127, %rd17094;
	xor.b64  	%rd17129, %rd17128, %rd17109;
	xor.b64  	%rd17130, %rd17067, %rd17052;
	xor.b64  	%rd17131, %rd17130, %rd17082;
	xor.b64  	%rd17132, %rd17131, %rd17097;
	xor.b64  	%rd17133, %rd17132, %rd17112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12150}, %rd17121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12151,%dummy}, %rd17121;
	}
	shf.l.wrap.b32 	%r12152, %r12151, %r12150, 1;
	shf.l.wrap.b32 	%r12153, %r12150, %r12151, 1;
	mov.b64 	%rd17134, {%r12153, %r12152};
	xor.b64  	%rd17135, %rd17133, %rd17134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12154}, %rd17125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12155,%dummy}, %rd17125;
	}
	shf.l.wrap.b32 	%r12156, %r12155, %r12154, 1;
	shf.l.wrap.b32 	%r12157, %r12154, %r12155, 1;
	mov.b64 	%rd17136, {%r12157, %r12156};
	xor.b64  	%rd17137, %rd17136, %rd17117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12158}, %rd17129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12159,%dummy}, %rd17129;
	}
	shf.l.wrap.b32 	%r12160, %r12159, %r12158, 1;
	shf.l.wrap.b32 	%r12161, %r12158, %r12159, 1;
	mov.b64 	%rd17138, {%r12161, %r12160};
	xor.b64  	%rd17139, %rd17138, %rd17121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12162}, %rd17133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12163,%dummy}, %rd17133;
	}
	shf.l.wrap.b32 	%r12164, %r12163, %r12162, 1;
	shf.l.wrap.b32 	%r12165, %r12162, %r12163, 1;
	mov.b64 	%rd17140, {%r12165, %r12164};
	xor.b64  	%rd17141, %rd17140, %rd17125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12166}, %rd17117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12167,%dummy}, %rd17117;
	}
	shf.l.wrap.b32 	%r12168, %r12167, %r12166, 1;
	shf.l.wrap.b32 	%r12169, %r12166, %r12167, 1;
	mov.b64 	%rd17142, {%r12169, %r12168};
	xor.b64  	%rd17143, %rd17129, %rd17142;
	xor.b64  	%rd17144, %rd17135, %rd17113;
	xor.b64  	%rd17145, %rd17137, %rd17043;
	xor.b64  	%rd17146, %rd17139, %rd17046;
	xor.b64  	%rd17147, %rd17141, %rd17049;
	xor.b64  	%rd17148, %rd17143, %rd17052;
	xor.b64  	%rd17149, %rd17135, %rd17055;
	xor.b64  	%rd17150, %rd17137, %rd17058;
	xor.b64  	%rd17151, %rd17139, %rd17061;
	xor.b64  	%rd17152, %rd17141, %rd17064;
	xor.b64  	%rd17153, %rd17143, %rd17067;
	xor.b64  	%rd17154, %rd17135, %rd17070;
	xor.b64  	%rd17155, %rd17137, %rd17073;
	xor.b64  	%rd17156, %rd17139, %rd17076;
	xor.b64  	%rd17157, %rd17141, %rd17079;
	xor.b64  	%rd17158, %rd17143, %rd17082;
	xor.b64  	%rd17159, %rd17135, %rd17085;
	xor.b64  	%rd17160, %rd17137, %rd17088;
	xor.b64  	%rd17161, %rd17139, %rd17091;
	xor.b64  	%rd17162, %rd17141, %rd17094;
	xor.b64  	%rd17163, %rd17143, %rd17097;
	xor.b64  	%rd17164, %rd17135, %rd17100;
	xor.b64  	%rd17165, %rd17137, %rd17103;
	xor.b64  	%rd17166, %rd17139, %rd17106;
	xor.b64  	%rd17167, %rd17141, %rd17109;
	xor.b64  	%rd17168, %rd17143, %rd17112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12170,%dummy}, %rd17150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12171}, %rd17150;
	}
	shf.r.wrap.b32 	%r12172, %r12171, %r12170, 20;
	shf.r.wrap.b32 	%r12173, %r12170, %r12171, 20;
	mov.b64 	%rd17169, {%r12173, %r12172};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12174,%dummy}, %rd17156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12175}, %rd17156;
	}
	shf.r.wrap.b32 	%r12176, %r12175, %r12174, 21;
	shf.r.wrap.b32 	%r12177, %r12174, %r12175, 21;
	mov.b64 	%rd17170, {%r12177, %r12176};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12178}, %rd17162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12179,%dummy}, %rd17162;
	}
	shf.l.wrap.b32 	%r12180, %r12179, %r12178, 21;
	shf.l.wrap.b32 	%r12181, %r12178, %r12179, 21;
	mov.b64 	%rd17171, {%r12181, %r12180};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12182}, %rd17168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12183,%dummy}, %rd17168;
	}
	shf.l.wrap.b32 	%r12184, %r12183, %r12182, 14;
	shf.l.wrap.b32 	%r12185, %r12182, %r12183, 14;
	mov.b64 	%rd17172, {%r12185, %r12184};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12186}, %rd17147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12187,%dummy}, %rd17147;
	}
	shf.l.wrap.b32 	%r12188, %r12187, %r12186, 28;
	shf.l.wrap.b32 	%r12189, %r12186, %r12187, 28;
	mov.b64 	%rd17173, {%r12189, %r12188};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12190}, %rd17153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12191,%dummy}, %rd17153;
	}
	shf.l.wrap.b32 	%r12192, %r12191, %r12190, 20;
	shf.l.wrap.b32 	%r12193, %r12190, %r12191, 20;
	mov.b64 	%rd17174, {%r12193, %r12192};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12194}, %rd17154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12195,%dummy}, %rd17154;
	}
	shf.l.wrap.b32 	%r12196, %r12195, %r12194, 3;
	shf.l.wrap.b32 	%r12197, %r12194, %r12195, 3;
	mov.b64 	%rd17175, {%r12197, %r12196};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12198,%dummy}, %rd17160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12199}, %rd17160;
	}
	shf.r.wrap.b32 	%r12200, %r12199, %r12198, 19;
	shf.r.wrap.b32 	%r12201, %r12198, %r12199, 19;
	mov.b64 	%rd17176, {%r12201, %r12200};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12202,%dummy}, %rd17166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12203}, %rd17166;
	}
	shf.r.wrap.b32 	%r12204, %r12203, %r12202, 3;
	shf.r.wrap.b32 	%r12205, %r12202, %r12203, 3;
	mov.b64 	%rd17177, {%r12205, %r12204};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12206}, %rd17145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12207,%dummy}, %rd17145;
	}
	shf.l.wrap.b32 	%r12208, %r12207, %r12206, 1;
	shf.l.wrap.b32 	%r12209, %r12206, %r12207, 1;
	mov.b64 	%rd17178, {%r12209, %r12208};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12210}, %rd17151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12211,%dummy}, %rd17151;
	}
	shf.l.wrap.b32 	%r12212, %r12211, %r12210, 6;
	shf.l.wrap.b32 	%r12213, %r12210, %r12211, 6;
	mov.b64 	%rd17179, {%r12213, %r12212};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12214}, %rd17157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12215,%dummy}, %rd17157;
	}
	shf.l.wrap.b32 	%r12216, %r12215, %r12214, 25;
	shf.l.wrap.b32 	%r12217, %r12214, %r12215, 25;
	mov.b64 	%rd17180, {%r12217, %r12216};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12218}, %rd17163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12219,%dummy}, %rd17163;
	}
	shf.l.wrap.b32 	%r12220, %r12219, %r12218, 8;
	shf.l.wrap.b32 	%r12221, %r12218, %r12219, 8;
	mov.b64 	%rd17181, {%r12221, %r12220};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12222}, %rd17164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12223,%dummy}, %rd17164;
	}
	shf.l.wrap.b32 	%r12224, %r12223, %r12222, 18;
	shf.l.wrap.b32 	%r12225, %r12222, %r12223, 18;
	mov.b64 	%rd17182, {%r12225, %r12224};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12226}, %rd17148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12227,%dummy}, %rd17148;
	}
	shf.l.wrap.b32 	%r12228, %r12227, %r12226, 27;
	shf.l.wrap.b32 	%r12229, %r12226, %r12227, 27;
	mov.b64 	%rd17183, {%r12229, %r12228};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12230,%dummy}, %rd17149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12231}, %rd17149;
	}
	shf.r.wrap.b32 	%r12232, %r12231, %r12230, 28;
	shf.r.wrap.b32 	%r12233, %r12230, %r12231, 28;
	mov.b64 	%rd17184, {%r12233, %r12232};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12234}, %rd17155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12235,%dummy}, %rd17155;
	}
	shf.l.wrap.b32 	%r12236, %r12235, %r12234, 10;
	shf.l.wrap.b32 	%r12237, %r12234, %r12235, 10;
	mov.b64 	%rd17185, {%r12237, %r12236};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12238}, %rd17161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12239,%dummy}, %rd17161;
	}
	shf.l.wrap.b32 	%r12240, %r12239, %r12238, 15;
	shf.l.wrap.b32 	%r12241, %r12238, %r12239, 15;
	mov.b64 	%rd17186, {%r12241, %r12240};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12242,%dummy}, %rd17167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12243}, %rd17167;
	}
	shf.r.wrap.b32 	%r12244, %r12243, %r12242, 8;
	shf.r.wrap.b32 	%r12245, %r12242, %r12243, 8;
	mov.b64 	%rd17187, {%r12245, %r12244};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12246,%dummy}, %rd17146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12247}, %rd17146;
	}
	shf.r.wrap.b32 	%r12248, %r12247, %r12246, 2;
	shf.r.wrap.b32 	%r12249, %r12246, %r12247, 2;
	mov.b64 	%rd17188, {%r12249, %r12248};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12250,%dummy}, %rd17152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12251}, %rd17152;
	}
	shf.r.wrap.b32 	%r12252, %r12251, %r12250, 9;
	shf.r.wrap.b32 	%r12253, %r12250, %r12251, 9;
	mov.b64 	%rd17189, {%r12253, %r12252};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12254,%dummy}, %rd17158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12255}, %rd17158;
	}
	shf.r.wrap.b32 	%r12256, %r12255, %r12254, 25;
	shf.r.wrap.b32 	%r12257, %r12254, %r12255, 25;
	mov.b64 	%rd17190, {%r12257, %r12256};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12258,%dummy}, %rd17159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12259}, %rd17159;
	}
	shf.r.wrap.b32 	%r12260, %r12259, %r12258, 23;
	shf.r.wrap.b32 	%r12261, %r12258, %r12259, 23;
	mov.b64 	%rd17191, {%r12261, %r12260};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12262}, %rd17165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12263,%dummy}, %rd17165;
	}
	shf.l.wrap.b32 	%r12264, %r12263, %r12262, 2;
	shf.l.wrap.b32 	%r12265, %r12262, %r12263, 2;
	mov.b64 	%rd17192, {%r12265, %r12264};
	not.b64 	%rd17193, %rd17169;
	and.b64  	%rd17194, %rd17170, %rd17193;
	xor.b64  	%rd17195, %rd17194, %rd17144;
	not.b64 	%rd17196, %rd17170;
	and.b64  	%rd17197, %rd17171, %rd17196;
	xor.b64  	%rd17198, %rd17197, %rd17169;
	not.b64 	%rd17199, %rd17171;
	and.b64  	%rd17200, %rd17172, %rd17199;
	xor.b64  	%rd17201, %rd17200, %rd17170;
	not.b64 	%rd17202, %rd17172;
	and.b64  	%rd17203, %rd17144, %rd17202;
	xor.b64  	%rd17204, %rd17203, %rd17171;
	not.b64 	%rd17205, %rd17144;
	and.b64  	%rd17206, %rd17169, %rd17205;
	xor.b64  	%rd17207, %rd17206, %rd17172;
	not.b64 	%rd17208, %rd17174;
	and.b64  	%rd17209, %rd17175, %rd17208;
	xor.b64  	%rd17210, %rd17209, %rd17173;
	not.b64 	%rd17211, %rd17175;
	and.b64  	%rd17212, %rd17176, %rd17211;
	xor.b64  	%rd17213, %rd17212, %rd17174;
	not.b64 	%rd17214, %rd17176;
	and.b64  	%rd17215, %rd17177, %rd17214;
	xor.b64  	%rd17216, %rd17215, %rd17175;
	not.b64 	%rd17217, %rd17177;
	and.b64  	%rd17218, %rd17173, %rd17217;
	xor.b64  	%rd17219, %rd17218, %rd17176;
	not.b64 	%rd17220, %rd17173;
	and.b64  	%rd17221, %rd17174, %rd17220;
	xor.b64  	%rd17222, %rd17221, %rd17177;
	not.b64 	%rd17223, %rd17179;
	and.b64  	%rd17224, %rd17180, %rd17223;
	xor.b64  	%rd17225, %rd17224, %rd17178;
	not.b64 	%rd17226, %rd17180;
	and.b64  	%rd17227, %rd17181, %rd17226;
	xor.b64  	%rd17228, %rd17227, %rd17179;
	not.b64 	%rd17229, %rd17181;
	and.b64  	%rd17230, %rd17182, %rd17229;
	xor.b64  	%rd17231, %rd17230, %rd17180;
	not.b64 	%rd17232, %rd17182;
	and.b64  	%rd17233, %rd17178, %rd17232;
	xor.b64  	%rd17234, %rd17233, %rd17181;
	not.b64 	%rd17235, %rd17178;
	and.b64  	%rd17236, %rd17179, %rd17235;
	xor.b64  	%rd17237, %rd17236, %rd17182;
	not.b64 	%rd17238, %rd17184;
	and.b64  	%rd17239, %rd17185, %rd17238;
	xor.b64  	%rd17240, %rd17239, %rd17183;
	not.b64 	%rd17241, %rd17185;
	and.b64  	%rd17242, %rd17186, %rd17241;
	xor.b64  	%rd17243, %rd17242, %rd17184;
	not.b64 	%rd17244, %rd17186;
	and.b64  	%rd17245, %rd17187, %rd17244;
	xor.b64  	%rd17246, %rd17245, %rd17185;
	not.b64 	%rd17247, %rd17187;
	and.b64  	%rd17248, %rd17183, %rd17247;
	xor.b64  	%rd17249, %rd17248, %rd17186;
	not.b64 	%rd17250, %rd17183;
	and.b64  	%rd17251, %rd17184, %rd17250;
	xor.b64  	%rd17252, %rd17251, %rd17187;
	not.b64 	%rd17253, %rd17189;
	and.b64  	%rd17254, %rd17190, %rd17253;
	xor.b64  	%rd17255, %rd17254, %rd17188;
	not.b64 	%rd17256, %rd17190;
	and.b64  	%rd17257, %rd17191, %rd17256;
	xor.b64  	%rd17258, %rd17257, %rd17189;
	not.b64 	%rd17259, %rd17191;
	and.b64  	%rd17260, %rd17192, %rd17259;
	xor.b64  	%rd17261, %rd17260, %rd17190;
	not.b64 	%rd17262, %rd17192;
	and.b64  	%rd17263, %rd17188, %rd17262;
	xor.b64  	%rd17264, %rd17263, %rd17191;
	not.b64 	%rd17265, %rd17188;
	and.b64  	%rd17266, %rd17189, %rd17265;
	xor.b64  	%rd17267, %rd17266, %rd17192;
	xor.b64  	%rd17268, %rd17195, %rd19816;
	xor.b64  	%rd17269, %rd17210, %rd17268;
	xor.b64  	%rd17270, %rd17269, %rd17225;
	xor.b64  	%rd17271, %rd17270, %rd17240;
	xor.b64  	%rd17272, %rd17271, %rd17255;
	xor.b64  	%rd17273, %rd17213, %rd17198;
	xor.b64  	%rd17274, %rd17273, %rd17228;
	xor.b64  	%rd17275, %rd17274, %rd17243;
	xor.b64  	%rd17276, %rd17275, %rd17258;
	xor.b64  	%rd17277, %rd17216, %rd17201;
	xor.b64  	%rd17278, %rd17277, %rd17231;
	xor.b64  	%rd17279, %rd17278, %rd17246;
	xor.b64  	%rd17280, %rd17279, %rd17261;
	xor.b64  	%rd17281, %rd17219, %rd17204;
	xor.b64  	%rd17282, %rd17281, %rd17234;
	xor.b64  	%rd17283, %rd17282, %rd17249;
	xor.b64  	%rd17284, %rd17283, %rd17264;
	xor.b64  	%rd17285, %rd17222, %rd17207;
	xor.b64  	%rd17286, %rd17285, %rd17237;
	xor.b64  	%rd17287, %rd17286, %rd17252;
	xor.b64  	%rd17288, %rd17287, %rd17267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12266}, %rd17276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12267,%dummy}, %rd17276;
	}
	shf.l.wrap.b32 	%r12268, %r12267, %r12266, 1;
	shf.l.wrap.b32 	%r12269, %r12266, %r12267, 1;
	mov.b64 	%rd17289, {%r12269, %r12268};
	xor.b64  	%rd17290, %rd17288, %rd17289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12270}, %rd17280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12271,%dummy}, %rd17280;
	}
	shf.l.wrap.b32 	%r12272, %r12271, %r12270, 1;
	shf.l.wrap.b32 	%r12273, %r12270, %r12271, 1;
	mov.b64 	%rd17291, {%r12273, %r12272};
	xor.b64  	%rd17292, %rd17291, %rd17272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12274}, %rd17284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12275,%dummy}, %rd17284;
	}
	shf.l.wrap.b32 	%r12276, %r12275, %r12274, 1;
	shf.l.wrap.b32 	%r12277, %r12274, %r12275, 1;
	mov.b64 	%rd17293, {%r12277, %r12276};
	xor.b64  	%rd17294, %rd17293, %rd17276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12278}, %rd17288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12279,%dummy}, %rd17288;
	}
	shf.l.wrap.b32 	%r12280, %r12279, %r12278, 1;
	shf.l.wrap.b32 	%r12281, %r12278, %r12279, 1;
	mov.b64 	%rd17295, {%r12281, %r12280};
	xor.b64  	%rd17296, %rd17295, %rd17280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12282}, %rd17272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12283,%dummy}, %rd17272;
	}
	shf.l.wrap.b32 	%r12284, %r12283, %r12282, 1;
	shf.l.wrap.b32 	%r12285, %r12282, %r12283, 1;
	mov.b64 	%rd17297, {%r12285, %r12284};
	xor.b64  	%rd17298, %rd17284, %rd17297;
	xor.b64  	%rd17299, %rd17290, %rd17268;
	xor.b64  	%rd17300, %rd17292, %rd17198;
	xor.b64  	%rd17301, %rd17294, %rd17201;
	xor.b64  	%rd17302, %rd17296, %rd17204;
	xor.b64  	%rd17303, %rd17298, %rd17207;
	xor.b64  	%rd17304, %rd17290, %rd17210;
	xor.b64  	%rd17305, %rd17292, %rd17213;
	xor.b64  	%rd17306, %rd17294, %rd17216;
	xor.b64  	%rd17307, %rd17296, %rd17219;
	xor.b64  	%rd17308, %rd17298, %rd17222;
	xor.b64  	%rd17309, %rd17290, %rd17225;
	xor.b64  	%rd17310, %rd17292, %rd17228;
	xor.b64  	%rd17311, %rd17294, %rd17231;
	xor.b64  	%rd17312, %rd17296, %rd17234;
	xor.b64  	%rd17313, %rd17298, %rd17237;
	xor.b64  	%rd17314, %rd17290, %rd17240;
	xor.b64  	%rd17315, %rd17292, %rd17243;
	xor.b64  	%rd17316, %rd17294, %rd17246;
	xor.b64  	%rd17317, %rd17296, %rd17249;
	xor.b64  	%rd17318, %rd17298, %rd17252;
	xor.b64  	%rd17319, %rd17290, %rd17255;
	xor.b64  	%rd17320, %rd17292, %rd17258;
	xor.b64  	%rd17321, %rd17294, %rd17261;
	xor.b64  	%rd17322, %rd17296, %rd17264;
	xor.b64  	%rd17323, %rd17298, %rd17267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12286,%dummy}, %rd17305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12287}, %rd17305;
	}
	shf.r.wrap.b32 	%r12288, %r12287, %r12286, 20;
	shf.r.wrap.b32 	%r12289, %r12286, %r12287, 20;
	mov.b64 	%rd17324, {%r12289, %r12288};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12290,%dummy}, %rd17311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12291}, %rd17311;
	}
	shf.r.wrap.b32 	%r12292, %r12291, %r12290, 21;
	shf.r.wrap.b32 	%r12293, %r12290, %r12291, 21;
	mov.b64 	%rd17325, {%r12293, %r12292};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12294}, %rd17317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12295,%dummy}, %rd17317;
	}
	shf.l.wrap.b32 	%r12296, %r12295, %r12294, 21;
	shf.l.wrap.b32 	%r12297, %r12294, %r12295, 21;
	mov.b64 	%rd17326, {%r12297, %r12296};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12298}, %rd17323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12299,%dummy}, %rd17323;
	}
	shf.l.wrap.b32 	%r12300, %r12299, %r12298, 14;
	shf.l.wrap.b32 	%r12301, %r12298, %r12299, 14;
	mov.b64 	%rd17327, {%r12301, %r12300};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12302}, %rd17302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12303,%dummy}, %rd17302;
	}
	shf.l.wrap.b32 	%r12304, %r12303, %r12302, 28;
	shf.l.wrap.b32 	%r12305, %r12302, %r12303, 28;
	mov.b64 	%rd17328, {%r12305, %r12304};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12306}, %rd17308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12307,%dummy}, %rd17308;
	}
	shf.l.wrap.b32 	%r12308, %r12307, %r12306, 20;
	shf.l.wrap.b32 	%r12309, %r12306, %r12307, 20;
	mov.b64 	%rd17329, {%r12309, %r12308};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12310}, %rd17309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12311,%dummy}, %rd17309;
	}
	shf.l.wrap.b32 	%r12312, %r12311, %r12310, 3;
	shf.l.wrap.b32 	%r12313, %r12310, %r12311, 3;
	mov.b64 	%rd17330, {%r12313, %r12312};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12314,%dummy}, %rd17315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12315}, %rd17315;
	}
	shf.r.wrap.b32 	%r12316, %r12315, %r12314, 19;
	shf.r.wrap.b32 	%r12317, %r12314, %r12315, 19;
	mov.b64 	%rd17331, {%r12317, %r12316};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12318,%dummy}, %rd17321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12319}, %rd17321;
	}
	shf.r.wrap.b32 	%r12320, %r12319, %r12318, 3;
	shf.r.wrap.b32 	%r12321, %r12318, %r12319, 3;
	mov.b64 	%rd17332, {%r12321, %r12320};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12322}, %rd17300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12323,%dummy}, %rd17300;
	}
	shf.l.wrap.b32 	%r12324, %r12323, %r12322, 1;
	shf.l.wrap.b32 	%r12325, %r12322, %r12323, 1;
	mov.b64 	%rd17333, {%r12325, %r12324};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12326}, %rd17306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12327,%dummy}, %rd17306;
	}
	shf.l.wrap.b32 	%r12328, %r12327, %r12326, 6;
	shf.l.wrap.b32 	%r12329, %r12326, %r12327, 6;
	mov.b64 	%rd17334, {%r12329, %r12328};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12330}, %rd17312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12331,%dummy}, %rd17312;
	}
	shf.l.wrap.b32 	%r12332, %r12331, %r12330, 25;
	shf.l.wrap.b32 	%r12333, %r12330, %r12331, 25;
	mov.b64 	%rd17335, {%r12333, %r12332};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12334}, %rd17318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12335,%dummy}, %rd17318;
	}
	shf.l.wrap.b32 	%r12336, %r12335, %r12334, 8;
	shf.l.wrap.b32 	%r12337, %r12334, %r12335, 8;
	mov.b64 	%rd17336, {%r12337, %r12336};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12338}, %rd17319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12339,%dummy}, %rd17319;
	}
	shf.l.wrap.b32 	%r12340, %r12339, %r12338, 18;
	shf.l.wrap.b32 	%r12341, %r12338, %r12339, 18;
	mov.b64 	%rd17337, {%r12341, %r12340};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12342}, %rd17303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12343,%dummy}, %rd17303;
	}
	shf.l.wrap.b32 	%r12344, %r12343, %r12342, 27;
	shf.l.wrap.b32 	%r12345, %r12342, %r12343, 27;
	mov.b64 	%rd17338, {%r12345, %r12344};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12346,%dummy}, %rd17304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12347}, %rd17304;
	}
	shf.r.wrap.b32 	%r12348, %r12347, %r12346, 28;
	shf.r.wrap.b32 	%r12349, %r12346, %r12347, 28;
	mov.b64 	%rd17339, {%r12349, %r12348};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12350}, %rd17310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12351,%dummy}, %rd17310;
	}
	shf.l.wrap.b32 	%r12352, %r12351, %r12350, 10;
	shf.l.wrap.b32 	%r12353, %r12350, %r12351, 10;
	mov.b64 	%rd17340, {%r12353, %r12352};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12354}, %rd17316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12355,%dummy}, %rd17316;
	}
	shf.l.wrap.b32 	%r12356, %r12355, %r12354, 15;
	shf.l.wrap.b32 	%r12357, %r12354, %r12355, 15;
	mov.b64 	%rd17341, {%r12357, %r12356};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12358,%dummy}, %rd17322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12359}, %rd17322;
	}
	shf.r.wrap.b32 	%r12360, %r12359, %r12358, 8;
	shf.r.wrap.b32 	%r12361, %r12358, %r12359, 8;
	mov.b64 	%rd17342, {%r12361, %r12360};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12362,%dummy}, %rd17301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12363}, %rd17301;
	}
	shf.r.wrap.b32 	%r12364, %r12363, %r12362, 2;
	shf.r.wrap.b32 	%r12365, %r12362, %r12363, 2;
	mov.b64 	%rd17343, {%r12365, %r12364};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12366,%dummy}, %rd17307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12367}, %rd17307;
	}
	shf.r.wrap.b32 	%r12368, %r12367, %r12366, 9;
	shf.r.wrap.b32 	%r12369, %r12366, %r12367, 9;
	mov.b64 	%rd17344, {%r12369, %r12368};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12370,%dummy}, %rd17313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12371}, %rd17313;
	}
	shf.r.wrap.b32 	%r12372, %r12371, %r12370, 25;
	shf.r.wrap.b32 	%r12373, %r12370, %r12371, 25;
	mov.b64 	%rd17345, {%r12373, %r12372};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12374,%dummy}, %rd17314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12375}, %rd17314;
	}
	shf.r.wrap.b32 	%r12376, %r12375, %r12374, 23;
	shf.r.wrap.b32 	%r12377, %r12374, %r12375, 23;
	mov.b64 	%rd17346, {%r12377, %r12376};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12378}, %rd17320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12379,%dummy}, %rd17320;
	}
	shf.l.wrap.b32 	%r12380, %r12379, %r12378, 2;
	shf.l.wrap.b32 	%r12381, %r12378, %r12379, 2;
	mov.b64 	%rd17347, {%r12381, %r12380};
	not.b64 	%rd17348, %rd17324;
	and.b64  	%rd17349, %rd17325, %rd17348;
	xor.b64  	%rd17350, %rd17349, %rd17299;
	not.b64 	%rd17351, %rd17325;
	and.b64  	%rd17352, %rd17326, %rd17351;
	xor.b64  	%rd17353, %rd17352, %rd17324;
	not.b64 	%rd17354, %rd17326;
	and.b64  	%rd17355, %rd17327, %rd17354;
	xor.b64  	%rd17356, %rd17355, %rd17325;
	not.b64 	%rd17357, %rd17327;
	and.b64  	%rd17358, %rd17299, %rd17357;
	xor.b64  	%rd17359, %rd17358, %rd17326;
	not.b64 	%rd17360, %rd17299;
	and.b64  	%rd17361, %rd17324, %rd17360;
	xor.b64  	%rd17362, %rd17361, %rd17327;
	not.b64 	%rd17363, %rd17329;
	and.b64  	%rd17364, %rd17330, %rd17363;
	xor.b64  	%rd17365, %rd17364, %rd17328;
	not.b64 	%rd17366, %rd17330;
	and.b64  	%rd17367, %rd17331, %rd17366;
	xor.b64  	%rd17368, %rd17367, %rd17329;
	not.b64 	%rd17369, %rd17331;
	and.b64  	%rd17370, %rd17332, %rd17369;
	xor.b64  	%rd17371, %rd17370, %rd17330;
	not.b64 	%rd17372, %rd17332;
	and.b64  	%rd17373, %rd17328, %rd17372;
	xor.b64  	%rd17374, %rd17373, %rd17331;
	not.b64 	%rd17375, %rd17328;
	and.b64  	%rd17376, %rd17329, %rd17375;
	xor.b64  	%rd17377, %rd17376, %rd17332;
	not.b64 	%rd17378, %rd17334;
	and.b64  	%rd17379, %rd17335, %rd17378;
	xor.b64  	%rd17380, %rd17379, %rd17333;
	not.b64 	%rd17381, %rd17335;
	and.b64  	%rd17382, %rd17336, %rd17381;
	xor.b64  	%rd17383, %rd17382, %rd17334;
	not.b64 	%rd17384, %rd17336;
	and.b64  	%rd17385, %rd17337, %rd17384;
	xor.b64  	%rd17386, %rd17385, %rd17335;
	not.b64 	%rd17387, %rd17337;
	and.b64  	%rd17388, %rd17333, %rd17387;
	xor.b64  	%rd17389, %rd17388, %rd17336;
	not.b64 	%rd17390, %rd17333;
	and.b64  	%rd17391, %rd17334, %rd17390;
	xor.b64  	%rd17392, %rd17391, %rd17337;
	not.b64 	%rd17393, %rd17339;
	and.b64  	%rd17394, %rd17340, %rd17393;
	xor.b64  	%rd17395, %rd17394, %rd17338;
	not.b64 	%rd17396, %rd17340;
	and.b64  	%rd17397, %rd17341, %rd17396;
	xor.b64  	%rd17398, %rd17397, %rd17339;
	not.b64 	%rd17399, %rd17341;
	and.b64  	%rd17400, %rd17342, %rd17399;
	xor.b64  	%rd17401, %rd17400, %rd17340;
	not.b64 	%rd17402, %rd17342;
	and.b64  	%rd17403, %rd17338, %rd17402;
	xor.b64  	%rd17404, %rd17403, %rd17341;
	not.b64 	%rd17405, %rd17338;
	and.b64  	%rd17406, %rd17339, %rd17405;
	xor.b64  	%rd17407, %rd17406, %rd17342;
	not.b64 	%rd17408, %rd17344;
	and.b64  	%rd17409, %rd17345, %rd17408;
	xor.b64  	%rd17410, %rd17409, %rd17343;
	not.b64 	%rd17411, %rd17345;
	and.b64  	%rd17412, %rd17346, %rd17411;
	xor.b64  	%rd17413, %rd17412, %rd17344;
	not.b64 	%rd17414, %rd17346;
	and.b64  	%rd17415, %rd17347, %rd17414;
	xor.b64  	%rd17416, %rd17415, %rd17345;
	not.b64 	%rd17417, %rd17347;
	and.b64  	%rd17418, %rd17343, %rd17417;
	xor.b64  	%rd17419, %rd17418, %rd17346;
	not.b64 	%rd17420, %rd17343;
	and.b64  	%rd17421, %rd17344, %rd17420;
	xor.b64  	%rd17422, %rd17421, %rd17347;
	xor.b64  	%rd17423, %rd17350, %rd19817;
	xor.b64  	%rd17424, %rd17365, %rd17423;
	xor.b64  	%rd17425, %rd17424, %rd17380;
	xor.b64  	%rd17426, %rd17425, %rd17395;
	xor.b64  	%rd17427, %rd17426, %rd17410;
	xor.b64  	%rd17428, %rd17368, %rd17353;
	xor.b64  	%rd17429, %rd17428, %rd17383;
	xor.b64  	%rd17430, %rd17429, %rd17398;
	xor.b64  	%rd17431, %rd17430, %rd17413;
	xor.b64  	%rd17432, %rd17371, %rd17356;
	xor.b64  	%rd17433, %rd17432, %rd17386;
	xor.b64  	%rd17434, %rd17433, %rd17401;
	xor.b64  	%rd17435, %rd17434, %rd17416;
	xor.b64  	%rd17436, %rd17374, %rd17359;
	xor.b64  	%rd17437, %rd17436, %rd17389;
	xor.b64  	%rd17438, %rd17437, %rd17404;
	xor.b64  	%rd17439, %rd17438, %rd17419;
	xor.b64  	%rd17440, %rd17377, %rd17362;
	xor.b64  	%rd17441, %rd17440, %rd17392;
	xor.b64  	%rd17442, %rd17441, %rd17407;
	xor.b64  	%rd17443, %rd17442, %rd17422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12382}, %rd17431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12383,%dummy}, %rd17431;
	}
	shf.l.wrap.b32 	%r12384, %r12383, %r12382, 1;
	shf.l.wrap.b32 	%r12385, %r12382, %r12383, 1;
	mov.b64 	%rd17444, {%r12385, %r12384};
	xor.b64  	%rd17445, %rd17443, %rd17444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12386}, %rd17435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12387,%dummy}, %rd17435;
	}
	shf.l.wrap.b32 	%r12388, %r12387, %r12386, 1;
	shf.l.wrap.b32 	%r12389, %r12386, %r12387, 1;
	mov.b64 	%rd17446, {%r12389, %r12388};
	xor.b64  	%rd17447, %rd17446, %rd17427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12390}, %rd17439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12391,%dummy}, %rd17439;
	}
	shf.l.wrap.b32 	%r12392, %r12391, %r12390, 1;
	shf.l.wrap.b32 	%r12393, %r12390, %r12391, 1;
	mov.b64 	%rd17448, {%r12393, %r12392};
	xor.b64  	%rd17449, %rd17448, %rd17431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12394}, %rd17443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12395,%dummy}, %rd17443;
	}
	shf.l.wrap.b32 	%r12396, %r12395, %r12394, 1;
	shf.l.wrap.b32 	%r12397, %r12394, %r12395, 1;
	mov.b64 	%rd17450, {%r12397, %r12396};
	xor.b64  	%rd17451, %rd17450, %rd17435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12398}, %rd17427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12399,%dummy}, %rd17427;
	}
	shf.l.wrap.b32 	%r12400, %r12399, %r12398, 1;
	shf.l.wrap.b32 	%r12401, %r12398, %r12399, 1;
	mov.b64 	%rd17452, {%r12401, %r12400};
	xor.b64  	%rd17453, %rd17439, %rd17452;
	xor.b64  	%rd17454, %rd17445, %rd17423;
	xor.b64  	%rd17455, %rd17447, %rd17353;
	xor.b64  	%rd17456, %rd17449, %rd17356;
	xor.b64  	%rd17457, %rd17451, %rd17359;
	xor.b64  	%rd17458, %rd17453, %rd17362;
	xor.b64  	%rd17459, %rd17445, %rd17365;
	xor.b64  	%rd17460, %rd17447, %rd17368;
	xor.b64  	%rd17461, %rd17449, %rd17371;
	xor.b64  	%rd17462, %rd17451, %rd17374;
	xor.b64  	%rd17463, %rd17453, %rd17377;
	xor.b64  	%rd17464, %rd17445, %rd17380;
	xor.b64  	%rd17465, %rd17447, %rd17383;
	xor.b64  	%rd17466, %rd17449, %rd17386;
	xor.b64  	%rd17467, %rd17451, %rd17389;
	xor.b64  	%rd17468, %rd17453, %rd17392;
	xor.b64  	%rd17469, %rd17445, %rd17395;
	xor.b64  	%rd17470, %rd17447, %rd17398;
	xor.b64  	%rd17471, %rd17449, %rd17401;
	xor.b64  	%rd17472, %rd17451, %rd17404;
	xor.b64  	%rd17473, %rd17453, %rd17407;
	xor.b64  	%rd17474, %rd17445, %rd17410;
	xor.b64  	%rd17475, %rd17447, %rd17413;
	xor.b64  	%rd17476, %rd17449, %rd17416;
	xor.b64  	%rd17477, %rd17451, %rd17419;
	xor.b64  	%rd17478, %rd17453, %rd17422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12402,%dummy}, %rd17460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12403}, %rd17460;
	}
	shf.r.wrap.b32 	%r12404, %r12403, %r12402, 20;
	shf.r.wrap.b32 	%r12405, %r12402, %r12403, 20;
	mov.b64 	%rd17479, {%r12405, %r12404};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12406,%dummy}, %rd17466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12407}, %rd17466;
	}
	shf.r.wrap.b32 	%r12408, %r12407, %r12406, 21;
	shf.r.wrap.b32 	%r12409, %r12406, %r12407, 21;
	mov.b64 	%rd17480, {%r12409, %r12408};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12410}, %rd17472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12411,%dummy}, %rd17472;
	}
	shf.l.wrap.b32 	%r12412, %r12411, %r12410, 21;
	shf.l.wrap.b32 	%r12413, %r12410, %r12411, 21;
	mov.b64 	%rd17481, {%r12413, %r12412};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12414}, %rd17478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12415,%dummy}, %rd17478;
	}
	shf.l.wrap.b32 	%r12416, %r12415, %r12414, 14;
	shf.l.wrap.b32 	%r12417, %r12414, %r12415, 14;
	mov.b64 	%rd17482, {%r12417, %r12416};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12418}, %rd17457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12419,%dummy}, %rd17457;
	}
	shf.l.wrap.b32 	%r12420, %r12419, %r12418, 28;
	shf.l.wrap.b32 	%r12421, %r12418, %r12419, 28;
	mov.b64 	%rd17483, {%r12421, %r12420};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12422}, %rd17463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12423,%dummy}, %rd17463;
	}
	shf.l.wrap.b32 	%r12424, %r12423, %r12422, 20;
	shf.l.wrap.b32 	%r12425, %r12422, %r12423, 20;
	mov.b64 	%rd17484, {%r12425, %r12424};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12426}, %rd17464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12427,%dummy}, %rd17464;
	}
	shf.l.wrap.b32 	%r12428, %r12427, %r12426, 3;
	shf.l.wrap.b32 	%r12429, %r12426, %r12427, 3;
	mov.b64 	%rd17485, {%r12429, %r12428};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12430,%dummy}, %rd17470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12431}, %rd17470;
	}
	shf.r.wrap.b32 	%r12432, %r12431, %r12430, 19;
	shf.r.wrap.b32 	%r12433, %r12430, %r12431, 19;
	mov.b64 	%rd17486, {%r12433, %r12432};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12434,%dummy}, %rd17476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12435}, %rd17476;
	}
	shf.r.wrap.b32 	%r12436, %r12435, %r12434, 3;
	shf.r.wrap.b32 	%r12437, %r12434, %r12435, 3;
	mov.b64 	%rd17487, {%r12437, %r12436};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12438}, %rd17455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12439,%dummy}, %rd17455;
	}
	shf.l.wrap.b32 	%r12440, %r12439, %r12438, 1;
	shf.l.wrap.b32 	%r12441, %r12438, %r12439, 1;
	mov.b64 	%rd17488, {%r12441, %r12440};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12442}, %rd17461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12443,%dummy}, %rd17461;
	}
	shf.l.wrap.b32 	%r12444, %r12443, %r12442, 6;
	shf.l.wrap.b32 	%r12445, %r12442, %r12443, 6;
	mov.b64 	%rd17489, {%r12445, %r12444};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12446}, %rd17467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12447,%dummy}, %rd17467;
	}
	shf.l.wrap.b32 	%r12448, %r12447, %r12446, 25;
	shf.l.wrap.b32 	%r12449, %r12446, %r12447, 25;
	mov.b64 	%rd17490, {%r12449, %r12448};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12450}, %rd17473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12451,%dummy}, %rd17473;
	}
	shf.l.wrap.b32 	%r12452, %r12451, %r12450, 8;
	shf.l.wrap.b32 	%r12453, %r12450, %r12451, 8;
	mov.b64 	%rd17491, {%r12453, %r12452};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12454}, %rd17474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12455,%dummy}, %rd17474;
	}
	shf.l.wrap.b32 	%r12456, %r12455, %r12454, 18;
	shf.l.wrap.b32 	%r12457, %r12454, %r12455, 18;
	mov.b64 	%rd17492, {%r12457, %r12456};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12458}, %rd17458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12459,%dummy}, %rd17458;
	}
	shf.l.wrap.b32 	%r12460, %r12459, %r12458, 27;
	shf.l.wrap.b32 	%r12461, %r12458, %r12459, 27;
	mov.b64 	%rd17493, {%r12461, %r12460};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12462,%dummy}, %rd17459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12463}, %rd17459;
	}
	shf.r.wrap.b32 	%r12464, %r12463, %r12462, 28;
	shf.r.wrap.b32 	%r12465, %r12462, %r12463, 28;
	mov.b64 	%rd17494, {%r12465, %r12464};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12466}, %rd17465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12467,%dummy}, %rd17465;
	}
	shf.l.wrap.b32 	%r12468, %r12467, %r12466, 10;
	shf.l.wrap.b32 	%r12469, %r12466, %r12467, 10;
	mov.b64 	%rd17495, {%r12469, %r12468};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12470}, %rd17471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12471,%dummy}, %rd17471;
	}
	shf.l.wrap.b32 	%r12472, %r12471, %r12470, 15;
	shf.l.wrap.b32 	%r12473, %r12470, %r12471, 15;
	mov.b64 	%rd17496, {%r12473, %r12472};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12474,%dummy}, %rd17477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12475}, %rd17477;
	}
	shf.r.wrap.b32 	%r12476, %r12475, %r12474, 8;
	shf.r.wrap.b32 	%r12477, %r12474, %r12475, 8;
	mov.b64 	%rd17497, {%r12477, %r12476};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12478,%dummy}, %rd17456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12479}, %rd17456;
	}
	shf.r.wrap.b32 	%r12480, %r12479, %r12478, 2;
	shf.r.wrap.b32 	%r12481, %r12478, %r12479, 2;
	mov.b64 	%rd17498, {%r12481, %r12480};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12482,%dummy}, %rd17462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12483}, %rd17462;
	}
	shf.r.wrap.b32 	%r12484, %r12483, %r12482, 9;
	shf.r.wrap.b32 	%r12485, %r12482, %r12483, 9;
	mov.b64 	%rd17499, {%r12485, %r12484};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12486,%dummy}, %rd17468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12487}, %rd17468;
	}
	shf.r.wrap.b32 	%r12488, %r12487, %r12486, 25;
	shf.r.wrap.b32 	%r12489, %r12486, %r12487, 25;
	mov.b64 	%rd17500, {%r12489, %r12488};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12490,%dummy}, %rd17469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12491}, %rd17469;
	}
	shf.r.wrap.b32 	%r12492, %r12491, %r12490, 23;
	shf.r.wrap.b32 	%r12493, %r12490, %r12491, 23;
	mov.b64 	%rd17501, {%r12493, %r12492};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12494}, %rd17475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12495,%dummy}, %rd17475;
	}
	shf.l.wrap.b32 	%r12496, %r12495, %r12494, 2;
	shf.l.wrap.b32 	%r12497, %r12494, %r12495, 2;
	mov.b64 	%rd17502, {%r12497, %r12496};
	not.b64 	%rd17503, %rd17479;
	and.b64  	%rd17504, %rd17480, %rd17503;
	xor.b64  	%rd17505, %rd17504, %rd17454;
	not.b64 	%rd17506, %rd17480;
	and.b64  	%rd17507, %rd17481, %rd17506;
	xor.b64  	%rd17508, %rd17507, %rd17479;
	not.b64 	%rd17509, %rd17481;
	and.b64  	%rd17510, %rd17482, %rd17509;
	xor.b64  	%rd17511, %rd17510, %rd17480;
	not.b64 	%rd17512, %rd17482;
	and.b64  	%rd17513, %rd17454, %rd17512;
	xor.b64  	%rd17514, %rd17513, %rd17481;
	not.b64 	%rd17515, %rd17454;
	and.b64  	%rd17516, %rd17479, %rd17515;
	xor.b64  	%rd17517, %rd17516, %rd17482;
	not.b64 	%rd17518, %rd17484;
	and.b64  	%rd17519, %rd17485, %rd17518;
	xor.b64  	%rd17520, %rd17519, %rd17483;
	not.b64 	%rd17521, %rd17485;
	and.b64  	%rd17522, %rd17486, %rd17521;
	xor.b64  	%rd17523, %rd17522, %rd17484;
	not.b64 	%rd17524, %rd17486;
	and.b64  	%rd17525, %rd17487, %rd17524;
	xor.b64  	%rd17526, %rd17525, %rd17485;
	not.b64 	%rd17527, %rd17487;
	and.b64  	%rd17528, %rd17483, %rd17527;
	xor.b64  	%rd17529, %rd17528, %rd17486;
	not.b64 	%rd17530, %rd17483;
	and.b64  	%rd17531, %rd17484, %rd17530;
	xor.b64  	%rd17532, %rd17531, %rd17487;
	not.b64 	%rd17533, %rd17489;
	and.b64  	%rd17534, %rd17490, %rd17533;
	xor.b64  	%rd17535, %rd17534, %rd17488;
	not.b64 	%rd17536, %rd17490;
	and.b64  	%rd17537, %rd17491, %rd17536;
	xor.b64  	%rd17538, %rd17537, %rd17489;
	not.b64 	%rd17539, %rd17491;
	and.b64  	%rd17540, %rd17492, %rd17539;
	xor.b64  	%rd17541, %rd17540, %rd17490;
	not.b64 	%rd17542, %rd17492;
	and.b64  	%rd17543, %rd17488, %rd17542;
	xor.b64  	%rd17544, %rd17543, %rd17491;
	not.b64 	%rd17545, %rd17488;
	and.b64  	%rd17546, %rd17489, %rd17545;
	xor.b64  	%rd17547, %rd17546, %rd17492;
	not.b64 	%rd17548, %rd17494;
	and.b64  	%rd17549, %rd17495, %rd17548;
	xor.b64  	%rd17550, %rd17549, %rd17493;
	not.b64 	%rd17551, %rd17495;
	and.b64  	%rd17552, %rd17496, %rd17551;
	xor.b64  	%rd17553, %rd17552, %rd17494;
	not.b64 	%rd17554, %rd17496;
	and.b64  	%rd17555, %rd17497, %rd17554;
	xor.b64  	%rd17556, %rd17555, %rd17495;
	not.b64 	%rd17557, %rd17497;
	and.b64  	%rd17558, %rd17493, %rd17557;
	xor.b64  	%rd17559, %rd17558, %rd17496;
	not.b64 	%rd17560, %rd17493;
	and.b64  	%rd17561, %rd17494, %rd17560;
	xor.b64  	%rd17562, %rd17561, %rd17497;
	not.b64 	%rd17563, %rd17499;
	and.b64  	%rd17564, %rd17500, %rd17563;
	xor.b64  	%rd17565, %rd17564, %rd17498;
	not.b64 	%rd17566, %rd17500;
	and.b64  	%rd17567, %rd17501, %rd17566;
	xor.b64  	%rd17568, %rd17567, %rd17499;
	not.b64 	%rd17569, %rd17501;
	and.b64  	%rd17570, %rd17502, %rd17569;
	xor.b64  	%rd17571, %rd17570, %rd17500;
	not.b64 	%rd17572, %rd17502;
	and.b64  	%rd17573, %rd17498, %rd17572;
	xor.b64  	%rd17574, %rd17573, %rd17501;
	not.b64 	%rd17575, %rd17498;
	and.b64  	%rd17576, %rd17499, %rd17575;
	xor.b64  	%rd17577, %rd17576, %rd17502;
	xor.b64  	%rd17578, %rd17505, %rd19818;
	xor.b64  	%rd17579, %rd17520, %rd17578;
	xor.b64  	%rd17580, %rd17579, %rd17535;
	xor.b64  	%rd17581, %rd17580, %rd17550;
	xor.b64  	%rd17582, %rd17581, %rd17565;
	xor.b64  	%rd17583, %rd17523, %rd17508;
	xor.b64  	%rd17584, %rd17583, %rd17538;
	xor.b64  	%rd17585, %rd17584, %rd17553;
	xor.b64  	%rd17586, %rd17585, %rd17568;
	xor.b64  	%rd17587, %rd17526, %rd17511;
	xor.b64  	%rd17588, %rd17587, %rd17541;
	xor.b64  	%rd17589, %rd17588, %rd17556;
	xor.b64  	%rd17590, %rd17589, %rd17571;
	xor.b64  	%rd17591, %rd17529, %rd17514;
	xor.b64  	%rd17592, %rd17591, %rd17544;
	xor.b64  	%rd17593, %rd17592, %rd17559;
	xor.b64  	%rd17594, %rd17593, %rd17574;
	xor.b64  	%rd17595, %rd17532, %rd17517;
	xor.b64  	%rd17596, %rd17595, %rd17547;
	xor.b64  	%rd17597, %rd17596, %rd17562;
	xor.b64  	%rd17598, %rd17597, %rd17577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12498}, %rd17586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12499,%dummy}, %rd17586;
	}
	shf.l.wrap.b32 	%r12500, %r12499, %r12498, 1;
	shf.l.wrap.b32 	%r12501, %r12498, %r12499, 1;
	mov.b64 	%rd17599, {%r12501, %r12500};
	xor.b64  	%rd17600, %rd17598, %rd17599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12502}, %rd17590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12503,%dummy}, %rd17590;
	}
	shf.l.wrap.b32 	%r12504, %r12503, %r12502, 1;
	shf.l.wrap.b32 	%r12505, %r12502, %r12503, 1;
	mov.b64 	%rd17601, {%r12505, %r12504};
	xor.b64  	%rd17602, %rd17601, %rd17582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12506}, %rd17594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12507,%dummy}, %rd17594;
	}
	shf.l.wrap.b32 	%r12508, %r12507, %r12506, 1;
	shf.l.wrap.b32 	%r12509, %r12506, %r12507, 1;
	mov.b64 	%rd17603, {%r12509, %r12508};
	xor.b64  	%rd17604, %rd17603, %rd17586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12510}, %rd17598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12511,%dummy}, %rd17598;
	}
	shf.l.wrap.b32 	%r12512, %r12511, %r12510, 1;
	shf.l.wrap.b32 	%r12513, %r12510, %r12511, 1;
	mov.b64 	%rd17605, {%r12513, %r12512};
	xor.b64  	%rd17606, %rd17605, %rd17590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12514}, %rd17582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12515,%dummy}, %rd17582;
	}
	shf.l.wrap.b32 	%r12516, %r12515, %r12514, 1;
	shf.l.wrap.b32 	%r12517, %r12514, %r12515, 1;
	mov.b64 	%rd17607, {%r12517, %r12516};
	xor.b64  	%rd17608, %rd17594, %rd17607;
	xor.b64  	%rd17609, %rd17600, %rd17578;
	xor.b64  	%rd17610, %rd17602, %rd17508;
	xor.b64  	%rd17611, %rd17604, %rd17511;
	xor.b64  	%rd17612, %rd17606, %rd17514;
	xor.b64  	%rd17613, %rd17608, %rd17517;
	xor.b64  	%rd17614, %rd17600, %rd17520;
	xor.b64  	%rd17615, %rd17602, %rd17523;
	xor.b64  	%rd17616, %rd17604, %rd17526;
	xor.b64  	%rd17617, %rd17606, %rd17529;
	xor.b64  	%rd17618, %rd17608, %rd17532;
	xor.b64  	%rd17619, %rd17600, %rd17535;
	xor.b64  	%rd17620, %rd17602, %rd17538;
	xor.b64  	%rd17621, %rd17604, %rd17541;
	xor.b64  	%rd17622, %rd17606, %rd17544;
	xor.b64  	%rd17623, %rd17608, %rd17547;
	xor.b64  	%rd17624, %rd17600, %rd17550;
	xor.b64  	%rd17625, %rd17602, %rd17553;
	xor.b64  	%rd17626, %rd17604, %rd17556;
	xor.b64  	%rd17627, %rd17606, %rd17559;
	xor.b64  	%rd17628, %rd17608, %rd17562;
	xor.b64  	%rd17629, %rd17600, %rd17565;
	xor.b64  	%rd17630, %rd17602, %rd17568;
	xor.b64  	%rd17631, %rd17604, %rd17571;
	xor.b64  	%rd17632, %rd17606, %rd17574;
	xor.b64  	%rd17633, %rd17608, %rd17577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12518,%dummy}, %rd17615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12519}, %rd17615;
	}
	shf.r.wrap.b32 	%r12520, %r12519, %r12518, 20;
	shf.r.wrap.b32 	%r12521, %r12518, %r12519, 20;
	mov.b64 	%rd17634, {%r12521, %r12520};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12522,%dummy}, %rd17621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12523}, %rd17621;
	}
	shf.r.wrap.b32 	%r12524, %r12523, %r12522, 21;
	shf.r.wrap.b32 	%r12525, %r12522, %r12523, 21;
	mov.b64 	%rd17635, {%r12525, %r12524};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12526}, %rd17627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12527,%dummy}, %rd17627;
	}
	shf.l.wrap.b32 	%r12528, %r12527, %r12526, 21;
	shf.l.wrap.b32 	%r12529, %r12526, %r12527, 21;
	mov.b64 	%rd17636, {%r12529, %r12528};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12530}, %rd17633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12531,%dummy}, %rd17633;
	}
	shf.l.wrap.b32 	%r12532, %r12531, %r12530, 14;
	shf.l.wrap.b32 	%r12533, %r12530, %r12531, 14;
	mov.b64 	%rd17637, {%r12533, %r12532};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12534}, %rd17612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12535,%dummy}, %rd17612;
	}
	shf.l.wrap.b32 	%r12536, %r12535, %r12534, 28;
	shf.l.wrap.b32 	%r12537, %r12534, %r12535, 28;
	mov.b64 	%rd17638, {%r12537, %r12536};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12538}, %rd17618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12539,%dummy}, %rd17618;
	}
	shf.l.wrap.b32 	%r12540, %r12539, %r12538, 20;
	shf.l.wrap.b32 	%r12541, %r12538, %r12539, 20;
	mov.b64 	%rd17639, {%r12541, %r12540};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12542}, %rd17619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12543,%dummy}, %rd17619;
	}
	shf.l.wrap.b32 	%r12544, %r12543, %r12542, 3;
	shf.l.wrap.b32 	%r12545, %r12542, %r12543, 3;
	mov.b64 	%rd17640, {%r12545, %r12544};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12546,%dummy}, %rd17625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12547}, %rd17625;
	}
	shf.r.wrap.b32 	%r12548, %r12547, %r12546, 19;
	shf.r.wrap.b32 	%r12549, %r12546, %r12547, 19;
	mov.b64 	%rd17641, {%r12549, %r12548};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12550,%dummy}, %rd17631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12551}, %rd17631;
	}
	shf.r.wrap.b32 	%r12552, %r12551, %r12550, 3;
	shf.r.wrap.b32 	%r12553, %r12550, %r12551, 3;
	mov.b64 	%rd17642, {%r12553, %r12552};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12554}, %rd17610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12555,%dummy}, %rd17610;
	}
	shf.l.wrap.b32 	%r12556, %r12555, %r12554, 1;
	shf.l.wrap.b32 	%r12557, %r12554, %r12555, 1;
	mov.b64 	%rd17643, {%r12557, %r12556};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12558}, %rd17616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12559,%dummy}, %rd17616;
	}
	shf.l.wrap.b32 	%r12560, %r12559, %r12558, 6;
	shf.l.wrap.b32 	%r12561, %r12558, %r12559, 6;
	mov.b64 	%rd17644, {%r12561, %r12560};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12562}, %rd17622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12563,%dummy}, %rd17622;
	}
	shf.l.wrap.b32 	%r12564, %r12563, %r12562, 25;
	shf.l.wrap.b32 	%r12565, %r12562, %r12563, 25;
	mov.b64 	%rd17645, {%r12565, %r12564};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12566}, %rd17628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12567,%dummy}, %rd17628;
	}
	shf.l.wrap.b32 	%r12568, %r12567, %r12566, 8;
	shf.l.wrap.b32 	%r12569, %r12566, %r12567, 8;
	mov.b64 	%rd17646, {%r12569, %r12568};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12570}, %rd17629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12571,%dummy}, %rd17629;
	}
	shf.l.wrap.b32 	%r12572, %r12571, %r12570, 18;
	shf.l.wrap.b32 	%r12573, %r12570, %r12571, 18;
	mov.b64 	%rd17647, {%r12573, %r12572};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12574}, %rd17613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12575,%dummy}, %rd17613;
	}
	shf.l.wrap.b32 	%r12576, %r12575, %r12574, 27;
	shf.l.wrap.b32 	%r12577, %r12574, %r12575, 27;
	mov.b64 	%rd17648, {%r12577, %r12576};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12578,%dummy}, %rd17614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12579}, %rd17614;
	}
	shf.r.wrap.b32 	%r12580, %r12579, %r12578, 28;
	shf.r.wrap.b32 	%r12581, %r12578, %r12579, 28;
	mov.b64 	%rd17649, {%r12581, %r12580};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12582}, %rd17620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12583,%dummy}, %rd17620;
	}
	shf.l.wrap.b32 	%r12584, %r12583, %r12582, 10;
	shf.l.wrap.b32 	%r12585, %r12582, %r12583, 10;
	mov.b64 	%rd17650, {%r12585, %r12584};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12586}, %rd17626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12587,%dummy}, %rd17626;
	}
	shf.l.wrap.b32 	%r12588, %r12587, %r12586, 15;
	shf.l.wrap.b32 	%r12589, %r12586, %r12587, 15;
	mov.b64 	%rd17651, {%r12589, %r12588};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12590,%dummy}, %rd17632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12591}, %rd17632;
	}
	shf.r.wrap.b32 	%r12592, %r12591, %r12590, 8;
	shf.r.wrap.b32 	%r12593, %r12590, %r12591, 8;
	mov.b64 	%rd17652, {%r12593, %r12592};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12594,%dummy}, %rd17611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12595}, %rd17611;
	}
	shf.r.wrap.b32 	%r12596, %r12595, %r12594, 2;
	shf.r.wrap.b32 	%r12597, %r12594, %r12595, 2;
	mov.b64 	%rd17653, {%r12597, %r12596};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12598,%dummy}, %rd17617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12599}, %rd17617;
	}
	shf.r.wrap.b32 	%r12600, %r12599, %r12598, 9;
	shf.r.wrap.b32 	%r12601, %r12598, %r12599, 9;
	mov.b64 	%rd17654, {%r12601, %r12600};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12602,%dummy}, %rd17623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12603}, %rd17623;
	}
	shf.r.wrap.b32 	%r12604, %r12603, %r12602, 25;
	shf.r.wrap.b32 	%r12605, %r12602, %r12603, 25;
	mov.b64 	%rd17655, {%r12605, %r12604};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12606,%dummy}, %rd17624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12607}, %rd17624;
	}
	shf.r.wrap.b32 	%r12608, %r12607, %r12606, 23;
	shf.r.wrap.b32 	%r12609, %r12606, %r12607, 23;
	mov.b64 	%rd17656, {%r12609, %r12608};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12610}, %rd17630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12611,%dummy}, %rd17630;
	}
	shf.l.wrap.b32 	%r12612, %r12611, %r12610, 2;
	shf.l.wrap.b32 	%r12613, %r12610, %r12611, 2;
	mov.b64 	%rd17657, {%r12613, %r12612};
	not.b64 	%rd17658, %rd17634;
	and.b64  	%rd17659, %rd17635, %rd17658;
	xor.b64  	%rd17660, %rd17659, %rd17609;
	not.b64 	%rd17661, %rd17635;
	and.b64  	%rd17662, %rd17636, %rd17661;
	xor.b64  	%rd17663, %rd17662, %rd17634;
	not.b64 	%rd17664, %rd17636;
	and.b64  	%rd17665, %rd17637, %rd17664;
	xor.b64  	%rd17666, %rd17665, %rd17635;
	not.b64 	%rd17667, %rd17637;
	and.b64  	%rd17668, %rd17609, %rd17667;
	xor.b64  	%rd17669, %rd17668, %rd17636;
	not.b64 	%rd17670, %rd17609;
	and.b64  	%rd17671, %rd17634, %rd17670;
	xor.b64  	%rd17672, %rd17671, %rd17637;
	not.b64 	%rd17673, %rd17639;
	and.b64  	%rd17674, %rd17640, %rd17673;
	xor.b64  	%rd17675, %rd17674, %rd17638;
	not.b64 	%rd17676, %rd17640;
	and.b64  	%rd17677, %rd17641, %rd17676;
	xor.b64  	%rd17678, %rd17677, %rd17639;
	not.b64 	%rd17679, %rd17641;
	and.b64  	%rd17680, %rd17642, %rd17679;
	xor.b64  	%rd17681, %rd17680, %rd17640;
	not.b64 	%rd17682, %rd17642;
	and.b64  	%rd17683, %rd17638, %rd17682;
	xor.b64  	%rd17684, %rd17683, %rd17641;
	not.b64 	%rd17685, %rd17638;
	and.b64  	%rd17686, %rd17639, %rd17685;
	xor.b64  	%rd17687, %rd17686, %rd17642;
	not.b64 	%rd17688, %rd17644;
	and.b64  	%rd17689, %rd17645, %rd17688;
	xor.b64  	%rd17690, %rd17689, %rd17643;
	not.b64 	%rd17691, %rd17645;
	and.b64  	%rd17692, %rd17646, %rd17691;
	xor.b64  	%rd17693, %rd17692, %rd17644;
	not.b64 	%rd17694, %rd17646;
	and.b64  	%rd17695, %rd17647, %rd17694;
	xor.b64  	%rd17696, %rd17695, %rd17645;
	not.b64 	%rd17697, %rd17647;
	and.b64  	%rd17698, %rd17643, %rd17697;
	xor.b64  	%rd17699, %rd17698, %rd17646;
	not.b64 	%rd17700, %rd17643;
	and.b64  	%rd17701, %rd17644, %rd17700;
	xor.b64  	%rd17702, %rd17701, %rd17647;
	not.b64 	%rd17703, %rd17649;
	and.b64  	%rd17704, %rd17650, %rd17703;
	xor.b64  	%rd17705, %rd17704, %rd17648;
	not.b64 	%rd17706, %rd17650;
	and.b64  	%rd17707, %rd17651, %rd17706;
	xor.b64  	%rd17708, %rd17707, %rd17649;
	not.b64 	%rd17709, %rd17651;
	and.b64  	%rd17710, %rd17652, %rd17709;
	xor.b64  	%rd17711, %rd17710, %rd17650;
	not.b64 	%rd17712, %rd17652;
	and.b64  	%rd17713, %rd17648, %rd17712;
	xor.b64  	%rd17714, %rd17713, %rd17651;
	not.b64 	%rd17715, %rd17648;
	and.b64  	%rd17716, %rd17649, %rd17715;
	xor.b64  	%rd17717, %rd17716, %rd17652;
	not.b64 	%rd17718, %rd17654;
	and.b64  	%rd17719, %rd17655, %rd17718;
	xor.b64  	%rd17720, %rd17719, %rd17653;
	not.b64 	%rd17721, %rd17655;
	and.b64  	%rd17722, %rd17656, %rd17721;
	xor.b64  	%rd17723, %rd17722, %rd17654;
	not.b64 	%rd17724, %rd17656;
	and.b64  	%rd17725, %rd17657, %rd17724;
	xor.b64  	%rd17726, %rd17725, %rd17655;
	not.b64 	%rd17727, %rd17657;
	and.b64  	%rd17728, %rd17653, %rd17727;
	xor.b64  	%rd17729, %rd17728, %rd17656;
	not.b64 	%rd17730, %rd17653;
	and.b64  	%rd17731, %rd17654, %rd17730;
	xor.b64  	%rd17732, %rd17731, %rd17657;
	xor.b64  	%rd17733, %rd17660, %rd19819;
	xor.b64  	%rd17734, %rd17675, %rd17733;
	xor.b64  	%rd17735, %rd17734, %rd17690;
	xor.b64  	%rd17736, %rd17735, %rd17705;
	xor.b64  	%rd17737, %rd17736, %rd17720;
	xor.b64  	%rd17738, %rd17678, %rd17663;
	xor.b64  	%rd17739, %rd17738, %rd17693;
	xor.b64  	%rd17740, %rd17739, %rd17708;
	xor.b64  	%rd17741, %rd17740, %rd17723;
	xor.b64  	%rd17742, %rd17681, %rd17666;
	xor.b64  	%rd17743, %rd17742, %rd17696;
	xor.b64  	%rd17744, %rd17743, %rd17711;
	xor.b64  	%rd17745, %rd17744, %rd17726;
	xor.b64  	%rd17746, %rd17684, %rd17669;
	xor.b64  	%rd17747, %rd17746, %rd17699;
	xor.b64  	%rd17748, %rd17747, %rd17714;
	xor.b64  	%rd17749, %rd17748, %rd17729;
	xor.b64  	%rd17750, %rd17687, %rd17672;
	xor.b64  	%rd17751, %rd17750, %rd17702;
	xor.b64  	%rd17752, %rd17751, %rd17717;
	xor.b64  	%rd17753, %rd17752, %rd17732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12614}, %rd17741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12615,%dummy}, %rd17741;
	}
	shf.l.wrap.b32 	%r12616, %r12615, %r12614, 1;
	shf.l.wrap.b32 	%r12617, %r12614, %r12615, 1;
	mov.b64 	%rd17754, {%r12617, %r12616};
	xor.b64  	%rd17755, %rd17753, %rd17754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12618}, %rd17745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12619,%dummy}, %rd17745;
	}
	shf.l.wrap.b32 	%r12620, %r12619, %r12618, 1;
	shf.l.wrap.b32 	%r12621, %r12618, %r12619, 1;
	mov.b64 	%rd17756, {%r12621, %r12620};
	xor.b64  	%rd17757, %rd17756, %rd17737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12622}, %rd17749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12623,%dummy}, %rd17749;
	}
	shf.l.wrap.b32 	%r12624, %r12623, %r12622, 1;
	shf.l.wrap.b32 	%r12625, %r12622, %r12623, 1;
	mov.b64 	%rd17758, {%r12625, %r12624};
	xor.b64  	%rd17759, %rd17758, %rd17741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12626}, %rd17753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12627,%dummy}, %rd17753;
	}
	shf.l.wrap.b32 	%r12628, %r12627, %r12626, 1;
	shf.l.wrap.b32 	%r12629, %r12626, %r12627, 1;
	mov.b64 	%rd17760, {%r12629, %r12628};
	xor.b64  	%rd17761, %rd17760, %rd17745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12630}, %rd17737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12631,%dummy}, %rd17737;
	}
	shf.l.wrap.b32 	%r12632, %r12631, %r12630, 1;
	shf.l.wrap.b32 	%r12633, %r12630, %r12631, 1;
	mov.b64 	%rd17762, {%r12633, %r12632};
	xor.b64  	%rd17763, %rd17749, %rd17762;
	xor.b64  	%rd17764, %rd17755, %rd17733;
	xor.b64  	%rd17765, %rd17757, %rd17663;
	xor.b64  	%rd17766, %rd17759, %rd17666;
	xor.b64  	%rd17767, %rd17761, %rd17669;
	xor.b64  	%rd17768, %rd17763, %rd17672;
	xor.b64  	%rd17769, %rd17755, %rd17675;
	xor.b64  	%rd17770, %rd17757, %rd17678;
	xor.b64  	%rd17771, %rd17759, %rd17681;
	xor.b64  	%rd17772, %rd17761, %rd17684;
	xor.b64  	%rd17773, %rd17763, %rd17687;
	xor.b64  	%rd17774, %rd17755, %rd17690;
	xor.b64  	%rd17775, %rd17757, %rd17693;
	xor.b64  	%rd17776, %rd17759, %rd17696;
	xor.b64  	%rd17777, %rd17761, %rd17699;
	xor.b64  	%rd17778, %rd17763, %rd17702;
	xor.b64  	%rd17779, %rd17755, %rd17705;
	xor.b64  	%rd17780, %rd17757, %rd17708;
	xor.b64  	%rd17781, %rd17759, %rd17711;
	xor.b64  	%rd17782, %rd17761, %rd17714;
	xor.b64  	%rd17783, %rd17763, %rd17717;
	xor.b64  	%rd17784, %rd17755, %rd17720;
	xor.b64  	%rd17785, %rd17757, %rd17723;
	xor.b64  	%rd17786, %rd17759, %rd17726;
	xor.b64  	%rd17787, %rd17761, %rd17729;
	xor.b64  	%rd17788, %rd17763, %rd17732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12634,%dummy}, %rd17770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12635}, %rd17770;
	}
	shf.r.wrap.b32 	%r12636, %r12635, %r12634, 20;
	shf.r.wrap.b32 	%r12637, %r12634, %r12635, 20;
	mov.b64 	%rd17789, {%r12637, %r12636};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12638,%dummy}, %rd17776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12639}, %rd17776;
	}
	shf.r.wrap.b32 	%r12640, %r12639, %r12638, 21;
	shf.r.wrap.b32 	%r12641, %r12638, %r12639, 21;
	mov.b64 	%rd17790, {%r12641, %r12640};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12642}, %rd17782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12643,%dummy}, %rd17782;
	}
	shf.l.wrap.b32 	%r12644, %r12643, %r12642, 21;
	shf.l.wrap.b32 	%r12645, %r12642, %r12643, 21;
	mov.b64 	%rd17791, {%r12645, %r12644};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12646}, %rd17788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12647,%dummy}, %rd17788;
	}
	shf.l.wrap.b32 	%r12648, %r12647, %r12646, 14;
	shf.l.wrap.b32 	%r12649, %r12646, %r12647, 14;
	mov.b64 	%rd17792, {%r12649, %r12648};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12650}, %rd17767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12651,%dummy}, %rd17767;
	}
	shf.l.wrap.b32 	%r12652, %r12651, %r12650, 28;
	shf.l.wrap.b32 	%r12653, %r12650, %r12651, 28;
	mov.b64 	%rd17793, {%r12653, %r12652};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12654}, %rd17773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12655,%dummy}, %rd17773;
	}
	shf.l.wrap.b32 	%r12656, %r12655, %r12654, 20;
	shf.l.wrap.b32 	%r12657, %r12654, %r12655, 20;
	mov.b64 	%rd17794, {%r12657, %r12656};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12658}, %rd17774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12659,%dummy}, %rd17774;
	}
	shf.l.wrap.b32 	%r12660, %r12659, %r12658, 3;
	shf.l.wrap.b32 	%r12661, %r12658, %r12659, 3;
	mov.b64 	%rd17795, {%r12661, %r12660};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12662,%dummy}, %rd17780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12663}, %rd17780;
	}
	shf.r.wrap.b32 	%r12664, %r12663, %r12662, 19;
	shf.r.wrap.b32 	%r12665, %r12662, %r12663, 19;
	mov.b64 	%rd17796, {%r12665, %r12664};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12666,%dummy}, %rd17786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12667}, %rd17786;
	}
	shf.r.wrap.b32 	%r12668, %r12667, %r12666, 3;
	shf.r.wrap.b32 	%r12669, %r12666, %r12667, 3;
	mov.b64 	%rd17797, {%r12669, %r12668};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12670}, %rd17765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12671,%dummy}, %rd17765;
	}
	shf.l.wrap.b32 	%r12672, %r12671, %r12670, 1;
	shf.l.wrap.b32 	%r12673, %r12670, %r12671, 1;
	mov.b64 	%rd17798, {%r12673, %r12672};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12674}, %rd17771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12675,%dummy}, %rd17771;
	}
	shf.l.wrap.b32 	%r12676, %r12675, %r12674, 6;
	shf.l.wrap.b32 	%r12677, %r12674, %r12675, 6;
	mov.b64 	%rd17799, {%r12677, %r12676};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12678}, %rd17777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12679,%dummy}, %rd17777;
	}
	shf.l.wrap.b32 	%r12680, %r12679, %r12678, 25;
	shf.l.wrap.b32 	%r12681, %r12678, %r12679, 25;
	mov.b64 	%rd17800, {%r12681, %r12680};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12682}, %rd17783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12683,%dummy}, %rd17783;
	}
	shf.l.wrap.b32 	%r12684, %r12683, %r12682, 8;
	shf.l.wrap.b32 	%r12685, %r12682, %r12683, 8;
	mov.b64 	%rd17801, {%r12685, %r12684};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12686}, %rd17784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12687,%dummy}, %rd17784;
	}
	shf.l.wrap.b32 	%r12688, %r12687, %r12686, 18;
	shf.l.wrap.b32 	%r12689, %r12686, %r12687, 18;
	mov.b64 	%rd17802, {%r12689, %r12688};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12690}, %rd17768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12691,%dummy}, %rd17768;
	}
	shf.l.wrap.b32 	%r12692, %r12691, %r12690, 27;
	shf.l.wrap.b32 	%r12693, %r12690, %r12691, 27;
	mov.b64 	%rd17803, {%r12693, %r12692};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12694,%dummy}, %rd17769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12695}, %rd17769;
	}
	shf.r.wrap.b32 	%r12696, %r12695, %r12694, 28;
	shf.r.wrap.b32 	%r12697, %r12694, %r12695, 28;
	mov.b64 	%rd17804, {%r12697, %r12696};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12698}, %rd17775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12699,%dummy}, %rd17775;
	}
	shf.l.wrap.b32 	%r12700, %r12699, %r12698, 10;
	shf.l.wrap.b32 	%r12701, %r12698, %r12699, 10;
	mov.b64 	%rd17805, {%r12701, %r12700};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12702}, %rd17781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12703,%dummy}, %rd17781;
	}
	shf.l.wrap.b32 	%r12704, %r12703, %r12702, 15;
	shf.l.wrap.b32 	%r12705, %r12702, %r12703, 15;
	mov.b64 	%rd17806, {%r12705, %r12704};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12706,%dummy}, %rd17787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12707}, %rd17787;
	}
	shf.r.wrap.b32 	%r12708, %r12707, %r12706, 8;
	shf.r.wrap.b32 	%r12709, %r12706, %r12707, 8;
	mov.b64 	%rd17807, {%r12709, %r12708};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12710,%dummy}, %rd17766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12711}, %rd17766;
	}
	shf.r.wrap.b32 	%r12712, %r12711, %r12710, 2;
	shf.r.wrap.b32 	%r12713, %r12710, %r12711, 2;
	mov.b64 	%rd17808, {%r12713, %r12712};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12714,%dummy}, %rd17772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12715}, %rd17772;
	}
	shf.r.wrap.b32 	%r12716, %r12715, %r12714, 9;
	shf.r.wrap.b32 	%r12717, %r12714, %r12715, 9;
	mov.b64 	%rd17809, {%r12717, %r12716};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12718,%dummy}, %rd17778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12719}, %rd17778;
	}
	shf.r.wrap.b32 	%r12720, %r12719, %r12718, 25;
	shf.r.wrap.b32 	%r12721, %r12718, %r12719, 25;
	mov.b64 	%rd17810, {%r12721, %r12720};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12722,%dummy}, %rd17779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12723}, %rd17779;
	}
	shf.r.wrap.b32 	%r12724, %r12723, %r12722, 23;
	shf.r.wrap.b32 	%r12725, %r12722, %r12723, 23;
	mov.b64 	%rd17811, {%r12725, %r12724};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12726}, %rd17785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12727,%dummy}, %rd17785;
	}
	shf.l.wrap.b32 	%r12728, %r12727, %r12726, 2;
	shf.l.wrap.b32 	%r12729, %r12726, %r12727, 2;
	mov.b64 	%rd17812, {%r12729, %r12728};
	not.b64 	%rd17813, %rd17789;
	and.b64  	%rd17814, %rd17790, %rd17813;
	xor.b64  	%rd17815, %rd17814, %rd17764;
	not.b64 	%rd17816, %rd17790;
	and.b64  	%rd17817, %rd17791, %rd17816;
	xor.b64  	%rd17818, %rd17817, %rd17789;
	not.b64 	%rd17819, %rd17791;
	and.b64  	%rd17820, %rd17792, %rd17819;
	xor.b64  	%rd17821, %rd17820, %rd17790;
	not.b64 	%rd17822, %rd17792;
	and.b64  	%rd17823, %rd17764, %rd17822;
	xor.b64  	%rd17824, %rd17823, %rd17791;
	not.b64 	%rd17825, %rd17764;
	and.b64  	%rd17826, %rd17789, %rd17825;
	xor.b64  	%rd17827, %rd17826, %rd17792;
	not.b64 	%rd17828, %rd17794;
	and.b64  	%rd17829, %rd17795, %rd17828;
	xor.b64  	%rd17830, %rd17829, %rd17793;
	not.b64 	%rd17831, %rd17795;
	and.b64  	%rd17832, %rd17796, %rd17831;
	xor.b64  	%rd17833, %rd17832, %rd17794;
	not.b64 	%rd17834, %rd17796;
	and.b64  	%rd17835, %rd17797, %rd17834;
	xor.b64  	%rd17836, %rd17835, %rd17795;
	not.b64 	%rd17837, %rd17797;
	and.b64  	%rd17838, %rd17793, %rd17837;
	xor.b64  	%rd17839, %rd17838, %rd17796;
	not.b64 	%rd17840, %rd17793;
	and.b64  	%rd17841, %rd17794, %rd17840;
	xor.b64  	%rd17842, %rd17841, %rd17797;
	not.b64 	%rd17843, %rd17799;
	and.b64  	%rd17844, %rd17800, %rd17843;
	xor.b64  	%rd17845, %rd17844, %rd17798;
	not.b64 	%rd17846, %rd17800;
	and.b64  	%rd17847, %rd17801, %rd17846;
	xor.b64  	%rd17848, %rd17847, %rd17799;
	not.b64 	%rd17849, %rd17801;
	and.b64  	%rd17850, %rd17802, %rd17849;
	xor.b64  	%rd17851, %rd17850, %rd17800;
	not.b64 	%rd17852, %rd17802;
	and.b64  	%rd17853, %rd17798, %rd17852;
	xor.b64  	%rd17854, %rd17853, %rd17801;
	not.b64 	%rd17855, %rd17798;
	and.b64  	%rd17856, %rd17799, %rd17855;
	xor.b64  	%rd17857, %rd17856, %rd17802;
	not.b64 	%rd17858, %rd17804;
	and.b64  	%rd17859, %rd17805, %rd17858;
	xor.b64  	%rd17860, %rd17859, %rd17803;
	not.b64 	%rd17861, %rd17805;
	and.b64  	%rd17862, %rd17806, %rd17861;
	xor.b64  	%rd17863, %rd17862, %rd17804;
	not.b64 	%rd17864, %rd17806;
	and.b64  	%rd17865, %rd17807, %rd17864;
	xor.b64  	%rd17866, %rd17865, %rd17805;
	not.b64 	%rd17867, %rd17807;
	and.b64  	%rd17868, %rd17803, %rd17867;
	xor.b64  	%rd17869, %rd17868, %rd17806;
	not.b64 	%rd17870, %rd17803;
	and.b64  	%rd17871, %rd17804, %rd17870;
	xor.b64  	%rd17872, %rd17871, %rd17807;
	not.b64 	%rd17873, %rd17809;
	and.b64  	%rd17874, %rd17810, %rd17873;
	xor.b64  	%rd17875, %rd17874, %rd17808;
	not.b64 	%rd17876, %rd17810;
	and.b64  	%rd17877, %rd17811, %rd17876;
	xor.b64  	%rd17878, %rd17877, %rd17809;
	not.b64 	%rd17879, %rd17811;
	and.b64  	%rd17880, %rd17812, %rd17879;
	xor.b64  	%rd17881, %rd17880, %rd17810;
	not.b64 	%rd17882, %rd17812;
	and.b64  	%rd17883, %rd17808, %rd17882;
	xor.b64  	%rd17884, %rd17883, %rd17811;
	not.b64 	%rd17885, %rd17808;
	and.b64  	%rd17886, %rd17809, %rd17885;
	xor.b64  	%rd17887, %rd17886, %rd17812;
	xor.b64  	%rd17888, %rd17815, %rd28;
	xor.b64  	%rd17889, %rd17830, %rd17888;
	xor.b64  	%rd17890, %rd17889, %rd17845;
	xor.b64  	%rd17891, %rd17890, %rd17860;
	xor.b64  	%rd17892, %rd17891, %rd17875;
	xor.b64  	%rd17893, %rd17833, %rd17818;
	xor.b64  	%rd17894, %rd17893, %rd17848;
	xor.b64  	%rd17895, %rd17894, %rd17863;
	xor.b64  	%rd17896, %rd17895, %rd17878;
	xor.b64  	%rd17897, %rd17836, %rd17821;
	xor.b64  	%rd17898, %rd17897, %rd17851;
	xor.b64  	%rd17899, %rd17898, %rd17866;
	xor.b64  	%rd17900, %rd17899, %rd17881;
	xor.b64  	%rd17901, %rd17839, %rd17824;
	xor.b64  	%rd17902, %rd17901, %rd17854;
	xor.b64  	%rd17903, %rd17902, %rd17869;
	xor.b64  	%rd17904, %rd17903, %rd17884;
	xor.b64  	%rd17905, %rd17842, %rd17827;
	xor.b64  	%rd17906, %rd17905, %rd17857;
	xor.b64  	%rd17907, %rd17906, %rd17872;
	xor.b64  	%rd17908, %rd17907, %rd17887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12730}, %rd17896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12731,%dummy}, %rd17896;
	}
	shf.l.wrap.b32 	%r12732, %r12731, %r12730, 1;
	shf.l.wrap.b32 	%r12733, %r12730, %r12731, 1;
	mov.b64 	%rd17909, {%r12733, %r12732};
	xor.b64  	%rd17910, %rd17908, %rd17909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12734}, %rd17900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12735,%dummy}, %rd17900;
	}
	shf.l.wrap.b32 	%r12736, %r12735, %r12734, 1;
	shf.l.wrap.b32 	%r12737, %r12734, %r12735, 1;
	mov.b64 	%rd17911, {%r12737, %r12736};
	xor.b64  	%rd17912, %rd17911, %rd17892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12738}, %rd17904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12739,%dummy}, %rd17904;
	}
	shf.l.wrap.b32 	%r12740, %r12739, %r12738, 1;
	shf.l.wrap.b32 	%r12741, %r12738, %r12739, 1;
	mov.b64 	%rd17913, {%r12741, %r12740};
	xor.b64  	%rd17914, %rd17913, %rd17896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12742}, %rd17908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12743,%dummy}, %rd17908;
	}
	shf.l.wrap.b32 	%r12744, %r12743, %r12742, 1;
	shf.l.wrap.b32 	%r12745, %r12742, %r12743, 1;
	mov.b64 	%rd17915, {%r12745, %r12744};
	xor.b64  	%rd17916, %rd17915, %rd17900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12746}, %rd17892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12747,%dummy}, %rd17892;
	}
	shf.l.wrap.b32 	%r12748, %r12747, %r12746, 1;
	shf.l.wrap.b32 	%r12749, %r12746, %r12747, 1;
	mov.b64 	%rd17917, {%r12749, %r12748};
	xor.b64  	%rd17918, %rd17904, %rd17917;
	xor.b64  	%rd17919, %rd17910, %rd17888;
	xor.b64  	%rd17920, %rd17912, %rd17818;
	xor.b64  	%rd17921, %rd17914, %rd17821;
	xor.b64  	%rd17922, %rd17916, %rd17824;
	xor.b64  	%rd17923, %rd17918, %rd17827;
	xor.b64  	%rd17924, %rd17910, %rd17830;
	xor.b64  	%rd17925, %rd17912, %rd17833;
	xor.b64  	%rd17926, %rd17914, %rd17836;
	xor.b64  	%rd17927, %rd17916, %rd17839;
	xor.b64  	%rd17928, %rd17918, %rd17842;
	xor.b64  	%rd17929, %rd17910, %rd17845;
	xor.b64  	%rd17930, %rd17912, %rd17848;
	xor.b64  	%rd17931, %rd17914, %rd17851;
	xor.b64  	%rd17932, %rd17916, %rd17854;
	xor.b64  	%rd17933, %rd17918, %rd17857;
	xor.b64  	%rd17934, %rd17910, %rd17860;
	xor.b64  	%rd17935, %rd17912, %rd17863;
	xor.b64  	%rd17936, %rd17914, %rd17866;
	xor.b64  	%rd17937, %rd17916, %rd17869;
	xor.b64  	%rd17938, %rd17918, %rd17872;
	xor.b64  	%rd17939, %rd17910, %rd17875;
	xor.b64  	%rd17940, %rd17912, %rd17878;
	xor.b64  	%rd17941, %rd17914, %rd17881;
	xor.b64  	%rd17942, %rd17916, %rd17884;
	xor.b64  	%rd17943, %rd17918, %rd17887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12750,%dummy}, %rd17925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12751}, %rd17925;
	}
	shf.r.wrap.b32 	%r12752, %r12751, %r12750, 20;
	shf.r.wrap.b32 	%r12753, %r12750, %r12751, 20;
	mov.b64 	%rd17944, {%r12753, %r12752};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12754,%dummy}, %rd17931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12755}, %rd17931;
	}
	shf.r.wrap.b32 	%r12756, %r12755, %r12754, 21;
	shf.r.wrap.b32 	%r12757, %r12754, %r12755, 21;
	mov.b64 	%rd17945, {%r12757, %r12756};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12758}, %rd17937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12759,%dummy}, %rd17937;
	}
	shf.l.wrap.b32 	%r12760, %r12759, %r12758, 21;
	shf.l.wrap.b32 	%r12761, %r12758, %r12759, 21;
	mov.b64 	%rd17946, {%r12761, %r12760};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12762}, %rd17943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12763,%dummy}, %rd17943;
	}
	shf.l.wrap.b32 	%r12764, %r12763, %r12762, 14;
	shf.l.wrap.b32 	%r12765, %r12762, %r12763, 14;
	mov.b64 	%rd17947, {%r12765, %r12764};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12766}, %rd17922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12767,%dummy}, %rd17922;
	}
	shf.l.wrap.b32 	%r12768, %r12767, %r12766, 28;
	shf.l.wrap.b32 	%r12769, %r12766, %r12767, 28;
	mov.b64 	%rd17948, {%r12769, %r12768};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12770}, %rd17928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12771,%dummy}, %rd17928;
	}
	shf.l.wrap.b32 	%r12772, %r12771, %r12770, 20;
	shf.l.wrap.b32 	%r12773, %r12770, %r12771, 20;
	mov.b64 	%rd17949, {%r12773, %r12772};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12774}, %rd17929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12775,%dummy}, %rd17929;
	}
	shf.l.wrap.b32 	%r12776, %r12775, %r12774, 3;
	shf.l.wrap.b32 	%r12777, %r12774, %r12775, 3;
	mov.b64 	%rd17950, {%r12777, %r12776};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12778,%dummy}, %rd17935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12779}, %rd17935;
	}
	shf.r.wrap.b32 	%r12780, %r12779, %r12778, 19;
	shf.r.wrap.b32 	%r12781, %r12778, %r12779, 19;
	mov.b64 	%rd17951, {%r12781, %r12780};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12782,%dummy}, %rd17941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12783}, %rd17941;
	}
	shf.r.wrap.b32 	%r12784, %r12783, %r12782, 3;
	shf.r.wrap.b32 	%r12785, %r12782, %r12783, 3;
	mov.b64 	%rd17952, {%r12785, %r12784};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12786}, %rd17920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12787,%dummy}, %rd17920;
	}
	shf.l.wrap.b32 	%r12788, %r12787, %r12786, 1;
	shf.l.wrap.b32 	%r12789, %r12786, %r12787, 1;
	mov.b64 	%rd17953, {%r12789, %r12788};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12790}, %rd17926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12791,%dummy}, %rd17926;
	}
	shf.l.wrap.b32 	%r12792, %r12791, %r12790, 6;
	shf.l.wrap.b32 	%r12793, %r12790, %r12791, 6;
	mov.b64 	%rd17954, {%r12793, %r12792};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12794}, %rd17932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12795,%dummy}, %rd17932;
	}
	shf.l.wrap.b32 	%r12796, %r12795, %r12794, 25;
	shf.l.wrap.b32 	%r12797, %r12794, %r12795, 25;
	mov.b64 	%rd17955, {%r12797, %r12796};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12798}, %rd17938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12799,%dummy}, %rd17938;
	}
	shf.l.wrap.b32 	%r12800, %r12799, %r12798, 8;
	shf.l.wrap.b32 	%r12801, %r12798, %r12799, 8;
	mov.b64 	%rd17956, {%r12801, %r12800};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12802}, %rd17939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12803,%dummy}, %rd17939;
	}
	shf.l.wrap.b32 	%r12804, %r12803, %r12802, 18;
	shf.l.wrap.b32 	%r12805, %r12802, %r12803, 18;
	mov.b64 	%rd17957, {%r12805, %r12804};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12806}, %rd17923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12807,%dummy}, %rd17923;
	}
	shf.l.wrap.b32 	%r12808, %r12807, %r12806, 27;
	shf.l.wrap.b32 	%r12809, %r12806, %r12807, 27;
	mov.b64 	%rd17958, {%r12809, %r12808};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12810,%dummy}, %rd17924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12811}, %rd17924;
	}
	shf.r.wrap.b32 	%r12812, %r12811, %r12810, 28;
	shf.r.wrap.b32 	%r12813, %r12810, %r12811, 28;
	mov.b64 	%rd17959, {%r12813, %r12812};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12814}, %rd17930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12815,%dummy}, %rd17930;
	}
	shf.l.wrap.b32 	%r12816, %r12815, %r12814, 10;
	shf.l.wrap.b32 	%r12817, %r12814, %r12815, 10;
	mov.b64 	%rd17960, {%r12817, %r12816};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12818}, %rd17936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12819,%dummy}, %rd17936;
	}
	shf.l.wrap.b32 	%r12820, %r12819, %r12818, 15;
	shf.l.wrap.b32 	%r12821, %r12818, %r12819, 15;
	mov.b64 	%rd17961, {%r12821, %r12820};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12822,%dummy}, %rd17942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12823}, %rd17942;
	}
	shf.r.wrap.b32 	%r12824, %r12823, %r12822, 8;
	shf.r.wrap.b32 	%r12825, %r12822, %r12823, 8;
	mov.b64 	%rd17962, {%r12825, %r12824};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12826,%dummy}, %rd17921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12827}, %rd17921;
	}
	shf.r.wrap.b32 	%r12828, %r12827, %r12826, 2;
	shf.r.wrap.b32 	%r12829, %r12826, %r12827, 2;
	mov.b64 	%rd17963, {%r12829, %r12828};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12830,%dummy}, %rd17927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12831}, %rd17927;
	}
	shf.r.wrap.b32 	%r12832, %r12831, %r12830, 9;
	shf.r.wrap.b32 	%r12833, %r12830, %r12831, 9;
	mov.b64 	%rd17964, {%r12833, %r12832};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12834,%dummy}, %rd17933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12835}, %rd17933;
	}
	shf.r.wrap.b32 	%r12836, %r12835, %r12834, 25;
	shf.r.wrap.b32 	%r12837, %r12834, %r12835, 25;
	mov.b64 	%rd17965, {%r12837, %r12836};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12838,%dummy}, %rd17934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12839}, %rd17934;
	}
	shf.r.wrap.b32 	%r12840, %r12839, %r12838, 23;
	shf.r.wrap.b32 	%r12841, %r12838, %r12839, 23;
	mov.b64 	%rd17966, {%r12841, %r12840};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12842}, %rd17940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12843,%dummy}, %rd17940;
	}
	shf.l.wrap.b32 	%r12844, %r12843, %r12842, 2;
	shf.l.wrap.b32 	%r12845, %r12842, %r12843, 2;
	mov.b64 	%rd17967, {%r12845, %r12844};
	not.b64 	%rd17968, %rd17944;
	and.b64  	%rd17969, %rd17945, %rd17968;
	xor.b64  	%rd17970, %rd17969, %rd17919;
	not.b64 	%rd17971, %rd17945;
	and.b64  	%rd17972, %rd17946, %rd17971;
	xor.b64  	%rd17973, %rd17972, %rd17944;
	not.b64 	%rd17974, %rd17946;
	and.b64  	%rd17975, %rd17947, %rd17974;
	xor.b64  	%rd17976, %rd17975, %rd17945;
	not.b64 	%rd17977, %rd17947;
	and.b64  	%rd17978, %rd17919, %rd17977;
	xor.b64  	%rd17979, %rd17978, %rd17946;
	not.b64 	%rd17980, %rd17919;
	and.b64  	%rd17981, %rd17944, %rd17980;
	xor.b64  	%rd17982, %rd17981, %rd17947;
	not.b64 	%rd17983, %rd17949;
	and.b64  	%rd17984, %rd17950, %rd17983;
	xor.b64  	%rd17985, %rd17984, %rd17948;
	not.b64 	%rd17986, %rd17950;
	and.b64  	%rd17987, %rd17951, %rd17986;
	xor.b64  	%rd17988, %rd17987, %rd17949;
	not.b64 	%rd17989, %rd17951;
	and.b64  	%rd17990, %rd17952, %rd17989;
	xor.b64  	%rd17991, %rd17990, %rd17950;
	not.b64 	%rd17992, %rd17952;
	and.b64  	%rd17993, %rd17948, %rd17992;
	xor.b64  	%rd17994, %rd17993, %rd17951;
	not.b64 	%rd17995, %rd17948;
	and.b64  	%rd17996, %rd17949, %rd17995;
	xor.b64  	%rd17997, %rd17996, %rd17952;
	not.b64 	%rd17998, %rd17954;
	and.b64  	%rd17999, %rd17955, %rd17998;
	xor.b64  	%rd18000, %rd17999, %rd17953;
	not.b64 	%rd18001, %rd17955;
	and.b64  	%rd18002, %rd17956, %rd18001;
	xor.b64  	%rd18003, %rd18002, %rd17954;
	not.b64 	%rd18004, %rd17956;
	and.b64  	%rd18005, %rd17957, %rd18004;
	xor.b64  	%rd18006, %rd18005, %rd17955;
	not.b64 	%rd18007, %rd17957;
	and.b64  	%rd18008, %rd17953, %rd18007;
	xor.b64  	%rd18009, %rd18008, %rd17956;
	not.b64 	%rd18010, %rd17953;
	and.b64  	%rd18011, %rd17954, %rd18010;
	xor.b64  	%rd18012, %rd18011, %rd17957;
	not.b64 	%rd18013, %rd17959;
	and.b64  	%rd18014, %rd17960, %rd18013;
	xor.b64  	%rd18015, %rd18014, %rd17958;
	not.b64 	%rd18016, %rd17960;
	and.b64  	%rd18017, %rd17961, %rd18016;
	xor.b64  	%rd18018, %rd18017, %rd17959;
	not.b64 	%rd18019, %rd17961;
	and.b64  	%rd18020, %rd17962, %rd18019;
	xor.b64  	%rd18021, %rd18020, %rd17960;
	not.b64 	%rd18022, %rd17962;
	and.b64  	%rd18023, %rd17958, %rd18022;
	xor.b64  	%rd18024, %rd18023, %rd17961;
	not.b64 	%rd18025, %rd17958;
	and.b64  	%rd18026, %rd17959, %rd18025;
	xor.b64  	%rd18027, %rd18026, %rd17962;
	not.b64 	%rd18028, %rd17964;
	and.b64  	%rd18029, %rd17965, %rd18028;
	xor.b64  	%rd18030, %rd18029, %rd17963;
	not.b64 	%rd18031, %rd17965;
	and.b64  	%rd18032, %rd17966, %rd18031;
	xor.b64  	%rd18033, %rd18032, %rd17964;
	not.b64 	%rd18034, %rd17966;
	and.b64  	%rd18035, %rd17967, %rd18034;
	xor.b64  	%rd18036, %rd18035, %rd17965;
	not.b64 	%rd18037, %rd17967;
	and.b64  	%rd18038, %rd17963, %rd18037;
	xor.b64  	%rd18039, %rd18038, %rd17966;
	not.b64 	%rd18040, %rd17963;
	and.b64  	%rd18041, %rd17964, %rd18040;
	xor.b64  	%rd18042, %rd18041, %rd17967;
	xor.b64  	%rd18043, %rd17970, %rd29;
	xor.b64  	%rd18044, %rd17985, %rd18043;
	xor.b64  	%rd18045, %rd18044, %rd18000;
	xor.b64  	%rd18046, %rd18045, %rd18015;
	xor.b64  	%rd18047, %rd18046, %rd18030;
	xor.b64  	%rd18048, %rd17988, %rd17973;
	xor.b64  	%rd18049, %rd18048, %rd18003;
	xor.b64  	%rd18050, %rd18049, %rd18018;
	xor.b64  	%rd18051, %rd18050, %rd18033;
	xor.b64  	%rd18052, %rd17991, %rd17976;
	xor.b64  	%rd18053, %rd18052, %rd18006;
	xor.b64  	%rd18054, %rd18053, %rd18021;
	xor.b64  	%rd18055, %rd18054, %rd18036;
	xor.b64  	%rd18056, %rd17994, %rd17979;
	xor.b64  	%rd18057, %rd18056, %rd18009;
	xor.b64  	%rd18058, %rd18057, %rd18024;
	xor.b64  	%rd18059, %rd18058, %rd18039;
	xor.b64  	%rd18060, %rd17997, %rd17982;
	xor.b64  	%rd18061, %rd18060, %rd18012;
	xor.b64  	%rd18062, %rd18061, %rd18027;
	xor.b64  	%rd18063, %rd18062, %rd18042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12846}, %rd18051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12847,%dummy}, %rd18051;
	}
	shf.l.wrap.b32 	%r12848, %r12847, %r12846, 1;
	shf.l.wrap.b32 	%r12849, %r12846, %r12847, 1;
	mov.b64 	%rd18064, {%r12849, %r12848};
	xor.b64  	%rd18065, %rd18063, %rd18064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12850}, %rd18055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12851,%dummy}, %rd18055;
	}
	shf.l.wrap.b32 	%r12852, %r12851, %r12850, 1;
	shf.l.wrap.b32 	%r12853, %r12850, %r12851, 1;
	mov.b64 	%rd18066, {%r12853, %r12852};
	xor.b64  	%rd18067, %rd18066, %rd18047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12854}, %rd18059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12855,%dummy}, %rd18059;
	}
	shf.l.wrap.b32 	%r12856, %r12855, %r12854, 1;
	shf.l.wrap.b32 	%r12857, %r12854, %r12855, 1;
	mov.b64 	%rd18068, {%r12857, %r12856};
	xor.b64  	%rd18069, %rd18068, %rd18051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12858}, %rd18063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12859,%dummy}, %rd18063;
	}
	shf.l.wrap.b32 	%r12860, %r12859, %r12858, 1;
	shf.l.wrap.b32 	%r12861, %r12858, %r12859, 1;
	mov.b64 	%rd18070, {%r12861, %r12860};
	xor.b64  	%rd18071, %rd18070, %rd18055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12862}, %rd18047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12863,%dummy}, %rd18047;
	}
	shf.l.wrap.b32 	%r12864, %r12863, %r12862, 1;
	shf.l.wrap.b32 	%r12865, %r12862, %r12863, 1;
	mov.b64 	%rd18072, {%r12865, %r12864};
	xor.b64  	%rd18073, %rd18059, %rd18072;
	xor.b64  	%rd18074, %rd18065, %rd18043;
	xor.b64  	%rd18075, %rd18067, %rd17973;
	xor.b64  	%rd18076, %rd18069, %rd17976;
	xor.b64  	%rd18077, %rd18071, %rd17979;
	xor.b64  	%rd18078, %rd18073, %rd17982;
	xor.b64  	%rd18079, %rd18065, %rd17985;
	xor.b64  	%rd18080, %rd18067, %rd17988;
	xor.b64  	%rd18081, %rd18069, %rd17991;
	xor.b64  	%rd18082, %rd18071, %rd17994;
	xor.b64  	%rd18083, %rd18073, %rd17997;
	xor.b64  	%rd18084, %rd18065, %rd18000;
	xor.b64  	%rd18085, %rd18067, %rd18003;
	xor.b64  	%rd18086, %rd18069, %rd18006;
	xor.b64  	%rd18087, %rd18071, %rd18009;
	xor.b64  	%rd18088, %rd18073, %rd18012;
	xor.b64  	%rd18089, %rd18065, %rd18015;
	xor.b64  	%rd18090, %rd18067, %rd18018;
	xor.b64  	%rd18091, %rd18069, %rd18021;
	xor.b64  	%rd18092, %rd18071, %rd18024;
	xor.b64  	%rd18093, %rd18073, %rd18027;
	xor.b64  	%rd18094, %rd18065, %rd18030;
	xor.b64  	%rd18095, %rd18067, %rd18033;
	xor.b64  	%rd18096, %rd18069, %rd18036;
	xor.b64  	%rd18097, %rd18071, %rd18039;
	xor.b64  	%rd18098, %rd18073, %rd18042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12866,%dummy}, %rd18080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12867}, %rd18080;
	}
	shf.r.wrap.b32 	%r12868, %r12867, %r12866, 20;
	shf.r.wrap.b32 	%r12869, %r12866, %r12867, 20;
	mov.b64 	%rd18099, {%r12869, %r12868};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12870,%dummy}, %rd18086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12871}, %rd18086;
	}
	shf.r.wrap.b32 	%r12872, %r12871, %r12870, 21;
	shf.r.wrap.b32 	%r12873, %r12870, %r12871, 21;
	mov.b64 	%rd18100, {%r12873, %r12872};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12874}, %rd18092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12875,%dummy}, %rd18092;
	}
	shf.l.wrap.b32 	%r12876, %r12875, %r12874, 21;
	shf.l.wrap.b32 	%r12877, %r12874, %r12875, 21;
	mov.b64 	%rd18101, {%r12877, %r12876};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12878}, %rd18098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12879,%dummy}, %rd18098;
	}
	shf.l.wrap.b32 	%r12880, %r12879, %r12878, 14;
	shf.l.wrap.b32 	%r12881, %r12878, %r12879, 14;
	mov.b64 	%rd18102, {%r12881, %r12880};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12882}, %rd18077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12883,%dummy}, %rd18077;
	}
	shf.l.wrap.b32 	%r12884, %r12883, %r12882, 28;
	shf.l.wrap.b32 	%r12885, %r12882, %r12883, 28;
	mov.b64 	%rd18103, {%r12885, %r12884};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12886}, %rd18083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12887,%dummy}, %rd18083;
	}
	shf.l.wrap.b32 	%r12888, %r12887, %r12886, 20;
	shf.l.wrap.b32 	%r12889, %r12886, %r12887, 20;
	mov.b64 	%rd18104, {%r12889, %r12888};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12890}, %rd18084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12891,%dummy}, %rd18084;
	}
	shf.l.wrap.b32 	%r12892, %r12891, %r12890, 3;
	shf.l.wrap.b32 	%r12893, %r12890, %r12891, 3;
	mov.b64 	%rd18105, {%r12893, %r12892};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12894,%dummy}, %rd18090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12895}, %rd18090;
	}
	shf.r.wrap.b32 	%r12896, %r12895, %r12894, 19;
	shf.r.wrap.b32 	%r12897, %r12894, %r12895, 19;
	mov.b64 	%rd18106, {%r12897, %r12896};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12898,%dummy}, %rd18096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12899}, %rd18096;
	}
	shf.r.wrap.b32 	%r12900, %r12899, %r12898, 3;
	shf.r.wrap.b32 	%r12901, %r12898, %r12899, 3;
	mov.b64 	%rd18107, {%r12901, %r12900};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12902}, %rd18075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12903,%dummy}, %rd18075;
	}
	shf.l.wrap.b32 	%r12904, %r12903, %r12902, 1;
	shf.l.wrap.b32 	%r12905, %r12902, %r12903, 1;
	mov.b64 	%rd18108, {%r12905, %r12904};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12906}, %rd18081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12907,%dummy}, %rd18081;
	}
	shf.l.wrap.b32 	%r12908, %r12907, %r12906, 6;
	shf.l.wrap.b32 	%r12909, %r12906, %r12907, 6;
	mov.b64 	%rd18109, {%r12909, %r12908};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12910}, %rd18087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12911,%dummy}, %rd18087;
	}
	shf.l.wrap.b32 	%r12912, %r12911, %r12910, 25;
	shf.l.wrap.b32 	%r12913, %r12910, %r12911, 25;
	mov.b64 	%rd18110, {%r12913, %r12912};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12914}, %rd18093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12915,%dummy}, %rd18093;
	}
	shf.l.wrap.b32 	%r12916, %r12915, %r12914, 8;
	shf.l.wrap.b32 	%r12917, %r12914, %r12915, 8;
	mov.b64 	%rd18111, {%r12917, %r12916};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12918}, %rd18094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12919,%dummy}, %rd18094;
	}
	shf.l.wrap.b32 	%r12920, %r12919, %r12918, 18;
	shf.l.wrap.b32 	%r12921, %r12918, %r12919, 18;
	mov.b64 	%rd18112, {%r12921, %r12920};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12922}, %rd18078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12923,%dummy}, %rd18078;
	}
	shf.l.wrap.b32 	%r12924, %r12923, %r12922, 27;
	shf.l.wrap.b32 	%r12925, %r12922, %r12923, 27;
	mov.b64 	%rd18113, {%r12925, %r12924};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12926,%dummy}, %rd18079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12927}, %rd18079;
	}
	shf.r.wrap.b32 	%r12928, %r12927, %r12926, 28;
	shf.r.wrap.b32 	%r12929, %r12926, %r12927, 28;
	mov.b64 	%rd18114, {%r12929, %r12928};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12930}, %rd18085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12931,%dummy}, %rd18085;
	}
	shf.l.wrap.b32 	%r12932, %r12931, %r12930, 10;
	shf.l.wrap.b32 	%r12933, %r12930, %r12931, 10;
	mov.b64 	%rd18115, {%r12933, %r12932};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12934}, %rd18091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12935,%dummy}, %rd18091;
	}
	shf.l.wrap.b32 	%r12936, %r12935, %r12934, 15;
	shf.l.wrap.b32 	%r12937, %r12934, %r12935, 15;
	mov.b64 	%rd18116, {%r12937, %r12936};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12938,%dummy}, %rd18097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12939}, %rd18097;
	}
	shf.r.wrap.b32 	%r12940, %r12939, %r12938, 8;
	shf.r.wrap.b32 	%r12941, %r12938, %r12939, 8;
	mov.b64 	%rd18117, {%r12941, %r12940};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12942,%dummy}, %rd18076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12943}, %rd18076;
	}
	shf.r.wrap.b32 	%r12944, %r12943, %r12942, 2;
	shf.r.wrap.b32 	%r12945, %r12942, %r12943, 2;
	mov.b64 	%rd18118, {%r12945, %r12944};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12946,%dummy}, %rd18082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12947}, %rd18082;
	}
	shf.r.wrap.b32 	%r12948, %r12947, %r12946, 9;
	shf.r.wrap.b32 	%r12949, %r12946, %r12947, 9;
	mov.b64 	%rd18119, {%r12949, %r12948};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12950,%dummy}, %rd18088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12951}, %rd18088;
	}
	shf.r.wrap.b32 	%r12952, %r12951, %r12950, 25;
	shf.r.wrap.b32 	%r12953, %r12950, %r12951, 25;
	mov.b64 	%rd18120, {%r12953, %r12952};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12954,%dummy}, %rd18089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12955}, %rd18089;
	}
	shf.r.wrap.b32 	%r12956, %r12955, %r12954, 23;
	shf.r.wrap.b32 	%r12957, %r12954, %r12955, 23;
	mov.b64 	%rd18121, {%r12957, %r12956};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12958}, %rd18095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12959,%dummy}, %rd18095;
	}
	shf.l.wrap.b32 	%r12960, %r12959, %r12958, 2;
	shf.l.wrap.b32 	%r12961, %r12958, %r12959, 2;
	mov.b64 	%rd18122, {%r12961, %r12960};
	not.b64 	%rd18123, %rd18099;
	and.b64  	%rd18124, %rd18100, %rd18123;
	xor.b64  	%rd18125, %rd18124, %rd18074;
	not.b64 	%rd18126, %rd18100;
	and.b64  	%rd18127, %rd18101, %rd18126;
	xor.b64  	%rd18128, %rd18127, %rd18099;
	not.b64 	%rd18129, %rd18101;
	and.b64  	%rd18130, %rd18102, %rd18129;
	xor.b64  	%rd18131, %rd18130, %rd18100;
	not.b64 	%rd18132, %rd18102;
	and.b64  	%rd18133, %rd18074, %rd18132;
	xor.b64  	%rd18134, %rd18133, %rd18101;
	not.b64 	%rd18135, %rd18074;
	and.b64  	%rd18136, %rd18099, %rd18135;
	xor.b64  	%rd18137, %rd18136, %rd18102;
	not.b64 	%rd18138, %rd18104;
	and.b64  	%rd18139, %rd18105, %rd18138;
	xor.b64  	%rd18140, %rd18139, %rd18103;
	not.b64 	%rd18141, %rd18105;
	and.b64  	%rd18142, %rd18106, %rd18141;
	xor.b64  	%rd18143, %rd18142, %rd18104;
	not.b64 	%rd18144, %rd18106;
	and.b64  	%rd18145, %rd18107, %rd18144;
	xor.b64  	%rd18146, %rd18145, %rd18105;
	not.b64 	%rd18147, %rd18107;
	and.b64  	%rd18148, %rd18103, %rd18147;
	xor.b64  	%rd18149, %rd18148, %rd18106;
	not.b64 	%rd18150, %rd18103;
	and.b64  	%rd18151, %rd18104, %rd18150;
	xor.b64  	%rd18152, %rd18151, %rd18107;
	not.b64 	%rd18153, %rd18109;
	and.b64  	%rd18154, %rd18110, %rd18153;
	xor.b64  	%rd18155, %rd18154, %rd18108;
	not.b64 	%rd18156, %rd18110;
	and.b64  	%rd18157, %rd18111, %rd18156;
	xor.b64  	%rd18158, %rd18157, %rd18109;
	not.b64 	%rd18159, %rd18111;
	and.b64  	%rd18160, %rd18112, %rd18159;
	xor.b64  	%rd18161, %rd18160, %rd18110;
	not.b64 	%rd18162, %rd18112;
	and.b64  	%rd18163, %rd18108, %rd18162;
	xor.b64  	%rd18164, %rd18163, %rd18111;
	not.b64 	%rd18165, %rd18108;
	and.b64  	%rd18166, %rd18109, %rd18165;
	xor.b64  	%rd18167, %rd18166, %rd18112;
	not.b64 	%rd18168, %rd18114;
	and.b64  	%rd18169, %rd18115, %rd18168;
	xor.b64  	%rd18170, %rd18169, %rd18113;
	not.b64 	%rd18171, %rd18115;
	and.b64  	%rd18172, %rd18116, %rd18171;
	xor.b64  	%rd18173, %rd18172, %rd18114;
	not.b64 	%rd18174, %rd18116;
	and.b64  	%rd18175, %rd18117, %rd18174;
	xor.b64  	%rd18176, %rd18175, %rd18115;
	not.b64 	%rd18177, %rd18117;
	and.b64  	%rd18178, %rd18113, %rd18177;
	xor.b64  	%rd18179, %rd18178, %rd18116;
	not.b64 	%rd18180, %rd18113;
	and.b64  	%rd18181, %rd18114, %rd18180;
	xor.b64  	%rd18182, %rd18181, %rd18117;
	not.b64 	%rd18183, %rd18119;
	and.b64  	%rd18184, %rd18120, %rd18183;
	xor.b64  	%rd18185, %rd18184, %rd18118;
	not.b64 	%rd18186, %rd18120;
	and.b64  	%rd18187, %rd18121, %rd18186;
	xor.b64  	%rd18188, %rd18187, %rd18119;
	not.b64 	%rd18189, %rd18121;
	and.b64  	%rd18190, %rd18122, %rd18189;
	xor.b64  	%rd18191, %rd18190, %rd18120;
	not.b64 	%rd18192, %rd18122;
	and.b64  	%rd18193, %rd18118, %rd18192;
	xor.b64  	%rd18194, %rd18193, %rd18121;
	not.b64 	%rd18195, %rd18118;
	and.b64  	%rd18196, %rd18119, %rd18195;
	xor.b64  	%rd18197, %rd18196, %rd18122;
	xor.b64  	%rd18198, %rd18125, %rd30;
	xor.b64  	%rd18199, %rd18140, %rd18198;
	xor.b64  	%rd18200, %rd18199, %rd18155;
	xor.b64  	%rd18201, %rd18200, %rd18170;
	xor.b64  	%rd18202, %rd18201, %rd18185;
	xor.b64  	%rd18203, %rd18143, %rd18128;
	xor.b64  	%rd18204, %rd18203, %rd18158;
	xor.b64  	%rd18205, %rd18204, %rd18173;
	xor.b64  	%rd18206, %rd18205, %rd18188;
	xor.b64  	%rd18207, %rd18146, %rd18131;
	xor.b64  	%rd18208, %rd18207, %rd18161;
	xor.b64  	%rd18209, %rd18208, %rd18176;
	xor.b64  	%rd18210, %rd18209, %rd18191;
	xor.b64  	%rd18211, %rd18149, %rd18134;
	xor.b64  	%rd18212, %rd18211, %rd18164;
	xor.b64  	%rd18213, %rd18212, %rd18179;
	xor.b64  	%rd18214, %rd18213, %rd18194;
	xor.b64  	%rd18215, %rd18152, %rd18137;
	xor.b64  	%rd18216, %rd18215, %rd18167;
	xor.b64  	%rd18217, %rd18216, %rd18182;
	xor.b64  	%rd18218, %rd18217, %rd18197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12962}, %rd18206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12963,%dummy}, %rd18206;
	}
	shf.l.wrap.b32 	%r12964, %r12963, %r12962, 1;
	shf.l.wrap.b32 	%r12965, %r12962, %r12963, 1;
	mov.b64 	%rd18219, {%r12965, %r12964};
	xor.b64  	%rd18220, %rd18218, %rd18219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12966}, %rd18210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12967,%dummy}, %rd18210;
	}
	shf.l.wrap.b32 	%r12968, %r12967, %r12966, 1;
	shf.l.wrap.b32 	%r12969, %r12966, %r12967, 1;
	mov.b64 	%rd18221, {%r12969, %r12968};
	xor.b64  	%rd18222, %rd18221, %rd18202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12970}, %rd18214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12971,%dummy}, %rd18214;
	}
	shf.l.wrap.b32 	%r12972, %r12971, %r12970, 1;
	shf.l.wrap.b32 	%r12973, %r12970, %r12971, 1;
	mov.b64 	%rd18223, {%r12973, %r12972};
	xor.b64  	%rd18224, %rd18223, %rd18206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12974}, %rd18218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12975,%dummy}, %rd18218;
	}
	shf.l.wrap.b32 	%r12976, %r12975, %r12974, 1;
	shf.l.wrap.b32 	%r12977, %r12974, %r12975, 1;
	mov.b64 	%rd18225, {%r12977, %r12976};
	xor.b64  	%rd18226, %rd18225, %rd18210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12978}, %rd18202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12979,%dummy}, %rd18202;
	}
	shf.l.wrap.b32 	%r12980, %r12979, %r12978, 1;
	shf.l.wrap.b32 	%r12981, %r12978, %r12979, 1;
	mov.b64 	%rd18227, {%r12981, %r12980};
	xor.b64  	%rd18228, %rd18214, %rd18227;
	xor.b64  	%rd18229, %rd18220, %rd18198;
	xor.b64  	%rd18230, %rd18222, %rd18128;
	xor.b64  	%rd18231, %rd18224, %rd18131;
	xor.b64  	%rd18232, %rd18226, %rd18134;
	xor.b64  	%rd18233, %rd18228, %rd18137;
	xor.b64  	%rd18234, %rd18220, %rd18140;
	xor.b64  	%rd18235, %rd18222, %rd18143;
	xor.b64  	%rd18236, %rd18224, %rd18146;
	xor.b64  	%rd18237, %rd18226, %rd18149;
	xor.b64  	%rd18238, %rd18228, %rd18152;
	xor.b64  	%rd18239, %rd18220, %rd18155;
	xor.b64  	%rd18240, %rd18222, %rd18158;
	xor.b64  	%rd18241, %rd18224, %rd18161;
	xor.b64  	%rd18242, %rd18226, %rd18164;
	xor.b64  	%rd18243, %rd18228, %rd18167;
	xor.b64  	%rd18244, %rd18220, %rd18170;
	xor.b64  	%rd18245, %rd18222, %rd18173;
	xor.b64  	%rd18246, %rd18224, %rd18176;
	xor.b64  	%rd18247, %rd18226, %rd18179;
	xor.b64  	%rd18248, %rd18228, %rd18182;
	xor.b64  	%rd18249, %rd18220, %rd18185;
	xor.b64  	%rd18250, %rd18222, %rd18188;
	xor.b64  	%rd18251, %rd18224, %rd18191;
	xor.b64  	%rd18252, %rd18226, %rd18194;
	xor.b64  	%rd18253, %rd18228, %rd18197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12982,%dummy}, %rd18235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12983}, %rd18235;
	}
	shf.r.wrap.b32 	%r12984, %r12983, %r12982, 20;
	shf.r.wrap.b32 	%r12985, %r12982, %r12983, 20;
	mov.b64 	%rd18254, {%r12985, %r12984};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12986,%dummy}, %rd18241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12987}, %rd18241;
	}
	shf.r.wrap.b32 	%r12988, %r12987, %r12986, 21;
	shf.r.wrap.b32 	%r12989, %r12986, %r12987, 21;
	mov.b64 	%rd18255, {%r12989, %r12988};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12990}, %rd18247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12991,%dummy}, %rd18247;
	}
	shf.l.wrap.b32 	%r12992, %r12991, %r12990, 21;
	shf.l.wrap.b32 	%r12993, %r12990, %r12991, 21;
	mov.b64 	%rd18256, {%r12993, %r12992};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12994}, %rd18253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12995,%dummy}, %rd18253;
	}
	shf.l.wrap.b32 	%r12996, %r12995, %r12994, 14;
	shf.l.wrap.b32 	%r12997, %r12994, %r12995, 14;
	mov.b64 	%rd18257, {%r12997, %r12996};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12998}, %rd18232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12999,%dummy}, %rd18232;
	}
	shf.l.wrap.b32 	%r13000, %r12999, %r12998, 28;
	shf.l.wrap.b32 	%r13001, %r12998, %r12999, 28;
	mov.b64 	%rd18258, {%r13001, %r13000};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13002}, %rd18238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13003,%dummy}, %rd18238;
	}
	shf.l.wrap.b32 	%r13004, %r13003, %r13002, 20;
	shf.l.wrap.b32 	%r13005, %r13002, %r13003, 20;
	mov.b64 	%rd18259, {%r13005, %r13004};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13006}, %rd18239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13007,%dummy}, %rd18239;
	}
	shf.l.wrap.b32 	%r13008, %r13007, %r13006, 3;
	shf.l.wrap.b32 	%r13009, %r13006, %r13007, 3;
	mov.b64 	%rd18260, {%r13009, %r13008};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13010,%dummy}, %rd18245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13011}, %rd18245;
	}
	shf.r.wrap.b32 	%r13012, %r13011, %r13010, 19;
	shf.r.wrap.b32 	%r13013, %r13010, %r13011, 19;
	mov.b64 	%rd18261, {%r13013, %r13012};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13014,%dummy}, %rd18251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13015}, %rd18251;
	}
	shf.r.wrap.b32 	%r13016, %r13015, %r13014, 3;
	shf.r.wrap.b32 	%r13017, %r13014, %r13015, 3;
	mov.b64 	%rd18262, {%r13017, %r13016};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13018}, %rd18230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13019,%dummy}, %rd18230;
	}
	shf.l.wrap.b32 	%r13020, %r13019, %r13018, 1;
	shf.l.wrap.b32 	%r13021, %r13018, %r13019, 1;
	mov.b64 	%rd18263, {%r13021, %r13020};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13022}, %rd18236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13023,%dummy}, %rd18236;
	}
	shf.l.wrap.b32 	%r13024, %r13023, %r13022, 6;
	shf.l.wrap.b32 	%r13025, %r13022, %r13023, 6;
	mov.b64 	%rd18264, {%r13025, %r13024};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13026}, %rd18242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13027,%dummy}, %rd18242;
	}
	shf.l.wrap.b32 	%r13028, %r13027, %r13026, 25;
	shf.l.wrap.b32 	%r13029, %r13026, %r13027, 25;
	mov.b64 	%rd18265, {%r13029, %r13028};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13030}, %rd18248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13031,%dummy}, %rd18248;
	}
	shf.l.wrap.b32 	%r13032, %r13031, %r13030, 8;
	shf.l.wrap.b32 	%r13033, %r13030, %r13031, 8;
	mov.b64 	%rd18266, {%r13033, %r13032};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13034}, %rd18249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13035,%dummy}, %rd18249;
	}
	shf.l.wrap.b32 	%r13036, %r13035, %r13034, 18;
	shf.l.wrap.b32 	%r13037, %r13034, %r13035, 18;
	mov.b64 	%rd18267, {%r13037, %r13036};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13038}, %rd18233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13039,%dummy}, %rd18233;
	}
	shf.l.wrap.b32 	%r13040, %r13039, %r13038, 27;
	shf.l.wrap.b32 	%r13041, %r13038, %r13039, 27;
	mov.b64 	%rd18268, {%r13041, %r13040};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13042,%dummy}, %rd18234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13043}, %rd18234;
	}
	shf.r.wrap.b32 	%r13044, %r13043, %r13042, 28;
	shf.r.wrap.b32 	%r13045, %r13042, %r13043, 28;
	mov.b64 	%rd18269, {%r13045, %r13044};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13046}, %rd18240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13047,%dummy}, %rd18240;
	}
	shf.l.wrap.b32 	%r13048, %r13047, %r13046, 10;
	shf.l.wrap.b32 	%r13049, %r13046, %r13047, 10;
	mov.b64 	%rd18270, {%r13049, %r13048};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13050}, %rd18246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13051,%dummy}, %rd18246;
	}
	shf.l.wrap.b32 	%r13052, %r13051, %r13050, 15;
	shf.l.wrap.b32 	%r13053, %r13050, %r13051, 15;
	mov.b64 	%rd18271, {%r13053, %r13052};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13054,%dummy}, %rd18252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13055}, %rd18252;
	}
	shf.r.wrap.b32 	%r13056, %r13055, %r13054, 8;
	shf.r.wrap.b32 	%r13057, %r13054, %r13055, 8;
	mov.b64 	%rd18272, {%r13057, %r13056};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13058,%dummy}, %rd18231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13059}, %rd18231;
	}
	shf.r.wrap.b32 	%r13060, %r13059, %r13058, 2;
	shf.r.wrap.b32 	%r13061, %r13058, %r13059, 2;
	mov.b64 	%rd18273, {%r13061, %r13060};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13062,%dummy}, %rd18237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13063}, %rd18237;
	}
	shf.r.wrap.b32 	%r13064, %r13063, %r13062, 9;
	shf.r.wrap.b32 	%r13065, %r13062, %r13063, 9;
	mov.b64 	%rd18274, {%r13065, %r13064};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13066,%dummy}, %rd18243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13067}, %rd18243;
	}
	shf.r.wrap.b32 	%r13068, %r13067, %r13066, 25;
	shf.r.wrap.b32 	%r13069, %r13066, %r13067, 25;
	mov.b64 	%rd18275, {%r13069, %r13068};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13070,%dummy}, %rd18244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13071}, %rd18244;
	}
	shf.r.wrap.b32 	%r13072, %r13071, %r13070, 23;
	shf.r.wrap.b32 	%r13073, %r13070, %r13071, 23;
	mov.b64 	%rd18276, {%r13073, %r13072};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13074}, %rd18250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13075,%dummy}, %rd18250;
	}
	shf.l.wrap.b32 	%r13076, %r13075, %r13074, 2;
	shf.l.wrap.b32 	%r13077, %r13074, %r13075, 2;
	mov.b64 	%rd18277, {%r13077, %r13076};
	not.b64 	%rd18278, %rd18254;
	and.b64  	%rd18279, %rd18255, %rd18278;
	xor.b64  	%rd18280, %rd18279, %rd18229;
	not.b64 	%rd18281, %rd18255;
	and.b64  	%rd18282, %rd18256, %rd18281;
	xor.b64  	%rd18283, %rd18282, %rd18254;
	not.b64 	%rd18284, %rd18256;
	and.b64  	%rd18285, %rd18257, %rd18284;
	xor.b64  	%rd18286, %rd18285, %rd18255;
	not.b64 	%rd18287, %rd18257;
	and.b64  	%rd18288, %rd18229, %rd18287;
	xor.b64  	%rd18289, %rd18288, %rd18256;
	not.b64 	%rd18290, %rd18229;
	and.b64  	%rd18291, %rd18254, %rd18290;
	xor.b64  	%rd18292, %rd18291, %rd18257;
	not.b64 	%rd18293, %rd18259;
	and.b64  	%rd18294, %rd18260, %rd18293;
	xor.b64  	%rd18295, %rd18294, %rd18258;
	not.b64 	%rd18296, %rd18260;
	and.b64  	%rd18297, %rd18261, %rd18296;
	xor.b64  	%rd18298, %rd18297, %rd18259;
	not.b64 	%rd18299, %rd18261;
	and.b64  	%rd18300, %rd18262, %rd18299;
	xor.b64  	%rd18301, %rd18300, %rd18260;
	not.b64 	%rd18302, %rd18262;
	and.b64  	%rd18303, %rd18258, %rd18302;
	xor.b64  	%rd18304, %rd18303, %rd18261;
	not.b64 	%rd18305, %rd18258;
	and.b64  	%rd18306, %rd18259, %rd18305;
	xor.b64  	%rd18307, %rd18306, %rd18262;
	not.b64 	%rd18308, %rd18264;
	and.b64  	%rd18309, %rd18265, %rd18308;
	xor.b64  	%rd18310, %rd18309, %rd18263;
	not.b64 	%rd18311, %rd18265;
	and.b64  	%rd18312, %rd18266, %rd18311;
	xor.b64  	%rd18313, %rd18312, %rd18264;
	not.b64 	%rd18314, %rd18266;
	and.b64  	%rd18315, %rd18267, %rd18314;
	xor.b64  	%rd18316, %rd18315, %rd18265;
	not.b64 	%rd18317, %rd18267;
	and.b64  	%rd18318, %rd18263, %rd18317;
	xor.b64  	%rd18319, %rd18318, %rd18266;
	not.b64 	%rd18320, %rd18263;
	and.b64  	%rd18321, %rd18264, %rd18320;
	xor.b64  	%rd18322, %rd18321, %rd18267;
	not.b64 	%rd18323, %rd18269;
	and.b64  	%rd18324, %rd18270, %rd18323;
	xor.b64  	%rd18325, %rd18324, %rd18268;
	not.b64 	%rd18326, %rd18270;
	and.b64  	%rd18327, %rd18271, %rd18326;
	xor.b64  	%rd18328, %rd18327, %rd18269;
	not.b64 	%rd18329, %rd18271;
	and.b64  	%rd18330, %rd18272, %rd18329;
	xor.b64  	%rd18331, %rd18330, %rd18270;
	not.b64 	%rd18332, %rd18272;
	and.b64  	%rd18333, %rd18268, %rd18332;
	xor.b64  	%rd18334, %rd18333, %rd18271;
	not.b64 	%rd18335, %rd18268;
	and.b64  	%rd18336, %rd18269, %rd18335;
	xor.b64  	%rd18337, %rd18336, %rd18272;
	not.b64 	%rd18338, %rd18274;
	and.b64  	%rd18339, %rd18275, %rd18338;
	xor.b64  	%rd18340, %rd18339, %rd18273;
	not.b64 	%rd18341, %rd18275;
	and.b64  	%rd18342, %rd18276, %rd18341;
	xor.b64  	%rd18343, %rd18342, %rd18274;
	not.b64 	%rd18344, %rd18276;
	and.b64  	%rd18345, %rd18277, %rd18344;
	xor.b64  	%rd18346, %rd18345, %rd18275;
	not.b64 	%rd18347, %rd18277;
	and.b64  	%rd18348, %rd18273, %rd18347;
	xor.b64  	%rd18349, %rd18348, %rd18276;
	not.b64 	%rd18350, %rd18273;
	and.b64  	%rd18351, %rd18274, %rd18350;
	xor.b64  	%rd18352, %rd18351, %rd18277;
	xor.b64  	%rd18353, %rd18280, %rd31;
	xor.b64  	%rd18354, %rd18295, %rd18353;
	xor.b64  	%rd18355, %rd18354, %rd18310;
	xor.b64  	%rd18356, %rd18355, %rd18325;
	xor.b64  	%rd18357, %rd18356, %rd18340;
	xor.b64  	%rd18358, %rd18298, %rd18283;
	xor.b64  	%rd18359, %rd18358, %rd18313;
	xor.b64  	%rd18360, %rd18359, %rd18328;
	xor.b64  	%rd18361, %rd18360, %rd18343;
	xor.b64  	%rd18362, %rd18301, %rd18286;
	xor.b64  	%rd18363, %rd18362, %rd18316;
	xor.b64  	%rd18364, %rd18363, %rd18331;
	xor.b64  	%rd18365, %rd18364, %rd18346;
	xor.b64  	%rd18366, %rd18304, %rd18289;
	xor.b64  	%rd18367, %rd18366, %rd18319;
	xor.b64  	%rd18368, %rd18367, %rd18334;
	xor.b64  	%rd18369, %rd18368, %rd18349;
	xor.b64  	%rd18370, %rd18307, %rd18292;
	xor.b64  	%rd18371, %rd18370, %rd18322;
	xor.b64  	%rd18372, %rd18371, %rd18337;
	xor.b64  	%rd18373, %rd18372, %rd18352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13078}, %rd18361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13079,%dummy}, %rd18361;
	}
	shf.l.wrap.b32 	%r13080, %r13079, %r13078, 1;
	shf.l.wrap.b32 	%r13081, %r13078, %r13079, 1;
	mov.b64 	%rd18374, {%r13081, %r13080};
	xor.b64  	%rd18375, %rd18373, %rd18374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13082}, %rd18365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13083,%dummy}, %rd18365;
	}
	shf.l.wrap.b32 	%r13084, %r13083, %r13082, 1;
	shf.l.wrap.b32 	%r13085, %r13082, %r13083, 1;
	mov.b64 	%rd18376, {%r13085, %r13084};
	xor.b64  	%rd18377, %rd18376, %rd18357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13086}, %rd18369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13087,%dummy}, %rd18369;
	}
	shf.l.wrap.b32 	%r13088, %r13087, %r13086, 1;
	shf.l.wrap.b32 	%r13089, %r13086, %r13087, 1;
	mov.b64 	%rd18378, {%r13089, %r13088};
	xor.b64  	%rd18379, %rd18378, %rd18361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13090}, %rd18373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13091,%dummy}, %rd18373;
	}
	shf.l.wrap.b32 	%r13092, %r13091, %r13090, 1;
	shf.l.wrap.b32 	%r13093, %r13090, %r13091, 1;
	mov.b64 	%rd18380, {%r13093, %r13092};
	xor.b64  	%rd18381, %rd18380, %rd18365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13094}, %rd18357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13095,%dummy}, %rd18357;
	}
	shf.l.wrap.b32 	%r13096, %r13095, %r13094, 1;
	shf.l.wrap.b32 	%r13097, %r13094, %r13095, 1;
	mov.b64 	%rd18382, {%r13097, %r13096};
	xor.b64  	%rd18383, %rd18369, %rd18382;
	xor.b64  	%rd18384, %rd18375, %rd18353;
	xor.b64  	%rd18385, %rd18377, %rd18283;
	xor.b64  	%rd18386, %rd18379, %rd18286;
	xor.b64  	%rd18387, %rd18381, %rd18289;
	xor.b64  	%rd18388, %rd18383, %rd18292;
	xor.b64  	%rd18389, %rd18375, %rd18295;
	xor.b64  	%rd18390, %rd18377, %rd18298;
	xor.b64  	%rd18391, %rd18379, %rd18301;
	xor.b64  	%rd18392, %rd18381, %rd18304;
	xor.b64  	%rd18393, %rd18383, %rd18307;
	xor.b64  	%rd18394, %rd18375, %rd18310;
	xor.b64  	%rd18395, %rd18377, %rd18313;
	xor.b64  	%rd18396, %rd18379, %rd18316;
	xor.b64  	%rd18397, %rd18381, %rd18319;
	xor.b64  	%rd18398, %rd18383, %rd18322;
	xor.b64  	%rd18399, %rd18375, %rd18325;
	xor.b64  	%rd18400, %rd18377, %rd18328;
	xor.b64  	%rd18401, %rd18379, %rd18331;
	xor.b64  	%rd18402, %rd18381, %rd18334;
	xor.b64  	%rd18403, %rd18383, %rd18337;
	xor.b64  	%rd18404, %rd18375, %rd18340;
	xor.b64  	%rd18405, %rd18377, %rd18343;
	xor.b64  	%rd18406, %rd18379, %rd18346;
	xor.b64  	%rd18407, %rd18381, %rd18349;
	xor.b64  	%rd18408, %rd18383, %rd18352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13098,%dummy}, %rd18390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13099}, %rd18390;
	}
	shf.r.wrap.b32 	%r13100, %r13099, %r13098, 20;
	shf.r.wrap.b32 	%r13101, %r13098, %r13099, 20;
	mov.b64 	%rd18409, {%r13101, %r13100};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13102,%dummy}, %rd18396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13103}, %rd18396;
	}
	shf.r.wrap.b32 	%r13104, %r13103, %r13102, 21;
	shf.r.wrap.b32 	%r13105, %r13102, %r13103, 21;
	mov.b64 	%rd18410, {%r13105, %r13104};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13106}, %rd18402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13107,%dummy}, %rd18402;
	}
	shf.l.wrap.b32 	%r13108, %r13107, %r13106, 21;
	shf.l.wrap.b32 	%r13109, %r13106, %r13107, 21;
	mov.b64 	%rd18411, {%r13109, %r13108};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13110}, %rd18408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13111,%dummy}, %rd18408;
	}
	shf.l.wrap.b32 	%r13112, %r13111, %r13110, 14;
	shf.l.wrap.b32 	%r13113, %r13110, %r13111, 14;
	mov.b64 	%rd18412, {%r13113, %r13112};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13114}, %rd18387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13115,%dummy}, %rd18387;
	}
	shf.l.wrap.b32 	%r13116, %r13115, %r13114, 28;
	shf.l.wrap.b32 	%r13117, %r13114, %r13115, 28;
	mov.b64 	%rd18413, {%r13117, %r13116};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13118}, %rd18393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13119,%dummy}, %rd18393;
	}
	shf.l.wrap.b32 	%r13120, %r13119, %r13118, 20;
	shf.l.wrap.b32 	%r13121, %r13118, %r13119, 20;
	mov.b64 	%rd18414, {%r13121, %r13120};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13122}, %rd18394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13123,%dummy}, %rd18394;
	}
	shf.l.wrap.b32 	%r13124, %r13123, %r13122, 3;
	shf.l.wrap.b32 	%r13125, %r13122, %r13123, 3;
	mov.b64 	%rd18415, {%r13125, %r13124};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13126,%dummy}, %rd18400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13127}, %rd18400;
	}
	shf.r.wrap.b32 	%r13128, %r13127, %r13126, 19;
	shf.r.wrap.b32 	%r13129, %r13126, %r13127, 19;
	mov.b64 	%rd18416, {%r13129, %r13128};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13130,%dummy}, %rd18406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13131}, %rd18406;
	}
	shf.r.wrap.b32 	%r13132, %r13131, %r13130, 3;
	shf.r.wrap.b32 	%r13133, %r13130, %r13131, 3;
	mov.b64 	%rd18417, {%r13133, %r13132};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13134}, %rd18385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13135,%dummy}, %rd18385;
	}
	shf.l.wrap.b32 	%r13136, %r13135, %r13134, 1;
	shf.l.wrap.b32 	%r13137, %r13134, %r13135, 1;
	mov.b64 	%rd18418, {%r13137, %r13136};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13138}, %rd18391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13139,%dummy}, %rd18391;
	}
	shf.l.wrap.b32 	%r13140, %r13139, %r13138, 6;
	shf.l.wrap.b32 	%r13141, %r13138, %r13139, 6;
	mov.b64 	%rd18419, {%r13141, %r13140};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13142}, %rd18397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13143,%dummy}, %rd18397;
	}
	shf.l.wrap.b32 	%r13144, %r13143, %r13142, 25;
	shf.l.wrap.b32 	%r13145, %r13142, %r13143, 25;
	mov.b64 	%rd18420, {%r13145, %r13144};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13146}, %rd18403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13147,%dummy}, %rd18403;
	}
	shf.l.wrap.b32 	%r13148, %r13147, %r13146, 8;
	shf.l.wrap.b32 	%r13149, %r13146, %r13147, 8;
	mov.b64 	%rd18421, {%r13149, %r13148};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13150}, %rd18404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13151,%dummy}, %rd18404;
	}
	shf.l.wrap.b32 	%r13152, %r13151, %r13150, 18;
	shf.l.wrap.b32 	%r13153, %r13150, %r13151, 18;
	mov.b64 	%rd18422, {%r13153, %r13152};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13154}, %rd18388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13155,%dummy}, %rd18388;
	}
	shf.l.wrap.b32 	%r13156, %r13155, %r13154, 27;
	shf.l.wrap.b32 	%r13157, %r13154, %r13155, 27;
	mov.b64 	%rd18423, {%r13157, %r13156};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13158,%dummy}, %rd18389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13159}, %rd18389;
	}
	shf.r.wrap.b32 	%r13160, %r13159, %r13158, 28;
	shf.r.wrap.b32 	%r13161, %r13158, %r13159, 28;
	mov.b64 	%rd18424, {%r13161, %r13160};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13162}, %rd18395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13163,%dummy}, %rd18395;
	}
	shf.l.wrap.b32 	%r13164, %r13163, %r13162, 10;
	shf.l.wrap.b32 	%r13165, %r13162, %r13163, 10;
	mov.b64 	%rd18425, {%r13165, %r13164};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13166}, %rd18401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13167,%dummy}, %rd18401;
	}
	shf.l.wrap.b32 	%r13168, %r13167, %r13166, 15;
	shf.l.wrap.b32 	%r13169, %r13166, %r13167, 15;
	mov.b64 	%rd18426, {%r13169, %r13168};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13170,%dummy}, %rd18407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13171}, %rd18407;
	}
	shf.r.wrap.b32 	%r13172, %r13171, %r13170, 8;
	shf.r.wrap.b32 	%r13173, %r13170, %r13171, 8;
	mov.b64 	%rd18427, {%r13173, %r13172};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13174,%dummy}, %rd18386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13175}, %rd18386;
	}
	shf.r.wrap.b32 	%r13176, %r13175, %r13174, 2;
	shf.r.wrap.b32 	%r13177, %r13174, %r13175, 2;
	mov.b64 	%rd18428, {%r13177, %r13176};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13178,%dummy}, %rd18392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13179}, %rd18392;
	}
	shf.r.wrap.b32 	%r13180, %r13179, %r13178, 9;
	shf.r.wrap.b32 	%r13181, %r13178, %r13179, 9;
	mov.b64 	%rd18429, {%r13181, %r13180};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13182,%dummy}, %rd18398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13183}, %rd18398;
	}
	shf.r.wrap.b32 	%r13184, %r13183, %r13182, 25;
	shf.r.wrap.b32 	%r13185, %r13182, %r13183, 25;
	mov.b64 	%rd18430, {%r13185, %r13184};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13186,%dummy}, %rd18399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13187}, %rd18399;
	}
	shf.r.wrap.b32 	%r13188, %r13187, %r13186, 23;
	shf.r.wrap.b32 	%r13189, %r13186, %r13187, 23;
	mov.b64 	%rd18431, {%r13189, %r13188};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13190}, %rd18405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13191,%dummy}, %rd18405;
	}
	shf.l.wrap.b32 	%r13192, %r13191, %r13190, 2;
	shf.l.wrap.b32 	%r13193, %r13190, %r13191, 2;
	mov.b64 	%rd18432, {%r13193, %r13192};
	not.b64 	%rd18433, %rd18409;
	and.b64  	%rd18434, %rd18410, %rd18433;
	xor.b64  	%rd18435, %rd18434, %rd18384;
	not.b64 	%rd18436, %rd18410;
	and.b64  	%rd18437, %rd18411, %rd18436;
	xor.b64  	%rd18438, %rd18437, %rd18409;
	not.b64 	%rd18439, %rd18411;
	and.b64  	%rd18440, %rd18412, %rd18439;
	xor.b64  	%rd18441, %rd18440, %rd18410;
	not.b64 	%rd18442, %rd18412;
	and.b64  	%rd18443, %rd18384, %rd18442;
	xor.b64  	%rd18444, %rd18443, %rd18411;
	not.b64 	%rd18445, %rd18384;
	and.b64  	%rd18446, %rd18409, %rd18445;
	xor.b64  	%rd18447, %rd18446, %rd18412;
	not.b64 	%rd18448, %rd18414;
	and.b64  	%rd18449, %rd18415, %rd18448;
	xor.b64  	%rd18450, %rd18449, %rd18413;
	not.b64 	%rd18451, %rd18415;
	and.b64  	%rd18452, %rd18416, %rd18451;
	xor.b64  	%rd18453, %rd18452, %rd18414;
	not.b64 	%rd18454, %rd18416;
	and.b64  	%rd18455, %rd18417, %rd18454;
	xor.b64  	%rd18456, %rd18455, %rd18415;
	not.b64 	%rd18457, %rd18417;
	and.b64  	%rd18458, %rd18413, %rd18457;
	xor.b64  	%rd18459, %rd18458, %rd18416;
	not.b64 	%rd18460, %rd18413;
	and.b64  	%rd18461, %rd18414, %rd18460;
	xor.b64  	%rd18462, %rd18461, %rd18417;
	not.b64 	%rd18463, %rd18419;
	and.b64  	%rd18464, %rd18420, %rd18463;
	xor.b64  	%rd18465, %rd18464, %rd18418;
	not.b64 	%rd18466, %rd18420;
	and.b64  	%rd18467, %rd18421, %rd18466;
	xor.b64  	%rd18468, %rd18467, %rd18419;
	not.b64 	%rd18469, %rd18421;
	and.b64  	%rd18470, %rd18422, %rd18469;
	xor.b64  	%rd18471, %rd18470, %rd18420;
	not.b64 	%rd18472, %rd18422;
	and.b64  	%rd18473, %rd18418, %rd18472;
	xor.b64  	%rd18474, %rd18473, %rd18421;
	not.b64 	%rd18475, %rd18418;
	and.b64  	%rd18476, %rd18419, %rd18475;
	xor.b64  	%rd18477, %rd18476, %rd18422;
	not.b64 	%rd18478, %rd18424;
	and.b64  	%rd18479, %rd18425, %rd18478;
	xor.b64  	%rd18480, %rd18479, %rd18423;
	not.b64 	%rd18481, %rd18425;
	and.b64  	%rd18482, %rd18426, %rd18481;
	xor.b64  	%rd18483, %rd18482, %rd18424;
	not.b64 	%rd18484, %rd18426;
	and.b64  	%rd18485, %rd18427, %rd18484;
	xor.b64  	%rd18486, %rd18485, %rd18425;
	not.b64 	%rd18487, %rd18427;
	and.b64  	%rd18488, %rd18423, %rd18487;
	xor.b64  	%rd18489, %rd18488, %rd18426;
	not.b64 	%rd18490, %rd18423;
	and.b64  	%rd18491, %rd18424, %rd18490;
	xor.b64  	%rd18492, %rd18491, %rd18427;
	not.b64 	%rd18493, %rd18429;
	and.b64  	%rd18494, %rd18430, %rd18493;
	xor.b64  	%rd18495, %rd18494, %rd18428;
	not.b64 	%rd18496, %rd18430;
	and.b64  	%rd18497, %rd18431, %rd18496;
	xor.b64  	%rd18498, %rd18497, %rd18429;
	not.b64 	%rd18499, %rd18431;
	and.b64  	%rd18500, %rd18432, %rd18499;
	xor.b64  	%rd18501, %rd18500, %rd18430;
	not.b64 	%rd18502, %rd18432;
	and.b64  	%rd18503, %rd18428, %rd18502;
	xor.b64  	%rd18504, %rd18503, %rd18431;
	not.b64 	%rd18505, %rd18428;
	and.b64  	%rd18506, %rd18429, %rd18505;
	xor.b64  	%rd18507, %rd18506, %rd18432;
	xor.b64  	%rd18508, %rd18435, %rd32;
	xor.b64  	%rd18509, %rd18450, %rd18508;
	xor.b64  	%rd18510, %rd18509, %rd18465;
	xor.b64  	%rd18511, %rd18510, %rd18480;
	xor.b64  	%rd18512, %rd18511, %rd18495;
	xor.b64  	%rd18513, %rd18453, %rd18438;
	xor.b64  	%rd18514, %rd18513, %rd18468;
	xor.b64  	%rd18515, %rd18514, %rd18483;
	xor.b64  	%rd18516, %rd18515, %rd18498;
	xor.b64  	%rd18517, %rd18456, %rd18441;
	xor.b64  	%rd18518, %rd18517, %rd18471;
	xor.b64  	%rd18519, %rd18518, %rd18486;
	xor.b64  	%rd18520, %rd18519, %rd18501;
	xor.b64  	%rd18521, %rd18459, %rd18444;
	xor.b64  	%rd18522, %rd18521, %rd18474;
	xor.b64  	%rd18523, %rd18522, %rd18489;
	xor.b64  	%rd18524, %rd18523, %rd18504;
	xor.b64  	%rd18525, %rd18462, %rd18447;
	xor.b64  	%rd18526, %rd18525, %rd18477;
	xor.b64  	%rd18527, %rd18526, %rd18492;
	xor.b64  	%rd18528, %rd18527, %rd18507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13194}, %rd18516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13195,%dummy}, %rd18516;
	}
	shf.l.wrap.b32 	%r13196, %r13195, %r13194, 1;
	shf.l.wrap.b32 	%r13197, %r13194, %r13195, 1;
	mov.b64 	%rd18529, {%r13197, %r13196};
	xor.b64  	%rd18530, %rd18528, %rd18529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13198}, %rd18520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13199,%dummy}, %rd18520;
	}
	shf.l.wrap.b32 	%r13200, %r13199, %r13198, 1;
	shf.l.wrap.b32 	%r13201, %r13198, %r13199, 1;
	mov.b64 	%rd18531, {%r13201, %r13200};
	xor.b64  	%rd18532, %rd18531, %rd18512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13202}, %rd18524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13203,%dummy}, %rd18524;
	}
	shf.l.wrap.b32 	%r13204, %r13203, %r13202, 1;
	shf.l.wrap.b32 	%r13205, %r13202, %r13203, 1;
	mov.b64 	%rd18533, {%r13205, %r13204};
	xor.b64  	%rd18534, %rd18533, %rd18516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13206}, %rd18528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13207,%dummy}, %rd18528;
	}
	shf.l.wrap.b32 	%r13208, %r13207, %r13206, 1;
	shf.l.wrap.b32 	%r13209, %r13206, %r13207, 1;
	mov.b64 	%rd18535, {%r13209, %r13208};
	xor.b64  	%rd18536, %rd18535, %rd18520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13210}, %rd18512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13211,%dummy}, %rd18512;
	}
	shf.l.wrap.b32 	%r13212, %r13211, %r13210, 1;
	shf.l.wrap.b32 	%r13213, %r13210, %r13211, 1;
	mov.b64 	%rd18537, {%r13213, %r13212};
	xor.b64  	%rd18538, %rd18524, %rd18537;
	xor.b64  	%rd18539, %rd18530, %rd18508;
	xor.b64  	%rd18540, %rd18532, %rd18438;
	xor.b64  	%rd18541, %rd18534, %rd18441;
	xor.b64  	%rd18542, %rd18536, %rd18444;
	xor.b64  	%rd18543, %rd18538, %rd18447;
	xor.b64  	%rd18544, %rd18530, %rd18450;
	xor.b64  	%rd18545, %rd18532, %rd18453;
	xor.b64  	%rd18546, %rd18534, %rd18456;
	xor.b64  	%rd18547, %rd18536, %rd18459;
	xor.b64  	%rd18548, %rd18538, %rd18462;
	xor.b64  	%rd18549, %rd18530, %rd18465;
	xor.b64  	%rd18550, %rd18532, %rd18468;
	xor.b64  	%rd18551, %rd18534, %rd18471;
	xor.b64  	%rd18552, %rd18536, %rd18474;
	xor.b64  	%rd18553, %rd18538, %rd18477;
	xor.b64  	%rd18554, %rd18530, %rd18480;
	xor.b64  	%rd18555, %rd18532, %rd18483;
	xor.b64  	%rd18556, %rd18534, %rd18486;
	xor.b64  	%rd18557, %rd18536, %rd18489;
	xor.b64  	%rd18558, %rd18538, %rd18492;
	xor.b64  	%rd18559, %rd18530, %rd18495;
	xor.b64  	%rd18560, %rd18532, %rd18498;
	xor.b64  	%rd18561, %rd18534, %rd18501;
	xor.b64  	%rd18562, %rd18536, %rd18504;
	xor.b64  	%rd18563, %rd18538, %rd18507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13214,%dummy}, %rd18545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13215}, %rd18545;
	}
	shf.r.wrap.b32 	%r13216, %r13215, %r13214, 20;
	shf.r.wrap.b32 	%r13217, %r13214, %r13215, 20;
	mov.b64 	%rd18564, {%r13217, %r13216};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13218,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13219}, %rd18551;
	}
	shf.r.wrap.b32 	%r13220, %r13219, %r13218, 21;
	shf.r.wrap.b32 	%r13221, %r13218, %r13219, 21;
	mov.b64 	%rd18565, {%r13221, %r13220};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13222}, %rd18557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13223,%dummy}, %rd18557;
	}
	shf.l.wrap.b32 	%r13224, %r13223, %r13222, 21;
	shf.l.wrap.b32 	%r13225, %r13222, %r13223, 21;
	mov.b64 	%rd18566, {%r13225, %r13224};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13226}, %rd18563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13227,%dummy}, %rd18563;
	}
	shf.l.wrap.b32 	%r13228, %r13227, %r13226, 14;
	shf.l.wrap.b32 	%r13229, %r13226, %r13227, 14;
	mov.b64 	%rd18567, {%r13229, %r13228};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13230}, %rd18542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13231,%dummy}, %rd18542;
	}
	shf.l.wrap.b32 	%r13232, %r13231, %r13230, 28;
	shf.l.wrap.b32 	%r13233, %r13230, %r13231, 28;
	mov.b64 	%rd18568, {%r13233, %r13232};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13234}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13235,%dummy}, %rd18548;
	}
	shf.l.wrap.b32 	%r13236, %r13235, %r13234, 20;
	shf.l.wrap.b32 	%r13237, %r13234, %r13235, 20;
	mov.b64 	%rd18569, {%r13237, %r13236};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13238}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13239,%dummy}, %rd18549;
	}
	shf.l.wrap.b32 	%r13240, %r13239, %r13238, 3;
	shf.l.wrap.b32 	%r13241, %r13238, %r13239, 3;
	mov.b64 	%rd18570, {%r13241, %r13240};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13242,%dummy}, %rd18555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13243}, %rd18555;
	}
	shf.r.wrap.b32 	%r13244, %r13243, %r13242, 19;
	shf.r.wrap.b32 	%r13245, %r13242, %r13243, 19;
	mov.b64 	%rd18571, {%r13245, %r13244};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13246,%dummy}, %rd18561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13247}, %rd18561;
	}
	shf.r.wrap.b32 	%r13248, %r13247, %r13246, 3;
	shf.r.wrap.b32 	%r13249, %r13246, %r13247, 3;
	mov.b64 	%rd18572, {%r13249, %r13248};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13250}, %rd18540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13251,%dummy}, %rd18540;
	}
	shf.l.wrap.b32 	%r13252, %r13251, %r13250, 1;
	shf.l.wrap.b32 	%r13253, %r13250, %r13251, 1;
	mov.b64 	%rd18573, {%r13253, %r13252};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13254}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13255,%dummy}, %rd18546;
	}
	shf.l.wrap.b32 	%r13256, %r13255, %r13254, 6;
	shf.l.wrap.b32 	%r13257, %r13254, %r13255, 6;
	mov.b64 	%rd18574, {%r13257, %r13256};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13258}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13259,%dummy}, %rd18552;
	}
	shf.l.wrap.b32 	%r13260, %r13259, %r13258, 25;
	shf.l.wrap.b32 	%r13261, %r13258, %r13259, 25;
	mov.b64 	%rd18575, {%r13261, %r13260};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13262}, %rd18558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13263,%dummy}, %rd18558;
	}
	shf.l.wrap.b32 	%r13264, %r13263, %r13262, 8;
	shf.l.wrap.b32 	%r13265, %r13262, %r13263, 8;
	mov.b64 	%rd18576, {%r13265, %r13264};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13266}, %rd18559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13267,%dummy}, %rd18559;
	}
	shf.l.wrap.b32 	%r13268, %r13267, %r13266, 18;
	shf.l.wrap.b32 	%r13269, %r13266, %r13267, 18;
	mov.b64 	%rd18577, {%r13269, %r13268};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13270}, %rd18543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13271,%dummy}, %rd18543;
	}
	shf.l.wrap.b32 	%r13272, %r13271, %r13270, 27;
	shf.l.wrap.b32 	%r13273, %r13270, %r13271, 27;
	mov.b64 	%rd18578, {%r13273, %r13272};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13274,%dummy}, %rd18544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13275}, %rd18544;
	}
	shf.r.wrap.b32 	%r13276, %r13275, %r13274, 28;
	shf.r.wrap.b32 	%r13277, %r13274, %r13275, 28;
	mov.b64 	%rd18579, {%r13277, %r13276};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13278}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13279,%dummy}, %rd18550;
	}
	shf.l.wrap.b32 	%r13280, %r13279, %r13278, 10;
	shf.l.wrap.b32 	%r13281, %r13278, %r13279, 10;
	mov.b64 	%rd18580, {%r13281, %r13280};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13282}, %rd18556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13283,%dummy}, %rd18556;
	}
	shf.l.wrap.b32 	%r13284, %r13283, %r13282, 15;
	shf.l.wrap.b32 	%r13285, %r13282, %r13283, 15;
	mov.b64 	%rd18581, {%r13285, %r13284};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13286,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13287}, %rd18562;
	}
	shf.r.wrap.b32 	%r13288, %r13287, %r13286, 8;
	shf.r.wrap.b32 	%r13289, %r13286, %r13287, 8;
	mov.b64 	%rd18582, {%r13289, %r13288};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13290,%dummy}, %rd18541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13291}, %rd18541;
	}
	shf.r.wrap.b32 	%r13292, %r13291, %r13290, 2;
	shf.r.wrap.b32 	%r13293, %r13290, %r13291, 2;
	mov.b64 	%rd18583, {%r13293, %r13292};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13294,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13295}, %rd18547;
	}
	shf.r.wrap.b32 	%r13296, %r13295, %r13294, 9;
	shf.r.wrap.b32 	%r13297, %r13294, %r13295, 9;
	mov.b64 	%rd18584, {%r13297, %r13296};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13298,%dummy}, %rd18553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13299}, %rd18553;
	}
	shf.r.wrap.b32 	%r13300, %r13299, %r13298, 25;
	shf.r.wrap.b32 	%r13301, %r13298, %r13299, 25;
	mov.b64 	%rd18585, {%r13301, %r13300};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13302,%dummy}, %rd18554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13303}, %rd18554;
	}
	shf.r.wrap.b32 	%r13304, %r13303, %r13302, 23;
	shf.r.wrap.b32 	%r13305, %r13302, %r13303, 23;
	mov.b64 	%rd18586, {%r13305, %r13304};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13306}, %rd18560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13307,%dummy}, %rd18560;
	}
	shf.l.wrap.b32 	%r13308, %r13307, %r13306, 2;
	shf.l.wrap.b32 	%r13309, %r13306, %r13307, 2;
	mov.b64 	%rd18587, {%r13309, %r13308};
	not.b64 	%rd18588, %rd18564;
	and.b64  	%rd18589, %rd18565, %rd18588;
	xor.b64  	%rd18590, %rd18589, %rd18539;
	not.b64 	%rd18591, %rd18565;
	and.b64  	%rd18592, %rd18566, %rd18591;
	xor.b64  	%rd18593, %rd18592, %rd18564;
	not.b64 	%rd18594, %rd18566;
	and.b64  	%rd18595, %rd18567, %rd18594;
	xor.b64  	%rd18596, %rd18595, %rd18565;
	not.b64 	%rd18597, %rd18567;
	and.b64  	%rd18598, %rd18539, %rd18597;
	xor.b64  	%rd18599, %rd18598, %rd18566;
	not.b64 	%rd18600, %rd18539;
	and.b64  	%rd18601, %rd18564, %rd18600;
	xor.b64  	%rd18602, %rd18601, %rd18567;
	not.b64 	%rd18603, %rd18569;
	and.b64  	%rd18604, %rd18570, %rd18603;
	xor.b64  	%rd18605, %rd18604, %rd18568;
	not.b64 	%rd18606, %rd18570;
	and.b64  	%rd18607, %rd18571, %rd18606;
	xor.b64  	%rd18608, %rd18607, %rd18569;
	not.b64 	%rd18609, %rd18571;
	and.b64  	%rd18610, %rd18572, %rd18609;
	xor.b64  	%rd18611, %rd18610, %rd18570;
	not.b64 	%rd18612, %rd18572;
	and.b64  	%rd18613, %rd18568, %rd18612;
	xor.b64  	%rd18614, %rd18613, %rd18571;
	not.b64 	%rd18615, %rd18568;
	and.b64  	%rd18616, %rd18569, %rd18615;
	xor.b64  	%rd18617, %rd18616, %rd18572;
	not.b64 	%rd18618, %rd18574;
	and.b64  	%rd18619, %rd18575, %rd18618;
	xor.b64  	%rd18620, %rd18619, %rd18573;
	not.b64 	%rd18621, %rd18575;
	and.b64  	%rd18622, %rd18576, %rd18621;
	xor.b64  	%rd18623, %rd18622, %rd18574;
	not.b64 	%rd18624, %rd18576;
	and.b64  	%rd18625, %rd18577, %rd18624;
	xor.b64  	%rd18626, %rd18625, %rd18575;
	not.b64 	%rd18627, %rd18577;
	and.b64  	%rd18628, %rd18573, %rd18627;
	xor.b64  	%rd18629, %rd18628, %rd18576;
	not.b64 	%rd18630, %rd18573;
	and.b64  	%rd18631, %rd18574, %rd18630;
	xor.b64  	%rd18632, %rd18631, %rd18577;
	not.b64 	%rd18633, %rd18579;
	and.b64  	%rd18634, %rd18580, %rd18633;
	xor.b64  	%rd18635, %rd18634, %rd18578;
	not.b64 	%rd18636, %rd18580;
	and.b64  	%rd18637, %rd18581, %rd18636;
	xor.b64  	%rd18638, %rd18637, %rd18579;
	not.b64 	%rd18639, %rd18581;
	and.b64  	%rd18640, %rd18582, %rd18639;
	xor.b64  	%rd18641, %rd18640, %rd18580;
	not.b64 	%rd18642, %rd18582;
	and.b64  	%rd18643, %rd18578, %rd18642;
	xor.b64  	%rd18644, %rd18643, %rd18581;
	not.b64 	%rd18645, %rd18578;
	and.b64  	%rd18646, %rd18579, %rd18645;
	xor.b64  	%rd18647, %rd18646, %rd18582;
	not.b64 	%rd18648, %rd18584;
	and.b64  	%rd18649, %rd18585, %rd18648;
	xor.b64  	%rd18650, %rd18649, %rd18583;
	not.b64 	%rd18651, %rd18585;
	and.b64  	%rd18652, %rd18586, %rd18651;
	xor.b64  	%rd18653, %rd18652, %rd18584;
	not.b64 	%rd18654, %rd18586;
	and.b64  	%rd18655, %rd18587, %rd18654;
	xor.b64  	%rd18656, %rd18655, %rd18585;
	not.b64 	%rd18657, %rd18587;
	and.b64  	%rd18658, %rd18583, %rd18657;
	xor.b64  	%rd18659, %rd18658, %rd18586;
	not.b64 	%rd18660, %rd18583;
	and.b64  	%rd18661, %rd18584, %rd18660;
	xor.b64  	%rd18662, %rd18661, %rd18587;
	xor.b64  	%rd18663, %rd18590, %rd33;
	xor.b64  	%rd18664, %rd18605, %rd18663;
	xor.b64  	%rd18665, %rd18664, %rd18620;
	xor.b64  	%rd18666, %rd18665, %rd18635;
	xor.b64  	%rd18667, %rd18666, %rd18650;
	xor.b64  	%rd18668, %rd18608, %rd18593;
	xor.b64  	%rd18669, %rd18668, %rd18623;
	xor.b64  	%rd18670, %rd18669, %rd18638;
	xor.b64  	%rd18671, %rd18670, %rd18653;
	xor.b64  	%rd18672, %rd18611, %rd18596;
	xor.b64  	%rd18673, %rd18672, %rd18626;
	xor.b64  	%rd18674, %rd18673, %rd18641;
	xor.b64  	%rd18675, %rd18674, %rd18656;
	xor.b64  	%rd18676, %rd18614, %rd18599;
	xor.b64  	%rd18677, %rd18676, %rd18629;
	xor.b64  	%rd18678, %rd18677, %rd18644;
	xor.b64  	%rd18679, %rd18678, %rd18659;
	xor.b64  	%rd18680, %rd18617, %rd18602;
	xor.b64  	%rd18681, %rd18680, %rd18632;
	xor.b64  	%rd18682, %rd18681, %rd18647;
	xor.b64  	%rd18683, %rd18682, %rd18662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13310}, %rd18671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13311,%dummy}, %rd18671;
	}
	shf.l.wrap.b32 	%r13312, %r13311, %r13310, 1;
	shf.l.wrap.b32 	%r13313, %r13310, %r13311, 1;
	mov.b64 	%rd18684, {%r13313, %r13312};
	xor.b64  	%rd18685, %rd18683, %rd18684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13314}, %rd18675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13315,%dummy}, %rd18675;
	}
	shf.l.wrap.b32 	%r13316, %r13315, %r13314, 1;
	shf.l.wrap.b32 	%r13317, %r13314, %r13315, 1;
	mov.b64 	%rd18686, {%r13317, %r13316};
	xor.b64  	%rd18687, %rd18686, %rd18667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13318}, %rd18679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13319,%dummy}, %rd18679;
	}
	shf.l.wrap.b32 	%r13320, %r13319, %r13318, 1;
	shf.l.wrap.b32 	%r13321, %r13318, %r13319, 1;
	mov.b64 	%rd18688, {%r13321, %r13320};
	xor.b64  	%rd18689, %rd18688, %rd18671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13322}, %rd18683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13323,%dummy}, %rd18683;
	}
	shf.l.wrap.b32 	%r13324, %r13323, %r13322, 1;
	shf.l.wrap.b32 	%r13325, %r13322, %r13323, 1;
	mov.b64 	%rd18690, {%r13325, %r13324};
	xor.b64  	%rd18691, %rd18690, %rd18675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13326}, %rd18667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13327,%dummy}, %rd18667;
	}
	shf.l.wrap.b32 	%r13328, %r13327, %r13326, 1;
	shf.l.wrap.b32 	%r13329, %r13326, %r13327, 1;
	mov.b64 	%rd18692, {%r13329, %r13328};
	xor.b64  	%rd18693, %rd18679, %rd18692;
	xor.b64  	%rd18694, %rd18685, %rd18663;
	xor.b64  	%rd18695, %rd18687, %rd18593;
	xor.b64  	%rd18696, %rd18689, %rd18596;
	xor.b64  	%rd18697, %rd18691, %rd18599;
	xor.b64  	%rd18698, %rd18693, %rd18602;
	xor.b64  	%rd18699, %rd18685, %rd18605;
	xor.b64  	%rd18700, %rd18687, %rd18608;
	xor.b64  	%rd18701, %rd18689, %rd18611;
	xor.b64  	%rd18702, %rd18691, %rd18614;
	xor.b64  	%rd18703, %rd18693, %rd18617;
	xor.b64  	%rd18704, %rd18685, %rd18620;
	xor.b64  	%rd18705, %rd18687, %rd18623;
	xor.b64  	%rd18706, %rd18689, %rd18626;
	xor.b64  	%rd18707, %rd18691, %rd18629;
	xor.b64  	%rd18708, %rd18693, %rd18632;
	xor.b64  	%rd18709, %rd18685, %rd18635;
	xor.b64  	%rd18710, %rd18687, %rd18638;
	xor.b64  	%rd18711, %rd18689, %rd18641;
	xor.b64  	%rd18712, %rd18691, %rd18644;
	xor.b64  	%rd18713, %rd18693, %rd18647;
	xor.b64  	%rd18714, %rd18685, %rd18650;
	xor.b64  	%rd18715, %rd18687, %rd18653;
	xor.b64  	%rd18716, %rd18689, %rd18656;
	xor.b64  	%rd18717, %rd18691, %rd18659;
	xor.b64  	%rd18718, %rd18693, %rd18662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13330,%dummy}, %rd18700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13331}, %rd18700;
	}
	shf.r.wrap.b32 	%r13332, %r13331, %r13330, 20;
	shf.r.wrap.b32 	%r13333, %r13330, %r13331, 20;
	mov.b64 	%rd18719, {%r13333, %r13332};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13334,%dummy}, %rd18706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13335}, %rd18706;
	}
	shf.r.wrap.b32 	%r13336, %r13335, %r13334, 21;
	shf.r.wrap.b32 	%r13337, %r13334, %r13335, 21;
	mov.b64 	%rd18720, {%r13337, %r13336};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13338}, %rd18712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13339,%dummy}, %rd18712;
	}
	shf.l.wrap.b32 	%r13340, %r13339, %r13338, 21;
	shf.l.wrap.b32 	%r13341, %r13338, %r13339, 21;
	mov.b64 	%rd18721, {%r13341, %r13340};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13342}, %rd18718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13343,%dummy}, %rd18718;
	}
	shf.l.wrap.b32 	%r13344, %r13343, %r13342, 14;
	shf.l.wrap.b32 	%r13345, %r13342, %r13343, 14;
	mov.b64 	%rd18722, {%r13345, %r13344};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13346}, %rd18697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13347,%dummy}, %rd18697;
	}
	shf.l.wrap.b32 	%r13348, %r13347, %r13346, 28;
	shf.l.wrap.b32 	%r13349, %r13346, %r13347, 28;
	mov.b64 	%rd18723, {%r13349, %r13348};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13350}, %rd18703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13351,%dummy}, %rd18703;
	}
	shf.l.wrap.b32 	%r13352, %r13351, %r13350, 20;
	shf.l.wrap.b32 	%r13353, %r13350, %r13351, 20;
	mov.b64 	%rd18724, {%r13353, %r13352};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13354}, %rd18704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13355,%dummy}, %rd18704;
	}
	shf.l.wrap.b32 	%r13356, %r13355, %r13354, 3;
	shf.l.wrap.b32 	%r13357, %r13354, %r13355, 3;
	mov.b64 	%rd18725, {%r13357, %r13356};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13358,%dummy}, %rd18710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13359}, %rd18710;
	}
	shf.r.wrap.b32 	%r13360, %r13359, %r13358, 19;
	shf.r.wrap.b32 	%r13361, %r13358, %r13359, 19;
	mov.b64 	%rd18726, {%r13361, %r13360};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13362,%dummy}, %rd18716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13363}, %rd18716;
	}
	shf.r.wrap.b32 	%r13364, %r13363, %r13362, 3;
	shf.r.wrap.b32 	%r13365, %r13362, %r13363, 3;
	mov.b64 	%rd18727, {%r13365, %r13364};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13366}, %rd18695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13367,%dummy}, %rd18695;
	}
	shf.l.wrap.b32 	%r13368, %r13367, %r13366, 1;
	shf.l.wrap.b32 	%r13369, %r13366, %r13367, 1;
	mov.b64 	%rd18728, {%r13369, %r13368};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13370}, %rd18701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13371,%dummy}, %rd18701;
	}
	shf.l.wrap.b32 	%r13372, %r13371, %r13370, 6;
	shf.l.wrap.b32 	%r13373, %r13370, %r13371, 6;
	mov.b64 	%rd18729, {%r13373, %r13372};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13374}, %rd18707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13375,%dummy}, %rd18707;
	}
	shf.l.wrap.b32 	%r13376, %r13375, %r13374, 25;
	shf.l.wrap.b32 	%r13377, %r13374, %r13375, 25;
	mov.b64 	%rd18730, {%r13377, %r13376};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13378}, %rd18713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13379,%dummy}, %rd18713;
	}
	shf.l.wrap.b32 	%r13380, %r13379, %r13378, 8;
	shf.l.wrap.b32 	%r13381, %r13378, %r13379, 8;
	mov.b64 	%rd18731, {%r13381, %r13380};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13382}, %rd18714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13383,%dummy}, %rd18714;
	}
	shf.l.wrap.b32 	%r13384, %r13383, %r13382, 18;
	shf.l.wrap.b32 	%r13385, %r13382, %r13383, 18;
	mov.b64 	%rd18732, {%r13385, %r13384};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13386}, %rd18698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13387,%dummy}, %rd18698;
	}
	shf.l.wrap.b32 	%r13388, %r13387, %r13386, 27;
	shf.l.wrap.b32 	%r13389, %r13386, %r13387, 27;
	mov.b64 	%rd18733, {%r13389, %r13388};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13390,%dummy}, %rd18699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13391}, %rd18699;
	}
	shf.r.wrap.b32 	%r13392, %r13391, %r13390, 28;
	shf.r.wrap.b32 	%r13393, %r13390, %r13391, 28;
	mov.b64 	%rd18734, {%r13393, %r13392};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13394}, %rd18705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13395,%dummy}, %rd18705;
	}
	shf.l.wrap.b32 	%r13396, %r13395, %r13394, 10;
	shf.l.wrap.b32 	%r13397, %r13394, %r13395, 10;
	mov.b64 	%rd18735, {%r13397, %r13396};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13398}, %rd18711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13399,%dummy}, %rd18711;
	}
	shf.l.wrap.b32 	%r13400, %r13399, %r13398, 15;
	shf.l.wrap.b32 	%r13401, %r13398, %r13399, 15;
	mov.b64 	%rd18736, {%r13401, %r13400};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13402,%dummy}, %rd18717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13403}, %rd18717;
	}
	shf.r.wrap.b32 	%r13404, %r13403, %r13402, 8;
	shf.r.wrap.b32 	%r13405, %r13402, %r13403, 8;
	mov.b64 	%rd18737, {%r13405, %r13404};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13406,%dummy}, %rd18696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13407}, %rd18696;
	}
	shf.r.wrap.b32 	%r13408, %r13407, %r13406, 2;
	shf.r.wrap.b32 	%r13409, %r13406, %r13407, 2;
	mov.b64 	%rd18738, {%r13409, %r13408};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13410,%dummy}, %rd18702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13411}, %rd18702;
	}
	shf.r.wrap.b32 	%r13412, %r13411, %r13410, 9;
	shf.r.wrap.b32 	%r13413, %r13410, %r13411, 9;
	mov.b64 	%rd18739, {%r13413, %r13412};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13414,%dummy}, %rd18708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13415}, %rd18708;
	}
	shf.r.wrap.b32 	%r13416, %r13415, %r13414, 25;
	shf.r.wrap.b32 	%r13417, %r13414, %r13415, 25;
	mov.b64 	%rd18740, {%r13417, %r13416};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13418,%dummy}, %rd18709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13419}, %rd18709;
	}
	shf.r.wrap.b32 	%r13420, %r13419, %r13418, 23;
	shf.r.wrap.b32 	%r13421, %r13418, %r13419, 23;
	mov.b64 	%rd18741, {%r13421, %r13420};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13422}, %rd18715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13423,%dummy}, %rd18715;
	}
	shf.l.wrap.b32 	%r13424, %r13423, %r13422, 2;
	shf.l.wrap.b32 	%r13425, %r13422, %r13423, 2;
	mov.b64 	%rd18742, {%r13425, %r13424};
	not.b64 	%rd18743, %rd18719;
	and.b64  	%rd18744, %rd18720, %rd18743;
	xor.b64  	%rd18745, %rd18744, %rd18694;
	not.b64 	%rd18746, %rd18720;
	and.b64  	%rd18747, %rd18721, %rd18746;
	xor.b64  	%rd18748, %rd18747, %rd18719;
	not.b64 	%rd18749, %rd18721;
	and.b64  	%rd18750, %rd18722, %rd18749;
	xor.b64  	%rd18751, %rd18750, %rd18720;
	not.b64 	%rd18752, %rd18722;
	and.b64  	%rd18753, %rd18694, %rd18752;
	xor.b64  	%rd18754, %rd18753, %rd18721;
	not.b64 	%rd18755, %rd18694;
	and.b64  	%rd18756, %rd18719, %rd18755;
	xor.b64  	%rd18757, %rd18756, %rd18722;
	not.b64 	%rd18758, %rd18724;
	and.b64  	%rd18759, %rd18725, %rd18758;
	xor.b64  	%rd18760, %rd18759, %rd18723;
	not.b64 	%rd18761, %rd18725;
	and.b64  	%rd18762, %rd18726, %rd18761;
	xor.b64  	%rd18763, %rd18762, %rd18724;
	not.b64 	%rd18764, %rd18726;
	and.b64  	%rd18765, %rd18727, %rd18764;
	xor.b64  	%rd18766, %rd18765, %rd18725;
	not.b64 	%rd18767, %rd18727;
	and.b64  	%rd18768, %rd18723, %rd18767;
	xor.b64  	%rd18769, %rd18768, %rd18726;
	not.b64 	%rd18770, %rd18723;
	and.b64  	%rd18771, %rd18724, %rd18770;
	xor.b64  	%rd18772, %rd18771, %rd18727;
	not.b64 	%rd18773, %rd18729;
	and.b64  	%rd18774, %rd18730, %rd18773;
	xor.b64  	%rd18775, %rd18774, %rd18728;
	not.b64 	%rd18776, %rd18730;
	and.b64  	%rd18777, %rd18731, %rd18776;
	xor.b64  	%rd18778, %rd18777, %rd18729;
	not.b64 	%rd18779, %rd18731;
	and.b64  	%rd18780, %rd18732, %rd18779;
	xor.b64  	%rd18781, %rd18780, %rd18730;
	not.b64 	%rd18782, %rd18732;
	and.b64  	%rd18783, %rd18728, %rd18782;
	xor.b64  	%rd18784, %rd18783, %rd18731;
	not.b64 	%rd18785, %rd18728;
	and.b64  	%rd18786, %rd18729, %rd18785;
	xor.b64  	%rd18787, %rd18786, %rd18732;
	not.b64 	%rd18788, %rd18734;
	and.b64  	%rd18789, %rd18735, %rd18788;
	xor.b64  	%rd18790, %rd18789, %rd18733;
	not.b64 	%rd18791, %rd18735;
	and.b64  	%rd18792, %rd18736, %rd18791;
	xor.b64  	%rd18793, %rd18792, %rd18734;
	not.b64 	%rd18794, %rd18736;
	and.b64  	%rd18795, %rd18737, %rd18794;
	xor.b64  	%rd18796, %rd18795, %rd18735;
	not.b64 	%rd18797, %rd18737;
	and.b64  	%rd18798, %rd18733, %rd18797;
	xor.b64  	%rd18799, %rd18798, %rd18736;
	not.b64 	%rd18800, %rd18733;
	and.b64  	%rd18801, %rd18734, %rd18800;
	xor.b64  	%rd18802, %rd18801, %rd18737;
	not.b64 	%rd18803, %rd18739;
	and.b64  	%rd18804, %rd18740, %rd18803;
	xor.b64  	%rd18805, %rd18804, %rd18738;
	not.b64 	%rd18806, %rd18740;
	and.b64  	%rd18807, %rd18741, %rd18806;
	xor.b64  	%rd18808, %rd18807, %rd18739;
	not.b64 	%rd18809, %rd18741;
	and.b64  	%rd18810, %rd18742, %rd18809;
	xor.b64  	%rd18811, %rd18810, %rd18740;
	not.b64 	%rd18812, %rd18742;
	and.b64  	%rd18813, %rd18738, %rd18812;
	xor.b64  	%rd18814, %rd18813, %rd18741;
	not.b64 	%rd18815, %rd18738;
	and.b64  	%rd18816, %rd18739, %rd18815;
	xor.b64  	%rd18817, %rd18816, %rd18742;
	xor.b64  	%rd18818, %rd18745, %rd34;
	xor.b64  	%rd18819, %rd18760, %rd18818;
	xor.b64  	%rd18820, %rd18819, %rd18775;
	xor.b64  	%rd18821, %rd18820, %rd18790;
	xor.b64  	%rd18822, %rd18821, %rd18805;
	xor.b64  	%rd18823, %rd18763, %rd18748;
	xor.b64  	%rd18824, %rd18823, %rd18778;
	xor.b64  	%rd18825, %rd18824, %rd18793;
	xor.b64  	%rd18826, %rd18825, %rd18808;
	xor.b64  	%rd18827, %rd18766, %rd18751;
	xor.b64  	%rd18828, %rd18827, %rd18781;
	xor.b64  	%rd18829, %rd18828, %rd18796;
	xor.b64  	%rd18830, %rd18829, %rd18811;
	xor.b64  	%rd18831, %rd18769, %rd18754;
	xor.b64  	%rd18832, %rd18831, %rd18784;
	xor.b64  	%rd18833, %rd18832, %rd18799;
	xor.b64  	%rd18834, %rd18833, %rd18814;
	xor.b64  	%rd18835, %rd18772, %rd18757;
	xor.b64  	%rd18836, %rd18835, %rd18787;
	xor.b64  	%rd18837, %rd18836, %rd18802;
	xor.b64  	%rd18838, %rd18837, %rd18817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13426}, %rd18826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13427,%dummy}, %rd18826;
	}
	shf.l.wrap.b32 	%r13428, %r13427, %r13426, 1;
	shf.l.wrap.b32 	%r13429, %r13426, %r13427, 1;
	mov.b64 	%rd18839, {%r13429, %r13428};
	xor.b64  	%rd18840, %rd18838, %rd18839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13430}, %rd18830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13431,%dummy}, %rd18830;
	}
	shf.l.wrap.b32 	%r13432, %r13431, %r13430, 1;
	shf.l.wrap.b32 	%r13433, %r13430, %r13431, 1;
	mov.b64 	%rd18841, {%r13433, %r13432};
	xor.b64  	%rd18842, %rd18841, %rd18822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13434}, %rd18834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13435,%dummy}, %rd18834;
	}
	shf.l.wrap.b32 	%r13436, %r13435, %r13434, 1;
	shf.l.wrap.b32 	%r13437, %r13434, %r13435, 1;
	mov.b64 	%rd18843, {%r13437, %r13436};
	xor.b64  	%rd18844, %rd18843, %rd18826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13438}, %rd18838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13439,%dummy}, %rd18838;
	}
	shf.l.wrap.b32 	%r13440, %r13439, %r13438, 1;
	shf.l.wrap.b32 	%r13441, %r13438, %r13439, 1;
	mov.b64 	%rd18845, {%r13441, %r13440};
	xor.b64  	%rd18846, %rd18845, %rd18830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13442}, %rd18822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13443,%dummy}, %rd18822;
	}
	shf.l.wrap.b32 	%r13444, %r13443, %r13442, 1;
	shf.l.wrap.b32 	%r13445, %r13442, %r13443, 1;
	mov.b64 	%rd18847, {%r13445, %r13444};
	xor.b64  	%rd18848, %rd18834, %rd18847;
	xor.b64  	%rd18849, %rd18840, %rd18818;
	xor.b64  	%rd18850, %rd18842, %rd18748;
	xor.b64  	%rd18851, %rd18844, %rd18751;
	xor.b64  	%rd18852, %rd18846, %rd18754;
	xor.b64  	%rd18853, %rd18848, %rd18757;
	xor.b64  	%rd18854, %rd18840, %rd18760;
	xor.b64  	%rd18855, %rd18842, %rd18763;
	xor.b64  	%rd18856, %rd18844, %rd18766;
	xor.b64  	%rd18857, %rd18846, %rd18769;
	xor.b64  	%rd18858, %rd18848, %rd18772;
	xor.b64  	%rd18859, %rd18840, %rd18775;
	xor.b64  	%rd18860, %rd18842, %rd18778;
	xor.b64  	%rd18861, %rd18844, %rd18781;
	xor.b64  	%rd18862, %rd18846, %rd18784;
	xor.b64  	%rd18863, %rd18848, %rd18787;
	xor.b64  	%rd18864, %rd18840, %rd18790;
	xor.b64  	%rd18865, %rd18842, %rd18793;
	xor.b64  	%rd18866, %rd18844, %rd18796;
	xor.b64  	%rd18867, %rd18846, %rd18799;
	xor.b64  	%rd18868, %rd18848, %rd18802;
	xor.b64  	%rd18869, %rd18840, %rd18805;
	xor.b64  	%rd18870, %rd18842, %rd18808;
	xor.b64  	%rd18871, %rd18844, %rd18811;
	xor.b64  	%rd18872, %rd18846, %rd18814;
	xor.b64  	%rd18873, %rd18848, %rd18817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13446,%dummy}, %rd18855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13447}, %rd18855;
	}
	shf.r.wrap.b32 	%r13448, %r13447, %r13446, 20;
	shf.r.wrap.b32 	%r13449, %r13446, %r13447, 20;
	mov.b64 	%rd18874, {%r13449, %r13448};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13450,%dummy}, %rd18861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13451}, %rd18861;
	}
	shf.r.wrap.b32 	%r13452, %r13451, %r13450, 21;
	shf.r.wrap.b32 	%r13453, %r13450, %r13451, 21;
	mov.b64 	%rd18875, {%r13453, %r13452};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13454}, %rd18867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13455,%dummy}, %rd18867;
	}
	shf.l.wrap.b32 	%r13456, %r13455, %r13454, 21;
	shf.l.wrap.b32 	%r13457, %r13454, %r13455, 21;
	mov.b64 	%rd18876, {%r13457, %r13456};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13458}, %rd18873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13459,%dummy}, %rd18873;
	}
	shf.l.wrap.b32 	%r13460, %r13459, %r13458, 14;
	shf.l.wrap.b32 	%r13461, %r13458, %r13459, 14;
	mov.b64 	%rd18877, {%r13461, %r13460};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13462}, %rd18852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13463,%dummy}, %rd18852;
	}
	shf.l.wrap.b32 	%r13464, %r13463, %r13462, 28;
	shf.l.wrap.b32 	%r13465, %r13462, %r13463, 28;
	mov.b64 	%rd18878, {%r13465, %r13464};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13466}, %rd18858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13467,%dummy}, %rd18858;
	}
	shf.l.wrap.b32 	%r13468, %r13467, %r13466, 20;
	shf.l.wrap.b32 	%r13469, %r13466, %r13467, 20;
	mov.b64 	%rd18879, {%r13469, %r13468};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13470}, %rd18859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13471,%dummy}, %rd18859;
	}
	shf.l.wrap.b32 	%r13472, %r13471, %r13470, 3;
	shf.l.wrap.b32 	%r13473, %r13470, %r13471, 3;
	mov.b64 	%rd18880, {%r13473, %r13472};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13474,%dummy}, %rd18865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13475}, %rd18865;
	}
	shf.r.wrap.b32 	%r13476, %r13475, %r13474, 19;
	shf.r.wrap.b32 	%r13477, %r13474, %r13475, 19;
	mov.b64 	%rd18881, {%r13477, %r13476};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13478,%dummy}, %rd18871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13479}, %rd18871;
	}
	shf.r.wrap.b32 	%r13480, %r13479, %r13478, 3;
	shf.r.wrap.b32 	%r13481, %r13478, %r13479, 3;
	mov.b64 	%rd18882, {%r13481, %r13480};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13482}, %rd18850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13483,%dummy}, %rd18850;
	}
	shf.l.wrap.b32 	%r13484, %r13483, %r13482, 1;
	shf.l.wrap.b32 	%r13485, %r13482, %r13483, 1;
	mov.b64 	%rd18883, {%r13485, %r13484};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13486}, %rd18856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13487,%dummy}, %rd18856;
	}
	shf.l.wrap.b32 	%r13488, %r13487, %r13486, 6;
	shf.l.wrap.b32 	%r13489, %r13486, %r13487, 6;
	mov.b64 	%rd18884, {%r13489, %r13488};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13490}, %rd18862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13491,%dummy}, %rd18862;
	}
	shf.l.wrap.b32 	%r13492, %r13491, %r13490, 25;
	shf.l.wrap.b32 	%r13493, %r13490, %r13491, 25;
	mov.b64 	%rd18885, {%r13493, %r13492};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13494}, %rd18868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13495,%dummy}, %rd18868;
	}
	shf.l.wrap.b32 	%r13496, %r13495, %r13494, 8;
	shf.l.wrap.b32 	%r13497, %r13494, %r13495, 8;
	mov.b64 	%rd18886, {%r13497, %r13496};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13498}, %rd18869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13499,%dummy}, %rd18869;
	}
	shf.l.wrap.b32 	%r13500, %r13499, %r13498, 18;
	shf.l.wrap.b32 	%r13501, %r13498, %r13499, 18;
	mov.b64 	%rd18887, {%r13501, %r13500};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13502}, %rd18853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13503,%dummy}, %rd18853;
	}
	shf.l.wrap.b32 	%r13504, %r13503, %r13502, 27;
	shf.l.wrap.b32 	%r13505, %r13502, %r13503, 27;
	mov.b64 	%rd18888, {%r13505, %r13504};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13506,%dummy}, %rd18854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13507}, %rd18854;
	}
	shf.r.wrap.b32 	%r13508, %r13507, %r13506, 28;
	shf.r.wrap.b32 	%r13509, %r13506, %r13507, 28;
	mov.b64 	%rd18889, {%r13509, %r13508};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13510}, %rd18860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13511,%dummy}, %rd18860;
	}
	shf.l.wrap.b32 	%r13512, %r13511, %r13510, 10;
	shf.l.wrap.b32 	%r13513, %r13510, %r13511, 10;
	mov.b64 	%rd18890, {%r13513, %r13512};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13514}, %rd18866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13515,%dummy}, %rd18866;
	}
	shf.l.wrap.b32 	%r13516, %r13515, %r13514, 15;
	shf.l.wrap.b32 	%r13517, %r13514, %r13515, 15;
	mov.b64 	%rd18891, {%r13517, %r13516};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13518,%dummy}, %rd18872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13519}, %rd18872;
	}
	shf.r.wrap.b32 	%r13520, %r13519, %r13518, 8;
	shf.r.wrap.b32 	%r13521, %r13518, %r13519, 8;
	mov.b64 	%rd18892, {%r13521, %r13520};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13522,%dummy}, %rd18851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13523}, %rd18851;
	}
	shf.r.wrap.b32 	%r13524, %r13523, %r13522, 2;
	shf.r.wrap.b32 	%r13525, %r13522, %r13523, 2;
	mov.b64 	%rd18893, {%r13525, %r13524};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13526,%dummy}, %rd18857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13527}, %rd18857;
	}
	shf.r.wrap.b32 	%r13528, %r13527, %r13526, 9;
	shf.r.wrap.b32 	%r13529, %r13526, %r13527, 9;
	mov.b64 	%rd18894, {%r13529, %r13528};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13530,%dummy}, %rd18863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13531}, %rd18863;
	}
	shf.r.wrap.b32 	%r13532, %r13531, %r13530, 25;
	shf.r.wrap.b32 	%r13533, %r13530, %r13531, 25;
	mov.b64 	%rd18895, {%r13533, %r13532};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13534,%dummy}, %rd18864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13535}, %rd18864;
	}
	shf.r.wrap.b32 	%r13536, %r13535, %r13534, 23;
	shf.r.wrap.b32 	%r13537, %r13534, %r13535, 23;
	mov.b64 	%rd18896, {%r13537, %r13536};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13538}, %rd18870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13539,%dummy}, %rd18870;
	}
	shf.l.wrap.b32 	%r13540, %r13539, %r13538, 2;
	shf.l.wrap.b32 	%r13541, %r13538, %r13539, 2;
	mov.b64 	%rd18897, {%r13541, %r13540};
	not.b64 	%rd18898, %rd18874;
	and.b64  	%rd18899, %rd18875, %rd18898;
	xor.b64  	%rd18900, %rd18899, %rd18849;
	not.b64 	%rd18901, %rd18875;
	and.b64  	%rd18902, %rd18876, %rd18901;
	xor.b64  	%rd18903, %rd18902, %rd18874;
	not.b64 	%rd18904, %rd18876;
	and.b64  	%rd18905, %rd18877, %rd18904;
	xor.b64  	%rd18906, %rd18905, %rd18875;
	not.b64 	%rd18907, %rd18877;
	and.b64  	%rd18908, %rd18849, %rd18907;
	xor.b64  	%rd18909, %rd18908, %rd18876;
	not.b64 	%rd18910, %rd18849;
	and.b64  	%rd18911, %rd18874, %rd18910;
	xor.b64  	%rd18912, %rd18911, %rd18877;
	not.b64 	%rd18913, %rd18879;
	and.b64  	%rd18914, %rd18880, %rd18913;
	xor.b64  	%rd18915, %rd18914, %rd18878;
	not.b64 	%rd18916, %rd18880;
	and.b64  	%rd18917, %rd18881, %rd18916;
	xor.b64  	%rd18918, %rd18917, %rd18879;
	not.b64 	%rd18919, %rd18881;
	and.b64  	%rd18920, %rd18882, %rd18919;
	xor.b64  	%rd18921, %rd18920, %rd18880;
	not.b64 	%rd18922, %rd18882;
	and.b64  	%rd18923, %rd18878, %rd18922;
	xor.b64  	%rd18924, %rd18923, %rd18881;
	not.b64 	%rd18925, %rd18878;
	and.b64  	%rd18926, %rd18879, %rd18925;
	xor.b64  	%rd18927, %rd18926, %rd18882;
	not.b64 	%rd18928, %rd18884;
	and.b64  	%rd18929, %rd18885, %rd18928;
	xor.b64  	%rd18930, %rd18929, %rd18883;
	not.b64 	%rd18931, %rd18885;
	and.b64  	%rd18932, %rd18886, %rd18931;
	xor.b64  	%rd18933, %rd18932, %rd18884;
	not.b64 	%rd18934, %rd18886;
	and.b64  	%rd18935, %rd18887, %rd18934;
	xor.b64  	%rd18936, %rd18935, %rd18885;
	not.b64 	%rd18937, %rd18887;
	and.b64  	%rd18938, %rd18883, %rd18937;
	xor.b64  	%rd18939, %rd18938, %rd18886;
	not.b64 	%rd18940, %rd18883;
	and.b64  	%rd18941, %rd18884, %rd18940;
	xor.b64  	%rd18942, %rd18941, %rd18887;
	not.b64 	%rd18943, %rd18889;
	and.b64  	%rd18944, %rd18890, %rd18943;
	xor.b64  	%rd18945, %rd18944, %rd18888;
	not.b64 	%rd18946, %rd18890;
	and.b64  	%rd18947, %rd18891, %rd18946;
	xor.b64  	%rd18948, %rd18947, %rd18889;
	not.b64 	%rd18949, %rd18891;
	and.b64  	%rd18950, %rd18892, %rd18949;
	xor.b64  	%rd18951, %rd18950, %rd18890;
	not.b64 	%rd18952, %rd18892;
	and.b64  	%rd18953, %rd18888, %rd18952;
	xor.b64  	%rd18954, %rd18953, %rd18891;
	not.b64 	%rd18955, %rd18888;
	and.b64  	%rd18956, %rd18889, %rd18955;
	xor.b64  	%rd18957, %rd18956, %rd18892;
	not.b64 	%rd18958, %rd18894;
	and.b64  	%rd18959, %rd18895, %rd18958;
	xor.b64  	%rd18960, %rd18959, %rd18893;
	not.b64 	%rd18961, %rd18895;
	and.b64  	%rd18962, %rd18896, %rd18961;
	xor.b64  	%rd18963, %rd18962, %rd18894;
	not.b64 	%rd18964, %rd18896;
	and.b64  	%rd18965, %rd18897, %rd18964;
	xor.b64  	%rd18966, %rd18965, %rd18895;
	not.b64 	%rd18967, %rd18897;
	and.b64  	%rd18968, %rd18893, %rd18967;
	xor.b64  	%rd18969, %rd18968, %rd18896;
	not.b64 	%rd18970, %rd18893;
	and.b64  	%rd18971, %rd18894, %rd18970;
	xor.b64  	%rd18972, %rd18971, %rd18897;
	xor.b64  	%rd18973, %rd18900, %rd35;
	xor.b64  	%rd18974, %rd18915, %rd18973;
	xor.b64  	%rd18975, %rd18974, %rd18930;
	xor.b64  	%rd18976, %rd18975, %rd18945;
	xor.b64  	%rd18977, %rd18976, %rd18960;
	xor.b64  	%rd18978, %rd18918, %rd18903;
	xor.b64  	%rd18979, %rd18978, %rd18933;
	xor.b64  	%rd18980, %rd18979, %rd18948;
	xor.b64  	%rd18981, %rd18980, %rd18963;
	xor.b64  	%rd18982, %rd18921, %rd18906;
	xor.b64  	%rd18983, %rd18982, %rd18936;
	xor.b64  	%rd18984, %rd18983, %rd18951;
	xor.b64  	%rd18985, %rd18984, %rd18966;
	xor.b64  	%rd18986, %rd18924, %rd18909;
	xor.b64  	%rd18987, %rd18986, %rd18939;
	xor.b64  	%rd18988, %rd18987, %rd18954;
	xor.b64  	%rd18989, %rd18988, %rd18969;
	xor.b64  	%rd18990, %rd18927, %rd18912;
	xor.b64  	%rd18991, %rd18990, %rd18942;
	xor.b64  	%rd18992, %rd18991, %rd18957;
	xor.b64  	%rd18993, %rd18992, %rd18972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13542}, %rd18981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13543,%dummy}, %rd18981;
	}
	shf.l.wrap.b32 	%r13544, %r13543, %r13542, 1;
	shf.l.wrap.b32 	%r13545, %r13542, %r13543, 1;
	mov.b64 	%rd18994, {%r13545, %r13544};
	xor.b64  	%rd18995, %rd18993, %rd18994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13546}, %rd18985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13547,%dummy}, %rd18985;
	}
	shf.l.wrap.b32 	%r13548, %r13547, %r13546, 1;
	shf.l.wrap.b32 	%r13549, %r13546, %r13547, 1;
	mov.b64 	%rd18996, {%r13549, %r13548};
	xor.b64  	%rd18997, %rd18996, %rd18977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13550}, %rd18989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13551,%dummy}, %rd18989;
	}
	shf.l.wrap.b32 	%r13552, %r13551, %r13550, 1;
	shf.l.wrap.b32 	%r13553, %r13550, %r13551, 1;
	mov.b64 	%rd18998, {%r13553, %r13552};
	xor.b64  	%rd18999, %rd18998, %rd18981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13554}, %rd18993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13555,%dummy}, %rd18993;
	}
	shf.l.wrap.b32 	%r13556, %r13555, %r13554, 1;
	shf.l.wrap.b32 	%r13557, %r13554, %r13555, 1;
	mov.b64 	%rd19000, {%r13557, %r13556};
	xor.b64  	%rd19001, %rd19000, %rd18985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13558}, %rd18977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13559,%dummy}, %rd18977;
	}
	shf.l.wrap.b32 	%r13560, %r13559, %r13558, 1;
	shf.l.wrap.b32 	%r13561, %r13558, %r13559, 1;
	mov.b64 	%rd19002, {%r13561, %r13560};
	xor.b64  	%rd19003, %rd18989, %rd19002;
	xor.b64  	%rd19004, %rd18995, %rd18973;
	xor.b64  	%rd19005, %rd18997, %rd18903;
	xor.b64  	%rd19006, %rd18999, %rd18906;
	xor.b64  	%rd19007, %rd19001, %rd18909;
	xor.b64  	%rd19008, %rd19003, %rd18912;
	xor.b64  	%rd19009, %rd18995, %rd18915;
	xor.b64  	%rd19010, %rd18997, %rd18918;
	xor.b64  	%rd19011, %rd18999, %rd18921;
	xor.b64  	%rd19012, %rd19001, %rd18924;
	xor.b64  	%rd19013, %rd19003, %rd18927;
	xor.b64  	%rd19014, %rd18995, %rd18930;
	xor.b64  	%rd19015, %rd18997, %rd18933;
	xor.b64  	%rd19016, %rd18999, %rd18936;
	xor.b64  	%rd19017, %rd19001, %rd18939;
	xor.b64  	%rd19018, %rd19003, %rd18942;
	xor.b64  	%rd19019, %rd18995, %rd18945;
	xor.b64  	%rd19020, %rd18997, %rd18948;
	xor.b64  	%rd19021, %rd18999, %rd18951;
	xor.b64  	%rd19022, %rd19001, %rd18954;
	xor.b64  	%rd19023, %rd19003, %rd18957;
	xor.b64  	%rd19024, %rd18995, %rd18960;
	xor.b64  	%rd19025, %rd18997, %rd18963;
	xor.b64  	%rd19026, %rd18999, %rd18966;
	xor.b64  	%rd19027, %rd19001, %rd18969;
	xor.b64  	%rd19028, %rd19003, %rd18972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13562,%dummy}, %rd19010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13563}, %rd19010;
	}
	shf.r.wrap.b32 	%r13564, %r13563, %r13562, 20;
	shf.r.wrap.b32 	%r13565, %r13562, %r13563, 20;
	mov.b64 	%rd19029, {%r13565, %r13564};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13566,%dummy}, %rd19016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13567}, %rd19016;
	}
	shf.r.wrap.b32 	%r13568, %r13567, %r13566, 21;
	shf.r.wrap.b32 	%r13569, %r13566, %r13567, 21;
	mov.b64 	%rd19030, {%r13569, %r13568};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13570}, %rd19022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13571,%dummy}, %rd19022;
	}
	shf.l.wrap.b32 	%r13572, %r13571, %r13570, 21;
	shf.l.wrap.b32 	%r13573, %r13570, %r13571, 21;
	mov.b64 	%rd19031, {%r13573, %r13572};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13574}, %rd19028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13575,%dummy}, %rd19028;
	}
	shf.l.wrap.b32 	%r13576, %r13575, %r13574, 14;
	shf.l.wrap.b32 	%r13577, %r13574, %r13575, 14;
	mov.b64 	%rd19032, {%r13577, %r13576};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13578}, %rd19007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13579,%dummy}, %rd19007;
	}
	shf.l.wrap.b32 	%r13580, %r13579, %r13578, 28;
	shf.l.wrap.b32 	%r13581, %r13578, %r13579, 28;
	mov.b64 	%rd19033, {%r13581, %r13580};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13582}, %rd19013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13583,%dummy}, %rd19013;
	}
	shf.l.wrap.b32 	%r13584, %r13583, %r13582, 20;
	shf.l.wrap.b32 	%r13585, %r13582, %r13583, 20;
	mov.b64 	%rd19034, {%r13585, %r13584};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13586}, %rd19014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13587,%dummy}, %rd19014;
	}
	shf.l.wrap.b32 	%r13588, %r13587, %r13586, 3;
	shf.l.wrap.b32 	%r13589, %r13586, %r13587, 3;
	mov.b64 	%rd19035, {%r13589, %r13588};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13590,%dummy}, %rd19020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13591}, %rd19020;
	}
	shf.r.wrap.b32 	%r13592, %r13591, %r13590, 19;
	shf.r.wrap.b32 	%r13593, %r13590, %r13591, 19;
	mov.b64 	%rd19036, {%r13593, %r13592};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13594,%dummy}, %rd19026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13595}, %rd19026;
	}
	shf.r.wrap.b32 	%r13596, %r13595, %r13594, 3;
	shf.r.wrap.b32 	%r13597, %r13594, %r13595, 3;
	mov.b64 	%rd19037, {%r13597, %r13596};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13598}, %rd19005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13599,%dummy}, %rd19005;
	}
	shf.l.wrap.b32 	%r13600, %r13599, %r13598, 1;
	shf.l.wrap.b32 	%r13601, %r13598, %r13599, 1;
	mov.b64 	%rd19038, {%r13601, %r13600};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13602}, %rd19011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13603,%dummy}, %rd19011;
	}
	shf.l.wrap.b32 	%r13604, %r13603, %r13602, 6;
	shf.l.wrap.b32 	%r13605, %r13602, %r13603, 6;
	mov.b64 	%rd19039, {%r13605, %r13604};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13606}, %rd19017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13607,%dummy}, %rd19017;
	}
	shf.l.wrap.b32 	%r13608, %r13607, %r13606, 25;
	shf.l.wrap.b32 	%r13609, %r13606, %r13607, 25;
	mov.b64 	%rd19040, {%r13609, %r13608};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13610}, %rd19023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13611,%dummy}, %rd19023;
	}
	shf.l.wrap.b32 	%r13612, %r13611, %r13610, 8;
	shf.l.wrap.b32 	%r13613, %r13610, %r13611, 8;
	mov.b64 	%rd19041, {%r13613, %r13612};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13614}, %rd19024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13615,%dummy}, %rd19024;
	}
	shf.l.wrap.b32 	%r13616, %r13615, %r13614, 18;
	shf.l.wrap.b32 	%r13617, %r13614, %r13615, 18;
	mov.b64 	%rd19042, {%r13617, %r13616};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13618}, %rd19008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13619,%dummy}, %rd19008;
	}
	shf.l.wrap.b32 	%r13620, %r13619, %r13618, 27;
	shf.l.wrap.b32 	%r13621, %r13618, %r13619, 27;
	mov.b64 	%rd19043, {%r13621, %r13620};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13622,%dummy}, %rd19009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13623}, %rd19009;
	}
	shf.r.wrap.b32 	%r13624, %r13623, %r13622, 28;
	shf.r.wrap.b32 	%r13625, %r13622, %r13623, 28;
	mov.b64 	%rd19044, {%r13625, %r13624};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13626}, %rd19015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13627,%dummy}, %rd19015;
	}
	shf.l.wrap.b32 	%r13628, %r13627, %r13626, 10;
	shf.l.wrap.b32 	%r13629, %r13626, %r13627, 10;
	mov.b64 	%rd19045, {%r13629, %r13628};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13630}, %rd19021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13631,%dummy}, %rd19021;
	}
	shf.l.wrap.b32 	%r13632, %r13631, %r13630, 15;
	shf.l.wrap.b32 	%r13633, %r13630, %r13631, 15;
	mov.b64 	%rd19046, {%r13633, %r13632};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13634,%dummy}, %rd19027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13635}, %rd19027;
	}
	shf.r.wrap.b32 	%r13636, %r13635, %r13634, 8;
	shf.r.wrap.b32 	%r13637, %r13634, %r13635, 8;
	mov.b64 	%rd19047, {%r13637, %r13636};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13638,%dummy}, %rd19006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13639}, %rd19006;
	}
	shf.r.wrap.b32 	%r13640, %r13639, %r13638, 2;
	shf.r.wrap.b32 	%r13641, %r13638, %r13639, 2;
	mov.b64 	%rd19048, {%r13641, %r13640};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13642,%dummy}, %rd19012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13643}, %rd19012;
	}
	shf.r.wrap.b32 	%r13644, %r13643, %r13642, 9;
	shf.r.wrap.b32 	%r13645, %r13642, %r13643, 9;
	mov.b64 	%rd19049, {%r13645, %r13644};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13646,%dummy}, %rd19018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13647}, %rd19018;
	}
	shf.r.wrap.b32 	%r13648, %r13647, %r13646, 25;
	shf.r.wrap.b32 	%r13649, %r13646, %r13647, 25;
	mov.b64 	%rd19050, {%r13649, %r13648};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13650,%dummy}, %rd19019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13651}, %rd19019;
	}
	shf.r.wrap.b32 	%r13652, %r13651, %r13650, 23;
	shf.r.wrap.b32 	%r13653, %r13650, %r13651, 23;
	mov.b64 	%rd19051, {%r13653, %r13652};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13654}, %rd19025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13655,%dummy}, %rd19025;
	}
	shf.l.wrap.b32 	%r13656, %r13655, %r13654, 2;
	shf.l.wrap.b32 	%r13657, %r13654, %r13655, 2;
	mov.b64 	%rd19052, {%r13657, %r13656};
	not.b64 	%rd19053, %rd19029;
	and.b64  	%rd19054, %rd19030, %rd19053;
	xor.b64  	%rd19055, %rd19054, %rd19004;
	not.b64 	%rd19056, %rd19030;
	and.b64  	%rd19057, %rd19031, %rd19056;
	xor.b64  	%rd19058, %rd19057, %rd19029;
	not.b64 	%rd19059, %rd19031;
	and.b64  	%rd19060, %rd19032, %rd19059;
	xor.b64  	%rd19061, %rd19060, %rd19030;
	not.b64 	%rd19062, %rd19032;
	and.b64  	%rd19063, %rd19004, %rd19062;
	xor.b64  	%rd19064, %rd19063, %rd19031;
	not.b64 	%rd19065, %rd19004;
	and.b64  	%rd19066, %rd19029, %rd19065;
	xor.b64  	%rd19067, %rd19066, %rd19032;
	not.b64 	%rd19068, %rd19034;
	and.b64  	%rd19069, %rd19035, %rd19068;
	xor.b64  	%rd19070, %rd19069, %rd19033;
	not.b64 	%rd19071, %rd19035;
	and.b64  	%rd19072, %rd19036, %rd19071;
	xor.b64  	%rd19073, %rd19072, %rd19034;
	not.b64 	%rd19074, %rd19036;
	and.b64  	%rd19075, %rd19037, %rd19074;
	xor.b64  	%rd19076, %rd19075, %rd19035;
	not.b64 	%rd19077, %rd19037;
	and.b64  	%rd19078, %rd19033, %rd19077;
	xor.b64  	%rd19079, %rd19078, %rd19036;
	not.b64 	%rd19080, %rd19033;
	and.b64  	%rd19081, %rd19034, %rd19080;
	xor.b64  	%rd19082, %rd19081, %rd19037;
	not.b64 	%rd19083, %rd19039;
	and.b64  	%rd19084, %rd19040, %rd19083;
	xor.b64  	%rd19085, %rd19084, %rd19038;
	not.b64 	%rd19086, %rd19040;
	and.b64  	%rd19087, %rd19041, %rd19086;
	xor.b64  	%rd19088, %rd19087, %rd19039;
	not.b64 	%rd19089, %rd19041;
	and.b64  	%rd19090, %rd19042, %rd19089;
	xor.b64  	%rd19091, %rd19090, %rd19040;
	not.b64 	%rd19092, %rd19042;
	and.b64  	%rd19093, %rd19038, %rd19092;
	xor.b64  	%rd19094, %rd19093, %rd19041;
	not.b64 	%rd19095, %rd19038;
	and.b64  	%rd19096, %rd19039, %rd19095;
	xor.b64  	%rd19097, %rd19096, %rd19042;
	not.b64 	%rd19098, %rd19044;
	and.b64  	%rd19099, %rd19045, %rd19098;
	xor.b64  	%rd19100, %rd19099, %rd19043;
	not.b64 	%rd19101, %rd19045;
	and.b64  	%rd19102, %rd19046, %rd19101;
	xor.b64  	%rd19103, %rd19102, %rd19044;
	not.b64 	%rd19104, %rd19046;
	and.b64  	%rd19105, %rd19047, %rd19104;
	xor.b64  	%rd19106, %rd19105, %rd19045;
	not.b64 	%rd19107, %rd19047;
	and.b64  	%rd19108, %rd19043, %rd19107;
	xor.b64  	%rd19109, %rd19108, %rd19046;
	not.b64 	%rd19110, %rd19043;
	and.b64  	%rd19111, %rd19044, %rd19110;
	xor.b64  	%rd19112, %rd19111, %rd19047;
	not.b64 	%rd19113, %rd19049;
	and.b64  	%rd19114, %rd19050, %rd19113;
	xor.b64  	%rd19115, %rd19114, %rd19048;
	not.b64 	%rd19116, %rd19050;
	and.b64  	%rd19117, %rd19051, %rd19116;
	xor.b64  	%rd19118, %rd19117, %rd19049;
	not.b64 	%rd19119, %rd19051;
	and.b64  	%rd19120, %rd19052, %rd19119;
	xor.b64  	%rd19121, %rd19120, %rd19050;
	not.b64 	%rd19122, %rd19052;
	and.b64  	%rd19123, %rd19048, %rd19122;
	xor.b64  	%rd19124, %rd19123, %rd19051;
	not.b64 	%rd19125, %rd19048;
	and.b64  	%rd19126, %rd19049, %rd19125;
	xor.b64  	%rd19127, %rd19126, %rd19052;
	xor.b64  	%rd19128, %rd19055, %rd36;
	xor.b64  	%rd19129, %rd19070, %rd19128;
	xor.b64  	%rd19130, %rd19129, %rd19085;
	xor.b64  	%rd19131, %rd19130, %rd19100;
	xor.b64  	%rd19132, %rd19131, %rd19115;
	xor.b64  	%rd19133, %rd19073, %rd19058;
	xor.b64  	%rd19134, %rd19133, %rd19088;
	xor.b64  	%rd19135, %rd19134, %rd19103;
	xor.b64  	%rd19136, %rd19135, %rd19118;
	xor.b64  	%rd19137, %rd19076, %rd19061;
	xor.b64  	%rd19138, %rd19137, %rd19091;
	xor.b64  	%rd19139, %rd19138, %rd19106;
	xor.b64  	%rd19140, %rd19139, %rd19121;
	xor.b64  	%rd19141, %rd19079, %rd19064;
	xor.b64  	%rd19142, %rd19141, %rd19094;
	xor.b64  	%rd19143, %rd19142, %rd19109;
	xor.b64  	%rd19144, %rd19143, %rd19124;
	xor.b64  	%rd19145, %rd19082, %rd19067;
	xor.b64  	%rd19146, %rd19145, %rd19097;
	xor.b64  	%rd19147, %rd19146, %rd19112;
	xor.b64  	%rd19148, %rd19147, %rd19127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13658}, %rd19136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13659,%dummy}, %rd19136;
	}
	shf.l.wrap.b32 	%r13660, %r13659, %r13658, 1;
	shf.l.wrap.b32 	%r13661, %r13658, %r13659, 1;
	mov.b64 	%rd19149, {%r13661, %r13660};
	xor.b64  	%rd19150, %rd19148, %rd19149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13662}, %rd19140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13663,%dummy}, %rd19140;
	}
	shf.l.wrap.b32 	%r13664, %r13663, %r13662, 1;
	shf.l.wrap.b32 	%r13665, %r13662, %r13663, 1;
	mov.b64 	%rd19151, {%r13665, %r13664};
	xor.b64  	%rd19152, %rd19151, %rd19132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13666}, %rd19144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13667,%dummy}, %rd19144;
	}
	shf.l.wrap.b32 	%r13668, %r13667, %r13666, 1;
	shf.l.wrap.b32 	%r13669, %r13666, %r13667, 1;
	mov.b64 	%rd19153, {%r13669, %r13668};
	xor.b64  	%rd19154, %rd19153, %rd19136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13670}, %rd19148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13671,%dummy}, %rd19148;
	}
	shf.l.wrap.b32 	%r13672, %r13671, %r13670, 1;
	shf.l.wrap.b32 	%r13673, %r13670, %r13671, 1;
	mov.b64 	%rd19155, {%r13673, %r13672};
	xor.b64  	%rd19156, %rd19155, %rd19140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13674}, %rd19132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13675,%dummy}, %rd19132;
	}
	shf.l.wrap.b32 	%r13676, %r13675, %r13674, 1;
	shf.l.wrap.b32 	%r13677, %r13674, %r13675, 1;
	mov.b64 	%rd19157, {%r13677, %r13676};
	xor.b64  	%rd19158, %rd19144, %rd19157;
	xor.b64  	%rd19159, %rd19150, %rd19128;
	xor.b64  	%rd19160, %rd19152, %rd19058;
	xor.b64  	%rd19161, %rd19154, %rd19061;
	xor.b64  	%rd19162, %rd19156, %rd19064;
	xor.b64  	%rd19163, %rd19158, %rd19067;
	xor.b64  	%rd19164, %rd19150, %rd19070;
	xor.b64  	%rd19165, %rd19152, %rd19073;
	xor.b64  	%rd19166, %rd19154, %rd19076;
	xor.b64  	%rd19167, %rd19156, %rd19079;
	xor.b64  	%rd19168, %rd19158, %rd19082;
	xor.b64  	%rd19169, %rd19150, %rd19085;
	xor.b64  	%rd19170, %rd19152, %rd19088;
	xor.b64  	%rd19171, %rd19154, %rd19091;
	xor.b64  	%rd19172, %rd19156, %rd19094;
	xor.b64  	%rd19173, %rd19158, %rd19097;
	xor.b64  	%rd19174, %rd19150, %rd19100;
	xor.b64  	%rd19175, %rd19152, %rd19103;
	xor.b64  	%rd19176, %rd19154, %rd19106;
	xor.b64  	%rd19177, %rd19156, %rd19109;
	xor.b64  	%rd19178, %rd19158, %rd19112;
	xor.b64  	%rd19179, %rd19150, %rd19115;
	xor.b64  	%rd19180, %rd19152, %rd19118;
	xor.b64  	%rd19181, %rd19154, %rd19121;
	xor.b64  	%rd19182, %rd19156, %rd19124;
	xor.b64  	%rd19183, %rd19158, %rd19127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13678,%dummy}, %rd19165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13679}, %rd19165;
	}
	shf.r.wrap.b32 	%r13680, %r13679, %r13678, 20;
	shf.r.wrap.b32 	%r13681, %r13678, %r13679, 20;
	mov.b64 	%rd19184, {%r13681, %r13680};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13682,%dummy}, %rd19171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13683}, %rd19171;
	}
	shf.r.wrap.b32 	%r13684, %r13683, %r13682, 21;
	shf.r.wrap.b32 	%r13685, %r13682, %r13683, 21;
	mov.b64 	%rd19185, {%r13685, %r13684};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13686}, %rd19177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13687,%dummy}, %rd19177;
	}
	shf.l.wrap.b32 	%r13688, %r13687, %r13686, 21;
	shf.l.wrap.b32 	%r13689, %r13686, %r13687, 21;
	mov.b64 	%rd19186, {%r13689, %r13688};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13690}, %rd19183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13691,%dummy}, %rd19183;
	}
	shf.l.wrap.b32 	%r13692, %r13691, %r13690, 14;
	shf.l.wrap.b32 	%r13693, %r13690, %r13691, 14;
	mov.b64 	%rd19187, {%r13693, %r13692};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13694}, %rd19162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13695,%dummy}, %rd19162;
	}
	shf.l.wrap.b32 	%r13696, %r13695, %r13694, 28;
	shf.l.wrap.b32 	%r13697, %r13694, %r13695, 28;
	mov.b64 	%rd19188, {%r13697, %r13696};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13698}, %rd19168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13699,%dummy}, %rd19168;
	}
	shf.l.wrap.b32 	%r13700, %r13699, %r13698, 20;
	shf.l.wrap.b32 	%r13701, %r13698, %r13699, 20;
	mov.b64 	%rd19189, {%r13701, %r13700};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13702}, %rd19169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13703,%dummy}, %rd19169;
	}
	shf.l.wrap.b32 	%r13704, %r13703, %r13702, 3;
	shf.l.wrap.b32 	%r13705, %r13702, %r13703, 3;
	mov.b64 	%rd19190, {%r13705, %r13704};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13706,%dummy}, %rd19175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13707}, %rd19175;
	}
	shf.r.wrap.b32 	%r13708, %r13707, %r13706, 19;
	shf.r.wrap.b32 	%r13709, %r13706, %r13707, 19;
	mov.b64 	%rd19191, {%r13709, %r13708};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13710,%dummy}, %rd19181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13711}, %rd19181;
	}
	shf.r.wrap.b32 	%r13712, %r13711, %r13710, 3;
	shf.r.wrap.b32 	%r13713, %r13710, %r13711, 3;
	mov.b64 	%rd19192, {%r13713, %r13712};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13714}, %rd19160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13715,%dummy}, %rd19160;
	}
	shf.l.wrap.b32 	%r13716, %r13715, %r13714, 1;
	shf.l.wrap.b32 	%r13717, %r13714, %r13715, 1;
	mov.b64 	%rd19193, {%r13717, %r13716};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13718}, %rd19166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13719,%dummy}, %rd19166;
	}
	shf.l.wrap.b32 	%r13720, %r13719, %r13718, 6;
	shf.l.wrap.b32 	%r13721, %r13718, %r13719, 6;
	mov.b64 	%rd19194, {%r13721, %r13720};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13722}, %rd19172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13723,%dummy}, %rd19172;
	}
	shf.l.wrap.b32 	%r13724, %r13723, %r13722, 25;
	shf.l.wrap.b32 	%r13725, %r13722, %r13723, 25;
	mov.b64 	%rd19195, {%r13725, %r13724};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13726}, %rd19178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13727,%dummy}, %rd19178;
	}
	shf.l.wrap.b32 	%r13728, %r13727, %r13726, 8;
	shf.l.wrap.b32 	%r13729, %r13726, %r13727, 8;
	mov.b64 	%rd19196, {%r13729, %r13728};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13730}, %rd19179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13731,%dummy}, %rd19179;
	}
	shf.l.wrap.b32 	%r13732, %r13731, %r13730, 18;
	shf.l.wrap.b32 	%r13733, %r13730, %r13731, 18;
	mov.b64 	%rd19197, {%r13733, %r13732};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13734}, %rd19163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13735,%dummy}, %rd19163;
	}
	shf.l.wrap.b32 	%r13736, %r13735, %r13734, 27;
	shf.l.wrap.b32 	%r13737, %r13734, %r13735, 27;
	mov.b64 	%rd19198, {%r13737, %r13736};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13738,%dummy}, %rd19164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13739}, %rd19164;
	}
	shf.r.wrap.b32 	%r13740, %r13739, %r13738, 28;
	shf.r.wrap.b32 	%r13741, %r13738, %r13739, 28;
	mov.b64 	%rd19199, {%r13741, %r13740};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13742}, %rd19170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13743,%dummy}, %rd19170;
	}
	shf.l.wrap.b32 	%r13744, %r13743, %r13742, 10;
	shf.l.wrap.b32 	%r13745, %r13742, %r13743, 10;
	mov.b64 	%rd19200, {%r13745, %r13744};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13746}, %rd19176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13747,%dummy}, %rd19176;
	}
	shf.l.wrap.b32 	%r13748, %r13747, %r13746, 15;
	shf.l.wrap.b32 	%r13749, %r13746, %r13747, 15;
	mov.b64 	%rd19201, {%r13749, %r13748};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13750,%dummy}, %rd19182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13751}, %rd19182;
	}
	shf.r.wrap.b32 	%r13752, %r13751, %r13750, 8;
	shf.r.wrap.b32 	%r13753, %r13750, %r13751, 8;
	mov.b64 	%rd19202, {%r13753, %r13752};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13754,%dummy}, %rd19161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13755}, %rd19161;
	}
	shf.r.wrap.b32 	%r13756, %r13755, %r13754, 2;
	shf.r.wrap.b32 	%r13757, %r13754, %r13755, 2;
	mov.b64 	%rd19203, {%r13757, %r13756};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13758,%dummy}, %rd19167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13759}, %rd19167;
	}
	shf.r.wrap.b32 	%r13760, %r13759, %r13758, 9;
	shf.r.wrap.b32 	%r13761, %r13758, %r13759, 9;
	mov.b64 	%rd19204, {%r13761, %r13760};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13762,%dummy}, %rd19173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13763}, %rd19173;
	}
	shf.r.wrap.b32 	%r13764, %r13763, %r13762, 25;
	shf.r.wrap.b32 	%r13765, %r13762, %r13763, 25;
	mov.b64 	%rd19205, {%r13765, %r13764};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13766,%dummy}, %rd19174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13767}, %rd19174;
	}
	shf.r.wrap.b32 	%r13768, %r13767, %r13766, 23;
	shf.r.wrap.b32 	%r13769, %r13766, %r13767, 23;
	mov.b64 	%rd19206, {%r13769, %r13768};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13770}, %rd19180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13771,%dummy}, %rd19180;
	}
	shf.l.wrap.b32 	%r13772, %r13771, %r13770, 2;
	shf.l.wrap.b32 	%r13773, %r13770, %r13771, 2;
	mov.b64 	%rd19207, {%r13773, %r13772};
	not.b64 	%rd19208, %rd19184;
	and.b64  	%rd19209, %rd19185, %rd19208;
	xor.b64  	%rd19210, %rd19209, %rd19159;
	not.b64 	%rd19211, %rd19185;
	and.b64  	%rd19212, %rd19186, %rd19211;
	xor.b64  	%rd19213, %rd19212, %rd19184;
	not.b64 	%rd19214, %rd19186;
	and.b64  	%rd19215, %rd19187, %rd19214;
	xor.b64  	%rd19216, %rd19215, %rd19185;
	not.b64 	%rd19217, %rd19187;
	and.b64  	%rd19218, %rd19159, %rd19217;
	xor.b64  	%rd19219, %rd19218, %rd19186;
	not.b64 	%rd19220, %rd19159;
	and.b64  	%rd19221, %rd19184, %rd19220;
	xor.b64  	%rd19222, %rd19221, %rd19187;
	not.b64 	%rd19223, %rd19189;
	and.b64  	%rd19224, %rd19190, %rd19223;
	xor.b64  	%rd19225, %rd19224, %rd19188;
	not.b64 	%rd19226, %rd19190;
	and.b64  	%rd19227, %rd19191, %rd19226;
	xor.b64  	%rd19228, %rd19227, %rd19189;
	not.b64 	%rd19229, %rd19191;
	and.b64  	%rd19230, %rd19192, %rd19229;
	xor.b64  	%rd19231, %rd19230, %rd19190;
	not.b64 	%rd19232, %rd19192;
	and.b64  	%rd19233, %rd19188, %rd19232;
	xor.b64  	%rd19234, %rd19233, %rd19191;
	not.b64 	%rd19235, %rd19188;
	and.b64  	%rd19236, %rd19189, %rd19235;
	xor.b64  	%rd19237, %rd19236, %rd19192;
	not.b64 	%rd19238, %rd19194;
	and.b64  	%rd19239, %rd19195, %rd19238;
	xor.b64  	%rd19240, %rd19239, %rd19193;
	not.b64 	%rd19241, %rd19195;
	and.b64  	%rd19242, %rd19196, %rd19241;
	xor.b64  	%rd19243, %rd19242, %rd19194;
	not.b64 	%rd19244, %rd19196;
	and.b64  	%rd19245, %rd19197, %rd19244;
	xor.b64  	%rd19246, %rd19245, %rd19195;
	not.b64 	%rd19247, %rd19197;
	and.b64  	%rd19248, %rd19193, %rd19247;
	xor.b64  	%rd19249, %rd19248, %rd19196;
	not.b64 	%rd19250, %rd19193;
	and.b64  	%rd19251, %rd19194, %rd19250;
	xor.b64  	%rd19252, %rd19251, %rd19197;
	not.b64 	%rd19253, %rd19199;
	and.b64  	%rd19254, %rd19200, %rd19253;
	xor.b64  	%rd19255, %rd19254, %rd19198;
	not.b64 	%rd19256, %rd19200;
	and.b64  	%rd19257, %rd19201, %rd19256;
	xor.b64  	%rd19258, %rd19257, %rd19199;
	not.b64 	%rd19259, %rd19201;
	and.b64  	%rd19260, %rd19202, %rd19259;
	xor.b64  	%rd19261, %rd19260, %rd19200;
	not.b64 	%rd19262, %rd19202;
	and.b64  	%rd19263, %rd19198, %rd19262;
	xor.b64  	%rd19264, %rd19263, %rd19201;
	not.b64 	%rd19265, %rd19198;
	and.b64  	%rd19266, %rd19199, %rd19265;
	xor.b64  	%rd19267, %rd19266, %rd19202;
	not.b64 	%rd19268, %rd19204;
	and.b64  	%rd19269, %rd19205, %rd19268;
	xor.b64  	%rd19270, %rd19269, %rd19203;
	not.b64 	%rd19271, %rd19205;
	and.b64  	%rd19272, %rd19206, %rd19271;
	xor.b64  	%rd19273, %rd19272, %rd19204;
	not.b64 	%rd19274, %rd19206;
	and.b64  	%rd19275, %rd19207, %rd19274;
	xor.b64  	%rd19276, %rd19275, %rd19205;
	not.b64 	%rd19277, %rd19207;
	and.b64  	%rd19278, %rd19203, %rd19277;
	xor.b64  	%rd19279, %rd19278, %rd19206;
	not.b64 	%rd19280, %rd19203;
	and.b64  	%rd19281, %rd19204, %rd19280;
	xor.b64  	%rd19282, %rd19281, %rd19207;
	xor.b64  	%rd19283, %rd19210, %rd37;
	xor.b64  	%rd19284, %rd19225, %rd19283;
	xor.b64  	%rd19285, %rd19284, %rd19240;
	xor.b64  	%rd19286, %rd19285, %rd19255;
	xor.b64  	%rd19287, %rd19286, %rd19270;
	xor.b64  	%rd19288, %rd19228, %rd19213;
	xor.b64  	%rd19289, %rd19288, %rd19243;
	xor.b64  	%rd19290, %rd19289, %rd19258;
	xor.b64  	%rd19291, %rd19290, %rd19273;
	xor.b64  	%rd19292, %rd19231, %rd19216;
	xor.b64  	%rd19293, %rd19292, %rd19246;
	xor.b64  	%rd19294, %rd19293, %rd19261;
	xor.b64  	%rd19295, %rd19294, %rd19276;
	xor.b64  	%rd19296, %rd19234, %rd19219;
	xor.b64  	%rd19297, %rd19296, %rd19249;
	xor.b64  	%rd19298, %rd19297, %rd19264;
	xor.b64  	%rd19299, %rd19298, %rd19279;
	xor.b64  	%rd19300, %rd19237, %rd19222;
	xor.b64  	%rd19301, %rd19300, %rd19252;
	xor.b64  	%rd19302, %rd19301, %rd19267;
	xor.b64  	%rd19303, %rd19302, %rd19282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13774}, %rd19291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13775,%dummy}, %rd19291;
	}
	shf.l.wrap.b32 	%r13776, %r13775, %r13774, 1;
	shf.l.wrap.b32 	%r13777, %r13774, %r13775, 1;
	mov.b64 	%rd19304, {%r13777, %r13776};
	xor.b64  	%rd19305, %rd19303, %rd19304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13778}, %rd19295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13779,%dummy}, %rd19295;
	}
	shf.l.wrap.b32 	%r13780, %r13779, %r13778, 1;
	shf.l.wrap.b32 	%r13781, %r13778, %r13779, 1;
	mov.b64 	%rd19306, {%r13781, %r13780};
	xor.b64  	%rd19307, %rd19306, %rd19287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13782}, %rd19299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13783,%dummy}, %rd19299;
	}
	shf.l.wrap.b32 	%r13784, %r13783, %r13782, 1;
	shf.l.wrap.b32 	%r13785, %r13782, %r13783, 1;
	mov.b64 	%rd19308, {%r13785, %r13784};
	xor.b64  	%rd19309, %rd19308, %rd19291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13786}, %rd19303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13787,%dummy}, %rd19303;
	}
	shf.l.wrap.b32 	%r13788, %r13787, %r13786, 1;
	shf.l.wrap.b32 	%r13789, %r13786, %r13787, 1;
	mov.b64 	%rd19310, {%r13789, %r13788};
	xor.b64  	%rd19311, %rd19310, %rd19295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13790}, %rd19287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13791,%dummy}, %rd19287;
	}
	shf.l.wrap.b32 	%r13792, %r13791, %r13790, 1;
	shf.l.wrap.b32 	%r13793, %r13790, %r13791, 1;
	mov.b64 	%rd19312, {%r13793, %r13792};
	xor.b64  	%rd19313, %rd19299, %rd19312;
	xor.b64  	%rd19314, %rd19305, %rd19283;
	xor.b64  	%rd19315, %rd19307, %rd19213;
	xor.b64  	%rd19316, %rd19309, %rd19216;
	xor.b64  	%rd19317, %rd19311, %rd19219;
	xor.b64  	%rd19318, %rd19313, %rd19222;
	xor.b64  	%rd19319, %rd19305, %rd19225;
	xor.b64  	%rd19320, %rd19307, %rd19228;
	xor.b64  	%rd19321, %rd19309, %rd19231;
	xor.b64  	%rd19322, %rd19311, %rd19234;
	xor.b64  	%rd19323, %rd19313, %rd19237;
	xor.b64  	%rd19324, %rd19305, %rd19240;
	xor.b64  	%rd19325, %rd19307, %rd19243;
	xor.b64  	%rd19326, %rd19309, %rd19246;
	xor.b64  	%rd19327, %rd19311, %rd19249;
	xor.b64  	%rd19328, %rd19313, %rd19252;
	xor.b64  	%rd19329, %rd19305, %rd19255;
	xor.b64  	%rd19330, %rd19307, %rd19258;
	xor.b64  	%rd19331, %rd19309, %rd19261;
	xor.b64  	%rd19332, %rd19311, %rd19264;
	xor.b64  	%rd19333, %rd19313, %rd19267;
	xor.b64  	%rd19334, %rd19305, %rd19270;
	xor.b64  	%rd19335, %rd19307, %rd19273;
	xor.b64  	%rd19336, %rd19309, %rd19276;
	xor.b64  	%rd19337, %rd19311, %rd19279;
	xor.b64  	%rd19338, %rd19313, %rd19282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13794,%dummy}, %rd19320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13795}, %rd19320;
	}
	shf.r.wrap.b32 	%r13796, %r13795, %r13794, 20;
	shf.r.wrap.b32 	%r13797, %r13794, %r13795, 20;
	mov.b64 	%rd19339, {%r13797, %r13796};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13798,%dummy}, %rd19326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13799}, %rd19326;
	}
	shf.r.wrap.b32 	%r13800, %r13799, %r13798, 21;
	shf.r.wrap.b32 	%r13801, %r13798, %r13799, 21;
	mov.b64 	%rd19340, {%r13801, %r13800};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13802}, %rd19332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13803,%dummy}, %rd19332;
	}
	shf.l.wrap.b32 	%r13804, %r13803, %r13802, 21;
	shf.l.wrap.b32 	%r13805, %r13802, %r13803, 21;
	mov.b64 	%rd19341, {%r13805, %r13804};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13806}, %rd19338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13807,%dummy}, %rd19338;
	}
	shf.l.wrap.b32 	%r13808, %r13807, %r13806, 14;
	shf.l.wrap.b32 	%r13809, %r13806, %r13807, 14;
	mov.b64 	%rd19342, {%r13809, %r13808};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13810}, %rd19317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13811,%dummy}, %rd19317;
	}
	shf.l.wrap.b32 	%r13812, %r13811, %r13810, 28;
	shf.l.wrap.b32 	%r13813, %r13810, %r13811, 28;
	mov.b64 	%rd19343, {%r13813, %r13812};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13814}, %rd19323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13815,%dummy}, %rd19323;
	}
	shf.l.wrap.b32 	%r13816, %r13815, %r13814, 20;
	shf.l.wrap.b32 	%r13817, %r13814, %r13815, 20;
	mov.b64 	%rd19344, {%r13817, %r13816};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13818}, %rd19324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13819,%dummy}, %rd19324;
	}
	shf.l.wrap.b32 	%r13820, %r13819, %r13818, 3;
	shf.l.wrap.b32 	%r13821, %r13818, %r13819, 3;
	mov.b64 	%rd19345, {%r13821, %r13820};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13822,%dummy}, %rd19330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13823}, %rd19330;
	}
	shf.r.wrap.b32 	%r13824, %r13823, %r13822, 19;
	shf.r.wrap.b32 	%r13825, %r13822, %r13823, 19;
	mov.b64 	%rd19346, {%r13825, %r13824};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13826,%dummy}, %rd19336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13827}, %rd19336;
	}
	shf.r.wrap.b32 	%r13828, %r13827, %r13826, 3;
	shf.r.wrap.b32 	%r13829, %r13826, %r13827, 3;
	mov.b64 	%rd19347, {%r13829, %r13828};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13830}, %rd19315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13831,%dummy}, %rd19315;
	}
	shf.l.wrap.b32 	%r13832, %r13831, %r13830, 1;
	shf.l.wrap.b32 	%r13833, %r13830, %r13831, 1;
	mov.b64 	%rd19348, {%r13833, %r13832};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13834}, %rd19321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13835,%dummy}, %rd19321;
	}
	shf.l.wrap.b32 	%r13836, %r13835, %r13834, 6;
	shf.l.wrap.b32 	%r13837, %r13834, %r13835, 6;
	mov.b64 	%rd19349, {%r13837, %r13836};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13838}, %rd19327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13839,%dummy}, %rd19327;
	}
	shf.l.wrap.b32 	%r13840, %r13839, %r13838, 25;
	shf.l.wrap.b32 	%r13841, %r13838, %r13839, 25;
	mov.b64 	%rd19350, {%r13841, %r13840};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13842}, %rd19333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13843,%dummy}, %rd19333;
	}
	shf.l.wrap.b32 	%r13844, %r13843, %r13842, 8;
	shf.l.wrap.b32 	%r13845, %r13842, %r13843, 8;
	mov.b64 	%rd19351, {%r13845, %r13844};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13846}, %rd19334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13847,%dummy}, %rd19334;
	}
	shf.l.wrap.b32 	%r13848, %r13847, %r13846, 18;
	shf.l.wrap.b32 	%r13849, %r13846, %r13847, 18;
	mov.b64 	%rd19352, {%r13849, %r13848};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13850}, %rd19318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13851,%dummy}, %rd19318;
	}
	shf.l.wrap.b32 	%r13852, %r13851, %r13850, 27;
	shf.l.wrap.b32 	%r13853, %r13850, %r13851, 27;
	mov.b64 	%rd19353, {%r13853, %r13852};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13854,%dummy}, %rd19319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13855}, %rd19319;
	}
	shf.r.wrap.b32 	%r13856, %r13855, %r13854, 28;
	shf.r.wrap.b32 	%r13857, %r13854, %r13855, 28;
	mov.b64 	%rd19354, {%r13857, %r13856};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13858}, %rd19325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13859,%dummy}, %rd19325;
	}
	shf.l.wrap.b32 	%r13860, %r13859, %r13858, 10;
	shf.l.wrap.b32 	%r13861, %r13858, %r13859, 10;
	mov.b64 	%rd19355, {%r13861, %r13860};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13862}, %rd19331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13863,%dummy}, %rd19331;
	}
	shf.l.wrap.b32 	%r13864, %r13863, %r13862, 15;
	shf.l.wrap.b32 	%r13865, %r13862, %r13863, 15;
	mov.b64 	%rd19356, {%r13865, %r13864};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13866,%dummy}, %rd19337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13867}, %rd19337;
	}
	shf.r.wrap.b32 	%r13868, %r13867, %r13866, 8;
	shf.r.wrap.b32 	%r13869, %r13866, %r13867, 8;
	mov.b64 	%rd19357, {%r13869, %r13868};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13870,%dummy}, %rd19316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13871}, %rd19316;
	}
	shf.r.wrap.b32 	%r13872, %r13871, %r13870, 2;
	shf.r.wrap.b32 	%r13873, %r13870, %r13871, 2;
	mov.b64 	%rd19358, {%r13873, %r13872};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13874,%dummy}, %rd19322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13875}, %rd19322;
	}
	shf.r.wrap.b32 	%r13876, %r13875, %r13874, 9;
	shf.r.wrap.b32 	%r13877, %r13874, %r13875, 9;
	mov.b64 	%rd19359, {%r13877, %r13876};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13878,%dummy}, %rd19328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13879}, %rd19328;
	}
	shf.r.wrap.b32 	%r13880, %r13879, %r13878, 25;
	shf.r.wrap.b32 	%r13881, %r13878, %r13879, 25;
	mov.b64 	%rd19360, {%r13881, %r13880};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13882,%dummy}, %rd19329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13883}, %rd19329;
	}
	shf.r.wrap.b32 	%r13884, %r13883, %r13882, 23;
	shf.r.wrap.b32 	%r13885, %r13882, %r13883, 23;
	mov.b64 	%rd19361, {%r13885, %r13884};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13886}, %rd19335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13887,%dummy}, %rd19335;
	}
	shf.l.wrap.b32 	%r13888, %r13887, %r13886, 2;
	shf.l.wrap.b32 	%r13889, %r13886, %r13887, 2;
	mov.b64 	%rd19362, {%r13889, %r13888};
	not.b64 	%rd19363, %rd19339;
	and.b64  	%rd19364, %rd19340, %rd19363;
	xor.b64  	%rd19365, %rd19364, %rd19314;
	not.b64 	%rd19366, %rd19340;
	and.b64  	%rd19367, %rd19341, %rd19366;
	xor.b64  	%rd19368, %rd19367, %rd19339;
	not.b64 	%rd19369, %rd19341;
	and.b64  	%rd19370, %rd19342, %rd19369;
	xor.b64  	%rd19371, %rd19370, %rd19340;
	not.b64 	%rd19372, %rd19342;
	and.b64  	%rd19373, %rd19314, %rd19372;
	xor.b64  	%rd19374, %rd19373, %rd19341;
	not.b64 	%rd19375, %rd19314;
	and.b64  	%rd19376, %rd19339, %rd19375;
	xor.b64  	%rd19377, %rd19376, %rd19342;
	not.b64 	%rd19378, %rd19344;
	and.b64  	%rd19379, %rd19345, %rd19378;
	xor.b64  	%rd19380, %rd19379, %rd19343;
	not.b64 	%rd19381, %rd19345;
	and.b64  	%rd19382, %rd19346, %rd19381;
	xor.b64  	%rd19383, %rd19382, %rd19344;
	not.b64 	%rd19384, %rd19346;
	and.b64  	%rd19385, %rd19347, %rd19384;
	xor.b64  	%rd19386, %rd19385, %rd19345;
	not.b64 	%rd19387, %rd19347;
	and.b64  	%rd19388, %rd19343, %rd19387;
	xor.b64  	%rd19389, %rd19388, %rd19346;
	not.b64 	%rd19390, %rd19343;
	and.b64  	%rd19391, %rd19344, %rd19390;
	xor.b64  	%rd19392, %rd19391, %rd19347;
	not.b64 	%rd19393, %rd19349;
	and.b64  	%rd19394, %rd19350, %rd19393;
	xor.b64  	%rd19395, %rd19394, %rd19348;
	not.b64 	%rd19396, %rd19350;
	and.b64  	%rd19397, %rd19351, %rd19396;
	xor.b64  	%rd19398, %rd19397, %rd19349;
	not.b64 	%rd19399, %rd19351;
	and.b64  	%rd19400, %rd19352, %rd19399;
	xor.b64  	%rd19401, %rd19400, %rd19350;
	not.b64 	%rd19402, %rd19352;
	and.b64  	%rd19403, %rd19348, %rd19402;
	xor.b64  	%rd19404, %rd19403, %rd19351;
	not.b64 	%rd19405, %rd19348;
	and.b64  	%rd19406, %rd19349, %rd19405;
	xor.b64  	%rd19407, %rd19406, %rd19352;
	not.b64 	%rd19408, %rd19354;
	and.b64  	%rd19409, %rd19355, %rd19408;
	xor.b64  	%rd19410, %rd19409, %rd19353;
	not.b64 	%rd19411, %rd19355;
	and.b64  	%rd19412, %rd19356, %rd19411;
	xor.b64  	%rd19413, %rd19412, %rd19354;
	not.b64 	%rd19414, %rd19356;
	and.b64  	%rd19415, %rd19357, %rd19414;
	xor.b64  	%rd19416, %rd19415, %rd19355;
	not.b64 	%rd19417, %rd19357;
	and.b64  	%rd19418, %rd19353, %rd19417;
	xor.b64  	%rd19419, %rd19418, %rd19356;
	not.b64 	%rd19420, %rd19353;
	and.b64  	%rd19421, %rd19354, %rd19420;
	xor.b64  	%rd19422, %rd19421, %rd19357;
	not.b64 	%rd19423, %rd19359;
	and.b64  	%rd19424, %rd19360, %rd19423;
	xor.b64  	%rd19425, %rd19424, %rd19358;
	not.b64 	%rd19426, %rd19360;
	and.b64  	%rd19427, %rd19361, %rd19426;
	xor.b64  	%rd19428, %rd19427, %rd19359;
	not.b64 	%rd19429, %rd19361;
	and.b64  	%rd19430, %rd19362, %rd19429;
	xor.b64  	%rd19431, %rd19430, %rd19360;
	not.b64 	%rd19432, %rd19362;
	and.b64  	%rd19433, %rd19358, %rd19432;
	xor.b64  	%rd19434, %rd19433, %rd19361;
	not.b64 	%rd19435, %rd19358;
	and.b64  	%rd19436, %rd19359, %rd19435;
	xor.b64  	%rd19437, %rd19436, %rd19362;
	xor.b64  	%rd19438, %rd19365, %rd38;
	xor.b64  	%rd19439, %rd19380, %rd19438;
	xor.b64  	%rd19440, %rd19439, %rd19395;
	xor.b64  	%rd19441, %rd19440, %rd19410;
	xor.b64  	%rd19442, %rd19441, %rd19425;
	xor.b64  	%rd19443, %rd19383, %rd19368;
	xor.b64  	%rd19444, %rd19443, %rd19398;
	xor.b64  	%rd19445, %rd19444, %rd19413;
	xor.b64  	%rd19446, %rd19445, %rd19428;
	xor.b64  	%rd19447, %rd19386, %rd19371;
	xor.b64  	%rd19448, %rd19447, %rd19401;
	xor.b64  	%rd19449, %rd19448, %rd19416;
	xor.b64  	%rd19450, %rd19449, %rd19431;
	xor.b64  	%rd19451, %rd19389, %rd19374;
	xor.b64  	%rd19452, %rd19451, %rd19404;
	xor.b64  	%rd19453, %rd19452, %rd19419;
	xor.b64  	%rd19454, %rd19453, %rd19434;
	xor.b64  	%rd19455, %rd19392, %rd19377;
	xor.b64  	%rd19456, %rd19455, %rd19407;
	xor.b64  	%rd19457, %rd19456, %rd19422;
	xor.b64  	%rd19458, %rd19457, %rd19437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13890}, %rd19446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13891,%dummy}, %rd19446;
	}
	shf.l.wrap.b32 	%r13892, %r13891, %r13890, 1;
	shf.l.wrap.b32 	%r13893, %r13890, %r13891, 1;
	mov.b64 	%rd19459, {%r13893, %r13892};
	xor.b64  	%rd19460, %rd19458, %rd19459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13894}, %rd19450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13895,%dummy}, %rd19450;
	}
	shf.l.wrap.b32 	%r13896, %r13895, %r13894, 1;
	shf.l.wrap.b32 	%r13897, %r13894, %r13895, 1;
	mov.b64 	%rd19461, {%r13897, %r13896};
	xor.b64  	%rd19462, %rd19461, %rd19442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13898}, %rd19454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13899,%dummy}, %rd19454;
	}
	shf.l.wrap.b32 	%r13900, %r13899, %r13898, 1;
	shf.l.wrap.b32 	%r13901, %r13898, %r13899, 1;
	mov.b64 	%rd19463, {%r13901, %r13900};
	xor.b64  	%rd19464, %rd19463, %rd19446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13902}, %rd19458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13903,%dummy}, %rd19458;
	}
	shf.l.wrap.b32 	%r13904, %r13903, %r13902, 1;
	shf.l.wrap.b32 	%r13905, %r13902, %r13903, 1;
	mov.b64 	%rd19465, {%r13905, %r13904};
	xor.b64  	%rd19466, %rd19465, %rd19450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13906}, %rd19442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13907,%dummy}, %rd19442;
	}
	shf.l.wrap.b32 	%r13908, %r13907, %r13906, 1;
	shf.l.wrap.b32 	%r13909, %r13906, %r13907, 1;
	mov.b64 	%rd19467, {%r13909, %r13908};
	xor.b64  	%rd19468, %rd19454, %rd19467;
	xor.b64  	%rd19469, %rd19460, %rd19438;
	xor.b64  	%rd19470, %rd19462, %rd19368;
	xor.b64  	%rd19471, %rd19464, %rd19371;
	xor.b64  	%rd19472, %rd19466, %rd19374;
	xor.b64  	%rd19473, %rd19468, %rd19377;
	xor.b64  	%rd19474, %rd19460, %rd19380;
	xor.b64  	%rd19475, %rd19462, %rd19383;
	xor.b64  	%rd19476, %rd19464, %rd19386;
	xor.b64  	%rd19477, %rd19466, %rd19389;
	xor.b64  	%rd19478, %rd19468, %rd19392;
	xor.b64  	%rd19479, %rd19460, %rd19395;
	xor.b64  	%rd19480, %rd19462, %rd19398;
	xor.b64  	%rd19481, %rd19464, %rd19401;
	xor.b64  	%rd19482, %rd19466, %rd19404;
	xor.b64  	%rd19483, %rd19468, %rd19407;
	xor.b64  	%rd19484, %rd19460, %rd19410;
	xor.b64  	%rd19485, %rd19462, %rd19413;
	xor.b64  	%rd19486, %rd19464, %rd19416;
	xor.b64  	%rd19487, %rd19466, %rd19419;
	xor.b64  	%rd19488, %rd19468, %rd19422;
	xor.b64  	%rd19489, %rd19460, %rd19425;
	xor.b64  	%rd19490, %rd19462, %rd19428;
	xor.b64  	%rd19491, %rd19464, %rd19431;
	xor.b64  	%rd19492, %rd19466, %rd19434;
	xor.b64  	%rd19493, %rd19468, %rd19437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13910,%dummy}, %rd19475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13911}, %rd19475;
	}
	shf.r.wrap.b32 	%r13912, %r13911, %r13910, 20;
	shf.r.wrap.b32 	%r13913, %r13910, %r13911, 20;
	mov.b64 	%rd19494, {%r13913, %r13912};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13914,%dummy}, %rd19481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13915}, %rd19481;
	}
	shf.r.wrap.b32 	%r13916, %r13915, %r13914, 21;
	shf.r.wrap.b32 	%r13917, %r13914, %r13915, 21;
	mov.b64 	%rd19495, {%r13917, %r13916};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13918}, %rd19487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13919,%dummy}, %rd19487;
	}
	shf.l.wrap.b32 	%r13920, %r13919, %r13918, 21;
	shf.l.wrap.b32 	%r13921, %r13918, %r13919, 21;
	mov.b64 	%rd19496, {%r13921, %r13920};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13922}, %rd19493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13923,%dummy}, %rd19493;
	}
	shf.l.wrap.b32 	%r13924, %r13923, %r13922, 14;
	shf.l.wrap.b32 	%r13925, %r13922, %r13923, 14;
	mov.b64 	%rd19497, {%r13925, %r13924};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13926}, %rd19472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13927,%dummy}, %rd19472;
	}
	shf.l.wrap.b32 	%r13928, %r13927, %r13926, 28;
	shf.l.wrap.b32 	%r13929, %r13926, %r13927, 28;
	mov.b64 	%rd19498, {%r13929, %r13928};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13930}, %rd19478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13931,%dummy}, %rd19478;
	}
	shf.l.wrap.b32 	%r13932, %r13931, %r13930, 20;
	shf.l.wrap.b32 	%r13933, %r13930, %r13931, 20;
	mov.b64 	%rd19499, {%r13933, %r13932};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13934}, %rd19479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13935,%dummy}, %rd19479;
	}
	shf.l.wrap.b32 	%r13936, %r13935, %r13934, 3;
	shf.l.wrap.b32 	%r13937, %r13934, %r13935, 3;
	mov.b64 	%rd19500, {%r13937, %r13936};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13938,%dummy}, %rd19485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13939}, %rd19485;
	}
	shf.r.wrap.b32 	%r13940, %r13939, %r13938, 19;
	shf.r.wrap.b32 	%r13941, %r13938, %r13939, 19;
	mov.b64 	%rd19501, {%r13941, %r13940};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13942,%dummy}, %rd19491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13943}, %rd19491;
	}
	shf.r.wrap.b32 	%r13944, %r13943, %r13942, 3;
	shf.r.wrap.b32 	%r13945, %r13942, %r13943, 3;
	mov.b64 	%rd19502, {%r13945, %r13944};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13946}, %rd19470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13947,%dummy}, %rd19470;
	}
	shf.l.wrap.b32 	%r13948, %r13947, %r13946, 1;
	shf.l.wrap.b32 	%r13949, %r13946, %r13947, 1;
	mov.b64 	%rd19503, {%r13949, %r13948};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13950}, %rd19476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13951,%dummy}, %rd19476;
	}
	shf.l.wrap.b32 	%r13952, %r13951, %r13950, 6;
	shf.l.wrap.b32 	%r13953, %r13950, %r13951, 6;
	mov.b64 	%rd19504, {%r13953, %r13952};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13954}, %rd19482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13955,%dummy}, %rd19482;
	}
	shf.l.wrap.b32 	%r13956, %r13955, %r13954, 25;
	shf.l.wrap.b32 	%r13957, %r13954, %r13955, 25;
	mov.b64 	%rd19505, {%r13957, %r13956};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13958}, %rd19488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13959,%dummy}, %rd19488;
	}
	shf.l.wrap.b32 	%r13960, %r13959, %r13958, 8;
	shf.l.wrap.b32 	%r13961, %r13958, %r13959, 8;
	mov.b64 	%rd19506, {%r13961, %r13960};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13962}, %rd19489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13963,%dummy}, %rd19489;
	}
	shf.l.wrap.b32 	%r13964, %r13963, %r13962, 18;
	shf.l.wrap.b32 	%r13965, %r13962, %r13963, 18;
	mov.b64 	%rd19507, {%r13965, %r13964};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13966}, %rd19473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13967,%dummy}, %rd19473;
	}
	shf.l.wrap.b32 	%r13968, %r13967, %r13966, 27;
	shf.l.wrap.b32 	%r13969, %r13966, %r13967, 27;
	mov.b64 	%rd19508, {%r13969, %r13968};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13970,%dummy}, %rd19474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13971}, %rd19474;
	}
	shf.r.wrap.b32 	%r13972, %r13971, %r13970, 28;
	shf.r.wrap.b32 	%r13973, %r13970, %r13971, 28;
	mov.b64 	%rd19509, {%r13973, %r13972};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13974}, %rd19480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13975,%dummy}, %rd19480;
	}
	shf.l.wrap.b32 	%r13976, %r13975, %r13974, 10;
	shf.l.wrap.b32 	%r13977, %r13974, %r13975, 10;
	mov.b64 	%rd19510, {%r13977, %r13976};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13978}, %rd19486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13979,%dummy}, %rd19486;
	}
	shf.l.wrap.b32 	%r13980, %r13979, %r13978, 15;
	shf.l.wrap.b32 	%r13981, %r13978, %r13979, 15;
	mov.b64 	%rd19511, {%r13981, %r13980};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13982,%dummy}, %rd19492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13983}, %rd19492;
	}
	shf.r.wrap.b32 	%r13984, %r13983, %r13982, 8;
	shf.r.wrap.b32 	%r13985, %r13982, %r13983, 8;
	mov.b64 	%rd19512, {%r13985, %r13984};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13986,%dummy}, %rd19471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13987}, %rd19471;
	}
	shf.r.wrap.b32 	%r13988, %r13987, %r13986, 2;
	shf.r.wrap.b32 	%r13989, %r13986, %r13987, 2;
	mov.b64 	%rd19513, {%r13989, %r13988};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13990,%dummy}, %rd19477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13991}, %rd19477;
	}
	shf.r.wrap.b32 	%r13992, %r13991, %r13990, 9;
	shf.r.wrap.b32 	%r13993, %r13990, %r13991, 9;
	mov.b64 	%rd19514, {%r13993, %r13992};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13994,%dummy}, %rd19483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13995}, %rd19483;
	}
	shf.r.wrap.b32 	%r13996, %r13995, %r13994, 25;
	shf.r.wrap.b32 	%r13997, %r13994, %r13995, 25;
	mov.b64 	%rd19515, {%r13997, %r13996};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13998,%dummy}, %rd19484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13999}, %rd19484;
	}
	shf.r.wrap.b32 	%r14000, %r13999, %r13998, 23;
	shf.r.wrap.b32 	%r14001, %r13998, %r13999, 23;
	mov.b64 	%rd19516, {%r14001, %r14000};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14002}, %rd19490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14003,%dummy}, %rd19490;
	}
	shf.l.wrap.b32 	%r14004, %r14003, %r14002, 2;
	shf.l.wrap.b32 	%r14005, %r14002, %r14003, 2;
	mov.b64 	%rd19517, {%r14005, %r14004};
	not.b64 	%rd19518, %rd19494;
	and.b64  	%rd19519, %rd19495, %rd19518;
	xor.b64  	%rd19520, %rd19519, %rd19469;
	not.b64 	%rd19521, %rd19495;
	and.b64  	%rd19522, %rd19496, %rd19521;
	xor.b64  	%rd19523, %rd19522, %rd19494;
	st.local.u64 	[%rd2+8], %rd19523;
	not.b64 	%rd19524, %rd19496;
	and.b64  	%rd19525, %rd19497, %rd19524;
	xor.b64  	%rd19526, %rd19525, %rd19495;
	st.local.u64 	[%rd2+16], %rd19526;
	not.b64 	%rd19527, %rd19497;
	and.b64  	%rd19528, %rd19469, %rd19527;
	xor.b64  	%rd19529, %rd19528, %rd19496;
	st.local.u64 	[%rd2+24], %rd19529;
	not.b64 	%rd19530, %rd19469;
	and.b64  	%rd19531, %rd19494, %rd19530;
	xor.b64  	%rd19532, %rd19531, %rd19497;
	st.local.u64 	[%rd2+32], %rd19532;
	not.b64 	%rd19533, %rd19499;
	and.b64  	%rd19534, %rd19500, %rd19533;
	xor.b64  	%rd19535, %rd19534, %rd19498;
	st.local.u64 	[%rd2+40], %rd19535;
	not.b64 	%rd19536, %rd19500;
	and.b64  	%rd19537, %rd19501, %rd19536;
	xor.b64  	%rd19538, %rd19537, %rd19499;
	st.local.u64 	[%rd2+48], %rd19538;
	not.b64 	%rd19539, %rd19501;
	and.b64  	%rd19540, %rd19502, %rd19539;
	xor.b64  	%rd19541, %rd19540, %rd19500;
	st.local.u64 	[%rd2+56], %rd19541;
	not.b64 	%rd19542, %rd19502;
	and.b64  	%rd19543, %rd19498, %rd19542;
	xor.b64  	%rd19544, %rd19543, %rd19501;
	st.local.u64 	[%rd2+64], %rd19544;
	not.b64 	%rd19545, %rd19498;
	and.b64  	%rd19546, %rd19499, %rd19545;
	xor.b64  	%rd19547, %rd19546, %rd19502;
	st.local.u64 	[%rd2+72], %rd19547;
	not.b64 	%rd19548, %rd19504;
	and.b64  	%rd19549, %rd19505, %rd19548;
	xor.b64  	%rd19550, %rd19549, %rd19503;
	st.local.u64 	[%rd2+80], %rd19550;
	not.b64 	%rd19551, %rd19505;
	and.b64  	%rd19552, %rd19506, %rd19551;
	xor.b64  	%rd19553, %rd19552, %rd19504;
	st.local.u64 	[%rd2+88], %rd19553;
	not.b64 	%rd19554, %rd19506;
	and.b64  	%rd19555, %rd19507, %rd19554;
	xor.b64  	%rd19556, %rd19555, %rd19505;
	st.local.u64 	[%rd2+96], %rd19556;
	not.b64 	%rd19557, %rd19507;
	and.b64  	%rd19558, %rd19503, %rd19557;
	xor.b64  	%rd19559, %rd19558, %rd19506;
	st.local.u64 	[%rd2+104], %rd19559;
	not.b64 	%rd19560, %rd19503;
	and.b64  	%rd19561, %rd19504, %rd19560;
	xor.b64  	%rd19562, %rd19561, %rd19507;
	st.local.u64 	[%rd2+112], %rd19562;
	not.b64 	%rd19563, %rd19509;
	and.b64  	%rd19564, %rd19510, %rd19563;
	xor.b64  	%rd19565, %rd19564, %rd19508;
	st.local.u64 	[%rd2+120], %rd19565;
	not.b64 	%rd19566, %rd19510;
	and.b64  	%rd19567, %rd19511, %rd19566;
	xor.b64  	%rd19568, %rd19567, %rd19509;
	st.local.u64 	[%rd2+128], %rd19568;
	not.b64 	%rd19569, %rd19511;
	and.b64  	%rd19570, %rd19512, %rd19569;
	xor.b64  	%rd19571, %rd19570, %rd19510;
	st.local.u64 	[%rd2+136], %rd19571;
	not.b64 	%rd19572, %rd19512;
	and.b64  	%rd19573, %rd19508, %rd19572;
	xor.b64  	%rd19574, %rd19573, %rd19511;
	st.local.u64 	[%rd2+144], %rd19574;
	not.b64 	%rd19575, %rd19508;
	and.b64  	%rd19576, %rd19509, %rd19575;
	xor.b64  	%rd19577, %rd19576, %rd19512;
	st.local.u64 	[%rd2+152], %rd19577;
	not.b64 	%rd19578, %rd19514;
	and.b64  	%rd19579, %rd19515, %rd19578;
	xor.b64  	%rd19580, %rd19579, %rd19513;
	st.local.u64 	[%rd2+160], %rd19580;
	not.b64 	%rd19581, %rd19515;
	and.b64  	%rd19582, %rd19516, %rd19581;
	xor.b64  	%rd19583, %rd19582, %rd19514;
	st.local.u64 	[%rd2+168], %rd19583;
	not.b64 	%rd19584, %rd19516;
	and.b64  	%rd19585, %rd19517, %rd19584;
	xor.b64  	%rd19586, %rd19585, %rd19515;
	st.local.u64 	[%rd2+176], %rd19586;
	not.b64 	%rd19587, %rd19517;
	and.b64  	%rd19588, %rd19513, %rd19587;
	xor.b64  	%rd19589, %rd19588, %rd19516;
	st.local.u64 	[%rd2+184], %rd19589;
	not.b64 	%rd19590, %rd19513;
	and.b64  	%rd19591, %rd19514, %rd19590;
	xor.b64  	%rd19592, %rd19591, %rd19517;
	st.local.u64 	[%rd2+192], %rd19592;
	xor.b64  	%rd19593, %rd19520, %rd39;
	st.local.u64 	[%rd2], %rd19593;
	@%p39 bra 	$L__BB2_63;

	add.s64 	%rd19595, %rd130, -1;
	setp.lt.u64 	%p47, %rd19595, 3;
	mov.u32 	%r14040, 0;
	@%p47 bra 	$L__BB2_59;

	bfe.u64 	%rd19597, %rd7995, 6, 2;
	sub.s64 	%rd19865, %rd130, %rd19597;

$L__BB2_58:
	mul.wide.s32 	%rd19598, %r14040, 8;
	add.s64 	%rd19599, %rd2, %rd19598;
	ld.local.u8 	%rd19600, [%rd19599];
	ld.local.u8 	%rd19601, [%rd19599+1];
	bfi.b64 	%rd19602, %rd19601, %rd19600, 8, 8;
	ld.local.u8 	%rd19603, [%rd19599+2];
	ld.local.u8 	%rd19604, [%rd19599+3];
	bfi.b64 	%rd19605, %rd19604, %rd19603, 8, 8;
	bfi.b64 	%rd19606, %rd19605, %rd19602, 16, 16;
	ld.local.u8 	%rd19607, [%rd19599+4];
	ld.local.u8 	%rd19608, [%rd19599+5];
	bfi.b64 	%rd19609, %rd19608, %rd19607, 8, 8;
	ld.local.u8 	%rd19610, [%rd19599+6];
	ld.local.u8 	%rd19611, [%rd19599+7];
	bfi.b64 	%rd19612, %rd19611, %rd19610, 8, 8;
	bfi.b64 	%rd19613, %rd19612, %rd19609, 16, 16;
	bfi.b64 	%rd19614, %rd19613, %rd19606, 32, 32;
	st.local.u8 	[%rd19599+200], %rd19602;
	shr.u64 	%rd19615, %rd19602, 8;
	st.local.u8 	[%rd19599+201], %rd19615;
	shr.u64 	%rd19616, %rd19606, 24;
	st.local.u8 	[%rd19599+203], %rd19616;
	shr.u64 	%rd19617, %rd19606, 16;
	st.local.u8 	[%rd19599+202], %rd19617;
	shr.u64 	%rd19618, %rd19614, 56;
	st.local.u8 	[%rd19599+207], %rd19618;
	shr.u64 	%rd19619, %rd19614, 48;
	st.local.u8 	[%rd19599+206], %rd19619;
	shr.u64 	%rd19620, %rd19614, 40;
	st.local.u8 	[%rd19599+205], %rd19620;
	shr.u64 	%rd19621, %rd19614, 32;
	st.local.u8 	[%rd19599+204], %rd19621;
	ld.local.u8 	%rd19622, [%rd19599+8];
	ld.local.u8 	%rd19623, [%rd19599+9];
	bfi.b64 	%rd19624, %rd19623, %rd19622, 8, 8;
	ld.local.u8 	%rd19625, [%rd19599+10];
	ld.local.u8 	%rd19626, [%rd19599+11];
	bfi.b64 	%rd19627, %rd19626, %rd19625, 8, 8;
	bfi.b64 	%rd19628, %rd19627, %rd19624, 16, 16;
	ld.local.u8 	%rd19629, [%rd19599+12];
	ld.local.u8 	%rd19630, [%rd19599+13];
	bfi.b64 	%rd19631, %rd19630, %rd19629, 8, 8;
	ld.local.u8 	%rd19632, [%rd19599+14];
	ld.local.u8 	%rd19633, [%rd19599+15];
	bfi.b64 	%rd19634, %rd19633, %rd19632, 8, 8;
	bfi.b64 	%rd19635, %rd19634, %rd19631, 16, 16;
	bfi.b64 	%rd19636, %rd19635, %rd19628, 32, 32;
	st.local.u8 	[%rd19599+208], %rd19624;
	shr.u64 	%rd19637, %rd19624, 8;
	st.local.u8 	[%rd19599+209], %rd19637;
	shr.u64 	%rd19638, %rd19628, 24;
	st.local.u8 	[%rd19599+211], %rd19638;
	shr.u64 	%rd19639, %rd19628, 16;
	st.local.u8 	[%rd19599+210], %rd19639;
	shr.u64 	%rd19640, %rd19636, 56;
	st.local.u8 	[%rd19599+215], %rd19640;
	shr.u64 	%rd19641, %rd19636, 48;
	st.local.u8 	[%rd19599+214], %rd19641;
	shr.u64 	%rd19642, %rd19636, 40;
	st.local.u8 	[%rd19599+213], %rd19642;
	shr.u64 	%rd19643, %rd19636, 32;
	st.local.u8 	[%rd19599+212], %rd19643;
	ld.local.u8 	%rd19644, [%rd19599+16];
	ld.local.u8 	%rd19645, [%rd19599+17];
	bfi.b64 	%rd19646, %rd19645, %rd19644, 8, 8;
	ld.local.u8 	%rd19647, [%rd19599+18];
	ld.local.u8 	%rd19648, [%rd19599+19];
	bfi.b64 	%rd19649, %rd19648, %rd19647, 8, 8;
	bfi.b64 	%rd19650, %rd19649, %rd19646, 16, 16;
	ld.local.u8 	%rd19651, [%rd19599+20];
	ld.local.u8 	%rd19652, [%rd19599+21];
	bfi.b64 	%rd19653, %rd19652, %rd19651, 8, 8;
	ld.local.u8 	%rd19654, [%rd19599+22];
	ld.local.u8 	%rd19655, [%rd19599+23];
	bfi.b64 	%rd19656, %rd19655, %rd19654, 8, 8;
	bfi.b64 	%rd19657, %rd19656, %rd19653, 16, 16;
	bfi.b64 	%rd19658, %rd19657, %rd19650, 32, 32;
	st.local.u8 	[%rd19599+216], %rd19646;
	shr.u64 	%rd19659, %rd19646, 8;
	st.local.u8 	[%rd19599+217], %rd19659;
	shr.u64 	%rd19660, %rd19650, 24;
	st.local.u8 	[%rd19599+219], %rd19660;
	shr.u64 	%rd19661, %rd19650, 16;
	st.local.u8 	[%rd19599+218], %rd19661;
	shr.u64 	%rd19662, %rd19658, 56;
	st.local.u8 	[%rd19599+223], %rd19662;
	shr.u64 	%rd19663, %rd19658, 48;
	st.local.u8 	[%rd19599+222], %rd19663;
	shr.u64 	%rd19664, %rd19658, 40;
	st.local.u8 	[%rd19599+221], %rd19664;
	shr.u64 	%rd19665, %rd19658, 32;
	st.local.u8 	[%rd19599+220], %rd19665;
	ld.local.u8 	%rd19666, [%rd19599+24];
	ld.local.u8 	%rd19667, [%rd19599+25];
	bfi.b64 	%rd19668, %rd19667, %rd19666, 8, 8;
	ld.local.u8 	%rd19669, [%rd19599+26];
	ld.local.u8 	%rd19670, [%rd19599+27];
	bfi.b64 	%rd19671, %rd19670, %rd19669, 8, 8;
	bfi.b64 	%rd19672, %rd19671, %rd19668, 16, 16;
	ld.local.u8 	%rd19673, [%rd19599+28];
	ld.local.u8 	%rd19674, [%rd19599+29];
	bfi.b64 	%rd19675, %rd19674, %rd19673, 8, 8;
	ld.local.u8 	%rd19676, [%rd19599+30];
	ld.local.u8 	%rd19677, [%rd19599+31];
	bfi.b64 	%rd19678, %rd19677, %rd19676, 8, 8;
	bfi.b64 	%rd19679, %rd19678, %rd19675, 16, 16;
	bfi.b64 	%rd19680, %rd19679, %rd19672, 32, 32;
	st.local.u8 	[%rd19599+224], %rd19668;
	shr.u64 	%rd19681, %rd19668, 8;
	st.local.u8 	[%rd19599+225], %rd19681;
	shr.u64 	%rd19682, %rd19672, 24;
	st.local.u8 	[%rd19599+227], %rd19682;
	shr.u64 	%rd19683, %rd19672, 16;
	st.local.u8 	[%rd19599+226], %rd19683;
	shr.u64 	%rd19684, %rd19680, 56;
	st.local.u8 	[%rd19599+231], %rd19684;
	shr.u64 	%rd19685, %rd19680, 48;
	st.local.u8 	[%rd19599+230], %rd19685;
	shr.u64 	%rd19686, %rd19680, 40;
	st.local.u8 	[%rd19599+229], %rd19686;
	shr.u64 	%rd19687, %rd19680, 32;
	st.local.u8 	[%rd19599+228], %rd19687;
	add.s32 	%r14040, %r14040, 4;
	add.s64 	%rd19865, %rd19865, -4;
	setp.ne.s64 	%p48, %rd19865, 0;
	@%p48 bra 	$L__BB2_58;

$L__BB2_59:
	bfe.u64 	%rd19688, %rd7995, 6, 2;
	setp.eq.s64 	%p49, %rd19688, 0;
	@%p49 bra 	$L__BB2_63;

	setp.eq.s64 	%p50, %rd19688, 1;
	mul.wide.s32 	%rd19690, %r14040, 8;
	add.s64 	%rd147, %rd2, %rd19690;
	ld.local.u8 	%rd19691, [%rd147];
	ld.local.u8 	%rd19692, [%rd147+1];
	bfi.b64 	%rd19693, %rd19692, %rd19691, 8, 8;
	ld.local.u8 	%rd19694, [%rd147+2];
	ld.local.u8 	%rd19695, [%rd147+3];
	bfi.b64 	%rd19696, %rd19695, %rd19694, 8, 8;
	bfi.b64 	%rd19697, %rd19696, %rd19693, 16, 16;
	ld.local.u8 	%rd19698, [%rd147+4];
	ld.local.u8 	%rd19699, [%rd147+5];
	bfi.b64 	%rd19700, %rd19699, %rd19698, 8, 8;
	ld.local.u8 	%rd19701, [%rd147+6];
	ld.local.u8 	%rd19702, [%rd147+7];
	bfi.b64 	%rd19703, %rd19702, %rd19701, 8, 8;
	bfi.b64 	%rd19704, %rd19703, %rd19700, 16, 16;
	bfi.b64 	%rd19705, %rd19704, %rd19697, 32, 32;
	shl.b32 	%r14008, %r14040, 3;
	cvt.s64.s32 	%rd19706, %r14008;
	add.s64 	%rd19707, %rd2, %rd19706;
	add.s64 	%rd148, %rd19707, 200;
	st.local.u8 	[%rd19707+200], %rd19693;
	shr.u64 	%rd19708, %rd19693, 8;
	st.local.u8 	[%rd19707+201], %rd19708;
	shr.u64 	%rd19709, %rd19697, 24;
	st.local.u8 	[%rd19707+203], %rd19709;
	shr.u64 	%rd19710, %rd19697, 16;
	st.local.u8 	[%rd19707+202], %rd19710;
	shr.u64 	%rd19711, %rd19705, 56;
	st.local.u8 	[%rd19707+207], %rd19711;
	shr.u64 	%rd19712, %rd19705, 48;
	st.local.u8 	[%rd19707+206], %rd19712;
	shr.u64 	%rd19713, %rd19705, 40;
	st.local.u8 	[%rd19707+205], %rd19713;
	shr.u64 	%rd19714, %rd19705, 32;
	st.local.u8 	[%rd19707+204], %rd19714;
	@%p50 bra 	$L__BB2_63;

	setp.eq.s64 	%p51, %rd19688, 2;
	ld.local.u8 	%rd19716, [%rd147+8];
	ld.local.u8 	%rd19717, [%rd147+9];
	bfi.b64 	%rd19718, %rd19717, %rd19716, 8, 8;
	ld.local.u8 	%rd19719, [%rd147+10];
	ld.local.u8 	%rd19720, [%rd147+11];
	bfi.b64 	%rd19721, %rd19720, %rd19719, 8, 8;
	bfi.b64 	%rd19722, %rd19721, %rd19718, 16, 16;
	ld.local.u8 	%rd19723, [%rd147+12];
	ld.local.u8 	%rd19724, [%rd147+13];
	bfi.b64 	%rd19725, %rd19724, %rd19723, 8, 8;
	ld.local.u8 	%rd19726, [%rd147+14];
	ld.local.u8 	%rd19727, [%rd147+15];
	bfi.b64 	%rd19728, %rd19727, %rd19726, 8, 8;
	bfi.b64 	%rd19729, %rd19728, %rd19725, 16, 16;
	bfi.b64 	%rd19730, %rd19729, %rd19722, 32, 32;
	st.local.u8 	[%rd148+8], %rd19718;
	shr.u64 	%rd19731, %rd19718, 8;
	st.local.u8 	[%rd148+9], %rd19731;
	shr.u64 	%rd19732, %rd19722, 24;
	st.local.u8 	[%rd148+11], %rd19732;
	shr.u64 	%rd19733, %rd19722, 16;
	st.local.u8 	[%rd148+10], %rd19733;
	shr.u64 	%rd19734, %rd19730, 56;
	st.local.u8 	[%rd148+15], %rd19734;
	shr.u64 	%rd19735, %rd19730, 48;
	st.local.u8 	[%rd148+14], %rd19735;
	shr.u64 	%rd19736, %rd19730, 40;
	st.local.u8 	[%rd148+13], %rd19736;
	shr.u64 	%rd19737, %rd19730, 32;
	st.local.u8 	[%rd148+12], %rd19737;
	@%p51 bra 	$L__BB2_63;

	ld.local.u8 	%rd19738, [%rd147+16];
	ld.local.u8 	%rd19739, [%rd147+17];
	bfi.b64 	%rd19740, %rd19739, %rd19738, 8, 8;
	ld.local.u8 	%rd19741, [%rd147+18];
	ld.local.u8 	%rd19742, [%rd147+19];
	bfi.b64 	%rd19743, %rd19742, %rd19741, 8, 8;
	bfi.b64 	%rd19744, %rd19743, %rd19740, 16, 16;
	ld.local.u8 	%rd19745, [%rd147+20];
	ld.local.u8 	%rd19746, [%rd147+21];
	bfi.b64 	%rd19747, %rd19746, %rd19745, 8, 8;
	ld.local.u8 	%rd19748, [%rd147+22];
	ld.local.u8 	%rd19749, [%rd147+23];
	bfi.b64 	%rd19750, %rd19749, %rd19748, 8, 8;
	bfi.b64 	%rd19751, %rd19750, %rd19747, 16, 16;
	bfi.b64 	%rd19752, %rd19751, %rd19744, 32, 32;
	st.local.u8 	[%rd148+16], %rd19740;
	shr.u64 	%rd19753, %rd19740, 8;
	st.local.u8 	[%rd148+17], %rd19753;
	shr.u64 	%rd19754, %rd19744, 24;
	st.local.u8 	[%rd148+19], %rd19754;
	shr.u64 	%rd19755, %rd19744, 16;
	st.local.u8 	[%rd148+18], %rd19755;
	shr.u64 	%rd19756, %rd19752, 56;
	st.local.u8 	[%rd148+23], %rd19756;
	shr.u64 	%rd19757, %rd19752, 48;
	st.local.u8 	[%rd148+22], %rd19757;
	shr.u64 	%rd19758, %rd19752, 40;
	st.local.u8 	[%rd148+21], %rd19758;
	shr.u64 	%rd19759, %rd19752, 32;
	st.local.u8 	[%rd148+20], %rd19759;

$L__BB2_63:
	st.local.u64 	[%rd2+392], %rd7995;
	mov.u64 	%rd19866, %rd7995;

$L__BB2_64:
	sub.s64 	%rd19760, %rd137, %rd19864;
	min.u64 	%rd150, %rd19866, %rd19760;
	shr.u64 	%rd151, %rd150, 3;
	setp.eq.s64 	%p52, %rd151, 0;
	@%p52 bra 	$L__BB2_72;

	add.s64 	%rd19761, %rd151, -1;
	setp.lt.u64 	%p53, %rd19761, 3;
	mov.u32 	%r14042, 0;
	@%p53 bra 	$L__BB2_68;

	bfe.u64 	%rd19763, %rd150, 3, 2;
	sub.s64 	%rd19867, %rd151, %rd19763;

$L__BB2_67:
	shr.u64 	%rd19764, %rd19866, 3;
	sub.s64 	%rd19765, %rd14, %rd19764;
	cvt.s64.s32 	%rd19766, %r14042;
	add.s64 	%rd19767, %rd19765, %rd19766;
	add.s64 	%rd19768, %rd2, %rd19767;
	ld.local.u8 	%rs48, [%rd19768+200];
	shr.u64 	%rd19769, %rd19864, 3;
	cvt.u32.u64 	%r14011, %rd19769;
	mov.u32 	%r14012, 31;
	sub.s32 	%r14013, %r14012, %r14011;
	sub.s32 	%r14014, %r14013, %r14042;
	cvt.s64.s32 	%rd19770, %r14014;
	add.u64 	%rd19772, %SPL, 64;
	add.s64 	%rd19773, %rd19772, %rd19770;
	st.local.u8 	[%rd19773], %rs48;
	ld.local.u8 	%rs49, [%rd19768+201];
	st.local.u8 	[%rd19773+-1], %rs49;
	ld.local.u8 	%rs50, [%rd19768+202];
	st.local.u8 	[%rd19773+-2], %rs50;
	ld.local.u8 	%rs51, [%rd19768+203];
	st.local.u8 	[%rd19773+-3], %rs51;
	add.s32 	%r14042, %r14042, 4;
	add.s64 	%rd19867, %rd19867, -4;
	setp.ne.s64 	%p54, %rd19867, 0;
	@%p54 bra 	$L__BB2_67;

$L__BB2_68:
	bfe.u64 	%rd19774, %rd150, 3, 2;
	setp.eq.s64 	%p55, %rd19774, 0;
	@%p55 bra 	$L__BB2_72;

	cvt.s64.s32 	%rd19775, %r14042;
	shr.u64 	%rd19776, %rd19866, 3;
	sub.s64 	%rd19777, %rd14, %rd19776;
	add.s64 	%rd19778, %rd19777, %rd19775;
	add.s64 	%rd19779, %rd2, %rd19778;
	add.s64 	%rd155, %rd19779, 200;
	ld.local.u8 	%rs52, [%rd19779+200];
	shr.u64 	%rd19780, %rd19864, 3;
	cvt.u32.u64 	%r14015, %rd19780;
	mov.u32 	%r14016, 31;
	sub.s32 	%r14017, %r14016, %r14015;
	sub.s32 	%r14018, %r14017, %r14042;
	cvt.s64.s32 	%rd19781, %r14018;
	add.u64 	%rd19783, %SPL, 64;
	add.s64 	%rd156, %rd19783, %rd19781;
	st.local.u8 	[%rd156], %rs52;
	setp.eq.s64 	%p56, %rd19774, 1;
	@%p56 bra 	$L__BB2_72;

	ld.local.u8 	%rs53, [%rd155+1];
	st.local.u8 	[%rd156+-1], %rs53;
	setp.eq.s64 	%p57, %rd19774, 2;
	@%p57 bra 	$L__BB2_72;

	ld.local.u8 	%rs54, [%rd155+2];
	st.local.u8 	[%rd156+-2], %rs54;

$L__BB2_72:
	sub.s64 	%rd19866, %rd19866, %rd150;
	st.local.u64 	[%rd2+392], %rd19866;
	add.s64 	%rd19864, %rd150, %rd19864;
	setp.lt.u64 	%p58, %rd19864, %rd137;
	@%p58 bra 	$L__BB2_54;

$L__BB2_73:
	ld.param.u64 	%rd19795, [kernel_lilypad_pow_debug_param_2];
	add.u64 	%rd19786, %SP, 64;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd19786;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd19795;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN39_INTERNAL_467e079b_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKyS1_, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r14019, [retval0+0];
	} // callseq 4
	cvt.u16.u32 	%rs55, %r14019;
	setp.eq.s16 	%p59, %rs55, 0;
	@%p59 bra 	$L__BB2_75;

	mov.u32 	%r14031, %tid.x;
	mov.u32 	%r14030, %ntid.x;
	mov.u32 	%r14029, %ctaid.x;
	mad.lo.s32 	%r14028, %r14029, %r14030, %r14031;
	cvt.u64.u32 	%rd19807, %r14028;
	add.s64 	%rd19806, %rd171, %rd19807;
	shr.u64 	%rd19805, %rd19806, 16;
	mov.u32 	%r14027, %ctaid.x;
	mov.u32 	%r14026, %tid.x;
	mov.u32 	%r14025, %ntid.x;
	mad.lo.s32 	%r14024, %r14027, %r14025, %r14026;
	cvt.u64.u32 	%rd19804, %r14024;
	add.s64 	%rd19803, %rd171, %rd19804;
	shr.u64 	%rd19802, %rd19803, 32;
	shr.u64 	%rd19801, %rd19803, 40;
	mov.u32 	%r14023, %ctaid.x;
	mov.u32 	%r14022, %tid.x;
	mov.u32 	%r14021, %ntid.x;
	mad.lo.s32 	%r14020, %r14023, %r14021, %r14022;
	cvt.u64.u32 	%rd19800, %r14020;
	add.s64 	%rd19799, %rd171, %rd19800;
	shr.u64 	%rd19798, %rd19799, 48;
	shr.u64 	%rd19797, %rd19799, 56;
	ld.param.u64 	%rd19796, [kernel_lilypad_pow_debug_param_4];
	cvta.to.global.u64 	%rd19787, %rd19796;
	st.global.u8 	[%rd19787], %rs1;
	st.global.u8 	[%rd19787+1], %rs2;
	st.global.u8 	[%rd19787+2], %rs3;
	st.global.u8 	[%rd19787+3], %rs4;
	st.global.u8 	[%rd19787+4], %rs5;
	st.global.u8 	[%rd19787+5], %rs6;
	st.global.u8 	[%rd19787+6], %rs7;
	st.global.u8 	[%rd19787+7], %rs8;
	st.global.u8 	[%rd19787+8], %rs9;
	st.global.u8 	[%rd19787+9], %rs10;
	st.global.u8 	[%rd19787+10], %rs11;
	st.global.u8 	[%rd19787+11], %rs12;
	st.global.u8 	[%rd19787+12], %rs13;
	st.global.u8 	[%rd19787+13], %rs14;
	st.global.u8 	[%rd19787+14], %rs15;
	st.global.u8 	[%rd19787+15], %rs16;
	st.global.u8 	[%rd19787+16], %rs17;
	st.global.u8 	[%rd19787+17], %rs18;
	st.global.u8 	[%rd19787+18], %rs19;
	st.global.u8 	[%rd19787+19], %rs20;
	st.global.u8 	[%rd19787+20], %rs21;
	st.global.u8 	[%rd19787+21], %rs22;
	st.global.u8 	[%rd19787+22], %rs23;
	st.global.u8 	[%rd19787+23], %rs24;
	st.global.u8 	[%rd19787+24], %rd19797;
	st.global.u8 	[%rd19787+25], %rd19798;
	st.global.u8 	[%rd19787+26], %rd19801;
	st.global.u8 	[%rd19787+27], %rd19802;
	shr.u64 	%rd19792, %rd19799, 24;
	st.global.u8 	[%rd19787+28], %rd19792;
	st.global.u8 	[%rd19787+29], %rd19805;
	shr.u64 	%rd19794, %rd19799, 8;
	st.global.u8 	[%rd19787+30], %rd19794;
	st.global.u8 	[%rd19787+31], %rd19799;

$L__BB2_75:
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd8;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 5

$L__BB2_76:
	ret;

}

